# 0 "c64dvd-glsl.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "c64dvd-glsl.c"
typedef signed char int8;
typedef unsigned char uint8;
typedef signed short int16;
typedef unsigned short uint16;
typedef signed int int32;
typedef unsigned int uint32;
typedef signed long long int64;
typedef unsigned long long uint64;
typedef struct { char *data; int64 len; int64 size; } FBSTRING;
typedef int8 boolean;
struct $16__FB_ARRAYDIMTB$ {
 int64 ELEMENTS;
 int64 LBOUND;
 int64 UBOUND;
};

extern int __$fb_structsizecheck[(sizeof( struct $16__FB_ARRAYDIMTB$ ) == 24) ? 1 : -1];
struct $8FBARRAY1IiE {
 int32* DATA;
 int32* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IiE ) == 72) ? 1 : -1];
typedef uint32 (*tmp$147)( uint32 );
typedef void (*tmp$76)( uint32 );
typedef void (*tmp$156)( uint32, int32, uint8**, int32* );
typedef void (*tmp$137)( uint32, uint32, int32* );
typedef void (*tmp$151)( uint32, int32, int32*, uint8* );
typedef uint32 (*tmp$146)( void );
typedef void (*tmp$136)( uint32, uint32 );
typedef int32 (*tmp$150)( uint32, uint8* );
typedef void (*tmp$130)( int32, int32 );
typedef void (*tmp$157)( int32, float );
typedef void (*tmp$159)( int32, float, float, float );
typedef void (*tmp$163)( int32, int32, float* );
typedef void (*tmp$160)( int32, float, float, float, float );
struct $9SHADERTOY {
 uint32 FRAGMENTSHADER;
 uint32 PROGRAMOBJECT;
 FBSTRING SHADERLOG;
};
extern int __$fb_structsizecheck[(sizeof( struct $9SHADERTOY ) == 32) ? 1 : -1];
struct $7VECTOR2 {
 union {
  double X;
  double U;
  double S;
 };
 union {
  double Y;
  double V;
  double T;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR2 ) == 16) ? 1 : -1];
struct $7VECTOR3 {
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR3 ) == 24) ? 1 : -1];
struct $7VECTOR4 {
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
 union {
  double W;
  double A;
  double Q;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR4 ) == 32) ? 1 : -1];
struct $5PLANE {
 struct $7VECTOR3 N;
 double D;
};
extern int __$fb_structsizecheck[(sizeof( struct $5PLANE ) == 32) ? 1 : -1];
typedef int64 $10EPLANESIDE;
struct $4MAT2 {
 double M00;
 double M10;
 double M01;
 double M11;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT2 ) == 32) ? 1 : -1];
struct $4MAT3 {
 double M00;
 double M10;
 double M20;
 double M01;
 double M11;
 double M21;
 double M02;
 double M12;
 double M22;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT3 ) == 72) ? 1 : -1];
struct $4MAT4 {
 double M00;
 double M10;
 double M20;
 double M30;
 double M01;
 double M11;
 double M21;
 double M31;
 double M02;
 double M12;
 double M22;
 double M32;
 double M03;
 double M13;
 double M23;
 double M33;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT4 ) == 128) ? 1 : -1];
struct $6VECTOR {
 union {
  double X;
  double R;
 };
 union {
  double Y;
  double G;
 };
 union {
  double Z;
  double B;
 };
 union {
  double W;
  double A;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6VECTOR ) == 32) ? 1 : -1];
struct $8MATERIAL {
 int64 ID;
 struct $6VECTOR COLOR;
 double ROUGH_REFLECTION;
 double MIRROR_REFLECTION;
 double CONCENTRIC_REFLECTION;
 double PORTION_OF_MATERIAL;
 double PORTION_OF_MIRROR;
 double TRANSPARENCY;
 double REFRACTIVE_INDEX;
 boolean BUILDSHADOW;
 boolean RECEIVESHADOW;
 boolean MIXCOLORS;
 boolean NEEDCOORDS;
 int64 COLORMAPID;
 struct $6VECTOR COLORMAPFACTOR;
 int64 BUMPMAPID;
 struct $6VECTOR BUMPMAPFACTOR;
 int64 STAMPMAPID;
 struct $6VECTOR STAMPMAPFACTOR;
 int64 TRANSMAPID;
 struct $6VECTOR TRANSMAPFACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MATERIAL ) == 264) ? 1 : -1];
typedef int64 $14OBJECT3D_TYPES;
struct $9RECTANGLE {
 struct $6VECTOR LEFTTOP;
 struct $6VECTOR RIGHTBOTTOM;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RECTANGLE ) == 64) ? 1 : -1];
struct $4POLY {
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 struct $6VECTOR NORMALE;
 struct $6VECTOR CROSS;
 double DOTV0VP;
};
extern int __$fb_structsizecheck[(sizeof( struct $4POLY ) == 160) ? 1 : -1];
struct $8OBJECT3D {
 $14OBJECT3D_TYPES TYPE;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 struct $6VECTOR POSITION;
 int64 MATERIALID;
 double RADIUS;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 int64 NPOLYS;
 struct $4POLY** POLYS;
};
extern int __$fb_structsizecheck[(sizeof( struct $8OBJECT3D ) == 160) ? 1 : -1];
typedef int64 $11LIGHT_TYPES;
struct $5LIGHT {
 $11LIGHT_TYPES TYPE;
 int64 ID;
 struct $6VECTOR POSITION;
 struct $6VECTOR DIRECTION;
 struct $6VECTOR NORMALE;
 struct $6VECTOR RNORMALE;
 struct $6VECTOR COLOR;
 double MAXWIDTH;
 double SPOTANGLE;
 boolean BUILDSHADOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $5LIGHT ) == 200) ? 1 : -1];
typedef int64 $11MAP2D_TYPES;
struct $9BMPHEADER {
 uint16 FILEID __attribute__((packed, aligned(1)));
 int32 FILESIZE __attribute__((packed, aligned(1)));
 uint16 RES1 __attribute__((packed, aligned(1)));
 uint16 RES2 __attribute__((packed, aligned(1)));
 int32 OFFSET __attribute__((packed, aligned(1)));
 int32 HEADERSIZE __attribute__((packed, aligned(1)));
 int32 W __attribute__((packed, aligned(1)));
 int32 H __attribute__((packed, aligned(1)));
 int16 PLANES __attribute__((packed, aligned(1)));
 int16 BITCOUNT __attribute__((packed, aligned(1)));
 int32 COMPRESSION __attribute__((packed, aligned(1)));
 int32 IMAGESIZE __attribute__((packed, aligned(1)));
 int32 PELSPERX __attribute__((packed, aligned(1)));
 int32 PELSPERY __attribute__((packed, aligned(1)));
 int32 COLORSINUSE __attribute__((packed, aligned(1)));
 int32 COLORSINPORTANT __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $9BMPHEADER ) == 54) ? 1 : -1];
struct $5MAP2D {
 int64 MAPID;
 $11MAP2D_TYPES TYPE;
 struct $9BMPHEADER HEADER __attribute__((aligned(4)));
 uint8* PCOLORPIXELS;
 struct $6VECTOR FACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $5MAP2D ) == 112) ? 1 : -1];
struct $7AAPIXEL {
 int64 V;
 int64 X;
 int64 Y;
};
extern int __$fb_structsizecheck[(sizeof( struct $7AAPIXEL ) == 24) ? 1 : -1];
struct $9RAYTRACER {
 int64 SCREENWIDTH;
 int64 SCREENHEIGHT;
 int64 XCENTER;
 int64 YCENTER;
 double SCALE;
 double SCALEINV;
 struct $6VECTOR AMBIENT;
 double PORTION_OF_AMBIENT;
 struct $6VECTOR BACKGROUND;
 double PORTION_OF_BACKGROUND;
 int64 MAXRAYDEPTH;
 int64 RAYDEPTH;
 struct $6VECTOR SRC;
 struct $6VECTOR DES;
 struct $6VECTOR HITPOINT;
 int64 NMATERIALS;
 struct $8MATERIAL** MATERIALS;
 int64 NOBJECTS;
 struct $8OBJECT3D** OBJECTS;
 int64 NLIGHTS;
 struct $5LIGHT** LIGHTS;
 int64 NMAPS;
 struct $5MAP2D** MAPS;
 int64 NAAPIXELS;
 struct $7AAPIXEL** AAPIXELS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RAYTRACER ) == 320) ? 1 : -1];
struct $8PALENTRY {
 uint8 R;
 uint8 G;
 uint8 B;
 uint8 FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8PALENTRY ) == 4) ? 1 : -1];
struct $7FBARRAYIvE {
 void* DATA;
 void* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIvE ) == 240) ? 1 : -1];
typedef int64 $13BUMP_METHODES;
typedef int64 $6AATYPE;
struct $12SYSTEM_BUS_T {
 double KERNAL[16384];
 double BASIC[16384];
 double CHAR[2073601];
 double COL[1024];
 double SINTABLE[360];
 double COSTABLE[360];
 struct $9RAYTRACER RAYTRACER;
 uint8 RESULT[2048];
 uint8 RESULT2[2048];
};
extern int __$fb_structsizecheck[(sizeof( struct $12SYSTEM_BUS_T ) == 16869320) ? 1 : -1];
struct $5FLAGS {
 uint8 __fb_struct_body[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $5FLAGS ) == 1) ? 1 : -1];
struct $9_FLOAT128 {
 int64 LOWPART;
 int64 HIGHPART;
};
extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT128 ) == 16) ? 1 : -1];
struct $5MULTI {
 union {
  void* ADR0;
  void* ADR1;
  struct {
   union {
    struct $9_FLOAT128 UFPU128;
    struct $9_FLOAT128 SFPU128;
    struct {
     union {
      double UFPU64;
      double SFPU64;
      struct {
       union {
        uint64 U64;
        int64 S64;
        struct {
         union {
          float UFPU32;
          float SFPU32;
          struct {
           union {
            uint32 U32;
            int32 S32;
            struct {
             union {
              uint16 U16;
              int16 S16;
              struct {
               union {
                uint8 ULO;
                int8 SLO;
               };
               union {
                uint8 UHI;
                int8 SHI;
               };
              };
             };
            };
           };
          };
         };
        };
       };
      };
     };
    };
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $5MULTI ) == 16) ? 1 : -1];
struct $7CPU6510;
typedef void (*tmp$1736)( struct $7CPU6510* );
struct $6OPCODE {
 uint64 CODE;
 uint8 NAM[4];
 uint64 ADRMODE;
 uint64 BYTES;
 uint64 TICKS;
 struct $5MULTI OP;
 tmp$1736 DECODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $6OPCODE ) == 64) ? 1 : -1];
struct $7CPU6510 {
 union {
  uint8 P;
  struct $5FLAGS F;
 };
 union {
  uint8 A;
  int8 SA;
 };
 union {
  uint8 X;
  int8 SX;
 };
 union {
  uint8 Y;
  int8 SY;
 };
 union {
  uint16 PC;
  struct {
   uint8 PL;
   uint8 PH;
  };
 };
 union {
  uint16 SP;
  struct {
   uint8 S;
   uint8 MSB;
  };
 };
 struct $12SYSTEM_BUS_T* MEM;
 struct $6OPCODE CODE;
 struct $6OPCODE OPCODES[256];
 FBSTRING STRADRMODES[13];
};
extern int __$fb_structsizecheck[(sizeof( struct $7CPU6510 ) == 16776) ? 1 : -1];
struct $5C64_T {
 struct $12SYSTEM_BUS_T* MEM;
 struct $7CPU6510* CPU_MOS6510;
};
extern int __$fb_structsizecheck[(sizeof( struct $5C64_T ) == 16) ? 1 : -1];
struct $23MEM64_DYNAMIC_LINK_TYPE;
struct $23MEM64_DYNAMIC_LINK_TYPE {
 double* OFFSET;
 double* TOP;
 uint64 SIZE;
 uint64 I;
 struct $23MEM64_DYNAMIC_LINK_TYPE* NEXT_PTR;
};
extern int __$fb_structsizecheck[(sizeof( struct $23MEM64_DYNAMIC_LINK_TYPE ) == 40) ? 1 : -1];
struct $9QBS_FIELD {
 int64 FILENO;
 int64 FILEID;
 int64 SIZE;
 int64 OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $9QBS_FIELD ) == 32) ? 1 : -1];
struct $3QBS {
 uint8* STR_DATA;
 int64 STR_LEN;
 uint8 IN_MEM64;
 uint16* MEM64_DESCRIPTOR;
 uint16 MEM64_DESCRIPTOR_OFFSET;
 uint64 LISTI;
 uint8 TMP;
 uint64 TMPLISTI;
 uint8 FIXED;
 uint8 READONLY;
 struct $9QBS_FIELD* FIELD_DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $3QBS ) == 80) ? 1 : -1];
struct $4VEC3 {
 float X;
 float Y;
 float Z;
};
extern int __$fb_structsizecheck[(sizeof( struct $4VEC3 ) == 12) ? 1 : -1];
struct $10THREADSCAN {
 double YSCAN;
 double XEND;
 double YEND;
 void* THREAD_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $10THREADSCAN ) == 32) ? 1 : -1];
struct $21MULTIBOOT_MODULE_INFO {
 uint64 MOD_START __attribute__((packed, aligned(1)));
 uint64 MOD_END __attribute__((packed, aligned(1)));
 uint64 MOD_STRING __attribute__((packed, aligned(1)));
 uint64 RESERVED __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $21MULTIBOOT_MODULE_INFO ) == 32) ? 1 : -1];
struct $14MULTIBOOT_INFO {
 uint64 FLAGS __attribute__((packed, aligned(1)));
 uint64 MEM_LOWER __attribute__((packed, aligned(1)));
 uint64 MEM_UPPER __attribute__((packed, aligned(1)));
 uint64 BOOT_DEVICE __attribute__((packed, aligned(1)));
 int8* CMDLINE __attribute__((packed, aligned(1)));
 uint64 MODS_COUNT __attribute__((packed, aligned(1)));
 struct $21MULTIBOOT_MODULE_INFO* MODS_ADDR __attribute__((packed, aligned(1)));
 uint64 SYMS[5] __attribute__((packed, aligned(1)));
 uint64 MMAP_LENGTH __attribute__((packed, aligned(1)));
 uint64 MMAP_ADDR __attribute__((packed, aligned(1)));
 uint64 DRIVES_LENGTH __attribute__((packed, aligned(1)));
 uint64 DRIVES_ADDR __attribute__((packed, aligned(1)));
 uint64 CONFIG_TABLE __attribute__((packed, aligned(1)));
 int8* BOOT_LOADER_NAME __attribute__((packed, aligned(1)));
 uint64 APM_TABLE __attribute__((packed, aligned(1)));
 uint64 VBE_CONTROL_INFO __attribute__((packed, aligned(1)));
 uint64 VBE_MODE_INFO __attribute__((packed, aligned(1)));
 uint16 VBE_MODE __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_SEG __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_OFF __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_LEN __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14MULTIBOOT_INFO ) == 176) ? 1 : -1];
struct $4LIST {
 int64 USER_STRUCTURE_SIZE;
 int64 INTERNAL_STRUCTURE_SIZE;
 uint8* STRUCTURE;
 int64 STRUCTURES;
 int64 STRUCTURES_LAST;
 int64* STRUCTURE_FREED;
 int64* STRUCTURE_FREED_CLEANUP;
 int64 STRUCTURES_FREED;
 int64 STRUCTURES_FREED_LAST;
 int64 STRUCTURE_BASE[65];
 int64 STRUCTURE_BASES;
 int64* INDEX;
 int64* INDEX_CLEANUP;
 int64 INDEXES;
 int64 INDEXES_LAST;
};
extern int __$fb_structsizecheck[(sizeof( struct $4LIST ) == 632) ? 1 : -1];
struct $10CPU_STRUCT {
 union {
  struct {
   union {
    uint8 AL;
    int8 AL_SIGNED;
   };
   union {
    uint8 AH;
    int8 AH_SIGNED;
   };
  };
  uint16 AX;
  int16 AX_SIGNED;
  uint64 EAX;
  int64 EAX_SIGNED;
  uint64 RAX;
  int64 RAX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 BL;
    int8 BL_SIGNED;
   };
   union {
    uint8 BH;
    int8 BH_SIGNED;
   };
  };
  uint16 BX;
  int16 BX_SIGNED;
  uint64 EBX;
  int64 EBX_SIGNED;
  uint64 RBX;
  int64 RBX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 CL;
    int8 CL_SIGNED;
   };
   union {
    uint8 CH;
    int8 CH_SIGNED;
   };
  };
  uint16 CX;
  int16 CX_SIGNED;
  uint64 ECX;
  int64 ECX_SIGNED;
  uint64 RCX;
  int64 RCX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 DL;
    int8 DL_SIGNED;
   };
   union {
    uint8 DH;
    int8 DH_SIGNED;
   };
  };
  uint16 DX;
  int16 DX_SIGNED;
  uint64 EDX;
  int64 EDX_SIGNED;
  uint64 RDX;
  int64 RDX_SIGNED;
 };
 union {
  uint16 SI;
  int16 SI_SIGNED;
  uint64 ESI;
  int64 ESI_SIGNED;
  uint64 RSI;
  int64 RSI_SIGNED;
 };
 union {
  uint16 DI;
  int16 DI_SIGNED;
  uint64 EDI;
  int64 EDI_SIGNED;
  uint64 RDI;
  int64 RDI_SIGNED;
 };
 union {
  uint16 BP;
  int16 BP_SIGNED;
  uint64 EBP;
  int64 EBP_SIGNED;
  uint64 RBP;
  int64 RBP_SIGNED;
 };
 union {
  uint16 SP;
  int16 SP_SIGNED;
  uint64 ESP;
  int64 ESP_SIGNED;
 };
 union {
  uint16 CS;
  uint16 CS_SIGNED;
 };
 union {
  uint16 SS;
  uint16 SS_SIGNED;
 };
 union {
  uint16 DS;
  uint16 DS_SIGNED;
 };
 union {
  uint16 ES;
  uint16 ES_SIGNED;
 };
 union {
  uint16 FS;
  uint16 FS_SIGNED;
 };
 union {
  uint16 GS;
  uint16 GS_SIGNED;
 };
 union {
  uint16 IP;
  uint16 IP_SIGNED;
  uint16 EIP;
  uint16 EIP_SIGNED;
  uint16 RIP;
  uint16 RIP_SIGNED;
 };
 uint8 OVERFLOW_FLAG;
 uint8 DIRECTION_FLAG;
 uint8 INTERRUPT_FLAG;
 uint8 TRAP_FLAG;
 uint8 SIGN_FLAG;
 uint8 ZERO_FLAG;
 uint8 AUXILIARY_FLAG;
 uint8 PARITY_FLAG;
 uint8 CARRY_FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $10CPU_STRUCT ) == 88) ? 1 : -1];



int32 fb_ArrayRedimEx( struct $7FBARRAYIvE*, uint64, int32, int32, uint64, ... );
void fb_ArrayDestructStr( struct $7FBARRAYIvE* );
int32 fb_ArrayErase( struct $7FBARRAYIvE* );
int32 fb_Locate( int32, int32, int32, int32, int32 );
void fb_Cls( int32 );
FBSTRING* fb_Inkey( void );
int32 fb_PageCopy( int32, int32 );
void fb_DataRestore( void* );
void fb_DataReadStr( void*, int64, int32 );
void fb_DataReadLongint( int64* );
void fb_DataReadULongint( uint64* );
void* fb_ErrorThrowEx( int32, int32, uint8*, void*, void* );
int32 fb_FileOpen( FBSTRING*, uint32, uint32, uint32, int32, int32 );
int32 fb_FileClose( int32 );
int32 fb_FilePutLarge( int32, int64, void*, uint64 );
int32 fb_FileGetLarge( int32, int64, void*, uint64 );
int32 fb_FileGetArrayLarge( int32, int64, struct $7FBARRAYIvE* );
int32 fb_FileSeek( int32, int32 );
int32 fb_FileLineInput( int32, void*, int64, int32 );
int32 fb_LineInput( FBSTRING*, void*, int64, int32, int32, int32 );
int32 fb_FileInput( int32 );
int32 fb_ConsoleInput( FBSTRING*, int32, int32 );
int32 fb_InputString( void*, int64, int32 );
int32 fb_FileFree( void );
int32 fb_FileEof( int32 );
int64 fb_FileSize( int32 );
void fb_GfxPset( void*, float, float, uint32, int32, int32 );
uint32 fb_GfxPoint( void*, float, float );
void fb_GfxLine( void*, float, float, float, float, uint32, int32, uint32, int32 );
void fb_GfxEllipse( void*, float, float, float, uint32, float, float, float, int32, int32 );
void fb_GfxPaint( void*, float, float, uint32, uint32, FBSTRING*, int32, int32 );
void fb_GfxDraw( void*, FBSTRING* );
int64 fb_GfxDrawString( void*, float, float, int32, FBSTRING*, uint32, void*, int32, void*, void*, void* );
void fb_GfxPalette( int32, int32, int32, int32 );
int32 fb_GfxPut( void*, float, float, void*, int32, int32, int32, int32, int32, int32, void*, int32, void*, void* );
int32 fb_GfxScreen( int32, int32, int32, int32, int32 );
int32 fb_GfxScreenRes( int32, int32, int32, int32, int32, int32 );
int32 fb_GfxBload( FBSTRING*, void*, void* );
int32 fb_GfxFlip( int32, int32 );
int32 fb_GfxWaitVSync( void );
void fb_GfxLock( void );
void fb_GfxUnlock( int32, int32 );
void* fb_GfxScreenPtr( void );
void fb_GfxSetWindowTitle( FBSTRING* );
int32 fb_GetMouse64( int64*, int64*, int64*, int64*, int64* );
void fb_GfxScreenInfo64( int64*, int64*, int64*, int64*, int64*, int64*, FBSTRING* );
int32 fb_GfxScreenList( int32 );
void* fb_GfxImageCreate( int32, int32, uint32, int32, int32 );
void fb_GfxImageDestroy( void* );
int32 fb_GfxImageInfo64( void*, int64*, int64*, int64*, int64*, void**, int64* );
void fb_GfxControl_i64( int32, int64*, int64*, int64*, int64* );
void* fb_GfxGetGLProcAddress( uint8* );
void fb_hPutPSet( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
void fb_hPutAlpha( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
double pow( double, double );
double fb_Rnd( float );
uint64 fb_GetMemAvail( int32 );
void* malloc( uint64 );
void* calloc( uint64, uint64 );
void* realloc( void*, uint64 );
void free( void* );
void fb_PrintVoid( int32, int32 );
void fb_PrintULongint( int32, uint64, int32 );
void fb_PrintString( int32, FBSTRING*, int32 );
FBSTRING* fb_StrInit( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAssign( void*, int64, void*, int64, int32 );
void fb_StrDelete( FBSTRING* );
FBSTRING* fb_StrConcat( FBSTRING*, void*, int64, void*, int64 );
int32 fb_StrCompare( void*, int64, void*, int64 );
FBSTRING* fb_StrConcatAssign( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAllocTempResult( FBSTRING* );
FBSTRING* fb_StrAllocTempDescZEx( uint8*, int64 );
FBSTRING* fb_UIntToStr( uint32 );
FBSTRING* fb_LongintToStr( int64 );
FBSTRING* fb_ULongintToStr( uint64 );
FBSTRING* fb_DoubleToStr( double );
FBSTRING* fb_StrMid( FBSTRING*, int64, int64 );
int64 fb_StrLen( void*, int64 );
uint32 fb_ASC( FBSTRING*, int64 );
FBSTRING* fb_CHR( int32, ... );
double fb_VAL( FBSTRING* );
FBSTRING* fb_HEX_l( uint64 );
FBSTRING* fb_HEXEx_b( uint8, int32 );
FBSTRING* fb_HEXEx_s( uint16, int32 );
FBSTRING* fb_SPACE( int64 );
FBSTRING* fb_StrLcase2( FBSTRING*, int32 );
void fb_Init( int32, uint8**, int32 );
void fb_End( int32 );
double fb_Timer( void );
int32 fb_Shell( FBSTRING* );
int32 fb_Chain( FBSTRING* );
void fb_Sleep( int32 );
int32 fb_SleepEx( int32, int32 );
void fb_Beep( void );
void* memset( void*, int32, uint64 );
double fabs( double );
float sinf( float );
float cosf( float );
float tanf( float );
float asinf( float );
float acosf( float );
float atan2f( float, float );
float expf( float );
float logf( float );
float log2f( float );
float powf( float, float );
float sqrtf( float );
float ceilf( float );
float floorf( float );
void* calloc( uint64, uint64 );
void* malloc( uint64 );
void* realloc( void*, uint64 );
void free( void* );
void glRectf( float, float, float, float );
void glTexParameteri( uint32, uint32, int32 );
void glTexImage2D( uint32, int32, int32, int32, int32, int32, uint32, uint32, void* );
void glGenTextures( int32, uint32* );
void glBindTexture( uint32, uint32 );
void glActiveTexture( uint32 );
void ERROREXIT( FBSTRING* );
void GLSCREEN( int64, int64, int64, int64, boolean );
void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* );
boolean _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
boolean _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* );
static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY*, struct $9SHADERTOY* );
void _ZN7VECTOR2C1Ev( struct $7VECTOR2* );
void _ZN7VECTOR2C1Edd( struct $7VECTOR2*, double, double );
void _ZN7VECTOR2C1ERS_( struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR2aSEd( struct $7VECTOR2*, double );
void _ZN7VECTOR2aSERS_( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2*, double*, struct $7VECTOR2* );
struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR3C1Ev( struct $7VECTOR3* );
void _ZN7VECTOR3C1Ed( struct $7VECTOR3*, double );
void _ZN7VECTOR3C1Eddd( struct $7VECTOR3*, double, double, double );
void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3*, struct $7VECTOR2*, double );
void _ZN7VECTOR3C1ERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3aSERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3pLERS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR4C1Ev( struct $7VECTOR4* );
void _ZN7VECTOR4C1Edddd( struct $7VECTOR4*, double, double, double, double );
void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4*, struct $7VECTOR2*, double, double );
void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4*, struct $7VECTOR3*, double );
void _ZN7VECTOR4C1ERS_( struct $7VECTOR4*, struct $7VECTOR4* );
void _ZN7VECTOR4aSERS_( struct $7VECTOR4*, struct $7VECTOR4* );
uint32 _ZN7VECTOR4cvjEv( struct $7VECTOR4* );
struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4*, struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4*, double, struct $7VECTOR4* );
static void _ZN5PLANEaSERKS_( struct $5PLANE*, struct $5PLANE* );
struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
double _Z4ATANdd( double, double );
double _Z3POWdd( double, double );
struct $7VECTOR3* _Z3POWR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
double EXP2F( double );
double _Z3EXPd( double );
double _Z3LOGd( double );
double _Z4SQRTd( double );
struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
double _Z4SIGNd( double );
double _Z5FLOORd( double );
int64 _Z6MODULOll( int64, int64 );
double _Z6MODULOdd( double, double );
struct $7VECTOR3* _Z6MODULOR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
double _Z3MINdd( double, double );
struct $7VECTOR2* _Z3MINR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
double _Z3MAXdd( double, double );
struct $7VECTOR2* _Z3MAXR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR3* _Z3MAXR7VECTOR3Rd( struct $7VECTOR3*, struct $7VECTOR3*, double* );
double PASCALTRIANGLE( double, double );
double _Z5CLAMPddd( double, double, double );
struct $7VECTOR3* _Z5CLAMPR7VECTOR3dd( struct $7VECTOR3*, struct $7VECTOR3*, double, double );
double _Z3MIXddd( double, double, double );
struct $7VECTOR3* _Z3MIXR7VECTOR3S0_d( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _Z10SMOOTHSTEPddd( double, double, double );
double _Z6LENGTHRK7VECTOR2( struct $7VECTOR2* );
double _Z6LENGTHRK7VECTOR3( struct $7VECTOR3* );
double _Z3DOTR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2* );
double _Z3DOTR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* CROSS( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Z9NORMALIZER7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Z7REFLECTR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT2C1Ed( struct $4MAT2*, double );
void _ZN4MAT2C1Edddd( struct $4MAT2*, double, double, double, double );
void _ZN4MAT3C1Ed( struct $4MAT3*, double );
void _ZN4MAT3C1Eddddddddd( struct $4MAT3*, double, double, double, double, double, double, double, double, double );
void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT313SETZROTATIONREd( struct $4MAT3*, double );
void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3*, struct $7VECTOR3*, double );
void _ZN4MAT310SETSCALINGEdd( struct $4MAT3*, double, double );
struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3*, struct $4MAT3*, struct $7VECTOR3* );
void _ZN4MAT4C1Ed( struct $4MAT4*, double );
void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double );
void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4*, double, double, double, double, double, double );
void _ZN6VECTORC1Ev( struct $6VECTOR* );
void _ZN6VECTORC1Ej( struct $6VECTOR*, uint32 );
void _ZN6VECTORC1ERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORC1Edddd( struct $6VECTOR*, double, double, double, double );
void _ZN6VECTORpLERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmIERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmLEd( struct $6VECTOR*, double );
uint32 _ZN6VECTORcvjEv( struct $6VECTOR* );
double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* );
void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* );
struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR*, struct $6VECTOR*, double );
struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR*, double, struct $6VECTOR* );
double _ZmlR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* );
static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE*, struct $9RECTANGLE* );
static void _ZN5MAP2DaSERKS_( struct $5MAP2D*, struct $5MAP2D* );
static void _ZN8MATERIALaSERKS_( struct $8MATERIAL*, struct $8MATERIAL* );
static void _ZN5LIGHTaSERKS_( struct $5LIGHT*, struct $5LIGHT* );
static void _ZN4POLYaSERKS_( struct $4POLY*, struct $4POLY* );
static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D*, struct $8OBJECT3D* );
void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* );
void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* );
int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( struct $9RAYTRACER*, double, double, double, double, double, double, double, double, double, double, boolean, boolean, boolean, int64, int64, int64, int64 );
void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER*, int64, int64, int64, int64 );
void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* );
void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* );
struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER*, double, double, double );
struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER*, struct $6VECTOR**, int64, int64, int64, int64 );
void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER*, double*, double, double );
void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER*, int64, int64, int64 );
boolean _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER*, int64, int64, double, double );
boolean _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER*, int64, int64 );
uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR* );
double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( struct $9RAYTRACER*, int64, int64, int64, $13BUMP_METHODES, boolean );
boolean _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER*, int64 );
void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER*, int64 );
boolean _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64*, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER*, int64, int64 );
static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER*, struct $9RAYTRACER* );
void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* );
int8 _ZN12SYSTEM_BUS_T8READBYTEEd( struct $12SYSTEM_BUS_T*, double );
uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T*, double );
uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T9WRITEBYTEEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T*, FBSTRING*, double );
double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double, double, double );
double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T*, double );
uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( struct $12SYSTEM_BUS_T*, float, boolean );
void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T*, void*, int32 );
double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T*, double, double, double, double, double );
void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR4*, struct $7VECTOR2* );
void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* );
int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T*, double );
int64 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T*, double );
int64 _ZN12SYSTEM_BUS_T8FUNC_INPEl( struct $12SYSTEM_BUS_T*, int64 );
static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510D1Ev( struct $7CPU6510* );
double _ZN7CPU65104TICKEd( struct $7CPU6510*, double );
double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* );
void _ZN7CPU65104PUSHEd( struct $7CPU6510*, double );
double _ZN7CPU65104PULLEv( struct $7CPU6510* );
static void _ZN7CPU6510aSERKS_( struct $7CPU6510*, struct $7CPU6510* );
void _ZN5C64_TC1Ev( struct $5C64_T* );
void _ZN5C64_TD1Ev( struct $5C64_T* );
void INS_UNK( struct $7CPU6510* );
void INS_ADC( struct $7CPU6510* );
void INS_AND( struct $7CPU6510* );
void INS_ASL( struct $7CPU6510* );
void INS_ASLA( struct $7CPU6510* );
void INS_BCC( struct $7CPU6510* );
void INS_BCS( struct $7CPU6510* );
void INS_BEQ( struct $7CPU6510* );
void INS_BIT( struct $7CPU6510* );
void INS_BMI( struct $7CPU6510* );
void INS_BNE( struct $7CPU6510* );
void INS_BPL( struct $7CPU6510* );
void INS_BRK( struct $7CPU6510* );
void INS_BVC( struct $7CPU6510* );
void INS_BVS( struct $7CPU6510* );
void INS_CLC( struct $7CPU6510* );
void INS_CLD( struct $7CPU6510* );
void INS_CLI( struct $7CPU6510* );
void INS_CLV( struct $7CPU6510* );
void INS_CMP( struct $7CPU6510* );
void INS_CPX( struct $7CPU6510* );
void INS_CPY( struct $7CPU6510* );
void INS_DEC( struct $7CPU6510* );
void INS_DEX( struct $7CPU6510* );
void INS_DEY( struct $7CPU6510* );
void INS_EOR( struct $7CPU6510* );
void INS_INC( struct $7CPU6510* );
void INS_INX( struct $7CPU6510* );
void INS_INY( struct $7CPU6510* );
void INS_JMP( struct $7CPU6510* );
void INS_JSR( struct $7CPU6510* );
void INS_LDA( struct $7CPU6510* );
void INS_LDX( struct $7CPU6510* );
void INS_LDY( struct $7CPU6510* );
void INS_LSR( struct $7CPU6510* );
void INS_LSRA( struct $7CPU6510* );
void INS_NOP( struct $7CPU6510* );
void INS_ORA( struct $7CPU6510* );
void INS_PHA( struct $7CPU6510* );
void INS_PHP( struct $7CPU6510* );
void INS_PLA( struct $7CPU6510* );
void INS_PLP( struct $7CPU6510* );
void INS_ROL( struct $7CPU6510* );
void INS_ROLA( struct $7CPU6510* );
void INS_ROR( struct $7CPU6510* );
void INS_RORA( struct $7CPU6510* );
void INS_RTI( struct $7CPU6510* );
void INS_RTS( struct $7CPU6510* );
void INS_SBC( struct $7CPU6510* );
void INS_SEC( struct $7CPU6510* );
void INS_SED( struct $7CPU6510* );
void INS_SEI( struct $7CPU6510* );
void INS_STA( struct $7CPU6510* );
void INS_STX( struct $7CPU6510* );
void INS_STY( struct $7CPU6510* );
void INS_TAX( struct $7CPU6510* );
void INS_TAY( struct $7CPU6510* );
void INS_TSX( struct $7CPU6510* );
void INS_TXA( struct $7CPU6510* );
void INS_TXS( struct $7CPU6510* );
void INS_TYA( struct $7CPU6510* );
void INS_R32( struct $7CPU6510* );
void INS_W32( struct $7CPU6510* );
void INS_R64( struct $7CPU6510* );
void INS_W64( struct $7CPU6510* );
int64 INTERRUPTSERVICE( struct $7CPU6510* );
void KMAIN( struct $14MULTIBOOT_INFO* );
static void _GLOBAL__I( void ) __attribute__(( constructor ));
static void _GLOBAL__D( void ) __attribute__(( destructor ));
static struct $14MULTIBOOT_INFO* MB_INFO$;
static uint16 INDEX$ = (uint16)34u;
static uint16 RVS$ = (uint16)199u;
static uint16 FCOLOR$ = (uint16)646u;
static uint16 HIBASE$ = (uint16)648u;
static uint16 SP0X$ = (uint16)53248u;
static uint16 SP0Y$ = (uint16)53249u;
static uint16 SP1X$ = (uint16)53250u;
static uint16 SP1Y$ = (uint16)53251u;
static uint16 SP2X$ = (uint16)53252u;
static uint16 SP2Y$ = (uint16)53253u;
static uint16 SP3X$ = (uint16)53254u;
static uint16 SP3Y$ = (uint16)53255u;
static uint16 SP4X$ = (uint16)53256u;
static uint16 SP4Y$ = (uint16)53257u;
static uint16 SP5X$ = (uint16)53258u;
static uint16 SP5Y$ = (uint16)53259u;
static uint16 SP6X$ = (uint16)53260u;
static uint16 SP6Y$ = (uint16)53261u;
static uint16 SP7X$ = (uint16)53262u;
static uint16 SP7Y$ = (uint16)53263u;
static uint16 VMCSB$ = (uint16)53272u;
static uint16 EXTCOL$ = (uint16)53280u;
static uint16 BGCOL0$ = (uint16)53281u;
static uint16 BGCOL1$ = (uint16)53282u;
static uint16 BGCOL2$ = (uint16)53283u;
static uint16 BGCOL3$ = (uint16)53284u;
static uint16 SP0COL$ = (uint16)53287u;
static uint16 SP1COL$ = (uint16)53288u;
static uint16 SP2COL$ = (uint16)53289u;
static uint16 SP3COL$ = (uint16)53290u;
static uint16 SP4COL$ = (uint16)53291u;
static uint16 SP5COL$ = (uint16)53309u;
static uint16 SP6COL$ = (uint16)53310u;
static uint16 SP7COL$ = (uint16)53311u;
static double MEM64$[16777216];
static int64 SLEEP_BREAK$;
static uint64 MEM_LOCK_ID$;
struct $8MEM_LOCK {
 uint64 ID;
 int64 TYPE_DATA;
 void* OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MEM_LOCK ) == 24) ? 1 : -1];
static struct $8MEM_LOCK* MEM_LOCK_TMP$;
static int64 EXIT_CODE$;
static int64 LOCK_MAINLOOP$;
static int64 DEVICE_EVENT_INDEX$;
static int64 EXIT_OK$;
static struct $3QBS* FUNC_COMMAND_STR$;
static uint64 ERCL$;
static uint64 INCLERCL$;
static int8* INCLUDEDFILENAME$;
static uint16 CALL_ABSOLUTE_OFFSETS$[257];
static uint64 DBGLINE$;
static int64 DBLOCK$;
static uint64* NOTHINGVALUE$;
static uint64 NEW_ERROR$ = 0ull;
static struct $3QBS* NOTHINGSTRING$;
static uint8 STOP_PROGRAM$ = (uint8)0u;
static double* MEM64_STATIC_POINTER$ = (double*)((uint8*)MEM64$ + 534528ll);
static double* MEM64_DYNAMIC_BASE$ = (double*)((uint8*)MEM64$ + 5242880ll);
static double* MEM_STATIC$;
static double* MEM_STATIC_POINTER$;
static double* MEM_STATIC_LIMIT$;
static uint64* RETURN_POINT$ = (uint64*)0ull;
static uint64 RETURN_POINTS$ = 16384ull;
static void* QBS_INPUT_VARIABLEOFFSETS$[258];
static void* QBS_INPUT_VARIABLETYPES$[258];
static int8 G_TMP_CHAR$;
static uint8 G_TMP_UCHAR$;
static int16 G_TMP_SHORT$;
static uint16 G_TMP_USHORT$;
static int64 G_TMP_LONG$;
static uint64 G_TMP_ULONG$;
static int8 G_TMP_INT8$;
static uint8 G_TMP_UINT8$;
static int16 G_TMP_INT16$;
static uint16 G_TMP_UINT16$;
static int64 G_TMP_INT32$;
static uint64 G_TMP_UINT32$;
static int64 G_TMP_INT64$;
static uint64 G_TMP_UINT64$;
static struct $9_FLOAT128 G_TMP_FLOAT$;
static struct $9_FLOAT128 G_TMP_DOUBLE$;
static struct $9_FLOAT128 G_TMP_LONGFLOAT$;
static struct $3QBS* G_TMP_STR$;
static struct $3QBS* G_SWAP_STR$;
static struct $3QBS* PASS_STR$;
static uint64 MEM_STATIC_SIZE$;
static struct $23MEM64_DYNAMIC_LINK_TYPE MEM64_DYNAMIC_LINK$[147138];
static struct $23MEM64_DYNAMIC_LINK_TYPE* MEM64_DYNAMIC_LINK_FIRST$ = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
static int64 MEM64_DYNAMIC_NEXT_LINK$ = 0ll;
static int64 MEM64_DYNAMIC_FREE_LINK$ = 0ll;
static uint64 MEM64_DYNAMIC_FREE_LIST$[147137];
static double* DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
static uint8 KEYON$[65537];
static struct $3QBS* SINGLESPACE$;
static struct $3QBS* QBS_MALLOC$;
static uint64 QBS_MALLOC_NEXT$ = 0ull;
static int64* QBS_MALLOC_FREED$;
static uint64 QBS_MALLOC_FREED_SIZE$ = 65536ull;
static uint64 QBS_MALLOC_FREED_NUM$ = 0ull;
static int64* QBS_MEM64_LIST$;
static int64* QBS_LIST$;
static int64* QBS_TMP_LIST$;
static uint8* IP$;
static uint8* SEG$;
static uint8* SEG_BP$;
static uint8* REG8$[9];
static uint16* REG16$[9];
static uint64* REG32$[9];
static uint64* REG64$[9];
static uint16* SEGREG$[9];
static int64 A32$;
static int64 B32$;
struct $10IMG_STRUCT {
 void* LOCK_OFFSET;
 int64 LOCK_ID;
 uint8 VALID;
 uint8 TEXT;
 uint8 CONSOLE;
 uint16 IMG_WIDTH;
 uint16 IMG_HEIGHT;
 uint8 BYTES_PER_PIXEL;
 uint8 BITS_PER_PIXEL;
 uint64 MASK;
 uint16 COMPATIBLE_MODE;
 uint64 IMG_COLOR;
 uint64 BACKGROUND_COLOR;
 uint64 DRAW_COLOR;
 uint64 FONT;
 int16 TOP_ROW;
 int16 BOTTOM_ROW;
 int16 CURSOR_X;
 int16 CURSOR_Y;
 uint8 CURSOR_SHOW;
 uint8 CURSOR_FIRSTVALUE;
 uint8 CURSOR_LASTVALUE;
 union {
  uint8* OFFSET;
  uint64* OFFSET32;
 };
 uint64 FLAGS;
 uint64* PAL;
 int64 TRANSPARENT_COLOR;
 uint8 ALPHA_DISABLED;
 uint8 HOLDING_CURSOR;
 uint8 PRINT_MODE;
 uint8 APM_P1;
 int64 VIEW_X1;
 int64 VIEW_Y1;
 int64 VIEW_X2;
 int64 VIEW_Y2;
 int64 VIEW_OFFSET_X;
 int64 VIEW_OFFSET_Y;
 struct $9_FLOAT128 X;
 struct $9_FLOAT128 Y;
 uint8 CLIPPING_OR_SCALING;
 struct $9_FLOAT128 SCALING_X;
 struct $9_FLOAT128 SCALING_Y;
 struct $9_FLOAT128 SCALING_OFFSET_X;
 struct $9_FLOAT128 SCALING_OFFSET_Y;
 struct $9_FLOAT128 WINDOW_X1;
 struct $9_FLOAT128 WINDOW_Y1;
 struct $9_FLOAT128 WINDOW_X2;
 struct $9_FLOAT128 WINDOW_Y2;
 struct $9_FLOAT128 DRAW_TA;
 struct $9_FLOAT128 DRAW_SCALE;
 uint8 APM_P2;
};
extern int __$fb_structsizecheck[(sizeof( struct $10IMG_STRUCT ) == 392) ? 1 : -1];
static struct $10IMG_STRUCT* WRITE_PAGE$ = (struct $10IMG_STRUCT*)0ull;
static int64 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
static int64 H3C7_PALETTE_REGISTER_READ_INDEX$ = 0ll;
static int64 H3C8_PALETTE_REGISTER_INDEX$ = 0ll;
static int64 H3C9_NEXT$ = 0ll;
static int64 H3C9_READ_NEXT$ = 0ll;
static int64 H3C0_BLINK_ENABLE$ = 1ll;
static uint8 PORT60H_EVENT$[257];
static uint64 QB64_FIRSTTIMERVALUE$;
static uint64 CLOCK_FIRSTTIMERVALUE$;
static int64 VERTICAL_RETRACE_IN_PROGRESS$ = 0ll;
static int64 VERTICAL_RETRACE_HAPPENED$ = 0ll;
extern double SWCH$;
extern double OFFSET$;
extern void* IMAGE$;
extern FBSTRING STRCODE$;
extern FBSTRING FILENAME$;
static tmp$147 GLCREATESHADER$;
static tmp$76 GLDELETESHADER$;
static tmp$156 GLSHADERSOURCE$;
static tmp$76 GLCOMPILESHADER$;
static tmp$137 GLGETSHADERIV$;
static tmp$151 GLGETSHADERINFOLOG$;
static tmp$146 GLCREATEPROGRAM$;
static tmp$76 GLDELETEPROGRAM$;
static tmp$136 GLATTACHSHADER$;
static tmp$136 GLDETACHSHADER$;
static tmp$76 GLLINKPROGRAM$;
static tmp$137 GLGETPROGRAMIV$;
static tmp$151 GLGETPROGRAMINFOLOG$;
static tmp$76 GLUSEPROGRAM$;
static tmp$150 GLGETUNIFORMLOCATION$;
static tmp$157 GLUNIFORM1F$;
typedef void (*tmp$158)( int32, float, float );
static tmp$158 GLUNIFORM2F$;
static tmp$159 GLUNIFORM3F$;
static tmp$163 GLUNIFORM3FV$;
static tmp$160 GLUNIFORM4F$;
static tmp$163 GLUNIFORM4FV$;
static tmp$130 GLUNIFORM1I$;
static double PC$;
static double ADR0$;
static double ADR1$;
static double ADR2$;
static double ADR3$;
static double PC_STATUS$;
static double R0$;
static double R1$;
static double R2$;
static double R3$;
static double R4$;
static double R5$;
static double RADIUS$;
static double RED2$ = 0x1.FEp+7;
static double GREEN2$ = 0x1.FEp+7;
static double BLUE2$ = 0x1.FEp+7;
static double XALPHA2$ = 0x1.FEp+7;
static double X_AXIS0$;
static double Y_AXIS0$;
static double Z_AXIS0$;
static double COL0$;
static double COL1$;
static double CHAR_H$ = 0x1.68p+6;
static double X_AXIS1$;
static double Y_AXIS1$;
static double Z_AXIS1$;
static double CHAR_PTR$;
static double CHAR_W$ = 0x1.68p+6;
static double CHAR_BUFFER$ = 0x1.p+14;
static double BITMASK$ = 0x1.FEp+7;
static double PIXEL_SIZE$;
static double OCC$;
static double AMBIENT$;
static double DIFFUSE$;
static double BAC$;
static double DOM$;
static double FR$;
static double SPECULAR$;
static double IGLOBALTIME$;
static double RTIME$;
static double ITIME$;
static double CR$;
static double T$;
static double M$;
static double SCA$;
static double HR$;
static double DD2$;
static double EPS$;
static double RESF$;
static double H$;
static double MINT$;
static double TMAX$;
static double TMIN$;
static double PRECIS$;
static double S$;
static struct $4MAT2 M2$;
static struct $7VECTOR3 IRESOLUTION$;
static struct $7VECTOR4 IMOUSE$;
static struct $7VECTOR4 FRAGCOLOR$;
static struct $7VECTOR2 FRAGCOORD$;
static struct $7VECTOR2 Q$;
static struct $7VECTOR2 P2$;
static struct $7VECTOR3 RO$;
static struct $7VECTOR3 TA$;
static struct $4MAT3 CA$;
static struct $7VECTOR3 RD$;
static struct $7VECTOR3 COL$;
static struct $7VECTOR2 UV$;
static struct $7VECTOR3 CW$;
static struct $7VECTOR3 CP$;
static struct $7VECTOR3 CU$;
static struct $7VECTOR3 CV$;
static struct $7VECTOR3 LIN$;
static struct $7VECTOR3 REF$;
static struct $7VECTOR3 LIGHT$;
static struct $7VECTOR3 P3$;
static struct $7VECTOR3 NOR$;
static struct $7VECTOR2 RES2$;
static struct $7VECTOR3 AOPOS$;
static struct $7VECTOR2 RV2$;
static double STRING_ADR$;
static double STRING_LEN$;
static FBSTRING DRIVER_NAME$;
static FBSTRING STRING_DATA$;
static double A1$;
static double A2$;
static double A3$;
static double A4$;
static double A5$;
static double A6$;
static double A7$;
static double A8$;
static FBSTRING GET_KEY$;
static FBSTRING GET_DATA$;
static FBSTRING OLD_DATA$[10001];
static uint64 I$;
static uint8 NIBBLES$[16];
static int64 C$ = 0ll;
static int64 X$ = 0ll;
static int64 Y$ = 0ll;
static int64 XS$ = 0ll;
static int64 YS$ = 0ll;
static int64 CARY$ = 0ll;
static int64 G$ = 0ll;
extern double SYS_OFFSET$;
extern double STR_LEN$;
extern double CNT$;
extern void* BGIMAGE$;
extern void* FGIMAGE$;
extern void* RASTER$;
extern void* RENDER$;
extern void* PSCRN$;
extern FBSTRING COMPILER$;
extern uint64 SCR_W$;
extern uint64 SCR_H$;
extern uint64 SCR_POS$;
extern uint64 IMGDATA$;
extern uint64 PITCH$;
extern FBSTRING MSG$;
struct $7FBARRAYIdE {
 double* DATA;
 double* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIdE ) == 240) ? 1 : -1];
extern struct $7FBARRAYIdE POWER2$;
extern double SIZESCREEN$;
extern FBSTRING _SCREENRES$;
extern FBSTRING _NAME$;
extern double SCRWIDTH$;
extern double SCRHEIGHT$;
extern double RED$;
extern double GREEN$;
extern double BLUE$;
extern double XSCRCENTER$;
extern double YSCRCENTER$;
static struct $5MULTI V$;
static struct $5MULTI O$;
static struct $5C64_T COMPUTER$;
static int64 FLAG$;
static uint64 TICKS$;
static uint64 RES$;
struct $14__FB_DATADESC$ {
 int16 TYPE __attribute__((packed, aligned(1)));
 void* NODE __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14__FB_DATADESC$ ) == 10) ? 1 : -1];
static struct $14__FB_DATADESC$ label$9804[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"34" }, { (int16)3, (void*)"212" }, { (int16)3, (void*)"229" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)2, (void*)"20" }, { (int16)3, (void*)"225" }, { (int16)3, (void*)"100" }, { (int16)3, (void*)"165" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"164" }, { (int16)3, (void*)"121" }, { (int16)3, (void*)"166" }, { (int16)3, (void*)"156" }, { (int16)3, (void*)"227" }, { (int16)-1, (void*)0ull } };
static struct $14__FB_DATADESC$ label$9802[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)2, (void*)"63" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"7" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$9804 } };
static struct $14__FB_DATADESC$ label$9800[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9802 } };
static struct $14__FB_DATADESC$ label$9798[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9800 } };
static struct $14__FB_DATADESC$ label$9796[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9798 } };
static struct $14__FB_DATADESC$ label$9794[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9796 } };
static struct $14__FB_DATADESC$ label$9792[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9794 } };
static struct $14__FB_DATADESC$ label$9790[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9792 } };
static struct $14__FB_DATADESC$ label$9788[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9790 } };
static struct $14__FB_DATADESC$ label$9786[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9788 } };
static struct $14__FB_DATADESC$ label$9784[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9786 } };
static struct $14__FB_DATADESC$ label$9782[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9784 } };
static struct $14__FB_DATADESC$ label$9780[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9782 } };
static struct $14__FB_DATADESC$ label$9778[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9780 } };
static struct $14__FB_DATADESC$ label$9776[17] = { { (int16)3, (void*)"141" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"222" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9778 } };
static struct $14__FB_DATADESC$ label$9774[17] = { { (int16)2, (void*)"51" }, { (int16)2, (void*)"56" }, { (int16)2, (void*)"57" }, { (int16)2, (void*)"49" }, { (int16)2, (void*)"49" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)1, (void*)"3" }, { (int16)3, (void*)"141" }, { (int16)3, (void*)"148" }, { (int16)3, (void*)"158" }, { (int16)3, (void*)"169" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9776 } };
static struct $14__FB_DATADESC$ label$9772[17] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"216" }, { (int16)3, (void*)"129" }, { (int16)3, (void*)"235" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)-1, (void*)label$9774 } };
static struct $14__FB_DATADESC$ label$9770[17] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)-1, (void*)label$9772 } };
static struct $14__FB_DATADESC$ label$9768[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"240" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"39" }, { (int16)1, (void*)"6" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)-1, (void*)label$9770 } };
static struct $14__FB_DATADESC$ label$9766[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)2, (void*)"48" }, { (int16)3, (void*)"253" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"6" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$9768 } };
static struct $14__FB_DATADESC$ label$9764[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"60" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9766 } };
static struct $14__FB_DATADESC$ label$9762[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)3, (void*)"191" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9764 } };
static struct $14__FB_DATADESC$ label$9760[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9762 } };
static struct $14__FB_DATADESC$ label$9758[17] = { { (int16)3, (void*)"201" }, { (int16)2, (void*)"32" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"239" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)3, (void*)"208" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"128" }, { (int16)2, (void*)"79" }, { (int16)3, (void*)"199" }, { (int16)2, (void*)"82" }, { (int16)2, (void*)"88" }, { (int16)-1, (void*)label$9760 } };
static struct $14__FB_DATADESC$ label$9756[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"122" }, { (int16)3, (void*)"208" }, { (int16)1, (void*)"2" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"123" }, { (int16)3, (void*)"173" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)3, (void*)"201" }, { (int16)2, (void*)"58" }, { (int16)3, (void*)"176" }, { (int16)2, (void*)"10" }, { (int16)-1, (void*)label$9758 } };
static struct $14__FB_DATADESC$ label$9754[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)2, (void*)"25" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)-1, (void*)label$9756 } };
static struct $14__FB_DATADESC$ label$9752[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)2, (void*)"76" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"252" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9754 } };
static struct $14__FB_DATADESC$ label$9750[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"36" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9752 } };
static struct $14__FB_DATADESC$ label$9748[17] = { { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9750 } };
static struct $14__FB_DATADESC$ label$9746[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"179" }, { (int16)3, (void*)"189" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)-1, (void*)label$9748 } };
static struct $14__FB_DATADESC$ label$9744[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"25" }, { (int16)2, (void*)"22" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9746 } };
static struct $14__FB_DATADESC$ label$2114[17] = { { (int16)2, (void*)"47" }, { (int16)2, (void*)"55" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"170" }, { (int16)3, (void*)"177" }, { (int16)3, (void*)"145" }, { (int16)3, (void*)"179" }, { (int16)2, (void*)"34" }, { (int16)2, (void*)"34" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9744 } };
static struct $14__FB_DATADESC$ label$9742[2] = { { (int16)3, (void*)"IND" }, { (int16)-1, (void*)label$2114 } };
static struct $14__FB_DATADESC$ label$9740[2] = { { (int16)4, (void*)"INDY" }, { (int16)-1, (void*)label$9742 } };
static struct $14__FB_DATADESC$ label$9738[2] = { { (int16)4, (void*)"INDX" }, { (int16)-1, (void*)label$9740 } };
static struct $14__FB_DATADESC$ label$9736[2] = { { (int16)3, (void*)"REL" }, { (int16)-1, (void*)label$9738 } };
static struct $14__FB_DATADESC$ label$9734[2] = { { (int16)4, (void*)"ABSY" }, { (int16)-1, (void*)label$9736 } };
static struct $14__FB_DATADESC$ label$9732[2] = { { (int16)4, (void*)"ABSX" }, { (int16)-1, (void*)label$9734 } };
static struct $14__FB_DATADESC$ label$9730[2] = { { (int16)5, (void*)"ZEROY" }, { (int16)-1, (void*)label$9732 } };
static struct $14__FB_DATADESC$ label$9728[2] = { { (int16)5, (void*)"ZEROX" }, { (int16)-1, (void*)label$9730 } };
static struct $14__FB_DATADESC$ label$9726[2] = { { (int16)4, (void*)"ZERO" }, { (int16)-1, (void*)label$9728 } };
static struct $14__FB_DATADESC$ label$9724[2] = { { (int16)3, (void*)"ABS" }, { (int16)-1, (void*)label$9726 } };
static struct $14__FB_DATADESC$ label$9722[2] = { { (int16)3, (void*)"IMM" }, { (int16)-1, (void*)label$9724 } };
static struct $14__FB_DATADESC$ label$9720[2] = { { (int16)3, (void*)"IMP" }, { (int16)-1, (void*)label$9722 } };
static struct $14__FB_DATADESC$ label$8829[2] = { { (int16)3, (void*)"UNK" }, { (int16)-1, (void*)label$9720 } };
static struct $14__FB_DATADESC$ label$9718[7] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8829 } };
static struct $14__FB_DATADESC$ label$9716[7] = { { (int16)3, (void*)"254" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9718 } };
static struct $14__FB_DATADESC$ label$9714[7] = { { (int16)3, (void*)"253" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9716 } };
static struct $14__FB_DATADESC$ label$9712[7] = { { (int16)3, (void*)"252" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9714 } };
static struct $14__FB_DATADESC$ label$9710[7] = { { (int16)3, (void*)"251" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9712 } };
static struct $14__FB_DATADESC$ label$9708[7] = { { (int16)3, (void*)"250" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9710 } };
static struct $14__FB_DATADESC$ label$9706[7] = { { (int16)3, (void*)"249" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9708 } };
static struct $14__FB_DATADESC$ label$9704[7] = { { (int16)3, (void*)"248" }, { (int16)3, (void*)"SED" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SED }, { (int16)-1, (void*)label$9706 } };
static struct $14__FB_DATADESC$ label$9702[7] = { { (int16)3, (void*)"247" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9704 } };
static struct $14__FB_DATADESC$ label$9700[7] = { { (int16)3, (void*)"246" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9702 } };
static struct $14__FB_DATADESC$ label$9698[7] = { { (int16)3, (void*)"245" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9700 } };
static struct $14__FB_DATADESC$ label$9696[7] = { { (int16)3, (void*)"244" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9698 } };
static struct $14__FB_DATADESC$ label$9694[7] = { { (int16)3, (void*)"243" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9696 } };
static struct $14__FB_DATADESC$ label$9692[7] = { { (int16)3, (void*)"242" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9694 } };
static struct $14__FB_DATADESC$ label$9690[7] = { { (int16)3, (void*)"241" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9692 } };
static struct $14__FB_DATADESC$ label$9688[7] = { { (int16)3, (void*)"240" }, { (int16)3, (void*)"BEQ" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BEQ }, { (int16)-1, (void*)label$9690 } };
static struct $14__FB_DATADESC$ label$9686[7] = { { (int16)3, (void*)"239" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9688 } };
static struct $14__FB_DATADESC$ label$9684[7] = { { (int16)3, (void*)"238" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9686 } };
static struct $14__FB_DATADESC$ label$9682[7] = { { (int16)3, (void*)"237" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9684 } };
static struct $14__FB_DATADESC$ label$9680[7] = { { (int16)3, (void*)"236" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9682 } };
static struct $14__FB_DATADESC$ label$9678[7] = { { (int16)3, (void*)"235" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9680 } };
static struct $14__FB_DATADESC$ label$9676[7] = { { (int16)3, (void*)"234" }, { (int16)3, (void*)"NOP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_NOP }, { (int16)-1, (void*)label$9678 } };
static struct $14__FB_DATADESC$ label$9674[7] = { { (int16)3, (void*)"233" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9676 } };
static struct $14__FB_DATADESC$ label$9672[7] = { { (int16)3, (void*)"232" }, { (int16)3, (void*)"INX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INX }, { (int16)-1, (void*)label$9674 } };
static struct $14__FB_DATADESC$ label$9670[7] = { { (int16)3, (void*)"231" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9672 } };
static struct $14__FB_DATADESC$ label$9668[7] = { { (int16)3, (void*)"230" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9670 } };
static struct $14__FB_DATADESC$ label$9666[7] = { { (int16)3, (void*)"229" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9668 } };
static struct $14__FB_DATADESC$ label$9664[7] = { { (int16)3, (void*)"228" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9666 } };
static struct $14__FB_DATADESC$ label$9662[7] = { { (int16)3, (void*)"227" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9664 } };
static struct $14__FB_DATADESC$ label$9660[7] = { { (int16)3, (void*)"226" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9662 } };
static struct $14__FB_DATADESC$ label$9658[7] = { { (int16)3, (void*)"225" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9660 } };
static struct $14__FB_DATADESC$ label$9656[7] = { { (int16)3, (void*)"224" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9658 } };
static struct $14__FB_DATADESC$ label$9654[7] = { { (int16)3, (void*)"223" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9656 } };
static struct $14__FB_DATADESC$ label$9652[7] = { { (int16)3, (void*)"222" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9654 } };
static struct $14__FB_DATADESC$ label$9650[7] = { { (int16)3, (void*)"221" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9652 } };
static struct $14__FB_DATADESC$ label$9648[7] = { { (int16)3, (void*)"220" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9650 } };
static struct $14__FB_DATADESC$ label$9646[7] = { { (int16)3, (void*)"219" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9648 } };
static struct $14__FB_DATADESC$ label$9644[7] = { { (int16)3, (void*)"218" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9646 } };
static struct $14__FB_DATADESC$ label$9642[7] = { { (int16)3, (void*)"217" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9644 } };
static struct $14__FB_DATADESC$ label$9640[7] = { { (int16)3, (void*)"216" }, { (int16)3, (void*)"CLD" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLD }, { (int16)-1, (void*)label$9642 } };
static struct $14__FB_DATADESC$ label$9638[7] = { { (int16)3, (void*)"215" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9640 } };
static struct $14__FB_DATADESC$ label$9636[7] = { { (int16)3, (void*)"214" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9638 } };
static struct $14__FB_DATADESC$ label$9634[7] = { { (int16)3, (void*)"213" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9636 } };
static struct $14__FB_DATADESC$ label$9632[7] = { { (int16)3, (void*)"212" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9634 } };
static struct $14__FB_DATADESC$ label$9630[7] = { { (int16)3, (void*)"211" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9632 } };
static struct $14__FB_DATADESC$ label$9628[7] = { { (int16)3, (void*)"210" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9630 } };
static struct $14__FB_DATADESC$ label$9626[7] = { { (int16)3, (void*)"209" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9628 } };
static struct $14__FB_DATADESC$ label$9624[7] = { { (int16)3, (void*)"208" }, { (int16)3, (void*)"BNE" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BNE }, { (int16)-1, (void*)label$9626 } };
static struct $14__FB_DATADESC$ label$9622[7] = { { (int16)3, (void*)"207" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9624 } };
static struct $14__FB_DATADESC$ label$9620[7] = { { (int16)3, (void*)"206" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9622 } };
static struct $14__FB_DATADESC$ label$9618[7] = { { (int16)3, (void*)"205" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9620 } };
static struct $14__FB_DATADESC$ label$9616[7] = { { (int16)3, (void*)"204" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9618 } };
static struct $14__FB_DATADESC$ label$9614[7] = { { (int16)3, (void*)"203" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9616 } };
static struct $14__FB_DATADESC$ label$9612[7] = { { (int16)3, (void*)"202" }, { (int16)3, (void*)"DEX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEX }, { (int16)-1, (void*)label$9614 } };
static struct $14__FB_DATADESC$ label$9610[7] = { { (int16)3, (void*)"201" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9612 } };
static struct $14__FB_DATADESC$ label$9608[7] = { { (int16)3, (void*)"200" }, { (int16)3, (void*)"INY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INY }, { (int16)-1, (void*)label$9610 } };
static struct $14__FB_DATADESC$ label$9606[7] = { { (int16)3, (void*)"199" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9608 } };
static struct $14__FB_DATADESC$ label$9604[7] = { { (int16)3, (void*)"198" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9606 } };
static struct $14__FB_DATADESC$ label$9602[7] = { { (int16)3, (void*)"197" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9604 } };
static struct $14__FB_DATADESC$ label$9600[7] = { { (int16)3, (void*)"196" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9602 } };
static struct $14__FB_DATADESC$ label$9598[7] = { { (int16)3, (void*)"195" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9600 } };
static struct $14__FB_DATADESC$ label$9596[7] = { { (int16)3, (void*)"194" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9598 } };
static struct $14__FB_DATADESC$ label$9594[7] = { { (int16)3, (void*)"193" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9596 } };
static struct $14__FB_DATADESC$ label$9592[7] = { { (int16)3, (void*)"192" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9594 } };
static struct $14__FB_DATADESC$ label$9590[7] = { { (int16)3, (void*)"191" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9592 } };
static struct $14__FB_DATADESC$ label$9588[7] = { { (int16)3, (void*)"190" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9590 } };
static struct $14__FB_DATADESC$ label$9586[7] = { { (int16)3, (void*)"189" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9588 } };
static struct $14__FB_DATADESC$ label$9584[7] = { { (int16)3, (void*)"188" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9586 } };
static struct $14__FB_DATADESC$ label$9582[7] = { { (int16)3, (void*)"187" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9584 } };
static struct $14__FB_DATADESC$ label$9580[7] = { { (int16)3, (void*)"186" }, { (int16)3, (void*)"TSX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TSX }, { (int16)-1, (void*)label$9582 } };
static struct $14__FB_DATADESC$ label$9578[7] = { { (int16)3, (void*)"185" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9580 } };
static struct $14__FB_DATADESC$ label$9576[7] = { { (int16)3, (void*)"184" }, { (int16)3, (void*)"CLV" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLV }, { (int16)-1, (void*)label$9578 } };
static struct $14__FB_DATADESC$ label$9574[7] = { { (int16)3, (void*)"183" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9576 } };
static struct $14__FB_DATADESC$ label$9572[7] = { { (int16)3, (void*)"182" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9574 } };
static struct $14__FB_DATADESC$ label$9570[7] = { { (int16)3, (void*)"181" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9572 } };
static struct $14__FB_DATADESC$ label$9568[7] = { { (int16)3, (void*)"180" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9570 } };
static struct $14__FB_DATADESC$ label$9566[7] = { { (int16)3, (void*)"179" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9568 } };
static struct $14__FB_DATADESC$ label$9564[7] = { { (int16)3, (void*)"178" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9566 } };
static struct $14__FB_DATADESC$ label$9562[7] = { { (int16)3, (void*)"177" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9564 } };
static struct $14__FB_DATADESC$ label$9560[7] = { { (int16)3, (void*)"176" }, { (int16)3, (void*)"BCS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCS }, { (int16)-1, (void*)label$9562 } };
static struct $14__FB_DATADESC$ label$9558[7] = { { (int16)3, (void*)"175" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9560 } };
static struct $14__FB_DATADESC$ label$9556[7] = { { (int16)3, (void*)"174" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9558 } };
static struct $14__FB_DATADESC$ label$9554[7] = { { (int16)3, (void*)"173" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9556 } };
static struct $14__FB_DATADESC$ label$9552[7] = { { (int16)3, (void*)"172" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9554 } };
static struct $14__FB_DATADESC$ label$9550[7] = { { (int16)3, (void*)"171" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9552 } };
static struct $14__FB_DATADESC$ label$9548[7] = { { (int16)3, (void*)"170" }, { (int16)3, (void*)"TAX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAX }, { (int16)-1, (void*)label$9550 } };
static struct $14__FB_DATADESC$ label$9546[7] = { { (int16)3, (void*)"169" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9548 } };
static struct $14__FB_DATADESC$ label$9544[7] = { { (int16)3, (void*)"168" }, { (int16)3, (void*)"TAY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAY }, { (int16)-1, (void*)label$9546 } };
static struct $14__FB_DATADESC$ label$9542[7] = { { (int16)3, (void*)"167" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9544 } };
static struct $14__FB_DATADESC$ label$9540[7] = { { (int16)3, (void*)"166" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9542 } };
static struct $14__FB_DATADESC$ label$9538[7] = { { (int16)3, (void*)"165" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9540 } };
static struct $14__FB_DATADESC$ label$9536[7] = { { (int16)3, (void*)"164" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9538 } };
static struct $14__FB_DATADESC$ label$9534[7] = { { (int16)3, (void*)"163" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9536 } };
static struct $14__FB_DATADESC$ label$9532[7] = { { (int16)3, (void*)"162" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9534 } };
static struct $14__FB_DATADESC$ label$9530[7] = { { (int16)3, (void*)"161" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9532 } };
static struct $14__FB_DATADESC$ label$9528[7] = { { (int16)3, (void*)"160" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9530 } };
static struct $14__FB_DATADESC$ label$9526[7] = { { (int16)3, (void*)"159" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9528 } };
static struct $14__FB_DATADESC$ label$9524[7] = { { (int16)3, (void*)"158" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9526 } };
static struct $14__FB_DATADESC$ label$9522[7] = { { (int16)3, (void*)"157" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9524 } };
static struct $14__FB_DATADESC$ label$9520[7] = { { (int16)3, (void*)"156" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9522 } };
static struct $14__FB_DATADESC$ label$9518[7] = { { (int16)3, (void*)"155" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9520 } };
static struct $14__FB_DATADESC$ label$9516[7] = { { (int16)3, (void*)"154" }, { (int16)3, (void*)"TXS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXS }, { (int16)-1, (void*)label$9518 } };
static struct $14__FB_DATADESC$ label$9514[7] = { { (int16)3, (void*)"153" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9516 } };
static struct $14__FB_DATADESC$ label$9512[7] = { { (int16)3, (void*)"152" }, { (int16)3, (void*)"TYA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TYA }, { (int16)-1, (void*)label$9514 } };
static struct $14__FB_DATADESC$ label$9510[7] = { { (int16)3, (void*)"151" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9512 } };
static struct $14__FB_DATADESC$ label$9508[7] = { { (int16)3, (void*)"150" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$9510 } };
static struct $14__FB_DATADESC$ label$9506[7] = { { (int16)3, (void*)"149" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9508 } };
static struct $14__FB_DATADESC$ label$9504[7] = { { (int16)3, (void*)"148" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$9506 } };
static struct $14__FB_DATADESC$ label$9502[7] = { { (int16)3, (void*)"147" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9504 } };
static struct $14__FB_DATADESC$ label$9500[7] = { { (int16)3, (void*)"146" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9502 } };
static struct $14__FB_DATADESC$ label$9498[7] = { { (int16)3, (void*)"145" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9500 } };
static struct $14__FB_DATADESC$ label$9496[7] = { { (int16)3, (void*)"144" }, { (int16)3, (void*)"BCC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCC }, { (int16)-1, (void*)label$9498 } };
static struct $14__FB_DATADESC$ label$9494[7] = { { (int16)3, (void*)"143" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9496 } };
static struct $14__FB_DATADESC$ label$9492[7] = { { (int16)3, (void*)"142" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$9494 } };
static struct $14__FB_DATADESC$ label$9490[7] = { { (int16)3, (void*)"141" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9492 } };
static struct $14__FB_DATADESC$ label$9488[7] = { { (int16)3, (void*)"140" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$9490 } };
static struct $14__FB_DATADESC$ label$9486[7] = { { (int16)3, (void*)"139" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9488 } };
static struct $14__FB_DATADESC$ label$9484[7] = { { (int16)3, (void*)"138" }, { (int16)3, (void*)"TXA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXA }, { (int16)-1, (void*)label$9486 } };
static struct $14__FB_DATADESC$ label$9482[7] = { { (int16)3, (void*)"137" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9484 } };
static struct $14__FB_DATADESC$ label$9480[7] = { { (int16)3, (void*)"136" }, { (int16)3, (void*)"DEY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEY }, { (int16)-1, (void*)label$9482 } };
static struct $14__FB_DATADESC$ label$9478[7] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9480 } };
static struct $14__FB_DATADESC$ label$9476[7] = { { (int16)3, (void*)"134" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$9478 } };
static struct $14__FB_DATADESC$ label$9474[7] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9476 } };
static struct $14__FB_DATADESC$ label$9472[7] = { { (int16)3, (void*)"132" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$9474 } };
static struct $14__FB_DATADESC$ label$9470[7] = { { (int16)3, (void*)"131" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9472 } };
static struct $14__FB_DATADESC$ label$9468[7] = { { (int16)3, (void*)"130" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9470 } };
static struct $14__FB_DATADESC$ label$9466[7] = { { (int16)3, (void*)"129" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$9468 } };
static struct $14__FB_DATADESC$ label$9464[7] = { { (int16)3, (void*)"128" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9466 } };
static struct $14__FB_DATADESC$ label$9462[7] = { { (int16)3, (void*)"127" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9464 } };
static struct $14__FB_DATADESC$ label$9460[7] = { { (int16)3, (void*)"126" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$9462 } };
static struct $14__FB_DATADESC$ label$9458[7] = { { (int16)3, (void*)"125" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9460 } };
static struct $14__FB_DATADESC$ label$9456[7] = { { (int16)3, (void*)"124" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9458 } };
static struct $14__FB_DATADESC$ label$9454[7] = { { (int16)3, (void*)"123" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9456 } };
static struct $14__FB_DATADESC$ label$9452[7] = { { (int16)3, (void*)"122" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9454 } };
static struct $14__FB_DATADESC$ label$9450[7] = { { (int16)3, (void*)"121" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9452 } };
static struct $14__FB_DATADESC$ label$9448[7] = { { (int16)3, (void*)"120" }, { (int16)3, (void*)"SEI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEI }, { (int16)-1, (void*)label$9450 } };
static struct $14__FB_DATADESC$ label$9446[7] = { { (int16)3, (void*)"119" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9448 } };
static struct $14__FB_DATADESC$ label$9444[7] = { { (int16)3, (void*)"118" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$9446 } };
static struct $14__FB_DATADESC$ label$9442[7] = { { (int16)3, (void*)"117" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9444 } };
static struct $14__FB_DATADESC$ label$9440[7] = { { (int16)3, (void*)"116" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9442 } };
static struct $14__FB_DATADESC$ label$9438[7] = { { (int16)3, (void*)"115" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9440 } };
static struct $14__FB_DATADESC$ label$9436[7] = { { (int16)3, (void*)"114" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9438 } };
static struct $14__FB_DATADESC$ label$9434[7] = { { (int16)3, (void*)"113" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9436 } };
static struct $14__FB_DATADESC$ label$9432[7] = { { (int16)3, (void*)"112" }, { (int16)3, (void*)"BVS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVS }, { (int16)-1, (void*)label$9434 } };
static struct $14__FB_DATADESC$ label$9430[7] = { { (int16)3, (void*)"111" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9432 } };
static struct $14__FB_DATADESC$ label$9428[7] = { { (int16)3, (void*)"110" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$9430 } };
static struct $14__FB_DATADESC$ label$9426[7] = { { (int16)3, (void*)"109" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9428 } };
static struct $14__FB_DATADESC$ label$9424[7] = { { (int16)3, (void*)"108" }, { (int16)3, (void*)"JMP" }, { (int16)2, (void*)"12" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$9426 } };
static struct $14__FB_DATADESC$ label$9422[7] = { { (int16)3, (void*)"107" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9424 } };
static struct $14__FB_DATADESC$ label$9420[7] = { { (int16)3, (void*)"106" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RORA }, { (int16)-1, (void*)label$9422 } };
static struct $14__FB_DATADESC$ label$9418[7] = { { (int16)3, (void*)"105" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9420 } };
static struct $14__FB_DATADESC$ label$9416[7] = { { (int16)3, (void*)"104" }, { (int16)3, (void*)"PLA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLA }, { (int16)-1, (void*)label$9418 } };
static struct $14__FB_DATADESC$ label$9414[7] = { { (int16)3, (void*)"103" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9416 } };
static struct $14__FB_DATADESC$ label$9412[7] = { { (int16)3, (void*)"102" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$9414 } };
static struct $14__FB_DATADESC$ label$9410[7] = { { (int16)3, (void*)"101" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9412 } };
static struct $14__FB_DATADESC$ label$9408[7] = { { (int16)3, (void*)"100" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9410 } };
static struct $14__FB_DATADESC$ label$9406[7] = { { (int16)2, (void*)"99" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9408 } };
static struct $14__FB_DATADESC$ label$9404[7] = { { (int16)2, (void*)"98" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9406 } };
static struct $14__FB_DATADESC$ label$9402[7] = { { (int16)2, (void*)"97" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$9404 } };
static struct $14__FB_DATADESC$ label$9400[7] = { { (int16)2, (void*)"96" }, { (int16)3, (void*)"RTS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTS }, { (int16)-1, (void*)label$9402 } };
static struct $14__FB_DATADESC$ label$9398[7] = { { (int16)2, (void*)"95" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9400 } };
static struct $14__FB_DATADESC$ label$9396[7] = { { (int16)2, (void*)"94" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$9398 } };
static struct $14__FB_DATADESC$ label$9394[7] = { { (int16)2, (void*)"93" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9396 } };
static struct $14__FB_DATADESC$ label$9392[7] = { { (int16)2, (void*)"92" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9394 } };
static struct $14__FB_DATADESC$ label$9390[7] = { { (int16)2, (void*)"91" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9392 } };
static struct $14__FB_DATADESC$ label$9388[7] = { { (int16)2, (void*)"90" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9390 } };
static struct $14__FB_DATADESC$ label$9386[7] = { { (int16)2, (void*)"89" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9388 } };
static struct $14__FB_DATADESC$ label$9384[7] = { { (int16)2, (void*)"88" }, { (int16)3, (void*)"CLI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLI }, { (int16)-1, (void*)label$9386 } };
static struct $14__FB_DATADESC$ label$9382[7] = { { (int16)2, (void*)"87" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9384 } };
static struct $14__FB_DATADESC$ label$9380[7] = { { (int16)2, (void*)"86" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$9382 } };
static struct $14__FB_DATADESC$ label$9378[7] = { { (int16)2, (void*)"85" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9380 } };
static struct $14__FB_DATADESC$ label$9376[7] = { { (int16)2, (void*)"84" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9378 } };
static struct $14__FB_DATADESC$ label$9374[7] = { { (int16)2, (void*)"83" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9376 } };
static struct $14__FB_DATADESC$ label$9372[7] = { { (int16)2, (void*)"82" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9374 } };
static struct $14__FB_DATADESC$ label$9370[7] = { { (int16)2, (void*)"81" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9372 } };
static struct $14__FB_DATADESC$ label$9368[7] = { { (int16)2, (void*)"80" }, { (int16)3, (void*)"BVC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVC }, { (int16)-1, (void*)label$9370 } };
static struct $14__FB_DATADESC$ label$9366[7] = { { (int16)2, (void*)"79" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9368 } };
static struct $14__FB_DATADESC$ label$9364[7] = { { (int16)2, (void*)"78" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$9366 } };
static struct $14__FB_DATADESC$ label$9362[7] = { { (int16)2, (void*)"77" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9364 } };
static struct $14__FB_DATADESC$ label$9360[7] = { { (int16)2, (void*)"76" }, { (int16)3, (void*)"JMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$9362 } };
static struct $14__FB_DATADESC$ label$9358[7] = { { (int16)2, (void*)"75" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9360 } };
static struct $14__FB_DATADESC$ label$9356[7] = { { (int16)2, (void*)"74" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSRA }, { (int16)-1, (void*)label$9358 } };
static struct $14__FB_DATADESC$ label$9354[7] = { { (int16)2, (void*)"73" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9356 } };
static struct $14__FB_DATADESC$ label$9352[7] = { { (int16)2, (void*)"72" }, { (int16)3, (void*)"PHA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHA }, { (int16)-1, (void*)label$9354 } };
static struct $14__FB_DATADESC$ label$9350[7] = { { (int16)2, (void*)"71" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9352 } };
static struct $14__FB_DATADESC$ label$9348[7] = { { (int16)2, (void*)"70" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$9350 } };
static struct $14__FB_DATADESC$ label$9346[7] = { { (int16)2, (void*)"69" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9348 } };
static struct $14__FB_DATADESC$ label$9344[7] = { { (int16)2, (void*)"68" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9346 } };
static struct $14__FB_DATADESC$ label$9342[7] = { { (int16)2, (void*)"67" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9344 } };
static struct $14__FB_DATADESC$ label$9340[7] = { { (int16)2, (void*)"66" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9342 } };
static struct $14__FB_DATADESC$ label$9338[7] = { { (int16)2, (void*)"65" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$9340 } };
static struct $14__FB_DATADESC$ label$9336[7] = { { (int16)2, (void*)"64" }, { (int16)3, (void*)"RTI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTI }, { (int16)-1, (void*)label$9338 } };
static struct $14__FB_DATADESC$ label$9334[7] = { { (int16)2, (void*)"63" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9336 } };
static struct $14__FB_DATADESC$ label$9332[7] = { { (int16)2, (void*)"62" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$9334 } };
static struct $14__FB_DATADESC$ label$9330[7] = { { (int16)2, (void*)"61" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9332 } };
static struct $14__FB_DATADESC$ label$9328[7] = { { (int16)2, (void*)"60" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9330 } };
static struct $14__FB_DATADESC$ label$9326[7] = { { (int16)2, (void*)"59" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9328 } };
static struct $14__FB_DATADESC$ label$9324[7] = { { (int16)2, (void*)"58" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9326 } };
static struct $14__FB_DATADESC$ label$9322[7] = { { (int16)2, (void*)"57" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9324 } };
static struct $14__FB_DATADESC$ label$9320[7] = { { (int16)2, (void*)"56" }, { (int16)3, (void*)"SEC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEC }, { (int16)-1, (void*)label$9322 } };
static struct $14__FB_DATADESC$ label$9318[7] = { { (int16)2, (void*)"55" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9320 } };
static struct $14__FB_DATADESC$ label$9316[7] = { { (int16)2, (void*)"54" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$9318 } };
static struct $14__FB_DATADESC$ label$9314[7] = { { (int16)2, (void*)"53" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9316 } };
static struct $14__FB_DATADESC$ label$9312[7] = { { (int16)2, (void*)"52" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9314 } };
static struct $14__FB_DATADESC$ label$9310[7] = { { (int16)2, (void*)"51" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9312 } };
static struct $14__FB_DATADESC$ label$9308[7] = { { (int16)2, (void*)"50" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9310 } };
static struct $14__FB_DATADESC$ label$9306[7] = { { (int16)2, (void*)"49" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9308 } };
static struct $14__FB_DATADESC$ label$9304[7] = { { (int16)2, (void*)"48" }, { (int16)3, (void*)"BMI" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BMI }, { (int16)-1, (void*)label$9306 } };
static struct $14__FB_DATADESC$ label$9302[7] = { { (int16)2, (void*)"47" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9304 } };
static struct $14__FB_DATADESC$ label$9300[7] = { { (int16)2, (void*)"46" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$9302 } };
static struct $14__FB_DATADESC$ label$9298[7] = { { (int16)2, (void*)"45" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9300 } };
static struct $14__FB_DATADESC$ label$9296[7] = { { (int16)2, (void*)"44" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$9298 } };
static struct $14__FB_DATADESC$ label$9294[7] = { { (int16)2, (void*)"43" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9296 } };
static struct $14__FB_DATADESC$ label$9292[7] = { { (int16)2, (void*)"42" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROLA }, { (int16)-1, (void*)label$9294 } };
static struct $14__FB_DATADESC$ label$9290[7] = { { (int16)2, (void*)"41" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9292 } };
static struct $14__FB_DATADESC$ label$9288[7] = { { (int16)2, (void*)"40" }, { (int16)3, (void*)"PLP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLP }, { (int16)-1, (void*)label$9290 } };
static struct $14__FB_DATADESC$ label$9286[7] = { { (int16)2, (void*)"39" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9288 } };
static struct $14__FB_DATADESC$ label$9284[7] = { { (int16)2, (void*)"38" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$9286 } };
static struct $14__FB_DATADESC$ label$9282[7] = { { (int16)2, (void*)"37" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9284 } };
static struct $14__FB_DATADESC$ label$9280[7] = { { (int16)2, (void*)"36" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$9282 } };
static struct $14__FB_DATADESC$ label$9278[7] = { { (int16)2, (void*)"35" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9280 } };
static struct $14__FB_DATADESC$ label$9276[7] = { { (int16)2, (void*)"34" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9278 } };
static struct $14__FB_DATADESC$ label$9274[7] = { { (int16)2, (void*)"33" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$9276 } };
static struct $14__FB_DATADESC$ label$9272[7] = { { (int16)2, (void*)"32" }, { (int16)3, (void*)"JSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JSR }, { (int16)-1, (void*)label$9274 } };
static struct $14__FB_DATADESC$ label$9270[7] = { { (int16)2, (void*)"31" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9272 } };
static struct $14__FB_DATADESC$ label$9268[7] = { { (int16)2, (void*)"30" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$9270 } };
static struct $14__FB_DATADESC$ label$9266[7] = { { (int16)2, (void*)"29" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9268 } };
static struct $14__FB_DATADESC$ label$9264[7] = { { (int16)2, (void*)"28" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9266 } };
static struct $14__FB_DATADESC$ label$9262[7] = { { (int16)2, (void*)"27" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9264 } };
static struct $14__FB_DATADESC$ label$9260[7] = { { (int16)2, (void*)"26" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9262 } };
static struct $14__FB_DATADESC$ label$9258[7] = { { (int16)2, (void*)"25" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9260 } };
static struct $14__FB_DATADESC$ label$9256[7] = { { (int16)2, (void*)"24" }, { (int16)3, (void*)"CLC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLC }, { (int16)-1, (void*)label$9258 } };
static struct $14__FB_DATADESC$ label$9254[7] = { { (int16)2, (void*)"23" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9256 } };
static struct $14__FB_DATADESC$ label$9252[7] = { { (int16)2, (void*)"22" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$9254 } };
static struct $14__FB_DATADESC$ label$9250[7] = { { (int16)2, (void*)"21" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9252 } };
static struct $14__FB_DATADESC$ label$9248[7] = { { (int16)2, (void*)"20" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9250 } };
static struct $14__FB_DATADESC$ label$9246[7] = { { (int16)2, (void*)"19" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9248 } };
static struct $14__FB_DATADESC$ label$9244[7] = { { (int16)2, (void*)"18" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9246 } };
static struct $14__FB_DATADESC$ label$9242[7] = { { (int16)2, (void*)"17" }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9244 } };
static struct $14__FB_DATADESC$ label$9240[7] = { { (int16)2, (void*)"16" }, { (int16)3, (void*)"BPL" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BPL }, { (int16)-1, (void*)label$9242 } };
static struct $14__FB_DATADESC$ label$9238[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9240 } };
static struct $14__FB_DATADESC$ label$9236[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$9238 } };
static struct $14__FB_DATADESC$ label$9234[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 13ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9236 } };
static struct $14__FB_DATADESC$ label$9232[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 12ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9234 } };
static struct $14__FB_DATADESC$ label$9230[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 11ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9232 } };
static struct $14__FB_DATADESC$ label$9228[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 10ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)-2, (void*)&INS_ASLA }, { (int16)-1, (void*)label$9230 } };
static struct $14__FB_DATADESC$ label$9226[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 9ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9228 } };
static struct $14__FB_DATADESC$ label$9224[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 8ll) }, { (int16)3, (void*)"PHP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHP }, { (int16)-1, (void*)label$9226 } };
static struct $14__FB_DATADESC$ label$9222[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 7ll) }, { (int16)3, (void*)"W64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W64 }, { (int16)-1, (void*)label$9224 } };
static struct $14__FB_DATADESC$ label$9220[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 6ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$9222 } };
static struct $14__FB_DATADESC$ label$9218[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 5ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9220 } };
static struct $14__FB_DATADESC$ label$9216[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)3, (void*)"R64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R64 }, { (int16)-1, (void*)label$9218 } };
static struct $14__FB_DATADESC$ label$9214[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)3, (void*)"W32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W32 }, { (int16)-1, (void*)label$9216 } };
static struct $14__FB_DATADESC$ label$9212[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)3, (void*)"R32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R32 }, { (int16)-1, (void*)label$9214 } };
static struct $14__FB_DATADESC$ label$9210[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$9212 } };
static struct $14__FB_DATADESC$ label$8823[7] = { { (int16)-2, (void*)NIBBLES$ }, { (int16)3, (void*)"BRK" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BRK }, { (int16)-1, (void*)label$9210 } };
double SWCH$;
double OFFSET$;
void* IMAGE$;
FBSTRING STRCODE$;
FBSTRING FILENAME$;
double SYS_OFFSET$ __attribute__((common));
double STR_LEN$ __attribute__((common));
double CNT$ __attribute__((common));
void* BGIMAGE$ __attribute__((common));
void* FGIMAGE$ __attribute__((common));
void* RASTER$ __attribute__((common));
void* RENDER$ __attribute__((common));
void* PSCRN$ __attribute__((common));
FBSTRING COMPILER$ __attribute__((common));
uint64 SCR_W$ __attribute__((common));
uint64 SCR_H$ __attribute__((common));
uint64 SCR_POS$ __attribute__((common));
uint64 IMGDATA$ __attribute__((common));
uint64 PITCH$ __attribute__((common));
FBSTRING MSG$ __attribute__((common));
struct $7FBARRAYIdE POWER2$ __attribute__((common));
double SIZESCREEN$ __attribute__((common));
FBSTRING _SCREENRES$ __attribute__((common));
FBSTRING _NAME$ __attribute__((common));
double SCRWIDTH$ __attribute__((common));
double SCRHEIGHT$ __attribute__((common));
double RED$ __attribute__((common));
double GREEN$ __attribute__((common));
double BLUE$ __attribute__((common));
double XSCRCENTER$ __attribute__((common));
double YSCRCENTER$ __attribute__((common));

void ERROREXIT( FBSTRING* MSG$1 )
{
 label$2:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 == (void*)0ull ) goto label$5;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$5:;
 }
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 fb_PrintString( 0, (FBSTRING*)MSG$1, 1 );
 fb_PrintVoid( 0, 1 );
 FBSTRING* vr$3 = fb_StrAllocTempDescZEx( (uint8*)"press any key ...", 17ll );
 fb_PrintString( 0, (FBSTRING*)vr$3, 1 );
 fb_Beep( );
 fb_Sleep( -1 );
 fb_End( 1 );
 label$3:;
}

void GLSCREEN( int64 PIXELWIDTH$1, int64 PIXELHEIGHT$1, int64 COLORBITS$1, int64 DEPTHBITS$1, boolean FULLSCREEN$1 )
{
 int64 TMP$650$1;
 int64 TMP$651$1;
 int64 TMP$652$1;
 int64 TMP$653$1;
 int64 TMP$654$1;
 int64 TMP$655$1;
 int64 TMP$656$1;
 int64 TMP$657$1;
 int64 TMP$658$1;
 label$6:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 int64 B$1;
 __builtin_memset( &B$1, 0, 8ll );
 void* vr$3 = fb_GfxScreenPtr( );
 if( vr$3 == (void*)0ull ) goto label$9;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$9:;
 }
 FBSTRING* vr$4 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$652$1 = 0ll;
 TMP$651$1 = 0ll;
 TMP$650$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, (int64*)&B$1, &TMP$650$1, &TMP$651$1, &TMP$652$1, vr$4 );
 if( PIXELWIDTH$1 > 0ll ) goto label$10;
 TMP$653$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$98;
 label$10:;
 TMP$653$1 = 0ll;
 label$98:;
 if( TMP$653$1 == 0ll ) goto label$12;
 {
  PIXELWIDTH$1 = 640ll;
  PIXELHEIGHT$1 = 350ll;
  FULLSCREEN$1 = (boolean)0ll;
 }
 goto label$11;
 label$12:;
 if( PIXELWIDTH$1 <= 0ll ) goto label$14;
 TMP$654$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$99;
 label$14:;
 TMP$654$1 = 0ll;
 label$99:;
 if( TMP$654$1 == 0ll ) goto label$13;
 {
  PIXELHEIGHT$1 = ((int64)__builtin_nearbyint( ((double)PIXELWIDTH$1 / 0x1.p+4) * 0x1.2p+3 ));
 }
 goto label$11;
 label$13:;
 if( PIXELWIDTH$1 > 0ll ) goto label$16;
 TMP$655$1 = (int64)-(PIXELHEIGHT$1 > 0ll);
 goto label$100;
 label$16:;
 TMP$655$1 = 0ll;
 label$100:;
 if( TMP$655$1 == 0ll ) goto label$15;
 {
  PIXELWIDTH$1 = ((int64)__builtin_nearbyint( ((double)PIXELHEIGHT$1 / 0x1.2p+3) * 0x1.p+4 ));
 }
 label$15:;
 label$11:;
 if( COLORBITS$1 >= 16ll ) goto label$18;
 {
  COLORBITS$1 = B$1;
 }
 goto label$17;
 label$18:;
 if( COLORBITS$1 >= 24ll ) goto label$19;
 {
  COLORBITS$1 = 16ll;
 }
 goto label$17;
 label$19:;
 if( COLORBITS$1 >= 32ll ) goto label$20;
 {
  COLORBITS$1 = 24ll;
 }
 goto label$17;
 label$20:;
 {
  COLORBITS$1 = 32ll;
 }
 label$17:;
 if( DEPTHBITS$1 > 0ll ) goto label$22;
 {
  DEPTHBITS$1 = 0ll;
 }
 goto label$21;
 label$22:;
 if( DEPTHBITS$1 >= 16ll ) goto label$23;
 {
  DEPTHBITS$1 = 16ll;
 }
 goto label$21;
 label$23:;
 if( DEPTHBITS$1 >= 32ll ) goto label$24;
 {
  DEPTHBITS$1 = 24ll;
 }
 goto label$21;
 label$24:;
 {
  DEPTHBITS$1 = 32ll;
 }
 label$21:;
 TMP$658$1 = 2147483648ll;
 TMP$657$1 = 2147483648ll;
 TMP$656$1 = 2147483648ll;
 fb_GfxControl_i64( 110, (int64*)&DEPTHBITS$1, &TMP$656$1, &TMP$657$1, &TMP$658$1 );
 if( FULLSCREEN$1 == (boolean)0ll ) goto label$26;
 {
  if( ((int64)-(PIXELWIDTH$1 < 640ll) | (int64)-(PIXELHEIGHT$1 < 480ll)) == 0ll ) goto label$28;
  {
   PIXELWIDTH$1 = 640ll;
   PIXELHEIGHT$1 = 480ll;
  }
  label$28:;
  label$27:;
  int32 FOUNDMODE$2;
  __builtin_memset( &FOUNDMODE$2, 0, 4ll );
  int32 MODE$2;
  int32 vr$31 = fb_GfxScreenList( (int32)COLORBITS$1 );
  MODE$2 = vr$31;
  if( (int64)MODE$2 == 0ll ) goto label$30;
  {
   int64 ERRORVALUE$3;
   ERRORVALUE$3 = 1073741824ll;
   int64 ERRORWIDTH$3;
   __builtin_memset( &ERRORWIDTH$3, 0, 8ll );
   int64 ERRORHEIGHT$3;
   __builtin_memset( &ERRORHEIGHT$3, 0, 8ll );
   label$31:;
   if( (int64)MODE$2 == 0ll ) goto label$32;
   {
    ERRORWIDTH$3 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
    ERRORHEIGHT$3 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
    if( (ERRORWIDTH$3 + ERRORHEIGHT$3) >= ERRORVALUE$3 ) goto label$34;
    {
     ERRORVALUE$3 = ERRORWIDTH$3 + ERRORHEIGHT$3;
     FOUNDMODE$2 = MODE$2;
    }
    label$34:;
    label$33:;
    int32 vr$47 = fb_GfxScreenList( 0 );
    MODE$2 = vr$47;
   }
   goto label$31;
   label$32:;
  }
  goto label$29;
  label$30:;
  {
   int32 BITS$3[2];
   __builtin_memset( (int32*)BITS$3, 0, 8ll );
   struct $8FBARRAY1IiE tmp$659$3;
   *(int32**)&tmp$659$3 = (int32*)BITS$3;
   *(int32**)((uint8*)&tmp$659$3 + 8ll) = (int32*)BITS$3;
   *(int64*)((uint8*)&tmp$659$3 + 16ll) = 8ll;
   *(int64*)((uint8*)&tmp$659$3 + 24ll) = 4ll;
   *(int64*)((uint8*)&tmp$659$3 + 32ll) = 1ll;
   *(int64*)((uint8*)&tmp$659$3 + 40ll) = 49ll;
   *(int64*)((uint8*)&tmp$659$3 + 48ll) = 2ll;
   *(int64*)((uint8*)&tmp$659$3 + 56ll) = 0ll;
   *(int64*)((uint8*)&tmp$659$3 + 64ll) = 1ll;
   if( COLORBITS$1 != 16ll ) goto label$36;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 24;
   }
   goto label$35;
   label$36:;
   if( COLORBITS$1 != 24ll ) goto label$37;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   goto label$35;
   label$37:;
   {
    *(int32*)BITS$3 = 24;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   label$35:;
   {
    int64 I$4;
    I$4 = 0ll;
    label$41:;
    {
     COLORBITS$1 = (int64)*(int32*)((int64)(int32*)BITS$3 + (I$4 << (2ll & 63ll)));
     int32 vr$54 = fb_GfxScreenList( (int32)COLORBITS$1 );
     MODE$2 = vr$54;
     if( (int64)MODE$2 == 0ll ) goto label$43;
     {
      int64 ERRORVALUE$6;
      ERRORVALUE$6 = 1073741824ll;
      int64 ERRORWIDTH$6;
      __builtin_memset( &ERRORWIDTH$6, 0, 8ll );
      int64 ERRORHEIGHT$6;
      __builtin_memset( &ERRORHEIGHT$6, 0, 8ll );
      label$44:;
      if( (int64)MODE$2 == 0ll ) goto label$45;
      {
       ERRORWIDTH$6 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
       ERRORHEIGHT$6 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
       if( (ERRORWIDTH$6 + ERRORHEIGHT$6) >= ERRORVALUE$6 ) goto label$47;
       {
        ERRORVALUE$6 = ERRORWIDTH$6 + ERRORHEIGHT$6;
        FOUNDMODE$2 = MODE$2;
       }
       label$47:;
       label$46:;
       int32 vr$70 = fb_GfxScreenList( 0 );
       MODE$2 = vr$70;
      }
      goto label$44;
      label$45:;
     }
     label$43:;
     label$42:;
     if( (int64)FOUNDMODE$2 == 0ll ) goto label$49;
     {
      goto label$40;
      label$49:;
     }
    }
    label$39:;
    I$4 = I$4 + 1ll;
    label$38:;
    if( I$4 <= 1ll ) goto label$41;
    label$40:;
   }
  }
  label$29:;
  if( (int64)FOUNDMODE$2 == 0ll ) goto label$51;
  {
   PIXELWIDTH$1 = (int64)(((uint64)FOUNDMODE$2 & 4294901760ull) >> (16ll & 63ll));
   PIXELHEIGHT$1 = (int64)((uint64)FOUNDMODE$2 & 65535ull);
  }
  goto label$50;
  label$51:;
  {
   FULLSCREEN$1 = (boolean)0ll;
  }
  label$50:;
 }
 label$26:;
 label$25:;
 int32 vr$82 = fb_GfxScreenRes( (int32)PIXELWIDTH$1, (int32)PIXELHEIGHT$1, (int32)COLORBITS$1, 1, 2, 0 );
 if( (int64)vr$82 == 0ll ) goto label$53;
 {
  FULLSCREEN$1 = (boolean)0ll;
  int32 vr$85 = fb_GfxScreenRes( 640, 350, (int32)B$1, 1, 2, 0 );
  if( (int64)vr$85 == 0ll ) goto label$55;
  {
   FBSTRING TMP$663$3;
   FBSTRING TMP$664$3;
   FBSTRING TMP$665$3;
   FBSTRING TMP$666$3;
   FBSTRING TMP$667$3;
   __builtin_memset( &TMP$667$3, 0, 24ll );
   FBSTRING* vr$88 = fb_LongintToStr( H$1 );
   FBSTRING* vr$89 = fb_LongintToStr( W$1 );
   __builtin_memset( &TMP$663$3, 0, 24ll );
   FBSTRING* vr$92 = fb_StrConcat( &TMP$663$3, (void*)"screenres(", 11ll, (void*)vr$89, -1ll );
   __builtin_memset( &TMP$664$3, 0, 24ll );
   FBSTRING* vr$95 = fb_StrConcat( &TMP$664$3, (void*)vr$92, -1ll, (void*)",", 2ll );
   __builtin_memset( &TMP$665$3, 0, 24ll );
   FBSTRING* vr$98 = fb_StrConcat( &TMP$665$3, (void*)vr$95, -1ll, (void*)vr$88, -1ll );
   __builtin_memset( &TMP$666$3, 0, 24ll );
   FBSTRING* vr$101 = fb_StrConcat( &TMP$666$3, (void*)vr$98, -1ll, (void*)") failed !", 11ll );
   fb_StrAssign( (void*)&TMP$667$3, -1ll, (void*)vr$101, -1ll, 0 );
   ERROREXIT( &TMP$667$3 );
   fb_StrDelete( (FBSTRING*)&TMP$667$3 );
  }
  label$55:;
  label$54:;
 }
 label$53:;
 label$52:;
 fb_GfxFlip( -1, -1 );
 void* vr$105 = fb_GfxGetGLProcAddress( (uint8*)"glCreateShader" );
 GLCREATESHADER$ = (tmp$147)vr$105;
 if( GLCREATESHADER$ != (tmp$147)0ull ) goto label$57;
 {
  FBSTRING TMP$669$2;
  __builtin_memset( &TMP$669$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$669$2, -1ll, (void*)"glCreateShader", 15ll, 0 );
  ERROREXIT( &TMP$669$2 );
  fb_StrDelete( (FBSTRING*)&TMP$669$2 );
  label$57:;
 }
 void* vr$110 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteShader" );
 GLDELETESHADER$ = (tmp$76)vr$110;
 if( GLDELETESHADER$ != (tmp$76)0ull ) goto label$59;
 {
  FBSTRING TMP$671$2;
  __builtin_memset( &TMP$671$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$671$2, -1ll, (void*)"glDeleteShader", 15ll, 0 );
  ERROREXIT( &TMP$671$2 );
  fb_StrDelete( (FBSTRING*)&TMP$671$2 );
  label$59:;
 }
 void* vr$115 = fb_GfxGetGLProcAddress( (uint8*)"glShaderSource" );
 GLSHADERSOURCE$ = (tmp$156)vr$115;
 if( GLSHADERSOURCE$ != (tmp$156)0ull ) goto label$61;
 {
  FBSTRING TMP$673$2;
  __builtin_memset( &TMP$673$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$673$2, -1ll, (void*)"glShaderSource", 15ll, 0 );
  ERROREXIT( &TMP$673$2 );
  fb_StrDelete( (FBSTRING*)&TMP$673$2 );
  label$61:;
 }
 void* vr$120 = fb_GfxGetGLProcAddress( (uint8*)"glCompileShader" );
 GLCOMPILESHADER$ = (tmp$76)vr$120;
 if( GLCOMPILESHADER$ != (tmp$76)0ull ) goto label$63;
 {
  FBSTRING TMP$675$2;
  __builtin_memset( &TMP$675$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$675$2, -1ll, (void*)"glCompileShader", 16ll, 0 );
  ERROREXIT( &TMP$675$2 );
  fb_StrDelete( (FBSTRING*)&TMP$675$2 );
  label$63:;
 }
 void* vr$125 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderiv" );
 GLGETSHADERIV$ = (tmp$137)vr$125;
 if( GLGETSHADERIV$ != (tmp$137)0ull ) goto label$65;
 {
  FBSTRING TMP$677$2;
  __builtin_memset( &TMP$677$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$677$2, -1ll, (void*)"glGetShaderiv", 14ll, 0 );
  ERROREXIT( &TMP$677$2 );
  fb_StrDelete( (FBSTRING*)&TMP$677$2 );
  label$65:;
 }
 void* vr$130 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderInfoLog" );
 GLGETSHADERINFOLOG$ = (tmp$151)vr$130;
 if( GLGETSHADERINFOLOG$ != (tmp$151)0ull ) goto label$67;
 {
  FBSTRING TMP$679$2;
  __builtin_memset( &TMP$679$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$679$2, -1ll, (void*)"glGetShaderInfoLog", 19ll, 0 );
  ERROREXIT( &TMP$679$2 );
  fb_StrDelete( (FBSTRING*)&TMP$679$2 );
  label$67:;
 }
 void* vr$135 = fb_GfxGetGLProcAddress( (uint8*)"glCreateProgram" );
 GLCREATEPROGRAM$ = (tmp$146)vr$135;
 if( GLCREATEPROGRAM$ != (tmp$146)0ull ) goto label$69;
 {
  FBSTRING TMP$681$2;
  __builtin_memset( &TMP$681$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$681$2, -1ll, (void*)"glCreateProgram", 16ll, 0 );
  ERROREXIT( &TMP$681$2 );
  fb_StrDelete( (FBSTRING*)&TMP$681$2 );
  label$69:;
 }
 void* vr$140 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteProgram" );
 GLDELETEPROGRAM$ = (tmp$76)vr$140;
 if( GLDELETEPROGRAM$ != (tmp$76)0ull ) goto label$71;
 {
  FBSTRING TMP$683$2;
  __builtin_memset( &TMP$683$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$683$2, -1ll, (void*)"glDeleteProgram", 16ll, 0 );
  ERROREXIT( &TMP$683$2 );
  fb_StrDelete( (FBSTRING*)&TMP$683$2 );
  label$71:;
 }
 void* vr$145 = fb_GfxGetGLProcAddress( (uint8*)"glAttachShader" );
 GLATTACHSHADER$ = (tmp$136)vr$145;
 if( GLATTACHSHADER$ != (tmp$136)0ull ) goto label$73;
 {
  FBSTRING TMP$685$2;
  __builtin_memset( &TMP$685$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$685$2, -1ll, (void*)"glAttachShader", 15ll, 0 );
  ERROREXIT( &TMP$685$2 );
  fb_StrDelete( (FBSTRING*)&TMP$685$2 );
  label$73:;
 }
 void* vr$150 = fb_GfxGetGLProcAddress( (uint8*)"glDetachShader" );
 GLDETACHSHADER$ = (tmp$136)vr$150;
 if( GLDETACHSHADER$ != (tmp$136)0ull ) goto label$75;
 {
  FBSTRING TMP$687$2;
  __builtin_memset( &TMP$687$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$687$2, -1ll, (void*)"glDetachShader", 15ll, 0 );
  ERROREXIT( &TMP$687$2 );
  fb_StrDelete( (FBSTRING*)&TMP$687$2 );
  label$75:;
 }
 void* vr$155 = fb_GfxGetGLProcAddress( (uint8*)"glLinkProgram" );
 GLLINKPROGRAM$ = (tmp$76)vr$155;
 if( GLLINKPROGRAM$ != (tmp$76)0ull ) goto label$77;
 {
  FBSTRING TMP$689$2;
  __builtin_memset( &TMP$689$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$689$2, -1ll, (void*)"glLinkProgram", 14ll, 0 );
  ERROREXIT( &TMP$689$2 );
  fb_StrDelete( (FBSTRING*)&TMP$689$2 );
  label$77:;
 }
 void* vr$160 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramiv" );
 GLGETPROGRAMIV$ = (tmp$137)vr$160;
 if( GLGETPROGRAMIV$ != (tmp$137)0ull ) goto label$79;
 {
  FBSTRING TMP$691$2;
  __builtin_memset( &TMP$691$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$691$2, -1ll, (void*)"glGetProgramiv", 15ll, 0 );
  ERROREXIT( &TMP$691$2 );
  fb_StrDelete( (FBSTRING*)&TMP$691$2 );
  label$79:;
 }
 void* vr$165 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramInfoLog" );
 GLGETPROGRAMINFOLOG$ = (tmp$151)vr$165;
 if( GLGETPROGRAMINFOLOG$ != (tmp$151)0ull ) goto label$81;
 {
  FBSTRING TMP$693$2;
  __builtin_memset( &TMP$693$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$693$2, -1ll, (void*)"glGetProgramInfoLog", 20ll, 0 );
  ERROREXIT( &TMP$693$2 );
  fb_StrDelete( (FBSTRING*)&TMP$693$2 );
  label$81:;
 }
 void* vr$170 = fb_GfxGetGLProcAddress( (uint8*)"glUseProgram" );
 GLUSEPROGRAM$ = (tmp$76)vr$170;
 if( GLUSEPROGRAM$ != (tmp$76)0ull ) goto label$83;
 {
  FBSTRING TMP$695$2;
  __builtin_memset( &TMP$695$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$695$2, -1ll, (void*)"glUseProgram", 13ll, 0 );
  ERROREXIT( &TMP$695$2 );
  fb_StrDelete( (FBSTRING*)&TMP$695$2 );
  label$83:;
 }
 void* vr$175 = fb_GfxGetGLProcAddress( (uint8*)"glGetUniformLocation" );
 GLGETUNIFORMLOCATION$ = (tmp$150)vr$175;
 if( GLGETUNIFORMLOCATION$ != (tmp$150)0ull ) goto label$85;
 {
  FBSTRING TMP$697$2;
  __builtin_memset( &TMP$697$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$697$2, -1ll, (void*)"glGetUniformLocation", 21ll, 0 );
  ERROREXIT( &TMP$697$2 );
  fb_StrDelete( (FBSTRING*)&TMP$697$2 );
  label$85:;
 }
 void* vr$180 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1i" );
 GLUNIFORM1I$ = (tmp$130)vr$180;
 if( GLUNIFORM1I$ != (tmp$130)0ull ) goto label$87;
 {
  FBSTRING TMP$699$2;
  __builtin_memset( &TMP$699$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$699$2, -1ll, (void*)"glUniform1i", 12ll, 0 );
  ERROREXIT( &TMP$699$2 );
  fb_StrDelete( (FBSTRING*)&TMP$699$2 );
  label$87:;
 }
 void* vr$185 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1f" );
 GLUNIFORM1F$ = (tmp$157)vr$185;
 if( GLUNIFORM1F$ != (tmp$157)0ull ) goto label$89;
 {
  FBSTRING TMP$701$2;
  __builtin_memset( &TMP$701$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$701$2, -1ll, (void*)"glUniform1f", 12ll, 0 );
  ERROREXIT( &TMP$701$2 );
  fb_StrDelete( (FBSTRING*)&TMP$701$2 );
  label$89:;
 }
 void* vr$190 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3f" );
 GLUNIFORM3F$ = (tmp$159)vr$190;
 if( GLUNIFORM3F$ != (tmp$159)0ull ) goto label$91;
 {
  FBSTRING TMP$703$2;
  __builtin_memset( &TMP$703$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$703$2, -1ll, (void*)"glUniform3f", 12ll, 0 );
  ERROREXIT( &TMP$703$2 );
  fb_StrDelete( (FBSTRING*)&TMP$703$2 );
  label$91:;
 }
 void* vr$195 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3fv" );
 GLUNIFORM3FV$ = (tmp$163)vr$195;
 if( GLUNIFORM3FV$ != (tmp$163)0ull ) goto label$93;
 {
  FBSTRING TMP$705$2;
  __builtin_memset( &TMP$705$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$705$2, -1ll, (void*)"glUniform3fv", 13ll, 0 );
  ERROREXIT( &TMP$705$2 );
  fb_StrDelete( (FBSTRING*)&TMP$705$2 );
  label$93:;
 }
 void* vr$200 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4f" );
 GLUNIFORM4F$ = (tmp$160)vr$200;
 if( GLUNIFORM4F$ != (tmp$160)0ull ) goto label$95;
 {
  FBSTRING TMP$707$2;
  __builtin_memset( &TMP$707$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$707$2, -1ll, (void*)"glUniform4f", 12ll, 0 );
  ERROREXIT( &TMP$707$2 );
  fb_StrDelete( (FBSTRING*)&TMP$707$2 );
  label$95:;
 }
 void* vr$205 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4fv" );
 GLUNIFORM4FV$ = (tmp$163)vr$205;
 if( GLUNIFORM4FV$ != (tmp$163)0ull ) goto label$97;
 {
  FBSTRING TMP$709$2;
  __builtin_memset( &TMP$709$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$709$2, -1ll, (void*)"glUniform4fv", 13ll, 0 );
  ERROREXIT( &TMP$709$2 );
  fb_StrDelete( (FBSTRING*)&TMP$709$2 );
  label$97:;
 }
 FBSTRING* vr$210 = fb_StrAllocTempDescZEx( (uint8*)"Loading and compiling shader. Please wait ...", 45ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$210 );
 label$7:;
}

void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* THIS$1 )
{
 label$107:;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) == 0ll ) goto label$110;
 {
  (GLUSEPROGRAM$)( 0u );
  if( (int64)*(uint32*)THIS$1 == 0ll ) goto label$112;
  {
   (GLDETACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
   (GLDELETESHADER$)( *(uint32*)THIS$1 );
  }
  label$112:;
  label$111:;
  (GLDELETEPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 }
 label$110:;
 label$109:;
 label$108:;
 fb_StrDelete( (FBSTRING*)((uint8*)THIS$1 + 8ll) );
}

boolean _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* FILENAME$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$113:;
 FBSTRING CODE$1;
 __builtin_memset( &CODE$1, 0, 24ll );
 int32 HFILE$1;
 int32 vr$2 = fb_FileFree( );
 HFILE$1 = vr$2;
 int32 vr$3 = fb_FileOpen( (FBSTRING*)FILENAME$1, 2u, 0u, 0u, HFILE$1, 0 );
 if( (int64)vr$3 == 0ll ) goto label$116;
 {
  FBSTRING TMP$715$2;
  FBSTRING TMP$716$2;
  FBSTRING TMP$717$2;
  __builtin_memset( &TMP$715$2, 0, 24ll );
  FBSTRING* vr$7 = fb_StrConcat( &TMP$715$2, (void*)"can't read shader: \x22", 21ll, (void*)FILENAME$1, -1ll );
  __builtin_memset( &TMP$716$2, 0, 24ll );
  FBSTRING* vr$10 = fb_StrConcat( &TMP$716$2, (void*)vr$7, -1ll, (void*)"\x22", 2ll );
  __builtin_memset( &TMP$717$2, 0, 24ll );
  FBSTRING* vr$13 = fb_StrConcat( &TMP$717$2, (void*)vr$10, -1ll, (void*)" !", 3ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$13, -1ll, 0 );
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&CODE$1 );
  goto label$114;
 }
 label$116:;
 label$115:;
 label$117:;
 int32 vr$17 = fb_FileEof( HFILE$1 );
 if( ~(int64)vr$17 == 0ll ) goto label$118;
 {
  FBSTRING ALINE$2;
  __builtin_memset( &ALINE$2, 0, 24ll );
  fb_FileLineInput( HFILE$1, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)"\x0A", 2ll, 0 );
  fb_StrDelete( (FBSTRING*)&ALINE$2 );
 }
 goto label$117;
 label$118:;
 fb_FileClose( HFILE$1 );
 boolean vr$27 = _ZN9SHADERTOY11COMPILECODEER8FBSTRING( THIS$1, &CODE$1 );
 fb$result$1 = vr$27;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 goto label$114;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 label$114:;
 return fb$result$1;
}

boolean _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* USERCODE$1 )
{
 FBSTRING TMP$749$1;
 FBSTRING TMP$750$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$119:;
 int32 LOGSIZE$1;
 __builtin_memset( &LOGSIZE$1, 0, 4ll );
 int32 STATUS$1;
 __builtin_memset( &STATUS$1, 0, 4ll );
 FBSTRING FRAGMENTPROLOG$1;
 __builtin_memset( &FRAGMENTPROLOG$1, 0, 24ll );
 FBSTRING VERSION$1;
 __builtin_memset( &VERSION$1, 0, 24ll );
 fb_StrAssign( (void*)&VERSION$1, -1ll, (void*)"#version 460\x0A", 14ll, 0 );
 fb_StrAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)&VERSION$1, -1ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iGlobalTime;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTime;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iResolution;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTimeDelta;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iFrameRate;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform int       iFrame;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iChannelTime[4];\x0A", 36ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iChannelResolution[4];\x0A", 42ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iSampleRate;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iMouse;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iDate;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel0;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel1;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel2;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel3;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform samplerCube iCube;\x0A", 28ll, 0 );
 FBSTRING FRAGMENTEPILOG$1;
 __builtin_memset( &FRAGMENTEPILOG$1, 0, 24ll );
 if( SWCH$ != 0x0p+0 ) goto label$122;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  mainImage(color, gl_FragCoord.xy);\x0A", 38ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 goto label$121;
 label$122:;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define main_image mainImage", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_color fragColor", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_coord fragCoord", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_resolution iResolution", 33ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_time iTime", 21ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  main_image(color, gl_FragCoord.xy);\x0A", 39ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 label$121:;
 FBSTRING FRAGMENTCODE$1;
 __builtin_memset( &TMP$749$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$749$1, (void*)&FRAGMENTPROLOG$1, -1ll, (void*)USERCODE$1, -1ll );
 __builtin_memset( &TMP$750$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$750$1, (void*)vr$48, -1ll, (void*)&FRAGMENTEPILOG$1, -1ll );
 fb_StrInit( (void*)&FRAGMENTCODE$1, -1ll, (void*)vr$51, -1ll, 0 );
 uint32 vr$53 = (GLCREATESHADER$)( 35632u );
 *(uint32*)THIS$1 = vr$53;
 if( (int64)*(uint32*)THIS$1 != 0ll ) goto label$124;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateShader(GL_FRAGMENT_SHADER) failed !", 44ll, 0 );
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$124:;
 label$123:;
 uint8* PCODE$1;
 PCODE$1 = (uint8*)*(uint8**)&FRAGMENTCODE$1;
 (GLSHADERSOURCE$)( *(uint32*)THIS$1, 1, (uint8**)&PCODE$1, (int32*)0ull );
 (GLCOMPILESHADER$)( *(uint32*)THIS$1 );
 (GLGETSHADERIV$)( *(uint32*)THIS$1, 35713u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$126;
 {
  FBSTRING TMP$753$2;
  (GLGETSHADERIV$)( *(uint32*)THIS$1, 35716u, &LOGSIZE$1 );
  FBSTRING* vr$72 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$72, -1ll, 0 );
  (GLGETSHADERINFOLOG$)( *(uint32*)THIS$1, LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$753$2, 0, 24ll );
  FBSTRING* vr$81 = fb_StrConcat( &TMP$753$2, (void*)"glCompileShader(FragmentShader) failed !\x0A", 42ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$81, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$126:;
 label$125:;
 uint32 vr$90 = (GLCREATEPROGRAM$)( );
 *(uint32*)((uint8*)THIS$1 + 4ll) = vr$90;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) != 0ll ) goto label$128;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateProgram() failed !", 27ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$128:;
 label$127:;
 (GLATTACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
 (GLLINKPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35714u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$130;
 {
  FBSTRING TMP$756$2;
  (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35716u, &LOGSIZE$1 );
  FBSTRING* vr$111 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$111, -1ll, 0 );
  (GLGETPROGRAMINFOLOG$)( *(uint32*)((uint8*)THIS$1 + 4ll), LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$756$2, 0, 24ll );
  FBSTRING* vr$120 = fb_StrConcat( &TMP$756$2, (void*)"glLinkProgram() failed !\x0A", 26ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$120, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$130:;
 label$129:;
 fb$result$1 = (boolean)1ll;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 goto label$120;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 label$120:;
 return fb$result$1;
}

void _ZN7VECTOR2C1Ev( struct $7VECTOR2* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 label$131:;
 label$132:;
}

void _ZN7VECTOR2C1Ed( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$133:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$134:;
}

void _ZN7VECTOR2C1Edd( struct $7VECTOR2* THIS$1, double PX$1, double PY$1 )
{
 label$135:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 label$136:;
}

void _ZN7VECTOR2C1ERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$137:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$138:;
}

void _ZN7VECTOR2aSEd( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$139:;
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$140:;
}

void _ZN7VECTOR2aSERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* P$1 )
{
 label$141:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$142:;
}

FBSTRING* _ZN7VECTOR2cv8FBSTRINGEv( struct $7VECTOR2* THIS$1 )
{
 FBSTRING TMP$762$1;
 FBSTRING TMP$763$1;
 FBSTRING TMP$764$1;
 FBSTRING TMP$765$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$143:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$762$1, 0, 24ll );
 FBSTRING* vr$7 = fb_StrConcat( &TMP$762$1, (void*)"(", 2ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$763$1, 0, 24ll );
 FBSTRING* vr$10 = fb_StrConcat( &TMP$763$1, (void*)vr$7, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$764$1, 0, 24ll );
 FBSTRING* vr$13 = fb_StrConcat( &TMP$764$1, (void*)vr$10, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$765$1, 0, 24ll );
 FBSTRING* vr$16 = fb_StrConcat( &TMP$765$1, (void*)vr$13, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$16, -1ll, 0 );
 goto label$144;
 label$144:;
 FBSTRING* vr$19 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$19;
}

void _ZN7VECTOR2pLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$145:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$146:;
}

void _ZN7VECTOR2mIEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$147:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$148:;
}

void _ZN7VECTOR2mLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$149:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$150:;
}

void _ZN7VECTOR2dVEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$151:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$152:;
}

void _ZN7VECTOR2pLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$153:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V2$1 + 8ll);
 label$154:;
}

void _ZN7VECTOR2mIERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$155:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V2$1 + 8ll);
 label$156:;
}

void _ZN7VECTOR2mLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$157:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V2$1 + 8ll);
 label$158:;
}

void _ZN7VECTOR2dVERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$159:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V2$1 + 8ll);
 label$160:;
}

struct $7VECTOR2* _ZN7VECTOR22XXEv( struct $7VECTOR2* tmp$766$1, struct $7VECTOR2* THIS$1 )
{
 label$161:;
 _ZN7VECTOR2C1Edd( tmp$766$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$162;
 label$162:;
 return tmp$766$1;
}

struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2* tmp$768$1, struct $7VECTOR2* THIS$1 )
{
 label$163:;
 _ZN7VECTOR2C1Edd( tmp$768$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$164;
 label$164:;
 return tmp$768$1;
}

struct $7VECTOR2* _ZN7VECTOR22YXEv( struct $7VECTOR2* tmp$770$1, struct $7VECTOR2* THIS$1 )
{
 label$165:;
 _ZN7VECTOR2C1Edd( tmp$770$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$166;
 label$166:;
 return tmp$770$1;
}

struct $7VECTOR2* _ZN7VECTOR22YYEv( struct $7VECTOR2* tmp$772$1, struct $7VECTOR2* THIS$1 )
{
 label$167:;
 _ZN7VECTOR2C1Edd( tmp$772$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$168;
 label$168:;
 return tmp$772$1;
}

struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2* tmp$774$1, struct $7VECTOR2* L$1 )
{
 label$169:;
 _ZN7VECTOR2C1Edd( tmp$774$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$170;
 label$170:;
 return tmp$774$1;
}

struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2* tmp$776$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$171:;
 _ZN7VECTOR2C1Edd( tmp$776$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$172;
 label$172:;
 return tmp$776$1;
}

struct $7VECTOR2* _ZplR7VECTOR2Rd( struct $7VECTOR2* tmp$778$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$173:;
 _ZN7VECTOR2C1Edd( tmp$778$1, *(double*)L$1 + *R$1, *(double*)((uint8*)L$1 + 8ll) + *R$1 );
 goto label$174;
 label$174:;
 return tmp$778$1;
}

struct $7VECTOR2* _ZplRdR7VECTOR2( struct $7VECTOR2* tmp$780$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$175:;
 _ZN7VECTOR2C1Edd( tmp$780$1, *(double*)R$1 + *L$1, *(double*)((uint8*)R$1 + 8ll) + *L$1 );
 goto label$176;
 label$176:;
 return tmp$780$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2* tmp$782$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$177:;
 _ZN7VECTOR2C1Edd( tmp$782$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$178;
 label$178:;
 return tmp$782$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2* tmp$784$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$179:;
 _ZN7VECTOR2C1Edd( tmp$784$1, *(double*)L$1 - *R$1, *(double*)((uint8*)L$1 + 8ll) - *R$1 );
 goto label$180;
 label$180:;
 return tmp$784$1;
}

struct $7VECTOR2* _ZmiRdR7VECTOR2( struct $7VECTOR2* tmp$786$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$181:;
 _ZN7VECTOR2C1Edd( tmp$786$1, *(double*)R$1 - *L$1, *(double*)((uint8*)R$1 + 8ll) - *L$1 );
 goto label$182;
 label$182:;
 return tmp$786$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2* tmp$788$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$183:;
 _ZN7VECTOR2C1Edd( tmp$788$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$184;
 label$184:;
 return tmp$788$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2* tmp$790$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$185:;
 _ZN7VECTOR2C1Edd( tmp$790$1, *(double*)L$1 * *R$1, *(double*)((uint8*)L$1 + 8ll) * *R$1 );
 goto label$186;
 label$186:;
 return tmp$790$1;
}

struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2* tmp$792$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$187:;
 _ZN7VECTOR2C1Edd( tmp$792$1, *L$1 * *(double*)R$1, *L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$188;
 label$188:;
 return tmp$792$1;
}

struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2* tmp$794$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$189:;
 _ZN7VECTOR2C1Edd( tmp$794$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$190;
 label$190:;
 return tmp$794$1;
}

int64 _ZeqR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$191:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$194;
 {
  fb$result$1 = 0ll;
  goto label$192;
  label$194:;
 }
 fb$result$1 = -1ll;
 goto label$192;
 label$192:;
 return fb$result$1;
}

int64 _ZneR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$195:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$198;
 {
  fb$result$1 = -1ll;
  goto label$196;
  label$198:;
 }
 fb$result$1 = 0ll;
 goto label$196;
 label$196:;
 return fb$result$1;
}

void _ZN7VECTOR3C1Ev( struct $7VECTOR3* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 label$199:;
 label$200:;
}

void _ZN7VECTOR3C1Ed( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$201:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 label$202:;
}

void _ZN7VECTOR3C1Eddd( struct $7VECTOR3* THIS$1, double PX$1, double PY$1, double PZ$1 )
{
 label$203:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 label$204:;
}

void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3* THIS$1, struct $7VECTOR2* V2$1, double PZ$1 )
{
 label$205:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 label$206:;
}

void _ZN7VECTOR3C1EdR7VECTOR2( struct $7VECTOR3* THIS$1, double PX$1, struct $7VECTOR2* V2$1 )
{
 label$207:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$208:;
}

void _ZN7VECTOR3C1ERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$209:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 label$210:;
}

void _ZN7VECTOR3aSEd( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$211:;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 label$212:;
}

void _ZN7VECTOR3aSER7VECTOR2( struct $7VECTOR3* THIS$1, struct $7VECTOR2* P$1 )
{
 label$213:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = 0x1.p+0;
 label$214:;
}

void _ZN7VECTOR3aSERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* P$1 )
{
 label$215:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 label$216:;
}

FBSTRING* _ZN7VECTOR3cv8FBSTRINGEv( struct $7VECTOR3* THIS$1 )
{
 FBSTRING TMP$799$1;
 FBSTRING TMP$800$1;
 FBSTRING TMP$801$1;
 FBSTRING TMP$802$1;
 FBSTRING TMP$803$1;
 FBSTRING TMP$804$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$217:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$799$1, 0, 24ll );
 FBSTRING* vr$9 = fb_StrConcat( &TMP$799$1, (void*)"(", 2ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$800$1, 0, 24ll );
 FBSTRING* vr$12 = fb_StrConcat( &TMP$800$1, (void*)vr$9, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$801$1, 0, 24ll );
 FBSTRING* vr$15 = fb_StrConcat( &TMP$801$1, (void*)vr$12, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$802$1, 0, 24ll );
 FBSTRING* vr$18 = fb_StrConcat( &TMP$802$1, (void*)vr$15, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$803$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$803$1, (void*)vr$18, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$804$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$804$1, (void*)vr$21, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$24, -1ll, 0 );
 goto label$218;
 label$218:;
 FBSTRING* vr$27 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$27;
}

uint32 _ZN7VECTOR3cvjEv( struct $7VECTOR3* THIS$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$219:;
 uint32 T$1;
 uint32 A$1;
 A$1 = 255u;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$222;
 {
 }
 goto label$221;
 label$222:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$223;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$221;
 label$223:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$221:;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$225;
 {
 }
 goto label$224;
 label$225:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$226;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$224;
 label$226:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$224:;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$228;
 {
 }
 goto label$227;
 label$228:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$229;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$227;
 label$229:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$227:;
 fb$result$1 = A$1;
 goto label$220;
 label$220:;
 return fb$result$1;
}

void _ZN7VECTOR3pLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$230:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 label$231:;
}

void _ZN7VECTOR3mIEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$232:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 label$233:;
}

void _ZN7VECTOR3mLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$234:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 label$235:;
}

void _ZN7VECTOR3dVEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$236:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 label$237:;
}

void _ZN7VECTOR3pLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$238:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 label$239:;
}

void _ZN7VECTOR3mIERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$240:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 label$241:;
}

void _ZN7VECTOR3mLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$242:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 label$243:;
}

void _ZN7VECTOR3dVERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$244:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 label$245:;
}

struct $7VECTOR2* _ZN7VECTOR32XXEv( struct $7VECTOR2* tmp$805$1, struct $7VECTOR3* THIS$1 )
{
 label$246:;
 _ZN7VECTOR2C1Edd( tmp$805$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$247;
 label$247:;
 return tmp$805$1;
}

struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2* tmp$807$1, struct $7VECTOR3* THIS$1 )
{
 label$248:;
 _ZN7VECTOR2C1Edd( tmp$807$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$249;
 label$249:;
 return tmp$807$1;
}

struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2* tmp$809$1, struct $7VECTOR3* THIS$1 )
{
 label$250:;
 _ZN7VECTOR2C1Edd( tmp$809$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$251;
 label$251:;
 return tmp$809$1;
}

struct $7VECTOR2* _ZN7VECTOR32YXEv( struct $7VECTOR2* tmp$811$1, struct $7VECTOR3* THIS$1 )
{
 label$252:;
 _ZN7VECTOR2C1Edd( tmp$811$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$253;
 label$253:;
 return tmp$811$1;
}

struct $7VECTOR2* _ZN7VECTOR32YYEv( struct $7VECTOR2* tmp$813$1, struct $7VECTOR3* THIS$1 )
{
 label$254:;
 _ZN7VECTOR2C1Edd( tmp$813$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$255;
 label$255:;
 return tmp$813$1;
}

struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2* tmp$815$1, struct $7VECTOR3* THIS$1 )
{
 label$256:;
 _ZN7VECTOR2C1Edd( tmp$815$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$257;
 label$257:;
 return tmp$815$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZXEv( struct $7VECTOR2* tmp$817$1, struct $7VECTOR3* THIS$1 )
{
 label$258:;
 _ZN7VECTOR2C1Edd( tmp$817$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$259;
 label$259:;
 return tmp$817$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZYEv( struct $7VECTOR2* tmp$819$1, struct $7VECTOR3* THIS$1 )
{
 label$260:;
 _ZN7VECTOR2C1Edd( tmp$819$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$261;
 label$261:;
 return tmp$819$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZZEv( struct $7VECTOR2* tmp$821$1, struct $7VECTOR3* THIS$1 )
{
 label$262:;
 _ZN7VECTOR2C1Edd( tmp$821$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$263;
 label$263:;
 return tmp$821$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXXEv( struct $7VECTOR3* tmp$823$1, struct $7VECTOR3* THIS$1 )
{
 label$264:;
 _ZN7VECTOR3C1Eddd( tmp$823$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$265;
 label$265:;
 return tmp$823$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXYEv( struct $7VECTOR3* tmp$825$1, struct $7VECTOR3* THIS$1 )
{
 label$266:;
 _ZN7VECTOR3C1Eddd( tmp$825$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$267;
 label$267:;
 return tmp$825$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXZEv( struct $7VECTOR3* tmp$827$1, struct $7VECTOR3* THIS$1 )
{
 label$268:;
 _ZN7VECTOR3C1Eddd( tmp$827$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$269;
 label$269:;
 return tmp$827$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3* tmp$829$1, struct $7VECTOR3* THIS$1 )
{
 label$270:;
 _ZN7VECTOR3C1Eddd( tmp$829$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$271;
 label$271:;
 return tmp$829$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYYEv( struct $7VECTOR3* tmp$831$1, struct $7VECTOR3* THIS$1 )
{
 label$272:;
 _ZN7VECTOR3C1Eddd( tmp$831$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$273;
 label$273:;
 return tmp$831$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYZEv( struct $7VECTOR3* tmp$833$1, struct $7VECTOR3* THIS$1 )
{
 label$274:;
 _ZN7VECTOR3C1Eddd( tmp$833$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$275;
 label$275:;
 return tmp$833$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZXEv( struct $7VECTOR3* tmp$835$1, struct $7VECTOR3* THIS$1 )
{
 label$276:;
 _ZN7VECTOR3C1Eddd( tmp$835$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$277;
 label$277:;
 return tmp$835$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZYEv( struct $7VECTOR3* tmp$837$1, struct $7VECTOR3* THIS$1 )
{
 label$278:;
 _ZN7VECTOR3C1Eddd( tmp$837$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$279;
 label$279:;
 return tmp$837$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZZEv( struct $7VECTOR3* tmp$839$1, struct $7VECTOR3* THIS$1 )
{
 label$280:;
 _ZN7VECTOR3C1Eddd( tmp$839$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$281;
 label$281:;
 return tmp$839$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXXEv( struct $7VECTOR3* tmp$841$1, struct $7VECTOR3* THIS$1 )
{
 label$282:;
 _ZN7VECTOR3C1Eddd( tmp$841$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$283;
 label$283:;
 return tmp$841$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXYEv( struct $7VECTOR3* tmp$843$1, struct $7VECTOR3* THIS$1 )
{
 label$284:;
 _ZN7VECTOR3C1Eddd( tmp$843$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$285;
 label$285:;
 return tmp$843$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXZEv( struct $7VECTOR3* tmp$845$1, struct $7VECTOR3* THIS$1 )
{
 label$286:;
 _ZN7VECTOR3C1Eddd( tmp$845$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$287;
 label$287:;
 return tmp$845$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYXEv( struct $7VECTOR3* tmp$847$1, struct $7VECTOR3* THIS$1 )
{
 label$288:;
 _ZN7VECTOR3C1Eddd( tmp$847$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$289;
 label$289:;
 return tmp$847$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYYEv( struct $7VECTOR3* tmp$849$1, struct $7VECTOR3* THIS$1 )
{
 label$290:;
 _ZN7VECTOR3C1Eddd( tmp$849$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$291;
 label$291:;
 return tmp$849$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYZEv( struct $7VECTOR3* tmp$851$1, struct $7VECTOR3* THIS$1 )
{
 label$292:;
 _ZN7VECTOR3C1Eddd( tmp$851$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$293;
 label$293:;
 return tmp$851$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZXEv( struct $7VECTOR3* tmp$853$1, struct $7VECTOR3* THIS$1 )
{
 label$294:;
 _ZN7VECTOR3C1Eddd( tmp$853$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$295;
 label$295:;
 return tmp$853$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZYEv( struct $7VECTOR3* tmp$855$1, struct $7VECTOR3* THIS$1 )
{
 label$296:;
 _ZN7VECTOR3C1Eddd( tmp$855$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$297;
 label$297:;
 return tmp$855$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZZEv( struct $7VECTOR3* tmp$857$1, struct $7VECTOR3* THIS$1 )
{
 label$298:;
 _ZN7VECTOR3C1Eddd( tmp$857$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$299;
 label$299:;
 return tmp$857$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXXEv( struct $7VECTOR3* tmp$859$1, struct $7VECTOR3* THIS$1 )
{
 label$300:;
 _ZN7VECTOR3C1Eddd( tmp$859$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$301;
 label$301:;
 return tmp$859$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXYEv( struct $7VECTOR3* tmp$861$1, struct $7VECTOR3* THIS$1 )
{
 label$302:;
 _ZN7VECTOR3C1Eddd( tmp$861$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$303;
 label$303:;
 return tmp$861$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXZEv( struct $7VECTOR3* tmp$863$1, struct $7VECTOR3* THIS$1 )
{
 label$304:;
 _ZN7VECTOR3C1Eddd( tmp$863$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$305;
 label$305:;
 return tmp$863$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYXEv( struct $7VECTOR3* tmp$865$1, struct $7VECTOR3* THIS$1 )
{
 label$306:;
 _ZN7VECTOR3C1Eddd( tmp$865$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$307;
 label$307:;
 return tmp$865$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYYEv( struct $7VECTOR3* tmp$867$1, struct $7VECTOR3* THIS$1 )
{
 label$308:;
 _ZN7VECTOR3C1Eddd( tmp$867$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$309;
 label$309:;
 return tmp$867$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYZEv( struct $7VECTOR3* tmp$869$1, struct $7VECTOR3* THIS$1 )
{
 label$310:;
 _ZN7VECTOR3C1Eddd( tmp$869$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$311;
 label$311:;
 return tmp$869$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZXEv( struct $7VECTOR3* tmp$871$1, struct $7VECTOR3* THIS$1 )
{
 label$312:;
 _ZN7VECTOR3C1Eddd( tmp$871$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$313;
 label$313:;
 return tmp$871$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZYEv( struct $7VECTOR3* tmp$873$1, struct $7VECTOR3* THIS$1 )
{
 label$314:;
 _ZN7VECTOR3C1Eddd( tmp$873$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$315;
 label$315:;
 return tmp$873$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZZEv( struct $7VECTOR3* tmp$875$1, struct $7VECTOR3* THIS$1 )
{
 label$316:;
 _ZN7VECTOR3C1Eddd( tmp$875$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$317;
 label$317:;
 return tmp$875$1;
}

struct $7VECTOR3* _ZN7VECTOR33RGBEv( struct $7VECTOR3* tmp$877$1, struct $7VECTOR3* THIS$1 )
{
 label$318:;
 _ZN7VECTOR3C1Eddd( tmp$877$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$319;
 label$319:;
 return tmp$877$1;
}

struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3* tmp$879$1, struct $7VECTOR3* L$1 )
{
 label$320:;
 _ZN7VECTOR3C1Eddd( tmp$879$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)((uint8*)L$1 + 16ll)) );
 goto label$321;
 label$321:;
 return tmp$879$1;
}

struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3* tmp$881$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$322:;
 _ZN7VECTOR3C1Eddd( tmp$881$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)((uint8*)L$1 + 16ll) + R$1 );
 goto label$323;
 label$323:;
 return tmp$881$1;
}

struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3* tmp$883$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$324:;
 _ZN7VECTOR3C1Eddd( tmp$883$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)((uint8*)R$1 + 16ll) + L$1 );
 goto label$325;
 label$325:;
 return tmp$883$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3d( struct $7VECTOR3* tmp$885$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$326:;
 _ZN7VECTOR3C1Eddd( tmp$885$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)((uint8*)L$1 + 16ll) - R$1 );
 goto label$327;
 label$327:;
 return tmp$885$1;
}

struct $7VECTOR3* _ZmidR7VECTOR3( struct $7VECTOR3* tmp$887$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$328:;
 _ZN7VECTOR3C1Eddd( tmp$887$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)((uint8*)R$1 + 16ll) - L$1 );
 goto label$329;
 label$329:;
 return tmp$887$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3* tmp$889$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$330:;
 _ZN7VECTOR3C1Eddd( tmp$889$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1 );
 goto label$331;
 label$331:;
 return tmp$889$1;
}

struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3* tmp$891$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$332:;
 _ZN7VECTOR3C1Eddd( tmp$891$1, *(double*)R$1 * L$1, *(double*)((uint8*)R$1 + 8ll) * L$1, *(double*)((uint8*)R$1 + 16ll) * L$1 );
 goto label$333;
 label$333:;
 return tmp$891$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3d( struct $7VECTOR3* tmp$893$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$334:;
 _ZN7VECTOR3C1Eddd( tmp$893$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1 );
 goto label$335;
 label$335:;
 return tmp$893$1;
}

struct $7VECTOR3* _ZdvdR7VECTOR3( struct $7VECTOR3* tmp$895$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$336:;
 _ZN7VECTOR3C1Eddd( tmp$895$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1 );
 goto label$337;
 label$337:;
 return tmp$895$1;
}

struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3* tmp$897$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$338:;
 _ZN7VECTOR3C1Eddd( tmp$897$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll) );
 goto label$339;
 label$339:;
 return tmp$897$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3* tmp$899$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$340:;
 _ZN7VECTOR3C1Eddd( tmp$899$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll) );
 goto label$341;
 label$341:;
 return tmp$899$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3* tmp$901$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$342:;
 _ZN7VECTOR3C1Eddd( tmp$901$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll) );
 goto label$343;
 label$343:;
 return tmp$901$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3* tmp$903$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$344:;
 _ZN7VECTOR3C1Eddd( tmp$903$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll) );
 goto label$345;
 label$345:;
 return tmp$903$1;
}

int64 _ZeqR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$346:;
 if( (((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) == 0ll ) goto label$349;
 {
  fb$result$1 = 0ll;
  goto label$347;
  label$349:;
 }
 fb$result$1 = -1ll;
 goto label$347;
 label$347:;
 return fb$result$1;
}

int64 _ZneR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$350:;
 if( (((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) == 0ll ) goto label$353;
 {
  fb$result$1 = -1ll;
  goto label$351;
  label$353:;
 }
 fb$result$1 = 0ll;
 goto label$351;
 label$351:;
 return fb$result$1;
}

void _ZN7VECTOR4C1Ev( struct $7VECTOR4* THIS$1 )
{
 label$354:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$355:;
}

void _ZN7VECTOR4C1Edd( struct $7VECTOR4* THIS$1, double PXYZ$1, double PW$1 )
{
 label$356:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$357:;
}

void _ZN7VECTOR4C1Edddd( struct $7VECTOR4* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$358:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$359:;
}

void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, double PZ$1, double PW$1 )
{
 label$360:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$361:;
}

void _ZN7VECTOR4C1ER7VECTOR2S1_( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, struct $7VECTOR2* V2$1 )
{
 label$362:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$363:;
}

void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1, double PW$1 )
{
 label$364:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$365:;
}

void _ZN7VECTOR4C1EdR7VECTOR3( struct $7VECTOR4* THIS$1, double PX$1, struct $7VECTOR3* V3$1 )
{
 label$366:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V3$1 + 16ll);
 label$367:;
}

void _ZN7VECTOR4C1ERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$368:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V4$1 + 24ll);
 label$369:;
}

void _ZN7VECTOR4aSEd( struct $7VECTOR4* THIS$1, double PXYZW$1 )
{
 label$370:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZW$1;
 label$371:;
}

void _ZN7VECTOR4aSER7VECTOR2( struct $7VECTOR4* THIS$1, struct $7VECTOR2* P$1 )
{
 label$372:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$373:;
}

void _ZN7VECTOR4aSER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* P$1 )
{
 label$374:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$375:;
}

void _ZN7VECTOR4aSERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* P$1 )
{
 label$376:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll);
 label$377:;
}

FBSTRING* _ZN7VECTOR4cv8FBSTRINGEv( struct $7VECTOR4* THIS$1 )
{
 FBSTRING TMP$909$1;
 FBSTRING TMP$910$1;
 FBSTRING TMP$911$1;
 FBSTRING TMP$912$1;
 FBSTRING TMP$913$1;
 FBSTRING TMP$914$1;
 FBSTRING TMP$915$1;
 FBSTRING TMP$916$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$378:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$909$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$909$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$910$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$910$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$911$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$911$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$912$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$912$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$913$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$913$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$914$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$914$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$915$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$915$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$916$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$916$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$379;
 label$379:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint32 _ZN7VECTOR4cvjEv( struct $7VECTOR4* THIS$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$380:;
 uint32 C$1;
 __builtin_memset( &C$1, 0, 4ll );
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x1.010101010101p-8 ) goto label$383;
 {
 }
 goto label$382;
 label$383:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$384;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$382;
 label$384:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 )));
 }
 label$382:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$386;
 {
 }
 goto label$385;
 label$386:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$387;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$385;
 label$387:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 )));
 }
 label$385:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$389;
 {
 }
 goto label$388;
 label$389:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$390;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$388;
 label$390:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 )));
 }
 label$388:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x1.010101010101p-8 ) goto label$392;
 {
 }
 goto label$391;
 label$392:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$393;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$391;
 label$393:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 )));
 }
 label$391:;
 fb$result$1 = C$1;
 goto label$381;
 label$381:;
 return fb$result$1;
}

void _ZN7VECTOR4pLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$394:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + V$1;
 label$395:;
}

void _ZN7VECTOR4mIEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$396:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - V$1;
 label$397:;
}

void _ZN7VECTOR4mLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$398:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * V$1;
 label$399:;
}

void _ZN7VECTOR4dVEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$400:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / V$1;
 label$401:;
}

void _ZN7VECTOR4pLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$402:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 label$403:;
}

void _ZN7VECTOR4mIER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$404:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 label$405:;
}

void _ZN7VECTOR4mLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$406:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 label$407:;
}

void _ZN7VECTOR4dVER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$408:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 label$409:;
}

void _ZN7VECTOR4pLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$410:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + *(double*)((uint8*)V4$1 + 24ll);
 label$411:;
}

void _ZN7VECTOR4mIERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$412:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - *(double*)((uint8*)V4$1 + 24ll);
 label$413:;
}

void _ZN7VECTOR4mLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$414:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * *(double*)((uint8*)V4$1 + 24ll);
 label$415:;
}

void _ZN7VECTOR4dVERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$416:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / *(double*)((uint8*)V4$1 + 24ll);
 label$417:;
}

struct $7VECTOR2* _ZN7VECTOR42XXEv( struct $7VECTOR2* tmp$917$1, struct $7VECTOR4* THIS$1 )
{
 label$418:;
 _ZN7VECTOR2C1Edd( tmp$917$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$419;
 label$419:;
 return tmp$917$1;
}

struct $7VECTOR2* _ZN7VECTOR42XYEv( struct $7VECTOR2* tmp$919$1, struct $7VECTOR4* THIS$1 )
{
 label$420:;
 _ZN7VECTOR2C1Edd( tmp$919$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$421;
 label$421:;
 return tmp$919$1;
}

struct $7VECTOR2* _ZN7VECTOR42XZEv( struct $7VECTOR2* tmp$921$1, struct $7VECTOR4* THIS$1 )
{
 label$422:;
 _ZN7VECTOR2C1Edd( tmp$921$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$423;
 label$423:;
 return tmp$921$1;
}

struct $7VECTOR2* _ZN7VECTOR42YXEv( struct $7VECTOR2* tmp$923$1, struct $7VECTOR4* THIS$1 )
{
 label$424:;
 _ZN7VECTOR2C1Edd( tmp$923$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$425;
 label$425:;
 return tmp$923$1;
}

struct $7VECTOR2* _ZN7VECTOR42YYEv( struct $7VECTOR2* tmp$925$1, struct $7VECTOR4* THIS$1 )
{
 label$426:;
 _ZN7VECTOR2C1Edd( tmp$925$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$427;
 label$427:;
 return tmp$925$1;
}

struct $7VECTOR2* _ZN7VECTOR42YZEv( struct $7VECTOR2* tmp$927$1, struct $7VECTOR4* THIS$1 )
{
 label$428:;
 _ZN7VECTOR2C1Edd( tmp$927$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$429;
 label$429:;
 return tmp$927$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZXEv( struct $7VECTOR2* tmp$929$1, struct $7VECTOR4* THIS$1 )
{
 label$430:;
 _ZN7VECTOR2C1Edd( tmp$929$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$431;
 label$431:;
 return tmp$929$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZYEv( struct $7VECTOR2* tmp$931$1, struct $7VECTOR4* THIS$1 )
{
 label$432:;
 _ZN7VECTOR2C1Edd( tmp$931$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$433;
 label$433:;
 return tmp$931$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZZEv( struct $7VECTOR2* tmp$933$1, struct $7VECTOR4* THIS$1 )
{
 label$434:;
 _ZN7VECTOR2C1Edd( tmp$933$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$435;
 label$435:;
 return tmp$933$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXXEv( struct $7VECTOR3* tmp$935$1, struct $7VECTOR4* THIS$1 )
{
 label$436:;
 _ZN7VECTOR3C1Eddd( tmp$935$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$437;
 label$437:;
 return tmp$935$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXYEv( struct $7VECTOR3* tmp$937$1, struct $7VECTOR4* THIS$1 )
{
 label$438:;
 _ZN7VECTOR3C1Eddd( tmp$937$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$439;
 label$439:;
 return tmp$937$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXZEv( struct $7VECTOR3* tmp$939$1, struct $7VECTOR4* THIS$1 )
{
 label$440:;
 _ZN7VECTOR3C1Eddd( tmp$939$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$441;
 label$441:;
 return tmp$939$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYXEv( struct $7VECTOR3* tmp$941$1, struct $7VECTOR4* THIS$1 )
{
 label$442:;
 _ZN7VECTOR3C1Eddd( tmp$941$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$443;
 label$443:;
 return tmp$941$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYYEv( struct $7VECTOR3* tmp$943$1, struct $7VECTOR4* THIS$1 )
{
 label$444:;
 _ZN7VECTOR3C1Eddd( tmp$943$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$445;
 label$445:;
 return tmp$943$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYZEv( struct $7VECTOR3* tmp$945$1, struct $7VECTOR4* THIS$1 )
{
 label$446:;
 _ZN7VECTOR3C1Eddd( tmp$945$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$447;
 label$447:;
 return tmp$945$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZXEv( struct $7VECTOR3* tmp$947$1, struct $7VECTOR4* THIS$1 )
{
 label$448:;
 _ZN7VECTOR3C1Eddd( tmp$947$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$449;
 label$449:;
 return tmp$947$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZYEv( struct $7VECTOR3* tmp$949$1, struct $7VECTOR4* THIS$1 )
{
 label$450:;
 _ZN7VECTOR3C1Eddd( tmp$949$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$451;
 label$451:;
 return tmp$949$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZZEv( struct $7VECTOR3* tmp$951$1, struct $7VECTOR4* THIS$1 )
{
 label$452:;
 _ZN7VECTOR3C1Eddd( tmp$951$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$453;
 label$453:;
 return tmp$951$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXXEv( struct $7VECTOR3* tmp$953$1, struct $7VECTOR4* THIS$1 )
{
 label$454:;
 _ZN7VECTOR3C1Eddd( tmp$953$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$455;
 label$455:;
 return tmp$953$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXYEv( struct $7VECTOR3* tmp$955$1, struct $7VECTOR4* THIS$1 )
{
 label$456:;
 _ZN7VECTOR3C1Eddd( tmp$955$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$457;
 label$457:;
 return tmp$955$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXZEv( struct $7VECTOR3* tmp$957$1, struct $7VECTOR4* THIS$1 )
{
 label$458:;
 _ZN7VECTOR3C1Eddd( tmp$957$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$459;
 label$459:;
 return tmp$957$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYXEv( struct $7VECTOR3* tmp$959$1, struct $7VECTOR4* THIS$1 )
{
 label$460:;
 _ZN7VECTOR3C1Eddd( tmp$959$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$461;
 label$461:;
 return tmp$959$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYYEv( struct $7VECTOR3* tmp$961$1, struct $7VECTOR4* THIS$1 )
{
 label$462:;
 _ZN7VECTOR3C1Eddd( tmp$961$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$463;
 label$463:;
 return tmp$961$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYZEv( struct $7VECTOR3* tmp$963$1, struct $7VECTOR4* THIS$1 )
{
 label$464:;
 _ZN7VECTOR3C1Eddd( tmp$963$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$465;
 label$465:;
 return tmp$963$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZXEv( struct $7VECTOR3* tmp$965$1, struct $7VECTOR4* THIS$1 )
{
 label$466:;
 _ZN7VECTOR3C1Eddd( tmp$965$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$467;
 label$467:;
 return tmp$965$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZYEv( struct $7VECTOR3* tmp$967$1, struct $7VECTOR4* THIS$1 )
{
 label$468:;
 _ZN7VECTOR3C1Eddd( tmp$967$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$469;
 label$469:;
 return tmp$967$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZZEv( struct $7VECTOR3* tmp$969$1, struct $7VECTOR4* THIS$1 )
{
 label$470:;
 _ZN7VECTOR3C1Eddd( tmp$969$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$471;
 label$471:;
 return tmp$969$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXXEv( struct $7VECTOR3* tmp$971$1, struct $7VECTOR4* THIS$1 )
{
 label$472:;
 _ZN7VECTOR3C1Eddd( tmp$971$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$473;
 label$473:;
 return tmp$971$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXYEv( struct $7VECTOR3* tmp$973$1, struct $7VECTOR4* THIS$1 )
{
 label$474:;
 _ZN7VECTOR3C1Eddd( tmp$973$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$475;
 label$475:;
 return tmp$973$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXZEv( struct $7VECTOR3* tmp$975$1, struct $7VECTOR4* THIS$1 )
{
 label$476:;
 _ZN7VECTOR3C1Eddd( tmp$975$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$477;
 label$477:;
 return tmp$975$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYXEv( struct $7VECTOR3* tmp$977$1, struct $7VECTOR4* THIS$1 )
{
 label$478:;
 _ZN7VECTOR3C1Eddd( tmp$977$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$479;
 label$479:;
 return tmp$977$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYYEv( struct $7VECTOR3* tmp$979$1, struct $7VECTOR4* THIS$1 )
{
 label$480:;
 _ZN7VECTOR3C1Eddd( tmp$979$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$481;
 label$481:;
 return tmp$979$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYZEv( struct $7VECTOR3* tmp$981$1, struct $7VECTOR4* THIS$1 )
{
 label$482:;
 _ZN7VECTOR3C1Eddd( tmp$981$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$483;
 label$483:;
 return tmp$981$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZXEv( struct $7VECTOR3* tmp$983$1, struct $7VECTOR4* THIS$1 )
{
 label$484:;
 _ZN7VECTOR3C1Eddd( tmp$983$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$485;
 label$485:;
 return tmp$983$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZYEv( struct $7VECTOR3* tmp$985$1, struct $7VECTOR4* THIS$1 )
{
 label$486:;
 _ZN7VECTOR3C1Eddd( tmp$985$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$487;
 label$487:;
 return tmp$985$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZZEv( struct $7VECTOR3* tmp$987$1, struct $7VECTOR4* THIS$1 )
{
 label$488:;
 _ZN7VECTOR3C1Eddd( tmp$987$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$489;
 label$489:;
 return tmp$987$1;
}

struct $7VECTOR3* _ZN7VECTOR43RGBEv( struct $7VECTOR3* tmp$989$1, struct $7VECTOR4* THIS$1 )
{
 label$490:;
 _ZN7VECTOR3C1Eddd( tmp$989$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$491;
 label$491:;
 return tmp$989$1;
}

struct $7VECTOR4* _ZN7VECTOR44RGBAEv( struct $7VECTOR4* tmp$991$1, struct $7VECTOR4* THIS$1 )
{
 label$492:;
 _ZN7VECTOR4C1Edddd( tmp$991$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$493;
 label$493:;
 return tmp$991$1;
}

struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4* tmp$993$1, struct $7VECTOR4* L$1 )
{
 label$494:;
 _ZN7VECTOR4C1Edddd( tmp$993$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)((uint8*)L$1 + 16ll)), -(*(double*)((uint8*)L$1 + 24ll)) );
 goto label$495;
 label$495:;
 return tmp$993$1;
}

struct $7VECTOR4* _ZplR7VECTOR4S0_( struct $7VECTOR4* tmp$995$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$496:;
 _ZN7VECTOR4C1Edddd( tmp$995$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 24ll) );
 goto label$497;
 label$497:;
 return tmp$995$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4* tmp$997$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$498:;
 _ZN7VECTOR4C1Edddd( tmp$997$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 24ll) );
 goto label$499;
 label$499:;
 return tmp$997$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4S0_( struct $7VECTOR4* tmp$999$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$500:;
 _ZN7VECTOR4C1Edddd( tmp$999$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll) );
 goto label$501;
 label$501:;
 return tmp$999$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4S0_( struct $7VECTOR4* tmp$1001$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$502:;
 _ZN7VECTOR4C1Edddd( tmp$1001$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 24ll) );
 goto label$503;
 label$503:;
 return tmp$1001$1;
}

struct $7VECTOR4* _ZplR7VECTOR4d( struct $7VECTOR4* tmp$1003$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$504:;
 _ZN7VECTOR4C1Edddd( tmp$1003$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)((uint8*)L$1 + 16ll) + R$1, *(double*)((uint8*)L$1 + 24ll) + R$1 );
 goto label$505;
 label$505:;
 return tmp$1003$1;
}

struct $7VECTOR4* _ZpldR7VECTOR4( struct $7VECTOR4* tmp$1005$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$506:;
 _ZN7VECTOR4C1Edddd( tmp$1005$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)((uint8*)R$1 + 16ll) + L$1, *(double*)((uint8*)R$1 + 24ll) + L$1 );
 goto label$507;
 label$507:;
 return tmp$1005$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4d( struct $7VECTOR4* tmp$1007$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$508:;
 _ZN7VECTOR4C1Edddd( tmp$1007$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)((uint8*)L$1 + 16ll) - R$1, *(double*)((uint8*)L$1 + 24ll) - R$1 );
 goto label$509;
 label$509:;
 return tmp$1007$1;
}

struct $7VECTOR4* _ZmidR7VECTOR4( struct $7VECTOR4* tmp$1009$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$510:;
 _ZN7VECTOR4C1Edddd( tmp$1009$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)((uint8*)R$1 + 16ll) - L$1, *(double*)((uint8*)R$1 + 24ll) - L$1 );
 goto label$511;
 label$511:;
 return tmp$1009$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4d( struct $7VECTOR4* tmp$1011$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$512:;
 _ZN7VECTOR4C1Edddd( tmp$1011$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, *(double*)((uint8*)L$1 + 24ll) * R$1 );
 goto label$513;
 label$513:;
 return tmp$1011$1;
}

struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4* tmp$1013$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$514:;
 _ZN7VECTOR4C1Edddd( tmp$1013$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), L$1 * *(double*)((uint8*)R$1 + 24ll) );
 goto label$515;
 label$515:;
 return tmp$1013$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4d( struct $7VECTOR4* tmp$1015$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$516:;
 _ZN7VECTOR4C1Edddd( tmp$1015$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, *(double*)((uint8*)L$1 + 24ll) / R$1 );
 goto label$517;
 label$517:;
 return tmp$1015$1;
}

struct $7VECTOR4* _ZdvdR7VECTOR4( struct $7VECTOR4* tmp$1017$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$518:;
 _ZN7VECTOR4C1Edddd( tmp$1017$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, *(double*)((uint8*)R$1 + 24ll) / L$1 );
 goto label$519;
 label$519:;
 return tmp$1017$1;
}

struct $7VECTOR4* _ZplR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1019$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$520:;
 _ZN7VECTOR4C1Edddd( tmp$1019$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$521;
 label$521:;
 return tmp$1019$1;
}

struct $7VECTOR4* _ZplR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1021$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$522:;
 _ZN7VECTOR4C1Edddd( tmp$1021$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$523;
 label$523:;
 return tmp$1021$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1023$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$524:;
 _ZN7VECTOR4C1Edddd( tmp$1023$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$525;
 label$525:;
 return tmp$1023$1;
}

struct $7VECTOR4* _ZmiR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1025$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$526:;
 _ZN7VECTOR4C1Edddd( tmp$1025$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$527;
 label$527:;
 return tmp$1025$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1027$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$528:;
 _ZN7VECTOR4C1Edddd( tmp$1027$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$529;
 label$529:;
 return tmp$1027$1;
}

struct $7VECTOR4* _ZmlR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1029$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$530:;
 _ZN7VECTOR4C1Edddd( tmp$1029$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$531;
 label$531:;
 return tmp$1029$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1031$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$532:;
 _ZN7VECTOR4C1Edddd( tmp$1031$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$533;
 label$533:;
 return tmp$1031$1;
}

struct $7VECTOR4* _ZdvR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1033$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$534:;
 _ZN7VECTOR4C1Edddd( tmp$1033$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$535;
 label$535:;
 return tmp$1033$1;
}

int64 _ZeqR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$536:;
 if( ((((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) == 0ll ) goto label$539;
 {
  fb$result$1 = 0ll;
  goto label$537;
  label$539:;
 }
 fb$result$1 = -1ll;
 goto label$537;
 label$537:;
 return fb$result$1;
}

int64 _ZneR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$540:;
 if( ((((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) == 0ll ) goto label$543;
 {
  fb$result$1 = -1ll;
  goto label$541;
  label$543:;
 }
 fb$result$1 = 0ll;
 goto label$541;
 label$541:;
 return fb$result$1;
}

void _ZN5PLANEC1Ev( struct $5PLANE* THIS$1 )
{
 label$548:;
 *(double*)THIS$1 = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 label$549:;
}

void _ZN5PLANEC1ER7VECTOR3S1_( struct $5PLANE* THIS$1, struct $7VECTOR3* NORMAL$1, struct $7VECTOR3* V$1 )
{
 label$550:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, NORMAL$1 );
 *(double*)((uint8*)THIS$1 + 24ll) = -(((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1));
 label$551:;
}

double _ZN5PLANE11GETDISTANCEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$552:;
 fb$result$1 = (((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1)) + *(double*)((uint8*)THIS$1 + 24ll);
 goto label$553;
 label$553:;
 return fb$result$1;
}

$10EPLANESIDE _ZN5PLANE7GETSIDEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 $10EPLANESIDE fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$554:;
 double DIST$1;
 DIST$1 = (((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1)) + *(double*)((uint8*)THIS$1 + 24ll);
 if( DIST$1 != 0x0p+0 ) goto label$557;
 {
  fb$result$1 = 0ll;
  goto label$555;
  label$557:;
 }
 if( DIST$1 >= 0x0p+0 ) goto label$559;
 {
  fb$result$1 = 2ll;
  goto label$555;
  label$559:;
 }
 fb$result$1 = 1ll;
 goto label$555;
 label$555:;
 return fb$result$1;
}

boolean _ZN5PLANE9INTERSECTER7VECTOR3S1_Rd( struct $5PLANE* THIS$1, struct $7VECTOR3* RAYORIGIN$1, struct $7VECTOR3* RAYDIRECTION$1, double* RESULTT$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$560:;
 double DENOM$1;
 DENOM$1 = ((*(double*)THIS$1 * *(double*)RAYDIRECTION$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)RAYDIRECTION$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)RAYDIRECTION$1);
 double vr$12 = fabs( DENOM$1 );
 if( vr$12 >= 0x1.0624DD2F1A9FCp-10 ) goto label$563;
 {
  fb$result$1 = (boolean)0ll;
  goto label$561;
  label$563:;
 }
 struct $7VECTOR3 PLANECENTER$1;
 _ZN7VECTOR3C1Eddd( &PLANECENTER$1, *(double*)THIS$1 * *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 24ll) );
 *(double*)&PLANECENTER$1 = *(double*)&PLANECENTER$1 - *(double*)RAYORIGIN$1;
 *(double*)((uint8*)&PLANECENTER$1 + 8ll) = *(double*)((uint8*)&PLANECENTER$1 + 8ll) - *(double*)((uint8*)RAYORIGIN$1 + 8ll);
 *(double*)((uint8*)&PLANECENTER$1 + 16ll) = *(double*)((uint8*)&PLANECENTER$1 + 16ll) - *(double*)((uint8*)RAYORIGIN$1 + 16ll);
 double T$1;
 T$1 = (((*(double*)&PLANECENTER$1 * *(double*)THIS$1) + (*(double*)((uint8*)&PLANECENTER$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)&PLANECENTER$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll))) / DENOM$1;
 if( T$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$565;
 {
  fb$result$1 = (boolean)0ll;
  goto label$561;
  label$565:;
 }
 *RESULTT$1 = T$1;
 fb$result$1 = (boolean)1ll;
 goto label$561;
 label$561:;
 return fb$result$1;
}

double _Z8RADIANCEd( double DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$566:;
 fb$result$1 = (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$567;
 label$567:;
 return fb$result$1;
}

struct $7VECTOR2* _Z8RADIANCER7VECTOR2( struct $7VECTOR2* tmp$1036$1, struct $7VECTOR2* V$1 )
{
 label$568:;
 _ZN7VECTOR2C1Edd( tmp$1036$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$569;
 label$569:;
 return tmp$1036$1;
}

struct $7VECTOR3* _Z8RADIANCER7VECTOR3( struct $7VECTOR3* tmp$1038$1, struct $7VECTOR3* V$1 )
{
 label$570:;
 _ZN7VECTOR3C1Eddd( tmp$1038$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$571;
 label$571:;
 return tmp$1038$1;
}

struct $7VECTOR4* _Z8RADIANCER7VECTOR4( struct $7VECTOR4* tmp$1040$1, struct $7VECTOR4* V$1 )
{
 label$572:;
 _ZN7VECTOR4C1Edddd( tmp$1040$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$573;
 label$573:;
 return tmp$1040$1;
}

double _Z7DEGREESd( double RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$574:;
 fb$result$1 = (RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$575;
 label$575:;
 return fb$result$1;
}

struct $7VECTOR2* _Z7DEGREESR7VECTOR2( struct $7VECTOR2* tmp$1042$1, struct $7VECTOR2* V$1 )
{
 label$576:;
 _ZN7VECTOR2C1Edd( tmp$1042$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$577;
 label$577:;
 return tmp$1042$1;
}

struct $7VECTOR3* _Z7DEGREESR7VECTOR3( struct $7VECTOR3* tmp$1044$1, struct $7VECTOR3* V$1 )
{
 label$578:;
 _ZN7VECTOR3C1Eddd( tmp$1044$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$579;
 label$579:;
 return tmp$1044$1;
}

struct $7VECTOR4* _Z7DEGREESR7VECTOR4( struct $7VECTOR4* tmp$1046$1, struct $7VECTOR4* V$1 )
{
 label$580:;
 _ZN7VECTOR4C1Edddd( tmp$1046$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$581;
 label$581:;
 return tmp$1046$1;
}

struct $7VECTOR2* _Zv13sinR7VECTOR2( struct $7VECTOR2* tmp$1048$1, struct $7VECTOR2* V$1 )
{
 label$582:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1048$1, (double)vr$6, (double)vr$2 );
 goto label$583;
 label$583:;
 return tmp$1048$1;
}

struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3* tmp$1050$1, struct $7VECTOR3* V$1 )
{
 label$584:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1050$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$585;
 label$585:;
 return tmp$1050$1;
}

struct $7VECTOR4* _Zv13sinR7VECTOR4( struct $7VECTOR4* tmp$1052$1, struct $7VECTOR4* V$1 )
{
 label$586:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1052$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$587;
 label$587:;
 return tmp$1052$1;
}

struct $7VECTOR2* _Zv13cosR7VECTOR2( struct $7VECTOR2* tmp$1054$1, struct $7VECTOR2* V$1 )
{
 label$588:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1054$1, (double)vr$6, (double)vr$2 );
 goto label$589;
 label$589:;
 return tmp$1054$1;
}

struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3* tmp$1056$1, struct $7VECTOR3* V$1 )
{
 label$590:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1056$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$591;
 label$591:;
 return tmp$1056$1;
}

struct $7VECTOR4* _Zv13cosR7VECTOR4( struct $7VECTOR4* tmp$1058$1, struct $7VECTOR4* V$1 )
{
 label$592:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1058$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$593;
 label$593:;
 return tmp$1058$1;
}

struct $7VECTOR2* _Zv13tanR7VECTOR2( struct $7VECTOR2* tmp$1060$1, struct $7VECTOR2* V$1 )
{
 label$594:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1060$1, (double)vr$6, (double)vr$2 );
 goto label$595;
 label$595:;
 return tmp$1060$1;
}

struct $7VECTOR3* _Zv13tanR7VECTOR3( struct $7VECTOR3* tmp$1062$1, struct $7VECTOR3* V$1 )
{
 label$596:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$8 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1062$1, (double)vr$8, __builtin_tan( *(double*)((uint8*)V$1 + 8ll) ), (double)vr$2 );
 goto label$597;
 label$597:;
 return tmp$1062$1;
}

struct $7VECTOR4* _Zv13tanR7VECTOR4( struct $7VECTOR4* tmp$1064$1, struct $7VECTOR4* V$1 )
{
 label$598:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1064$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$599;
 label$599:;
 return tmp$1064$1;
}

struct $7VECTOR2* _Zv14asinR7VECTOR2( struct $7VECTOR2* tmp$1066$1, struct $7VECTOR2* V$1 )
{
 label$600:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1066$1, (double)vr$6, (double)vr$2 );
 goto label$601;
 label$601:;
 return tmp$1066$1;
}

struct $7VECTOR3* _Zv14asinR7VECTOR3( struct $7VECTOR3* tmp$1068$1, struct $7VECTOR3* V$1 )
{
 label$602:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1068$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$603;
 label$603:;
 return tmp$1068$1;
}

struct $7VECTOR4* _Zv14asinR7VECTOR4( struct $7VECTOR4* tmp$1070$1, struct $7VECTOR4* V$1 )
{
 label$604:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1070$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$605;
 label$605:;
 return tmp$1070$1;
}

struct $7VECTOR2* _Zv14acosR7VECTOR2( struct $7VECTOR2* tmp$1072$1, struct $7VECTOR2* V$1 )
{
 label$606:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1072$1, (double)vr$6, (double)vr$2 );
 goto label$607;
 label$607:;
 return tmp$1072$1;
}

struct $7VECTOR3* _Zv14acosR7VECTOR3( struct $7VECTOR3* tmp$1074$1, struct $7VECTOR3* V$1 )
{
 label$608:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1074$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$609;
 label$609:;
 return tmp$1074$1;
}

struct $7VECTOR4* _Zv14acosR7VECTOR4( struct $7VECTOR4* tmp$1076$1, struct $7VECTOR4* V$1 )
{
 label$610:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1076$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$611;
 label$611:;
 return tmp$1076$1;
}

double _Z4ATANdd( double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$612:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$613;
 label$613:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4ATANR7VECTOR2S0_( struct $7VECTOR2* tmp$1078$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$614:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$10 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$1078$1, (double)vr$10, (double)vr$4 );
 goto label$615;
 label$615:;
 return tmp$1078$1;
}

struct $7VECTOR3* _Z4ATANR7VECTOR3S0_( struct $7VECTOR3* tmp$1080$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$616:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$16 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR3C1Eddd( tmp$1080$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$617;
 label$617:;
 return tmp$1080$1;
}

struct $7VECTOR4* _Z4ATANR7VECTOR4S0_( struct $7VECTOR4* tmp$1082$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$618:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 24ll), (float)*(double*)((uint8*)Y$1 + 24ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$22 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR4C1Edddd( tmp$1082$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$619;
 label$619:;
 return tmp$1082$1;
}

double _Z3POWdd( double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$620:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$621;
 label$621:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3POWR7VECTOR2S0_( struct $7VECTOR2* tmp$1084$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 label$622:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$10 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR2C1Edd( tmp$1084$1, (double)vr$10, (double)vr$4 );
 goto label$623;
 label$623:;
 return tmp$1084$1;
}

struct $7VECTOR3* _Z3POWR7VECTOR3S0_( struct $7VECTOR3* tmp$1086$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$624:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$16 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR3C1Eddd( tmp$1086$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$625;
 label$625:;
 return tmp$1086$1;
}

struct $7VECTOR4* _Z3POWR7VECTOR4S0_( struct $7VECTOR4* tmp$1088$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 label$626:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 24ll), (float)*(double*)((uint8*)B$1 + 24ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$22 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR4C1Edddd( tmp$1088$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$627;
 label$627:;
 return tmp$1088$1;
}

double EXP2F( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$628:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$629;
 label$629:;
 return fb$result$1;
}

double _Z3EXPd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$630:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$631;
 label$631:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3EXPR7VECTOR2( struct $7VECTOR2* tmp$1090$1, struct $7VECTOR2* A$1 )
{
 label$632:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1090$1, (double)vr$6, (double)vr$2 );
 goto label$633;
 label$633:;
 return tmp$1090$1;
}

struct $7VECTOR3* _Z3EXPR7VECTOR3( struct $7VECTOR3* tmp$1092$1, struct $7VECTOR3* A$1 )
{
 label$634:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1092$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$635;
 label$635:;
 return tmp$1092$1;
}

struct $7VECTOR4* _Z3EXPR7VECTOR4( struct $7VECTOR4* tmp$1094$1, struct $7VECTOR4* A$1 )
{
 label$636:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1094$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$637;
 label$637:;
 return tmp$1094$1;
}

double _Z3LOGd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$638:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$639;
 label$639:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3LOGR7VECTOR2( struct $7VECTOR2* tmp$1096$1, struct $7VECTOR2* A$1 )
{
 label$640:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1096$1, (double)vr$6, (double)vr$2 );
 goto label$641;
 label$641:;
 return tmp$1096$1;
}

struct $7VECTOR3* _Z3LOGR7VECTOR3( struct $7VECTOR3* tmp$1098$1, struct $7VECTOR3* A$1 )
{
 label$642:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1098$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$643;
 label$643:;
 return tmp$1098$1;
}

struct $7VECTOR4* _Z3LOGR7VECTOR4( struct $7VECTOR4* tmp$1100$1, struct $7VECTOR4* A$1 )
{
 label$644:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1100$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$645;
 label$645:;
 return tmp$1100$1;
}

double _Z4EXP2Rd( double* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$646:;
 double vr$2 = EXP2F( *A$1 );
 fb$result$1 = vr$2;
 goto label$647;
 label$647:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4EXP2R7VECTOR2( struct $7VECTOR2* tmp$1102$1, struct $7VECTOR2* A$1 )
{
 label$648:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$3 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1102$1, vr$3, vr$1 );
 goto label$649;
 label$649:;
 return tmp$1102$1;
}

struct $7VECTOR3* _Z4EXP2R7VECTOR3( struct $7VECTOR3* tmp$1104$1, struct $7VECTOR3* A$1 )
{
 label$650:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 16ll) );
 double vr$3 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$5 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1104$1, vr$5, vr$3, vr$1 );
 goto label$651;
 label$651:;
 return tmp$1104$1;
}

struct $7VECTOR4* _Z4EXP2R7VECTOR4( struct $7VECTOR4* tmp$1106$1, struct $7VECTOR4* A$1 )
{
 label$652:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 24ll) );
 double vr$3 = EXP2F( *(double*)((uint8*)A$1 + 16ll) );
 double vr$5 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$7 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1106$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$653;
 label$653:;
 return tmp$1106$1;
}

double _Z4LOG2d( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$654:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$655;
 label$655:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4LOG2R7VECTOR2( struct $7VECTOR2* tmp$1108$1, struct $7VECTOR2* A$1 )
{
 label$656:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1108$1, (double)vr$6, (double)vr$2 );
 goto label$657;
 label$657:;
 return tmp$1108$1;
}

struct $7VECTOR3* _Z4LOG2R7VECTOR3( struct $7VECTOR3* tmp$1110$1, struct $7VECTOR3* A$1 )
{
 label$658:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1110$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$659;
 label$659:;
 return tmp$1110$1;
}

struct $7VECTOR4* _Z4LOG2R7VECTOR4( struct $7VECTOR4* tmp$1112$1, struct $7VECTOR4* A$1 )
{
 label$660:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1112$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$661;
 label$661:;
 return tmp$1112$1;
}

double _Z4SQRTd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$662:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$663;
 label$663:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4SQRTR7VECTOR2( struct $7VECTOR2* tmp$1114$1, struct $7VECTOR2* A$1 )
{
 label$664:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1114$1, (double)vr$6, (double)vr$2 );
 goto label$665;
 label$665:;
 return tmp$1114$1;
}

struct $7VECTOR3* _Z4SQRTR7VECTOR3( struct $7VECTOR3* tmp$1116$1, struct $7VECTOR3* A$1 )
{
 label$666:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1116$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$667;
 label$667:;
 return tmp$1116$1;
}

struct $7VECTOR4* _Z4SQRTR7VECTOR4( struct $7VECTOR4* tmp$1118$1, struct $7VECTOR4* A$1 )
{
 label$668:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1118$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$669;
 label$669:;
 return tmp$1118$1;
}

double _Z11INVERSESQRTd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$670:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$671;
 label$671:;
 return fb$result$1;
}

struct $7VECTOR2* _Z11INVERSESQRTR7VECTOR2( struct $7VECTOR2* tmp$1120$1, struct $7VECTOR2* A$1 )
{
 label$672:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$7 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1120$1, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$673;
 label$673:;
 return tmp$1120$1;
}

struct $7VECTOR3* _Z11INVERSESQRTR7VECTOR3( struct $7VECTOR3* tmp$1122$1, struct $7VECTOR3* A$1 )
{
 label$674:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$12 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1122$1, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$675;
 label$675:;
 return tmp$1122$1;
}

struct $7VECTOR4* _Z11INVERSESQRTR7VECTOR4( struct $7VECTOR4* tmp$1124$1, struct $7VECTOR4* A$1 )
{
 label$676:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$17 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1124$1, 0x1.p+0 / (double)vr$17, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$677;
 label$677:;
 return tmp$1124$1;
}

struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2* tmp$1126$1, struct $7VECTOR2* V$1 )
{
 double TMP$1128$1;
 double TMP$1129$1;
 label$678:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$681;
 TMP$1129$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$682;
 label$681:;
 TMP$1129$1 = *(double*)((uint8*)V$1 + 8ll);
 label$682:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$680;
 TMP$1128$1 = -(*(double*)V$1);
 goto label$683;
 label$680:;
 TMP$1128$1 = *(double*)V$1;
 label$683:;
 _ZN7VECTOR2C1Edd( tmp$1126$1, TMP$1128$1, TMP$1129$1 );
 goto label$679;
 label$679:;
 return tmp$1126$1;
}

struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3* tmp$1130$1, struct $7VECTOR3* V$1 )
{
 double TMP$1132$1;
 double TMP$1133$1;
 double TMP$1134$1;
 label$684:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$688;
 TMP$1134$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$689;
 label$688:;
 TMP$1134$1 = *(double*)((uint8*)V$1 + 16ll);
 label$689:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$687;
 TMP$1133$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$690;
 label$687:;
 TMP$1133$1 = *(double*)((uint8*)V$1 + 8ll);
 label$690:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$686;
 TMP$1132$1 = -(*(double*)V$1);
 goto label$691;
 label$686:;
 TMP$1132$1 = *(double*)V$1;
 label$691:;
 _ZN7VECTOR3C1Eddd( tmp$1130$1, TMP$1132$1, TMP$1133$1, TMP$1134$1 );
 goto label$685;
 label$685:;
 return tmp$1130$1;
}

struct $7VECTOR4* _Zv13absRK7VECTOR4( struct $7VECTOR4* tmp$1135$1, struct $7VECTOR4* V$1 )
{
 double TMP$1137$1;
 double TMP$1138$1;
 double TMP$1139$1;
 double TMP$1140$1;
 label$692:;
 if( *(double*)((uint8*)V$1 + 24ll) >= 0x0p+0 ) goto label$697;
 TMP$1140$1 = -(*(double*)((uint8*)V$1 + 24ll));
 goto label$698;
 label$697:;
 TMP$1140$1 = *(double*)((uint8*)V$1 + 24ll);
 label$698:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$696;
 TMP$1139$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$699;
 label$696:;
 TMP$1139$1 = *(double*)((uint8*)V$1 + 16ll);
 label$699:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$695;
 TMP$1138$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$700;
 label$695:;
 TMP$1138$1 = *(double*)((uint8*)V$1 + 8ll);
 label$700:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$694;
 TMP$1137$1 = -(*(double*)V$1);
 goto label$701;
 label$694:;
 TMP$1137$1 = *(double*)V$1;
 label$701:;
 _ZN7VECTOR4C1Edddd( tmp$1135$1, TMP$1137$1, TMP$1138$1, TMP$1139$1, TMP$1140$1 );
 goto label$693;
 label$693:;
 return tmp$1135$1;
}

double _Z4SIGNd( double A$1 )
{
 int64 TMP$1141$1;
 int64 TMP$1142$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$702:;
 if( A$1 <= 0x0p+0 ) goto label$705;
 TMP$1142$1 = 1ll;
 goto label$706;
 label$705:;
 if( A$1 >= 0x0p+0 ) goto label$704;
 TMP$1141$1 = -1ll;
 goto label$707;
 label$704:;
 TMP$1141$1 = 0ll;
 label$707:;
 TMP$1142$1 = TMP$1141$1;
 label$706:;
 fb$result$1 = (double)TMP$1142$1;
 goto label$703;
 label$703:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4SIGNR7VECTOR2( struct $7VECTOR2* tmp$1143$1, struct $7VECTOR2* A$1 )
{
 int64 TMP$1145$1;
 int64 TMP$1146$1;
 int64 TMP$1147$1;
 int64 TMP$1148$1;
 label$708:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$713;
 TMP$1148$1 = 1ll;
 goto label$714;
 label$713:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$712;
 TMP$1147$1 = -1ll;
 goto label$715;
 label$712:;
 TMP$1147$1 = 0ll;
 label$715:;
 TMP$1148$1 = TMP$1147$1;
 label$714:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$711;
 TMP$1146$1 = 1ll;
 goto label$716;
 label$711:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$710;
 TMP$1145$1 = -1ll;
 goto label$717;
 label$710:;
 TMP$1145$1 = 0ll;
 label$717:;
 TMP$1146$1 = TMP$1145$1;
 label$716:;
 _ZN7VECTOR2C1Edd( tmp$1143$1, (double)TMP$1146$1, (double)TMP$1148$1 );
 goto label$709;
 label$709:;
 return tmp$1143$1;
}

struct $7VECTOR3* _Z4SIGNR7VECTOR3( struct $7VECTOR3* tmp$1149$1, struct $7VECTOR3* A$1 )
{
 int64 TMP$1151$1;
 int64 TMP$1152$1;
 int64 TMP$1153$1;
 int64 TMP$1154$1;
 int64 TMP$1155$1;
 int64 TMP$1156$1;
 label$718:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$725;
 TMP$1156$1 = 1ll;
 goto label$726;
 label$725:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$724;
 TMP$1155$1 = -1ll;
 goto label$727;
 label$724:;
 TMP$1155$1 = 0ll;
 label$727:;
 TMP$1156$1 = TMP$1155$1;
 label$726:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$723;
 TMP$1154$1 = 1ll;
 goto label$728;
 label$723:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$722;
 TMP$1153$1 = -1ll;
 goto label$729;
 label$722:;
 TMP$1153$1 = 0ll;
 label$729:;
 TMP$1154$1 = TMP$1153$1;
 label$728:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$721;
 TMP$1152$1 = 1ll;
 goto label$730;
 label$721:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$720;
 TMP$1151$1 = -1ll;
 goto label$731;
 label$720:;
 TMP$1151$1 = 0ll;
 label$731:;
 TMP$1152$1 = TMP$1151$1;
 label$730:;
 _ZN7VECTOR3C1Eddd( tmp$1149$1, (double)TMP$1152$1, (double)TMP$1154$1, (double)TMP$1156$1 );
 goto label$719;
 label$719:;
 return tmp$1149$1;
}

struct $7VECTOR4* _Z4SIGNR7VECTOR4( struct $7VECTOR4* tmp$1157$1, struct $7VECTOR4* A$1 )
{
 int64 TMP$1159$1;
 int64 TMP$1160$1;
 int64 TMP$1161$1;
 int64 TMP$1162$1;
 int64 TMP$1163$1;
 int64 TMP$1164$1;
 int64 TMP$1165$1;
 int64 TMP$1166$1;
 label$732:;
 if( *(double*)((uint8*)A$1 + 24ll) <= 0x0p+0 ) goto label$741;
 TMP$1166$1 = 1ll;
 goto label$742;
 label$741:;
 if( *(double*)((uint8*)A$1 + 24ll) >= 0x0p+0 ) goto label$740;
 TMP$1165$1 = -1ll;
 goto label$743;
 label$740:;
 TMP$1165$1 = 0ll;
 label$743:;
 TMP$1166$1 = TMP$1165$1;
 label$742:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$739;
 TMP$1164$1 = 1ll;
 goto label$744;
 label$739:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$738;
 TMP$1163$1 = -1ll;
 goto label$745;
 label$738:;
 TMP$1163$1 = 0ll;
 label$745:;
 TMP$1164$1 = TMP$1163$1;
 label$744:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$737;
 TMP$1162$1 = 1ll;
 goto label$746;
 label$737:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$736;
 TMP$1161$1 = -1ll;
 goto label$747;
 label$736:;
 TMP$1161$1 = 0ll;
 label$747:;
 TMP$1162$1 = TMP$1161$1;
 label$746:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$735;
 TMP$1160$1 = 1ll;
 goto label$748;
 label$735:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$734;
 TMP$1159$1 = -1ll;
 goto label$749;
 label$734:;
 TMP$1159$1 = 0ll;
 label$749:;
 TMP$1160$1 = TMP$1159$1;
 label$748:;
 _ZN7VECTOR4C1Edddd( tmp$1157$1, (double)TMP$1160$1, (double)TMP$1162$1, (double)TMP$1164$1, (double)TMP$1166$1 );
 goto label$733;
 label$733:;
 return tmp$1157$1;
}

double _Z5FLOORd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$750:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$751;
 label$751:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5FLOORR7VECTOR2( struct $7VECTOR2* tmp$1167$1, struct $7VECTOR2* A$1 )
{
 label$752:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1167$1, (double)vr$6, (double)vr$2 );
 goto label$753;
 label$753:;
 return tmp$1167$1;
}

struct $7VECTOR3* _Z5FLOORR7VECTOR3( struct $7VECTOR3* tmp$1169$1, struct $7VECTOR3* A$1 )
{
 label$754:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1169$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$755;
 label$755:;
 return tmp$1169$1;
}

struct $7VECTOR4* _Z5FLOORR7VECTOR4( struct $7VECTOR4* tmp$1171$1, struct $7VECTOR4* A$1 )
{
 label$756:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1171$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$757;
 label$757:;
 return tmp$1171$1;
}

double _Z4CEILd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$758:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$759;
 label$759:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4CEILR7VECTOR2( struct $7VECTOR2* tmp$1173$1, struct $7VECTOR2* A$1 )
{
 label$760:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1173$1, (double)vr$6, (double)vr$2 );
 goto label$761;
 label$761:;
 return tmp$1173$1;
}

struct $7VECTOR3* _Z4CEILR7VECTOR3( struct $7VECTOR3* tmp$1175$1, struct $7VECTOR3* A$1 )
{
 label$762:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1175$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$763;
 label$763:;
 return tmp$1175$1;
}

struct $7VECTOR4* _Z4CEILR7VECTOR4( struct $7VECTOR4* tmp$1177$1, struct $7VECTOR4* A$1 )
{
 label$764:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1177$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$765;
 label$765:;
 return tmp$1177$1;
}

double _Z5FRACTd( double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$766:;
 double vr$1 = _Z5FLOORd( X$1 );
 fb$result$1 = X$1 - vr$1;
 goto label$767;
 label$767:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5FRACTR7VECTOR2( struct $7VECTOR2* tmp$1179$1, struct $7VECTOR2* X$1 )
{
 label$768:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$6 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1179$1, *(double*)X$1 - vr$6, *(double*)((uint8*)X$1 + 8ll) - vr$2 );
 goto label$769;
 label$769:;
 return tmp$1179$1;
}

struct $7VECTOR3* _Z5FRACTR7VECTOR3( struct $7VECTOR3* tmp$1181$1, struct $7VECTOR3* X$1 )
{
 label$770:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) );
 double vr$6 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$10 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1181$1, *(double*)X$1 - vr$10, *(double*)((uint8*)X$1 + 8ll) - vr$6, *(double*)((uint8*)X$1 + 16ll) - vr$2 );
 goto label$771;
 label$771:;
 return tmp$1181$1;
}

struct $7VECTOR4* _Z5FRACTR7VECTOR4( struct $7VECTOR4* tmp$1183$1, struct $7VECTOR4* X$1 )
{
 label$772:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 24ll) );
 double vr$6 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) );
 double vr$10 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$14 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1183$1, *(double*)X$1 - vr$14, *(double*)((uint8*)X$1 + 8ll) - vr$10, *(double*)((uint8*)X$1 + 16ll) - vr$6, *(double*)((uint8*)X$1 + 24ll) - vr$2 );
 goto label$773;
 label$773:;
 return tmp$1183$1;
}

int64 _Z6MODULOll( int64 X$1, int64 Y$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$774:;
 fb$result$1 = X$1 - (Y$1 * (X$1 / Y$1));
 goto label$775;
 label$775:;
 return fb$result$1;
}

double _Z6MODULOdd( double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$776:;
 double vr$2 = _Z5FLOORd( X$1 / Y$1 );
 fb$result$1 = X$1 - (Y$1 * vr$2);
 goto label$777;
 label$777:;
 return fb$result$1;
}

struct $7VECTOR2* _Z6MODULOR7VECTOR2S0_( struct $7VECTOR2* tmp$1185$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$778:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$13 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$1185$1, *(double*)X$1 - (*(double*)Y$1 * vr$13), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$5) );
 goto label$779;
 label$779:;
 return tmp$1185$1;
}

struct $7VECTOR3* _Z6MODULOR7VECTOR3S0_( struct $7VECTOR3* tmp$1187$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$780:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 double vr$13 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$21 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR3C1Eddd( tmp$1187$1, *(double*)X$1 - (*(double*)Y$1 * vr$21), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$13), *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$5) );
 goto label$781;
 label$781:;
 return tmp$1187$1;
}

struct $7VECTOR4* _Z6MODULOR7VECTOR4S0_( struct $7VECTOR4* tmp$1189$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$782:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 24ll) / *(double*)((uint8*)Y$1 + 24ll) );
 double vr$13 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 double vr$21 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$29 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR4C1Edddd( tmp$1189$1, *(double*)X$1 - (*(double*)Y$1 * vr$29), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$21), *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$13), *(double*)((uint8*)X$1 + 24ll) - (*(double*)((uint8*)Y$1 + 24ll) * vr$5) );
 goto label$783;
 label$783:;
 return tmp$1189$1;
}

double _Z3MINdd( double A$1, double B$1 )
{
 double TMP$1191$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$784:;
 if( A$1 >= B$1 ) goto label$786;
 TMP$1191$1 = A$1;
 goto label$787;
 label$786:;
 TMP$1191$1 = B$1;
 label$787:;
 fb$result$1 = TMP$1191$1;
 goto label$785;
 label$785:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MINR7VECTOR2S0_( struct $7VECTOR2* tmp$1192$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$1194$1;
 double TMP$1195$1;
 label$788:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$791;
 TMP$1195$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$792;
 label$791:;
 TMP$1195$1 = *(double*)((uint8*)B$1 + 8ll);
 label$792:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$790;
 TMP$1194$1 = *(double*)A$1;
 goto label$793;
 label$790:;
 TMP$1194$1 = *(double*)B$1;
 label$793:;
 _ZN7VECTOR2C1Edd( tmp$1192$1, TMP$1194$1, TMP$1195$1 );
 goto label$789;
 label$789:;
 return tmp$1192$1;
}

struct $7VECTOR3* _Z3MINR7VECTOR3S0_( struct $7VECTOR3* tmp$1196$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$1198$1;
 double TMP$1199$1;
 double TMP$1200$1;
 label$794:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$798;
 TMP$1200$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$799;
 label$798:;
 TMP$1200$1 = *(double*)((uint8*)B$1 + 16ll);
 label$799:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$797;
 TMP$1199$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$800;
 label$797:;
 TMP$1199$1 = *(double*)((uint8*)B$1 + 8ll);
 label$800:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$796;
 TMP$1198$1 = *(double*)A$1;
 goto label$801;
 label$796:;
 TMP$1198$1 = *(double*)B$1;
 label$801:;
 _ZN7VECTOR3C1Eddd( tmp$1196$1, TMP$1198$1, TMP$1199$1, TMP$1200$1 );
 goto label$795;
 label$795:;
 return tmp$1196$1;
}

struct $7VECTOR4* _Z3MINR7VECTOR4S0_( struct $7VECTOR4* tmp$1201$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$1203$1;
 double TMP$1204$1;
 double TMP$1205$1;
 double TMP$1206$1;
 label$802:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$807;
 TMP$1206$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$808;
 label$807:;
 TMP$1206$1 = *(double*)((uint8*)B$1 + 24ll);
 label$808:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$806;
 TMP$1205$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$809;
 label$806:;
 TMP$1205$1 = *(double*)((uint8*)B$1 + 16ll);
 label$809:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$805;
 TMP$1204$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$810;
 label$805:;
 TMP$1204$1 = *(double*)((uint8*)B$1 + 8ll);
 label$810:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$804;
 TMP$1203$1 = *(double*)A$1;
 goto label$811;
 label$804:;
 TMP$1203$1 = *(double*)B$1;
 label$811:;
 _ZN7VECTOR4C1Edddd( tmp$1201$1, TMP$1203$1, TMP$1204$1, TMP$1205$1, TMP$1206$1 );
 goto label$803;
 label$803:;
 return tmp$1201$1;
}

struct $7VECTOR2* _Z3MINR7VECTOR2Rd( struct $7VECTOR2* tmp$1207$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$1209$1;
 double TMP$1210$1;
 label$812:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$815;
 TMP$1210$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$816;
 label$815:;
 TMP$1210$1 = *B$1;
 label$816:;
 if( *(double*)A$1 >= *B$1 ) goto label$814;
 TMP$1209$1 = *(double*)A$1;
 goto label$817;
 label$814:;
 TMP$1209$1 = *B$1;
 label$817:;
 _ZN7VECTOR2C1Edd( tmp$1207$1, TMP$1209$1, TMP$1210$1 );
 goto label$813;
 label$813:;
 return tmp$1207$1;
}

struct $7VECTOR3* _Z3MINR7VECTOR3Rd( struct $7VECTOR3* tmp$1211$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$1213$1;
 double TMP$1214$1;
 double TMP$1215$1;
 label$818:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$822;
 TMP$1215$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$823;
 label$822:;
 TMP$1215$1 = *B$1;
 label$823:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$821;
 TMP$1214$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$824;
 label$821:;
 TMP$1214$1 = *B$1;
 label$824:;
 if( *(double*)A$1 >= *B$1 ) goto label$820;
 TMP$1213$1 = *(double*)A$1;
 goto label$825;
 label$820:;
 TMP$1213$1 = *B$1;
 label$825:;
 _ZN7VECTOR3C1Eddd( tmp$1211$1, TMP$1213$1, TMP$1214$1, TMP$1215$1 );
 goto label$819;
 label$819:;
 return tmp$1211$1;
}

struct $7VECTOR4* _Z3MINR7VECTOR4Rd( struct $7VECTOR4* tmp$1216$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$1218$1;
 double TMP$1219$1;
 double TMP$1220$1;
 double TMP$1221$1;
 label$826:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *B$1 ) goto label$831;
 TMP$1221$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$832;
 label$831:;
 TMP$1221$1 = *B$1;
 label$832:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$830;
 TMP$1220$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$833;
 label$830:;
 TMP$1220$1 = *B$1;
 label$833:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$829;
 TMP$1219$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$834;
 label$829:;
 TMP$1219$1 = *B$1;
 label$834:;
 if( *(double*)A$1 >= *B$1 ) goto label$828;
 TMP$1218$1 = *(double*)A$1;
 goto label$835;
 label$828:;
 TMP$1218$1 = *B$1;
 label$835:;
 _ZN7VECTOR4C1Edddd( tmp$1216$1, TMP$1218$1, TMP$1219$1, TMP$1220$1, TMP$1221$1 );
 goto label$827;
 label$827:;
 return tmp$1216$1;
}

double _Z3MAXdd( double A$1, double B$1 )
{
 double TMP$1222$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$836:;
 if( A$1 <= B$1 ) goto label$838;
 TMP$1222$1 = A$1;
 goto label$839;
 label$838:;
 TMP$1222$1 = B$1;
 label$839:;
 fb$result$1 = TMP$1222$1;
 goto label$837;
 label$837:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MAXR7VECTOR2S0_( struct $7VECTOR2* tmp$1223$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$1225$1;
 double TMP$1226$1;
 label$840:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$843;
 TMP$1226$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$844;
 label$843:;
 TMP$1226$1 = *(double*)((uint8*)B$1 + 8ll);
 label$844:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$842;
 TMP$1225$1 = *(double*)A$1;
 goto label$845;
 label$842:;
 TMP$1225$1 = *(double*)B$1;
 label$845:;
 _ZN7VECTOR2C1Edd( tmp$1223$1, TMP$1225$1, TMP$1226$1 );
 goto label$841;
 label$841:;
 return tmp$1223$1;
}

struct $7VECTOR3* _Z3MAXR7VECTOR3S0_( struct $7VECTOR3* tmp$1227$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$1229$1;
 double TMP$1230$1;
 double TMP$1231$1;
 label$846:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$850;
 TMP$1231$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$851;
 label$850:;
 TMP$1231$1 = *(double*)((uint8*)B$1 + 16ll);
 label$851:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$849;
 TMP$1230$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$852;
 label$849:;
 TMP$1230$1 = *(double*)((uint8*)B$1 + 8ll);
 label$852:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$848;
 TMP$1229$1 = *(double*)A$1;
 goto label$853;
 label$848:;
 TMP$1229$1 = *(double*)B$1;
 label$853:;
 _ZN7VECTOR3C1Eddd( tmp$1227$1, TMP$1229$1, TMP$1230$1, TMP$1231$1 );
 goto label$847;
 label$847:;
 return tmp$1227$1;
}

struct $7VECTOR4* _Z3MAXR7VECTOR4S0_( struct $7VECTOR4* tmp$1232$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$1234$1;
 double TMP$1235$1;
 double TMP$1236$1;
 double TMP$1237$1;
 label$854:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)B$1 + 24ll) ) goto label$859;
 TMP$1237$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$860;
 label$859:;
 TMP$1237$1 = *(double*)((uint8*)B$1 + 24ll);
 label$860:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$858;
 TMP$1236$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$861;
 label$858:;
 TMP$1236$1 = *(double*)((uint8*)B$1 + 16ll);
 label$861:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$857;
 TMP$1235$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$862;
 label$857:;
 TMP$1235$1 = *(double*)((uint8*)B$1 + 8ll);
 label$862:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$856;
 TMP$1234$1 = *(double*)A$1;
 goto label$863;
 label$856:;
 TMP$1234$1 = *(double*)B$1;
 label$863:;
 _ZN7VECTOR4C1Edddd( tmp$1232$1, TMP$1234$1, TMP$1235$1, TMP$1236$1, TMP$1237$1 );
 goto label$855;
 label$855:;
 return tmp$1232$1;
}

struct $7VECTOR2* _Z3MAXR7VECTOR2Rd( struct $7VECTOR2* tmp$1238$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$1240$1;
 double TMP$1241$1;
 label$864:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$867;
 TMP$1241$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$868;
 label$867:;
 TMP$1241$1 = *B$1;
 label$868:;
 if( *(double*)A$1 <= *B$1 ) goto label$866;
 TMP$1240$1 = *(double*)A$1;
 goto label$869;
 label$866:;
 TMP$1240$1 = *B$1;
 label$869:;
 _ZN7VECTOR2C1Edd( tmp$1238$1, TMP$1240$1, TMP$1241$1 );
 goto label$865;
 label$865:;
 return tmp$1238$1;
}

struct $7VECTOR3* _Z3MAXR7VECTOR3Rd( struct $7VECTOR3* tmp$1242$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$1244$1;
 double TMP$1245$1;
 double TMP$1246$1;
 label$870:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$874;
 TMP$1246$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$875;
 label$874:;
 TMP$1246$1 = *B$1;
 label$875:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$873;
 TMP$1245$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$876;
 label$873:;
 TMP$1245$1 = *B$1;
 label$876:;
 if( *(double*)A$1 <= *B$1 ) goto label$872;
 TMP$1244$1 = *(double*)A$1;
 goto label$877;
 label$872:;
 TMP$1244$1 = *B$1;
 label$877:;
 _ZN7VECTOR3C1Eddd( tmp$1242$1, TMP$1244$1, TMP$1245$1, TMP$1246$1 );
 goto label$871;
 label$871:;
 return tmp$1242$1;
}

struct $7VECTOR4* _Z3MAXR7VECTOR4Rd( struct $7VECTOR4* tmp$1247$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$1249$1;
 double TMP$1250$1;
 double TMP$1251$1;
 double TMP$1252$1;
 label$878:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *B$1 ) goto label$883;
 TMP$1252$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$884;
 label$883:;
 TMP$1252$1 = *B$1;
 label$884:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$882;
 TMP$1251$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$885;
 label$882:;
 TMP$1251$1 = *B$1;
 label$885:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$881;
 TMP$1250$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$886;
 label$881:;
 TMP$1250$1 = *B$1;
 label$886:;
 if( *(double*)A$1 <= *B$1 ) goto label$880;
 TMP$1249$1 = *(double*)A$1;
 goto label$887;
 label$880:;
 TMP$1249$1 = *B$1;
 label$887:;
 _ZN7VECTOR4C1Edddd( tmp$1247$1, TMP$1249$1, TMP$1250$1, TMP$1251$1, TMP$1252$1 );
 goto label$879;
 label$879:;
 return tmp$1247$1;
}

double PASCALTRIANGLE( double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$888:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$1253$2;
  TMP$1253$2 = B$1;
  goto label$890;
  label$893:;
  {
   RESULT$1 = RESULT$1 * ((A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$891:;
  I$1 = I$1 + 0x1.p+0;
  label$890:;
  if( I$1 <= TMP$1253$2 ) goto label$893;
  label$892:;
 }
 fb$result$1 = RESULT$1;
 goto label$889;
 label$889:;
 return fb$result$1;
}

double _Z5CLAMPddd( double A$1, double B$1, double C$1 )
{
 double TMP$1254$1;
 double TMP$1255$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$894:;
 if( A$1 >= B$1 ) goto label$897;
 TMP$1255$1 = B$1;
 goto label$898;
 label$897:;
 if( A$1 <= C$1 ) goto label$896;
 TMP$1254$1 = C$1;
 goto label$899;
 label$896:;
 TMP$1254$1 = A$1;
 label$899:;
 TMP$1255$1 = TMP$1254$1;
 label$898:;
 fb$result$1 = TMP$1255$1;
 goto label$895;
 label$895:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5CLAMPR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1256$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 double TMP$1258$1;
 double TMP$1259$1;
 double TMP$1260$1;
 double TMP$1261$1;
 label$900:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$905;
 TMP$1261$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$906;
 label$905:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$904;
 TMP$1260$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$907;
 label$904:;
 TMP$1260$1 = *(double*)((uint8*)A$1 + 8ll);
 label$907:;
 TMP$1261$1 = TMP$1260$1;
 label$906:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$903;
 TMP$1259$1 = *(double*)B$1;
 goto label$908;
 label$903:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$902;
 TMP$1258$1 = *(double*)C$1;
 goto label$909;
 label$902:;
 TMP$1258$1 = *(double*)A$1;
 label$909:;
 TMP$1259$1 = TMP$1258$1;
 label$908:;
 _ZN7VECTOR2C1Edd( tmp$1256$1, TMP$1259$1, TMP$1261$1 );
 goto label$901;
 label$901:;
 return tmp$1256$1;
}

struct $7VECTOR3* _Z5CLAMPR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1262$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 double TMP$1264$1;
 double TMP$1265$1;
 double TMP$1266$1;
 double TMP$1267$1;
 double TMP$1268$1;
 double TMP$1269$1;
 label$910:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$917;
 TMP$1269$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$918;
 label$917:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$916;
 TMP$1268$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$919;
 label$916:;
 TMP$1268$1 = *(double*)((uint8*)A$1 + 16ll);
 label$919:;
 TMP$1269$1 = TMP$1268$1;
 label$918:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$915;
 TMP$1267$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$920;
 label$915:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$914;
 TMP$1266$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$921;
 label$914:;
 TMP$1266$1 = *(double*)((uint8*)A$1 + 8ll);
 label$921:;
 TMP$1267$1 = TMP$1266$1;
 label$920:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$913;
 TMP$1265$1 = *(double*)B$1;
 goto label$922;
 label$913:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$912;
 TMP$1264$1 = *(double*)C$1;
 goto label$923;
 label$912:;
 TMP$1264$1 = *(double*)A$1;
 label$923:;
 TMP$1265$1 = TMP$1264$1;
 label$922:;
 _ZN7VECTOR3C1Eddd( tmp$1262$1, TMP$1265$1, TMP$1267$1, TMP$1269$1 );
 goto label$911;
 label$911:;
 return tmp$1262$1;
}

struct $7VECTOR4* _Z5CLAMPR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1270$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 double TMP$1272$1;
 double TMP$1273$1;
 double TMP$1274$1;
 double TMP$1275$1;
 double TMP$1276$1;
 double TMP$1277$1;
 double TMP$1278$1;
 double TMP$1279$1;
 label$924:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$933;
 TMP$1279$1 = *(double*)((uint8*)B$1 + 24ll);
 goto label$934;
 label$933:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 24ll) ) goto label$932;
 TMP$1278$1 = *(double*)((uint8*)C$1 + 24ll);
 goto label$935;
 label$932:;
 TMP$1278$1 = *(double*)((uint8*)A$1 + 24ll);
 label$935:;
 TMP$1279$1 = TMP$1278$1;
 label$934:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$931;
 TMP$1277$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$936;
 label$931:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$930;
 TMP$1276$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$937;
 label$930:;
 TMP$1276$1 = *(double*)((uint8*)A$1 + 16ll);
 label$937:;
 TMP$1277$1 = TMP$1276$1;
 label$936:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$929;
 TMP$1275$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$938;
 label$929:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$928;
 TMP$1274$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$939;
 label$928:;
 TMP$1274$1 = *(double*)((uint8*)A$1 + 8ll);
 label$939:;
 TMP$1275$1 = TMP$1274$1;
 label$938:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$927;
 TMP$1273$1 = *(double*)B$1;
 goto label$940;
 label$927:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$926;
 TMP$1272$1 = *(double*)C$1;
 goto label$941;
 label$926:;
 TMP$1272$1 = *(double*)A$1;
 label$941:;
 TMP$1273$1 = TMP$1272$1;
 label$940:;
 _ZN7VECTOR4C1Edddd( tmp$1270$1, TMP$1273$1, TMP$1275$1, TMP$1277$1, TMP$1279$1 );
 goto label$925;
 label$925:;
 return tmp$1270$1;
}

struct $7VECTOR2* _Z5CLAMPR7VECTOR2dd( struct $7VECTOR2* tmp$1280$1, struct $7VECTOR2* A$1, double B$1, double C$1 )
{
 double TMP$1282$1;
 double TMP$1283$1;
 double TMP$1284$1;
 double TMP$1285$1;
 label$942:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$947;
 TMP$1285$1 = B$1;
 goto label$948;
 label$947:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$946;
 TMP$1284$1 = C$1;
 goto label$949;
 label$946:;
 TMP$1284$1 = *(double*)((uint8*)A$1 + 8ll);
 label$949:;
 TMP$1285$1 = TMP$1284$1;
 label$948:;
 if( *(double*)A$1 >= B$1 ) goto label$945;
 TMP$1283$1 = B$1;
 goto label$950;
 label$945:;
 if( *(double*)A$1 <= C$1 ) goto label$944;
 TMP$1282$1 = C$1;
 goto label$951;
 label$944:;
 TMP$1282$1 = *(double*)A$1;
 label$951:;
 TMP$1283$1 = TMP$1282$1;
 label$950:;
 _ZN7VECTOR2C1Edd( tmp$1280$1, TMP$1283$1, TMP$1285$1 );
 goto label$943;
 label$943:;
 return tmp$1280$1;
}

struct $7VECTOR3* _Z5CLAMPR7VECTOR3dd( struct $7VECTOR3* tmp$1286$1, struct $7VECTOR3* A$1, double B$1, double C$1 )
{
 double TMP$1288$1;
 double TMP$1289$1;
 double TMP$1290$1;
 double TMP$1291$1;
 double TMP$1292$1;
 double TMP$1293$1;
 label$952:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$959;
 TMP$1293$1 = B$1;
 goto label$960;
 label$959:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$958;
 TMP$1292$1 = C$1;
 goto label$961;
 label$958:;
 TMP$1292$1 = *(double*)((uint8*)A$1 + 16ll);
 label$961:;
 TMP$1293$1 = TMP$1292$1;
 label$960:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$957;
 TMP$1291$1 = B$1;
 goto label$962;
 label$957:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$956;
 TMP$1290$1 = C$1;
 goto label$963;
 label$956:;
 TMP$1290$1 = *(double*)((uint8*)A$1 + 8ll);
 label$963:;
 TMP$1291$1 = TMP$1290$1;
 label$962:;
 if( *(double*)A$1 >= B$1 ) goto label$955;
 TMP$1289$1 = B$1;
 goto label$964;
 label$955:;
 if( *(double*)A$1 <= C$1 ) goto label$954;
 TMP$1288$1 = C$1;
 goto label$965;
 label$954:;
 TMP$1288$1 = *(double*)A$1;
 label$965:;
 TMP$1289$1 = TMP$1288$1;
 label$964:;
 _ZN7VECTOR3C1Eddd( tmp$1286$1, TMP$1289$1, TMP$1291$1, TMP$1293$1 );
 goto label$953;
 label$953:;
 return tmp$1286$1;
}

struct $7VECTOR4* _Z5CLAMPR7VECTOR4dd( struct $7VECTOR4* tmp$1294$1, struct $7VECTOR4* A$1, double B$1, double C$1 )
{
 double TMP$1296$1;
 double TMP$1297$1;
 double TMP$1298$1;
 double TMP$1299$1;
 double TMP$1300$1;
 double TMP$1301$1;
 double TMP$1302$1;
 double TMP$1303$1;
 label$966:;
 if( *(double*)((uint8*)A$1 + 24ll) >= B$1 ) goto label$975;
 TMP$1303$1 = B$1;
 goto label$976;
 label$975:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$974;
 TMP$1302$1 = C$1;
 goto label$977;
 label$974:;
 TMP$1302$1 = *(double*)((uint8*)A$1 + 24ll);
 label$977:;
 TMP$1303$1 = TMP$1302$1;
 label$976:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$973;
 TMP$1301$1 = B$1;
 goto label$978;
 label$973:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$972;
 TMP$1300$1 = C$1;
 goto label$979;
 label$972:;
 TMP$1300$1 = *(double*)((uint8*)A$1 + 16ll);
 label$979:;
 TMP$1301$1 = TMP$1300$1;
 label$978:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$971;
 TMP$1299$1 = B$1;
 goto label$980;
 label$971:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$970;
 TMP$1298$1 = C$1;
 goto label$981;
 label$970:;
 TMP$1298$1 = *(double*)((uint8*)A$1 + 8ll);
 label$981:;
 TMP$1299$1 = TMP$1298$1;
 label$980:;
 if( *(double*)A$1 >= B$1 ) goto label$969;
 TMP$1297$1 = B$1;
 goto label$982;
 label$969:;
 if( *(double*)A$1 <= C$1 ) goto label$968;
 TMP$1296$1 = C$1;
 goto label$983;
 label$968:;
 TMP$1296$1 = *(double*)A$1;
 label$983:;
 TMP$1297$1 = TMP$1296$1;
 label$982:;
 _ZN7VECTOR4C1Edddd( tmp$1294$1, TMP$1297$1, TMP$1299$1, TMP$1301$1, TMP$1303$1 );
 goto label$967;
 label$967:;
 return tmp$1294$1;
}

double GENERALSMOOTHSTEP( double N$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$984:;
 double vr$1 = _Z5CLAMPddd( X$1, 0x0p+0, 0x1.p+0 );
 X$1 = vr$1;
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$1304$2;
  TMP$1304$2 = N$1;
  goto label$986;
  label$989:;
  {
   double vr$4 = PASCALTRIANGLE( -0x1.p+0 - N$1, N$1 );
   double vr$8 = PASCALTRIANGLE( (N$1 * 0x1.p+1) + 0x1.p+0, N$1 - N$1 );
   double vr$12 = _Z3POWdd( X$1, (N$1 + N$1) + 0x1.p+0 );
   RESULT$1 = RESULT$1 + ((vr$4 * vr$8) * vr$12);
  }
  label$987:;
  NA$1 = NA$1 + 0x1.p+0;
  label$986:;
  if( NA$1 <= TMP$1304$2 ) goto label$989;
  label$988:;
 }
 fb$result$1 = RESULT$1;
 goto label$985;
 label$985:;
 return fb$result$1;
}

double _Z3MIXddd( double A$1, double B$1, double C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$990:;
 fb$result$1 = (A$1 * (0x1.p+0 - C$1)) + (B$1 * C$1);
 goto label$991;
 label$991:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MIXR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1305$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 label$992:;
 _ZN7VECTOR2C1Edd( tmp$1305$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)) );
 goto label$993;
 label$993:;
 return tmp$1305$1;
}

struct $7VECTOR3* _Z3MIXR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1307$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$994:;
 _ZN7VECTOR3C1Eddd( tmp$1307$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)) );
 goto label$995;
 label$995:;
 return tmp$1307$1;
}

struct $7VECTOR4* _Z3MIXR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1309$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 label$996:;
 _ZN7VECTOR4C1Edddd( tmp$1309$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)), (*(double*)((uint8*)A$1 + 24ll) * (-(*(double*)((uint8*)C$1 + 24ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 24ll) * *(double*)((uint8*)C$1 + 24ll)) );
 goto label$997;
 label$997:;
 return tmp$1309$1;
}

struct $7VECTOR2* _Z3MIXR7VECTOR2S0_d( struct $7VECTOR2* tmp$1311$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, double C$1 )
{
 label$998:;
 _ZN7VECTOR2C1Edd( tmp$1311$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1) );
 goto label$999;
 label$999:;
 return tmp$1311$1;
}

struct $7VECTOR3* _Z3MIXR7VECTOR3S0_d( struct $7VECTOR3* tmp$1313$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double C$1 )
{
 label$1000:;
 _ZN7VECTOR3C1Eddd( tmp$1313$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1), (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1) );
 goto label$1001;
 label$1001:;
 return tmp$1313$1;
}

struct $7VECTOR4* _Z3MIXR7VECTOR4S0_d( struct $7VECTOR4* tmp$1315$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, double C$1 )
{
 label$1002:;
 _ZN7VECTOR4C1Edddd( tmp$1315$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1), (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1), (*(double*)((uint8*)A$1 + 24ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 24ll) * C$1) );
 goto label$1003;
 label$1003:;
 return tmp$1315$1;
}

double _Z5STEP_dd( double EDGE$1, double X$1 )
{
 int64 TMP$1317$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1004:;
 if( X$1 >= EDGE$1 ) goto label$1006;
 TMP$1317$1 = 0ll;
 goto label$1007;
 label$1006:;
 TMP$1317$1 = 1ll;
 label$1007:;
 fb$result$1 = (double)TMP$1317$1;
 goto label$1005;
 label$1005:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5STEP_R7VECTOR2S0_( struct $7VECTOR2* tmp$1318$1, struct $7VECTOR2* EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$1320$1;
 int64 TMP$1321$1;
 label$1008:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$1011;
 TMP$1321$1 = 0ll;
 goto label$1012;
 label$1011:;
 TMP$1321$1 = 1ll;
 label$1012:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$1010;
 TMP$1320$1 = 0ll;
 goto label$1013;
 label$1010:;
 TMP$1320$1 = 1ll;
 label$1013:;
 _ZN7VECTOR2C1Edd( tmp$1318$1, (double)TMP$1320$1, (double)TMP$1321$1 );
 goto label$1009;
 label$1009:;
 return tmp$1318$1;
}

struct $7VECTOR3* _Z5STEP_R7VECTOR3S0_( struct $7VECTOR3* tmp$1322$1, struct $7VECTOR3* EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$1324$1;
 int64 TMP$1325$1;
 int64 TMP$1326$1;
 label$1014:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$1018;
 TMP$1326$1 = 0ll;
 goto label$1019;
 label$1018:;
 TMP$1326$1 = 1ll;
 label$1019:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$1017;
 TMP$1325$1 = 0ll;
 goto label$1020;
 label$1017:;
 TMP$1325$1 = 1ll;
 label$1020:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$1016;
 TMP$1324$1 = 0ll;
 goto label$1021;
 label$1016:;
 TMP$1324$1 = 1ll;
 label$1021:;
 _ZN7VECTOR3C1Eddd( tmp$1322$1, (double)TMP$1324$1, (double)TMP$1325$1, (double)TMP$1326$1 );
 goto label$1015;
 label$1015:;
 return tmp$1322$1;
}

struct $7VECTOR4* _Z5STEP_R7VECTOR4S0_( struct $7VECTOR4* tmp$1327$1, struct $7VECTOR4* EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$1329$1;
 int64 TMP$1330$1;
 int64 TMP$1331$1;
 int64 TMP$1332$1;
 label$1022:;
 if( *(double*)((uint8*)X$1 + 24ll) >= *(double*)((uint8*)EDGE$1 + 24ll) ) goto label$1027;
 TMP$1332$1 = 0ll;
 goto label$1028;
 label$1027:;
 TMP$1332$1 = 1ll;
 label$1028:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$1026;
 TMP$1331$1 = 0ll;
 goto label$1029;
 label$1026:;
 TMP$1331$1 = 1ll;
 label$1029:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$1025;
 TMP$1330$1 = 0ll;
 goto label$1030;
 label$1025:;
 TMP$1330$1 = 1ll;
 label$1030:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$1024;
 TMP$1329$1 = 0ll;
 goto label$1031;
 label$1024:;
 TMP$1329$1 = 1ll;
 label$1031:;
 _ZN7VECTOR4C1Edddd( tmp$1327$1, (double)TMP$1329$1, (double)TMP$1330$1, (double)TMP$1331$1, (double)TMP$1332$1 );
 goto label$1023;
 label$1023:;
 return tmp$1327$1;
}

struct $7VECTOR2* _Z5STEP_dR7VECTOR2( struct $7VECTOR2* tmp$1333$1, double EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$1335$1;
 int64 TMP$1336$1;
 label$1032:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1035;
 TMP$1336$1 = 0ll;
 goto label$1036;
 label$1035:;
 TMP$1336$1 = 1ll;
 label$1036:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1034;
 TMP$1335$1 = 0ll;
 goto label$1037;
 label$1034:;
 TMP$1335$1 = 1ll;
 label$1037:;
 _ZN7VECTOR2C1Edd( tmp$1333$1, (double)TMP$1335$1, (double)TMP$1336$1 );
 goto label$1033;
 label$1033:;
 return tmp$1333$1;
}

struct $7VECTOR3* _Z5STEP_dR7VECTOR3( struct $7VECTOR3* tmp$1337$1, double EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$1339$1;
 int64 TMP$1340$1;
 int64 TMP$1341$1;
 label$1038:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$1042;
 TMP$1341$1 = 0ll;
 goto label$1043;
 label$1042:;
 TMP$1341$1 = 1ll;
 label$1043:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1041;
 TMP$1340$1 = 0ll;
 goto label$1044;
 label$1041:;
 TMP$1340$1 = 1ll;
 label$1044:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1040;
 TMP$1339$1 = 0ll;
 goto label$1045;
 label$1040:;
 TMP$1339$1 = 1ll;
 label$1045:;
 _ZN7VECTOR3C1Eddd( tmp$1337$1, (double)TMP$1339$1, (double)TMP$1340$1, (double)TMP$1341$1 );
 goto label$1039;
 label$1039:;
 return tmp$1337$1;
}

struct $7VECTOR4* _Z5STEP_dR7VECTOR4( struct $7VECTOR4* tmp$1342$1, double EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$1344$1;
 int64 TMP$1345$1;
 int64 TMP$1346$1;
 int64 TMP$1347$1;
 label$1046:;
 if( *(double*)((uint8*)X$1 + 24ll) >= EDGE$1 ) goto label$1051;
 TMP$1347$1 = 0ll;
 goto label$1052;
 label$1051:;
 TMP$1347$1 = 1ll;
 label$1052:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$1050;
 TMP$1346$1 = 0ll;
 goto label$1053;
 label$1050:;
 TMP$1346$1 = 1ll;
 label$1053:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1049;
 TMP$1345$1 = 0ll;
 goto label$1054;
 label$1049:;
 TMP$1345$1 = 1ll;
 label$1054:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1048;
 TMP$1344$1 = 0ll;
 goto label$1055;
 label$1048:;
 TMP$1344$1 = 1ll;
 label$1055:;
 _ZN7VECTOR4C1Edddd( tmp$1342$1, (double)TMP$1344$1, (double)TMP$1345$1, (double)TMP$1346$1, (double)TMP$1347$1 );
 goto label$1047;
 label$1047:;
 return tmp$1342$1;
}

double _Z10SMOOTHSTEPddd( double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1056:;
 if( X$1 >= EDGE0$1 ) goto label$1059;
 {
  fb$result$1 = 0x0p+0;
  goto label$1057;
  label$1059:;
 }
 if( X$1 < EDGE1$1 ) goto label$1061;
 {
  fb$result$1 = 0x1.p+0;
  goto label$1057;
  label$1061:;
 }
 X$1 = (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1);
 fb$result$1 = (X$1 * X$1) * (-(X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$1057;
 label$1057:;
 return fb$result$1;
}

double SMOOTHERSTEP( double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1062:;
 double vr$4 = _Z5CLAMPddd( (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = vr$4;
 fb$result$1 = ((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 0x1.8p+2) + -0x1.Ep+3)) + 0x1.4p+3);
 goto label$1063;
 label$1063:;
 return fb$result$1;
}

struct $7VECTOR2* _Z10SMOOTHSTEPR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1348$1, struct $7VECTOR2* EDGE0$1, struct $7VECTOR2* EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$1064:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1348$1, vr$7, vr$3 );
 goto label$1065;
 label$1065:;
 return tmp$1348$1;
}

struct $7VECTOR3* _Z10SMOOTHSTEPR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1350$1, struct $7VECTOR3* EDGE0$1, struct $7VECTOR3* EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$1066:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$11 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1350$1, vr$11, vr$7, vr$3 );
 goto label$1067;
 label$1067:;
 return tmp$1350$1;
}

struct $7VECTOR4* _Z10SMOOTHSTEPR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1352$1, struct $7VECTOR4* EDGE0$1, struct $7VECTOR4* EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$1068:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 24ll), *(double*)((uint8*)EDGE1$1 + 24ll), *(double*)((uint8*)X$1 + 24ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 double vr$11 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$15 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1352$1, vr$15, vr$11, vr$7, vr$3 );
 goto label$1069;
 label$1069:;
 return tmp$1352$1;
}

struct $7VECTOR2* _Z10SMOOTHSTEPddR7VECTOR2( struct $7VECTOR2* tmp$1354$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$1070:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1354$1, vr$3, vr$1 );
 goto label$1071;
 label$1071:;
 return tmp$1354$1;
}

struct $7VECTOR3* _Z10SMOOTHSTEPddR7VECTOR3( struct $7VECTOR3* tmp$1356$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$1072:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$5 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1356$1, vr$5, vr$3, vr$1 );
 goto label$1073;
 label$1073:;
 return tmp$1356$1;
}

struct $7VECTOR4* _Z10SMOOTHSTEPddR7VECTOR4( struct $7VECTOR4* tmp$1358$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$1074:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 double vr$5 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1358$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$1075;
 label$1075:;
 return tmp$1358$1;
}

double INVERSE_SMOOTHSTEP( double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1076:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-(X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$1077;
 label$1077:;
 return fb$result$1;
}

double _Z7LENGTH2d( double A$1 )
{
 double TMP$1360$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1078:;
 if( A$1 >= 0x0p+0 ) goto label$1080;
 TMP$1360$1 = -A$1;
 goto label$1081;
 label$1080:;
 TMP$1360$1 = A$1;
 label$1081:;
 fb$result$1 = TMP$1360$1;
 goto label$1079;
 label$1079:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR2( struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1082:;
 fb$result$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$1083;
 label$1083:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR3( struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1084:;
 fb$result$1 = ((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll));
 goto label$1085;
 label$1085:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR4( struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1086:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll));
 goto label$1087;
 label$1087:;
 return fb$result$1;
}

double _Z6LENGTHd( double A$1 )
{
 double TMP$1361$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1088:;
 if( A$1 >= 0x0p+0 ) goto label$1090;
 TMP$1361$1 = -A$1;
 goto label$1091;
 label$1090:;
 TMP$1361$1 = A$1;
 label$1091:;
 fb$result$1 = TMP$1361$1;
 goto label$1089;
 label$1089:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR2( struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1092:;
 float vr$9 = sqrtf( (float)((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$9;
 goto label$1093;
 label$1093:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR3( struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1094:;
 float vr$13 = sqrtf( (float)(((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) );
 fb$result$1 = (double)vr$13;
 goto label$1095;
 label$1095:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR4( struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1096:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) );
 fb$result$1 = (double)vr$17;
 goto label$1097;
 label$1097:;
 return fb$result$1;
}

double _Z8DISTANCEdd( double A$1, double B$1 )
{
 double TMP$1362$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1098:;
 double D$1;
 D$1 = A$1 - B$1;
 if( A$1 >= 0x0p+0 ) goto label$1100;
 TMP$1362$1 = -A$1;
 goto label$1101;
 label$1100:;
 TMP$1362$1 = A$1;
 label$1101:;
 fb$result$1 = TMP$1362$1;
 goto label$1099;
 label$1099:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR2S0_( struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1102:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (X$1 * X$1) + (Y$1 * Y$1);
 if( D$1 != 0x0p+0 ) goto label$1105;
 {
  fb$result$1 = 0x0p+0;
  goto label$1103;
  label$1105:;
 }
 float vr$11 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$11;
 goto label$1103;
 label$1103:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR3S0_( struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1106:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double D$1;
 D$1 = ((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1);
 if( D$1 != 0x0p+0 ) goto label$1109;
 {
  fb$result$1 = 0x0p+0;
  goto label$1107;
  label$1109:;
 }
 float vr$16 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$16;
 goto label$1107;
 label$1107:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR4S0_( struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1110:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 24ll) - *(double*)((uint8*)B$1 + 24ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$1113;
 {
  fb$result$1 = 0x0p+0;
  goto label$1111;
  label$1113:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$1111;
 label$1111:;
 return fb$result$1;
}

double _Z3DOTdd( double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1114:;
 fb$result$1 = A$1 * B$1;
 goto label$1115;
 label$1115:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR2S0_( struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1116:;
 fb$result$1 = (*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$1117;
 label$1117:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR3S0_( struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1118:;
 fb$result$1 = ((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll));
 goto label$1119;
 label$1119:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR4S0_( struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1120:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll))) + (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 24ll));
 goto label$1121;
 label$1121:;
 return fb$result$1;
}

struct $7VECTOR3* CROSS( struct $7VECTOR3* tmp$1363$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$1122:;
 _ZN7VECTOR3C1Eddd( tmp$1363$1, (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 16ll)) - (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * *(double*)B$1) - (*(double*)A$1 * *(double*)((uint8*)B$1 + 16ll)), (*(double*)A$1 * *(double*)((uint8*)B$1 + 8ll)) - (*(double*)((uint8*)A$1 + 8ll) * *(double*)B$1) );
 goto label$1123;
 label$1123:;
 return tmp$1363$1;
}

double _Z9NORMALIZEd( double V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1124:;
 fb$result$1 = 0x1.p+0;
 goto label$1125;
 label$1125:;
 return fb$result$1;
}

struct $7VECTOR2* _Z9NORMALIZER7VECTOR2( struct $7VECTOR2* tmp$1365$1, struct $7VECTOR2* V$1 )
{
 label$1126:;
 double D$1;
 D$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$1129;
 {
  float vr$8 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$8;
  label$1129:;
 }
 _ZN7VECTOR2C1Edd( tmp$1365$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 goto label$1127;
 label$1127:;
 return tmp$1365$1;
}

struct $7VECTOR3* _Z9NORMALIZER7VECTOR3( struct $7VECTOR3* tmp$1367$1, struct $7VECTOR3* V$1 )
{
 label$1130:;
 double D$1;
 D$1 = ((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll));
 if( D$1 == 0x0p+0 ) goto label$1133;
 {
  float vr$12 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$12;
  label$1133:;
 }
 _ZN7VECTOR3C1Eddd( tmp$1367$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)((uint8*)V$1 + 16ll) * D$1 );
 goto label$1131;
 label$1131:;
 return tmp$1367$1;
}

struct $7VECTOR4* _Z9NORMALIZER7VECTOR4( struct $7VECTOR4* tmp$1369$1, struct $7VECTOR4* V$1 )
{
 label$1134:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll));
 if( D$1 == 0x0p+0 ) goto label$1137;
 {
  float vr$16 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$16;
  label$1137:;
 }
 _ZN7VECTOR4C1Edddd( tmp$1369$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)((uint8*)V$1 + 16ll) * D$1, *(double*)((uint8*)V$1 + 24ll) * D$1 );
 goto label$1135;
 label$1135:;
 return tmp$1369$1;
}

double _Z11FACEFORWARDddd( double N$1, double I$1, double NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1138:;
 double D$1;
 D$1 = I$1 * NREF$1;
 if( D$1 >= 0x0p+0 ) goto label$1141;
 {
  fb$result$1 = N$1;
  goto label$1139;
 }
 goto label$1140;
 label$1141:;
 {
  fb$result$1 = -N$1;
  goto label$1139;
  label$1140:;
 }
 label$1139:;
 return fb$result$1;
}

struct $7VECTOR2* _Z11FACEFORWARDR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1371$1, struct $7VECTOR2* N$1, struct $7VECTOR2* I$1, struct $7VECTOR2* NREF$1 )
{
 label$1142:;
 double D$1;
 D$1 = (*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$1145;
 {
  _ZN7VECTOR2C1ERS_( tmp$1371$1, N$1 );
  goto label$1143;
 }
 goto label$1144;
 label$1145:;
 {
  struct $7VECTOR2 TMP$1372$2;
  struct $7VECTOR2* vr$8 = _ZngR7VECTOR2( &TMP$1372$2, N$1 );
  _ZN7VECTOR2C1ERS_( tmp$1371$1, vr$8 );
  goto label$1143;
  label$1144:;
 }
 label$1143:;
 return tmp$1371$1;
}

struct $7VECTOR3* _Z11FACEFORWARDR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1373$1, struct $7VECTOR3* N$1, struct $7VECTOR3* I$1, struct $7VECTOR3* NREF$1 )
{
 label$1146:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll));
 if( D$1 >= 0x0p+0 ) goto label$1149;
 {
  _ZN7VECTOR3C1ERS_( tmp$1373$1, N$1 );
  goto label$1147;
 }
 goto label$1148;
 label$1149:;
 {
  struct $7VECTOR3 TMP$1374$2;
  struct $7VECTOR3* vr$12 = _ZngR7VECTOR3( &TMP$1374$2, N$1 );
  _ZN7VECTOR3C1ERS_( tmp$1373$1, vr$12 );
  goto label$1147;
  label$1148:;
 }
 label$1147:;
 return tmp$1373$1;
}

struct $7VECTOR4* _Z11FACEFORWARDR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1375$1, struct $7VECTOR4* N$1, struct $7VECTOR4* I$1, struct $7VECTOR4* NREF$1 )
{
 label$1150:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)NREF$1 + 24ll));
 if( D$1 >= 0x0p+0 ) goto label$1153;
 {
  _ZN7VECTOR4C1ERS_( tmp$1375$1, N$1 );
  goto label$1151;
 }
 goto label$1152;
 label$1153:;
 {
  struct $7VECTOR4 TMP$1376$2;
  struct $7VECTOR4* vr$16 = _ZngR7VECTOR4( &TMP$1376$2, N$1 );
  _ZN7VECTOR4C1ERS_( tmp$1375$1, vr$16 );
  goto label$1151;
  label$1152:;
 }
 label$1151:;
 return tmp$1375$1;
}

double _Z7REFLECTdd( double I$1, double N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1154:;
 double D$1;
 D$1 = (I$1 * N$1) * 0x1.p+1;
 fb$result$1 = I$1 - (N$1 * D$1);
 goto label$1155;
 label$1155:;
 return fb$result$1;
}

struct $7VECTOR2* _Z7REFLECTR7VECTOR2S0_( struct $7VECTOR2* tmp$1377$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1 )
{
 label$1156:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN7VECTOR2C1Edd( tmp$1377$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 goto label$1157;
 label$1157:;
 return tmp$1377$1;
}

struct $7VECTOR3* _Z7REFLECTR7VECTOR3S0_( struct $7VECTOR3* tmp$1379$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1 )
{
 label$1158:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) * 0x1.p+1;
 _ZN7VECTOR3C1Eddd( tmp$1379$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1) );
 goto label$1159;
 label$1159:;
 return tmp$1379$1;
}

struct $7VECTOR4* _Z7REFLECTR7VECTOR4S0_( struct $7VECTOR4* tmp$1381$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1 )
{
 label$1160:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) * 0x1.p+1;
 _ZN7VECTOR4C1Edddd( tmp$1381$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1), *(double*)((uint8*)I$1 + 24ll) - (*(double*)((uint8*)N$1 + 24ll) * D$1) );
 goto label$1161;
 label$1161:;
 return tmp$1381$1;
}

struct $7VECTOR2* _Z7REFRACTR7VECTOR2S0_d( struct $7VECTOR2* tmp$1383$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1, double ETA$1 )
{
 label$1162:;
 struct $7VECTOR2 R$1;
 _ZN7VECTOR2C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1165;
 {
  _ZN7VECTOR2C1ERS_( tmp$1383$1, &R$1 );
  goto label$1163;
 }
 goto label$1164;
 label$1165:;
 if( K$1 != 0x0p+0 ) goto label$1166;
 {
  struct $7VECTOR2 TMP$1384$2;
  struct $7VECTOR2 TMP$1385$2;
  double TMP$1386$2;
  struct $7VECTOR2 TMP$1387$2;
  TMP$1386$2 = ETA$1 * DOTNI$1;
  struct $7VECTOR2* vr$19 = _ZmlRdR7VECTOR2( &TMP$1385$2, &TMP$1386$2, N$1 );
  struct $7VECTOR2* vr$22 = _ZmlRdR7VECTOR2( &TMP$1384$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$24 = _ZmiR7VECTOR2S0_( &TMP$1387$2, vr$22, vr$19 );
  _ZN7VECTOR2aSERS_( &R$1, vr$24 );
 }
 goto label$1164;
 label$1166:;
 {
  struct $7VECTOR2 TMP$1388$2;
  struct $7VECTOR2 TMP$1389$2;
  double TMP$1390$2;
  struct $7VECTOR2 TMP$1391$2;
  double vr$26 = _Z4SQRTd( K$1 );
  K$1 = vr$26;
  TMP$1390$2 = (ETA$1 * DOTNI$1) + K$1;
  struct $7VECTOR2* vr$31 = _ZmlRdR7VECTOR2( &TMP$1389$2, &TMP$1390$2, N$1 );
  struct $7VECTOR2* vr$34 = _ZmlRdR7VECTOR2( &TMP$1388$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$36 = _ZmiR7VECTOR2S0_( &TMP$1391$2, vr$34, vr$31 );
  _ZN7VECTOR2aSERS_( &R$1, vr$36 );
 }
 label$1164:;
 _ZN7VECTOR2C1ERS_( tmp$1383$1, &R$1 );
 goto label$1163;
 label$1163:;
 return tmp$1383$1;
}

struct $7VECTOR3* _Z7REFRACTR7VECTOR3S0_d( struct $7VECTOR3* tmp$1392$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1, double ETA$1 )
{
 label$1167:;
 struct $7VECTOR3 R$1;
 _ZN7VECTOR3C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1170;
 {
  _ZN7VECTOR3C1ERS_( tmp$1392$1, &R$1 );
  goto label$1168;
 }
 goto label$1169;
 label$1170:;
 if( K$1 != 0x0p+0 ) goto label$1171;
 {
  struct $7VECTOR3 TMP$1393$2;
  struct $7VECTOR3 TMP$1394$2;
  struct $7VECTOR3 TMP$1395$2;
  struct $7VECTOR3* vr$22 = _ZmldR7VECTOR3( &TMP$1394$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$1393$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$26 = _ZmiR7VECTOR3S0_( &TMP$1395$2, vr$24, vr$22 );
  _ZN7VECTOR3aSERS_( &R$1, vr$26 );
 }
 goto label$1169;
 label$1171:;
 {
  struct $7VECTOR3 TMP$1396$2;
  struct $7VECTOR3 TMP$1397$2;
  struct $7VECTOR3 TMP$1398$2;
  double vr$28 = _Z4SQRTd( K$1 );
  K$1 = vr$28;
  struct $7VECTOR3* vr$32 = _ZmldR7VECTOR3( &TMP$1397$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR3* vr$34 = _ZmldR7VECTOR3( &TMP$1396$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$36 = _ZmiR7VECTOR3S0_( &TMP$1398$2, vr$34, vr$32 );
  _ZN7VECTOR3aSERS_( &R$1, vr$36 );
 }
 label$1169:;
 _ZN7VECTOR3C1ERS_( tmp$1392$1, &R$1 );
 goto label$1168;
 label$1168:;
 return tmp$1392$1;
}

struct $7VECTOR4* _Z7REFRACTR7VECTOR4S0_d( struct $7VECTOR4* tmp$1399$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1, double ETA$1 )
{
 label$1172:;
 struct $7VECTOR4 R$1;
 _ZN7VECTOR4C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1175;
 {
  _ZN7VECTOR4C1ERS_( tmp$1399$1, &R$1 );
  goto label$1173;
 }
 goto label$1174;
 label$1175:;
 if( K$1 != 0x0p+0 ) goto label$1176;
 {
  struct $7VECTOR4 TMP$1400$2;
  struct $7VECTOR4 TMP$1401$2;
  struct $7VECTOR4 TMP$1402$2;
  struct $7VECTOR4* vr$26 = _ZmldR7VECTOR4( &TMP$1401$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR4* vr$28 = _ZmldR7VECTOR4( &TMP$1400$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$30 = _ZmiR7VECTOR4S0_( &TMP$1402$2, vr$28, vr$26 );
  _ZN7VECTOR4aSERS_( &R$1, vr$30 );
 }
 goto label$1174;
 label$1176:;
 {
  struct $7VECTOR4 TMP$1403$2;
  struct $7VECTOR4 TMP$1404$2;
  struct $7VECTOR4 TMP$1405$2;
  double vr$32 = _Z4SQRTd( K$1 );
  K$1 = vr$32;
  struct $7VECTOR4* vr$36 = _ZmldR7VECTOR4( &TMP$1404$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR4* vr$38 = _ZmldR7VECTOR4( &TMP$1403$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$40 = _ZmiR7VECTOR4S0_( &TMP$1405$2, vr$38, vr$36 );
  _ZN7VECTOR4aSERS_( &R$1, vr$40 );
 }
 label$1174:;
 _ZN7VECTOR4C1ERS_( tmp$1399$1, &R$1 );
 goto label$1173;
 label$1173:;
 return tmp$1399$1;
}

void _ZN4MAT2C1Ed( struct $4MAT2* THIS$1, double D$1 )
{
 label$1177:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 label$1178:;
}

void _ZN4MAT2C1Edddd( struct $4MAT2* THIS$1, double A$1, double B$1, double C$1, double D$1 )
{
 label$1179:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 label$1180:;
}

FBSTRING* _ZN4MAT2cv8FBSTRINGEv( struct $4MAT2* THIS$1 )
{
 FBSTRING TMP$1407$1;
 FBSTRING TMP$1408$1;
 FBSTRING TMP$1409$1;
 FBSTRING TMP$1410$1;
 FBSTRING TMP$1411$1;
 FBSTRING TMP$1412$1;
 FBSTRING TMP$1413$1;
 FBSTRING TMP$1414$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1181:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1407$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1407$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1408$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1408$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1409$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1409$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1410$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1410$1, (void*)vr$17, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1411$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1411$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1412$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1412$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1413$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1413$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1414$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1414$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$1182;
 label$1182:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2* tmp$1415$1, struct $4MAT2* L$1, struct $7VECTOR2* R$1 )
{
 label$1183:;
 _ZN7VECTOR2C1Edd( tmp$1415$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$1184;
 label$1184:;
 return tmp$1415$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2R4MAT2( struct $7VECTOR2* tmp$1417$1, struct $7VECTOR2* R$1, struct $4MAT2* L$1 )
{
 label$1185:;
 _ZN7VECTOR2C1Edd( tmp$1417$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$1186;
 label$1186:;
 return tmp$1417$1;
}

struct $4MAT2 _ZmlR4MAT2S0_( struct $4MAT2* L$1, struct $4MAT2* R$1 )
{
 struct $4MAT2 fb$result$1;
 label$1187:;
 _ZN4MAT2C1Edddd( &fb$result$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 24ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1188;
 label$1188:;
 return fb$result$1;
}

void _ZN4MAT3C1Ed( struct $4MAT3* THIS$1, double D$1 )
{
 label$1189:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = D$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = D$1;
 label$1190:;
}

void _ZN4MAT3C1Eddddddddd( struct $4MAT3* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double J$1 )
{
 label$1191:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 *(double*)((uint8*)THIS$1 + 32ll) = E$1;
 *(double*)((uint8*)THIS$1 + 40ll) = F$1;
 *(double*)((uint8*)THIS$1 + 48ll) = G$1;
 *(double*)((uint8*)THIS$1 + 56ll) = H$1;
 *(double*)((uint8*)THIS$1 + 64ll) = J$1;
 label$1192:;
}

void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$1193:;
 *(double*)THIS$1 = *(double*)A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)A$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)A$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)B$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)B$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)B$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)C$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)C$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)C$1 + 16ll);
 label$1194:;
}

FBSTRING* _ZN4MAT3cv8FBSTRINGEv( struct $4MAT3* THIS$1 )
{
 FBSTRING TMP$1420$1;
 FBSTRING TMP$1421$1;
 FBSTRING TMP$1422$1;
 FBSTRING TMP$1423$1;
 FBSTRING TMP$1424$1;
 FBSTRING TMP$1425$1;
 FBSTRING TMP$1426$1;
 FBSTRING TMP$1427$1;
 FBSTRING TMP$1428$1;
 FBSTRING TMP$1429$1;
 FBSTRING TMP$1430$1;
 FBSTRING TMP$1431$1;
 FBSTRING TMP$1432$1;
 FBSTRING TMP$1433$1;
 FBSTRING TMP$1434$1;
 FBSTRING TMP$1435$1;
 FBSTRING TMP$1436$1;
 FBSTRING TMP$1437$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1195:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1420$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1420$1, (void*)"(", 2ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1421$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1421$1, (void*)vr$21, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1422$1, 0, 24ll );
 FBSTRING* vr$27 = fb_StrConcat( &TMP$1422$1, (void*)vr$24, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1423$1, 0, 24ll );
 FBSTRING* vr$30 = fb_StrConcat( &TMP$1423$1, (void*)vr$27, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1424$1, 0, 24ll );
 FBSTRING* vr$33 = fb_StrConcat( &TMP$1424$1, (void*)vr$30, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1425$1, 0, 24ll );
 FBSTRING* vr$36 = fb_StrConcat( &TMP$1425$1, (void*)vr$33, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1426$1, 0, 24ll );
 FBSTRING* vr$39 = fb_StrConcat( &TMP$1426$1, (void*)vr$36, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1427$1, 0, 24ll );
 FBSTRING* vr$42 = fb_StrConcat( &TMP$1427$1, (void*)vr$39, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1428$1, 0, 24ll );
 FBSTRING* vr$45 = fb_StrConcat( &TMP$1428$1, (void*)vr$42, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1429$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1429$1, (void*)vr$45, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1430$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1430$1, (void*)vr$48, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1431$1, 0, 24ll );
 FBSTRING* vr$54 = fb_StrConcat( &TMP$1431$1, (void*)vr$51, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1432$1, 0, 24ll );
 FBSTRING* vr$57 = fb_StrConcat( &TMP$1432$1, (void*)vr$54, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1433$1, 0, 24ll );
 FBSTRING* vr$60 = fb_StrConcat( &TMP$1433$1, (void*)vr$57, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1434$1, 0, 24ll );
 FBSTRING* vr$63 = fb_StrConcat( &TMP$1434$1, (void*)vr$60, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1435$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1435$1, (void*)vr$63, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1436$1, 0, 24ll );
 FBSTRING* vr$69 = fb_StrConcat( &TMP$1436$1, (void*)vr$66, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1437$1, 0, 24ll );
 FBSTRING* vr$72 = fb_StrConcat( &TMP$1437$1, (void*)vr$69, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$72, -1ll, 0 );
 goto label$1196;
 label$1196:;
 FBSTRING* vr$75 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$75;
}

void _ZN4MAT313SETZROTATIONDEd( struct $4MAT3* THIS$1, double DEG$1 )
{
 label$1197:;
 _ZN4MAT313SETZROTATIONREd( THIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$1198:;
}

void _ZN4MAT313SETZROTATIONREd( struct $4MAT3* THIS$1, double RAD$1 )
{
 label$1199:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 *(double*)THIS$1 = CO$1;
 *(double*)((uint8*)THIS$1 + 8ll) = SI$1;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = -SI$1;
 *(double*)((uint8*)THIS$1 + 32ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1200:;
}

void _ZN4MAT312SETROTATIONDER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double DEG$1 )
{
 label$1201:;
 _ZN4MAT312SETROTATIONRER7VECTOR3d( THIS$1, AXIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$1202:;
}

void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double RAD$1 )
{
 label$1203:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 double OC$1;
 OC$1 = 0x1.p+0 - CO$1;
 *(double*)THIS$1 = ((OC$1 * *(double*)AXIS$1) * *(double*)AXIS$1) + CO$1;
 *(double*)((uint8*)THIS$1 + 8ll) = ((OC$1 * *(double*)AXIS$1) * *(double*)((uint8*)AXIS$1 + 8ll)) - (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 16ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)AXIS$1) + (*(double*)((uint8*)AXIS$1 + 8ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 24ll) = ((OC$1 * *(double*)AXIS$1) * *(double*)((uint8*)AXIS$1 + 8ll)) + (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 32ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 8ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 40ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) - (*(double*)AXIS$1 * SI$1);
 *(double*)((uint8*)THIS$1 + 48ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)AXIS$1) - (*(double*)((uint8*)AXIS$1 + 8ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 56ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + (*(double*)AXIS$1 * SI$1);
 *(double*)((uint8*)THIS$1 + 64ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + CO$1;
 label$1204:;
}

void _ZN4MAT310SETSCALINGER7VECTOR2( struct $4MAT3* THIS$1, struct $7VECTOR2* SCALE$1 )
{
 label$1205:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, *(double*)SCALE$1, *(double*)((uint8*)SCALE$1 + 8ll) );
 label$1206:;
}

void _ZN4MAT310SETSCALINGEd( struct $4MAT3* THIS$1, double SCALE$1 )
{
 label$1207:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, SCALE$1, SCALE$1 );
 label$1208:;
}

void _ZN4MAT310SETSCALINGEdd( struct $4MAT3* THIS$1, double SCALEX$1, double SCALEY$1 )
{
 label$1209:;
 *(double*)THIS$1 = SCALEX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = SCALEY$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1210:;
}

struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3* tmp$1438$1, struct $4MAT3* L$1, struct $7VECTOR3* R$1 )
{
 label$1211:;
 _ZN7VECTOR3C1Eddd( tmp$1438$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)) );
 goto label$1212;
 label$1212:;
 return tmp$1438$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3R4MAT3( struct $7VECTOR3* tmp$1440$1, struct $7VECTOR3* R$1, struct $4MAT3* L$1 )
{
 label$1213:;
 _ZN7VECTOR3C1Eddd( tmp$1440$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 48ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)) );
 goto label$1214;
 label$1214:;
 return tmp$1440$1;
}

struct $4MAT3 _ZmlR4MAT3S0_( struct $4MAT3* L$1, struct $4MAT3* R$1 )
{
 struct $4MAT3 fb$result$1;
 label$1215:;
 _ZN4MAT3C1Eddddddddd( &fb$result$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)L$1 * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)L$1 * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 64ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 64ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$1216;
 label$1216:;
 return fb$result$1;
}

void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double I$1, double J$1, double K$1, double L$1, double M$1, double N$1, double O$1, double P$1 )
{
 label$1217:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 *(double*)((uint8*)THIS$1 + 32ll) = E$1;
 *(double*)((uint8*)THIS$1 + 40ll) = F$1;
 *(double*)((uint8*)THIS$1 + 48ll) = G$1;
 *(double*)((uint8*)THIS$1 + 56ll) = H$1;
 *(double*)((uint8*)THIS$1 + 64ll) = I$1;
 *(double*)((uint8*)THIS$1 + 72ll) = J$1;
 *(double*)((uint8*)THIS$1 + 80ll) = K$1;
 *(double*)((uint8*)THIS$1 + 88ll) = L$1;
 *(double*)((uint8*)THIS$1 + 96ll) = M$1;
 *(double*)((uint8*)THIS$1 + 104ll) = N$1;
 *(double*)((uint8*)THIS$1 + 112ll) = O$1;
 *(double*)((uint8*)THIS$1 + 120ll) = P$1;
 label$1218:;
}

void _ZN4MAT4C1Ed( struct $4MAT4* THIS$1, double D$1 )
{
 label$1219:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = D$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = D$1;
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 120ll) = D$1;
 label$1220:;
}

FBSTRING* _ZN4MAT4cv8FBSTRINGEv( struct $4MAT4* THIS$1 )
{
 FBSTRING TMP$1443$1;
 FBSTRING TMP$1444$1;
 FBSTRING TMP$1445$1;
 FBSTRING TMP$1446$1;
 FBSTRING TMP$1447$1;
 FBSTRING TMP$1448$1;
 FBSTRING TMP$1449$1;
 FBSTRING TMP$1450$1;
 FBSTRING TMP$1451$1;
 FBSTRING TMP$1452$1;
 FBSTRING TMP$1453$1;
 FBSTRING TMP$1454$1;
 FBSTRING TMP$1455$1;
 FBSTRING TMP$1456$1;
 FBSTRING TMP$1457$1;
 FBSTRING TMP$1458$1;
 FBSTRING TMP$1459$1;
 FBSTRING TMP$1460$1;
 FBSTRING TMP$1461$1;
 FBSTRING TMP$1462$1;
 FBSTRING TMP$1463$1;
 FBSTRING TMP$1464$1;
 FBSTRING TMP$1465$1;
 FBSTRING TMP$1466$1;
 FBSTRING TMP$1467$1;
 FBSTRING TMP$1468$1;
 FBSTRING TMP$1469$1;
 FBSTRING TMP$1470$1;
 FBSTRING TMP$1471$1;
 FBSTRING TMP$1472$1;
 FBSTRING TMP$1473$1;
 FBSTRING TMP$1474$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1221:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 120ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 88ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 112ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 80ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 104ll) );
 FBSTRING* vr$20 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 72ll) );
 FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 FBSTRING* vr$24 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$26 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 96ll) );
 FBSTRING* vr$28 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$30 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$32 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1443$1, 0, 24ll );
 FBSTRING* vr$35 = fb_StrConcat( &TMP$1443$1, (void*)"(", 2ll, (void*)vr$32, -1ll );
 __builtin_memset( &TMP$1444$1, 0, 24ll );
 FBSTRING* vr$38 = fb_StrConcat( &TMP$1444$1, (void*)vr$35, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1445$1, 0, 24ll );
 FBSTRING* vr$41 = fb_StrConcat( &TMP$1445$1, (void*)vr$38, -1ll, (void*)vr$30, -1ll );
 __builtin_memset( &TMP$1446$1, 0, 24ll );
 FBSTRING* vr$44 = fb_StrConcat( &TMP$1446$1, (void*)vr$41, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1447$1, 0, 24ll );
 FBSTRING* vr$47 = fb_StrConcat( &TMP$1447$1, (void*)vr$44, -1ll, (void*)vr$28, -1ll );
 __builtin_memset( &TMP$1448$1, 0, 24ll );
 FBSTRING* vr$50 = fb_StrConcat( &TMP$1448$1, (void*)vr$47, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1449$1, 0, 24ll );
 FBSTRING* vr$53 = fb_StrConcat( &TMP$1449$1, (void*)vr$50, -1ll, (void*)vr$26, -1ll );
 __builtin_memset( &TMP$1450$1, 0, 24ll );
 FBSTRING* vr$56 = fb_StrConcat( &TMP$1450$1, (void*)vr$53, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1451$1, 0, 24ll );
 FBSTRING* vr$59 = fb_StrConcat( &TMP$1451$1, (void*)vr$56, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$1452$1, 0, 24ll );
 FBSTRING* vr$62 = fb_StrConcat( &TMP$1452$1, (void*)vr$59, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1453$1, 0, 24ll );
 FBSTRING* vr$65 = fb_StrConcat( &TMP$1453$1, (void*)vr$62, -1ll, (void*)vr$22, -1ll );
 __builtin_memset( &TMP$1454$1, 0, 24ll );
 FBSTRING* vr$68 = fb_StrConcat( &TMP$1454$1, (void*)vr$65, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1455$1, 0, 24ll );
 FBSTRING* vr$71 = fb_StrConcat( &TMP$1455$1, (void*)vr$68, -1ll, (void*)vr$20, -1ll );
 __builtin_memset( &TMP$1456$1, 0, 24ll );
 FBSTRING* vr$74 = fb_StrConcat( &TMP$1456$1, (void*)vr$71, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1457$1, 0, 24ll );
 FBSTRING* vr$77 = fb_StrConcat( &TMP$1457$1, (void*)vr$74, -1ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1458$1, 0, 24ll );
 FBSTRING* vr$80 = fb_StrConcat( &TMP$1458$1, (void*)vr$77, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1459$1, 0, 24ll );
 FBSTRING* vr$83 = fb_StrConcat( &TMP$1459$1, (void*)vr$80, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1460$1, 0, 24ll );
 FBSTRING* vr$86 = fb_StrConcat( &TMP$1460$1, (void*)vr$83, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1461$1, 0, 24ll );
 FBSTRING* vr$89 = fb_StrConcat( &TMP$1461$1, (void*)vr$86, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1462$1, 0, 24ll );
 FBSTRING* vr$92 = fb_StrConcat( &TMP$1462$1, (void*)vr$89, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1463$1, 0, 24ll );
 FBSTRING* vr$95 = fb_StrConcat( &TMP$1463$1, (void*)vr$92, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1464$1, 0, 24ll );
 FBSTRING* vr$98 = fb_StrConcat( &TMP$1464$1, (void*)vr$95, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1465$1, 0, 24ll );
 FBSTRING* vr$101 = fb_StrConcat( &TMP$1465$1, (void*)vr$98, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1466$1, 0, 24ll );
 FBSTRING* vr$104 = fb_StrConcat( &TMP$1466$1, (void*)vr$101, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1467$1, 0, 24ll );
 FBSTRING* vr$107 = fb_StrConcat( &TMP$1467$1, (void*)vr$104, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1468$1, 0, 24ll );
 FBSTRING* vr$110 = fb_StrConcat( &TMP$1468$1, (void*)vr$107, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1469$1, 0, 24ll );
 FBSTRING* vr$113 = fb_StrConcat( &TMP$1469$1, (void*)vr$110, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1470$1, 0, 24ll );
 FBSTRING* vr$116 = fb_StrConcat( &TMP$1470$1, (void*)vr$113, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1471$1, 0, 24ll );
 FBSTRING* vr$119 = fb_StrConcat( &TMP$1471$1, (void*)vr$116, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1472$1, 0, 24ll );
 FBSTRING* vr$122 = fb_StrConcat( &TMP$1472$1, (void*)vr$119, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1473$1, 0, 24ll );
 FBSTRING* vr$125 = fb_StrConcat( &TMP$1473$1, (void*)vr$122, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1474$1, 0, 24ll );
 FBSTRING* vr$128 = fb_StrConcat( &TMP$1474$1, (void*)vr$125, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$128, -1ll, 0 );
 goto label$1222;
 label$1222:;
 FBSTRING* vr$131 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$131;
}

void _ZN4MAT413SETPROJECTIONEdddd( struct $4MAT4* THIS$1, double FOV$1, double ASPECTRATIO$1, double NEAR$1, double FAR$1 )
{
 label$1223:;
 double A$1;
 float vr$4 = tanf( (float)(((FOV$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7) * 0x1.p-1) );
 A$1 = 0x1.p+0 / (double)vr$4;
 double B$1;
 B$1 = A$1 / ASPECTRATIO$1;
 double C$1;
 C$1 = (FAR$1 + NEAR$1) / (NEAR$1 - FAR$1);
 double D$1;
 D$1 = ((FAR$1 * NEAR$1) * 0x1.p+1) / (NEAR$1 - FAR$1);
 *(double*)THIS$1 = B$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = B$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = C$1;
 *(double*)((uint8*)THIS$1 + 88ll) = -0x1.p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = D$1;
 *(double*)((uint8*)THIS$1 + 120ll) = 0x0p+0;
 label$1224:;
}

void _ZN4MAT410SETORTHO2DEdddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1 )
{
 label$1225:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1 + H$1, Y$1, 0x1.p+0, -0x1.p+0 );
 label$1226:;
}

void _ZN4MAT410SETORTHO2DEdddddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1, double NEAR$1, double FAR$1 )
{
 label$1227:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1, Y$1 + H$1, NEAR$1, FAR$1 );
 label$1228:;
}

void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4* THIS$1, double LEFT_$1, double RIGHT_$1, double BOTTOM$1, double TOP$1, double NEAR$1, double FAR$1 )
{
 label$1229:;
 double X_ORTH$1;
 X_ORTH$1 = 0x1.p+1 / (RIGHT_$1 - LEFT_$1);
 double Y_ORTH$1;
 Y_ORTH$1 = 0x1.p+1 / (TOP$1 - BOTTOM$1);
 double Z_ORTH$1;
 Z_ORTH$1 = -0x1.p+1 / (FAR$1 - NEAR$1);
 double TX$1;
 TX$1 = -(RIGHT_$1 + LEFT_$1) / (RIGHT_$1 - LEFT_$1);
 double TY$1;
 TY$1 = -(TOP$1 + BOTTOM$1) / (TOP$1 - BOTTOM$1);
 double TZ$1;
 TZ$1 = -(FAR$1 + NEAR$1) / (FAR$1 - NEAR$1);
 *(double*)THIS$1 = X_ORTH$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = Y_ORTH$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = Z_ORTH$1;
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = TX$1;
 *(double*)((uint8*)THIS$1 + 104ll) = TY$1;
 *(double*)((uint8*)THIS$1 + 112ll) = TZ$1;
 *(double*)((uint8*)THIS$1 + 120ll) = 0x1.p+0;
 label$1230:;
}

struct $7VECTOR4* _ZmlR4MAT4R7VECTOR4( struct $7VECTOR4* tmp$1475$1, struct $4MAT4* L$1, struct $7VECTOR4* R$1 )
{
 label$1231:;
 _ZN7VECTOR4C1Edddd( tmp$1475$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1232;
 label$1232:;
 return tmp$1475$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R4MAT4( struct $7VECTOR4* tmp$1477$1, struct $7VECTOR4* R$1, struct $4MAT4* L$1 )
{
 label$1233:;
 _ZN7VECTOR4C1Edddd( tmp$1477$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 32ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 64ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 96ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1234;
 label$1234:;
 return tmp$1477$1;
}

struct $4MAT4 _ZmlR4MAT4S0_( struct $4MAT4* L$1, struct $4MAT4* R$1 )
{
 struct $4MAT4 fb$result$1;
 label$1235:;
 _ZN4MAT4C1Edddddddddddddddd( &fb$result$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 120ll)) );
 goto label$1236;
 label$1236:;
 return fb$result$1;
}

struct $4MAT2 _Z14MATRIXCOMPMULTR4MAT2S0_( struct $4MAT2* X$1, struct $4MAT2* Y$1 )
{
 struct $4MAT2 fb$result$1;
 label$1237:;
 struct $4MAT2 Z$1;
 _ZN4MAT2C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I2$1;
 __builtin_memset( &I2$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1242:;
  {
   int64 IJ$3;
   IJ$3 = I2$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1246:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1244:;
    J$4 = J$4 + 1ll;
    label$1243:;
    if( J$4 <= 1ll ) goto label$1246;
    label$1245:;
   }
   I2$1 = I2$1 + 2ll;
  }
  label$1240:;
  I$2 = I$2 + 1ll;
  label$1239:;
  if( I$2 <= 1ll ) goto label$1242;
  label$1241:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 32 );
 goto label$1238;
 label$1238:;
 return fb$result$1;
}

struct $4MAT3 _Z14MATRIXCOMPMULTR4MAT3S0_( struct $4MAT3* X$1, struct $4MAT3* Y$1 )
{
 struct $4MAT3 fb$result$1;
 label$1247:;
 struct $4MAT3 Z$1;
 _ZN4MAT3C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I3$1;
 __builtin_memset( &I3$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1252:;
  {
   int64 IJ$3;
   IJ$3 = I3$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1256:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1254:;
    J$4 = J$4 + 1ll;
    label$1253:;
    if( J$4 <= 1ll ) goto label$1256;
    label$1255:;
   }
   I3$1 = I3$1 + 3ll;
  }
  label$1250:;
  I$2 = I$2 + 1ll;
  label$1249:;
  if( I$2 <= 1ll ) goto label$1252;
  label$1251:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 72 );
 goto label$1248;
 label$1248:;
 return fb$result$1;
}

struct $4MAT4 _Z14MATRIXCOMPMULTR4MAT4S0_( struct $4MAT4* X$1, struct $4MAT4* Y$1 )
{
 struct $4MAT4 fb$result$1;
 label$1257:;
 struct $4MAT4 Z$1;
 _ZN4MAT4C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I4$1;
 __builtin_memset( &I4$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1262:;
  {
   int64 IJ$3;
   IJ$3 = I4$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1266:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1264:;
    J$4 = J$4 + 1ll;
    label$1263:;
    if( J$4 <= 1ll ) goto label$1266;
    label$1265:;
   }
   I4$1 = I4$1 + 4ll;
  }
  label$1260:;
  I$2 = I$2 + 1ll;
  label$1259:;
  if( I$2 <= 1ll ) goto label$1262;
  label$1261:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 128 );
 goto label$1258;
 label$1258:;
 return fb$result$1;
}

void _ZN6VECTORpLERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$1267:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll);
 label$1268:;
}

void _ZN6VECTORmIERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$1269:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll);
 label$1270:;
}

void _ZN6VECTORmLEd( struct $6VECTOR* THIS$1, double S$1 )
{
 label$1271:;
 *(double*)THIS$1 = *(double*)THIS$1 * S$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * S$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * S$1;
 label$1272:;
}

struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR* tmp$1486$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1487$1;
 label$1273:;
 _ZN6VECTORC1Ev( tmp$1486$1 );
 _ZN6VECTORC1Edddd( &TMP$1487$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1486$1, &TMP$1487$1, 32 );
 label$1274:;
 return tmp$1486$1;
}

struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR* tmp$1488$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1489$1;
 label$1275:;
 _ZN6VECTORC1Ev( tmp$1488$1 );
 _ZN6VECTORC1Edddd( &TMP$1489$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1488$1, &TMP$1489$1, 32 );
 label$1276:;
 return tmp$1488$1;
}

struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR* tmp$1490$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1491$1;
 label$1277:;
 _ZN6VECTORC1Ev( tmp$1490$1 );
 _ZN6VECTORC1Edddd( &TMP$1491$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1490$1, &TMP$1491$1, 32 );
 label$1278:;
 return tmp$1490$1;
}

struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR* tmp$1492$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1493$1;
 label$1279:;
 _ZN6VECTORC1Ev( tmp$1492$1 );
 _ZN6VECTORC1Edddd( &TMP$1493$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1492$1, &TMP$1493$1, 32 );
 label$1280:;
 return tmp$1492$1;
}

struct $6VECTOR* _ZdvR6VECTORd( struct $6VECTOR* tmp$1494$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1495$1;
 label$1281:;
 _ZN6VECTORC1Ev( tmp$1494$1 );
 _ZN6VECTORC1Edddd( &TMP$1495$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1494$1, &TMP$1495$1, 32 );
 label$1282:;
 return tmp$1494$1;
}

struct $6VECTOR* _ZdvdR6VECTOR( struct $6VECTOR* tmp$1496$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1497$1;
 label$1283:;
 _ZN6VECTORC1Ev( tmp$1496$1 );
 _ZN6VECTORC1Edddd( &TMP$1497$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1496$1, &TMP$1497$1, 32 );
 label$1284:;
 return tmp$1496$1;
}

double _ZmlR6VECTORS0_( struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1285:;
 fb$result$1 = ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll));
 goto label$1286;
 label$1286:;
 return fb$result$1;
}

struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR* tmp$1498$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1499$1;
 label$1287:;
 _ZN6VECTORC1Ev( tmp$1498$1 );
 _ZN6VECTORC1Edddd( &TMP$1499$1, (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) - (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) - (*(double*)L$1 * *(double*)((uint8*)R$1 + 16ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) - (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1498$1, &TMP$1499$1, 32 );
 label$1288:;
 return tmp$1498$1;
}

void _ZN6VECTORC1Ev( struct $6VECTOR* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 label$1289:;
 label$1290:;
}

void _ZN6VECTORC1ERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* INV$1 )
{
 label$1291:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)INV$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)INV$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)INV$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)INV$1 + 24ll);
 label$1292:;
}

void _ZN6VECTORC1Edddd( struct $6VECTOR* THIS$1, double INX$1, double INY$1, double INZ$1, double INW$1 )
{
 label$1293:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = INX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = INY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = INZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = INW$1;
 label$1294:;
}

void _ZN6VECTORC1Ej( struct $6VECTOR* THIS$1, uint32 COL$1 )
{
 label$1295:;
 uint32 V$1;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 16ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 8ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)THIS$1 = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 *(double*)((uint8*)THIS$1 + 24ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 label$1296:;
}

double _ZN6VECTOR10LENGTHSQRDEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1297:;
 fb$result$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 goto label$1298;
 label$1298:;
 return fb$result$1;
}

double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1299:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1302;
 {
  L$1 = __builtin_sqrt( L$1 );
  label$1302:;
 }
 fb$result$1 = L$1;
 goto label$1300;
 label$1300:;
 return fb$result$1;
}

struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR* tmp$1500$1, struct $6VECTOR* THIS$1 )
{
 struct $6VECTOR TMP$1501$1;
 label$1303:;
 _ZN6VECTORC1Ev( tmp$1500$1 );
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1306;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  label$1306:;
 }
 _ZN6VECTORC1Edddd( &TMP$1501$1, *(double*)THIS$1 * L$1, *(double*)((uint8*)THIS$1 + 8ll) * L$1, *(double*)((uint8*)THIS$1 + 16ll) * L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1500$1, &TMP$1501$1, 32 );
 label$1304:;
 return tmp$1500$1;
}

void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* THIS$1 )
{
 label$1307:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1310;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  *(double*)THIS$1 = *(double*)THIS$1 * L$1;
  *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * L$1;
  *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * L$1;
 }
 label$1310:;
 label$1309:;
 label$1308:;
}

uint32 _ZN6VECTORcvjEv( struct $6VECTOR* THIS$1 )
{
 int64 TMP$1502$1;
 int64 TMP$1503$1;
 int64 TMP$1504$1;
 int64 TMP$1505$1;
 int64 TMP$1506$1;
 int64 TMP$1507$1;
 int64 TMP$1508$1;
 int64 TMP$1509$1;
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1311:;
 uint32 UR$1;
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$1314;
 TMP$1503$1 = 0ll;
 goto label$1321;
 label$1314:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$1313;
 TMP$1502$1 = 255ll;
 goto label$1322;
 label$1313:;
 TMP$1502$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 label$1322:;
 TMP$1503$1 = TMP$1502$1;
 label$1321:;
 UR$1 = (uint32)TMP$1503$1;
 uint32 UG$1;
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$1316;
 TMP$1505$1 = 0ll;
 goto label$1323;
 label$1316:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$1315;
 TMP$1504$1 = 255ll;
 goto label$1324;
 label$1315:;
 TMP$1504$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 label$1324:;
 TMP$1505$1 = TMP$1504$1;
 label$1323:;
 UG$1 = (uint32)TMP$1505$1;
 uint32 UB$1;
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$1318;
 TMP$1507$1 = 0ll;
 goto label$1325;
 label$1318:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$1317;
 TMP$1506$1 = 255ll;
 goto label$1326;
 label$1317:;
 TMP$1506$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
 label$1326:;
 TMP$1507$1 = TMP$1506$1;
 label$1325:;
 UB$1 = (uint32)TMP$1507$1;
 uint32 UA$1;
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$1320;
 TMP$1509$1 = 0ll;
 goto label$1327;
 label$1320:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$1319;
 TMP$1508$1 = 255ll;
 goto label$1328;
 label$1319:;
 TMP$1508$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
 label$1328:;
 TMP$1509$1 = TMP$1508$1;
 label$1327:;
 UA$1 = (uint32)TMP$1509$1;
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)UR$1 << (16ll & 63ll)) | ((int64)(uint32)(uint8)UG$1 << (8ll & 63ll))) | (int64)(uint32)(uint8)UB$1) | ((int64)(uint32)(uint8)UA$1 << (24ll & 63ll)));
 label$1312:;
 return fb$result$1;
}

struct $6VECTOR* _Z3MIXR6VECTORS0_d( struct $6VECTOR* tmp$1510$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1, double A$1 )
{
 struct $6VECTOR TMP$1511$1;
 label$1329:;
 _ZN6VECTORC1Ev( tmp$1510$1 );
 double V$1;
 V$1 = 0x1.p+0 - A$1;
 _ZN6VECTORC1Edddd( &TMP$1511$1, (*(double*)L$1 * V$1) + (*(double*)R$1 * A$1), (*(double*)((uint8*)L$1 + 8ll) * V$1) + (*(double*)((uint8*)R$1 + 8ll) * A$1), (*(double*)((uint8*)L$1 + 16ll) * V$1) + (*(double*)((uint8*)R$1 + 16ll) * A$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1510$1, &TMP$1511$1, 32 );
 label$1330:;
 return tmp$1510$1;
}

struct $6VECTOR* _Z7REFLECTR6VECTORS0_( struct $6VECTOR* tmp$1512$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1 )
{
 struct $6VECTOR TMP$1513$1;
 struct $6VECTOR TMP$1514$1;
 label$1331:;
 double vr$0 = _ZmlR6VECTORS0_( N$1, I$1 );
 struct $6VECTOR* vr$3 = _ZmldR6VECTOR( &TMP$1513$1, vr$0 * 0x1.p+1, N$1 );
 struct $6VECTOR* vr$5 = _ZmiR6VECTORS0_( &TMP$1514$1, I$1, vr$3 );
 _ZN6VECTORC1ERS_( tmp$1512$1, vr$5 );
 goto label$1332;
 label$1332:;
 return tmp$1512$1;
}

struct $6VECTOR* _Z7REFRACTR6VECTORS0_d( struct $6VECTOR* tmp$1515$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1, double ETA$1 )
{
 label$1333:;
 struct $6VECTOR R$1;
 _ZN6VECTORC1Ev( &R$1 );
 double DOTNI$1;
 double vr$1 = _ZmlR6VECTORS0_( N$1, I$1 );
 DOTNI$1 = vr$1;
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1336;
 {
  _ZN6VECTORC1ERS_( tmp$1515$1, &R$1 );
  goto label$1334;
 }
 goto label$1335;
 label$1336:;
 if( K$1 != 0x0p+0 ) goto label$1337;
 {
  struct $6VECTOR TMP$1516$2;
  struct $6VECTOR TMP$1517$2;
  struct $6VECTOR TMP$1518$2;
  struct $6VECTOR* vr$13 = _ZmldR6VECTOR( &TMP$1517$2, ETA$1 * DOTNI$1, N$1 );
  struct $6VECTOR* vr$15 = _ZmldR6VECTOR( &TMP$1516$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1518$2, vr$15, vr$13 );
  __builtin_memcpy( &R$1, &TMP$1518$2, 32 );
 }
 goto label$1335;
 label$1337:;
 {
  struct $6VECTOR TMP$1519$2;
  struct $6VECTOR TMP$1520$2;
  struct $6VECTOR TMP$1521$2;
  K$1 = __builtin_sqrt( K$1 );
  struct $6VECTOR* vr$23 = _ZmldR6VECTOR( &TMP$1520$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $6VECTOR* vr$25 = _ZmldR6VECTOR( &TMP$1519$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1521$2, vr$25, vr$23 );
  __builtin_memcpy( &R$1, &TMP$1521$2, 32 );
 }
 label$1335:;
 _ZN6VECTORC1ERS_( tmp$1515$1, &R$1 );
 goto label$1334;
 label$1334:;
 return tmp$1515$1;
}

void LATLONTOXYZ( double LAT$1, double LON$1, double* X$1, double* Y$1, double* Z$1 )
{
 label$1374:;
 double R$1;
 R$1 = __builtin_cos( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *X$1 = R$1 * __builtin_cos( (LON$1 * 0x1.1DF46A2529D39p-6) );
 *Y$1 = __builtin_sin( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *Z$1 = R$1 * __builtin_sin( (LON$1 * 0x1.1DF46A2529D39p-6) );
 label$1375:;
}

void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* THIS$1 )
{
 int64 TMP$1522$1;
 int64 TMP$1523$1;
 int64 TMP$1524$1;
 int64 TMP$1525$1;
 label$1380:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 80ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 120ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 128ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 136ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 256ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 272ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 280ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 288ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 296ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll), 0, 8ll );
 FBSTRING* vr$52 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1525$1 = 0ll;
 TMP$1524$1 = 0ll;
 TMP$1523$1 = 0ll;
 TMP$1522$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, &TMP$1522$1, &TMP$1523$1, &TMP$1524$1, &TMP$1525$1, vr$52 );
 _ZN9RAYTRACER4INITElll( THIS$1, ((int64)__builtin_nearbyint( (double)W$1 * 0x1.999999999999Ap-1 )), ((int64)__builtin_nearbyint( (double)H$1 * 0x1.999999999999Ap-1 )), 5ll );
 label$1381:;
}

void _ZN9RAYTRACERC1Elll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MD$1 )
{
 label$1382:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 80ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 120ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 128ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 136ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 256ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 272ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 280ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 288ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 296ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll), 0, 8ll );
 _ZN9RAYTRACER4INITElll( THIS$1, W$1, H$1, MD$1 );
 label$1383:;
}

void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* THIS$1 )
{
 label$1384:;
 if( *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) == (struct $5MAP2D**)0ull ) goto label$1387;
 {
  if( *(int64*)((uint8*)THIS$1 + 288ll) <= 0ll ) goto label$1389;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1526$4;
    TMP$1526$4 = *(int64*)((uint8*)THIS$1 + 288ll) + -1ll;
    goto label$1390;
    label$1393:;
    {
     if( *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) == (struct $5MAP2D*)0ull ) goto label$1395;
     {
      if( *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) == (uint8*)0ull ) goto label$1397;
      {
       free( *(void**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) );
       *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) = (uint8*)0ull;
      }
      label$1397:;
      label$1396:;
      free( *(void**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) );
      *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) = (struct $5MAP2D*)0ull;
     }
     label$1395:;
     label$1394:;
    }
    label$1391:;
    I$4 = I$4 + 1ll;
    label$1390:;
    if( I$4 <= TMP$1526$4 ) goto label$1393;
    label$1392:;
   }
   *(int64*)((uint8*)THIS$1 + 288ll) = 0ll;
  }
  label$1389:;
  label$1388:;
  free( *(void**)((uint8*)THIS$1 + 296ll) );
  *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = (struct $5MAP2D**)0ull;
 }
 label$1387:;
 label$1386:;
 if( *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) == (struct $8MATERIAL**)0ull ) goto label$1399;
 {
  if( *(int64*)((uint8*)THIS$1 + 240ll) <= 0ll ) goto label$1401;
  {
   {
    int64 MC$4;
    MC$4 = 0ll;
    int64 TMP$1527$4;
    TMP$1527$4 = *(int64*)((uint8*)THIS$1 + 240ll) + -1ll;
    goto label$1402;
    label$1405:;
    {
     if( *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) == (struct $8MATERIAL*)0ull ) goto label$1407;
     {
      free( *(void**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) );
      *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) = (struct $8MATERIAL*)0ull;
     }
     label$1407:;
     label$1406:;
    }
    label$1403:;
    MC$4 = MC$4 + 1ll;
    label$1402:;
    if( MC$4 <= TMP$1527$4 ) goto label$1405;
    label$1404:;
   }
   *(int64*)((uint8*)THIS$1 + 240ll) = 0ll;
  }
  label$1401:;
  label$1400:;
  free( *(void**)((uint8*)THIS$1 + 248ll) );
  *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = (struct $8MATERIAL**)0ull;
 }
 label$1399:;
 label$1398:;
 if( *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) == (struct $5LIGHT**)0ull ) goto label$1409;
 {
  if( *(int64*)((uint8*)THIS$1 + 272ll) <= 0ll ) goto label$1411;
  {
   {
    int64 LC$4;
    LC$4 = 0ll;
    int64 TMP$1528$4;
    TMP$1528$4 = *(int64*)((uint8*)THIS$1 + 272ll) + -1ll;
    goto label$1412;
    label$1415:;
    {
     if( *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) == (struct $5LIGHT*)0ull ) goto label$1417;
     {
      free( *(void**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) );
      *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) = (struct $5LIGHT*)0ull;
     }
     label$1417:;
     label$1416:;
    }
    label$1413:;
    LC$4 = LC$4 + 1ll;
    label$1412:;
    if( LC$4 <= TMP$1528$4 ) goto label$1415;
    label$1414:;
   }
   *(int64*)((uint8*)THIS$1 + 272ll) = 0ll;
  }
  label$1411:;
  label$1410:;
  free( *(void**)((uint8*)THIS$1 + 280ll) );
  *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = (struct $5LIGHT**)0ull;
 }
 label$1409:;
 label$1408:;
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) == (struct $7AAPIXEL**)0ull ) goto label$1419;
 {
  if( *(int64*)((uint8*)THIS$1 + 304ll) <= 0ll ) goto label$1421;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1529$4;
    TMP$1529$4 = *(int64*)((uint8*)THIS$1 + 304ll) + -1ll;
    goto label$1422;
    label$1425:;
    {
     if( *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) == (struct $7AAPIXEL*)0ull ) goto label$1427;
     {
      free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
     }
     label$1427:;
     label$1426:;
    }
    label$1423:;
    I$4 = I$4 + 1ll;
    label$1422:;
    if( I$4 <= TMP$1529$4 ) goto label$1425;
    label$1424:;
   }
   *(int64*)((uint8*)THIS$1 + 304ll) = 0ll;
  }
  label$1421:;
  label$1420:;
  free( *(void**)((uint8*)THIS$1 + 312ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1419:;
 label$1418:;
 if( *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) == (struct $8OBJECT3D**)0ull ) goto label$1429;
 {
  if( *(int64*)((uint8*)THIS$1 + 256ll) <= 0ll ) goto label$1431;
  {
   {
    int64 OC$4;
    OC$4 = 0ll;
    int64 TMP$1530$4;
    TMP$1530$4 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
    goto label$1432;
    label$1435:;
    {
     if( *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) == (struct $8OBJECT3D*)0ull ) goto label$1437;
     {
      if( *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) == (struct $4POLY**)0ull ) goto label$1439;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) <= 0ll ) goto label$1441;
       {
        {
         int64 PC$9;
         PC$9 = 0ll;
         int64 TMP$1531$9;
         TMP$1531$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) + -1ll;
         goto label$1442;
         label$1445:;
         {
          if( *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) == (struct $4POLY*)0ull ) goto label$1447;
          {
           free( *(void**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) );
           *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) = (struct $4POLY*)0ull;
          }
          label$1447:;
          label$1446:;
         }
         label$1443:;
         PC$9 = PC$9 + 1ll;
         label$1442:;
         if( PC$9 <= TMP$1531$9 ) goto label$1445;
         label$1444:;
        }
        *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) = 0ll;
       }
       label$1441:;
       label$1440:;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) );
       *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) = (struct $4POLY**)0ull;
      }
      label$1439:;
      label$1438:;
      if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) == (struct $6VECTOR**)0ull ) goto label$1449;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 128ll) <= 0ll ) goto label$1451;
       {
        {
         int64 VC$9;
         VC$9 = 0ll;
         int64 TMP$1532$9;
         TMP$1532$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 128ll) + -1ll;
         goto label$1452;
         label$1455:;
         {
          if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$1457;
          {
           if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$1458;
           free( *(void**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) );
           label$1458:;
           *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) = (struct $6VECTOR*)0ull;
          }
          label$1457:;
          label$1456:;
         }
         label$1453:;
         VC$9 = VC$9 + 1ll;
         label$1452:;
         if( VC$9 <= TMP$1532$9 ) goto label$1455;
         label$1454:;
        }
       }
       label$1451:;
       label$1450:;
       if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) == (struct $6VECTOR**)0ull ) goto label$1459;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) );
       label$1459:;
       *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) = (struct $6VECTOR**)0ull;
      }
      label$1449:;
      label$1448:;
      free( *(void**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) );
      *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) = (struct $8OBJECT3D*)0ull;
     }
     label$1437:;
     label$1436:;
    }
    label$1433:;
    OC$4 = OC$4 + 1ll;
    label$1432:;
    if( OC$4 <= TMP$1530$4 ) goto label$1435;
    label$1434:;
   }
   *(int64*)((uint8*)THIS$1 + 256ll) = 0ll;
  }
  label$1431:;
  label$1430:;
  free( *(void**)((uint8*)THIS$1 + 264ll) );
  *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)0ull;
 }
 label$1429:;
 label$1428:;
 label$1385:;
}

void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MAXDEPTH$1 )
{
 int64 TMP$1533$1;
 label$1460:;
 if( W$1 >= 4ll ) goto label$1463;
 {
  W$1 = 4ll;
  label$1463:;
 }
 if( H$1 >= 4ll ) goto label$1465;
 {
  H$1 = 4ll;
  label$1465:;
 }
 *(int64*)THIS$1 = W$1;
 *(int64*)((uint8*)THIS$1 + 16ll) = ((int64)__builtin_nearbyint( (double)W$1 * 0x1.p-1 ));
 *(int64*)((uint8*)THIS$1 + 8ll) = H$1;
 *(int64*)((uint8*)THIS$1 + 24ll) = ((int64)__builtin_nearbyint( (double)H$1 * 0x1.p-1 ));
 if( W$1 <= H$1 ) goto label$1466;
 TMP$1533$1 = W$1;
 goto label$1469;
 label$1466:;
 TMP$1533$1 = H$1;
 label$1469:;
 *(double*)((uint8*)THIS$1 + 32ll) = (double)TMP$1533$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x1.p+0 / *(double*)((uint8*)THIS$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.999999999999Ap-4;
 *(int64*)((uint8*)THIS$1 + 128ll) = MAXDEPTH$1;
 if( *(int64*)((uint8*)THIS$1 + 128ll) >= 0ll ) goto label$1468;
 {
  *(int64*)((uint8*)THIS$1 + 128ll) = 0ll;
  label$1468:;
 }
 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( THIS$1, 0x1.p-1, 0x1.p-1, 0x1.p-1, 0x1.6666666666666p-1, 0x1.3333333333333p-2, 0x1.p-2, 0x1.999999999999Ap-1, 0x1.999999999999Ap-3, 0x0p+0, 0x0p+0, (boolean)1ll, (boolean)1ll, (boolean)1ll, -1ll, -1ll, -1ll, -1ll );
 label$1461:;
}

void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER* THIS$1, double* ADJVALUE$1, double MINVALUE$1, double MAXVALUE$1 )
{
 label$1470:;
 if( ADJVALUE$1 == (double*)0ull ) goto label$1473;
 {
  if( *ADJVALUE$1 >= MINVALUE$1 ) goto label$1475;
  {
   *ADJVALUE$1 = MINVALUE$1;
  }
  goto label$1474;
  label$1475:;
  if( *ADJVALUE$1 <= MAXVALUE$1 ) goto label$1476;
  {
   *ADJVALUE$1 = MAXVALUE$1;
  }
  label$1476:;
  label$1474:;
 }
 label$1473:;
 label$1472:;
 label$1471:;
}

int64 _ZN9RAYTRACER8ADDMAP2DER8FBSTRING11MAP2D_TYPESddd( struct $9RAYTRACER* THIS$1, FBSTRING* FILENAME$1, $11MAP2D_TYPES MAPTYPE$1, double REPEATX$1, double REPEATY$1, double REPEATZ$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1477:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 int64 RR$1;
 __builtin_memset( &RR$1, 0, 8ll );
 int64 REAL_PITCH$1;
 __builtin_memset( &REAL_PITCH$1, 0, 8ll );
 int64 TARGETADD$1;
 __builtin_memset( &TARGETADD$1, 0, 8ll );
 int64 SOURCEADD$1;
 __builtin_memset( &SOURCEADD$1, 0, 8ll );
 int64 HFILE$1;
 __builtin_memset( &HFILE$1, 0, 8ll );
 uint8 ONEBYTE$1;
 __builtin_memset( &ONEBYTE$1, 0, 1ll );
 uint8* LREAL_PIMAGE$1;
 __builtin_memset( &LREAL_PIMAGE$1, 0, 8ll );
 uint8* LPSOURCEROW$1;
 __builtin_memset( &LPSOURCEROW$1, 0, 8ll );
 uint8* LPTARGETROW$1;
 __builtin_memset( &LPTARGETROW$1, 0, 8ll );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE {
  struct $8PALENTRY* DATA;
  struct $8PALENTRY* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[8];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N9RAYTRACER7FBARRAYI8PALENTRYEE ) == 240) ? 1 : -1];
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE PAL$1;
 *(struct $8PALENTRY**)&PAL$1 = (struct $8PALENTRY*)0ull;
 *(struct $8PALENTRY**)((uint8*)&PAL$1 + 8ll) = (struct $8PALENTRY*)0ull;
 *(int64*)((uint8*)&PAL$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 24ll) = 4ll;
 *(int64*)((uint8*)&PAL$1 + 32ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 40ll) = 8ll;
 __builtin_memset( (void*)((uint8*)&PAL$1 + 48ll), 0, 192ll );
 struct $9BMPHEADER HEADER$1;
 __builtin_memset( &HEADER$1, 0, 54ll );
 if( REPEATX$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1480;
 {
  REPEATX$1 = 0x1.0624DD2F1A9FCp-10;
  label$1480:;
 }
 if( REPEATY$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1482;
 {
  REPEATY$1 = 0x1.0624DD2F1A9FCp-10;
  label$1482:;
 }
 if( REPEATZ$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1484;
 {
  REPEATZ$1 = 0x1.0624DD2F1A9FCp-10;
  label$1484:;
 }
 int32 vr$17 = fb_FileFree( );
 HFILE$1 = (int64)vr$17;
 int32 vr$20 = fb_FileOpen( (FBSTRING*)FILENAME$1, 0u, 1u, 0u, (int32)HFILE$1, 0 );
 if( (int64)vr$20 != 0ll ) goto label$1486;
 {
  int64 vr$23 = fb_FileSize( (int32)HFILE$1 );
  if( vr$23 >= 44ll ) goto label$1488;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1478;
  }
  label$1488:;
  label$1487:;
  fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&HEADER$1, 54ull );
  if( (int64)*(uint16*)&HEADER$1 == 19778ll ) goto label$1490;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1478;
  }
  label$1490:;
  label$1489:;
  if( (int64)*(int32*)((uint8*)&HEADER$1 + 30ll) == 0ll ) goto label$1492;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1478;
  }
  label$1492:;
  label$1491:;
  if( (int64)*(int16*)((uint8*)&HEADER$1 + 28ll) >= 8ll ) goto label$1494;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1478;
  }
  label$1494:;
  label$1493:;
  {
   int64 TMP$1535$3;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 14ll) <= 40ll ) goto label$1496;
   {
    {
     I$1 = 1ll;
     int64 TMP$1534$5;
     TMP$1534$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 14ll) + -40ll;
     goto label$1497;
     label$1500:;
     {
      fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&ONEBYTE$1, 1ull );
     }
     label$1498:;
     I$1 = I$1 + 1ll;
     label$1497:;
     if( I$1 <= TMP$1534$5 ) goto label$1500;
     label$1499:;
    }
   }
   label$1496:;
   label$1495:;
   if( (int64)*(int16*)((uint8*)&HEADER$1 + 28ll) != 8ll ) goto label$1502;
   {
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 46ll) != 0ll ) goto label$1504;
    {
     *(int32*)((uint8*)&HEADER$1 + 46ll) = 256;
     label$1504:;
    }
    fb_ArrayRedimEx( (struct $7FBARRAYIvE*)&PAL$1, 4ull, -1, 0, 1ull, 0ll, (int64)*(int32*)((uint8*)&HEADER$1 + 46ll) + -1ll );
    fb_FileGetArrayLarge( (int32)HFILE$1, 0ll, (struct $7FBARRAYIvE*)&PAL$1 );
   }
   label$1502:;
   label$1501:;
   fb_FileSeek( (int32)HFILE$1, *(int32*)((uint8*)&HEADER$1 + 10ll) );
   void* vr$52 = calloc( (uint64)*(int32*)((uint8*)&HEADER$1 + 34ll), 1ull );
   LREAL_PIMAGE$1 = (uint8*)vr$52;
   fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)LREAL_PIMAGE$1, (uint64)(int64)*(int32*)((uint8*)&HEADER$1 + 34ll) );
   fb_FileClose( (int32)HFILE$1 );
   *(int16*)((uint8*)&HEADER$1 + 28ll) = (int16)((int64)*(int16*)((uint8*)&HEADER$1 + 28ll) >> (3ll & 63ll));
   void* vr$63 = realloc( *(void**)((uint8*)THIS$1 + 296ll), (uint64)((*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll)) + 8ll) );
   *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = (struct $5MAP2D**)vr$63;
   void* vr$65 = malloc( 112ull );
   *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) = (struct $5MAP2D*)vr$65;
   __builtin_memcpy( (struct $9BMPHEADER*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 16ll), &HEADER$1, 54 );
   *($11MAP2D_TYPES*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 8ll) = MAPTYPE$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 80ll) = REPEATX$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 88ll) = REPEATY$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 96ll) = REPEATZ$1;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1505;
   TMP$1535$3 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
   goto label$1562;
   label$1505:;
   TMP$1535$3 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
   label$1562:;
   REAL_PITCH$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 34ll) / TMP$1535$3;
   REAL_PITCH$1 = REAL_PITCH$1 - ((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll));
   {
    if( MAPTYPE$1 != 0ll ) goto label$1507;
    label$1508:;
    {
     int64 TMP$1536$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1509;
     TMP$1536$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     goto label$1563;
     label$1509:;
     TMP$1536$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     label$1563:;
     void* vr$114 = malloc( (uint64)(((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * TMP$1536$5) * 3ll) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll) = (uint8*)vr$114;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * 3ll;
    }
    goto label$1506;
    label$1507:;
    {
     int64 TMP$1537$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1511;
     TMP$1537$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     goto label$1564;
     label$1511:;
     TMP$1537$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     label$1564:;
     void* vr$128 = malloc( (uint64)((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * TMP$1537$5) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll) = (uint8*)vr$128;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll);
    }
    label$1510:;
    label$1506:;
   }
   LPSOURCEROW$1 = LREAL_PIMAGE$1;
   SOURCEADD$1 = ((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll)) + REAL_PITCH$1;
   LPTARGETROW$1 = *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll);
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1513;
   {
    int64 TMP$1538$4;
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1514;
    TMP$1538$4 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
    goto label$1565;
    label$1514:;
    TMP$1538$4 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
    label$1565:;
    *(int32*)((uint8*)&HEADER$1 + 22ll) = (int32)TMP$1538$4;
    SOURCEADD$1 = SOURCEADD$1 * -1ll;
    LPSOURCEROW$1 = (uint8*)(LREAL_PIMAGE$1 + (((int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll) * SOURCEADD$1));
   }
   label$1513:;
   label$1512:;
   {
    int16 TMP$1539$4;
    TMP$1539$4 = *(int16*)((uint8*)&HEADER$1 + 28ll);
    if( (int64)TMP$1539$4 != 1ll ) goto label$1516;
    label$1517:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$1519;
      label$1520:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1540$8;
        TMP$1540$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1521;
        label$1524:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1541$10;
          TMP$1541$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1525;
          label$1528:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 1ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1);
          }
          label$1526:;
          C$1 = C$1 + 1ll;
          label$1525:;
          if( C$1 <= TMP$1541$10 ) goto label$1528;
          label$1527:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1522:;
        RR$1 = RR$1 + 1ll;
        label$1521:;
        if( RR$1 <= TMP$1540$8 ) goto label$1524;
        label$1523:;
       }
      }
      goto label$1518;
      label$1519:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1542$8;
        TMP$1542$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1530;
        label$1533:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1543$10;
          TMP$1543$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1534;
          label$1537:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           R$1 = (double)(int64)*(uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 1ll) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$1535:;
          C$1 = C$1 + 1ll;
          label$1534:;
          if( C$1 <= TMP$1543$10 ) goto label$1537;
          label$1536:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1531:;
        RR$1 = RR$1 + 1ll;
        label$1530:;
        if( RR$1 <= TMP$1542$8 ) goto label$1533;
        label$1532:;
       }
      }
      label$1529:;
      label$1518:;
     }
    }
    goto label$1515;
    label$1516:;
    if( (int64)TMP$1539$4 != 3ll ) goto label$1538;
    label$1539:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$1541;
      label$1542:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1544$8;
        TMP$1544$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1543;
        label$1546:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1545$10;
          TMP$1545$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1547;
          label$1550:;
          {
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll)));
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 1ll);
          }
          label$1548:;
          C$1 = C$1 + 1ll;
          label$1547:;
          if( C$1 <= TMP$1545$10 ) goto label$1550;
          label$1549:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1544:;
        RR$1 = RR$1 + 1ll;
        label$1543:;
        if( RR$1 <= TMP$1544$8 ) goto label$1546;
        label$1545:;
       }
      }
      goto label$1540;
      label$1541:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1546$8;
        TMP$1546$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1552;
        label$1555:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1547$10;
          TMP$1547$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1556;
          label$1559:;
          {
           R$1 = (double)(int64)*(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 1ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$1557:;
          C$1 = C$1 + 1ll;
          label$1556:;
          if( C$1 <= TMP$1547$10 ) goto label$1559;
          label$1558:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1553:;
        RR$1 = RR$1 + 1ll;
        label$1552:;
        if( RR$1 <= TMP$1546$8 ) goto label$1555;
        label$1554:;
       }
      }
      label$1551:;
      label$1540:;
     }
    }
    label$1538:;
    label$1515:;
   }
  }
  if( LREAL_PIMAGE$1 == (uint8*)0ull ) goto label$1561;
  {
   free( (void*)LREAL_PIMAGE$1 );
   label$1561:;
  }
  fb$result$1 = *(int64*)((uint8*)THIS$1 + 288ll);
  *(int64*)((uint8*)THIS$1 + 288ll) = *(int64*)((uint8*)THIS$1 + 288ll) + 1ll;
 }
 goto label$1485;
 label$1486:;
 {
  fb$result$1 = -1ll;
  fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
  goto label$1478;
 }
 label$1485:;
 fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
 label$1478:;
 return fb$result$1;
}

void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* MAPXY$1 )
{
 label$1566:;
 struct $6VECTOR AD$1;
 _ZN6VECTORC1Ev( &AD$1 );
 struct $6VECTOR BD$1;
 _ZN6VECTORC1Ev( &BD$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 struct $6VECTOR D$1;
 _ZN6VECTORC1Ev( &D$1 );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double DOTC$1;
 __builtin_memset( &DOTC$1, 0, 8ll );
 double ANGLE$1;
 __builtin_memset( &ANGLE$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double XDIM$1;
 __builtin_memset( &XDIM$1, 0, 8ll );
 double YDIM$1;
 __builtin_memset( &YDIM$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 {
  $14OBJECT3D_TYPES TMP$1548$2;
  TMP$1548$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1548$2 != 1ll ) goto label$1569;
  label$1570:;
  {
   struct $6VECTOR TMP$1549$3;
   struct $6VECTOR TMP$1550$3;
   struct $6VECTOR TMP$1551$3;
   struct $6VECTOR TMP$1552$3;
   struct $6VECTOR TMP$1553$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll)));
   _ZmiR6VECTORS0_( &TMP$1549$3, HITPOINT$1, *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &C$1, &TMP$1549$3, 32 );
   double vr$29 = _ZN6VECTOR6LENGTHEv( &C$1 );
   DOTC$1 = vr$29;
   _ZmiR6VECTORS0_( &TMP$1550$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &AD$1, &TMP$1550$3, 32 );
   double vr$38 = _ZN6VECTOR6LENGTHEv( &AD$1 );
   XDIM$1 = vr$38;
   _ZmiR6VECTORS0_( &TMP$1551$3, *(struct $6VECTOR**)((uint8*)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (*(int64*)((uint8*)LPPOLY$1 + 72ll) << (3ll & 63ll))) + -8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &BD$1, &TMP$1551$3, 32 );
   double vr$49 = _ZN6VECTOR6LENGTHEv( &BD$1 );
   YDIM$1 = vr$49;
   _ZmlR6VECTORd( &TMP$1552$3, &AD$1, 0x1.p+0 / XDIM$1 );
   __builtin_memcpy( &B$1, &TMP$1552$3, 32 );
   _ZmlR6VECTORd( &TMP$1553$3, &C$1, 0x1.p+0 / DOTC$1 );
   __builtin_memcpy( &D$1, &TMP$1553$3, 32 );
   double vr$62 = _ZmlR6VECTORS0_( &B$1, &D$1 );
   ANGLE$1 = vr$62;
   Y$1 = DOTC$1 * ANGLE$1;
   ANGLE$1 = __builtin_sin( __builtin_acos( ANGLE$1 ) );
   X$1 = DOTC$1 * ANGLE$1;
   *(double*)MAPXY$1 = ((X$1 * 0x1.p+0) + 0x1.p-1) / XDIM$1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 * 0x1.p+0) + 0x1.p-1) / YDIM$1;
  }
  goto label$1568;
  label$1569:;
  if( TMP$1548$2 != 0ll ) goto label$1571;
  label$1572:;
  {
   X$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) - *(double*)HITPOINT$1;
   Y$1 = (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) - *(double*)((uint8*)HITPOINT$1 + 8ll)) * -0x1.p+0;
   R$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll);
   *(double*)MAPXY$1 = ((X$1 / R$1) * 0x1.p-1) + 0x1.p-1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 / R$1) * 0x1.p-1) + 0x1.p-1;
  }
  label$1571:;
  label$1568:;
 }
 label$1567:;
}

double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( struct $9RAYTRACER* THIS$1, int64 MAPID$1, int64 X$1, int64 Y$1, $13BUMP_METHODES METHODE$1, boolean INVERSE$1 )
{
 int64 TMP$1554$1;
 int64 TMP$1555$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1573:;
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 PTR2$1;
 __builtin_memset( &PTR2$1, 0, 8ll );
 int64 PTR3$1;
 __builtin_memset( &PTR3$1, 0, 8ll );
 double H1$1;
 __builtin_memset( &H1$1, 0, 8ll );
 double H2$1;
 __builtin_memset( &H2$1, 0, 8ll );
 double H3$1;
 __builtin_memset( &H3$1, 0, 8ll );
 double H$1;
 __builtin_memset( &H$1, 0, 8ll );
 if( X$1 >= 0ll ) goto label$1575;
 TMP$1554$1 = -X$1;
 goto label$1584;
 label$1575:;
 TMP$1554$1 = X$1;
 label$1584:;
 X$1 = TMP$1554$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
 if( Y$1 >= 0ll ) goto label$1576;
 TMP$1555$1 = -Y$1;
 goto label$1585;
 label$1576:;
 TMP$1555$1 = Y$1;
 label$1585:;
 Y$1 = TMP$1555$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
 {
  if( METHODE$1 != 0ll ) goto label$1578;
  label$1579:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll));
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$1577;
  label$1578:;
  if( METHODE$1 != 1ll ) goto label$1580;
  label$1581:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$1577;
  label$1580:;
  if( METHODE$1 != 2ll ) goto label$1582;
  label$1583:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll));
   PTR3$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   H1$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1);
   H1$1 = H1$1 * 0x1.010101010101p-8;
   H2$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1);
   H2$1 = H2$1 * 0x1.010101010101p-8;
   H3$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR3$1);
   H3$1 = H3$1 * 0x1.010101010101p-8;
   H$1 = ((H2$1 - H1$1) + H3$1) - H1$1;
  }
  label$1582:;
  label$1577:;
 }
 fb$result$1 = H$1;
 goto label$1574;
 label$1574:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER* THIS$1, int64 MATID$1, struct $6VECTOR* MAPXY$1 )
{
 double TMP$1556$1;
 double TMP$1557$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1586:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 MAPID$1;
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll);
 if( (*(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll)) >= 0x0p+0 ) goto label$1588;
 TMP$1556$1 = -(*(double*)MAPXY$1) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll);
 goto label$1592;
 label$1588:;
 TMP$1556$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll);
 label$1592:;
 X$1 = TMP$1556$1;
 if( (*(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll)) >= 0x0p+0 ) goto label$1589;
 TMP$1557$1 = -(*(double*)((uint8*)MAPXY$1 + 8ll)) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll);
 goto label$1593;
 label$1589:;
 TMP$1557$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll);
 label$1593:;
 Y$1 = TMP$1557$1;
 XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
 XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
 YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
 YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
 PTR1$1 = (YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + XP$1;
 if( (int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) <= 0ll ) goto label$1591;
 {
  fb$result$1 = (boolean)1ll;
  goto label$1587;
  label$1591:;
 }
 label$1587:;
 return fb$result$1;
}

void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* NORMAL$1, struct $6VECTOR* BNORMAL$1, struct $6VECTOR* MAPXY$1 )
{
 label$1594:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll);
 if( MAPID$1 <= -1ll ) goto label$1597;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 160ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
  double vr$55 = _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( THIS$1, MAPID$1, XP$1, YP$1, 2ll, (boolean)0ll );
  L$1 = vr$55 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 168ll);
  if( L$1 != 0x0p+0 ) goto label$1599;
  {
   __builtin_memcpy( BNORMAL$1, NORMAL$1, 32 );
  }
  goto label$1598;
  label$1599:;
  {
   L$1 = L$1 + 0x1.p+0;
   *(double*)BNORMAL$1 = *(double*)NORMAL$1 * L$1;
   *(double*)((uint8*)BNORMAL$1 + 8ll) = *(double*)((uint8*)NORMAL$1 + 8ll) * L$1;
   *(double*)((uint8*)BNORMAL$1 + 16ll) = *(double*)((uint8*)NORMAL$1 + 16ll) * L$1;
  }
  label$1598:;
 }
 label$1597:;
 label$1596:;
 label$1595:;
}

void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1600:;
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR SURCOL$1;
 _ZN6VECTORC1Ev( &SURCOL$1 );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll);
 if( MAPID$1 <= -1ll ) goto label$1603;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 80ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 88ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
  PTR1$1 = ((YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) * 3ll) + (XP$1 * 3ll);
  *(double*)&SURCOL$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1);
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) + 1ll);
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 16ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) + 2ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * 0x1.010101010101p-8;
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * *(double*)RETCOL$1;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * *(double*)((uint8*)RETCOL$1 + 8ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * *(double*)((uint8*)RETCOL$1 + 16ll);
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 98ll) != (boolean)1ll ) goto label$1605;
  {
   *(double*)&SURCOL$1 = *(double*)&SURCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) * *(double*)RETCOL$1);
   *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
   *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
  }
  label$1605:;
  label$1604:;
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + *(double*)&SURCOL$1;
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + *(double*)((uint8*)&SURCOL$1 + 8ll);
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + *(double*)((uint8*)&SURCOL$1 + 16ll);
 }
 goto label$1602;
 label$1603:;
 {
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) * *(double*)RETCOL$1);
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
 }
 label$1602:;
 label$1601:;
}

struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER* THIS$1, double X$1, double Y$1, double Z$1 )
{
 struct $6VECTOR* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1606:;
 struct $6VECTOR* TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR*)vr$1;
 *(double*)TMP$1 = X$1;
 *(double*)((uint8*)TMP$1 + 8ll) = Y$1;
 *(double*)((uint8*)TMP$1 + 16ll) = Z$1;
 fb$result$1 = TMP$1;
 goto label$1607;
 label$1607:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV3EPP6VECTORlll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1608:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 24ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1609;
 label$1609:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1, int64 V3$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1610:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 24ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V3$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1611;
 label$1611:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( struct $9RAYTRACER* THIS$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, boolean BUILDSHADOW$1, boolean RECEIVESHADOW$1, boolean MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1558$1;
 boolean TMP$1559$1;
 boolean TMP$1560$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1612:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1614;
 TMP$1558$1 = (boolean)1ll;
 goto label$1625;
 label$1614:;
 TMP$1558$1 = (boolean)0ll;
 label$1625:;
 BUILDSHADOW$1 = TMP$1558$1;
 if( (int64)-RECEIVESHADOW$1 == 0ll ) goto label$1615;
 TMP$1559$1 = (boolean)1ll;
 goto label$1626;
 label$1615:;
 TMP$1559$1 = (boolean)0ll;
 label$1626:;
 RECEIVESHADOW$1 = TMP$1559$1;
 if( (int64)-MIXCOLORS$1 == 0ll ) goto label$1616;
 TMP$1560$1 = (boolean)1ll;
 goto label$1627;
 label$1616:;
 TMP$1560$1 = (boolean)0ll;
 label$1627:;
 MIXCOLORS$1 = TMP$1560$1;
 void* vr$20 = realloc( *(void**)((uint8*)THIS$1 + 248ll), (uint64)((*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = (struct $8MATERIAL**)vr$20;
 void* vr$22 = calloc( 264ull, 1ull );
 *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) = (struct $8MATERIAL*)vr$22;
 *(int64*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) = *(int64*)((uint8*)THIS$1 + 240ll);
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 8ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 16ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 24ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 40ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 48ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 56ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 64ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 72ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 80ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 88ll) = R_INDEX$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 96ll) = BUILDSHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 97ll) = RECEIVESHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 98ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) <= -1ll ) goto label$1618;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1618:;
 label$1617:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1620;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 152ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1620:;
 label$1619:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) <= -1ll ) goto label$1622;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 232ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1622:;
 label$1621:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1624;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 192ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1624:;
 label$1623:;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 99ll) = FLAG$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 240ll);
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)THIS$1 + 240ll) + 1ll;
 label$1613:;
 return fb$result$1;
}

void _ZN9RAYTRACER14CHANGEMATERIALElddddddddddbbbllll( struct $9RAYTRACER* THIS$1, int64 MATID$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, boolean BUILDSHADOW$1, boolean RECEIVESHADOW$1, boolean MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1561$1;
 boolean TMP$1562$1;
 boolean TMP$1563$1;
 label$1628:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1631;
 {
  goto label$1629;
  label$1631:;
 }
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1632;
 TMP$1561$1 = (boolean)1ll;
 goto label$1643;
 label$1632:;
 TMP$1561$1 = (boolean)0ll;
 label$1643:;
 BUILDSHADOW$1 = TMP$1561$1;
 if( (int64)-RECEIVESHADOW$1 == 0ll ) goto label$1633;
 TMP$1562$1 = (boolean)1ll;
 goto label$1644;
 label$1633:;
 TMP$1562$1 = (boolean)0ll;
 label$1644:;
 RECEIVESHADOW$1 = TMP$1562$1;
 if( (int64)-MIXCOLORS$1 == 0ll ) goto label$1634;
 TMP$1563$1 = (boolean)1ll;
 goto label$1645;
 label$1634:;
 TMP$1563$1 = (boolean)0ll;
 label$1645:;
 MIXCOLORS$1 = TMP$1563$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 40ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 48ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 56ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 64ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 72ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 80ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 88ll) = R_INDEX$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 96ll) = BUILDSHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 97ll) = RECEIVESHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 98ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) <= -1ll ) goto label$1636;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1636:;
 label$1635:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1638;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1638:;
 label$1637:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) <= -1ll ) goto label$1640;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 232ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1640:;
 label$1639:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1642;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1642:;
 label$1641:;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) = FLAG$1;
 label$1629:;
}

void _ZN9RAYTRACER17SETCOLORMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1646:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 112ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 120ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 128ll) = Z$1;
 label$1647:;
}

void _ZN9RAYTRACER16SETBUMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1648:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 160ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 168ll) = Z$1;
 label$1649:;
}

void _ZN9RAYTRACER17SETTRANSMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1650:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 232ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 240ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 248ll) = Z$1;
 label$1651:;
}

void _ZN9RAYTRACER17SETSTAMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1652:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 208ll) = Z$1;
 label$1653:;
}

int64 _ZN9RAYTRACER13ADDMATHSPHEREEddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double RADIUS$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1654:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1657;
 {
  MATID$1 = 0ll;
  label$1657:;
 }
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 264ll), (uint64)((*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)vr$9;
 void* vr$11 = calloc( 160ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$11;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 96ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 120ll) = RADIUS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 112ll) = MATID$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, *(int64*)((uint8*)THIS$1 + 256ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)THIS$1 + 256ll) + 1ll;
 label$1655:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER6ADDBOXEddddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double XSIZE$1, double YSIZE$1, double ZSIZE$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1658:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1661;
 {
  MATID$1 = 0ll;
  label$1661:;
 }
 if( XSIZE$1 >= 0x1.p+0 ) goto label$1663;
 {
  XSIZE$1 = 0x1.p+0;
  label$1663:;
 }
 if( YSIZE$1 >= 0x1.p+0 ) goto label$1665;
 {
  YSIZE$1 = 0x1.p+0;
  label$1665:;
 }
 if( ZSIZE$1 >= 0x1.p+0 ) goto label$1667;
 {
  ZSIZE$1 = 0x1.p+0;
  label$1667:;
 }
 double XM$1;
 XM$1 = XSIZE$1 * 0x1.p-1;
 double YM$1;
 YM$1 = YSIZE$1 * 0x1.p-1;
 double ZM$1;
 ZM$1 = ZSIZE$1 * 0x1.p-1;
 void* vr$12 = realloc( *(void**)((uint8*)THIS$1 + 264ll), (uint64)((*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)vr$12;
 void* vr$14 = calloc( 160ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$14;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = 1ll;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 112ll) = MATID$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 96ll) = ZPOS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 128ll) = 8ll;
 void* vr$49 = malloc( 64ull );
 *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) = (struct $6VECTOR**)vr$49;
 struct $6VECTOR* vr$57 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, -ZM$1 );
 *(*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll)) = vr$57;
 struct $6VECTOR* vr$67 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 8ll) = vr$67;
 struct $6VECTOR* vr$76 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 16ll) = vr$76;
 struct $6VECTOR* vr$84 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 24ll) = vr$84;
 struct $6VECTOR* vr$91 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 32ll) = vr$91;
 struct $6VECTOR* vr$99 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 40ll) = vr$99;
 struct $6VECTOR* vr$108 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 48ll) = vr$108;
 struct $6VECTOR* vr$116 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 56ll) = vr$116;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1564$2;
  TMP$1564$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 128ll) + -1ll;
  goto label$1668;
  label$1671:;
  {
   *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) = *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + XPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 8ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 8ll) + YPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 16ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 16ll) + ZPOS$1;
  }
  label$1669:;
  I$2 = I$2 + 1ll;
  label$1668:;
  if( I$2 <= TMP$1564$2 ) goto label$1671;
  label$1670:;
 }
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 144ll) = 6ll;
 void* vr$186 = malloc( 48ull );
 *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) = (struct $4POLY**)vr$186;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1565$2;
  TMP$1565$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1672;
  label$1675:;
  {
   void* vr$198 = malloc( 160ull );
   *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + (I$2 << (3ll & 63ll))) = (struct $4POLY*)vr$198;
   *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + (I$2 << (3ll & 63ll))) + 72ll) = 4ll;
  }
  label$1673:;
  I$2 = I$2 + 1ll;
  label$1672:;
  if( I$2 <= TMP$1565$2 ) goto label$1675;
  label$1674:;
 }
 struct $6VECTOR** vr$220 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 0ll, 1ll, 2ll, 3ll );
 *(struct $6VECTOR***)((uint8*)*(*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll)) + 80ll) = vr$220;
 struct $6VECTOR** vr$233 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 3ll, 2ll, 5ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 8ll) + 80ll) = vr$233;
 struct $6VECTOR** vr$246 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 4ll, 5ll, 6ll, 7ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 16ll) + 80ll) = vr$246;
 struct $6VECTOR** vr$259 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 7ll, 6ll, 1ll, 0ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 24ll) + 80ll) = vr$259;
 struct $6VECTOR** vr$272 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 7ll, 0ll, 3ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 32ll) + 80ll) = vr$272;
 struct $6VECTOR** vr$285 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 1ll, 6ll, 5ll, 2ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 40ll) + 80ll) = vr$285;
 _ZN9RAYTRACER10POLYHELPEREl( THIS$1, *(int64*)((uint8*)THIS$1 + 256ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)THIS$1 + 256ll) + 1ll;
 label$1659:;
 return fb$result$1;
}

void _ZN9RAYTRACER17SETOBJECTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 ID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1676:;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 96ll) = ZPOS$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, ID$1 );
 label$1677:;
}

int64 _ZN9RAYTRACER13ADDPOINTLIGHTEdddddddb( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double MAXWIDTH$1, double RED$1, double GREEN$1, double BLUE$1, boolean BUILDSHADOW$1 )
{
 boolean TMP$1566$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1678:;
 if( MAXWIDTH$1 >= 0x1.p+0 ) goto label$1681;
 {
  MAXWIDTH$1 = 0x1.p+0;
  label$1681:;
 }
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1682;
 TMP$1566$1 = (boolean)1ll;
 goto label$1683;
 label$1682:;
 TMP$1566$1 = (boolean)0ll;
 label$1683:;
 BUILDSHADOW$1 = TMP$1566$1;
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 280ll), (uint64)((*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll)) + 8ll) );
 *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = (struct $5LIGHT**)vr$9;
 void* vr$11 = calloc( 200ull, 1ull );
 *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) = (struct $5LIGHT*)vr$11;
 *($11LIGHT_TYPES*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 32ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 176ll) = MAXWIDTH$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 144ll) = RED$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 152ll) = GREEN$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 160ll) = BLUE$1;
 *(boolean*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 192ll) = BUILDSHADOW$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 272ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)THIS$1 + 272ll) + 1ll;
 label$1679:;
 return fb$result$1;
}

void _ZN9RAYTRACER16SETLIGHTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 LIGHTID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1684:;
 if( ((int64)-(LIGHTID$1 < 0ll) | (int64)-(LIGHTID$1 >= *(int64*)((uint8*)THIS$1 + 272ll))) == 0ll ) goto label$1687;
 {
  goto label$1685;
  label$1687:;
 }
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 32ll) = ZPOS$1;
 label$1685:;
}

void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1 )
{
 label$1688:;
 struct $6VECTOR* TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1691;
 {
  goto label$1689;
  label$1691:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1693;
 {
  goto label$1689;
  label$1693:;
 }
 {
  struct $9RECTANGLE* TMP$1567$2;
  TMP$1567$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll);
  *(double*)TMP$1567$2 = (double)*(int64*)THIS$1;
  *(double*)((uint8*)TMP$1567$2 + 8ll) = (double)*(int64*)((uint8*)THIS$1 + 8ll);
  *(double*)((uint8*)TMP$1567$2 + 32ll) = (double)-(*(int64*)THIS$1);
  *(double*)((uint8*)TMP$1567$2 + 40ll) = (double)-(*(int64*)((uint8*)THIS$1 + 8ll));
 }
 {
  int64 VC$2;
  VC$2 = 0ll;
  int64 TMP$1568$2;
  TMP$1568$2 = *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 72ll) + -1ll;
  goto label$1694;
  label$1697:;
  {
   TMP$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 80ll) + (VC$2 << (3ll & 63ll)));
   if( *(double*)((uint8*)TMP$1 + 16ll) <= 0x0p+0 ) goto label$1699;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + ((*(double*)TMP$1 * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - ((*(double*)((uint8*)TMP$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    if( X$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll) ) goto label$1701;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll) = X$1;
    }
    goto label$1700;
    label$1701:;
    if( X$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 40ll) ) goto label$1702;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 40ll) = X$1;
    }
    label$1702:;
    label$1700:;
    if( Y$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 16ll) ) goto label$1704;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 16ll) = Y$1;
    }
    goto label$1703;
    label$1704:;
    if( Y$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 48ll) ) goto label$1705;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 48ll) = Y$1;
    }
    label$1705:;
    label$1703:;
   }
   label$1699:;
   label$1698:;
  }
  label$1695:;
  VC$2 = VC$2 + 1ll;
  label$1694:;
  if( VC$2 <= TMP$1568$2 ) goto label$1697;
  label$1696:;
 }
 label$1689:;
}

void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1706:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR* LPVEC$1;
 __builtin_memset( &LPVEC$1, 0, 8ll );
 {
  struct $9RECTANGLE* TMP$1569$2;
  TMP$1569$2 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
  *(double*)TMP$1569$2 = (double)*(int64*)THIS$1;
  *(double*)((uint8*)TMP$1569$2 + 8ll) = (double)*(int64*)((uint8*)THIS$1 + 8ll);
  *(double*)((uint8*)TMP$1569$2 + 32ll) = (double)-(*(int64*)THIS$1);
  *(double*)((uint8*)TMP$1569$2 + 40ll) = (double)-(*(int64*)((uint8*)THIS$1 + 8ll));
 }
 {
  $14OBJECT3D_TYPES TMP$1570$2;
  TMP$1570$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1570$2 != 1ll ) goto label$1709;
  label$1710:;
  {
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1571$4;
    TMP$1571$4 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 128ll) + -1ll;
    goto label$1711;
    label$1714:;
    {
     LPVEC$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 136ll) + (VC$4 << (3ll & 63ll)));
     if( *(double*)((uint8*)LPVEC$1 + 16ll) == 0x0p+0 ) goto label$1716;
     {
      X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + ((*(double*)LPVEC$1 * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - ((*(double*)((uint8*)LPVEC$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      if( X$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll) ) goto label$1718;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll) = X$1;
      }
      goto label$1717;
      label$1718:;
      if( X$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) ) goto label$1719;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) = X$1;
      }
      label$1719:;
      label$1717:;
      if( Y$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 24ll) ) goto label$1721;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 24ll) = Y$1;
      }
      goto label$1720;
      label$1721:;
      if( Y$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) ) goto label$1722;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) = Y$1;
      }
      label$1722:;
      label$1720:;
     }
     label$1716:;
     label$1715:;
    }
    label$1712:;
    VC$4 = VC$4 + 1ll;
    label$1711:;
    if( VC$4 <= TMP$1571$4 ) goto label$1714;
    label$1713:;
   }
  }
  goto label$1708;
  label$1709:;
  if( TMP$1570$2 != 0ll ) goto label$1723;
  label$1724:;
  {
   {
    struct $6VECTOR* TMP$1572$4;
    TMP$1572$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (((*(double*)TMP$1572$4 - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1572$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (((*(double*)((uint8*)TMP$1572$4 + 8ll) + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1572$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1573$4;
    TMP$1573$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)TMP$1573$4 ) goto label$1726;
    {
     *(double*)TMP$1573$4 = X$1;
    }
    goto label$1725;
    label$1726:;
    if( X$1 <= *(double*)((uint8*)TMP$1573$4 + 32ll) ) goto label$1727;
    {
     *(double*)((uint8*)TMP$1573$4 + 32ll) = X$1;
    }
    label$1727:;
    label$1725:;
    if( Y$1 >= *(double*)((uint8*)TMP$1573$4 + 8ll) ) goto label$1729;
    {
     *(double*)((uint8*)TMP$1573$4 + 8ll) = Y$1;
    }
    goto label$1728;
    label$1729:;
    if( Y$1 <= *(double*)((uint8*)TMP$1573$4 + 40ll) ) goto label$1730;
    {
     *(double*)((uint8*)TMP$1573$4 + 40ll) = Y$1;
    }
    label$1730:;
    label$1728:;
   }
   {
    struct $6VECTOR* TMP$1574$4;
    TMP$1574$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (((*(double*)TMP$1574$4 + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1574$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (((*(double*)((uint8*)TMP$1574$4 + 8ll) - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1574$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1575$4;
    TMP$1575$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)TMP$1575$4 ) goto label$1732;
    {
     *(double*)TMP$1575$4 = X$1;
    }
    goto label$1731;
    label$1732:;
    if( X$1 <= *(double*)((uint8*)TMP$1575$4 + 32ll) ) goto label$1733;
    {
     *(double*)((uint8*)TMP$1575$4 + 32ll) = X$1;
    }
    label$1733:;
    label$1731:;
    if( Y$1 >= *(double*)((uint8*)TMP$1575$4 + 8ll) ) goto label$1735;
    {
     *(double*)((uint8*)TMP$1575$4 + 8ll) = Y$1;
    }
    goto label$1734;
    label$1735:;
    if( Y$1 <= *(double*)((uint8*)TMP$1575$4 + 40ll) ) goto label$1736;
    {
     *(double*)((uint8*)TMP$1575$4 + 40ll) = Y$1;
    }
    label$1736:;
    label$1734:;
   }
  }
  label$1723:;
  label$1708:;
 }
 label$1707:;
}

void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1737:;
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR VP$1;
 _ZN6VECTORC1Ev( &VP$1 );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 N$1;
 __builtin_memset( &N$1, 0, 8ll );
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1740;
 {
  goto label$1738;
  label$1740:;
 }
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1576$2;
  TMP$1576$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1741;
  label$1744:;
  {
   struct $6VECTOR TMP$1577$3;
   struct $6VECTOR TMP$1578$3;
   struct $6VECTOR TMP$1579$3;
   struct $6VECTOR TMP$1580$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll)));
   N$1 = *(int64*)((uint8*)LPPOLY$1 + 72ll) + -1ll;
   _ZmiR6VECTORS0_( &TMP$1577$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &A$1, &TMP$1577$3, 32 );
   _ZmiR6VECTORS0_( &TMP$1578$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (N$1 << (3ll & 63ll))), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &B$1, &TMP$1578$3, 32 );
   _Zv24idivR6VECTORS0_( &TMP$1579$3, &A$1, &B$1 );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll), &TMP$1579$3, 32 );
   double vr$48 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)), (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll) );
   *(double*)((uint8*)LPPOLY$1 + 152ll) = vr$48;
   _ZN6VECTOR10NORMALIZEDEv( &TMP$1580$3, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll) );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), &TMP$1580$3, 32 );
   _ZN9RAYTRACER16GETPOLYSCREENRECEll( THIS$1, OBJID$1, PC$2 );
  }
  label$1742:;
  PC$2 = PC$2 + 1ll;
  label$1741:;
  if( PC$2 <= TMP$1576$2 ) goto label$1744;
  label$1743:;
 }
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, OBJID$1 );
 label$1738:;
}

boolean _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, double X$1, double Y$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1745:;
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1748;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1746;
  label$1748:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1750;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1746;
  label$1750:;
 }
 {
  struct $9RECTANGLE* TMP$1581$2;
  TMP$1581$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll);
  if( ((int64)-(X$1 >= *(double*)TMP$1581$2) & (int64)-(X$1 <= *(double*)((uint8*)TMP$1581$2 + 32ll))) == 0ll ) goto label$1752;
  {
   if( ((int64)-(Y$1 >= *(double*)((uint8*)TMP$1581$2 + 8ll)) & (int64)-(Y$1 <= *(double*)((uint8*)TMP$1581$2 + 40ll))) == 0ll ) goto label$1754;
   {
    fb$result$1 = (boolean)1ll;
    goto label$1746;
    label$1754:;
   }
  }
  label$1752:;
  label$1751:;
 }
 label$1746:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1755:;
 if( *(int64*)((uint8*)THIS$1 + 256ll) != 0ll ) goto label$1758;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1756;
  label$1758:;
 }
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1582$2;
  TMP$1582$2 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
  goto label$1759;
  label$1762:;
  {
   {
    struct $9RECTANGLE* TMP$1583$4;
    TMP$1583$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (I$2 << (3ll & 63ll))) + 16ll);
    if( ((int64)-((double)X$1 >= *(double*)TMP$1583$4) & (int64)-((double)X$1 <= *(double*)((uint8*)TMP$1583$4 + 32ll))) == 0ll ) goto label$1764;
    {
     if( ((int64)-((double)Y$1 >= *(double*)((uint8*)TMP$1583$4 + 8ll)) & (int64)-((double)Y$1 <= *(double*)((uint8*)TMP$1583$4 + 40ll))) == 0ll ) goto label$1766;
     {
      fb$result$1 = (boolean)1ll;
      goto label$1756;
      label$1766:;
     }
    }
    label$1764:;
    label$1763:;
   }
  }
  label$1760:;
  I$2 = I$2 + 1ll;
  label$1759:;
  if( I$2 <= TMP$1582$2 ) goto label$1762;
  label$1761:;
 }
 fb$result$1 = (boolean)0ll;
 goto label$1756;
 label$1756:;
 return fb$result$1;
}

void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETCOL$1, struct $6VECTOR* RAYDIRECTION$1 )
{
 struct $6VECTOR TMP$1584$1;
 label$1767:;
 double L$1;
 double vr$0 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$0;
 if( L$1 != 0x0p+0 ) goto label$1770;
 {
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = 0x1.p+0;
 }
 goto label$1769;
 label$1770:;
 {
  L$1 = __builtin_sqrt( L$1 );
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = *(double*)((uint8*)RAYDIRECTION$1 + 16ll) / L$1;
 }
 label$1769:;
 double vr$8 = pow( *(double*)((uint8*)RAYDIRECTION$1 + 16ll), *(double*)((uint8*)RAYDIRECTION$1 + 16ll) );
 L$1 = vr$8;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &L$1, 0x0p+0, 0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1584$1, (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), L$1 );
 __builtin_memcpy( RETCOL$1, &TMP$1584$1, 32 );
 label$1768:;
}

uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1771:;
 struct $6VECTOR OSRC$1;
 _ZN6VECTORC1Ev( &OSRC$1 );
 struct $6VECTOR ODES$1;
 _ZN6VECTORC1Ev( &ODES$1 );
 struct $6VECTOR RGBCOL$1;
 _ZN6VECTORC1Ev( &RGBCOL$1 );
 int64 CURREC$1;
 __builtin_memset( &CURREC$1, 0, 8ll );
 {
  *(double*)&ODES$1 = (double)(X$1 - *(int64*)((uint8*)THIS$1 + 16ll)) * *(double*)((uint8*)THIS$1 + 40ll);
  *(double*)((uint8*)&ODES$1 + 8ll) = (double)(*(int64*)((uint8*)THIS$1 + 24ll) - Y$1) * *(double*)((uint8*)THIS$1 + 40ll);
  *(double*)((uint8*)&ODES$1 + 16ll) = 0x1.p+0;
 }
 boolean vr$15 = _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( THIS$1, X$1, Y$1 );
 if( vr$15 != (boolean)1ll ) goto label$1774;
 {
  _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&OSRC$1, (struct $6VECTOR*)&ODES$1, CURREC$1, &RGBCOL$1 );
 }
 goto label$1773;
 label$1774:;
 {
  _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, &RGBCOL$1, &ODES$1 );
 }
 label$1773:;
 uint32 vr$22 = _ZN6VECTORcvjEv( &RGBCOL$1 );
 fb$result$1 = vr$22;
 goto label$1772;
 label$1772:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 struct $6VECTOR TMP$1596$1;
 struct $6VECTOR TMP$1597$1;
 struct $6VECTOR TMP$1598$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1775:;
 static struct $6VECTOR A$1;
 static int64 LABEL$1777$1;
 if( LABEL$1777$1 != 0ll ) goto label$1778;
 LABEL$1777$1 = 1ll;
 _ZN6VECTORC1Ev( &A$1 );
 label$1778:;
 static struct $6VECTOR B$1;
 static int64 LABEL$1779$1;
 if( LABEL$1779$1 != 0ll ) goto label$1780;
 LABEL$1779$1 = 1ll;
 _ZN6VECTORC1Ev( &B$1 );
 label$1780:;
 static struct $6VECTOR FOUNDPOINT$1;
 static int64 LABEL$1781$1;
 if( LABEL$1781$1 != 0ll ) goto label$1782;
 LABEL$1781$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDPOINT$1 );
 label$1782:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1783$1;
 if( LABEL$1783$1 != 0ll ) goto label$1784;
 LABEL$1783$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1784:;
 static boolean INSPHERE$1;
 static boolean FLAG$1;
 static double T1$1;
 static double T2$1;
 static double L$1;
 static double L2$1;
 static double M$1;
 static double N$1;
 static double RADIUS$1;
 static int64 MATID$1;
 FLAG$1 = (boolean)0ll;
 INSPHERE$1 = (boolean)0ll;
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
 RADIUS$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll);
 double vr$9 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$9;
 if( L$1 != 0x0p+0 ) goto label$1786;
 {
  L$1 = 0x1.0624DD2F1A9FCp-10;
  label$1786:;
 }
 M$1 = (((*(double*)RAYDIRECTION$1 * (*(double*)RAYORIGIN$1 - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll))) * 0x1.p+1) + ((*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * (*(double*)((uint8*)RAYORIGIN$1 + 8ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 88ll))) * 0x1.p+1)) + ((*(double*)((uint8*)RAYDIRECTION$1 + 16ll) * (*(double*)((uint8*)RAYORIGIN$1 + 16ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 96ll))) * 0x1.p+1);
 double vr$49 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll), (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 double vr$50 = _ZmlR6VECTORS0_( RAYORIGIN$1, RAYORIGIN$1 );
 N$1 = vr$49 + vr$50;
 double vr$57 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll), RAYORIGIN$1 );
 N$1 = (N$1 - (vr$57 * 0x1.p+1)) - (RADIUS$1 * RADIUS$1);
 T1$1 = (M$1 * M$1) - ((L$1 * N$1) * 0x1.p+2);
 if( T1$1 >= 0x0p+0 ) goto label$1788;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1776;
  label$1788:;
 }
 L2$1 = L$1 * 0x1.p+1;
 if( T1$1 != 0x0p+0 ) goto label$1790;
 {
  struct $6VECTOR TMP$1585$2;
  struct $6VECTOR TMP$1586$2;
  T1$1 = -M$1 / L2$1;
  if( T1$1 > 0x0p+0 ) goto label$1792;
  {
   fb$result$1 = (boolean)0ll;
   goto label$1776;
   label$1792:;
  }
  struct $6VECTOR* vr$70 = _ZmldR6VECTOR( &TMP$1585$2, T1$1, RAYDIRECTION$1 );
  _ZplR6VECTORS0_( &TMP$1586$2, RAYORIGIN$1, vr$70 );
  __builtin_memcpy( &FOUNDPOINT$1, &TMP$1586$2, 32 );
  INSPHERE$1 = (boolean)0ll;
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1794;
  {
   _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1796;
   {
    boolean vr$81 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
    FLAG$1 = vr$81;
   }
   goto label$1795;
   label$1796:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1795:;
  }
  goto label$1793;
  label$1794:;
  {
   FLAG$1 = (boolean)1ll;
  }
  label$1793:;
 }
 goto label$1789;
 label$1790:;
 {
  T1$1 = (-M$1 - __builtin_sqrt( T1$1 )) / L2$1;
  T2$1 = (-M$1 + __builtin_sqrt( T1$1 )) / L2$1;
  if( T1$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1798;
  {
   T1$1 = 0x0p+0;
   label$1798:;
  }
  if( T2$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1800;
  {
   T2$1 = 0x0p+0;
   label$1800:;
  }
  if( ((int64)-(T1$1 == 0x0p+0) & (int64)-(T2$1 == 0x0p+0)) == 0ll ) goto label$1802;
  {
   fb$result$1 = (boolean)0ll;
   goto label$1776;
   label$1802:;
  }
  if( ((int64)-(T1$1 > 0x0p+0) & (int64)-(T2$1 > 0x0p+0)) == 0ll ) goto label$1804;
  {
   struct $6VECTOR TMP$1588$3;
   struct $6VECTOR TMP$1589$3;
   if( T2$1 >= T1$1 ) goto label$1806;
   {
    {
     double TMP$1587$5;
     TMP$1587$5 = T1$1;
     T1$1 = T2$1;
     T2$1 = TMP$1587$5;
    }
    label$1806:;
   }
   struct $6VECTOR* vr$97 = _ZmldR6VECTOR( &TMP$1588$3, T1$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1589$3, RAYORIGIN$1, vr$97 );
   __builtin_memcpy( &FOUNDPOINT$1, &TMP$1589$3, 32 );
   if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1808;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1810;
    {
     boolean vr$108 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$108;
     if( FLAG$1 != (boolean)0ll ) goto label$1812;
     {
      struct $6VECTOR TMP$1590$6;
      struct $6VECTOR TMP$1591$6;
      INSPHERE$1 = (boolean)1ll;
      struct $6VECTOR* vr$110 = _ZmldR6VECTOR( &TMP$1590$6, T2$1, RAYDIRECTION$1 );
      _ZplR6VECTORS0_( &TMP$1591$6, RAYORIGIN$1, vr$110 );
      __builtin_memcpy( &FOUNDPOINT$1, &TMP$1591$6, 32 );
      _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
      boolean vr$113 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      FLAG$1 = vr$113;
     }
     label$1812:;
     label$1811:;
    }
    goto label$1809;
    label$1810:;
    {
     FLAG$1 = (boolean)1ll;
    }
    label$1809:;
   }
   goto label$1807;
   label$1808:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1807:;
  }
  goto label$1803;
  label$1804:;
  {
   if( T1$1 <= 0x0p+0 ) goto label$1814;
   {
    struct $6VECTOR TMP$1592$4;
    struct $6VECTOR TMP$1593$4;
    struct $6VECTOR* vr$115 = _ZmldR6VECTOR( &TMP$1592$4, T1$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1593$4, RAYORIGIN$1, vr$115 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1593$4, 32 );
    INSPHERE$1 = (boolean)0ll;
   }
   goto label$1813;
   label$1814:;
   {
    struct $6VECTOR TMP$1594$4;
    struct $6VECTOR TMP$1595$4;
    struct $6VECTOR* vr$119 = _ZmldR6VECTOR( &TMP$1594$4, T2$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1595$4, RAYORIGIN$1, vr$119 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1595$4, 32 );
    INSPHERE$1 = (boolean)1ll;
   }
   label$1813:;
   if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1816;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1818;
    {
     boolean vr$130 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$130;
    }
    goto label$1817;
    label$1818:;
    {
     FLAG$1 = (boolean)1ll;
    }
    label$1817:;
   }
   goto label$1815;
   label$1816:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1815:;
  }
  label$1803:;
 }
 label$1789:;
 if( FLAG$1 != (boolean)0ll ) goto label$1820;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1776;
  label$1820:;
 }
 _ZmiR6VECTORS0_( &TMP$1596$1, &FOUNDPOINT$1, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 __builtin_memcpy( NORMALE$1, &TMP$1596$1, 32 );
 struct $6VECTOR* vr$144 = _ZmlR6VECTORd( &TMP$1597$1, NORMALE$1, 0x1.004189374BC6Ap+0 );
 _ZplR6VECTORS0_( &TMP$1598$1, vr$144, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 __builtin_memcpy( HITPOINT$1, &TMP$1598$1, 32 );
 _ZN6VECTOR9NORMALIZEEv( NORMALE$1 );
 if( INSPHERE$1 != (boolean)1ll ) goto label$1822;
 {
  _ZN6VECTORmLEd( NORMALE$1, -0x1.p+0 );
  label$1822:;
 }
 fb$result$1 = (boolean)1ll;
 goto label$1776;
 label$1776:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1823:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 int64 FOUNDPOLYID$1;
 __builtin_memset( &FOUNDPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $6VECTOR FOUNDHITPOINT$1;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 struct $6VECTOR FOUNDNORMALE$1;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 struct $6VECTOR FOUNDMAPXY$1;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 double OLDDISTANCE2$1;
 __builtin_memset( &OLDDISTANCE2$1, 0, 8ll );
 double NEWDISTANCE2$1;
 __builtin_memset( &NEWDISTANCE2$1, 0, 8ll );
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 double HELP$1;
 __builtin_memset( &HELP$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double M$1;
 __builtin_memset( &M$1, 0, 8ll );
 double N$1;
 __builtin_memset( &N$1, 0, 8ll );
 double INSIDE$1;
 __builtin_memset( &INSIDE$1, 0, 8ll );
 double ORIENT$1;
 __builtin_memset( &ORIENT$1, 0, 8ll );
 double T$1;
 __builtin_memset( &T$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1826;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1824;
  label$1826:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1828;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1824;
  label$1828:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1830;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1824;
  label$1830:;
 }
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1599$2;
  TMP$1599$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1831;
  label$1834:;
  {
   struct $6VECTOR TMP$1601$3;
   struct $6VECTOR TMP$1602$3;
   if( *(int64*)((uint8*)THIS$1 + 136ll) != 0ll ) goto label$1836;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (*(double*)RAYDIRECTION$1 * *(double*)((uint8*)THIS$1 + 32ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll));
    boolean vr$53 = _ZN9RAYTRACER13ISPOLYONPIXELElldd( THIS$1, OBJID$1, PC$2, X$1, Y$1 );
    if( vr$53 != (boolean)0ll ) goto label$1838;
    {
     goto label$1832;
     label$1838:;
    }
   }
   label$1836:;
   label$1835:;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll)));
   double vr$62 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll), RAYORIGIN$1 );
   HELP$1 = vr$62;
   HELP$1 = -(HELP$1 - *(double*)((uint8*)LPPOLY$1 + 152ll));
   if( HELP$1 <= 0x0p+0 ) goto label$1840;
   {
    struct $6VECTOR TMP$1600$4;
    _ZmlR6VECTORd( &TMP$1600$4, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), -0x1.p+0 );
    __builtin_memcpy( NORMALE$1, &TMP$1600$4, 32 );
   }
   goto label$1839;
   label$1840:;
   {
    __builtin_memcpy( NORMALE$1, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), 32 );
   }
   label$1839:;
   double vr$72 = _ZmlR6VECTORS0_( NORMALE$1, RAYDIRECTION$1 );
   T$1 = vr$72;
   if( T$1 != 0x0p+0 ) goto label$1842;
   {
    goto label$1832;
    label$1842:;
   }
   double vr$73 = _ZmlR6VECTORS0_( NORMALE$1, RAYORIGIN$1 );
   double vr$82 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll))) + 80ll)), NORMALE$1 );
   T$1 = -(vr$73 - vr$82) / T$1;
   if( T$1 > 0x0p+0 ) goto label$1844;
   {
    goto label$1832;
    label$1844:;
   }
   struct $6VECTOR* vr$87 = _ZmldR6VECTOR( &TMP$1601$3, T$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1602$3, RAYORIGIN$1, vr$87 );
   __builtin_memcpy( HITPOINT$1, &TMP$1602$3, 32 );
   T$1 = 0x0p+0;
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1603$4;
    TMP$1603$4 = *(int64*)((uint8*)LPPOLY$1 + 72ll) + -1ll;
    goto label$1845;
    label$1848:;
    {
     struct $6VECTOR TMP$1604$5;
     struct $6VECTOR TMP$1605$5;
     _ZmiR6VECTORS0_( &TMP$1604$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (VC$4 << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &A$1, &TMP$1604$5, 32 );
     _ZmiR6VECTORS0_( &TMP$1605$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (((VC$4 + 1ll) % *(int64*)((uint8*)LPPOLY$1 + 72ll)) << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &B$1, &TMP$1605$5, 32 );
     _ZN6VECTOR9NORMALIZEEv( &A$1 );
     _ZN6VECTOR9NORMALIZEEv( &B$1 );
     double vr$111 = _ZmlR6VECTORS0_( &A$1, &B$1 );
     INSIDE$1 = vr$111;
     if( INSIDE$1 >= -0x1.p+0 ) goto label$1850;
     {
      goto label$1832;
      label$1850:;
     }
     if( INSIDE$1 <= 0x1.p+0 ) goto label$1852;
     {
      goto label$1832;
      label$1852:;
     }
     T$1 = T$1 + __builtin_acos( INSIDE$1 );
    }
    label$1846:;
    VC$4 = VC$4 + 1ll;
    label$1845:;
    if( VC$4 <= TMP$1603$4 ) goto label$1848;
    label$1847:;
   }
   if( ((int64)-(T$1 > 0x1.921CAC083126Fp+2) & (int64)-(T$1 < 0x1.922339C0EBEEp+2)) == 0ll ) goto label$1854;
   {
    struct $6VECTOR TMP$1606$4;
    if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1856;
    {
     _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, PC$2, HITPOINT$1, MAPXY$1 );
     if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1858;
     {
      boolean vr$126 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      if( vr$126 != (boolean)0ll ) goto label$1860;
      {
       goto label$1832;
       label$1860:;
      }
     }
     label$1858:;
     label$1857:;
    }
    label$1856:;
    label$1855:;
    FLAG$1 = (boolean)1ll;
    _ZmiR6VECTORS0_( &TMP$1606$4, HITPOINT$1, RAYORIGIN$1 );
    __builtin_memcpy( &C$1, &TMP$1606$4, 32 );
    if( PC$2 != 0ll ) goto label$1862;
    {
     FOUNDPOLYID$1 = 0ll;
     __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     double vr$135 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$135;
    }
    goto label$1861;
    label$1862:;
    {
     double vr$138 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$138;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1864;
     {
      FOUNDPOLYID$1 = PC$2;
      __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1864:;
     label$1863:;
    }
    label$1861:;
   }
   label$1854:;
   label$1853:;
  }
  label$1832:;
  PC$2 = PC$2 + 1ll;
  label$1831:;
  if( PC$2 <= TMP$1599$2 ) goto label$1834;
  label$1833:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1866;
 {
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1868;
  {
   __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
   label$1868:;
  }
 }
 goto label$1865;
 label$1866:;
 {
  *POLYID$1 = -1ll;
 }
 label$1865:;
 fb$result$1 = FLAG$1;
 goto label$1824;
 label$1824:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1869:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 {
  $14OBJECT3D_TYPES TMP$1607$2;
  TMP$1607$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1607$2 != 1ll ) goto label$1872;
  label$1873:;
  {
   boolean vr$6 = _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, POLYID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$6;
  }
  goto label$1871;
  label$1872:;
  if( TMP$1607$2 != 0ll ) goto label$1874;
  label$1875:;
  {
   boolean vr$7 = _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$7;
  }
  label$1874:;
  label$1871:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1877;
 {
  if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1879;
  {
   _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( THIS$1, OBJID$1, *POLYID$1, NORMALE$1, BNORMALE$1, MAPXY$1 );
  }
  label$1879:;
  label$1878:;
 }
 label$1877:;
 label$1876:;
 fb$result$1 = FLAG$1;
 goto label$1870;
 label$1870:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64* OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1880:;
 static struct $6VECTOR R$1;
 static int64 LABEL$1882$1;
 if( LABEL$1882$1 != 0ll ) goto label$1883;
 LABEL$1882$1 = 1ll;
 _ZN6VECTORC1Ev( &R$1 );
 label$1883:;
 static struct $6VECTOR N$1;
 static int64 LABEL$1884$1;
 if( LABEL$1884$1 != 0ll ) goto label$1885;
 LABEL$1884$1 = 1ll;
 _ZN6VECTORC1Ev( &N$1 );
 label$1885:;
 static struct $6VECTOR N2$1;
 static int64 LABEL$1886$1;
 if( LABEL$1886$1 != 0ll ) goto label$1887;
 LABEL$1886$1 = 1ll;
 _ZN6VECTORC1Ev( &N2$1 );
 label$1887:;
 static struct $6VECTOR C$1;
 static int64 LABEL$1888$1;
 if( LABEL$1888$1 != 0ll ) goto label$1889;
 LABEL$1888$1 = 1ll;
 _ZN6VECTORC1Ev( &C$1 );
 label$1889:;
 static boolean FLAG$1;
 static boolean FLAG2$1;
 static int64 FOUNDOBJID$1;
 static int64 FOUNDPOLYID$1;
 static struct $6VECTOR FOUNDHITPOINT$1;
 static int64 LABEL$1890$1;
 if( LABEL$1890$1 != 0ll ) goto label$1891;
 LABEL$1890$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 label$1891:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1892$1;
 if( LABEL$1892$1 != 0ll ) goto label$1893;
 LABEL$1892$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1893:;
 static struct $6VECTOR FOUNDBNORMALE$1;
 static int64 LABEL$1894$1;
 if( LABEL$1894$1 != 0ll ) goto label$1895;
 LABEL$1894$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDBNORMALE$1 );
 label$1895:;
 static struct $6VECTOR FOUNDMAPXY$1;
 static int64 LABEL$1896$1;
 if( LABEL$1896$1 != 0ll ) goto label$1897;
 LABEL$1896$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 label$1897:;
 static double OLDDISTANCE2$1;
 static double NEWDISTANCE2$1;
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1899;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1881;
  label$1899:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 FLAG$1 = (boolean)0ll;
 {
  int64 OC$2;
  OC$2 = 0ll;
  int64 TMP$1608$2;
  TMP$1608$2 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
  goto label$1900;
  label$1903:;
  {
   boolean vr$4 = _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OC$2, POLYID$1, &R$1, &N$1, &N2$1, MAPXY$1 );
   if( vr$4 != (boolean)1ll ) goto label$1905;
   {
    if( OC$2 != 0ll ) goto label$1907;
    {
     struct $6VECTOR TMP$1609$5;
     __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
     __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     FOUNDOBJID$1 = 0ll;
     FOUNDPOLYID$1 = *POLYID$1;
     _ZmiR6VECTORS0_( &TMP$1609$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1609$5, 32 );
     double vr$8 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$8;
    }
    goto label$1906;
    label$1907:;
    {
     struct $6VECTOR TMP$1610$5;
     _ZmiR6VECTORS0_( &TMP$1610$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1610$5, 32 );
     double vr$11 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$11;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1909;
     {
      __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
      __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      FOUNDOBJID$1 = OC$2;
      FOUNDPOLYID$1 = *POLYID$1;
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1909:;
     label$1908:;
    }
    label$1906:;
    FLAG$1 = (boolean)1ll;
   }
   label$1905:;
   label$1904:;
  }
  label$1901:;
  OC$2 = OC$2 + 1ll;
  label$1900:;
  if( OC$2 <= TMP$1608$2 ) goto label$1903;
  label$1902:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1911;
 {
  *OBJID$1 = FOUNDOBJID$1;
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  __builtin_memcpy( BNORMALE$1, &FOUNDBNORMALE$1, 32 );
  __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
 }
 goto label$1910;
 label$1911:;
 {
  *OBJID$1 = -1ll;
  *POLYID$1 = -1ll;
 }
 label$1910:;
 fb$result$1 = FLAG$1;
 goto label$1881;
 label$1881:;
 return fb$result$1;
}

void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITP$1, struct $6VECTOR* HITN$1, struct $6VECTOR* HITBN$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1912:;
 struct $6VECTOR L$1;
 _ZN6VECTORC1Ev( &L$1 );
 struct $6VECTOR V$1;
 _ZN6VECTORC1Ev( &V$1 );
 struct $6VECTOR DUMMY1$1;
 _ZN6VECTORC1Ev( &DUMMY1$1 );
 struct $6VECTOR DUMMY2$1;
 _ZN6VECTORC1Ev( &DUMMY2$1 );
 struct $6VECTOR DUMMY3$1;
 _ZN6VECTORC1Ev( &DUMMY3$1 );
 struct $6VECTOR DUMMY4$1;
 _ZN6VECTORC1Ev( &DUMMY4$1 );
 struct $6VECTOR HNORMAL$1;
 _ZN6VECTORC1Ev( &HNORMAL$1 );
 double VDOT$1;
 __builtin_memset( &VDOT$1, 0, 8ll );
 double LIGHTCOSINUS$1;
 __builtin_memset( &LIGHTCOSINUS$1, 0, 8ll );
 double SPOTANGLE$1;
 __builtin_memset( &SPOTANGLE$1, 0, 8ll );
 double LIGHTSPECULAR$1;
 __builtin_memset( &LIGHTSPECULAR$1, 0, 8ll );
 double LIGHTDISTANCE$1;
 __builtin_memset( &LIGHTDISTANCE$1, 0, 8ll );
 struct $6VECTOR COLLIGHT$1;
 _ZN6VECTORC1Ev( &COLLIGHT$1 );
 struct $6VECTOR COLSPECULAR$1;
 _ZN6VECTORC1Ev( &COLSPECULAR$1 );
 struct $6VECTOR COLDISTANCE$1;
 _ZN6VECTORC1Ev( &COLDISTANCE$1 );
 struct $6VECTOR COLAMBIENT$1;
 _ZN6VECTORC1Ev( &COLAMBIENT$1 );
 int64 OBJID$1;
 __builtin_memset( &OBJID$1, 0, 8ll );
 int64 POLYID$1;
 __builtin_memset( &POLYID$1, 0, 8ll );
 *(double*)RETCOL$1 = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 16ll) = 0x0p+0;
 if( *(int64*)((uint8*)THIS$1 + 272ll) >= 0ll ) goto label$1915;
 {
  goto label$1913;
  label$1915:;
 }
 {
  int64 LC$2;
  LC$2 = 0ll;
  int64 TMP$1611$2;
  TMP$1611$2 = *(int64*)((uint8*)THIS$1 + 272ll) + -1ll;
  goto label$1916;
  label$1919:;
  {
   struct $6VECTOR TMP$1612$3;
   boolean TMP$1613$3;
   struct $6VECTOR TMP$1618$3;
   struct $6VECTOR TMP$1619$3;
   _ZmiR6VECTORS0_( &TMP$1612$3, HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   __builtin_memcpy( &L$1, &TMP$1612$3, 32 );
   if( *(boolean*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 192ll) != (boolean)1ll ) goto label$1920;
   TMP$1613$3 = (boolean)(*(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 97ll) == (boolean)1ll);
   goto label$1952;
   label$1920:;
   TMP$1613$3 = (boolean)0ll;
   label$1952:;
   if( TMP$1613$3 == (boolean)0ll ) goto label$1922;
   {
    *(int64*)((uint8*)THIS$1 + 136ll) = 1ll;
    boolean vr$58 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll), &L$1, &OBJID$1, &POLYID$1, &DUMMY1$1, &DUMMY2$1, &DUMMY3$1, &DUMMY4$1 );
    if( vr$58 != (boolean)1ll ) goto label$1924;
    {
     if( OBJID$1 == HITOBJID$1 ) goto label$1926;
     {
      if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 96ll) != (boolean)0ll ) goto label$1928;
      {
       goto label$1917;
       label$1928:;
      }
     }
     label$1926:;
     label$1925:;
    }
    label$1924:;
    label$1923:;
    if( ((int64)-(*(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) == 1ll) & (int64)-(HITPOLYID$1 != POLYID$1)) == 0ll ) goto label$1930;
    {
     goto label$1917;
     label$1930:;
    }
   }
   label$1922:;
   label$1921:;
   if( *(int64*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) != 1ll ) goto label$1932;
   {
    struct $6VECTOR TMP$1614$4;
    _ZmiR6VECTORS0_( &TMP$1614$4, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll), HITP$1 );
    __builtin_memcpy( &HNORMAL$1, &TMP$1614$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &HNORMAL$1 );
    double vr$93 = _ZmlR6VECTORS0_( &HNORMAL$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 112ll) );
    SPOTANGLE$1 = vr$93;
    if( SPOTANGLE$1 >= 0x0p+0 ) goto label$1934;
    {
     goto label$1917;
     label$1934:;
    }
    SPOTANGLE$1 = __builtin_acos( SPOTANGLE$1 );
    if( SPOTANGLE$1 <= *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 184ll) ) goto label$1936;
    {
     goto label$1917;
     label$1936:;
    }
   }
   label$1932:;
   label$1931:;
   _ZN6VECTORmLEd( &L$1, -0x1.p+0 );
   _ZN6VECTOR9NORMALIZEEv( &L$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1938;
   {
    double vr$110 = _ZmlR6VECTORS0_( &L$1, HITBN$1 );
    LIGHTCOSINUS$1 = vr$110;
   }
   goto label$1937;
   label$1938:;
   {
    double vr$112 = _ZmlR6VECTORS0_( &L$1, HITN$1 );
    LIGHTCOSINUS$1 = vr$112;
   }
   label$1937:;
   LIGHTCOSINUS$1 = LIGHTCOSINUS$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 40ll);
   if( LIGHTCOSINUS$1 > 0x0p+0 ) goto label$1940;
   {
    goto label$1917;
    label$1940:;
   }
   if( *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 48ll) <= 0x0p+0 ) goto label$1942;
   {
    struct $6VECTOR TMP$1615$4;
    struct $6VECTOR TMP$1616$4;
    double TMP$1617$4;
    struct $6VECTOR* vr$133 = _ZmiR6VECTORS0_( &TMP$1615$4, &L$1, RAYDIRECTION$1 );
    _ZmlR6VECTORd( &TMP$1616$4, vr$133, 0x1.p-1 );
    __builtin_memcpy( &V$1, &TMP$1616$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &V$1 );
    double vr$138 = _ZmlR6VECTORS0_( &V$1, HITN$1 );
    VDOT$1 = vr$138;
    if( VDOT$1 >= 0x0p+0 ) goto label$1943;
    TMP$1617$4 = -VDOT$1;
    goto label$1953;
    label$1943:;
    TMP$1617$4 = VDOT$1;
    label$1953:;
    double vr$156 = pow( TMP$1617$4, *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 56ll) );
    LIGHTSPECULAR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 48ll) * vr$156;
    if( LIGHTSPECULAR$1 <= 0x0p+0 ) goto label$1945;
    {
     LIGHTCOSINUS$1 = LIGHTCOSINUS$1 + LIGHTSPECULAR$1;
     if( LIGHTCOSINUS$1 <= 0x1.p+0 ) goto label$1947;
     {
      LIGHTCOSINUS$1 = 0x1.p+0;
      label$1947:;
     }
    }
    label$1945:;
    label$1944:;
   }
   label$1942:;
   label$1941:;
   _ZmlR6VECTORd( &TMP$1618$3, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 144ll), LIGHTCOSINUS$1 );
   __builtin_memcpy( &COLLIGHT$1, &TMP$1618$3, 32 );
   double vr$172 = _ZmlR6VECTORS0_( HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   LIGHTDISTANCE$1 = __builtin_sqrt( vr$172 );
   double vr$180 = _Z3EXPd( (-0x1.62E42FEFA39ECp-1 / *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 176ll)) * LIGHTDISTANCE$1 );
   LIGHTDISTANCE$1 = vr$180;
   if( LIGHTDISTANCE$1 > 0x0p+0 ) goto label$1949;
   {
    goto label$1917;
    label$1949:;
   }
   if( LIGHTDISTANCE$1 <= 0x1.p+0 ) goto label$1951;
   {
    LIGHTDISTANCE$1 = 0x1.p+0;
    label$1951:;
   }
   struct $6VECTOR* vr$183 = _ZmlR6VECTORd( &TMP$1619$3, &COLLIGHT$1, LIGHTDISTANCE$1 );
   _ZN6VECTORpLERS_( RETCOL$1, vr$183 );
  }
  label$1917:;
  LC$2 = LC$2 + 1ll;
  label$1916:;
  if( LC$2 <= TMP$1611$2 ) goto label$1919;
  label$1918:;
 }
 _ZN6VECTORpLERS_( RETCOL$1, (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 label$1913:;
}

void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETVEC$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1 )
{
 struct $6VECTOR TMP$1620$1;
 struct $6VECTOR TMP$1621$1;
 struct $6VECTOR TMP$1622$1;
 label$1954:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1620$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1620$1, 32 );
 __builtin_memcpy( RETVEC$1, &I$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1621$1, &I$1, 0x1.999999999999Ap-4 );
 __builtin_memcpy( &I2$1, &TMP$1621$1, 32 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 double vr$14 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$14;
 L$1 = L$1 * 0x1.p+1;
 _ZmldR6VECTOR( &TMP$1622$1, L$1, NORMALE$1 );
 __builtin_memcpy( &I$1, &TMP$1622$1, 32 );
 _ZN6VECTORpLERS_( RETVEC$1, &I$1 );
 label$1955:;
}

void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJNR$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* TDES$1 )
{
 struct $6VECTOR TMP$1623$1;
 struct $6VECTOR TMP$1624$1;
 struct $6VECTOR TMP$1625$1;
 label$1956:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double IOR$1;
 __builtin_memset( &IOR$1, 0, 8ll );
 double COSINUS$1;
 __builtin_memset( &COSINUS$1, 0, 8ll );
 IOR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJNR$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 88ll);
 if( IOR$1 >= 0x1.47AE147AE147Bp-7 ) goto label$1959;
 {
  IOR$1 = 0x1.47AE147AE147Bp-7;
  label$1959:;
 }
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1623$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1623$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 double vr$18 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$18;
 COSINUS$1 = __builtin_sqrt( (-((-(L$1 * L$1) + 0x1.p+0) / (IOR$1 * IOR$1)) + 0x1.p+0) );
 COSINUS$1 = COSINUS$1 - (L$1 / IOR$1);
 _ZmldR6VECTOR( &TMP$1624$1, COSINUS$1, NORMALE$1 );
 __builtin_memcpy( TDES$1, &TMP$1624$1, 32 );
 _ZN6VECTORmIERS_( TDES$1, &I$1 );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1625$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I2$1, &TMP$1625$1, 32 );
 _ZN6VECTORmLEd( &I2$1, 0x1.999999999999Ap-4 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 label$1957:;
}

void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* _RAYORIGIN$1, struct $6VECTOR* _RAYDIRECTION$1, int64 CURRAYDEPTH$1, struct $6VECTOR* RETCOL$1 )
{
 label$1960:;
 struct $6VECTOR LCOL$1;
 _ZN6VECTORC1Ev( &LCOL$1 );
 struct $6VECTOR MCOL$1;
 _ZN6VECTORC1Ev( &MCOL$1 );
 struct $6VECTOR TCOL$1;
 _ZN6VECTORC1Ev( &TCOL$1 );
 struct $6VECTOR MIRRORAYDIRECTION$1;
 _ZN6VECTORC1Ev( &MIRRORAYDIRECTION$1 );
 struct $6VECTOR BROKENRAYDIRECTION$1;
 _ZN6VECTORC1Ev( &BROKENRAYDIRECTION$1 );
 struct $6VECTOR HITPOINT$1;
 _ZN6VECTORC1Ev( &HITPOINT$1 );
 struct $6VECTOR NORMALE$1;
 _ZN6VECTORC1Ev( &NORMALE$1 );
 struct $6VECTOR BUMPNORMALE$1;
 _ZN6VECTORC1Ev( &BUMPNORMALE$1 );
 struct $6VECTOR MAPXY$1;
 _ZN6VECTORC1Ev( &MAPXY$1 );
 int64 HITOBJID$1;
 __builtin_memset( &HITOBJID$1, 0, 8ll );
 int64 HITPOLYID$1;
 __builtin_memset( &HITPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $8MATERIAL* PMAT$1;
 __builtin_memset( &PMAT$1, 0, 8ll );
 *(int64*)((uint8*)THIS$1 + 136ll) = CURRAYDEPTH$1;
 struct $6VECTOR RAYORIGIN$1;
 __builtin_memcpy( &RAYORIGIN$1, _RAYORIGIN$1, 32 );
 struct $6VECTOR RAYDIRECTION$1;
 __builtin_memcpy( &RAYDIRECTION$1, _RAYDIRECTION$1, 32 );
 boolean vr$24 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, &RAYORIGIN$1, &RAYDIRECTION$1, &HITOBJID$1, &HITPOLYID$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1 );
 if( vr$24 != (boolean)0ll ) goto label$1963;
 {
  if( CURRAYDEPTH$1 != 0ll ) goto label$1965;
  {
   _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, RETCOL$1, &RAYDIRECTION$1 );
   label$1965:;
  }
 }
 goto label$1962;
 label$1963:;
 {
  struct $6VECTOR TMP$1626$2;
  struct $6VECTOR TMP$1627$2;
  struct $6VECTOR TMP$1628$2;
  struct $6VECTOR TMP$1629$2;
  struct $6VECTOR TMP$1630$2;
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll)));
  _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( THIS$1, HITOBJID$1, HITPOLYID$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1, &LCOL$1 );
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll)));
  if( CURRAYDEPTH$1 < *(int64*)((uint8*)THIS$1 + 128ll) ) goto label$1967;
  {
   *(double*)&TCOL$1 = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   *(double*)&MCOL$1 = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
  }
  goto label$1966;
  label$1967:;
  {
   if( *(double*)((uint8*)PMAT$1 + 80ll) <= 0x0p+0 ) goto label$1969;
   {
    _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( THIS$1, HITOBJID$1, &HITPOINT$1, &NORMALE$1, &RAYDIRECTION$1, &BROKENRAYDIRECTION$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&BROKENRAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &TCOL$1 );
   }
   goto label$1968;
   label$1969:;
   {
    *(double*)&TCOL$1 = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   }
   label$1968:;
   if( *(double*)((uint8*)PMAT$1 + 72ll) <= 0x0p+0 ) goto label$1971;
   {
    _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( THIS$1, &MIRRORAYDIRECTION$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&MIRRORAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &MCOL$1 );
   }
   goto label$1970;
   label$1971:;
   {
    *(double*)&MCOL$1 = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
   }
   label$1970:;
  }
  label$1966:;
  struct $6VECTOR* vr$68 = _ZmlR6VECTORd( &TMP$1629$2, &TCOL$1, *(double*)((uint8*)PMAT$1 + 80ll) );
  struct $6VECTOR* vr$72 = _ZmlR6VECTORd( &TMP$1627$2, &MCOL$1, *(double*)((uint8*)PMAT$1 + 72ll) );
  struct $6VECTOR* vr$76 = _ZmlR6VECTORd( &TMP$1626$2, &LCOL$1, *(double*)((uint8*)PMAT$1 + 64ll) );
  struct $6VECTOR* vr$78 = _ZplR6VECTORS0_( &TMP$1628$2, vr$76, vr$72 );
  _ZplR6VECTORS0_( &TMP$1630$2, vr$78, vr$68 );
  __builtin_memcpy( RETCOL$1, &TMP$1630$2, 32 );
  _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( THIS$1, HITOBJID$1, &MAPXY$1, RETCOL$1 );
 }
 label$1962:;
 label$1961:;
}

void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1633$1;
 struct $6VECTOR TMP$1634$1;
 struct $6VECTOR TMP$1635$1;
 label$1972:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll) );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1634$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1633$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1635$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll), vr$19, 4, 0 );
 label$1973:;
}

void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1638$1;
 struct $6VECTOR TMP$1639$1;
 struct $6VECTOR TMP$1640$1;
 label$1974:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1 );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1639$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1638$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1640$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1, vr$19, 4, 0 );
 label$1975:;
}

void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1976:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1641$2;
  TMP$1641$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$1978;
  label$1981:;
  {
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1642$4;
    TMP$1642$4 = *(int64*)THIS$1 + -1ll;
    goto label$1982;
    label$1985:;
    {
     struct $6VECTOR TMP$1645$5;
     struct $6VECTOR A$5;
     uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &A$5, vr$7 );
     struct $6VECTOR B$5;
     uint32 vr$11 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$11 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$16 = _ZmiR6VECTORS0_( &TMP$1645$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$16 );
     double L$5;
     double vr$19 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$19;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1987;
     {
      void* vr$24 = realloc( *(void**)((uint8*)THIS$1 + 312ll), (uint64)((*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)vr$24;
      void* vr$26 = malloc( 24ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$26;
      *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = 1ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 8ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 16ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)THIS$1 + 304ll) + 1ll;
     }
     label$1987:;
     label$1986:;
    }
    label$1983:;
    X$4 = X$4 + 1ll;
    label$1982:;
    if( X$4 <= TMP$1642$4 ) goto label$1985;
    label$1984:;
   }
  }
  label$1979:;
  Y$2 = Y$2 + 1ll;
  label$1978:;
  if( Y$2 <= TMP$1641$2 ) goto label$1981;
  label$1980:;
 }
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1646$2;
  TMP$1646$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$1988;
  label$1991:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1647$4;
    TMP$1647$4 = *(int64*)THIS$1 + -1ll;
    goto label$1992;
    label$1995:;
    {
     struct $6VECTOR TMP$1650$5;
     struct $6VECTOR A$5;
     uint32 vr$58 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &A$5, vr$58 );
     struct $6VECTOR B$5;
     uint32 vr$62 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$62 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$67 = _ZmiR6VECTORS0_( &TMP$1650$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$67 );
     double L$5;
     double vr$70 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$70;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1997;
     {
      void* vr$75 = realloc( *(void**)((uint8*)THIS$1 + 312ll), (uint64)((*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)vr$75;
      void* vr$77 = malloc( 24ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$77;
      *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = 0ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 8ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 16ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)THIS$1 + 304ll) + 1ll;
     }
     label$1997:;
     label$1996:;
    }
    label$1993:;
    X$4 = X$4 + 1ll;
    label$1992:;
    if( X$4 <= TMP$1647$4 ) goto label$1995;
    label$1994:;
   }
  }
  label$1989:;
  Y$2 = Y$2 + 1ll;
  label$1988:;
  if( Y$2 <= TMP$1646$2 ) goto label$1991;
  label$1990:;
 }
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) == (struct $7AAPIXEL**)0ull ) goto label$1999;
 {
  if( *(int64*)((uint8*)THIS$1 + 304ll) <= 0ll ) goto label$2001;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1651$4;
    TMP$1651$4 = *(int64*)((uint8*)THIS$1 + 304ll) + -1ll;
    goto label$2002;
    label$2005:;
    {
     int64 X$5;
     X$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) + 8ll);
     int64 Y$5;
     Y$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) + 16ll);
     if( *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) == 0ll ) goto label$2007;
     {
      _ZN9RAYTRACER5VBLUREll( THIS$1, X$5, Y$5 );
     }
     goto label$2006;
     label$2007:;
     {
      _ZN9RAYTRACER5HBLUREll( THIS$1, X$5, Y$5 );
     }
     label$2006:;
     free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) );
     *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
    }
    label$2003:;
    I$4 = I$4 + 1ll;
    label$2002:;
    if( I$4 <= TMP$1651$4 ) goto label$2005;
    label$2004:;
   }
   *(int64*)((uint8*)THIS$1 + 304ll) = 0ll;
  }
  label$2001:;
  label$2000:;
  free( *(void**)((uint8*)THIS$1 + 312ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1999:;
 label$1998:;
 label$1977:;
}

void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$2008:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1652$2;
  TMP$1652$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -2ll;
  goto label$2010;
  label$2013:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1653$4;
    TMP$1653$4 = *(int64*)THIS$1 + -2ll;
    goto label$2014;
    label$2017:;
    {
     struct $6VECTOR TMP$1663$5;
     struct $6VECTOR TMP$1664$5;
     struct $6VECTOR TMP$1665$5;
     struct $6VECTOR TMP$1666$5;
     struct $6VECTOR TMP$1667$5;
     struct $6VECTOR TMP$1668$5;
     struct $6VECTOR TMP$1669$5;
     struct $6VECTOR TMP$1670$5;
     struct $6VECTOR C0$5;
     uint32 vr$8 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C0$5, vr$8 );
     struct $6VECTOR C1$5;
     uint32 vr$13 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C1$5, vr$13 );
     struct $6VECTOR C2$5;
     uint32 vr$19 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C2$5, vr$19 );
     struct $6VECTOR C3$5;
     uint32 vr$24 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C3$5, vr$24 );
     struct $6VECTOR C4$5;
     uint32 vr$28 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &C4$5, vr$28 );
     struct $6VECTOR C5$5;
     uint32 vr$33 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C5$5, vr$33 );
     struct $6VECTOR C6$5;
     uint32 vr$39 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C6$5, vr$39 );
     struct $6VECTOR C7$5;
     uint32 vr$44 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C7$5, vr$44 );
     struct $6VECTOR C8$5;
     uint32 vr$50 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C8$5, vr$50 );
     struct $6VECTOR C$5;
     struct $6VECTOR* vr$62 = _ZplR6VECTORS0_( &TMP$1663$5, &C0$5, &C1$5 );
     struct $6VECTOR* vr$64 = _ZplR6VECTORS0_( &TMP$1664$5, vr$62, &C2$5 );
     struct $6VECTOR* vr$66 = _ZplR6VECTORS0_( &TMP$1665$5, vr$64, &C3$5 );
     struct $6VECTOR* vr$68 = _ZplR6VECTORS0_( &TMP$1666$5, vr$66, &C4$5 );
     struct $6VECTOR* vr$70 = _ZplR6VECTORS0_( &TMP$1667$5, vr$68, &C5$5 );
     struct $6VECTOR* vr$72 = _ZplR6VECTORS0_( &TMP$1668$5, vr$70, &C6$5 );
     struct $6VECTOR* vr$74 = _ZplR6VECTORS0_( &TMP$1669$5, vr$72, &C7$5 );
     struct $6VECTOR* vr$76 = _ZplR6VECTORS0_( &TMP$1670$5, vr$74, &C8$5 );
     _ZN6VECTORC1ERS_( &C$5, vr$76 );
     _ZN6VECTORmLEd( &C$5, 0x1.C71C71C71C71Cp-4 );
     uint32 vr$80 = _ZN6VECTORcvjEv( &C$5 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$80, 4, 0 );
    }
    label$2015:;
    X$4 = X$4 + 1ll;
    label$2014:;
    if( X$4 <= TMP$1653$4 ) goto label$2017;
    label$2016:;
   }
  }
  label$2011:;
  Y$2 = Y$2 + 1ll;
  label$2010:;
  if( Y$2 <= TMP$1652$2 ) goto label$2013;
  label$2012:;
 }
 label$2009:;
}

void _ZN9RAYTRACER6RENDERE6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 FBSTRING TMP$1673$1;
 FBSTRING TMP$1674$1;
 FBSTRING TMP$1681$1;
 label$2018:;
 double T1$1;
 __builtin_memset( &T1$1, 0, 8ll );
 uint64* LPSCREEN$1;
 __builtin_memset( &LPSCREEN$1, 0, 8ll );
 void* vr$2 = fb_GfxScreenPtr( );
 if( vr$2 != (void*)0ull ) goto label$2021;
 {
  fb_GfxScreenRes( (int32)*(int64*)THIS$1, (int32)*(int64*)((uint8*)THIS$1 + 8ll), 32, 1, 0, 0 );
 }
 label$2021:;
 label$2020:;
 FBSTRING* vr$8 = fb_LongintToStr( *(int64*)((uint8*)THIS$1 + 8ll) );
 __builtin_memset( &TMP$1673$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1673$1, (void*)"render ", 8ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1674$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1674$1, (void*)vr$11, -1ll, (void*)" lines. [ESC]=cancel", 21ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$14 );
 double vr$15 = fb_Timer( );
 T1$1 = vr$15;
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1675$2;
  TMP$1675$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$2022;
  label$2025:;
  {
   fb_GfxLock( );
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1676$4;
    TMP$1676$4 = *(int64*)THIS$1 + -1ll;
    goto label$2026;
    label$2029:;
    {
     uint32 vr$20 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$4, Y$2 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$20, 4, 0 );
    }
    label$2027:;
    X$4 = X$4 + 1ll;
    label$2026:;
    if( X$4 <= TMP$1676$4 ) goto label$2029;
    label$2028:;
   }
   fb_GfxUnlock( (int32)Y$2, (int32)(Y$2 + 1ll) );
  }
  label$2023:;
  Y$2 = Y$2 + 1ll;
  label$2022:;
  if( Y$2 <= TMP$1675$2 ) goto label$2025;
  label$2024:;
 }
 if( ANTIALIAS$1 == 0ll ) goto label$2031;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$2033;
  {
   FBSTRING* vr$28 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$28 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$2032;
  label$2033:;
  if( ANTIALIAS$1 != 2ll ) goto label$2034;
  {
   FBSTRING* vr$29 = fb_StrAllocTempDescZEx( (uint8*)"anitialias", 10ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$29 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$2034:;
  label$2032:;
 }
 label$2031:;
 label$2030:;
 double vr$30 = fb_Timer( );
 T1$1 = vr$30 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) < 0x1.C2p+11 ) goto label$2036;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$43 = fb_LongintToStr( _H$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$43, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2036:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.Ep+5 ) goto label$2038;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$53 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$53, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2038:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$2040;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$61 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$61, -1ll, 0 );
  label$2040:;
 }
 __builtin_memset( &TMP$1681$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1681$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$66 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$2019:;
}

void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1, int64 W$1, int64 H$1 )
{
 label$2041:;
 if( ((int64)-(W$1 == 0ll) & (int64)-(H$1 == 0ll)) == 0ll ) goto label$2044;
 {
  goto label$2042;
  label$2044:;
 }
 uint32 vr$3 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$1, Y$1 );
 fb_GfxLine( (void*)0ull, (float)X$1, (float)Y$1, (float)W$1, (float)H$1, vr$3, 2, 65535u, 1 );
 goto label$2042;
 int64 XD$1;
 XD$1 = (int64)((uint64)W$1 + ((uint64)W$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 int64 YD$1;
 YD$1 = (int64)((uint64)H$1 + ((uint64)H$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1, XD$1, YD$1 );
 label$2042:;
}

void _ZN9RAYTRACER7RENDER2E6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 int64 TMP$1686$1;
 FBSTRING TMP$1693$1;
 label$2045:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 != (void*)0ull ) goto label$2048;
 {
  fb_GfxScreenRes( (int32)*(int64*)THIS$1, (int32)*(int64*)((uint8*)THIS$1 + 8ll), 32, 1, 0, 0 );
 }
 label$2048:;
 label$2047:;
 double T1$1;
 double vr$5 = fb_Timer( );
 T1$1 = vr$5;
 FBSTRING* vr$6 = fb_StrAllocTempDescZEx( (uint8*)"render2 1080 lines. [ESC]=cancel", 32ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$6 );
 int64 S$1;
 S$1 = 256ll;
 int64 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 8ll );
 label$2049:;
 if( S$1 <= 0ll ) goto label$2051;
 TMP$1686$1 = (int64)-(FLAG$1 == 0ll);
 goto label$2075;
 label$2051:;
 TMP$1686$1 = 0ll;
 label$2075:;
 if( TMP$1686$1 == 0ll ) goto label$2050;
 {
  {
   int64 Y$3;
   Y$3 = 0ll;
   int64 TMP$1687$3;
   TMP$1687$3 = S$1;
   int64 TMP$1688$3;
   TMP$1688$3 = (int64)-(TMP$1687$3 >= 0ll);
   goto label$2052;
   label$2055:;
   {
    fb_GfxLock( );
    fb_GfxLine( (void*)0ull, 0x0p+0f, (float)Y$3, 0x1.DFCp+10f, (float)(S$1 + -1ll), 4294909984u, 2, 65535u, 1 );
    fb_GfxUnlock( (int32)Y$3, (int32)(Y$3 + S$1) );
    {
     int64 X$5;
     X$5 = 0ll;
     int64 TMP$1689$5;
     TMP$1689$5 = S$1;
     int64 TMP$1690$5;
     TMP$1690$5 = (int64)-(TMP$1689$5 >= 0ll);
     goto label$2056;
     label$2059:;
     {
      _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$5, Y$3, S$1, S$1 );
     }
     label$2057:;
     X$5 = X$5 + TMP$1689$5;
     label$2056:;
     if( TMP$1690$5 != 0ll ) goto label$2060;
     if( X$5 >= 1919ll ) goto label$2059;
     goto label$2058;
     label$2060:;
     if( X$5 <= 1919ll ) goto label$2059;
     label$2058:;
    }
    FBSTRING* vr$18 = fb_Inkey( );
    int32 vr$19 = fb_StrCompare( (void*)vr$18, -1ll, (void*)"\x1B", 2ll );
    if( (int64)vr$19 != 0ll ) goto label$2062;
    {
     FLAG$1 = -1ll;
     goto label$2054;
    }
    label$2062:;
    label$2061:;
   }
   label$2053:;
   Y$3 = Y$3 + TMP$1687$3;
   label$2052:;
   if( TMP$1688$3 != 0ll ) goto label$2063;
   if( Y$3 >= 1079ll ) goto label$2055;
   goto label$2054;
   label$2063:;
   if( Y$3 <= 1079ll ) goto label$2055;
   label$2054:;
  }
  S$1 = S$1 >> (1ll & 63ll);
 }
 goto label$2049;
 label$2050:;
 if( ANTIALIAS$1 == 0ll ) goto label$2065;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$2067;
  {
   FBSTRING* vr$23 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$23 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$2066;
  label$2067:;
  if( ANTIALIAS$1 != 2ll ) goto label$2068;
  {
   FBSTRING* vr$24 = fb_StrAllocTempDescZEx( (uint8*)"antialias", 9ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$24 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$2068:;
  label$2066:;
 }
 label$2065:;
 label$2064:;
 double vr$25 = fb_Timer( );
 T1$1 = vr$25 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) <= 0x1.C1Ep+11 ) goto label$2070;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$38 = fb_LongintToStr( _H$1 );
  fb_StrAssign( (void*)&T$1, -1ll, (void*)vr$38, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2070:;
 }
 if( __builtin_floor( T1$1 ) <= 0x1.D8p+5 ) goto label$2072;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$48 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$48, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2072:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$2074;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$56 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$56, -1ll, 0 );
  label$2074:;
 }
 __builtin_memset( &TMP$1693$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$1693$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$61 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$2046:;
}

void _ZN5C64_TC1Ev( struct $5C64_T* THIS$1 )
{
 uint64 TMP$1752$1;
 int64 TMP$1753$1;
 int64 TMP$1754$1;
 struct $12SYSTEM_BUS_T* TMP$1756$1;
 struct $7CPU6510* TMP$1758$1;
 label$2094:;
 __builtin_memset( (struct $12SYSTEM_BUS_T**)THIS$1, 0, 8ll );
 __builtin_memset( (struct $7CPU6510**)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(uint8*)NIBBLES$ = (uint8)0u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) = (uint8)1u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 257ll) = (uint8)5u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) = (uint8)8u;
 label$2096:;
 *(uint8*)((uint8*)NIBBLES$ + (int64)I$) = (uint8)I$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 fb_Locate( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), -1, 0, 0 );
 FBSTRING* vr$10 = fb_StrAllocTempDescZEx( (uint8*)"NIBBLES: ", 9ll );
 fb_PrintString( 0, (FBSTRING*)vr$10, 0 );
 if( I$ >= (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2097;
 TMP$1752$1 = I$;
 goto label$2106;
 label$2097:;
 TMP$1752$1 = I$ - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2106:;
 fb_PrintULongint( 0, TMP$1752$1, 1 );
 if( I$ > (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2099;
 goto label$2096;
 label$2099:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2100:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 fb_GfxScreenRes( (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) & 63ll)), (int32)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), (int32)*(uint8*)NIBBLES$, 64, 0 );
 fb_Cls( -65536 );
 FBSTRING* vr$41 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1754$1 = 0ll;
 TMP$1753$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&SCR_W$, (int64*)&SCR_H$, (int64*)&IMGDATA$, (int64*)&PITCH$, &TMP$1753$1, &TMP$1754$1, vr$41 );
 void* vr$51 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 BGIMAGE$ = vr$51;
 void* vr$59 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 FGIMAGE$ = vr$59;
 void* vr$67 = fb_GfxImageCreate( (int32)SCR_W$, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RASTER$ = vr$67;
 void* vr$75 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RENDER$ = vr$75;
 I$1 = (uint64)*(uint8*)NIBBLES$;
 label$2101:;
 fb_DataReadLongint( (int64*)&C$1 );
 typedef void (*_ZN5C64_T8tmp$1755Eiiii)( int32, int32, int32, int32 );
 ((_ZN5C64_T8tmp$1755Eiiii)&fb_GfxPalette)( (int32)(uint64)I$1, (int32)(uint64)C$1, (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 I$1 = (uint64)I$1 + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( (uint64)I$1 >= (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$2103;
 goto label$2101;
 label$2103:;
 void* vr$89 = malloc( 16869320ull );
 TMP$1756$1 = (struct $12SYSTEM_BUS_T*)vr$89;
 if( TMP$1756$1 == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2104;
 _ZN12SYSTEM_BUS_TC1Ev( TMP$1756$1 );
 label$2104:;
 *(struct $12SYSTEM_BUS_T**)THIS$1 = TMP$1756$1;
 void* vr$91 = malloc( 16776ull );
 TMP$1758$1 = (struct $7CPU6510*)vr$91;
 if( TMP$1758$1 == (struct $7CPU6510*)0ull ) goto label$2105;
 _ZN7CPU6510C1EP12SYSTEM_BUS_T( TMP$1758$1, *(struct $12SYSTEM_BUS_T**)THIS$1 );
 label$2105:;
 *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) = TMP$1758$1;
 label$2095:;
}

void _ZN5C64_TD1Ev( struct $5C64_T* THIS$1 )
{
 label$2107:;
 if( *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) == (struct $7CPU6510*)0ull ) goto label$2109;
 _ZN7CPU6510D1Ev( *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) );
 free( *(void**)((uint8*)THIS$1 + 8ll) );
 label$2109:;
 if( *(struct $12SYSTEM_BUS_T**)THIS$1 == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2110;
 _ZN12SYSTEM_BUS_TD1Ev( *(struct $12SYSTEM_BUS_T**)THIS$1 );
 free( *(void**)THIS$1 );
 label$2110:;
 fb_GfxImageDestroy( (void*)BGIMAGE$ );
 fb_GfxImageDestroy( (void*)FGIMAGE$ );
 fb_GfxImageDestroy( (void*)RASTER$ );
 fb_GfxImageDestroy( (void*)RENDER$ );
 fb_Sleep( 1 );
 label$2108:;
}

void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$1761$1;
 FBSTRING TMP$1762$1;
 FBSTRING TMP$1763$1;
 FBSTRING TMP$1764$1;
 FBSTRING TMP$1765$1;
 FBSTRING TMP$1766$1;
 FBSTRING TMP$1767$1;
 FBSTRING TMP$1768$1;
 FBSTRING TMP$1769$1;
 FBSTRING TMP$1770$1;
 FBSTRING TMP$1771$1;
 FBSTRING TMP$1772$1;
 FBSTRING TMP$1773$1;
 FBSTRING TMP$1774$1;
 FBSTRING TMP$1775$1;
 FBSTRING TMP$1776$1;
 FBSTRING TMP$1777$1;
 FBSTRING TMP$1778$1;
 FBSTRING TMP$1779$1;
 FBSTRING TMP$1780$1;
 FBSTRING TMP$1781$1;
 FBSTRING TMP$1782$1;
 FBSTRING TMP$1783$1;
 FBSTRING TMP$1784$1;
 FBSTRING TMP$1785$1;
 FBSTRING TMP$1786$1;
 FBSTRING TMP$1787$1;
 FBSTRING TMP$1788$1;
 FBSTRING TMP$1789$1;
 FBSTRING TMP$1790$1;
 FBSTRING TMP$1791$1;
 FBSTRING TMP$1792$1;
 FBSTRING TMP$1793$1;
 FBSTRING TMP$1794$1;
 FBSTRING TMP$1795$1;
 label$2111:;
 __builtin_memset( (double*)THIS$1, 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 131072ll), 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 262144ll), 0, 16588808ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16850952ll), 0, 8192ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16859144ll), 0, 2880ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16862024ll), 0, 2880ll );
 _ZN9RAYTRACERC1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16865224ll), 0, 2048ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16867272ll), 0, 2048ll );
 SYS_OFFSET$ = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
 fb_DataRestore( (void*)label$2114 );
 label$2115:;
 fb_DataReadLongint( (int64*)&C$ );
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(uint64)C$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2117;
 goto label$2115;
 label$2117:;
 I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
 label$2118:;
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2120;
 goto label$2118;
 label$2120:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2121:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16859144ll) = __builtin_sin( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16862024ll) = __builtin_cos( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$2123;
 goto label$2121;
 label$2123:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8264p+15, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 I$ = (uint64)*(uint8*)NIBBLES$;
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 FBSTRING* vr$241 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$247 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 FBSTRING* vr$253 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$259 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$265 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$269 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$281 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$287 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$291 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$297 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$303 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$309 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$315 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$321 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$327 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$333 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$339 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) );
 FBSTRING* vr$343 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$349 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$355 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$361 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 __builtin_memset( &TMP$1761$1, 0, 24ll );
 FBSTRING* vr$364 = fb_StrConcat( &TMP$1761$1, (void*)vr$361, -1ll, (void*)vr$355, -1ll );
 __builtin_memset( &TMP$1762$1, 0, 24ll );
 FBSTRING* vr$367 = fb_StrConcat( &TMP$1762$1, (void*)vr$364, -1ll, (void*)vr$349, -1ll );
 __builtin_memset( &TMP$1763$1, 0, 24ll );
 FBSTRING* vr$370 = fb_StrConcat( &TMP$1763$1, (void*)vr$367, -1ll, (void*)vr$343, -1ll );
 __builtin_memset( &TMP$1764$1, 0, 24ll );
 FBSTRING* vr$373 = fb_StrConcat( &TMP$1764$1, (void*)vr$370, -1ll, (void*)vr$339, -1ll );
 __builtin_memset( &TMP$1765$1, 0, 24ll );
 FBSTRING* vr$376 = fb_StrConcat( &TMP$1765$1, (void*)vr$373, -1ll, (void*)vr$333, -1ll );
 __builtin_memset( &TMP$1766$1, 0, 24ll );
 FBSTRING* vr$379 = fb_StrConcat( &TMP$1766$1, (void*)vr$376, -1ll, (void*)vr$327, -1ll );
 __builtin_memset( &TMP$1767$1, 0, 24ll );
 FBSTRING* vr$382 = fb_StrConcat( &TMP$1767$1, (void*)vr$379, -1ll, (void*)vr$321, -1ll );
 __builtin_memset( &TMP$1768$1, 0, 24ll );
 FBSTRING* vr$385 = fb_StrConcat( &TMP$1768$1, (void*)vr$382, -1ll, (void*)vr$315, -1ll );
 __builtin_memset( &TMP$1769$1, 0, 24ll );
 FBSTRING* vr$388 = fb_StrConcat( &TMP$1769$1, (void*)vr$385, -1ll, (void*)vr$309, -1ll );
 __builtin_memset( &TMP$1770$1, 0, 24ll );
 FBSTRING* vr$391 = fb_StrConcat( &TMP$1770$1, (void*)vr$388, -1ll, (void*)vr$303, -1ll );
 __builtin_memset( &TMP$1771$1, 0, 24ll );
 FBSTRING* vr$394 = fb_StrConcat( &TMP$1771$1, (void*)vr$391, -1ll, (void*)vr$297, -1ll );
 __builtin_memset( &TMP$1772$1, 0, 24ll );
 FBSTRING* vr$397 = fb_StrConcat( &TMP$1772$1, (void*)vr$394, -1ll, (void*)vr$291, -1ll );
 __builtin_memset( &TMP$1773$1, 0, 24ll );
 FBSTRING* vr$400 = fb_StrConcat( &TMP$1773$1, (void*)vr$397, -1ll, (void*)vr$287, -1ll );
 __builtin_memset( &TMP$1774$1, 0, 24ll );
 FBSTRING* vr$403 = fb_StrConcat( &TMP$1774$1, (void*)vr$400, -1ll, (void*)vr$281, -1ll );
 __builtin_memset( &TMP$1775$1, 0, 24ll );
 FBSTRING* vr$406 = fb_StrConcat( &TMP$1775$1, (void*)vr$403, -1ll, (void*)vr$275, -1ll );
 __builtin_memset( &TMP$1776$1, 0, 24ll );
 FBSTRING* vr$409 = fb_StrConcat( &TMP$1776$1, (void*)vr$406, -1ll, (void*)vr$269, -1ll );
 __builtin_memset( &TMP$1777$1, 0, 24ll );
 FBSTRING* vr$412 = fb_StrConcat( &TMP$1777$1, (void*)vr$409, -1ll, (void*)vr$265, -1ll );
 __builtin_memset( &TMP$1778$1, 0, 24ll );
 FBSTRING* vr$415 = fb_StrConcat( &TMP$1778$1, (void*)vr$412, -1ll, (void*)vr$259, -1ll );
 __builtin_memset( &TMP$1779$1, 0, 24ll );
 FBSTRING* vr$418 = fb_StrConcat( &TMP$1779$1, (void*)vr$415, -1ll, (void*)vr$253, -1ll );
 __builtin_memset( &TMP$1780$1, 0, 24ll );
 FBSTRING* vr$421 = fb_StrConcat( &TMP$1780$1, (void*)vr$418, -1ll, (void*)vr$247, -1ll );
 __builtin_memset( &TMP$1781$1, 0, 24ll );
 FBSTRING* vr$424 = fb_StrConcat( &TMP$1781$1, (void*)vr$421, -1ll, (void*)vr$241, -1ll );
 fb_FileOpen( (FBSTRING*)vr$424, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 label$2124:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 131072ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2126;
 goto label$2124;
 label$2126:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2127:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2129;
 goto label$2127;
 label$2129:;
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$471 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$477 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 FBSTRING* vr$483 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$489 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$495 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$501 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$507 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$513 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$519 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 FBSTRING* vr$525 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$531 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$537 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$543 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$549 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 __builtin_memset( &TMP$1782$1, 0, 24ll );
 FBSTRING* vr$558 = fb_StrConcat( &TMP$1782$1, (void*)vr$555, -1ll, (void*)vr$549, -1ll );
 __builtin_memset( &TMP$1783$1, 0, 24ll );
 FBSTRING* vr$561 = fb_StrConcat( &TMP$1783$1, (void*)vr$558, -1ll, (void*)vr$543, -1ll );
 __builtin_memset( &TMP$1784$1, 0, 24ll );
 FBSTRING* vr$564 = fb_StrConcat( &TMP$1784$1, (void*)vr$561, -1ll, (void*)vr$537, -1ll );
 __builtin_memset( &TMP$1785$1, 0, 24ll );
 FBSTRING* vr$567 = fb_StrConcat( &TMP$1785$1, (void*)vr$564, -1ll, (void*)vr$531, -1ll );
 __builtin_memset( &TMP$1786$1, 0, 24ll );
 FBSTRING* vr$570 = fb_StrConcat( &TMP$1786$1, (void*)vr$567, -1ll, (void*)vr$525, -1ll );
 __builtin_memset( &TMP$1787$1, 0, 24ll );
 FBSTRING* vr$573 = fb_StrConcat( &TMP$1787$1, (void*)vr$570, -1ll, (void*)vr$519, -1ll );
 __builtin_memset( &TMP$1788$1, 0, 24ll );
 FBSTRING* vr$576 = fb_StrConcat( &TMP$1788$1, (void*)vr$573, -1ll, (void*)vr$513, -1ll );
 __builtin_memset( &TMP$1789$1, 0, 24ll );
 FBSTRING* vr$579 = fb_StrConcat( &TMP$1789$1, (void*)vr$576, -1ll, (void*)vr$507, -1ll );
 __builtin_memset( &TMP$1790$1, 0, 24ll );
 FBSTRING* vr$582 = fb_StrConcat( &TMP$1790$1, (void*)vr$579, -1ll, (void*)vr$501, -1ll );
 __builtin_memset( &TMP$1791$1, 0, 24ll );
 FBSTRING* vr$585 = fb_StrConcat( &TMP$1791$1, (void*)vr$582, -1ll, (void*)vr$495, -1ll );
 __builtin_memset( &TMP$1792$1, 0, 24ll );
 FBSTRING* vr$588 = fb_StrConcat( &TMP$1792$1, (void*)vr$585, -1ll, (void*)vr$489, -1ll );
 __builtin_memset( &TMP$1793$1, 0, 24ll );
 FBSTRING* vr$591 = fb_StrConcat( &TMP$1793$1, (void*)vr$588, -1ll, (void*)vr$483, -1ll );
 __builtin_memset( &TMP$1794$1, 0, 24ll );
 FBSTRING* vr$594 = fb_StrConcat( &TMP$1794$1, (void*)vr$591, -1ll, (void*)vr$477, -1ll );
 __builtin_memset( &TMP$1795$1, 0, 24ll );
 FBSTRING* vr$597 = fb_StrConcat( &TMP$1795$1, (void*)vr$594, -1ll, (void*)vr$471, -1ll );
 fb_FileOpen( (FBSTRING*)vr$597, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2130:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2132;
 goto label$2130;
 label$2132:;
 {
  uint64 TIMES$2;
  TIMES$2 = 0ull;
  label$2136:;
  {
   fb_FileSeek( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)NIBBLES$ );
   I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
   label$2137:;
   fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
   *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
   I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2139;
   goto label$2137;
   label$2139:;
  }
  label$2134:;
  TIMES$2 = TIMES$2 + 1ull;
  label$2133:;
  if( TIMES$2 <= 506ull ) goto label$2136;
  label$2135:;
 }
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)NIBBLES$, __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)), __builtin_inf() );
 FBSTRING* vr$674 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 fb_GfxPaint( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (uint32)(((((int64)(uint32)*(uint8*)NIBBLES$ << (16ll & 63ll)) | ((int64)(uint32)*(uint8*)NIBBLES$ << (8ll & 63ll))) | (int64)(uint32)*(uint8*)NIBBLES$) | ((int64)(uint32)(uint8)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (24ll & 63ll))), 0u, (FBSTRING*)vr$674, 0, 1073741828 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 FBSTRING MEM$1;
 FBSTRING* vr$805 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MEM$1, -1ll, (void*)vr$805, -1ll, 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 FBSTRING* vr$813 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$813, -1ll, 0 );
 FBSTRING* vr$820 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$820, -1ll, 0 );
 FBSTRING* vr$827 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$827, -1ll, 0 );
 FBSTRING* vr$834 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$834, -1ll, 0 );
 FBSTRING* vr$841 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$841, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2140:;
 FBSTRING* vr$850 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 uint32 vr$851 = fb_ASC( (FBSTRING*)vr$850, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) = (double)vr$851;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2142;
 goto label$2143;
 label$2142:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$905 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$905 ) goto label$2145;
 goto label$2140;
 label$2145:;
 goto label$2146;
 label$2143:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2140;
 label$2146:;
 FBSTRING* vr$937 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$937, -1ll, 0 );
 FBSTRING* vr$944 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$944, -1ll, 0 );
 FBSTRING* vr$951 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$951, -1ll, 0 );
 FBSTRING* vr$958 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$958, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2147:;
 FBSTRING* vr$963 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$964 = fb_ASC( (FBSTRING*)vr$963, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = (double)vr$964;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2149;
 goto label$2150;
 label$2149:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1018 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1018 ) goto label$2152;
 goto label$2147;
 label$2152:;
 goto label$2153;
 label$2150:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2147;
 label$2153:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1101 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1101, -1ll, 0 );
 FBSTRING* vr$1108 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1108, -1ll, 0 );
 FBSTRING* vr$1115 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1115, -1ll, 0 );
 FBSTRING* vr$1122 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1122, -1ll, 0 );
 FBSTRING* vr$1129 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1129, -1ll, 0 );
 FBSTRING* vr$1136 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1136, -1ll, 0 );
 FBSTRING* vr$1143 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1143, -1ll, 0 );
 FBSTRING* vr$1150 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1150, -1ll, 0 );
 FBSTRING* vr$1157 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1157, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2154:;
 FBSTRING* vr$1162 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1163 = fb_ASC( (FBSTRING*)vr$1162, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = (double)vr$1163;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2156;
 goto label$2157;
 label$2156:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1217 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1217 ) goto label$2159;
 goto label$2154;
 label$2159:;
 goto label$2160;
 label$2157:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2154;
 label$2160:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1268 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1268, -1ll, 0 );
 FBSTRING* vr$1275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1275, -1ll, 0 );
 FBSTRING* vr$1282 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1282, -1ll, 0 );
 FBSTRING* vr$1289 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1289, -1ll, 0 );
 FBSTRING* vr$1296 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1296, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2161:;
 FBSTRING* vr$1301 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1302 = fb_ASC( (FBSTRING*)vr$1301, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = (double)vr$1302;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2163;
 goto label$2164;
 label$2163:;
 FBSTRING* vr$1349 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1350 = fb_ASC( (FBSTRING*)vr$1349, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = (double)vr$1350;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) < (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll))) == 0ll ) goto label$2166;
 goto label$2167;
 label$2166:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1402 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1402 ) goto label$2169;
 goto label$2161;
 label$2169:;
 goto label$2170;
 label$2164:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2161;
 label$2167:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2161;
 label$2170:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 FBSTRING* vr$1541 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1541, -1ll, 0 );
 FBSTRING* vr$1548 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1548, -1ll, 0 );
 FBSTRING* vr$1555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1555, -1ll, 0 );
 FBSTRING* vr$1562 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1562, -1ll, 0 );
 FBSTRING* vr$1567 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1567, -1ll, 0 );
 FBSTRING* vr$1574 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1574, -1ll, 0 );
 FBSTRING* vr$1581 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1581, -1ll, 0 );
 FBSTRING* vr$1588 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1588, -1ll, 0 );
 FBSTRING* vr$1595 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1595, -1ll, 0 );
 FBSTRING* vr$1602 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1602, -1ll, 0 );
 FBSTRING* vr$1609 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1609, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2171:;
 FBSTRING* vr$1614 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1615 = fb_ASC( (FBSTRING*)vr$1614, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1615;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2173;
 goto label$2174;
 label$2173:;
 label$2174:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1665 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1665 ) goto label$2176;
 goto label$2171;
 label$2176:;
 goto label$2177;
 label$2178:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2174;
 label$2177:;
 uint64 vr$1699 = fb_GetMemAvail( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((int64)*(uint8*)NIBBLES$ << (3ll & 63ll))) )) );
 double vr$1706 = pow( (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)), (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$1709 = fb_ULongintToStr( vr$1699 / ((uint64)__builtin_nearbyint( vr$1706 )) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1709, -1ll, 0 );
 int64 vr$1712 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1712 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2180;
 goto label$2181;
 label$2180:;
 int64 vr$1715 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1715 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$2183;
 goto label$2184;
 label$2183:;
 label$2181:;
 uint32 vr$1718 = fb_ASC( (FBSTRING*)&MEM$1, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1718;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 goto label$2185;
 label$2184:;
 FBSTRING* vr$1768 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1769 = fb_ASC( (FBSTRING*)vr$1768, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1769;
 FBSTRING* vr$1785 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1786 = fb_ASC( (FBSTRING*)vr$1785, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)vr$1786;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 FBSTRING* vr$1836 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1836, -1ll, 0 );
 FBSTRING* vr$1843 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1843, -1ll, 0 );
 FBSTRING* vr$1850 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1850, -1ll, 0 );
 FBSTRING* vr$1857 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1857, -1ll, 0 );
 FBSTRING* vr$1862 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1862, -1ll, 0 );
 FBSTRING* vr$1869 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1869, -1ll, 0 );
 FBSTRING* vr$1876 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1876, -1ll, 0 );
 FBSTRING* vr$1883 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1883, -1ll, 0 );
 FBSTRING* vr$1890 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1890, -1ll, 0 );
 FBSTRING* vr$1897 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1897, -1ll, 0 );
 FBSTRING* vr$1904 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1904, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2186:;
 FBSTRING* vr$1909 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1910 = fb_ASC( (FBSTRING*)vr$1909, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1910;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1927 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1927 ) goto label$2188;
 goto label$2186;
 label$2188:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 goto label$2185;
 label$2185:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MEM$1 );
 label$2112:;
}

void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2189:;
 label$2190:;
 _ZN9RAYTRACERD1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
}

double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1796$1;
 struct $7VECTOR2 TMP$1797$1;
 struct $7VECTOR2 TMP$1798$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2191:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1796$1, P$1, P$1 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1797$1, vr$2, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1798$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _Z3POWdd( *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.5555555555555p-3 );
 fb$result$1 = vr$10;
 goto label$2192;
 label$2192:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1799$1;
 struct $7VECTOR2 TMP$1800$1;
 struct $7VECTOR2 TMP$1801$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2193:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1799$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$2 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1800$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1801$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _Z3POWdd( *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.p-3 );
 fb$result$1 = vr$10;
 goto label$2194;
 label$2194:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2195:;
 fb$result$1 = *(double*)((uint8*)P$1 + 8ll);
 goto label$2196;
 label$2196:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* N$1, double H$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2197:;
 double vr$1 = _Z3DOTR7VECTOR3S0_( P$1, N$1 );
 fb$result$1 = vr$1 + H$1;
 goto label$2198;
 label$2198:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2199:;
 double vr$1 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$1 - S$1;
 goto label$2200;
 label$2200:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1 )
{
 struct $7VECTOR3 TMP$1802$1;
 struct $7VECTOR3 TMP$1803$1;
 struct $7VECTOR3 TMP$1804$1;
 double TMP$1805$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2201:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1802$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1803$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1805$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _Z3MAXR7VECTOR3Rd( &TMP$1804$1, &Q$1, &TMP$1805$1 );
 double vr$10 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$9 );
 double vr$11 = _Z3MAXdd( *(double*)((uint8*)&Q$1 + 8ll), *(double*)((uint8*)&Q$1 + 16ll) );
 double vr$12 = _Z3MAXdd( *(double*)&Q$1, vr$11 );
 double vr$13 = _Z3MINdd( vr$12, 0x0p+0 );
 fb$result$1 = vr$10 + vr$13;
 goto label$2202;
 label$2202:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* R$1 )
{
 struct $7VECTOR3 TMP$1806$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2203:;
 struct $7VECTOR3* vr$2 = _ZdvR7VECTOR3S0_( &TMP$1806$1, P$1, R$1 );
 double vr$3 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$2 );
 double vr$8 = _Z3MINdd( *(double*)R$1, *(double*)((uint8*)R$1 + 8ll) );
 double vr$9 = _Z3MINdd( vr$8, *(double*)((uint8*)R$1 + 16ll) );
 fb$result$1 = (vr$3 + -0x1.p+0) * vr$9;
 goto label$2204;
 label$2204:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1807$1;
 struct $7VECTOR3 TMP$1808$1;
 struct $7VECTOR3 TMP$1809$1;
 double TMP$1810$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2205:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1807$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1808$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1810$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _Z3MAXR7VECTOR3Rd( &TMP$1809$1, &Q$1, &TMP$1810$1 );
 double vr$10 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$9 );
 double vr$11 = _Z3MAXdd( *(double*)((uint8*)&Q$1 + 8ll), *(double*)((uint8*)&Q$1 + 16ll) );
 double vr$12 = _Z3MAXdd( *(double*)&Q$1, vr$11 );
 double vr$13 = _Z3MINdd( vr$12, 0x0p+0 );
 fb$result$1 = (vr$10 + vr$13) - R$1;
 goto label$2206;
 label$2206:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1811$1;
 struct $7VECTOR3 TMP$1812$1;
 struct $7VECTOR3 TMP$1813$1;
 double TMP$1814$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2207:;
 TMP$1814$1 = 0x0p+0;
 struct $7VECTOR3* vr$3 = _Zv13absRK7VECTOR3( &TMP$1811$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1812$1, vr$3, B$1 );
 struct $7VECTOR3* vr$7 = _Z3MAXR7VECTOR3Rd( &TMP$1813$1, vr$5, &TMP$1814$1 );
 double vr$8 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$7 );
 fb$result$1 = vr$8 - R$1;
 goto label$2208;
 label$2208:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1816$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2209:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1816$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)&Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2210;
 label$2210:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCAPPEDTORUSER7VECTOR3R7VECTOR2dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* SC$1, double RA$1, double RB$1 )
{
 struct $7VECTOR2 TMP$1817$1;
 struct $7VECTOR2 TMP$1818$1;
 double TMP$1819$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2211:;
 *(double*)P$1 = __builtin_fabs( *(double*)P$1 );
 double K$1;
 if( (*(double*)((uint8*)SC$1 + 8ll) * *(double*)P$1) <= (*(double*)SC$1 * *(double*)((uint8*)P$1 + 8ll)) ) goto label$2213;
 struct $7VECTOR2* vr$11 = _ZN7VECTOR32XYEv( &TMP$1817$1, P$1 );
 double vr$12 = _Z3DOTR7VECTOR2S0_( vr$11, SC$1 );
 TMP$1819$1 = vr$12;
 goto label$2214;
 label$2213:;
 struct $7VECTOR2* vr$14 = _ZN7VECTOR32XYEv( &TMP$1818$1, P$1 );
 double vr$15 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$14 );
 TMP$1819$1 = vr$15;
 label$2214:;
 K$1 = TMP$1819$1;
 double vr$16 = _Z3DOTR7VECTOR3S0_( P$1, P$1 );
 double vr$22 = _Z4SQRTd( (vr$16 + (RA$1 * RA$1)) - ((RA$1 * K$1) * 0x1.p+1) );
 fb$result$1 = vr$22 - RB$1;
 goto label$2212;
 label$2212:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1821$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2215:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1821$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2216;
 label$2216:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1823$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2217:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1823$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2218;
 label$2218:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDLINKER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double LE$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1825$1;
 struct $7VECTOR2 TMP$1826$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2219:;
 struct $7VECTOR3 Q$1;
 double vr$5 = _Z3MAXdd( __builtin_fabs( *(double*)((uint8*)P$1 + 8ll) ) - LE$1, 0x0p+0 );
 _ZN7VECTOR3C1Eddd( &Q$1, *(double*)P$1, vr$5, *(double*)((uint8*)P$1 + 16ll) );
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1826$1, &Q$1 );
 double vr$11 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$10 );
 _ZN7VECTOR2C1Edd( &TMP$1825$1, vr$11 - R1$1, *(double*)((uint8*)&Q$1 + 16ll) );
 double vr$15 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)&TMP$1825$1 );
 fb$result$1 = vr$15 - R2$1;
 goto label$2220;
 label$2220:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1827$1;
 struct $7VECTOR2 TMP$1828$1;
 struct $7VECTOR2 TMP$1829$1;
 double TMP$1830$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2221:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1827$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 16ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$9 = _Z3MAXdd( (*(double*)&Q$1 * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)&Q$1 + 8ll) * 0x1.p-1), *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$9 - *(double*)H$1;
 TMP$1830$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1828$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$16 = _Z3MAXR7VECTOR2Rd( &TMP$1829$1, &TMP$1828$1, &TMP$1830$1 );
 double vr$17 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$16 );
 double vr$18 = _Z3MAXdd( D1$1, D2$1 );
 double vr$19 = _Z3MINdd( vr$18, 0x0p+0 );
 fb$result$1 = vr$17 + vr$19;
 goto label$2222;
 label$2222:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1831$1;
 struct $7VECTOR3 TMP$1832$1;
 struct $7VECTOR3 TMP$1833$1;
 struct $7VECTOR3 TMP$1834$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2223:;
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1831$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$2 );
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1832$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$5 );
 double H$1;
 double vr$9 = _Z3DOTR7VECTOR3S0_( &PA$1, &BA$1 );
 double vr$12 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$14 = _Z5CLAMPddd( vr$9 / vr$12, 0x0p+0, 0x1.p+0 );
 H$1 = vr$14;
 struct $7VECTOR3* vr$17 = _ZmlR7VECTOR3d( &TMP$1833$1, &BA$1, H$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1834$1, &PA$1, vr$17 );
 double vr$21 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$20 );
 fb$result$1 = vr$21 - R$1;
 goto label$2224;
 label$2224:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1835$1;
 struct $7VECTOR2 TMP$1836$1;
 struct $7VECTOR2 TMP$1837$1;
 double TMP$1838$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2225:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1835$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 16ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$12 = _Z3MAXdd( (*(double*)&Q$1 * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 8ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 8ll)) );
 D2$1 = vr$12 - (*(double*)H$1 * 0x1.p-1);
 TMP$1838$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1836$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$20 = _Z3MAXR7VECTOR2Rd( &TMP$1837$1, &TMP$1836$1, &TMP$1838$1 );
 double vr$21 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$20 );
 double vr$22 = _Z3MAXdd( D1$1, D2$1 );
 double vr$23 = _Z3MINdd( vr$22, 0x0p+0 );
 fb$result$1 = vr$21 + vr$23;
 goto label$2226;
 label$2226:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1839$1;
 struct $7VECTOR2 TMP$1840$1;
 struct $7VECTOR2 TMP$1841$1;
 struct $7VECTOR2 TMP$1842$1;
 struct $7VECTOR2 TMP$1843$1;
 double TMP$1844$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2227:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1840$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &TMP$1839$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2* vr$8 = _Zv13absRK7VECTOR2( &TMP$1841$1, (struct $7VECTOR2*)&TMP$1839$1 );
 struct $7VECTOR2* vr$10 = _ZmiR7VECTOR2S0_( &TMP$1842$1, vr$8, H$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$10 );
 double vr$12 = _Z3MAXdd( *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$13 = _Z3MINdd( vr$12, 0x0p+0 );
 TMP$1844$1 = 0x0p+0;
 struct $7VECTOR2* vr$17 = _Z3MAXR7VECTOR2Rd( &TMP$1843$1, &D$1, &TMP$1844$1 );
 double vr$18 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$17 );
 fb$result$1 = vr$13 + vr$18;
 goto label$2228;
 label$2228:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1845$1;
 struct $7VECTOR2 TMP$1846$1;
 struct $7VECTOR2 TMP$1847$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2229:;
 struct $7VECTOR2* vr$2 = _ZN7VECTOR32XYEv( &TMP$1846$1, C$1 );
 struct $7VECTOR2* vr$4 = _ZN7VECTOR32XZEv( &TMP$1845$1, P$1 );
 struct $7VECTOR2* vr$6 = _ZmiR7VECTOR2S0_( &TMP$1847$1, vr$4, vr$2 );
 double vr$7 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$6 );
 fb$result$1 = vr$7 - *(double*)((uint8*)C$1 + 16ll);
 goto label$2230;
 label$2230:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1848$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2231:;
 struct $7VECTOR2* vr$6 = _ZN7VECTOR32XZEv( &TMP$1848$1, P$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( THIS$1, vr$6 );
 double vr$10 = _Z3MAXdd( vr$7 - *(double*)H$1, __builtin_fabs( *(double*)((uint8*)P$1 + 8ll) ) - *(double*)((uint8*)H$1 + 8ll) );
 fb$result$1 = vr$10;
 goto label$2232;
 label$2232:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1850$1;
 struct $7VECTOR2 TMP$1851$1;
 struct $7VECTOR2 TMP$1852$1;
 struct $7VECTOR2 TMP$1853$1;
 double TMP$1854$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2233:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1850$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 double D1$1;
 D1$1 = -(*(double*)((uint8*)&Q$1 + 8ll)) - *(double*)((uint8*)C$1 + 16ll);
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1851$1, C$1 );
 double vr$12 = _Z3DOTR7VECTOR2S0_( &Q$1, vr$10 );
 double vr$13 = _Z3MAXdd( vr$12, *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$13;
 TMP$1854$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1852$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$18 = _Z3MAXR7VECTOR2Rd( &TMP$1853$1, &TMP$1852$1, &TMP$1854$1 );
 double vr$19 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$18 );
 double vr$20 = _Z3MAXdd( D1$1, D2$1 );
 double vr$21 = _Z3MINdd( vr$20, 0x0p+0 );
 fb$result$1 = vr$19 + vr$21;
 goto label$2234;
 label$2234:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double H$1 )
{
 struct $7VECTOR2 TMP$1855$1;
 struct $7VECTOR2 TMP$1856$1;
 struct $7VECTOR2 TMP$1858$1;
 struct $7VECTOR2 TMP$1859$1;
 double TMP$1860$1;
 struct $7VECTOR2 TMP$1861$1;
 struct $7VECTOR2 TMP$1862$1;
 struct $7VECTOR2 TMP$1863$1;
 struct $7VECTOR2 TMP$1864$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2235:;
 struct $7VECTOR2 Q$1;
 _ZN7VECTOR2C1Edd( &TMP$1855$1, *(double*)C$1 / *(double*)((uint8*)C$1 + 8ll), -0x1.p+0 );
 struct $7VECTOR2* vr$8 = _ZmlRdR7VECTOR2( &TMP$1856$1, &H$1, &TMP$1855$1 );
 _ZN7VECTOR2C1ERS_( &Q$1, vr$8 );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1858$1, P$1 );
 double vr$13 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$12 );
 _ZN7VECTOR2C1Edd( &W$1, vr$13, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2 A$1;
 double vr$17 = _Z3DOTR7VECTOR2S0_( &W$1, &Q$1 );
 double vr$20 = _Z3DOTR7VECTOR2S0_( &Q$1, &Q$1 );
 double vr$22 = _Z5CLAMPddd( vr$17 / vr$20, 0x0p+0, 0x1.p+0 );
 TMP$1860$1 = vr$22;
 struct $7VECTOR2* vr$26 = _ZmlR7VECTOR2Rd( &TMP$1859$1, &Q$1, &TMP$1860$1 );
 struct $7VECTOR2* vr$29 = _ZmiR7VECTOR2S0_( &TMP$1861$1, &W$1, vr$26 );
 _ZN7VECTOR2C1ERS_( &A$1, vr$29 );
 struct $7VECTOR2 B$1;
 double vr$32 = _Z5CLAMPddd( *(double*)&W$1 / *(double*)&Q$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR2C1Edd( &TMP$1862$1, vr$32, 0x1.p+0 );
 struct $7VECTOR2* vr$37 = _ZmlR7VECTOR2S0_( &TMP$1863$1, &Q$1, &TMP$1862$1 );
 struct $7VECTOR2* vr$40 = _ZmiR7VECTOR2S0_( &TMP$1864$1, &W$1, vr$37 );
 _ZN7VECTOR2C1ERS_( &B$1, vr$40 );
 double K$1;
 double vr$42 = _Z4SIGNd( *(double*)((uint8*)&Q$1 + 8ll) );
 K$1 = vr$42;
 double D$1;
 double vr$45 = _Z3DOTR7VECTOR2S0_( &B$1, &B$1 );
 double vr$48 = _Z3DOTR7VECTOR2S0_( &A$1, &A$1 );
 double vr$49 = _Z3MINdd( vr$48, vr$45 );
 D$1 = vr$49;
 double S$1;
 double vr$56 = _Z3MAXdd( K$1 * ((*(double*)&W$1 * *(double*)((uint8*)&Q$1 + 8ll)) - (*(double*)((uint8*)&W$1 + 8ll) * *(double*)&Q$1)), K$1 * (*(double*)((uint8*)&W$1 + 8ll) - *(double*)((uint8*)&Q$1 + 8ll)) );
 S$1 = vr$56;
 double vr$57 = _Z4SQRTd( D$1 );
 double vr$58 = _Z4SIGNd( S$1 );
 fb$result$1 = vr$57 * vr$58;
 goto label$2236;
 label$2236:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7_SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1866$1;
 struct $7VECTOR2 TMP$1868$1;
 struct $7VECTOR2 TMP$1871$1;
 double TMP$1872$1;
 struct $7VECTOR2 TMP$1873$1;
 struct $7VECTOR2 TMP$1874$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2237:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1866$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 16ll) * *(double*)((uint8*)C$1 + 8ll)) / *(double*)C$1, -(*(double*)((uint8*)C$1 + 16ll)) );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$1868$1, &V$1, &Q$1 );
 _ZN7VECTOR2C1ERS_( &W$1, vr$17 );
 struct $7VECTOR2 VV$1;
 double vr$22 = _Z3DOTR7VECTOR2S0_( &V$1, &V$1 );
 _ZN7VECTOR2C1Edd( &VV$1, vr$22, *(double*)&V$1 * *(double*)&V$1 );
 struct $7VECTOR2 QV$1;
 double vr$27 = _Z3DOTR7VECTOR2S0_( &V$1, &W$1 );
 _ZN7VECTOR2C1Edd( &QV$1, vr$27, *(double*)&V$1 * *(double*)&W$1 );
 struct $7VECTOR2 D$1;
 TMP$1872$1 = 0x0p+0;
 struct $7VECTOR2* vr$34 = _Z3MAXR7VECTOR2Rd( &TMP$1871$1, &QV$1, &TMP$1872$1 );
 struct $7VECTOR2* vr$36 = _ZmlR7VECTOR2S0_( &TMP$1873$1, vr$34, &QV$1 );
 struct $7VECTOR2* vr$38 = _ZdvR7VECTOR2S0_( &TMP$1874$1, vr$36, &VV$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$38 );
 double vr$42 = _Z3DOTR7VECTOR2S0_( &W$1, &W$1 );
 double vr$43 = _Z3MAXdd( *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$45 = _Z4SQRTd( vr$42 - vr$43 );
 double vr$49 = _Z3MAXdd( (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) - (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)), *(double*)((uint8*)&W$1 + 8ll) );
 double vr$50 = _Z4SIGNd( vr$49 );
 fb$result$1 = vr$45 * vr$50;
 goto label$2238;
 label$2238:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDCONEHQER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1876$1;
 struct $7VECTOR2 TMP$1878$1;
 struct $7VECTOR2 TMP$1881$1;
 struct $7VECTOR2 TMP$1882$1;
 struct $7VECTOR2 TMP$1883$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2239:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1876$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 16ll) * *(double*)((uint8*)C$1 + 8ll)) / *(double*)C$1, -(*(double*)((uint8*)C$1 + 16ll)) );
 double VVB$1;
 double vr$16 = _Z3DOTR7VECTOR2S0_( &V$1, &V$1 );
 VVB$1 = vr$16;
 double QVB$1;
 struct $7VECTOR2* vr$20 = _ZmiR7VECTOR2S0_( &TMP$1878$1, &V$1, &Q$1 );
 double vr$22 = _Z3DOTR7VECTOR2S0_( &V$1, vr$20 );
 QVB$1 = vr$22;
 double VVX$1;
 VVX$1 = *(double*)&V$1 * *(double*)&V$1;
 double QVX$1;
 QVX$1 = *(double*)&V$1 * (*(double*)&V$1 - *(double*)&Q$1);
 double HB$1;
 double vr$26 = _Z5CLAMPddd( QVB$1, 0x0p+0, VVB$1 );
 HB$1 = vr$26;
 double HX$1;
 double vr$27 = _Z5CLAMPddd( QVX$1, 0x0p+0, VVX$1 );
 HX$1 = vr$27;
 struct $7VECTOR2 D1$1;
 _ZN7VECTOR2C1Edd( &D1$1, (HB$1 * (HB$1 - (QVB$1 * 0x1.p+1))) / VVB$1, (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) );
 struct $7VECTOR2 D2$1;
 _ZN7VECTOR2C1Edd( &D2$1, (HX$1 * (HX$1 - (QVX$1 * 0x1.p+1))) / VVX$1, *(double*)((uint8*)&Q$1 + 8ll) - *(double*)((uint8*)&V$1 + 8ll) );
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$45 = _Z3MINR7VECTOR2S0_( &TMP$1881$1, &D1$1, &D2$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$45 );
 struct $7VECTOR2* vr$50 = _ZmiR7VECTOR2S0_( &TMP$1883$1, &V$1, &Q$1 );
 struct $7VECTOR2* vr$54 = _ZmiR7VECTOR2S0_( &TMP$1882$1, &V$1, &Q$1 );
 double vr$55 = _Z3DOTR7VECTOR2S0_( vr$54, vr$50 );
 double vr$57 = _Z4SQRTd( vr$55 + *(double*)&D$1 );
 double vr$59 = _Z4SIGNd( *(double*)((uint8*)&D$1 + 8ll) );
 fb$result$1 = -vr$57 * vr$59;
 goto label$2240;
 label$2240:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1884$1;
 struct $7VECTOR2 TMP$1885$1;
 struct $7VECTOR2 TMP$1886$1;
 struct $7VECTOR2 TMP$1887$1;
 double TMP$1888$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2241:;
 double D1$1;
 D1$1 = -(*(double*)((uint8*)P$1 + 8ll)) - H$1;
 double Q$1;
 Q$1 = *(double*)((uint8*)P$1 + 8ll) - H$1;
 double SI$1;
 SI$1 = ((R1$1 - R2$1) * 0x1.p-1) / H$1;
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XZEv( &TMP$1885$1, P$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1884$1, P$1 );
 double vr$13 = _Z3DOTR7VECTOR2S0_( vr$12, vr$10 );
 double vr$18 = _Z4SQRTd( vr$13 * (-(SI$1 * SI$1) + 0x1.p+0) );
 double vr$22 = _Z3MAXdd( (vr$18 + (Q$1 * SI$1)) - R2$1, Q$1 );
 D2$1 = vr$22;
 TMP$1888$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1886$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$27 = _Z3MAXR7VECTOR2Rd( &TMP$1887$1, &TMP$1886$1, &TMP$1888$1 );
 double vr$28 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$27 );
 double vr$29 = _Z3MAXdd( D1$1, D2$1 );
 double vr$30 = _Z3MINdd( vr$29, 0x0p+0 );
 fb$result$1 = vr$28 + vr$30;
 goto label$2242;
 label$2242:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDWOBBLECUBEER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2243:;
 double vr$15 = _Z3MAXdd( (__builtin_fabs( *(double*)P$1 ) - S$1) + (__builtin_sin( (*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) ) * 0x1.999999999999Ap-5), __builtin_fabs( *(double*)((uint8*)P$1 + 8ll) ) - S$1 );
 double vr$16 = _Z3MAXdd( vr$15, __builtin_fabs( *(double*)((uint8*)P$1 + 16ll) ) - S$1 );
 fb$result$1 = vr$16;
 goto label$2244;
 label$2244:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDTRIANGLEER7VECTOR3S1_S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$1889$1;
 struct $7VECTOR3 TMP$1890$1;
 struct $7VECTOR3 TMP$1891$1;
 struct $7VECTOR3 TMP$1892$1;
 struct $7VECTOR3 TMP$1893$1;
 struct $7VECTOR3 TMP$1894$1;
 struct $7VECTOR3 TMP$1895$1;
 struct $7VECTOR3 TMP$1896$1;
 struct $7VECTOR3 TMP$1897$1;
 struct $7VECTOR3 TMP$1898$1;
 struct $7VECTOR3 TMP$1899$1;
 struct $7VECTOR3 TMP$1900$1;
 struct $7VECTOR3 TMP$1901$1;
 struct $7VECTOR3 TMP$1902$1;
 struct $7VECTOR3 TMP$1903$1;
 struct $7VECTOR3 TMP$1904$1;
 struct $7VECTOR3 TMP$1905$1;
 struct $7VECTOR3 TMP$1906$1;
 struct $7VECTOR3 TMP$1907$1;
 struct $7VECTOR3 TMP$1908$1;
 struct $7VECTOR3 TMP$1909$1;
 struct $7VECTOR3 TMP$1910$1;
 double TMP$1911$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2245:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1889$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1890$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$5 );
 struct $7VECTOR3 AC$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1891$1, A$1, C$1 );
 _ZN7VECTOR3C1ERS_( &AC$1, vr$8 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$1892$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$11 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$1893$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$1894$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$22 = CROSS( &TMP$1895$1, &BA$1, &AC$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$22 );
 struct $7VECTOR3* vr$28 = CROSS( &TMP$1896$1, &BA$1, &NOR$1 );
 double vr$29 = _Z3DOTR7VECTOR3S0_( vr$28, &PA$1 );
 double vr$30 = _Z4SIGNd( vr$29 );
 struct $7VECTOR3* vr$35 = CROSS( &TMP$1897$1, &CB$1, &NOR$1 );
 double vr$36 = _Z3DOTR7VECTOR3S0_( vr$35, &PB$1 );
 double vr$37 = _Z4SIGNd( vr$36 );
 struct $7VECTOR3* vr$43 = CROSS( &TMP$1898$1, &AC$1, &NOR$1 );
 double vr$44 = _Z3DOTR7VECTOR3S0_( vr$43, &PC$1 );
 double vr$45 = _Z4SIGNd( vr$44 );
 if( ((vr$30 + vr$37) + vr$45) >= 0x1.p+1 ) goto label$2247;
 double vr$50 = _Z3DOTR7VECTOR3S0_( &AC$1, &PC$1 );
 double vr$53 = _Z3DOTR7VECTOR3S0_( &AC$1, &AC$1 );
 double vr$55 = _Z5CLAMPddd( vr$50 / vr$53, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$58 = _ZmlR7VECTOR3d( &TMP$1909$1, &AC$1, vr$55 );
 struct $7VECTOR3* vr$60 = _ZmiR7VECTOR3S0_( &TMP$1910$1, vr$58, &PC$1 );
 double vr$64 = _Z3DOTR7VECTOR3S0_( &AC$1, &PC$1 );
 double vr$67 = _Z3DOTR7VECTOR3S0_( &AC$1, &AC$1 );
 double vr$69 = _Z5CLAMPddd( vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$1907$1, &AC$1, vr$69 );
 struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$1908$1, vr$72, &PC$1 );
 double vr$75 = _Z3DOTR7VECTOR3S0_( vr$74, vr$60 );
 double vr$79 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
 double vr$82 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
 double vr$84 = _Z5CLAMPddd( vr$79 / vr$82, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$87 = _ZmlR7VECTOR3d( &TMP$1905$1, &CB$1, vr$84 );
 struct $7VECTOR3* vr$89 = _ZmiR7VECTOR3S0_( &TMP$1906$1, vr$87, &PB$1 );
 double vr$93 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
 double vr$96 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
 double vr$98 = _Z5CLAMPddd( vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$1903$1, &CB$1, vr$98 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$1904$1, vr$101, &PB$1 );
 double vr$104 = _Z3DOTR7VECTOR3S0_( vr$103, vr$89 );
 double vr$108 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
 double vr$111 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$113 = _Z5CLAMPddd( vr$108 / vr$111, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$116 = _ZmlR7VECTOR3d( &TMP$1901$1, &BA$1, vr$113 );
 struct $7VECTOR3* vr$118 = _ZmiR7VECTOR3S0_( &TMP$1902$1, vr$116, &PA$1 );
 double vr$122 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
 double vr$125 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$127 = _Z5CLAMPddd( vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$1899$1, &BA$1, vr$127 );
 struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$1900$1, vr$130, &PA$1 );
 double vr$133 = _Z3DOTR7VECTOR3S0_( vr$132, vr$118 );
 double vr$134 = _Z3MINdd( vr$133, vr$104 );
 double vr$135 = _Z3MINdd( vr$134, vr$75 );
 TMP$1911$1 = vr$135;
 goto label$2248;
 label$2247:;
 double vr$138 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$141 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$145 = _Z3DOTR7VECTOR3S0_( &NOR$1, &NOR$1 );
 TMP$1911$1 = (vr$138 * vr$141) / vr$145;
 label$2248:;
 double vr$147 = _Z4SQRTd( TMP$1911$1 );
 fb$result$1 = vr$147;
 goto label$2246;
 label$2246:;
 return fb$result$1;
}

double UDQUAD( struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1, struct $7VECTOR3* D$1 )
{
 struct $7VECTOR3 TMP$1912$1;
 struct $7VECTOR3 TMP$1913$1;
 struct $7VECTOR3 TMP$1914$1;
 struct $7VECTOR3 TMP$1915$1;
 struct $7VECTOR3 TMP$1916$1;
 struct $7VECTOR3 TMP$1917$1;
 struct $7VECTOR3 TMP$1918$1;
 struct $7VECTOR3 TMP$1919$1;
 struct $7VECTOR3 TMP$1920$1;
 struct $7VECTOR3 TMP$1921$1;
 struct $7VECTOR3 TMP$1922$1;
 struct $7VECTOR3 TMP$1923$1;
 struct $7VECTOR3 TMP$1924$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2249:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1912$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1913$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1914$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$8 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$1915$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$11 );
 struct $7VECTOR3 DC$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$1916$1, D$1, C$1 );
 _ZN7VECTOR3C1ERS_( &DC$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$1917$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 AD$1;
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1918$1, A$1, D$1 );
 _ZN7VECTOR3C1ERS_( &AD$1, vr$20 );
 struct $7VECTOR3 PD$1;
 struct $7VECTOR3* vr$23 = _ZmiR7VECTOR3S0_( &TMP$1919$1, P$1, D$1 );
 _ZN7VECTOR3C1ERS_( &PD$1, vr$23 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$28 = CROSS( &TMP$1920$1, &BA$1, &AD$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$28 );
 double S$1;
 struct $7VECTOR3* vr$34 = CROSS( &TMP$1921$1, &BA$1, &NOR$1 );
 double vr$35 = _Z3DOTR7VECTOR3S0_( vr$34, &PA$1 );
 double vr$36 = _Z4SIGNd( vr$35 );
 struct $7VECTOR3* vr$41 = CROSS( &TMP$1922$1, &CB$1, &NOR$1 );
 double vr$42 = _Z3DOTR7VECTOR3S0_( vr$41, &PB$1 );
 double vr$43 = _Z4SIGNd( vr$42 );
 struct $7VECTOR3* vr$49 = CROSS( &TMP$1923$1, &DC$1, &NOR$1 );
 double vr$50 = _Z3DOTR7VECTOR3S0_( vr$49, &PC$1 );
 double vr$51 = _Z4SIGNd( vr$50 );
 struct $7VECTOR3* vr$57 = CROSS( &TMP$1924$1, &AD$1, &NOR$1 );
 double vr$58 = _Z3DOTR7VECTOR3S0_( vr$57, &PD$1 );
 double vr$59 = _Z4SIGNd( vr$58 );
 S$1 = ((vr$36 + vr$43) + vr$51) + vr$59;
 if( S$1 >= 0x1.8p+1 ) goto label$2252;
 {
  struct $7VECTOR3 TMP$1925$2;
  struct $7VECTOR3 TMP$1926$2;
  struct $7VECTOR3 TMP$1927$2;
  struct $7VECTOR3 TMP$1928$2;
  struct $7VECTOR3 TMP$1929$2;
  struct $7VECTOR3 TMP$1930$2;
  struct $7VECTOR3 TMP$1931$2;
  struct $7VECTOR3 TMP$1932$2;
  struct $7VECTOR3 TMP$1933$2;
  struct $7VECTOR3 TMP$1934$2;
  struct $7VECTOR3 TMP$1935$2;
  struct $7VECTOR3 TMP$1936$2;
  struct $7VECTOR3 TMP$1937$2;
  struct $7VECTOR3 TMP$1938$2;
  struct $7VECTOR3 TMP$1939$2;
  struct $7VECTOR3 TMP$1940$2;
  double vr$64 = _Z3DOTR7VECTOR3S0_( &AD$1, &PD$1 );
  double vr$67 = _Z3DOTR7VECTOR3S0_( &AD$1, &AD$1 );
  double vr$69 = _Z5CLAMPddd( vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$1939$2, &AD$1, vr$69 );
  struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$1940$2, vr$72, &PD$1 );
  double vr$78 = _Z3DOTR7VECTOR3S0_( &AD$1, &PD$1 );
  double vr$81 = _Z3DOTR7VECTOR3S0_( &AD$1, &AD$1 );
  double vr$83 = _Z5CLAMPddd( vr$78 / vr$81, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$86 = _ZmlR7VECTOR3d( &TMP$1937$2, &AD$1, vr$83 );
  struct $7VECTOR3* vr$88 = _ZmiR7VECTOR3S0_( &TMP$1938$2, vr$86, &PD$1 );
  double vr$89 = _Z3DOTR7VECTOR3S0_( vr$88, vr$74 );
  double vr$93 = _Z3DOTR7VECTOR3S0_( &DC$1, &PC$1 );
  double vr$96 = _Z3DOTR7VECTOR3S0_( &DC$1, &DC$1 );
  double vr$98 = _Z5CLAMPddd( vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$1935$2, &DC$1, vr$98 );
  struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$1936$2, vr$101, &PC$1 );
  double vr$107 = _Z3DOTR7VECTOR3S0_( &DC$1, &PC$1 );
  double vr$110 = _Z3DOTR7VECTOR3S0_( &DC$1, &DC$1 );
  double vr$112 = _Z5CLAMPddd( vr$107 / vr$110, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmlR7VECTOR3d( &TMP$1933$2, &DC$1, vr$112 );
  struct $7VECTOR3* vr$117 = _ZmiR7VECTOR3S0_( &TMP$1934$2, vr$115, &PC$1 );
  double vr$118 = _Z3DOTR7VECTOR3S0_( vr$117, vr$103 );
  double vr$122 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
  double vr$125 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
  double vr$127 = _Z5CLAMPddd( vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$1931$2, &CB$1, vr$127 );
  struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$1932$2, vr$130, &PB$1 );
  double vr$136 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
  double vr$139 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
  double vr$141 = _Z5CLAMPddd( vr$136 / vr$139, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$144 = _ZmlR7VECTOR3d( &TMP$1929$2, &CB$1, vr$141 );
  struct $7VECTOR3* vr$146 = _ZmiR7VECTOR3S0_( &TMP$1930$2, vr$144, &PB$1 );
  double vr$147 = _Z3DOTR7VECTOR3S0_( vr$146, vr$132 );
  double vr$151 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
  double vr$154 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
  double vr$156 = _Z5CLAMPddd( vr$151 / vr$154, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$159 = _ZmlR7VECTOR3d( &TMP$1927$2, &BA$1, vr$156 );
  struct $7VECTOR3* vr$161 = _ZmiR7VECTOR3S0_( &TMP$1928$2, vr$159, &PA$1 );
  double vr$165 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
  double vr$168 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
  double vr$170 = _Z5CLAMPddd( vr$165 / vr$168, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$173 = _ZmlR7VECTOR3d( &TMP$1925$2, &BA$1, vr$170 );
  struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$1926$2, vr$173, &PA$1 );
  double vr$176 = _Z3DOTR7VECTOR3S0_( vr$175, vr$161 );
  double vr$177 = _Z3MINdd( vr$176, vr$147 );
  double vr$178 = _Z3MINdd( vr$177, vr$118 );
  double vr$179 = _Z3MINdd( vr$178, vr$89 );
  double vr$180 = _Z4SQRTd( vr$179 );
  fb$result$1 = vr$180;
  goto label$2250;
  label$2252:;
 }
 double vr$183 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$186 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$190 = _Z3DOTR7VECTOR3S0_( &NOR$1, &NOR$1 );
 double vr$192 = _Z4SQRTd( (vr$183 * vr$186) / vr$190 );
 fb$result$1 = vr$192;
 goto label$2250;
 label$2250:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2253:;
 double vr$2 = _Z3MAXdd( -D2$1, D1$1 );
 fb$result$1 = vr$2;
 goto label$2254;
 label$2254:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2* tmp$1941$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* D1$1, struct $7VECTOR2* D2$1 )
{
 struct $7VECTOR2 TMP$1942$1;
 label$2255:;
 if( *(double*)D1$1 >= *(double*)D2$1 ) goto label$2257;
 _ZN7VECTOR2C1ERS_( &TMP$1942$1, D1$1 );
 goto label$2258;
 label$2257:;
 _ZN7VECTOR2C1ERS_( &TMP$1942$1, D2$1 );
 label$2258:;
 _ZN7VECTOR2C1ERS_( tmp$1941$1, &TMP$1942$1 );
 goto label$2256;
 label$2256:;
 return tmp$1941$1;
}

double _ZN12SYSTEM_BUS_T3OPIEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2259:;
 double vr$1 = _Z3MAXdd( D1$1, D2$1 );
 fb$result$1 = vr$1;
 goto label$2260;
 label$2260:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3* tmp$1943$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$1944$1;
 struct $7VECTOR3 TMP$1945$1;
 struct $7VECTOR3 TMP$1946$1;
 label$2261:;
 struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$1945$1, C$1, 0x1.p-1 );
 struct $7VECTOR3* vr$3 = _Z6MODULOR7VECTOR3S0_( &TMP$1944$1, P$1, C$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1946$1, vr$3, vr$1 );
 _ZN7VECTOR3C1ERS_( tmp$1943$1, vr$5 );
 goto label$2262;
 label$2262:;
 return tmp$1943$1;
}

double _ZN12SYSTEM_BUS_T7EXPSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2263:;
 double RES$1;
 double vr$3 = _Z3EXPd( -K$1 * A$1 );
 double vr$6 = _Z3EXPd( -K$1 * B$1 );
 RES$1 = vr$3 + vr$6;
 double vr$8 = _Z3LOGd( RES$1 );
 fb$result$1 = -vr$8 / K$1;
 goto label$2264;
 label$2264:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POLYSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2265:;
 double H$1;
 double vr$5 = _Z5CLAMPddd( (((B$1 - A$1) * 0x1.p-1) / K$1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
 H$1 = vr$5;
 double vr$6 = _Z3MIXddd( B$1, A$1, H$1 );
 fb$result$1 = vr$6 - ((K$1 * H$1) * (0x1.p+0 - H$1));
 goto label$2266;
 label$2266:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7POWSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2267:;
 double vr$1 = _Z3POWdd( A$1, K$1 );
 A$1 = vr$1;
 double vr$2 = _Z3POWdd( B$1, K$1 );
 B$1 = vr$2;
 double vr$7 = _Z3POWdd( (A$1 * B$1) / (A$1 + B$1), 0x1.p+0 / K$1 );
 fb$result$1 = vr$7;
 goto label$2268;
 label$2268:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3* tmp$1947$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $4MAT2 TMP$1948$1;
 struct $7VECTOR2 TMP$1950$1;
 struct $7VECTOR2 TMP$1951$1;
 label$2269:;
 C$ = ((int64)__builtin_nearbyint( __builtin_cos( ((*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) + 0x1.4p+3) ) ));
 S$ = __builtin_sin( ((*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) + 0x1.4p+3) );
 _ZN4MAT2C1Edddd( &TMP$1948$1, (double)C$, -S$, S$, (double)C$ );
 __builtin_memcpy( &M2$, &TMP$1948$1, 32 );
 struct $7VECTOR2* vr$16 = _ZN7VECTOR32XZEv( &TMP$1950$1, P$1 );
 struct $7VECTOR2* vr$18 = _ZmlRdR7VECTOR2( &TMP$1951$1, &M$, vr$16 );
 _ZN7VECTOR3C1ER7VECTOR2d( tmp$1947$1, vr$18, *(double*)((uint8*)P$1 + 8ll) );
 goto label$2270;
 label$2270:;
 return tmp$1947$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2* tmp$1952$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P3$1 )
{
 struct $7VECTOR2 TMP$1953$1;
 struct $7VECTOR2 TMP$1954$1;
 struct $7VECTOR2 TMP$1955$1;
 struct $7VECTOR3 TMP$1956$1;
 struct $7VECTOR3 TMP$1957$1;
 struct $7VECTOR2 TMP$1958$1;
 struct $7VECTOR2 TMP$1959$1;
 struct $7VECTOR3 TMP$1960$1;
 struct $7VECTOR3 TMP$1961$1;
 struct $7VECTOR3 TMP$1962$1;
 struct $7VECTOR2 TMP$1963$1;
 struct $7VECTOR2 TMP$1964$1;
 struct $7VECTOR3 TMP$1965$1;
 struct $7VECTOR3 TMP$1966$1;
 struct $7VECTOR3 TMP$1967$1;
 struct $7VECTOR2 TMP$1968$1;
 struct $7VECTOR2 TMP$1969$1;
 struct $7VECTOR3 TMP$1970$1;
 struct $7VECTOR3 TMP$1971$1;
 struct $7VECTOR2 TMP$1972$1;
 struct $7VECTOR2 TMP$1973$1;
 struct $7VECTOR2 TMP$1974$1;
 struct $7VECTOR3 TMP$1975$1;
 struct $7VECTOR3 TMP$1976$1;
 struct $7VECTOR2 TMP$1977$1;
 struct $7VECTOR2 TMP$1978$1;
 struct $7VECTOR3 TMP$1979$1;
 struct $7VECTOR3 TMP$1980$1;
 struct $7VECTOR2 TMP$1981$1;
 struct $7VECTOR2 TMP$1982$1;
 struct $7VECTOR2 TMP$1983$1;
 struct $7VECTOR3 TMP$1984$1;
 struct $7VECTOR3 TMP$1985$1;
 struct $7VECTOR2 TMP$1986$1;
 struct $7VECTOR2 TMP$1987$1;
 struct $7VECTOR2 TMP$1988$1;
 struct $7VECTOR3 TMP$1989$1;
 struct $7VECTOR3 TMP$1990$1;
 struct $7VECTOR3 TMP$1991$1;
 struct $7VECTOR2 TMP$1992$1;
 struct $7VECTOR2 TMP$1993$1;
 struct $7VECTOR3 TMP$1994$1;
 struct $7VECTOR3 TMP$1995$1;
 struct $7VECTOR2 TMP$1996$1;
 struct $7VECTOR2 TMP$1997$1;
 struct $7VECTOR2 TMP$1998$1;
 struct $7VECTOR3 TMP$1999$1;
 struct $7VECTOR3 TMP$2000$1;
 struct $7VECTOR2 TMP$2001$1;
 struct $7VECTOR2 TMP$2002$1;
 struct $7VECTOR2 TMP$2003$1;
 struct $7VECTOR3 TMP$2004$1;
 struct $7VECTOR3 TMP$2005$1;
 struct $7VECTOR2 TMP$2006$1;
 struct $7VECTOR2 TMP$2007$1;
 struct $7VECTOR2 TMP$2008$1;
 struct $7VECTOR3 TMP$2009$1;
 struct $7VECTOR3 TMP$2010$1;
 struct $7VECTOR2 TMP$2011$1;
 struct $7VECTOR2 TMP$2012$1;
 struct $7VECTOR2 TMP$2013$1;
 struct $7VECTOR3 TMP$2014$1;
 struct $7VECTOR3 TMP$2015$1;
 struct $7VECTOR3 TMP$2016$1;
 struct $7VECTOR3 TMP$2017$1;
 struct $7VECTOR3 TMP$2018$1;
 struct $7VECTOR2 TMP$2019$1;
 struct $7VECTOR2 TMP$2020$1;
 struct $7VECTOR3 TMP$2021$1;
 struct $7VECTOR3 TMP$2022$1;
 struct $7VECTOR2 TMP$2023$1;
 struct $7VECTOR3 TMP$2024$1;
 struct $7VECTOR3 TMP$2025$1;
 struct $7VECTOR3 TMP$2026$1;
 struct $7VECTOR3 TMP$2027$1;
 struct $7VECTOR3 TMP$2028$1;
 struct $7VECTOR2 TMP$2029$1;
 struct $7VECTOR2 TMP$2030$1;
 struct $7VECTOR2 TMP$2031$1;
 struct $7VECTOR3 TMP$2032$1;
 struct $7VECTOR3 TMP$2033$1;
 struct $7VECTOR2 TMP$2034$1;
 struct $7VECTOR2 TMP$2035$1;
 struct $7VECTOR3 TMP$2036$1;
 struct $7VECTOR3 TMP$2037$1;
 struct $7VECTOR3 TMP$2038$1;
 struct $7VECTOR2 TMP$2039$1;
 struct $7VECTOR2 TMP$2040$1;
 struct $7VECTOR2 TMP$2041$1;
 struct $7VECTOR3 TMP$2042$1;
 struct $7VECTOR3 TMP$2043$1;
 struct $7VECTOR2 TMP$2044$1;
 struct $7VECTOR2 TMP$2045$1;
 struct $7VECTOR3 TMP$2046$1;
 struct $7VECTOR3 TMP$2047$1;
 struct $7VECTOR3 TMP$2048$1;
 label$2271:;
 double vr$0 = _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( THIS$1, P3$1 );
 _ZN7VECTOR2C1Edd( &TMP$1953$1, vr$0, 0x1.p+0 );
 _ZN7VECTOR2aSERS_( &RES2$, &TMP$1953$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1956$1, 0x0p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$6 = _ZmiR7VECTOR3S0_( &TMP$1957$1, P3$1, &TMP$1956$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$6, 0x1.p-2 );
 _ZN7VECTOR2C1Edd( &TMP$1955$1, vr$7, 0x1.7733333333333p+5 );
 struct $7VECTOR2* vr$11 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1954$1, THIS$1, &RES2$, &TMP$1955$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$11 );
 _ZN7VECTOR3C1Ed( &TMP$1962$1, 0x1.p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$1960$1, 0x1.p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$1961$1, P3$1, &TMP$1960$1 );
 double vr$18 = _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( THIS$1, vr$17, &TMP$1962$1 );
 _ZN7VECTOR2C1Edd( &TMP$1959$1, vr$18, 0x1.8p+1 );
 struct $7VECTOR2* vr$22 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1958$1, THIS$1, &RES2$, &TMP$1959$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$22 );
 _ZN7VECTOR3C1Ed( &TMP$1967$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1965$1, 0x1.p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$28 = _ZmiR7VECTOR3S0_( &TMP$1966$1, P3$1, &TMP$1965$1 );
 double vr$29 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$28, &TMP$1967$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$1964$1, vr$29, 0x1.48p+5 );
 struct $7VECTOR2* vr$33 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1963$1, THIS$1, &RES2$, &TMP$1964$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$33 );
 _ZN7VECTOR2C1Edd( &TMP$1972$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1970$1, 0x0p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$39 = _ZmiR7VECTOR3S0_( &TMP$1971$1, P3$1, &TMP$1970$1 );
 double vr$40 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$39, &TMP$1972$1 );
 _ZN7VECTOR2C1Edd( &TMP$1969$1, vr$40, 0x1.9p+4 );
 struct $7VECTOR2* vr$44 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1968$1, THIS$1, &RES2$, &TMP$1969$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$44 );
 _ZN7VECTOR3C1Eddd( &TMP$1976$1, -0x1.999999999999Ap-1, 0x1.p-1, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1975$1, -0x1.4CCCCCCCCCCCDp+0, 0x1.999999999999Ap-4, -0x1.999999999999Ap-4 );
 double vr$49 = _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( THIS$1, P3$1, &TMP$1975$1, &TMP$1976$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$1974$1, vr$49, 0x1.FE66666666666p+4 );
 struct $7VECTOR2* vr$53 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1973$1, THIS$1, &RES2$, &TMP$1974$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$53 );
 _ZN7VECTOR2C1Edd( &TMP$1981$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1979$1, -0x1.p+0, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$59 = _ZmiR7VECTOR3S0_( &TMP$1980$1, P3$1, &TMP$1979$1 );
 double vr$60 = _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$59, &TMP$1981$1 );
 _ZN7VECTOR2C1Edd( &TMP$1978$1, vr$60, 0x1.5Cp+5 );
 struct $7VECTOR2* vr$64 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1977$1, THIS$1, &RES2$, &TMP$1978$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$64 );
 _ZN7VECTOR2C1Edd( &TMP$1986$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1984$1, 0x1.p+0, 0x1.3333333333333p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$70 = _ZmiR7VECTOR3S0_( &TMP$1985$1, P3$1, &TMP$1984$1 );
 double vr$71 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$70, &TMP$1986$1 );
 _ZN7VECTOR2C1Edd( &TMP$1983$1, vr$71, 0x1.p+3 );
 struct $7VECTOR2* vr$75 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1982$1, THIS$1, &RES2$, &TMP$1983$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$75 );
 _ZN7VECTOR3C1Eddd( &TMP$1991$1, 0x1.999999999999Ap-1, 0x1.3333333333333p-1, 0x1.3333333333333p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$1989$1, 0x0p+0, 0x1.p-1, -0x1.p+0 );
 struct $7VECTOR3* vr$81 = _ZmiR7VECTOR3S0_( &TMP$1990$1, P3$1, &TMP$1989$1 );
 double vr$82 = _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( THIS$1, vr$81, &TMP$1991$1 );
 _ZN7VECTOR2C1Edd( &TMP$1988$1, vr$82, 0x1.B8p+5 );
 struct $7VECTOR2* vr$86 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1987$1, THIS$1, &RES2$, &TMP$1988$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$86 );
 _ZN7VECTOR2C1Edd( &TMP$1996$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1994$1, 0x0p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$92 = _ZmiR7VECTOR3S0_( &TMP$1995$1, P3$1, &TMP$1994$1 );
 double vr$93 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$92, &TMP$1996$1 );
 _ZN7VECTOR2C1Edd( &TMP$1993$1, vr$93, 0x1.9p+5 );
 struct $7VECTOR2* vr$97 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1992$1, THIS$1, &RES2$, &TMP$1993$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$97 );
 _ZN7VECTOR2C1Edd( &TMP$2001$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1999$1, -0x1.p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2000$1, P3$1, &TMP$1999$1 );
 double vr$104 = _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( THIS$1, vr$103, &TMP$2001$1 );
 _ZN7VECTOR2C1Edd( &TMP$1998$1, vr$104, 0x1.58p+5 );
 struct $7VECTOR2* vr$108 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$1997$1, THIS$1, &RES2$, &TMP$1998$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$108 );
 _ZN7VECTOR2C1Edd( &TMP$2006$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2004$1, 0x1.p+0, 0x1.3333333333333p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$114 = _ZmiR7VECTOR3S0_( &TMP$2005$1, P3$1, &TMP$2004$1 );
 double vr$115 = _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( THIS$1, vr$114, &TMP$2006$1 );
 _ZN7VECTOR2C1Edd( &TMP$2003$1, vr$115, 0x1.8p+3 );
 struct $7VECTOR2* vr$119 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2002$1, THIS$1, &RES2$, &TMP$2003$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$119 );
 _ZN7VECTOR2C1Edd( &TMP$2011$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2009$1, -0x1.p+0, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$125 = _ZmiR7VECTOR3S0_( &TMP$2010$1, P3$1, &TMP$2009$1 );
 double vr$126 = _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$125, &TMP$2011$1 );
 _ZN7VECTOR2C1Edd( &TMP$2008$1, vr$126, 0x1.1p+4 );
 struct $7VECTOR2* vr$130 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2007$1, THIS$1, &RES2$, &TMP$2008$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$130 );
 _ZN7VECTOR3C1Eddd( &TMP$2017$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$134 = _ZmiR7VECTOR3S0_( &TMP$2018$1, P3$1, &TMP$2017$1 );
 double vr$135 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$134, 0x1.p-2 );
 _ZN7VECTOR3C1Ed( &TMP$2016$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2014$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$141 = _ZmiR7VECTOR3S0_( &TMP$2015$1, P3$1, &TMP$2014$1 );
 double vr$142 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$141, &TMP$2016$1, 0x1.999999999999Ap-5 );
 double vr$143 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$142, vr$135 );
 _ZN7VECTOR2C1Edd( &TMP$2013$1, vr$143, 0x1.Ap+3 );
 struct $7VECTOR2* vr$147 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2012$1, THIS$1, &RES2$, &TMP$2013$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$147 );
 _ZN7VECTOR2C1Edd( &TMP$2029$1, 0x1.47AE147AE147Bp-6, 0x1.3333333333333p-1 );
 _ZN7VECTOR3C1Eddd( &TMP$2028$1, 0x1.999999999999Ap-5, 0x1.p+0, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2026$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$155 = _ZmiR7VECTOR3S0_( &TMP$2027$1, P3$1, &TMP$2026$1 );
 double vr$156 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$155 );
 double vr$163 = _Z4ATANdd( *(double*)P3$1 + 0x1.p+1, *(double*)((uint8*)P3$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( &TMP$2025$1, vr$163 / 0x1.921E4F765FD8Bp+2, *(double*)((uint8*)P3$1 + 8ll), (vr$156 * 0x1.p-1) + 0x1.47AE147AE147Bp-6 );
 struct $7VECTOR3* vr$168 = _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( &TMP$2024$1, THIS$1, &TMP$2025$1, &TMP$2028$1 );
 double vr$169 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$168, &TMP$2029$1 );
 _ZN7VECTOR2C1Edd( &TMP$2023$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR3C1Eddd( &TMP$2021$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$2022$1, P3$1, &TMP$2021$1 );
 double vr$176 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$175, &TMP$2023$1 );
 double vr$177 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$176, vr$169 );
 _ZN7VECTOR2C1Edd( &TMP$2020$1, vr$177, 0x1.98p+5 );
 struct $7VECTOR2* vr$181 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2019$1, THIS$1, &RES2$, &TMP$2020$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$181 );
 _ZN7VECTOR3C1Eddd( &TMP$2032$1, -0x1.p+1, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$185 = _ZmiR7VECTOR3S0_( &TMP$2033$1, P3$1, &TMP$2032$1 );
 double vr$186 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$185, 0x1.999999999999Ap-3 );
 _ZN7VECTOR2C1Edd( &TMP$2031$1, (vr$186 * 0x1.6666666666666p-1) + (((__builtin_sin( (*(double*)P3$1 * 0x1.9p+5) ) * __builtin_sin( (*(double*)((uint8*)P3$1 + 8ll) * 0x1.9p+5) )) * __builtin_sin( (*(double*)((uint8*)P3$1 + 16ll) * 0x1.9p+5) )) * 0x1.EB851EB851EB8p-6), 0x1.04p+6 );
 struct $7VECTOR2* vr$204 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2030$1, THIS$1, &RES2$, &TMP$2031$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$204 );
 _ZN7VECTOR2C1Edd( &TMP$2039$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2037$1, -0x1.p+1, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$210 = _ZmiR7VECTOR3S0_( &TMP$2038$1, P3$1, &TMP$2037$1 );
 struct $7VECTOR3* vr$212 = _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( &TMP$2036$1, THIS$1, vr$210 );
 double vr$213 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$212, &TMP$2039$1 );
 _ZN7VECTOR2C1Edd( &TMP$2035$1, vr$213 * 0x1.p-1, 0x1.759999999999Ap+5 );
 struct $7VECTOR2* vr$218 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2034$1, THIS$1, &RES2$, &TMP$2035$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$218 );
 _ZN7VECTOR3C1Eddd( &TMP$2042$1, 0x0p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$222 = _ZmiR7VECTOR3S0_( &TMP$2043$1, P3$1, &TMP$2042$1 );
 double vr$223 = _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( THIS$1, vr$222, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2041$1, vr$223, 0x1.B570A3D70A3D7p+3 );
 struct $7VECTOR2* vr$227 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2040$1, THIS$1, &RES2$, &TMP$2041$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$227 );
 _ZN7VECTOR3C1Eddd( &TMP$2048$1, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2046$1, 0x1.p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$233 = _ZmiR7VECTOR3S0_( &TMP$2047$1, P3$1, &TMP$2046$1 );
 double vr$234 = _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( THIS$1, vr$233, &TMP$2048$1 );
 _ZN7VECTOR2C1Edd( &TMP$2045$1, vr$234, 0x1.595C28F5C28F6p+5 );
 struct $7VECTOR2* vr$238 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2044$1, THIS$1, &RES2$, &TMP$2045$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$238 );
 _ZN7VECTOR2C1ERS_( tmp$1952$1, &RES2$ );
 goto label$2272;
 label$2272:;
 return tmp$1952$1;
}

double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double X$1, double C$1, double D$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2273:;
 fb$result$1 = (((D$1 - C$1) * (X$1 - A$1)) / (B$1 - A$1)) + C$1;
 goto label$2274;
 label$2274:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2* tmp$2049$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 double TMP$2053$1;
 label$2275:;
 TMIN$ = 0x1.999999999999Ap-4;
 TMAX$ = 0x1.4p+4;
 PRECIS$ = 0x1.0624DD2F1A9FCp-9;
 T$ = TMIN$;
 M$ = -0x1.p+0;
 _ZN7VECTOR2aSEd( &RES2$, 0x0p+0 );
 label$2277:;
 {
  struct $7VECTOR3 TMP$2050$2;
  struct $7VECTOR3 TMP$2051$2;
  struct $7VECTOR2 TMP$2052$2;
  struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$2050$2, &RD$, T$ );
  struct $7VECTOR3* vr$3 = _ZplR7VECTOR3S0_( &TMP$2051$2, &RO$, vr$1 );
  struct $7VECTOR2* vr$5 = _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2052$2, THIS$1, vr$3 );
  _ZN7VECTOR2aSERS_( &RES2$, vr$5 );
  if( T$ <= TMAX$ ) goto label$2281;
  {
   goto label$2278;
   label$2281:;
  }
  if( *(double*)&RES2$ >= PRECIS$ ) goto label$2283;
  {
   goto label$2278;
   label$2283:;
  }
  T$ = T$ + *(double*)&RES2$;
  M$ = *(double*)((uint8*)&RES2$ + 8ll);
 }
 label$2279:;
 goto label$2277;
 label$2278:;
 *(double*)&RES2$ = T$;
 if( T$ <= TMAX$ ) goto label$2284;
 TMP$2053$1 = -0x1.p+0;
 goto label$2285;
 label$2284:;
 TMP$2053$1 = M$;
 label$2285:;
 *(double*)((uint8*)&RES2$ + 8ll) = TMP$2053$1;
 _ZN7VECTOR2C1ERS_( tmp$2049$1, &RES2$ );
 goto label$2276;
 label$2276:;
 return tmp$2049$1;
}

double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2286:;
 RESF$ = 0x1.p+0;
 T$ = MINT$;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2291:;
  {
   struct $7VECTOR3 TMP$2054$3;
   struct $7VECTOR3 TMP$2055$3;
   struct $7VECTOR2 TMP$2056$3;
   struct $7VECTOR3* vr$2 = _ZmlR7VECTOR3d( &TMP$2054$3, &RD$, T$ );
   struct $7VECTOR3* vr$4 = _ZplR7VECTOR3S0_( &TMP$2055$3, &RO$, vr$2 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2056$3, THIS$1, vr$4 );
   H$ = *(double*)&TMP$2056$3;
   double vr$8 = _Z3MINdd( RESF$, (H$ * 0x1.p+3) / T$ );
   RESF$ = vr$8;
   double vr$9 = _Z5CLAMPddd( H$, 0x1.47AE147AE147Bp-6, 0x1.999999999999Ap-4 );
   T$ = T$ + vr$9;
   if( ((int64)-(H$ < 0x1.0624DD2F1A9FCp-10) | (int64)-(T$ > TMAX$)) == 0ll ) goto label$2293;
   {
    goto label$2290;
    label$2293:;
   }
  }
  label$2289:;
  I$2 = I$2 + 1ll;
  label$2288:;
  if( I$2 <= 15ll ) goto label$2291;
  label$2290:;
 }
 double vr$15 = _Z5CLAMPddd( RESF$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$15;
 goto label$2287;
 label$2287:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3* tmp$2057$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2058$1;
 struct $7VECTOR3 TMP$2059$1;
 struct $7VECTOR2 TMP$2060$1;
 struct $7VECTOR3 TMP$2061$1;
 struct $7VECTOR2 TMP$2062$1;
 struct $7VECTOR3 TMP$2063$1;
 struct $7VECTOR2 TMP$2064$1;
 struct $7VECTOR3 TMP$2065$1;
 struct $7VECTOR2 TMP$2066$1;
 struct $7VECTOR3 TMP$2067$1;
 struct $7VECTOR2 TMP$2068$1;
 struct $7VECTOR3 TMP$2069$1;
 struct $7VECTOR2 TMP$2070$1;
 struct $7VECTOR3 TMP$2071$1;
 label$2294:;
 EPS$ = 0x1.0624DD2F1A9FCp-10;
 _ZN7VECTOR3C1Eddd( &TMP$2067$1, *(double*)&P3$, *(double*)((uint8*)&P3$ + 8ll), *(double*)((uint8*)&P3$ + 16ll) + EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2068$1, THIS$1, &TMP$2067$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2069$1, *(double*)&P3$, *(double*)((uint8*)&P3$ + 8ll), *(double*)((uint8*)&P3$ + 16ll) - EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2070$1, THIS$1, &TMP$2069$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2063$1, *(double*)&P3$, *(double*)((uint8*)&P3$ + 8ll) + EPS$, *(double*)((uint8*)&P3$ + 16ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2064$1, THIS$1, &TMP$2063$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2065$1, *(double*)&P3$, *(double*)((uint8*)&P3$ + 8ll) - EPS$, *(double*)((uint8*)&P3$ + 16ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2066$1, THIS$1, &TMP$2065$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2059$1, *(double*)&P3$ + EPS$, *(double*)((uint8*)&P3$ + 8ll), *(double*)((uint8*)&P3$ + 16ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2060$1, THIS$1, &TMP$2059$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2061$1, *(double*)&P3$ - EPS$, *(double*)((uint8*)&P3$ + 8ll), *(double*)((uint8*)&P3$ + 16ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2062$1, THIS$1, &TMP$2061$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2058$1, *(double*)&TMP$2060$1 - *(double*)&TMP$2062$1, *(double*)&TMP$2064$1 - *(double*)&TMP$2066$1, *(double*)&TMP$2068$1 - *(double*)&TMP$2070$1 );
 struct $7VECTOR3* vr$30 = _Z9NORMALIZER7VECTOR3( &TMP$2071$1, &TMP$2058$1 );
 _ZN7VECTOR3C1ERS_( tmp$2057$1, vr$30 );
 goto label$2295;
 label$2295:;
 return tmp$2057$1;
}

double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2296:;
 OCC$ = 0x0p+0;
 SCA$ = 0x1.p+0;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2301:;
  {
   struct $7VECTOR3 TMP$2072$3;
   struct $7VECTOR3 TMP$2073$3;
   struct $7VECTOR2 TMP$2074$3;
   HR$ = (((double)I$2 * 0x1.EB851EB851EB8p-4) / 0x1.4p+2) + 0x1.47AE147AE147Bp-7;
   struct $7VECTOR3* vr$6 = _ZmlR7VECTOR3d( &TMP$2072$3, &NOR$, HR$ );
   struct $7VECTOR3* vr$8 = _ZplR7VECTOR3S0_( &TMP$2073$3, vr$6, &P3$ );
   _ZN7VECTOR3aSERS_( &AOPOS$, vr$8 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2074$3, THIS$1, &AOPOS$ );
   DD2$ = *(double*)&TMP$2074$3;
   OCC$ = OCC$ + (-(DD2$ - HR$) * SCA$);
   SCA$ = SCA$ * 0x1.E666666666666p-1;
  }
  label$2299:;
  I$2 = I$2 + 1ll;
  label$2298:;
  if( I$2 <= 4ll ) goto label$2301;
  label$2300:;
 }
 OCC$ = -(OCC$ * 0x1.8p+1) + 0x1.p+0;
 double vr$19 = _Z5CLAMPddd( OCC$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$19;
 goto label$2297;
 label$2297:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2302:;
 double vr$5 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.p+0, (-(__builtin_cos( X$1 )) + 0x1.p+0) / 0x1.p+1, 0x1.p-1, 0x1.p+0 );
 fb$result$1 = vr$5;
 goto label$2303;
 label$2303:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( struct $12SYSTEM_BUS_T* THIS$1, float X$1, boolean SET$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2304:;
 static double KR$1;
 static double KG$1;
 static double KB$1;
 if( SET$1 != (boolean)1ll ) goto label$2307;
 {
  KR$1 = 0x0p+0;
  KG$1 = 0x0p+0;
  KB$1 = 0x0p+0;
  fb$result$1 = 0u;
  goto label$2305;
  label$2307:;
 }
 KR$1 = KR$1 + 0x1.205BC01A36E2Fp-7;
 KG$1 = KG$1 + 0x1.F8A0902DE00D2p-8;
 KB$1 = KB$1 + 0x1.4467381D7DBF5p-7;
 uint32 R$1;
 __builtin_memset( &R$1, 0, 4ll );
 uint32 G$1;
 __builtin_memset( &G$1, 0, 4ll );
 uint32 B$1;
 __builtin_memset( &B$1, 0, 4ll );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, (__builtin_sin( ((double)X$1 * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$12 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KR$1 );
 R$1 = (uint32)((int64)__builtin_nearbyint( vr$12 * *(double*)((int64)(double*)MEM64$ + 393232ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, (__builtin_sin( ((double)(X$1 + -0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$21 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KG$1 );
 G$1 = (uint32)((int64)__builtin_nearbyint( vr$21 * *(double*)((int64)(double*)MEM64$ + 393240ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, (__builtin_sin( ((double)(X$1 + 0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$30 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KB$1 );
 B$1 = (uint32)((int64)__builtin_nearbyint( vr$30 * *(double*)((int64)(double*)MEM64$ + 393248ll) ));
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)((int64)R$1 & 255ll) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int64)G$1 & 255ll) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int64)B$1 & 255ll)) | 4278190080ll);
 goto label$2305;
 label$2305:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T* THIS$1, void* I$1, int32 N$1 )
{
 int64 TMP$2075$1;
 int64 TMP$2076$1;
 void* TMP$2077$1;
 int64 TMP$2078$1;
 label$2308:;
 int64 IX$1;
 __builtin_memset( &IX$1, 0, 8ll );
 int64 IY$1;
 __builtin_memset( &IY$1, 0, 8ll );
 TMP$2078$1 = 0ll;
 TMP$2077$1 = (void*)0ull;
 TMP$2076$1 = 0ll;
 TMP$2075$1 = 0ll;
 fb_GfxImageInfo64( (void*)I$1, (int64*)&IX$1, (int64*)&IY$1, &TMP$2075$1, &TMP$2076$1, &TMP$2077$1, &TMP$2078$1 );
 int32 P$1[5];
 __builtin_memset( (int32*)P$1, 0, 20ll );
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
  int32* DATA;
  int32* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$2079$1;
 *(int32**)&tmp$2079$1 = (int32*)P$1;
 *(int32**)((uint8*)&tmp$2079$1 + 8ll) = (int32*)P$1;
 *(int64*)((uint8*)&tmp$2079$1 + 16ll) = 20ll;
 *(int64*)((uint8*)&tmp$2079$1 + 24ll) = 4ll;
 *(int64*)((uint8*)&tmp$2079$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$2079$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$2079$1 + 48ll) = 5ll;
 *(int64*)((uint8*)&tmp$2079$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$2079$1 + 64ll) = 4ll;
 {
  int32 K$2;
  K$2 = 1;
  int32 TMP$2080$2;
  TMP$2080$2 = N$1;
  goto label$2310;
  label$2313:;
  {
   {
    int32 X$4;
    X$4 = 1;
    label$2317:;
    {
     {
      int32 Y$6;
      Y$6 = 1;
      label$2321:;
      {
       int64 R$7;
       R$7 = 0ll;
       int64 G$7;
       G$7 = 0ll;
       int64 B$7;
       B$7 = 0ll;
       uint32 vr$13 = fb_GfxPoint( I$1, (float)X$4, (float)Y$6 );
       *(int32*)P$1 = (int32)vr$13;
       uint32 vr$18 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + -1ll) );
       *(int32*)((int64)(int32*)P$1 + 4ll) = (int32)vr$18;
       uint32 vr$23 = fb_GfxPoint( I$1, (float)((int64)X$4 + 1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 8ll) = (int32)vr$23;
       uint32 vr$28 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + 1ll) );
       *(int32*)((int64)(int32*)P$1 + 12ll) = (int32)vr$28;
       uint32 vr$33 = fb_GfxPoint( I$1, (float)((int64)X$4 + -1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 16ll) = (int32)vr$33;
       {
        int32 N$8;
        N$8 = 0;
        label$2325:;
        {
         R$7 = R$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + 2ll);
         G$7 = G$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + 1ll);
         B$7 = B$7 + (int64)*(uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll)));
        }
        label$2323:;
        N$8 = (int32)((int64)N$8 + 1ll);
        label$2322:;
        if( (int64)N$8 <= 4ll ) goto label$2325;
        label$2324:;
       }
       R$7 = ((int64)__builtin_nearbyint( (double)R$7 / 0x1.4p+2 ));
       G$7 = ((int64)__builtin_nearbyint( (double)G$7 / 0x1.4p+2 ));
       B$7 = ((int64)__builtin_nearbyint( (double)B$7 / 0x1.4p+2 ));
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$4;
       *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$6;
       *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)(uint32)(((((int64)(uint32)(uint8)R$7 << (16ll & 63ll)) | ((int64)(uint32)(uint8)G$7 << (8ll & 63ll))) | (int64)(uint32)(uint8)B$7) | 4278190080ll);
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
      }
      label$2319:;
      Y$6 = (int32)((int64)Y$6 + 1ll);
      label$2318:;
      if( (int64)Y$6 <= 1078ll ) goto label$2321;
      label$2320:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    label$2315:;
    X$4 = (int32)((int64)X$4 + 1ll);
    label$2314:;
    if( (int64)X$4 <= 1918ll ) goto label$2317;
    label$2316:;
   }
  }
  label$2311:;
  K$2 = (int32)((int64)K$2 + 1ll);
  label$2310:;
  if( (int64)K$2 <= (int64)TMP$2080$2 ) goto label$2313;
  label$2312:;
 }
 label$2309:;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3* tmp$2082$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR2 TMP$2083$1;
 struct $7VECTOR3 TMP$2124$1;
 label$2326:;
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Ev( &COL$1 );
 struct $7VECTOR2* vr$2 = _ZN12SYSTEM_BUS_T7CASTRAYEv( &TMP$2083$1, THIS$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$2 );
 T$ = *(double*)&RES2$;
 M$ = *(double*)((uint8*)&RES2$ + 8ll);
 if( M$ >= 0x0p+0 ) goto label$2329;
 {
  struct $7VECTOR3 TMP$2084$2;
  struct $7VECTOR3 TMP$2085$2;
  _ZN7VECTOR3C1Eddd( &TMP$2084$2, 0x1.p-1, 0x1.3333333333333p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$7 = _ZplR7VECTOR3d( &TMP$2085$2, &TMP$2084$2, *(double*)((uint8*)&RD$ + 8ll) * 0x1.999999999999Ap-1 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$7 );
 }
 goto label$2328;
 label$2329:;
 {
  struct $7VECTOR3 TMP$2086$2;
  struct $7VECTOR3 TMP$2087$2;
  struct $7VECTOR3 TMP$2098$2;
  struct $7VECTOR3 TMP$2099$2;
  struct $7VECTOR3 TMP$2100$2;
  struct $7VECTOR3 TMP$2101$2;
  struct $7VECTOR3 TMP$2102$2;
  struct $7VECTOR3 TMP$2103$2;
  struct $7VECTOR3 TMP$2104$2;
  struct $7VECTOR3 TMP$2105$2;
  struct $7VECTOR3 TMP$2106$2;
  struct $7VECTOR3 TMP$2107$2;
  struct $7VECTOR3 TMP$2108$2;
  struct $7VECTOR3 TMP$2109$2;
  struct $7VECTOR3 TMP$2110$2;
  struct $7VECTOR3 TMP$2111$2;
  struct $7VECTOR3 TMP$2112$2;
  struct $7VECTOR3 TMP$2113$2;
  struct $7VECTOR3 TMP$2114$2;
  struct $7VECTOR3 TMP$2115$2;
  struct $7VECTOR3 TMP$2116$2;
  struct $7VECTOR3 TMP$2117$2;
  struct $7VECTOR3 TMP$2118$2;
  struct $7VECTOR3 TMP$2119$2;
  struct $7VECTOR3 TMP$2120$2;
  struct $7VECTOR3 TMP$2121$2;
  struct $7VECTOR3 TMP$2122$2;
  struct $7VECTOR3* vr$10 = _ZmldR7VECTOR3( &TMP$2086$2, T$, &RD$ );
  struct $7VECTOR3* vr$12 = _ZplR7VECTOR3S0_( &TMP$2087$2, &RO$, vr$10 );
  _ZN7VECTOR3aSERS_( &P3$, vr$12 );
  if( M$ != 0x1.p+0 ) goto label$2331;
  {
   struct $7VECTOR3 TMP$2088$3;
   struct $7VECTOR3 TMP$2089$3;
   struct $7VECTOR3 TMP$2090$3;
   struct $7VECTOR3 TMP$2091$3;
   _ZN7VECTOR3C1Eddd( &TMP$2088$3, 0x0p+0, 0x1.p+0, 0x0p+0 );
   _ZN7VECTOR3aSERS_( &NOR$, &TMP$2088$3 );
   _ZN7VECTOR3C1Ed( &TMP$2089$3, 0x1.999999999999Ap-2 );
   double vr$18 = _Z5FLOORd( *(double*)&P3$ * 0x1.p+0 );
   double vr$20 = _Z5FLOORd( *(double*)((uint8*)&P3$ + 16ll) * 0x1.p+0 );
   int64 vr$23 = _Z6MODULOll( ((int64)__builtin_nearbyint( vr$18 + vr$20 )), 2ll );
   struct $7VECTOR3* vr$26 = _ZmldR7VECTOR3( &TMP$2090$3, (double)vr$23, &TMP$2089$3 );
   struct $7VECTOR3* vr$28 = _ZplR7VECTOR3d( &TMP$2091$3, vr$26, 0x1.999999999999Ap-4 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$28 );
  }
  goto label$2330;
  label$2331:;
  {
   struct $7VECTOR3 TMP$2092$3;
   struct $7VECTOR3 TMP$2093$3;
   struct $7VECTOR3 TMP$2094$3;
   struct $7VECTOR3 TMP$2095$3;
   struct $7VECTOR3 TMP$2096$3;
   struct $7VECTOR3 TMP$2097$3;
   struct $7VECTOR3* vr$31 = _ZN12SYSTEM_BUS_T10CALCNORMALEv( &TMP$2092$3, THIS$1 );
   _ZN7VECTOR3aSERS_( &NOR$, vr$31 );
   _ZN7VECTOR3C1Eddd( &TMP$2093$3, 0x1.999999999999Ap-5, 0x1.47AE147AE147Bp-4, 0x1.999999999999Ap-4 );
   struct $7VECTOR3* vr$36 = _ZmlR7VECTOR3d( &TMP$2094$3, &TMP$2093$3, M$ + -0x1.p+0 );
   struct $7VECTOR3* vr$38 = _Zv13sinR7VECTOR3( &TMP$2095$3, vr$36 );
   struct $7VECTOR3* vr$40 = _ZmldR7VECTOR3( &TMP$2096$3, 0x1.p-1, vr$38 );
   struct $7VECTOR3* vr$42 = _ZpldR7VECTOR3( &TMP$2097$3, 0x1.p-1, vr$40 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$42 );
  }
  label$2330:;
  struct $7VECTOR3* vr$45 = _Z7REFLECTR7VECTOR3S0_( &TMP$2098$2, &RD$, &NOR$ );
  _ZN7VECTOR3aSERS_( &REF$, vr$45 );
  double vr$46 = _ZN12SYSTEM_BUS_T6CALCAOEv( THIS$1 );
  OCC$ = vr$46;
  _ZN7VECTOR3C1Eddd( &TMP$2099$2, 0x1.p+0, 0x1.p+0, -0x1.p+0 );
  struct $7VECTOR3* vr$50 = _Z9NORMALIZER7VECTOR3( &TMP$2100$2, &TMP$2099$2 );
  _ZN7VECTOR3aSERS_( &LIGHT$, vr$50 );
  double vr$53 = _Z5CLAMPddd( (*(double*)((uint8*)&NOR$ + 8ll) * 0x1.p-1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
  AMBIENT$ = vr$53;
  double vr$54 = _Z3DOTR7VECTOR3S0_( &NOR$, &LIGHT$ );
  double vr$55 = _Z5CLAMPddd( vr$54, 0x0p+0, 0x1.p+0 );
  DIFFUSE$ = vr$55;
  _ZN7VECTOR3C1Eddd( &TMP$2101$2, -(*(double*)&LIGHT$), 0x0p+0, -(*(double*)((uint8*)&LIGHT$ + 16ll)) );
  struct $7VECTOR3* vr$61 = _Z9NORMALIZER7VECTOR3( &TMP$2102$2, &TMP$2101$2 );
  double vr$62 = _Z3DOTR7VECTOR3S0_( &NOR$, vr$61 );
  double vr$63 = _Z5CLAMPddd( vr$62, 0x0p+0, 0x1.p+0 );
  double vr$66 = _Z5CLAMPddd( -(*(double*)((uint8*)&P3$ + 8ll)) + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  BAC$ = vr$63 * vr$66;
  double vr$68 = _Z10SMOOTHSTEPddd( -0x1.999999999999Ap-4, 0x1.999999999999Ap-4, *(double*)((uint8*)&REF$ + 8ll) );
  DOM$ = vr$68;
  double vr$69 = _Z3DOTR7VECTOR3S0_( &NOR$, &RD$ );
  double vr$71 = _Z5CLAMPddd( vr$69 + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  double vr$72 = _Z3POWdd( vr$71, 0x1.p+1 );
  FR$ = vr$72;
  double vr$73 = _Z3DOTR7VECTOR3S0_( &REF$, &LIGHT$ );
  double vr$74 = _Z5CLAMPddd( vr$73, 0x0p+0, 0x1.p+0 );
  double vr$75 = _Z3POWdd( vr$74, 0x1.p+4 );
  SPECULAR$ = vr$75;
  MINT$ = 0x1.47AE147AE147Bp-6;
  TMAX$ = 0x1.4p+1;
  _ZN7VECTOR3aSERS_( &RD$, &LIGHT$ );
  double vr$76 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DIFFUSE$ = DIFFUSE$ * vr$76;
  _ZN7VECTOR3aSERS_( &RD$, &REF$ );
  double vr$78 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DOM$ = DOM$ * vr$78;
  _ZN7VECTOR3C1Eddd( &TMP$2103$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$84 = _ZmldR7VECTOR3( &TMP$2104$2, DIFFUSE$ * 0x1.3333333333333p+0, &TMP$2103$2 );
  _ZN7VECTOR3aSERS_( &LIN$, vr$84 );
  _ZN7VECTOR3C1Eddd( &TMP$2105$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$89 = _ZmldR7VECTOR3( &TMP$2106$2, SPECULAR$ * 0x1.3333333333333p+0, &TMP$2105$2 );
  struct $7VECTOR3* vr$91 = _ZmlR7VECTOR3d( &TMP$2107$2, vr$89, DIFFUSE$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$91 );
  _ZN7VECTOR3C1Eddd( &TMP$2108$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$96 = _ZmldR7VECTOR3( &TMP$2109$2, AMBIENT$ * 0x1.999999999999Ap-3, &TMP$2108$2 );
  struct $7VECTOR3* vr$98 = _ZmlR7VECTOR3d( &TMP$2110$2, vr$96, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$98 );
  _ZN7VECTOR3C1Eddd( &TMP$2111$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$103 = _ZmldR7VECTOR3( &TMP$2112$2, DOM$ * 0x1.3333333333333p-2, &TMP$2111$2 );
  struct $7VECTOR3* vr$105 = _ZmlR7VECTOR3d( &TMP$2113$2, vr$103, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$105 );
  _ZN7VECTOR3C1Eddd( &TMP$2114$2, 0x1.p-2, 0x1.p-2, 0x1.p-2 );
  struct $7VECTOR3* vr$110 = _ZmldR7VECTOR3( &TMP$2115$2, BAC$ * 0x1.3333333333333p-2, &TMP$2114$2 );
  struct $7VECTOR3* vr$112 = _ZmlR7VECTOR3d( &TMP$2116$2, vr$110, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$112 );
  _ZN7VECTOR3C1Eddd( &TMP$2117$2, 0x1.p+0, 0x1.p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$117 = _ZmldR7VECTOR3( &TMP$2118$2, FR$ * 0x1.999999999999Ap-2, &TMP$2117$2 );
  struct $7VECTOR3* vr$119 = _ZmlR7VECTOR3d( &TMP$2119$2, vr$117, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$119 );
  struct $7VECTOR3* vr$122 = _ZmlR7VECTOR3S0_( &TMP$2120$2, &COL$1, &LIN$ );
  _ZN7VECTOR3aSERS_( &COL$1, vr$122 );
  double vr$126 = _Z3EXPd( (T$ * T$) * -0x1.0624DD2F1A9FCp-9 );
  _ZN7VECTOR3C1Eddd( &TMP$2121$2, 0x1.999999999999Ap-1, 0x1.CCCCCCCCCCCCDp-1, 0x1.p+0 );
  struct $7VECTOR3* vr$133 = _Z3MIXR7VECTOR3S0_d( &TMP$2122$2, &COL$1, &TMP$2121$2, -vr$126 + 0x1.p+0 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$133 );
 }
 label$2328:;
 struct $7VECTOR3* vr$137 = _Z5CLAMPR7VECTOR3dd( &TMP$2124$1, &COL$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR3C1ERS_( tmp$2082$1, vr$137 );
 goto label$2327;
 label$2327:;
 return tmp$2082$1;
}

struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2125$1;
 struct $7VECTOR3 TMP$2126$1;
 struct $7VECTOR3 TMP$2127$1;
 struct $7VECTOR3 TMP$2128$1;
 struct $7VECTOR3 TMP$2129$1;
 struct $7VECTOR3 TMP$2130$1;
 struct $7VECTOR3 TMP$2131$1;
 struct $4MAT3 fb$result$1;
 label$2332:;
 struct $7VECTOR3* vr$1 = _ZmiR7VECTOR3S0_( &TMP$2125$1, &TA$, &RO$ );
 struct $7VECTOR3* vr$3 = _Z9NORMALIZER7VECTOR3( &TMP$2126$1, vr$1 );
 _ZN7VECTOR3aSERS_( &CW$, vr$3 );
 _ZN7VECTOR3C1Eddd( &TMP$2127$1, __builtin_sin( CR$ ), __builtin_cos( CR$ ), 0x0p+0 );
 _ZN7VECTOR3aSERS_( &CP$, &TMP$2127$1 );
 struct $7VECTOR3* vr$9 = CROSS( &TMP$2128$1, &CW$, &CP$ );
 struct $7VECTOR3* vr$11 = _Z9NORMALIZER7VECTOR3( &TMP$2129$1, vr$9 );
 _ZN7VECTOR3aSERS_( &CU$, vr$11 );
 struct $7VECTOR3* vr$13 = CROSS( &TMP$2130$1, &CU$, &CW$ );
 struct $7VECTOR3* vr$15 = _Z9NORMALIZER7VECTOR3( &TMP$2131$1, vr$13 );
 _ZN7VECTOR3aSERS_( &CV$, vr$15 );
 _ZN4MAT3C1ER7VECTOR3S1_S1_( &fb$result$1, &CU$, &CV$, &CW$ );
 goto label$2333;
 label$2333:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T8SPECTRUMEd( struct $7VECTOR3* tmp$2133$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2134$1;
 double TMP$2135$1;
 double TMP$2136$1;
 double TMP$2137$1;
 double TMP$2138$1;
 double TMP$2139$1;
 double TMP$2140$1;
 double TMP$2141$1;
 double TMP$2142$1;
 double TMP$2143$1;
 double TMP$2144$1;
 double TMP$2145$1;
 double TMP$2146$1;
 double TMP$2147$1;
 double TMP$2148$1;
 double TMP$2149$1;
 label$2334:;
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 if( X$1 >= 0x1.47AE147AE147Bp-3 ) goto label$2339;
 double vr$3 = _Z10SMOOTHSTEPddd( 0x0p+0, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2137$1 = vr$3 * 0x1.5A1CAC083126Fp-3;
 goto label$2352;
 label$2339:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2338;
 double vr$5 = _Z10SMOOTHSTEPddd( 0x1.C28F5C28F5C29p-3, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2136$1 = (vr$5 * 0x1.126E978D4FDF4p-3) + 0x1.1EB851EB851ECp-5;
 goto label$2353;
 label$2338:;
 if( X$1 >= 0x1.A3D70A3D70A3Dp-2 ) goto label$2337;
 double vr$8 = _Z10SMOOTHSTEPddd( 0x1.C28F5C28F5C29p-3, 0x1.A3D70A3D70A3Dp-2, X$1 );
 TMP$2135$1 = (vr$8 * 0x1.916872B020C4Ap-4) + 0x1.1EB851EB851ECp-5;
 goto label$2354;
 label$2337:;
 if( X$1 >= 0x1.47AE147AE147Bp-1 ) goto label$2336;
 double vr$11 = _Z10SMOOTHSTEPddd( 0x1.A3D70A3D70A3Dp-2, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2134$1 = (vr$11 * 0x1.B3B645A1CAC08p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2355;
 label$2336:;
 double vr$14 = _Z10SMOOTHSTEPddd( 0x1.p+0, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2134$1 = vr$14 * 0x1.F7CED916872Bp-1;
 label$2355:;
 TMP$2135$1 = TMP$2134$1;
 label$2354:;
 TMP$2136$1 = TMP$2135$1;
 label$2353:;
 TMP$2137$1 = TMP$2136$1;
 label$2352:;
 R$1 = TMP$2137$1;
 if( X$1 >= 0x1.999999999999Ap-5 ) goto label$2343;
 TMP$2141$1 = 0x0p+0;
 goto label$2356;
 label$2343:;
 if( X$1 >= 0x1.3333333333333p-3 ) goto label$2342;
 double vr$16 = _Z10SMOOTHSTEPddd( 0x1.999999999999Ap-5, 0x1.3333333333333p-3, X$1 );
 TMP$2140$1 = vr$16 * 0x1.810624DD2F1AAp-5;
 goto label$2357;
 label$2342:;
 if( X$1 >= 0x1.CCCCCCCCCCCCDp-2 ) goto label$2341;
 double vr$18 = _Z10SMOOTHSTEPddd( 0x1.3333333333333p-3, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2139$1 = (vr$18 * 0x1.C395810624DD3p-1) + 0x1.810624DD2F1AAp-5;
 goto label$2358;
 label$2341:;
 if( X$1 >= 0x1.6666666666666p-1 ) goto label$2340;
 double vr$21 = _Z10SMOOTHSTEPddd( 0x1.6666666666666p-1, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2138$1 = (vr$21 * 0x1.978D4FDF3B646p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2359;
 label$2340:;
 double vr$24 = _Z10SMOOTHSTEPddd( 0x1.p+0, 0x1.6666666666666p-1, X$1 );
 TMP$2138$1 = vr$24 * 0x1.10624DD2F1AAp-3;
 label$2359:;
 TMP$2139$1 = TMP$2138$1;
 label$2358:;
 TMP$2140$1 = TMP$2139$1;
 label$2357:;
 TMP$2141$1 = TMP$2140$1;
 label$2356:;
 G$1 = TMP$2141$1;
 if( X$1 >= 0x1.70A3D70A3D70Ap-3 ) goto label$2351;
 double vr$26 = _Z10SMOOTHSTEPddd( 0x0p+0, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2149$1 = vr$26 * 0x1.p-1;
 goto label$2360;
 label$2351:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2350;
 double vr$28 = _Z10SMOOTHSTEPddd( 0x1.C28F5C28F5C29p-3, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2148$1 = (vr$28 * 0x1.999999999999Ap-4) + 0x1.999999999999Ap-2;
 goto label$2361;
 label$2350:;
 if( X$1 >= 0x1.6666666666666p-2 ) goto label$2349;
 double vr$31 = _Z10SMOOTHSTEPddd( 0x1.C28F5C28F5C29p-3, 0x1.6666666666666p-2, X$1 );
 TMP$2147$1 = (vr$31 * 0x1.E353F7CED9168p-5) + 0x1.999999999999Ap-2;
 goto label$2362;
 label$2349:;
 if( X$1 >= 0x1.147AE147AE148p-1 ) goto label$2348;
 double vr$34 = _Z10SMOOTHSTEPddd( 0x1.147AE147AE148p-1, 0x1.6666666666666p-2, X$1 );
 TMP$2146$1 = (vr$34 * 0x1.5604189374BC7p-2) + 0x1.p-3;
 goto label$2363;
 label$2348:;
 if( X$1 >= 0x1.3333333333333p-1 ) goto label$2347;
 double vr$37 = _Z10SMOOTHSTEPddd( 0x1.147AE147AE148p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2145$1 = (vr$37 * 0x1.5A1CAC083126Fp-3) + 0x1.p-3;
 goto label$2364;
 label$2347:;
 if( X$1 >= 0x1.6147AE147AE14p-1 ) goto label$2346;
 double vr$40 = _Z10SMOOTHSTEPddd( 0x1.6147AE147AE14p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2144$1 = (vr$40 * 0x1.F1A9FBE76C8B4p-3) + 0x1.A1CAC083126E9p-5;
 goto label$2365;
 label$2346:;
 if( X$1 >= 0x1.70A3D70A3D70Ap-1 ) goto label$2345;
 double vr$43 = _Z10SMOOTHSTEPddd( 0x1.6147AE147AE14p-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2143$1 = (vr$43 * 0x1.604189374BC6Ap-5) + 0x1.A1CAC083126E9p-5;
 goto label$2366;
 label$2345:;
 if( X$1 >= 0x1.C7AE147AE147Bp-1 ) goto label$2344;
 double vr$46 = _Z10SMOOTHSTEPddd( 0x1.C7AE147AE147Bp-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2142$1 = vr$46 * 0x1.810624DD2F1AAp-4;
 goto label$2367;
 label$2344:;
 TMP$2142$1 = 0x0p+0;
 label$2367:;
 TMP$2143$1 = TMP$2142$1;
 label$2366:;
 TMP$2144$1 = TMP$2143$1;
 label$2365:;
 TMP$2145$1 = TMP$2144$1;
 label$2364:;
 TMP$2146$1 = TMP$2145$1;
 label$2363:;
 TMP$2147$1 = TMP$2146$1;
 label$2362:;
 TMP$2148$1 = TMP$2147$1;
 label$2361:;
 TMP$2149$1 = TMP$2148$1;
 label$2360:;
 B$1 = TMP$2149$1;
 _ZN7VECTOR3C1Eddd( tmp$2133$1, R$1, G$1, B$1 );
 goto label$2335;
 label$2335:;
 return tmp$2133$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12SPECTRUMPOLYEd( struct $7VECTOR3* tmp$2151$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 struct $7VECTOR3 TMP$2152$1;
 struct $7VECTOR3 TMP$2153$1;
 struct $7VECTOR3 TMP$2154$1;
 struct $7VECTOR3 TMP$2155$1;
 struct $7VECTOR3 TMP$2156$1;
 struct $7VECTOR3 TMP$2157$1;
 struct $7VECTOR3 TMP$2158$1;
 struct $7VECTOR3 TMP$2159$1;
 struct $7VECTOR3 TMP$2160$1;
 struct $7VECTOR3 TMP$2161$1;
 struct $7VECTOR3 TMP$2162$1;
 struct $7VECTOR3 TMP$2163$1;
 struct $7VECTOR3 TMP$2164$1;
 struct $7VECTOR3 TMP$2165$1;
 struct $7VECTOR3 TMP$2166$1;
 struct $7VECTOR3 TMP$2167$1;
 struct $7VECTOR3 TMP$2168$1;
 struct $7VECTOR3 TMP$2169$1;
 struct $7VECTOR3 TMP$2170$1;
 struct $7VECTOR3 TMP$2171$1;
 struct $7VECTOR3 TMP$2172$1;
 struct $7VECTOR3 TMP$2173$1;
 struct $7VECTOR3 TMP$2174$1;
 struct $7VECTOR3 TMP$2175$1;
 struct $7VECTOR3 TMP$2176$1;
 struct $7VECTOR3 TMP$2177$1;
 label$2368:;
 _ZN7VECTOR3C1Eddd( &TMP$2160$1, 0x1.CF6DFBE76C8B4p+11, -0x1.558B333333333p+10, 0x1.2898ED916872Bp+11 );
 struct $7VECTOR3* vr$3 = _ZmlR7VECTOR3d( &TMP$2161$1, &TMP$2160$1, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2159$1, -0x1.05C95C28F5C29p+14, 0x1.DAA7851EB851Fp+12, -0x1.61B2147AE147Bp+13 );
 struct $7VECTOR3* vr$7 = _ZplR7VECTOR3S0_( &TMP$2162$1, &TMP$2159$1, vr$3 );
 struct $7VECTOR3* vr$9 = _ZmlR7VECTOR3d( &TMP$2163$1, vr$7, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2158$1, 0x1.DF688F5C28F5Cp+14, -0x1.096070A3D70A4p+14, 0x1.5C68666666666p+14 );
 struct $7VECTOR3* vr$13 = _ZplR7VECTOR3S0_( &TMP$2164$1, &TMP$2158$1, vr$9 );
 struct $7VECTOR3* vr$15 = _ZmlR7VECTOR3d( &TMP$2165$1, vr$13, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2157$1, -0x1.C5DDC28F5C28Fp+14, 0x1.33BFA3D70A3D7p+14, -0x1.6C213D70A3D71p+14 );
 struct $7VECTOR3* vr$19 = _ZplR7VECTOR3S0_( &TMP$2166$1, &TMP$2157$1, vr$15 );
 struct $7VECTOR3* vr$21 = _ZmlR7VECTOR3d( &TMP$2167$1, vr$19, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2156$1, 0x1.D544666666666p+13, -0x1.8B31AE147AE14p+13, 0x1.ADC4CCCCCCCCDp+13 );
 struct $7VECTOR3* vr$25 = _ZplR7VECTOR3S0_( &TMP$2168$1, &TMP$2156$1, vr$21 );
 struct $7VECTOR3* vr$27 = _ZmlR7VECTOR3d( &TMP$2169$1, vr$25, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2155$1, -0x1.0190D916872Bp+12, 0x1.1502AC083126Fp+12, -0x1.16F283126E979p+12 );
 struct $7VECTOR3* vr$31 = _ZplR7VECTOR3S0_( &TMP$2170$1, &TMP$2155$1, vr$27 );
 struct $7VECTOR3* vr$33 = _ZmlR7VECTOR3d( &TMP$2171$1, vr$31, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2154$1, 0x1.109178D4FDF3Bp+9, -0x1.8C1683E425AEEp+9, 0x1.5C5837B4A233Ap+9 );
 struct $7VECTOR3* vr$37 = _ZplR7VECTOR3S0_( &TMP$2172$1, &TMP$2154$1, vr$33 );
 struct $7VECTOR3* vr$39 = _ZmlR7VECTOR3d( &TMP$2173$1, vr$37, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2153$1, -0x1.DA66666666666p+4, 0x1.10433EFF19503p+6, -0x1.2080639D5E4A4p+5 );
 struct $7VECTOR3* vr$43 = _ZplR7VECTOR3S0_( &TMP$2174$1, &TMP$2153$1, vr$39 );
 struct $7VECTOR3* vr$45 = _ZmlR7VECTOR3d( &TMP$2175$1, vr$43, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2152$1, 0x1.38536D655E28Bp+0, -0x1.EEEB3DD11BE6Ep+0, 0x1.9FAFC8B0079A3p+0 );
 struct $7VECTOR3* vr$49 = _ZplR7VECTOR3S0_( &TMP$2176$1, &TMP$2152$1, vr$45 );
 struct $7VECTOR3* vr$51 = _ZmlR7VECTOR3d( &TMP$2177$1, vr$49, X$1 );
 _ZN7VECTOR3C1ERS_( tmp$2151$1, vr$51 );
 goto label$2369;
 label$2369:;
 return tmp$2151$1;
}

void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2178$1;
 struct $7VECTOR2 TMP$2179$1;
 struct $7VECTOR2 TMP$2180$1;
 double TMP$2181$1;
 struct $7VECTOR2 TMP$2182$1;
 double TMP$2183$1;
 struct $7VECTOR3 TMP$2184$1;
 struct $7VECTOR3 TMP$2185$1;
 struct $7VECTOR3 TMP$2186$1;
 struct $7VECTOR2 TMP$2187$1;
 struct $7VECTOR3 TMP$2188$1;
 struct $7VECTOR3 TMP$2189$1;
 struct $7VECTOR3 TMP$2190$1;
 struct $7VECTOR4 TMP$2191$1;
 struct $7VECTOR3 TMP$2192$1;
 struct $7VECTOR3 TMP$2193$1;
 label$2370:;
 RTIME$ = IGLOBALTIME$;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2178$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2179$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2aSERS_( &Q$, vr$5 );
 TMP$2183$1 = 0x1.p+0;
 TMP$2181$1 = 0x1.p+1;
 struct $7VECTOR2* vr$9 = _ZmlR7VECTOR2Rd( &TMP$2180$1, &Q$, &TMP$2181$1 );
 struct $7VECTOR2* vr$11 = _ZmiR7VECTOR2Rd( &TMP$2182$1, vr$9, &TMP$2183$1 );
 _ZN7VECTOR2aSERS_( &P2$, vr$11 );
 *(double*)&P2$ = *(double*)&P2$ * (*(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll));
 _ZN7VECTOR3C1Eddd( &TMP$2184$1, __builtin_cos( RTIME$ ) * 0x1.p+1, 0x1.p+0, __builtin_sin( RTIME$ ) * 0x1.p+1 );
 _ZN7VECTOR3aSERS_( &RO$, &TMP$2184$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2185$1, -0x1.p-1, -0x1.999999999999Ap-2, 0x1.p-1 );
 _ZN7VECTOR3aSERS_( &TA$, &TMP$2185$1 );
 CR$ = 0x0p+0;
 struct $4MAT3 vr$22 = _ZN12SYSTEM_BUS_T9SETCAMERAEv( THIS$1 );
 CA$ = vr$22;
 struct $7VECTOR2* vr$24 = _ZN7VECTOR22XYEv( &TMP$2187$1, &P2$ );
 _ZN7VECTOR3C1ER7VECTOR2d( &TMP$2186$1, vr$24, 0x1.p+1 );
 struct $7VECTOR3* vr$28 = _Z9NORMALIZER7VECTOR3( &TMP$2188$1, &TMP$2186$1 );
 struct $7VECTOR3* vr$30 = _ZmlR4MAT3R7VECTOR3( &TMP$2189$1, &CA$, vr$28 );
 _ZN7VECTOR3aSERS_( &RD$, vr$30 );
 struct $7VECTOR3 COL$1;
 struct $7VECTOR3* vr$32 = _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( &TMP$2190$1, THIS$1 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$32 );
 _ZN7VECTOR3C1Ed( &TMP$2192$1, 0x1.D16872B020C4Ap-2 );
 struct $7VECTOR3* vr$38 = _Z3POWR7VECTOR3S0_( &TMP$2193$1, &COL$1, &TMP$2192$1 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2191$1, vr$38, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2191$1 );
 label$2371:;
}

void _ZN12SYSTEM_BUS_T10_MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2194$1;
 struct $7VECTOR2 TMP$2195$1;
 struct $7VECTOR4 TMP$2196$1;
 label$2372:;
 struct $7VECTOR2 UV$1;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2194$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2195$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2C1ERS_( &UV$1, vr$5 );
 _ZN7VECTOR4C1ER7VECTOR2dd( &TMP$2196$1, &UV$1, (__builtin_sin( IGLOBALTIME$ ) * 0x1.p-1) + 0x1.p-1, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2196$1 );
 label$2373:;
}

void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2374:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 1920ull;
 SCR_H$ = 1080ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2376:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2377;
 {
  FBSTRING TMP$2201$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2197$3;
   TMP$2197$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2378;
   label$2381:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2198$5;
     TMP$2198$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2382;
     label$2385:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint32 vr$21 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
     }
     label$2383:;
     X$5 = X$5 + 1ull;
     label$2382:;
     if( X$5 <= TMP$2198$5 ) goto label$2385;
     label$2384:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   }
   label$2379:;
   Y$3 = Y$3 + 1ull;
   label$2378:;
   if( Y$3 <= TMP$2197$3 ) goto label$2381;
   label$2380:;
  }
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$32 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2201$2, 0, 24ll );
  FBSTRING* vr$35 = fb_StrConcat( &TMP$2201$2, (void*)"frame: ", 8ll, (void*)vr$32, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$35 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2376;
 label$2377:;
 label$2375:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2386:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 40ull;
 SCR_H$ = 25ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2388:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2389;
 {
  FBSTRING TMP$2205$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2202$3;
   TMP$2202$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2390;
   label$2393:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2203$5;
     TMP$2203$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2394;
     label$2397:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint32 vr$21 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D6p+15, 0x0p+0 );
     }
     label$2395:;
     X$5 = X$5 + 1ull;
     label$2394:;
     if( X$5 <= TMP$2203$5 ) goto label$2397;
     label$2396:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2391:;
   Y$3 = Y$3 + 1ull;
   label$2390:;
   if( Y$3 <= TMP$2202$3 ) goto label$2393;
   label$2392:;
  }
  *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2205$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2205$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2388;
 label$2389:;
 label$2387:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2398:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 90ull;
 SCR_H$ = 60ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2400:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2401;
 {
  FBSTRING TMP$2209$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2206$3;
   TMP$2206$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2402;
   label$2405:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2207$5;
     TMP$2207$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2406;
     label$2409:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint32 vr$21 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D8p+15, 0x0p+0 );
     }
     label$2407:;
     X$5 = X$5 + 1ull;
     label$2406:;
     if( X$5 <= TMP$2207$5 ) goto label$2409;
     label$2408:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2403:;
   Y$3 = Y$3 + 1ull;
   label$2402:;
   if( Y$3 <= TMP$2206$3 ) goto label$2405;
   label$2404:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2209$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2209$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2400;
 label$2401:;
 label$2399:;
}

void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2410:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 120ull;
 SCR_H$ = 60ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2412:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2413;
 {
  FBSTRING TMP$2213$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2210$3;
   TMP$2210$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2414;
   label$2417:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2211$5;
     TMP$2211$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2418;
     label$2421:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint32 vr$21 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
     }
     label$2419:;
     X$5 = X$5 + 1ull;
     label$2418:;
     if( X$5 <= TMP$2211$5 ) goto label$2421;
     label$2420:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2415:;
   Y$3 = Y$3 + 1ull;
   label$2414:;
   if( Y$3 <= TMP$2210$3 ) goto label$2417;
   label$2416:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2213$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2213$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2412;
 label$2413:;
 label$2411:;
}

void _ZN12SYSTEM_BUS_T11DRIVER_LOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2422:;
 label$2424:;
 goto label$2425;
 {
  fb_GfxLock( );
 }
 goto label$2424;
 label$2425:;
 label$2423:;
}

void _ZN12SYSTEM_BUS_T13DRIVER_UNLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2426:;
 label$2428:;
 goto label$2429;
 {
  fb_GfxUnlock( -1, -1 );
 }
 goto label$2428;
 label$2429:;
 label$2427:;
}

double* _ZN12SYSTEM_BUS_T19MEM64_STATIC_MALLOCEm( struct $12SYSTEM_BUS_T* THIS$1, uint64 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2430:;
 SIZE$1 = SIZE$1 + 7ull;
 SIZE$1 = SIZE$1 - (SIZE$1 & 7ull);
 if( (double*)(int64)-(MEM_STATIC_POINTER$ == (double*)((uint8*)MEM_STATIC_POINTER$ + ((int64)SIZE$1 << (3ll & 63ll)))) >= MEM_STATIC_LIMIT$ ) goto label$2433;
 {
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2431;
 }
 label$2433:;
 label$2432:;
 MEM_STATIC_SIZE$ = (MEM_STATIC_SIZE$ << (1ll & 63ll)) + SIZE$1;
 void* vr$11 = malloc( MEM_STATIC_SIZE$ );
 MEM_STATIC$ = (double*)vr$11;
 if( MEM_STATIC$ == (double*)0ull ) goto label$2435;
 {
  MEM_STATIC_POINTER$ = (double*)((uint8*)MEM_STATIC$ + ((int64)SIZE$1 << (3ll & 63ll)));
  MEM_STATIC_LIMIT$ = (double*)((uint8*)MEM_STATIC$ + ((int64)MEM_STATIC_SIZE$ << (3ll & 63ll)));
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2431;
 }
 goto label$2434;
 label$2435:;
 {
  label$2436:;
  void* vr$18 = fb_ErrorThrowEx( 504, 1485, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$18;
  label$2437:;
 }
 label$2434:;
 label$2431:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T20MEM64_STATIC_RESTOREEPd( struct $12SYSTEM_BUS_T* THIS$1, double* RESTORE_POINT$1 )
{
 label$2438:;
 if( ((int64)-(RESTORE_POINT$1 >= MEM_STATIC$) & (int64)-(RESTORE_POINT$1 <= MEM_STATIC_LIMIT$)) == 0ll ) goto label$2441;
 {
  MEM_STATIC_POINTER$ = RESTORE_POINT$1;
 }
 goto label$2440;
 label$2441:;
 {
  MEM_STATIC_POINTER$ = MEM_STATIC$;
 }
 label$2440:;
 label$2439:;
}

double* _ZN12SYSTEM_BUS_T20MEM64_DYNAMIC_MALLOCEm( struct $12SYSTEM_BUS_T* THIS$1, uint64 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2442:;
 static int64 I$1;
 static double* TOP$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* NEWLINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( SIZE$1 <= 65536ull ) goto label$2445;
 {
  label$2446:;
  void* vr$1 = fb_ErrorThrowEx( 505, 1515, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$1;
  label$2447:;
 }
 label$2445:;
 label$2444:;
 if( SIZE$1 == 0ull ) goto label$2449;
 {
  if( (SIZE$1 & 15ull) == 0ull ) goto label$2451;
  {
   SIZE$1 = (SIZE$1 - (SIZE$1 & 15ull)) + 16ull;
  }
  label$2451:;
  label$2450:;
 }
 goto label$2448;
 label$2449:;
 {
  fb$result$1 = (double*)((uint8*)MEM64$ + 5242880ll);
  goto label$2443;
 }
 label$2448:;
 TOP$1 = (double*)((uint8*)MEM64$ + 5242880ll);
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 if( LINK$1 != MEM64_DYNAMIC_LINK_FIRST$ ) goto label$2453;
 {
  label$2454:;
  if( (uint64)(((int64)TOP$1 - *(int64*)((uint8*)LINK$1 + 8ll)) / 8ll) < SIZE$1 ) goto label$2456;
  {
   goto label$2457;
  }
  label$2456:;
  label$2455:;
  PREV_LINK$1 = LINK$1;
  TOP$1 = *(double**)LINK$1;
  if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2459;
  {
   goto label$2454;
  }
  label$2459:;
  label$2458:;
 }
 label$2453:;
 label$2452:;
 if( (uint64)(((int64)TOP$1 - (int64)MEM64_STATIC_POINTER$) / 8ll) >= SIZE$1 ) goto label$2461;
 {
  label$2462:;
  void* vr$13 = fb_ErrorThrowEx( 506, 1544, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$13;
  label$2463:;
 }
 label$2461:;
 label$2460:;
 MEM64_DYNAMIC_BASE$ = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 label$2457:;
 if( MEM64_DYNAMIC_FREE_LINK$ == 0ll ) goto label$2465;
 {
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + -1ll;
  I$1 = *(int64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll)));
 }
 goto label$2464;
 label$2465:;
 {
  MEM64_DYNAMIC_NEXT_LINK$ = MEM64_DYNAMIC_NEXT_LINK$ + 1ll;
  I$1 = MEM64_DYNAMIC_NEXT_LINK$;
  if( I$1 < 147136ll ) goto label$2467;
  {
   label$2468:;
   void* vr$19 = fb_ErrorThrowEx( 507, 1556, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$19;
   label$2469:;
  }
  label$2467:;
  label$2466:;
 }
 label$2464:;
 NEWLINK$1 = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((int64)(struct $23MEM64_DYNAMIC_LINK_TYPE*)MEM64_DYNAMIC_LINK$ + (I$1 * 40ll));
 *(uint64*)((uint8*)NEWLINK$1 + 24ll) = (uint64)I$1;
 *(double**)NEWLINK$1 = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 *(uint64*)((uint8*)NEWLINK$1 + 16ll) = SIZE$1;
 *(double**)((uint8*)NEWLINK$1 + 8ll) = TOP$1;
 if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2471;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll);
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = NEWLINK$1;
 }
 goto label$2470;
 label$2471:;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = MEM64_DYNAMIC_LINK_FIRST$;
  MEM64_DYNAMIC_LINK_FIRST$ = NEWLINK$1;
 }
 label$2470:;
 fb$result$1 = *(double**)NEWLINK$1;
 goto label$2443;
 label$2443:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T18MEM64_DYNAMIC_FREEEPd( struct $12SYSTEM_BUS_T* THIS$1, double* BLOCK$1 )
{
 label$2472:;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( MEM64_DYNAMIC_LINK_FIRST$ == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2475;
 {
  if( BLOCK$1 == (double*)0ull ) goto label$2477;
  {
   if( BLOCK$1 != (double*)((uint8*)MEM64$ + 5242880ll) ) goto label$2479;
   {
    goto label$2473;
   }
   label$2479:;
   label$2478:;
  }
  goto label$2476;
  label$2477:;
  {
   goto label$2473;
  }
  label$2476:;
 }
 goto label$2474;
 label$2475:;
 {
  goto label$2473;
 }
 label$2474:;
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 LINK$1 = MEM64_DYNAMIC_LINK_FIRST$;
 label$2480:;
 if( *(double**)LINK$1 != BLOCK$1 ) goto label$2482;
 {
  if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2484;
  {
   *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  goto label$2483;
  label$2484:;
  {
   MEM64_DYNAMIC_LINK_FIRST$ = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  label$2483:;
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + 1ll;
  *(uint64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll))) = *(uint64*)((uint8*)LINK$1 + 24ll);
  goto label$2473;
 }
 label$2482:;
 label$2481:;
 PREV_LINK$1 = LINK$1;
 if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2486;
 {
  goto label$2480;
 }
 label$2486:;
 label$2485:;
 goto label$2473;
 label$2473:;
}

void _ZN12SYSTEM_BUS_T10SUB_DEFSEGEll( struct $12SYSTEM_BUS_T* THIS$1, int64 SEGMENT$1, int64 PASSED$1 )
{
 label$2487:;
 if( NEW_ERROR$ == 0ull ) goto label$2490;
 {
  goto label$2488;
 }
 label$2490:;
 label$2489:;
 if( PASSED$1 == 0ll ) goto label$2492;
 {
  if( ((int64)-(SEGMENT$1 < -65536ll) | (int64)-(SEGMENT$1 > 65535ll)) == 0ll ) goto label$2494;
  {
   label$2495:;
   void* vr$3 = fb_ErrorThrowEx( 6, 1620, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$3;
   label$2496:;
  }
  goto label$2493;
  label$2494:;
  {
   DEFSEG$ = (double*)((uint8*)MEM64$ + ((int64)*(uint16*)SEGMENT$1 << (7ll & 63ll)));
  }
  label$2493:;
 }
 goto label$2491;
 label$2492:;
 {
  DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
  goto label$2488;
 }
 label$2491:;
 label$2488:;
}

int64 _ZN12SYSTEM_BUS_T9FUNC_PEEKEl( struct $12SYSTEM_BUS_T* THIS$1, int64 OFFSET$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2497:;
 if( ((int64)-(OFFSET$1 < -65536ll) | (int64)-(OFFSET$1 > 65535ll)) == 0ll ) goto label$2500;
 {
  label$2501:;
  void* vr$4 = fb_ErrorThrowEx( 6, 1632, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$4;
  label$2502:;
  fb$result$1 = 0ll;
  goto label$2498;
 }
 label$2500:;
 label$2499:;
 fb$result$1 = ((int64)__builtin_nearbyint( *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) ));
 goto label$2498;
 label$2498:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_POKEEll( struct $12SYSTEM_BUS_T* THIS$1, int64 OFFSET$1, int64 VALUE$1 )
{
 label$2503:;
 if( NEW_ERROR$ == 0ull ) goto label$2506;
 {
  goto label$2504;
 }
 label$2506:;
 label$2505:;
 if( ((int64)-(OFFSET$1 < -65536ll) | (int64)-(OFFSET$1 > 65535ll)) == 0ll ) goto label$2508;
 {
  label$2509:;
  void* vr$3 = fb_ErrorThrowEx( 6, 1644, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$3;
  label$2510:;
  goto label$2504;
 }
 label$2508:;
 label$2507:;
 *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) = (double)VALUE$1;
 label$2504:;
}

void _ZN12SYSTEM_BUS_T18MORE_RETURN_POINTSEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2511:;
 if( RETURN_POINTS$ <= 2147483647ull ) goto label$2514;
 {
  label$2515:;
  void* vr$0 = fb_ErrorThrowEx( 256, 1652, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$0;
  label$2516:;
 }
 label$2514:;
 label$2513:;
 RETURN_POINTS$ = RETURN_POINTS$ << (1ull & 63ll);
 void* vr$3 = realloc( (void*)RETURN_POINT$, RETURN_POINTS$ << (2ull & 63ll) );
 RETURN_POINT$ = *(uint64**)vr$3;
 if( RETURN_POINT$ != (uint64*)0ull ) goto label$2518;
 {
  label$2519:;
  void* vr$4 = fb_ErrorThrowEx( 256, 1657, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$4;
  label$2520:;
 }
 label$2518:;
 label$2517:;
 label$2512:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2521:;
 if( QBS_MALLOC_FREED_NUM$ == 0ull ) goto label$2524;
 {
  QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 18446744073709551615ull;
  void* vr$4 = memset( (void*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))), 0, 80ull );
  fb$result$1 = (struct $3QBS*)vr$4;
  goto label$2522;
 }
 label$2524:;
 label$2523:;
 if( QBS_MALLOC_NEXT$ != 65536ull ) goto label$2526;
 {
  void* vr$5 = calloc( 5242880ull, 1ull );
  QBS_MALLOC$ = (struct $3QBS*)vr$5;
  QBS_MALLOC_NEXT$ = 0ull;
 }
 label$2526:;
 label$2525:;
 QBS_MALLOC_NEXT$ = QBS_MALLOC_NEXT$ + 1ull;
 fb$result$1 = (struct $3QBS*)((uint8*)QBS_MALLOC$ + ((int64)QBS_MALLOC_NEXT$ * 80ll));
 goto label$2522;
 label$2522:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T19QBS_FREE_DESCRIPTOREP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* STR_DATA$1 )
{
 label$2527:;
 if( QBS_MALLOC_FREED_NUM$ != QBS_MALLOC_FREED_SIZE$ ) goto label$2530;
 {
  QBS_MALLOC_FREED_SIZE$ = QBS_MALLOC_FREED_SIZE$ << (1ull & 63ll);
  void* vr$2 = realloc( (void*)QBS_MALLOC_FREED$, QBS_MALLOC_FREED_SIZE$ << (3ull & 63ll) );
  QBS_MALLOC_FREED$ = (int64*)vr$2;
  if( QBS_MALLOC_FREED$ == (int64*)0ull ) goto label$2532;
  {
  }
  goto label$2531;
  label$2532:;
  {
   label$2533:;
   void* vr$3 = fb_ErrorThrowEx( 508, 1696, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$3;
   label$2534:;
  }
  label$2531:;
 }
 label$2530:;
 label$2529:;
 *(int64*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))) = (int64)STR_DATA$1;
 QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 1ull;
 goto label$2528;
 label$2528:;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxll( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int64 INDEX$1, int64 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2535:;
 if( (((int64)-(INDEX$1 < 1ll) | (int64)-(INDEX$1 > NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$2538;
 {
  label$2539:;
  void* vr$8 = fb_ErrorThrowEx( 9, 2624, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$2540:;
  fb$result$1 = 0ll;
  goto label$2536;
 }
 label$2538:;
 label$2537:;
 INDEX$1 = (NUM_INDEXES$1 - INDEX$1) + 1ll;
 fb$result$1 = *(int64*)((uint8*)ARRAY$1 + (INDEX$1 << (5ll & 63ll)));
 goto label$2536;
 label$2536:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxll( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int64 INDEX$1, int64 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2541:;
 if( (((int64)-(INDEX$1 < 1ll) | (int64)-(INDEX$1 > NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$2544;
 {
  label$2545:;
  void* vr$8 = fb_ErrorThrowEx( 9, 2633, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$2546:;
  fb$result$1 = 0ll;
  goto label$2542;
 }
 label$2544:;
 label$2543:;
 INDEX$1 = (NUM_INDEXES$1 - INDEX$1) + 1ll;
 fb$result$1 = (*(int64*)((uint8*)ARRAY$1 + (INDEX$1 << (5ll & 63ll))) + *(int64*)((uint8*)((uint8*)ARRAY$1 + (INDEX$1 << (5ll & 63ll))) + 8ll)) + -1ll;
 goto label$2542;
 label$2542:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2547:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 TEMP$1;
 TEMP$1 = 0ll;
 if( F$1 <= 0x1.p+63 ) goto label$2550;
 {
  TEMP$1 = 1ll;
  F$1 = F$1 + -0x1.p+63;
 }
 label$2550:;
 label$2549:;
 if( F$1 >= 0x0p+0 ) goto label$2552;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
 }
 goto label$2551;
 label$2552:;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
 }
 label$2551:;
 if( TEMP$1 == 0ll ) goto label$2554;
 {
  fb$result$1 = I$1 | -9223372036854775808ull;
  goto label$2548;
 }
 label$2554:;
 label$2553:;
 fb$result$1 = I$1;
 goto label$2548;
 label$2548:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T24QBR_LONGDOUBLE_TO_UINT64Ed( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2555:;
 if( F$1 >= 0x0p+0 ) goto label$2558;
 {
  fb$result$1 = ((uint64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2556;
 }
 goto label$2557;
 label$2558:;
 {
  fb$result$1 = ((uint64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2556;
 }
 label$2557:;
 label$2556:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T17QBR_FLOAT_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2559:;
 if( F$1 >= 0x0p+0 ) goto label$2562;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2560;
 }
 goto label$2561;
 label$2562:;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2560;
 }
 label$2561:;
 label$2560:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2563:;
 if( F$1 >= 0x0p+0 ) goto label$2566;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2564;
 }
 goto label$2565;
 label$2566:;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2564;
 }
 label$2565:;
 label$2564:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T10FPU_REINITEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2567:;
 label$2568:;
}

void _ZN12SYSTEM_BUS_T10SUB__BLINKEl( struct $12SYSTEM_BUS_T* THIS$1, int64 ONOFF$1 )
{
 label$2569:;
 if( ONOFF$1 != 1ll ) goto label$2572;
 {
  H3C0_BLINK_ENABLE$ = 1ll;
 }
 goto label$2571;
 label$2572:;
 {
  H3C0_BLINK_ENABLE$ = 0ll;
 }
 label$2571:;
 label$2570:;
}

int64 _ZN12SYSTEM_BUS_T11FUNC__BLINKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2573:;
 fb$result$1 = -H3C0_BLINK_ENABLE$;
 goto label$2574;
 label$2574:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T7SUB_OUTEll( struct $12SYSTEM_BUS_T* THIS$1, int64 PORT$1, int64 DATA_OUT$1 )
{
 label$2575:;
 if( NEW_ERROR$ == 0ull ) goto label$2578;
 {
  goto label$2576;
 }
 label$2578:;
 label$2577:;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 PORT$1 = PORT$1 & 65535ll;
 DATA_OUT$1 = DATA_OUT$1 & 255ll;
 if( PORT$1 != 960ll ) goto label$2580;
 {
  H3C0_BLINK_ENABLE$ = DATA_OUT$1 & 8ll;
  goto label$2581;
 }
 label$2580:;
 label$2579:;
 if( PORT$1 != 967ll ) goto label$2583;
 {
  H3C7_PALETTE_REGISTER_READ_INDEX$ = DATA_OUT$1;
  H3C9_READ_NEXT$ = 0ll;
  goto label$2581;
 }
 label$2583:;
 label$2582:;
 if( PORT$1 != 968ll ) goto label$2585;
 {
  H3C8_PALETTE_REGISTER_INDEX$ = DATA_OUT$1;
  H3C9_NEXT$ = 0ll;
  goto label$2581;
 }
 label$2585:;
 label$2584:;
 if( PORT$1 != 969ll ) goto label$2587;
 {
  DATA_OUT$1 = DATA_OUT$1 & 63ll;
  if( *(uint64**)((uint8*)WRITE_PAGE$ + 112ll) == (uint64*)0ull ) goto label$2589;
  {
   if( H3C9_NEXT$ != 0ll ) goto label$2591;
   {
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) & 4278255615ull;
    int64 vr$18 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) + (uint64)(vr$18 << (16ll & 63ll));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8004p+15, (double)DATA_OUT$1 );
   }
   label$2591:;
   label$2590:;
   if( H3C9_NEXT$ != 1ll ) goto label$2593;
   {
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) & 4278255615ull;
    int64 vr$39 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) + (uint64)(vr$39 << (8ll & 63ll));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8006p+15, (double)DATA_OUT$1 );
   }
   label$2593:;
   label$2592:;
   if( H3C9_NEXT$ != 2ll ) goto label$2595;
   {
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) & 4278255615ull;
    int64 vr$60 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) = *(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (3ll & 63ll))) + (uint64)vr$60;
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8008p+15, (double)DATA_OUT$1 );
   }
   label$2595:;
   label$2594:;
  }
  label$2589:;
  label$2588:;
  H3C9_NEXT$ = H3C9_NEXT$ + 1ll;
  if( H3C9_NEXT$ != 3ll ) goto label$2597;
  {
   H3C9_NEXT$ = 0ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ + 1ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ & 255ll;
  }
  label$2597:;
  label$2596:;
  goto label$2581;
 }
 label$2587:;
 label$2586:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 label$2581:;
 goto label$2576;
 label$2598:;
 label$2599:;
 void* vr$70 = fb_ErrorThrowEx( 5, 2792, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$70;
 label$2600:;
 label$2576:;
}

int64 _ZN12SYSTEM_BUS_T8FUNC_INPEl( struct $12SYSTEM_BUS_T* THIS$1, int64 PORT$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2601:;
 static int64 VALUE$1;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 if( ((int64)-(PORT$1 > 65535ll) | (int64)-(PORT$1 < -65536ll)) == 0ll ) goto label$2604;
 {
  label$2605:;
  void* vr$4 = fb_ErrorThrowEx( 6, 2799, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$4;
  label$2606:;
  fb$result$1 = 0ll;
  goto label$2602;
 }
 label$2604:;
 label$2603:;
 PORT$1 = PORT$1 & 65535ll;
 if( PORT$1 != 969ll ) goto label$2608;
 {
  if( *(uint64**)((uint8*)WRITE_PAGE$ + 112ll) == (uint64*)0ull ) goto label$2610;
  {
   if( H3C9_READ_NEXT$ != 0ll ) goto label$2612;
   {
    int64 vr$15 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)((*(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (3ll & 63ll))) >> (16ll & 63ll)) & 255ull) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$15;
   }
   label$2612:;
   label$2611:;
   if( H3C9_READ_NEXT$ != 1ll ) goto label$2614;
   {
    int64 vr$24 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)((*(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (3ll & 63ll))) >> (8ll & 63ll)) & 255ull) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$24;
   }
   label$2614:;
   label$2613:;
   if( H3C9_READ_NEXT$ != 2ll ) goto label$2616;
   {
    int64 vr$32 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)(*(uint64*)((uint8*)*(uint64**)((uint8*)WRITE_PAGE$ + 112ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (3ll & 63ll))) & 255ull) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$32;
   }
   label$2616:;
   label$2615:;
   H3C9_READ_NEXT$ = H3C9_READ_NEXT$ + 1ll;
   if( H3C9_READ_NEXT$ != 3ll ) goto label$2618;
   {
    H3C9_READ_NEXT$ = 0ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ + 1ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ & 255ll;
   }
   label$2618:;
   label$2617:;
   fb$result$1 = VALUE$1;
   goto label$2602;
  }
  label$2610:;
  label$2609:;
  fb$result$1 = 0ll;
  goto label$2602;
 }
 label$2608:;
 label$2607:;
 if( PORT$1 != 986ll ) goto label$2620;
 {
  VALUE$1 = 0ll;
  if( (VERTICAL_RETRACE_HAPPENED$ | VERTICAL_RETRACE_IN_PROGRESS$) == 0ll ) goto label$2622;
  {
   VERTICAL_RETRACE_HAPPENED$ = 0ll;
   VALUE$1 = VALUE$1 | 8ll;
  }
  label$2622:;
  label$2621:;
  fb$result$1 = VALUE$1;
  goto label$2602;
 }
 label$2620:;
 label$2619:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 fb$result$1 = 0ll;
 goto label$2602;
 label$2602:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_WAITEllll( struct $12SYSTEM_BUS_T* THIS$1, int64 PORT$1, int64 ANDEXPRESSION$1, int64 XOREXPRESSION$1, int64 PASSED$1 )
{
 label$2623:;
 if( NEW_ERROR$ == 0ull ) goto label$2626;
 {
  goto label$2624;
 }
 label$2626:;
 label$2625:;
 static int64 VALUE$1;
 if( ((int64)-(PORT$1 > 65535ll) | (int64)-(PORT$1 < -65536ll)) == 0ll ) goto label$2628;
 {
  label$2629:;
  void* vr$3 = fb_ErrorThrowEx( 6, 2882, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$3;
  label$2630:;
  goto label$2624;
 }
 label$2628:;
 label$2627:;
 PORT$1 = PORT$1 & 65535ll;
 if( ((int64)-(ANDEXPRESSION$1 < -32768ll) | (int64)-(ANDEXPRESSION$1 > 65535ll)) == 0ll ) goto label$2632;
 {
  label$2633:;
  void* vr$8 = fb_ErrorThrowEx( 6, 2887, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$2634:;
  goto label$2624;
 }
 label$2632:;
 label$2631:;
 ANDEXPRESSION$1 = ANDEXPRESSION$1 & 255ll;
 if( PASSED$1 == 0ll ) goto label$2636;
 {
  if( ((int64)-(XOREXPRESSION$1 < -32768ll) | (int64)-(XOREXPRESSION$1 > 65535ll)) == 0ll ) goto label$2638;
  {
   label$2639:;
   void* vr$13 = fb_ErrorThrowEx( 6, 2893, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$13;
   label$2640:;
   goto label$2624;
  }
  label$2638:;
  label$2637:;
 }
 label$2636:;
 label$2635:;
 XOREXPRESSION$1 = XOREXPRESSION$1 & 255ll;
 label$2641:;
 int64 vr$15 = _ZN12SYSTEM_BUS_T8FUNC_INPEl( THIS$1, PORT$1 );
 VALUE$1 = vr$15;
 if( PASSED$1 == 0ll ) goto label$2643;
 {
  VALUE$1 = VALUE$1 ^ XOREXPRESSION$1;
 }
 label$2643:;
 label$2642:;
 VALUE$1 = VALUE$1 & ANDEXPRESSION$1;
 if( ((VALUE$1 | UNSUPPORTED_PORT_ACCESSED$) | (int64)STOP_PROGRAM$) == 0ll ) goto label$2645;
 {
  goto label$2624;
 }
 label$2645:;
 label$2644:;
 fb_Sleep( 1 );
 goto label$2641;
 label$2624:;
}

void _ZN12SYSTEM_BUS_T6SWAP_8EPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* A$1, uint8* B$1 )
{
 label$2646:;
 uint8* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = A$1;
 A$1 = B$1;
 B$1 = X$1;
 label$2647:;
}

void _ZN12SYSTEM_BUS_T7SWAP_16EPtS0_( struct $12SYSTEM_BUS_T* THIS$1, uint16* A$1, uint16* B$1 )
{
 label$2648:;
 uint16* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 A$1 = B$1;
 B$1 = X$1;
 label$2649:;
}

void _ZN12SYSTEM_BUS_T7SWAP_32EPmS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64* A$1, uint64* B$1 )
{
 label$2650:;
 uint64* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = A$1;
 A$1 = B$1;
 B$1 = X$1;
 label$2651:;
}

void _ZN12SYSTEM_BUS_T7SWAP_64EPyS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64* A$1, uint64* B$1 )
{
 label$2652:;
 uint64* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = A$1;
 A$1 = B$1;
 B$1 = X$1;
 label$2653:;
}

void _ZN12SYSTEM_BUS_T15SWAP_LONGDOUBLEEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* A$1, double* B$1 )
{
 label$2654:;
 double* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = A$1;
 A$1 = B$1;
 B$1 = X$1;
 label$2655:;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHLEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2656:;
 fb$result$1 = A1$1 << (B1$1 & 63ll);
 goto label$2657;
 label$2657:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHREyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2658:;
 fb$result$1 = A1$1 >> (B1$1 & 63ll);
 goto label$2659;
 label$2659:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T13FUNC__READBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2660:;
 if( (A1$1 & (1ull << (B1$1 & 63ll))) == 0ull ) goto label$2663;
 {
  fb$result$1 = -1ll;
  goto label$2661;
 }
 goto label$2662;
 label$2663:;
 {
  fb$result$1 = 0ll;
  goto label$2661;
 }
 label$2662:;
 label$2661:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T12FUNC__SETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2664:;
 fb$result$1 = A1$1 | (1ull << (B1$1 & 63ll));
 goto label$2665;
 label$2665:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T14FUNC__RESETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2666:;
 fb$result$1 = A1$1 & ~(1ull << (B1$1 & 63ll));
 goto label$2667;
 label$2667:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T15FUNC__TOGGLEBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2668:;
 fb$result$1 = A1$1 ^ (1ull << (B1$1 & 63ll));
 goto label$2669;
 label$2669:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__RGB32Ellll( struct $12SYSTEM_BUS_T* THIS$1, int64 R$1, int64 G$1, int64 B$1, int64 A$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2670:;
 if( R$1 >= 0ll ) goto label$2673;
 {
  R$1 = 0ll;
  label$2673:;
 }
 if( R$1 <= 255ll ) goto label$2675;
 {
  R$1 = 255ll;
  label$2675:;
 }
 if( G$1 >= 0ll ) goto label$2677;
 {
  G$1 = 0ll;
  label$2677:;
 }
 if( G$1 <= 255ll ) goto label$2679;
 {
  G$1 = 255ll;
  label$2679:;
 }
 if( B$1 >= 0ll ) goto label$2681;
 {
  B$1 = 0ll;
  label$2681:;
 }
 if( B$1 <= 255ll ) goto label$2683;
 {
  B$1 = 255ll;
  label$2683:;
 }
 if( A$1 >= 0ll ) goto label$2685;
 {
  A$1 = 0ll;
  label$2685:;
 }
 if( A$1 <= 255ll ) goto label$2687;
 {
  A$1 = 255ll;
  label$2687:;
 }
 fb$result$1 = (uint64)((((A$1 << (24ll & 63ll)) + (R$1 << (16ll & 63ll))) + (G$1 << (8ll & 63ll))) + B$1);
 goto label$2671;
 label$2671:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__RGB32Elll( struct $12SYSTEM_BUS_T* THIS$1, int64 R$1, int64 G$1, int64 B$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2688:;
 if( R$1 >= 0ll ) goto label$2691;
 {
  R$1 = 0ll;
  label$2691:;
 }
 if( R$1 <= 255ll ) goto label$2693;
 {
  R$1 = 255ll;
  label$2693:;
 }
 if( G$1 >= 0ll ) goto label$2695;
 {
  G$1 = 0ll;
  label$2695:;
 }
 if( G$1 <= 255ll ) goto label$2697;
 {
  G$1 = 255ll;
  label$2697:;
 }
 if( B$1 >= 0ll ) goto label$2699;
 {
  B$1 = 0ll;
  label$2699:;
 }
 if( B$1 <= 255ll ) goto label$2701;
 {
  B$1 = 255ll;
  label$2701:;
 }
 fb$result$1 = (uint64)((((R$1 << (16ll & 63ll)) + (G$1 << (8ll & 63ll))) + B$1) | 4278190080ll);
 goto label$2689;
 label$2689:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__RGB32Ell( struct $12SYSTEM_BUS_T* THIS$1, int64 I$1, int64 A$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2702:;
 if( I$1 >= 0ll ) goto label$2705;
 {
  I$1 = 0ll;
  label$2705:;
 }
 if( I$1 <= 255ll ) goto label$2707;
 {
  I$1 = 255ll;
  label$2707:;
 }
 if( A$1 >= 0ll ) goto label$2709;
 {
  A$1 = 0ll;
  label$2709:;
 }
 if( A$1 <= 255ll ) goto label$2711;
 {
  A$1 = 255ll;
  label$2711:;
 }
 fb$result$1 = (uint64)((((A$1 << (24ll & 63ll)) + (I$1 << (16ll & 63ll))) + (I$1 << (8ll & 63ll))) + I$1);
 goto label$2703;
 label$2703:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__RGB32El( struct $12SYSTEM_BUS_T* THIS$1, int64 I$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2712:;
 if( I$1 >= 0ll ) goto label$2715;
 {
  I$1 = 0ll;
  label$2715:;
 }
 if( I$1 <= 255ll ) goto label$2717;
 {
  I$1 = 255ll;
  label$2717:;
 }
 fb$result$1 = (uint64)((((I$1 << (16ll & 63ll)) + (I$1 << (8ll & 63ll))) + I$1) | 4278190080ll);
 goto label$2713;
 label$2713:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T12FUNC__RGBA32Ellll( struct $12SYSTEM_BUS_T* THIS$1, int64 R$1, int64 G$1, int64 B$1, int64 A$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2718:;
 if( R$1 >= 0ll ) goto label$2721;
 {
  R$1 = 0ll;
  label$2721:;
 }
 if( R$1 <= 255ll ) goto label$2723;
 {
  R$1 = 255ll;
  label$2723:;
 }
 if( G$1 >= 0ll ) goto label$2725;
 {
  G$1 = 0ll;
  label$2725:;
 }
 if( G$1 <= 255ll ) goto label$2727;
 {
  G$1 = 255ll;
  label$2727:;
 }
 if( B$1 >= 0ll ) goto label$2729;
 {
  B$1 = 0ll;
  label$2729:;
 }
 if( B$1 <= 255ll ) goto label$2731;
 {
  B$1 = 255ll;
  label$2731:;
 }
 if( A$1 >= 0ll ) goto label$2733;
 {
  A$1 = 0ll;
  label$2733:;
 }
 if( A$1 <= 255ll ) goto label$2735;
 {
  A$1 = 255ll;
  label$2735:;
 }
 fb$result$1 = (uint64)((((A$1 << (24ll & 63ll)) + (R$1 << (16ll & 63ll))) + (G$1 << (8ll & 63ll))) + B$1);
 goto label$2719;
 label$2719:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T13FUNC__ALPHA32Em( struct $12SYSTEM_BUS_T* THIS$1, uint64 COL$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2736:;
 fb$result$1 = (int64)(COL$1 >> (24ll & 63ll));
 goto label$2737;
 label$2737:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11FUNC__RED32Em( struct $12SYSTEM_BUS_T* THIS$1, uint64 COL$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2738:;
 fb$result$1 = (int64)((COL$1 >> (16ll & 63ll)) & 255ull);
 goto label$2739;
 label$2739:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T13FUNC__GREEN32Em( struct $12SYSTEM_BUS_T* THIS$1, uint64 COL$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2740:;
 fb$result$1 = (int64)((COL$1 << (8ll & 63ll)) & 255ull);
 goto label$2741;
 label$2741:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12FUNC__BLUE32Em( struct $12SYSTEM_BUS_T* THIS$1, uint64 COL$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2742:;
 fb$result$1 = (int64)(COL$1 & 255ull);
 goto label$2743;
 label$2743:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARPTR_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2744:;
 if( OFF$1 >= (uint8*)((uint8*)MEM64$ + 534528ll) ) goto label$2747;
 {
  fb$result$1 = (uint16)((int64)OFF$1 - (int64)((uint8*)MEM64$ + 10240ll));
  goto label$2745;
 }
 goto label$2746;
 label$2747:;
 {
  fb$result$1 = (uint16)(((int64)OFF$1 - (int64)(double*)MEM64$) & 15ll);
  goto label$2745;
 }
 label$2746:;
 label$2745:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARSEG_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2748:;
 if( OFF$1 >= (uint8*)((uint8*)MEM64$ + 534528ll) ) goto label$2751;
 {
  fb$result$1 = (uint16)80u;
  goto label$2749;
 }
 goto label$2750;
 label$2751:;
 {
  fb$result$1 = (uint16)((int32)__builtin_nearbyint( (double)((int64)OFF$1 - (int64)(double*)MEM64$) / 0x1.p+4 ));
  goto label$2749;
 }
 label$2750:;
 label$2749:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEddd( struct $12SYSTEM_BUS_T* THIS$1, double DE$1, double SZ$1, double V$1 )
{
 label$2752:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2215$2;
  TMP$2215$2 = SZ$1;
  goto label$2754;
  label$2757:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$2755:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$2754:;
  if( MEM_LOC$2 <= TMP$2215$2 ) goto label$2757;
  label$2756:;
 }
 label$2753:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEddd( struct $12SYSTEM_BUS_T* THIS$1, double SU$1, double DE$1, double SZ$1 )
{
 label$2758:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2216$2;
  TMP$2216$2 = SZ$1;
  goto label$2760;
  label$2763:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$2761:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$2760:;
  if( MEM_LOC$2 <= TMP$2216$2 ) goto label$2763;
  label$2762:;
 }
 label$2759:;
}

double _ZN12SYSTEM_BUS_T5K_MINEdd( struct $12SYSTEM_BUS_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2764:;
 if( V1$1 >= V2$1 ) goto label$2767;
 {
  fb$result$1 = V1$1;
  goto label$2765;
  label$2767:;
 }
 fb$result$1 = V2$1;
 goto label$2765;
 label$2765:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T* THIS$1, double CODE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2768:;
 {
  FBSTRING TMP$2217$2;
  FBSTRING* vr$2 = fb_CHR( 1, ((int64)__builtin_nearbyint( CODE$1 )) );
  fb_StrInit( (void*)&TMP$2217$2, -1ll, (void*)vr$2, -1ll, 0 );
  int32 vr$5 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)" ", 2ll );
  if( (int64)vr$5 != 0ll ) goto label$2771;
  label$2772:;
  {
   fb$result$1 = 0x1.p+5;
  }
  goto label$2770;
  label$2771:;
  int32 vr$8 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"!", 2ll );
  if( (int64)vr$8 != 0ll ) goto label$2773;
  label$2774:;
  {
   fb$result$1 = 0x1.08p+5;
  }
  goto label$2770;
  label$2773:;
  int32 vr$11 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"\x16", 2ll );
  if( (int64)vr$11 != 0ll ) goto label$2775;
  label$2776:;
  {
   fb$result$1 = 0x1.1p+5;
  }
  goto label$2770;
  label$2775:;
  int32 vr$14 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"#", 2ll );
  if( (int64)vr$14 != 0ll ) goto label$2777;
  label$2778:;
  {
   fb$result$1 = 0x1.18p+5;
  }
  goto label$2770;
  label$2777:;
  int32 vr$17 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"$", 2ll );
  if( (int64)vr$17 != 0ll ) goto label$2779;
  label$2780:;
  {
   fb$result$1 = 0x1.2p+5;
  }
  goto label$2770;
  label$2779:;
  int32 vr$20 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"%", 2ll );
  if( (int64)vr$20 != 0ll ) goto label$2781;
  label$2782:;
  {
   fb$result$1 = 0x1.28p+5;
  }
  goto label$2770;
  label$2781:;
  int32 vr$23 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"&", 2ll );
  if( (int64)vr$23 != 0ll ) goto label$2783;
  label$2784:;
  {
   fb$result$1 = 0x1.3p+5;
  }
  goto label$2770;
  label$2783:;
  int32 vr$26 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"'", 2ll );
  if( (int64)vr$26 != 0ll ) goto label$2785;
  label$2786:;
  {
   fb$result$1 = 0x1.38p+5;
  }
  goto label$2770;
  label$2785:;
  int32 vr$29 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"(", 2ll );
  if( (int64)vr$29 != 0ll ) goto label$2787;
  label$2788:;
  {
   fb$result$1 = 0x1.4p+5;
  }
  goto label$2770;
  label$2787:;
  int32 vr$32 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)")", 2ll );
  if( (int64)vr$32 != 0ll ) goto label$2789;
  label$2790:;
  {
   fb$result$1 = 0x1.48p+5;
  }
  goto label$2770;
  label$2789:;
  int32 vr$35 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"*", 2ll );
  if( (int64)vr$35 != 0ll ) goto label$2791;
  label$2792:;
  {
   fb$result$1 = 0x1.5p+5;
  }
  goto label$2770;
  label$2791:;
  int32 vr$38 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"+", 2ll );
  if( (int64)vr$38 != 0ll ) goto label$2793;
  label$2794:;
  {
   fb$result$1 = 0x1.58p+5;
  }
  goto label$2770;
  label$2793:;
  int32 vr$41 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)",", 2ll );
  if( (int64)vr$41 != 0ll ) goto label$2795;
  label$2796:;
  {
   fb$result$1 = 0x1.6p+5;
  }
  goto label$2770;
  label$2795:;
  int32 vr$44 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"-", 2ll );
  if( (int64)vr$44 != 0ll ) goto label$2797;
  label$2798:;
  {
   fb$result$1 = 0x1.68p+5;
  }
  goto label$2770;
  label$2797:;
  int32 vr$47 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)".", 2ll );
  if( (int64)vr$47 != 0ll ) goto label$2799;
  label$2800:;
  {
   fb$result$1 = 0x1.7p+5;
  }
  goto label$2770;
  label$2799:;
  int32 vr$50 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"/", 2ll );
  if( (int64)vr$50 != 0ll ) goto label$2801;
  label$2802:;
  {
   fb$result$1 = 0x1.78p+5;
  }
  goto label$2770;
  label$2801:;
  int32 vr$53 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"0", 2ll );
  if( (int64)vr$53 != 0ll ) goto label$2803;
  label$2804:;
  {
   fb$result$1 = 0x1.8p+5;
  }
  goto label$2770;
  label$2803:;
  int32 vr$56 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"1", 2ll );
  if( (int64)vr$56 != 0ll ) goto label$2805;
  label$2806:;
  {
   fb$result$1 = 0x1.88p+5;
  }
  goto label$2770;
  label$2805:;
  int32 vr$59 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"2", 2ll );
  if( (int64)vr$59 != 0ll ) goto label$2807;
  label$2808:;
  {
   fb$result$1 = 0x1.9p+5;
  }
  goto label$2770;
  label$2807:;
  int32 vr$62 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"3", 2ll );
  if( (int64)vr$62 != 0ll ) goto label$2809;
  label$2810:;
  {
   fb$result$1 = 0x1.98p+5;
  }
  goto label$2770;
  label$2809:;
  int32 vr$65 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"4", 2ll );
  if( (int64)vr$65 != 0ll ) goto label$2811;
  label$2812:;
  {
   fb$result$1 = 0x1.Ap+5;
  }
  goto label$2770;
  label$2811:;
  int32 vr$68 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"5", 2ll );
  if( (int64)vr$68 != 0ll ) goto label$2813;
  label$2814:;
  {
   fb$result$1 = 0x1.A8p+5;
  }
  goto label$2770;
  label$2813:;
  int32 vr$71 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"6", 2ll );
  if( (int64)vr$71 != 0ll ) goto label$2815;
  label$2816:;
  {
   fb$result$1 = 0x1.Bp+5;
  }
  goto label$2770;
  label$2815:;
  int32 vr$74 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"7", 2ll );
  if( (int64)vr$74 != 0ll ) goto label$2817;
  label$2818:;
  {
   fb$result$1 = 0x1.B8p+5;
  }
  goto label$2770;
  label$2817:;
  int32 vr$77 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"8", 2ll );
  if( (int64)vr$77 != 0ll ) goto label$2819;
  label$2820:;
  {
   fb$result$1 = 0x1.Cp+5;
  }
  goto label$2770;
  label$2819:;
  int32 vr$80 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"9", 2ll );
  if( (int64)vr$80 != 0ll ) goto label$2821;
  label$2822:;
  {
   fb$result$1 = 0x1.C8p+5;
  }
  goto label$2770;
  label$2821:;
  int32 vr$83 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)":", 2ll );
  if( (int64)vr$83 != 0ll ) goto label$2823;
  label$2824:;
  {
   fb$result$1 = 0x1.Dp+5;
  }
  goto label$2770;
  label$2823:;
  int32 vr$86 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)";", 2ll );
  if( (int64)vr$86 != 0ll ) goto label$2825;
  label$2826:;
  {
   fb$result$1 = 0x1.D8p+5;
  }
  goto label$2770;
  label$2825:;
  int32 vr$89 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"<", 2ll );
  if( (int64)vr$89 != 0ll ) goto label$2827;
  label$2828:;
  {
   fb$result$1 = 0x1.Ep+5;
  }
  goto label$2770;
  label$2827:;
  int32 vr$92 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"=", 2ll );
  if( (int64)vr$92 != 0ll ) goto label$2829;
  label$2830:;
  {
   fb$result$1 = 0x1.E8p+5;
  }
  goto label$2770;
  label$2829:;
  int32 vr$95 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)">", 2ll );
  if( (int64)vr$95 != 0ll ) goto label$2831;
  label$2832:;
  {
   fb$result$1 = 0x1.Fp+5;
  }
  goto label$2770;
  label$2831:;
  int32 vr$98 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"?", 2ll );
  if( (int64)vr$98 != 0ll ) goto label$2833;
  label$2834:;
  {
   fb$result$1 = 0x1.F8p+5;
  }
  goto label$2770;
  label$2833:;
  int32 vr$101 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"@", 2ll );
  if( (int64)vr$101 != 0ll ) goto label$2835;
  label$2836:;
  {
   fb$result$1 = 0x0p+0;
  }
  goto label$2770;
  label$2835:;
  int32 vr$104 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"A", 2ll );
  if( (int64)vr$104 != 0ll ) goto label$2837;
  label$2838:;
  {
   fb$result$1 = 0x1.p+0;
  }
  goto label$2770;
  label$2837:;
  int32 vr$107 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"B", 2ll );
  if( (int64)vr$107 != 0ll ) goto label$2839;
  label$2840:;
  {
   fb$result$1 = 0x1.p+1;
  }
  goto label$2770;
  label$2839:;
  int32 vr$110 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"C", 2ll );
  if( (int64)vr$110 != 0ll ) goto label$2841;
  label$2842:;
  {
   fb$result$1 = 0x1.8p+1;
  }
  goto label$2770;
  label$2841:;
  int32 vr$113 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"D", 2ll );
  if( (int64)vr$113 != 0ll ) goto label$2843;
  label$2844:;
  {
   fb$result$1 = 0x1.p+2;
  }
  goto label$2770;
  label$2843:;
  int32 vr$116 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"E", 2ll );
  if( (int64)vr$116 != 0ll ) goto label$2845;
  label$2846:;
  {
   fb$result$1 = 0x1.4p+2;
  }
  goto label$2770;
  label$2845:;
  int32 vr$119 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"F", 2ll );
  if( (int64)vr$119 != 0ll ) goto label$2847;
  label$2848:;
  {
   fb$result$1 = 0x1.8p+2;
  }
  goto label$2770;
  label$2847:;
  int32 vr$122 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"G", 2ll );
  if( (int64)vr$122 != 0ll ) goto label$2849;
  label$2850:;
  {
   fb$result$1 = 0x1.Cp+2;
  }
  goto label$2770;
  label$2849:;
  int32 vr$125 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"H", 2ll );
  if( (int64)vr$125 != 0ll ) goto label$2851;
  label$2852:;
  {
   fb$result$1 = 0x1.p+3;
  }
  goto label$2770;
  label$2851:;
  int32 vr$128 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"I", 2ll );
  if( (int64)vr$128 != 0ll ) goto label$2853;
  label$2854:;
  {
   fb$result$1 = 0x1.2p+3;
  }
  goto label$2770;
  label$2853:;
  int32 vr$131 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"J", 2ll );
  if( (int64)vr$131 != 0ll ) goto label$2855;
  label$2856:;
  {
   fb$result$1 = 0x1.4p+3;
  }
  goto label$2770;
  label$2855:;
  int32 vr$134 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"K", 2ll );
  if( (int64)vr$134 != 0ll ) goto label$2857;
  label$2858:;
  {
   fb$result$1 = 0x1.6p+3;
  }
  goto label$2770;
  label$2857:;
  int32 vr$137 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"L", 2ll );
  if( (int64)vr$137 != 0ll ) goto label$2859;
  label$2860:;
  {
   fb$result$1 = 0x1.8p+3;
  }
  goto label$2770;
  label$2859:;
  int32 vr$140 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"M", 2ll );
  if( (int64)vr$140 != 0ll ) goto label$2861;
  label$2862:;
  {
   fb$result$1 = 0x1.Ap+3;
  }
  goto label$2770;
  label$2861:;
  int32 vr$143 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"N", 2ll );
  if( (int64)vr$143 != 0ll ) goto label$2863;
  label$2864:;
  {
   fb$result$1 = 0x1.Cp+3;
  }
  goto label$2770;
  label$2863:;
  int32 vr$146 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"O", 2ll );
  if( (int64)vr$146 != 0ll ) goto label$2865;
  label$2866:;
  {
   fb$result$1 = 0x1.Ep+3;
  }
  goto label$2770;
  label$2865:;
  int32 vr$149 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"P", 2ll );
  if( (int64)vr$149 != 0ll ) goto label$2867;
  label$2868:;
  {
   fb$result$1 = 0x1.p+4;
  }
  goto label$2770;
  label$2867:;
  int32 vr$152 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"Q", 2ll );
  if( (int64)vr$152 != 0ll ) goto label$2869;
  label$2870:;
  {
   fb$result$1 = 0x1.1p+4;
  }
  goto label$2770;
  label$2869:;
  int32 vr$155 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"R", 2ll );
  if( (int64)vr$155 != 0ll ) goto label$2871;
  label$2872:;
  {
   fb$result$1 = 0x1.2p+4;
  }
  goto label$2770;
  label$2871:;
  int32 vr$158 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"S", 2ll );
  if( (int64)vr$158 != 0ll ) goto label$2873;
  label$2874:;
  {
   fb$result$1 = 0x1.3p+4;
  }
  goto label$2770;
  label$2873:;
  int32 vr$161 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"T", 2ll );
  if( (int64)vr$161 != 0ll ) goto label$2875;
  label$2876:;
  {
   fb$result$1 = 0x1.4p+4;
  }
  goto label$2770;
  label$2875:;
  int32 vr$164 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"U", 2ll );
  if( (int64)vr$164 != 0ll ) goto label$2877;
  label$2878:;
  {
   fb$result$1 = 0x1.5p+4;
  }
  goto label$2770;
  label$2877:;
  int32 vr$167 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"V", 2ll );
  if( (int64)vr$167 != 0ll ) goto label$2879;
  label$2880:;
  {
   fb$result$1 = 0x1.6p+4;
  }
  goto label$2770;
  label$2879:;
  int32 vr$170 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"W", 2ll );
  if( (int64)vr$170 != 0ll ) goto label$2881;
  label$2882:;
  {
   fb$result$1 = 0x1.7p+4;
  }
  goto label$2770;
  label$2881:;
  int32 vr$173 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"X", 2ll );
  if( (int64)vr$173 != 0ll ) goto label$2883;
  label$2884:;
  {
   fb$result$1 = 0x1.8p+4;
  }
  goto label$2770;
  label$2883:;
  int32 vr$176 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"Y", 2ll );
  if( (int64)vr$176 != 0ll ) goto label$2885;
  label$2886:;
  {
   fb$result$1 = 0x1.9p+4;
  }
  goto label$2770;
  label$2885:;
  int32 vr$179 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"Z", 2ll );
  if( (int64)vr$179 != 0ll ) goto label$2887;
  label$2888:;
  {
   fb$result$1 = 0x1.Ap+4;
  }
  goto label$2770;
  label$2887:;
  int32 vr$182 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"[", 2ll );
  if( (int64)vr$182 != 0ll ) goto label$2889;
  label$2890:;
  {
   fb$result$1 = 0x1.Bp+4;
  }
  goto label$2770;
  label$2889:;
  int32 vr$185 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"\x5C", 2ll );
  if( (int64)vr$185 != 0ll ) goto label$2891;
  label$2892:;
  {
   fb$result$1 = 0x1.Cp+4;
  }
  goto label$2770;
  label$2891:;
  int32 vr$188 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"]", 2ll );
  if( (int64)vr$188 != 0ll ) goto label$2893;
  label$2894:;
  {
   fb$result$1 = 0x1.Dp+4;
  }
  goto label$2770;
  label$2893:;
  int32 vr$191 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"^", 2ll );
  if( (int64)vr$191 != 0ll ) goto label$2895;
  label$2896:;
  {
   fb$result$1 = 0x1.Ep+4;
  }
  goto label$2770;
  label$2895:;
  int32 vr$194 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"_", 2ll );
  if( (int64)vr$194 != 0ll ) goto label$2897;
  label$2898:;
  {
   fb$result$1 = 0x1.Fp+4;
  }
  goto label$2770;
  label$2897:;
  int32 vr$197 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"`", 2ll );
  if( (int64)vr$197 != 0ll ) goto label$2899;
  label$2900:;
  {
   fb$result$1 = 0x1.p+7;
  }
  goto label$2770;
  label$2899:;
  int32 vr$200 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"a", 2ll );
  if( (int64)vr$200 != 0ll ) goto label$2901;
  label$2902:;
  {
   fb$result$1 = 0x1.02p+7;
  }
  goto label$2770;
  label$2901:;
  int32 vr$203 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"b", 2ll );
  if( (int64)vr$203 != 0ll ) goto label$2903;
  label$2904:;
  {
   fb$result$1 = 0x1.04p+7;
  }
  goto label$2770;
  label$2903:;
  int32 vr$206 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"c", 2ll );
  if( (int64)vr$206 != 0ll ) goto label$2905;
  label$2906:;
  {
   fb$result$1 = 0x1.06p+7;
  }
  goto label$2770;
  label$2905:;
  int32 vr$209 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"d", 2ll );
  if( (int64)vr$209 != 0ll ) goto label$2907;
  label$2908:;
  {
   fb$result$1 = 0x1.08p+7;
  }
  goto label$2770;
  label$2907:;
  int32 vr$212 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"e", 2ll );
  if( (int64)vr$212 != 0ll ) goto label$2909;
  label$2910:;
  {
   fb$result$1 = 0x1.0Ap+7;
  }
  goto label$2770;
  label$2909:;
  int32 vr$215 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"f", 2ll );
  if( (int64)vr$215 != 0ll ) goto label$2911;
  label$2912:;
  {
   fb$result$1 = 0x1.0Cp+7;
  }
  goto label$2770;
  label$2911:;
  int32 vr$218 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"g", 2ll );
  if( (int64)vr$218 != 0ll ) goto label$2913;
  label$2914:;
  {
   fb$result$1 = 0x1.0Ep+7;
  }
  goto label$2770;
  label$2913:;
  int32 vr$221 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"h", 2ll );
  if( (int64)vr$221 != 0ll ) goto label$2915;
  label$2916:;
  {
   fb$result$1 = 0x1.1p+7;
  }
  goto label$2770;
  label$2915:;
  int32 vr$224 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"i", 2ll );
  if( (int64)vr$224 != 0ll ) goto label$2917;
  label$2918:;
  {
   fb$result$1 = 0x1.12p+7;
  }
  goto label$2770;
  label$2917:;
  int32 vr$227 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"j", 2ll );
  if( (int64)vr$227 != 0ll ) goto label$2919;
  label$2920:;
  {
   fb$result$1 = 0x1.14p+7;
  }
  goto label$2770;
  label$2919:;
  int32 vr$230 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"k", 2ll );
  if( (int64)vr$230 != 0ll ) goto label$2921;
  label$2922:;
  {
   fb$result$1 = 0x1.16p+7;
  }
  goto label$2770;
  label$2921:;
  int32 vr$233 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"l", 2ll );
  if( (int64)vr$233 != 0ll ) goto label$2923;
  label$2924:;
  {
   fb$result$1 = 0x1.18p+7;
  }
  goto label$2770;
  label$2923:;
  int32 vr$236 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"m", 2ll );
  if( (int64)vr$236 != 0ll ) goto label$2925;
  label$2926:;
  {
   fb$result$1 = 0x1.1Ap+7;
  }
  goto label$2770;
  label$2925:;
  int32 vr$239 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"n", 2ll );
  if( (int64)vr$239 != 0ll ) goto label$2927;
  label$2928:;
  {
   fb$result$1 = 0x1.1Cp+7;
  }
  goto label$2770;
  label$2927:;
  int32 vr$242 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"o", 2ll );
  if( (int64)vr$242 != 0ll ) goto label$2929;
  label$2930:;
  {
   fb$result$1 = 0x1.1Ep+7;
  }
  goto label$2770;
  label$2929:;
  int32 vr$245 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"p", 2ll );
  if( (int64)vr$245 != 0ll ) goto label$2931;
  label$2932:;
  {
   fb$result$1 = 0x1.2p+7;
  }
  goto label$2770;
  label$2931:;
  int32 vr$248 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"q", 2ll );
  if( (int64)vr$248 != 0ll ) goto label$2933;
  label$2934:;
  {
   fb$result$1 = 0x1.22p+7;
  }
  goto label$2770;
  label$2933:;
  int32 vr$251 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"r", 2ll );
  if( (int64)vr$251 != 0ll ) goto label$2935;
  label$2936:;
  {
   fb$result$1 = 0x1.24p+7;
  }
  goto label$2770;
  label$2935:;
  int32 vr$254 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"s", 2ll );
  if( (int64)vr$254 != 0ll ) goto label$2937;
  label$2938:;
  {
   fb$result$1 = 0x1.26p+7;
  }
  goto label$2770;
  label$2937:;
  int32 vr$257 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"t", 2ll );
  if( (int64)vr$257 != 0ll ) goto label$2939;
  label$2940:;
  {
   fb$result$1 = 0x1.28p+7;
  }
  goto label$2770;
  label$2939:;
  int32 vr$260 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"u", 2ll );
  if( (int64)vr$260 != 0ll ) goto label$2941;
  label$2942:;
  {
   fb$result$1 = 0x1.2Ap+7;
  }
  goto label$2770;
  label$2941:;
  int32 vr$263 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"v", 2ll );
  if( (int64)vr$263 != 0ll ) goto label$2943;
  label$2944:;
  {
   fb$result$1 = 0x1.2Cp+7;
  }
  goto label$2770;
  label$2943:;
  int32 vr$266 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"w", 2ll );
  if( (int64)vr$266 != 0ll ) goto label$2945;
  label$2946:;
  {
   fb$result$1 = 0x1.2Ep+7;
  }
  goto label$2770;
  label$2945:;
  int32 vr$269 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"x", 2ll );
  if( (int64)vr$269 != 0ll ) goto label$2947;
  label$2948:;
  {
   fb$result$1 = 0x1.3p+7;
  }
  goto label$2770;
  label$2947:;
  int32 vr$272 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"y", 2ll );
  if( (int64)vr$272 != 0ll ) goto label$2949;
  label$2950:;
  {
   fb$result$1 = 0x1.32p+7;
  }
  goto label$2770;
  label$2949:;
  int32 vr$275 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"z", 2ll );
  if( (int64)vr$275 != 0ll ) goto label$2951;
  label$2952:;
  {
   fb$result$1 = 0x1.34p+7;
  }
  goto label$2770;
  label$2951:;
  int32 vr$278 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"{", 2ll );
  if( (int64)vr$278 != 0ll ) goto label$2953;
  label$2954:;
  {
   fb$result$1 = 0x1.36p+7;
  }
  goto label$2770;
  label$2953:;
  int32 vr$281 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"|", 2ll );
  if( (int64)vr$281 != 0ll ) goto label$2955;
  label$2956:;
  {
   fb$result$1 = 0x1.38p+7;
  }
  goto label$2770;
  label$2955:;
  int32 vr$284 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"}", 2ll );
  if( (int64)vr$284 != 0ll ) goto label$2957;
  label$2958:;
  {
   fb$result$1 = 0x1.3Ap+7;
  }
  goto label$2770;
  label$2957:;
  int32 vr$287 = fb_StrCompare( (void*)&TMP$2217$2, -1ll, (void*)"~", 2ll );
  if( (int64)vr$287 != 0ll ) goto label$2959;
  label$2960:;
  {
   fb$result$1 = 0x1.3Cp+7;
  }
  label$2959:;
  label$2770:;
  fb_StrDelete( (FBSTRING*)&TMP$2217$2 );
 }
 label$2769:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2961:;
 fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$2962:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2963:;
 double vr$1 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 + 0x1.p+0 );
 fb$result$1 = (double)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$4 )) << (8ll & 63ll)));
 label$2964:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$2965:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 {
  if( ADR$1 != 0x1.p+0 ) goto label$2968;
  label$2969:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = V$1;
  }
  goto label$2967;
  label$2968:;
  if( ADR$1 != 0x1.p+1 ) goto label$2970;
  label$2971:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = V$1;
  }
  goto label$2967;
  label$2970:;
  if( ADR$1 != 0x1.8p+1 ) goto label$2972;
  label$2973:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = V$1;
  }
  goto label$2967;
  label$2972:;
  if( ADR$1 != 0x1.p+2 ) goto label$2974;
  label$2975:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$2974:;
  if( ADR$1 != 0x1.4p+2 ) goto label$2976;
  label$2977:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$2976:;
  if( ADR$1 != 0x1.8p+2 ) goto label$2978;
  label$2979:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$2978:;
  if( ADR$1 != 0x1.Cp+2 ) goto label$2980;
  label$2981:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$2980:;
  if( ADR$1 != 0x1.p+3 ) goto label$2982;
  label$2983:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$2982:;
  if( ADR$1 != 0x1.2p+3 ) goto label$2984;
  label$2985:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$2984:;
  if( ADR$1 != 0x1.4p+3 ) goto label$2986;
  label$2987:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$2986:;
  if( ADR$1 != 0x1.6p+3 ) goto label$2988;
  label$2989:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$2988:;
  if( ADR$1 != 0x1.8p+3 ) goto label$2990;
  label$2991:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$2990:;
  if( ADR$1 != 0x1.Ap+3 ) goto label$2992;
  label$2993:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$2992:;
  if( ADR$1 != 0x1.Cp+3 ) goto label$2994;
  label$2995:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$2994:;
  if( ADR$1 != 0x1.Ep+3 ) goto label$2996;
  label$2997:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$2996:;
  if( ADR$1 != 0x1.p+4 ) goto label$2998;
  label$2999:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$2998:;
  if( ADR$1 != 0x1.1p+4 ) goto label$3000;
  label$3001:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$3000:;
  if( ADR$1 != 0x1.2p+4 ) goto label$3002;
  label$3003:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3002:;
  if( ADR$1 != 0x1.3p+4 ) goto label$3004;
  label$3005:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3004:;
  if( ADR$1 != 0x1.4p+4 ) goto label$3006;
  label$3007:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$2967;
  label$3006:;
  if( ADR$1 != 0x1.5p+4 ) goto label$3008;
  label$3009:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3008:;
  if( ADR$1 != 0x1.6p+4 ) goto label$3010;
  label$3011:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3010:;
  if( ADR$1 != 0x1.7p+4 ) goto label$3012;
  label$3013:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3012:;
  if( ADR$1 != 0x1.8p+4 ) goto label$3014;
  label$3015:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3014:;
  if( ADR$1 != 0x1.9p+4 ) goto label$3016;
  label$3017:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3016:;
  if( ADR$1 != 0x1.Ap+4 ) goto label$3018;
  label$3019:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3018:;
  if( ADR$1 != 0x1.Bp+4 ) goto label$3020;
  label$3021:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3020:;
  if( ADR$1 != 0x1.Cp+4 ) goto label$3022;
  label$3023:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3022:;
  if( ADR$1 != 0x1.Dp+4 ) goto label$3024;
  label$3025:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3024:;
  if( ADR$1 != 0x1.Ep+4 ) goto label$3026;
  label$3027:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3026:;
  if( ADR$1 != 0x1.Fp+4 ) goto label$3028;
  label$3029:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3028:;
  if( ADR$1 != 0x1.p+5 ) goto label$3030;
  label$3031:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3030:;
  if( ADR$1 != 0x1.08p+5 ) goto label$3032;
  label$3033:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3032:;
  if( ADR$1 != 0x1.1p+5 ) goto label$3034;
  label$3035:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3034:;
  if( ADR$1 != 0x1.18p+5 ) goto label$3036;
  label$3037:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3036:;
  if( ADR$1 != 0x1.2p+5 ) goto label$3038;
  label$3039:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3038:;
  if( ADR$1 != 0x1.28p+5 ) goto label$3040;
  label$3041:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3040:;
  if( ADR$1 != 0x1.3p+5 ) goto label$3042;
  label$3043:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3042:;
  if( ADR$1 != 0x1.38p+5 ) goto label$3044;
  label$3045:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3044:;
  if( ADR$1 != 0x1.4p+5 ) goto label$3046;
  label$3047:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3046:;
  if( ADR$1 != 0x1.48p+5 ) goto label$3048;
  label$3049:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3048:;
  if( ADR$1 != 0x1.5p+5 ) goto label$3050;
  label$3051:;
  {
   CHAR_H$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3050:;
  if( ADR$1 != 0x1.58p+5 ) goto label$3052;
  label$3053:;
  {
   CHAR_W$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3052:;
  if( ADR$1 != 0x1.6p+5 ) goto label$3054;
  label$3055:;
  {
   CHAR_PTR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3054:;
  if( ADR$1 != 0x1.68p+5 ) goto label$3056;
  label$3057:;
  {
   CHAR_BUFFER$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3056:;
  if( ADR$1 != 0x1.7p+5 ) goto label$3058;
  label$3059:;
  {
   BITMASK$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3058:;
  if( ADR$1 != 0x1.78p+5 ) goto label$3060;
  label$3061:;
  {
   PIXEL_SIZE$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3060:;
  if( ADR$1 != 0x1.8p+5 ) goto label$3062;
  label$3063:;
  {
   RADIUS$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3062:;
  if( ADR$1 != 0x1.88p+5 ) goto label$3064;
  label$3065:;
  {
   STRING_ADR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3064:;
  if( ADR$1 != 0x1.9p+5 ) goto label$3066;
  label$3067:;
  {
   STRING_LEN$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3066:;
  if( ADR$1 != 0x1.98p+5 ) goto label$3068;
  label$3069:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$2967;
  label$3068:;
  if( ADR$1 != 0x1.Ap+5 ) goto label$3070;
  label$3071:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3070:;
  if( ADR$1 != 0x1.A8p+5 ) goto label$3072;
  label$3073:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$2967;
  label$3072:;
  if( ADR$1 != 0x1.Bp+5 ) goto label$3074;
  label$3075:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3074:;
  if( ADR$1 != 0x1.B8p+5 ) goto label$3076;
  label$3077:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$2967;
  label$3076:;
  if( ADR$1 != 0x1.Cp+5 ) goto label$3078;
  label$3079:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$2967;
  label$3078:;
  if( ADR$1 != 0x1.C8p+5 ) goto label$3080;
  label$3081:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$2967;
  label$3080:;
  if( ADR$1 != 0x1.Dp+5 ) goto label$3082;
  label$3083:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$2967;
  label$3082:;
  if( ADR$1 != 0x1.D8p+5 ) goto label$3084;
  label$3085:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3084:;
  if( ADR$1 != 0x1.Ep+5 ) goto label$3086;
  label$3087:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$2967;
  label$3086:;
  if( ADR$1 != 0x1.E8p+5 ) goto label$3088;
  label$3089:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$2967;
  label$3088:;
  if( ADR$1 != 0x1.Fp+5 ) goto label$3090;
  label$3091:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A1$;
  }
  goto label$2967;
  label$3090:;
  if( ADR$1 != 0x1.F8p+5 ) goto label$3092;
  label$3093:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A2$;
  }
  goto label$2967;
  label$3092:;
  if( ADR$1 != 0x1.p+6 ) goto label$3094;
  label$3095:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A3$;
  }
  goto label$2967;
  label$3094:;
  if( ADR$1 != 0x1.04p+6 ) goto label$3096;
  label$3097:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A4$;
  }
  goto label$2967;
  label$3096:;
  if( ADR$1 != 0x1.08p+6 ) goto label$3098;
  label$3099:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A5$;
  }
  goto label$2967;
  label$3098:;
  if( ADR$1 != 0x1.0Cp+6 ) goto label$3100;
  label$3101:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A6$;
  }
  goto label$2967;
  label$3100:;
  if( ADR$1 != 0x1.1p+6 ) goto label$3102;
  label$3103:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A7$;
  }
  goto label$2967;
  label$3102:;
  if( ADR$1 != 0x1.14p+6 ) goto label$3104;
  label$3105:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A8$;
  }
  goto label$2967;
  label$3104:;
  if( ADR$1 != 0x1.18p+6 ) goto label$3106;
  label$3107:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$2967;
  label$3106:;
  if( ADR$1 != 0x1.1Cp+6 ) goto label$3108;
  label$3109:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3108:;
  if( ADR$1 != 0x1.2p+6 ) goto label$3110;
  label$3111:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) - *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3110:;
  if( ADR$1 != 0x1.24p+6 ) goto label$3112;
  label$3113:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) * *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3112:;
  if( ADR$1 != 0x1.28p+6 ) goto label$3114;
  label$3115:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) / *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$2967;
  label$3114:;
  if( ADR$1 != 0x1.2Cp+6 ) goto label$3116;
  label$3117:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3116:;
  if( ADR$1 != 0x1.3p+6 ) goto label$3118;
  label$3119:;
  {
   double vr$10 = pow( *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$10;
  }
  goto label$2967;
  label$3118:;
  if( ADR$1 != 0x1.34p+6 ) goto label$3120;
  label$3121:;
  {
   double vr$11 = _Z6MODULOdd( *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$11;
  }
  goto label$2967;
  label$3120:;
  if( ADR$1 != 0x1.38p+6 ) goto label$3122;
  label$3123:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = -(*(double*)((int64)(double*)MEM64$ + 394888ll));
  }
  goto label$2967;
  label$3122:;
  if( ADR$1 != 0x1.3Cp+6 ) goto label$3124;
  label$3125:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$2967;
  label$3124:;
  if( ADR$1 != 0x1.4p+6 ) goto label$3126;
  label$3127:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$2967;
  label$3126:;
  if( ADR$1 != 0x1.44p+6 ) goto label$3128;
  label$3129:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3128:;
  if( ADR$1 != 0x1.48p+6 ) goto label$3130;
  label$3131:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3130:;
  if( ADR$1 != 0x1.4Cp+6 ) goto label$3132;
  label$3133:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3132:;
  if( ADR$1 != 0x1.5p+6 ) goto label$3134;
  label$3135:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3134:;
  if( ADR$1 != 0x1.54p+6 ) goto label$3136;
  label$3137:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3136:;
  if( ADR$1 != 0x1.58p+6 ) goto label$3138;
  label$3139:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$2967;
  label$3138:;
  if( ADR$1 != 0x1.5Cp+6 ) goto label$3140;
  label$3141:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3140:;
  if( ADR$1 != 0x1.6p+6 ) goto label$3142;
  label$3143:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3142:;
  if( ADR$1 != 0x1.64p+6 ) goto label$3144;
  label$3145:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3144:;
  if( ADR$1 != 0x1.68p+6 ) goto label$3146;
  label$3147:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3146:;
  if( ADR$1 != 0x1.6Cp+6 ) goto label$3148;
  label$3149:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$2967;
  label$3148:;
  if( ADR$1 != 0x1.7p+6 ) goto label$3150;
  label$3151:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3150:;
  if( ADR$1 != 0x1.74p+6 ) goto label$3152;
  label$3153:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$2967;
  label$3152:;
  if( ADR$1 != 0x1.78p+6 ) goto label$3154;
  label$3155:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+0;
  }
  goto label$2967;
  label$3154:;
  if( ADR$1 != 0x1.7Cp+6 ) goto label$3156;
  label$3157:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + 0x1.p+0;
  }
  goto label$2967;
  label$3156:;
  if( ADR$1 != 0x1.8p+6 ) goto label$3158;
  label$3159:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + 0x1.p+0;
  }
  goto label$2967;
  label$3158:;
  if( ADR$1 != 0x1.84p+6 ) goto label$3160;
  label$3161:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + -0x1.p+0;
  }
  goto label$2967;
  label$3160:;
  if( ADR$1 != 0x1.88p+6 ) goto label$3162;
  label$3163:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + -0x1.p+0;
  }
  goto label$2967;
  label$3162:;
  if( ADR$1 != 0x1.8Cp+6 ) goto label$3164;
  label$3165:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + -0x1.p+0;
  }
  goto label$2967;
  label$3164:;
  if( ADR$1 != 0x1.9p+6 ) goto label$3166;
  label$3167:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3169;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3169:;
   }
  }
  goto label$2967;
  label$3166:;
  if( ADR$1 != 0x1.94p+6 ) goto label$3170;
  label$3171:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3173;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3173:;
   }
  }
  goto label$2967;
  label$3170:;
  if( ADR$1 != 0x1.98p+6 ) goto label$3174;
  label$3175:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3177;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3177:;
   }
  }
  goto label$2967;
  label$3174:;
  if( ADR$1 != 0x1.9Cp+6 ) goto label$3178;
  label$3179:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3181;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3181:;
   }
  }
  goto label$2967;
  label$3178:;
  if( ADR$1 != 0x1.Ap+6 ) goto label$3182;
  label$3183:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3185;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3185:;
   }
  }
  goto label$2967;
  label$3182:;
  if( ADR$1 != 0x1.A4p+6 ) goto label$3186;
  label$3187:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$3189;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$3189:;
   }
  }
  goto label$2967;
  label$3186:;
  if( ADR$1 != 0x1.A8p+6 ) goto label$3190;
  label$3191:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
  }
  goto label$2967;
  label$3190:;
  if( ADR$1 != 0x1.ACp+6 ) goto label$3192;
  label$3193:;
  {
   double vr$59 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$59;
  }
  goto label$2967;
  label$3192:;
  if( ADR$1 != 0x1.Bp+6 ) goto label$3194;
  label$3195:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 394888ll) );
  }
  goto label$2967;
  label$3194:;
  if( ADR$1 != 0x1.B4p+6 ) goto label$3196;
  label$3197:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 395344ll);
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$3198:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$3199;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395400ll);
     double TMP$2309$5;
     TMP$2309$5 = *(double*)((int64)(double*)MEM64$ + 395456ll);
     goto label$3200;
     label$3203:;
     {
      _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$3201:;
     PC$ = PC$ + 0x1.p+0;
     label$3200:;
     if( PC$ <= TMP$2309$5 ) goto label$3203;
     label$3202:;
    }
    double vr$152 = _Z6MODULOdd( (double)(TMP$3 + 1ull), *(double*)((int64)(double*)MEM64$ + 396968ll) );
    TMP$3 = ((uint64)__builtin_nearbyint( vr$152 ));
   }
   goto label$3198;
   label$3199:;
  }
  goto label$2967;
  label$3196:;
  if( ADR$1 != 0x1.B8p+6 ) goto label$3204;
  label$3205:;
  {
   fb_Cls( -65536 );
   FBSTRING TMP$3;
   __builtin_memset( &TMP$3, 0, 24ll );
   FBSTRING* vr$155 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob", 21ll );
   fb_Shell( (FBSTRING*)vr$155 );
   FBSTRING* vr$156 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
   fb_Shell( (FBSTRING*)vr$156 );
   FBSTRING* vr$157 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
   fb_FileOpen( (FBSTRING*)vr$157, 2u, 0u, 0u, 1, 0 );
   label$3206:;
   int32 vr$158 = fb_FileEof( 1 );
   if( (int64)vr$158 != 0ll ) goto label$3207;
   {
    fb_FileInput( 1 );
    fb_InputString( (void*)&TMP$3, -1ll, 0 );
    fb_PrintString( 0, (FBSTRING*)&TMP$3, 1 );
   }
   goto label$3206;
   label$3207:;
   fb_FileClose( 1 );
   FBSTRING* vr$162 = fb_StrAllocTempDescZEx( (uint8*)"press any key to contiune.", 26ll );
   fb_PrintString( 0, (FBSTRING*)vr$162, 1 );
   fb_Sleep( -1 );
   fb_StrDelete( (FBSTRING*)&TMP$3 );
  }
  goto label$2967;
  label$3204:;
  if( ADR$1 != 0x1.BCp+6 ) goto label$3208;
  label$3209:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$192 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$192;
  }
  goto label$2967;
  label$3208:;
  if( ADR$1 != 0x1.Cp+6 ) goto label$3210;
  label$3211:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$2967;
  label$3210:;
  if( ADR$1 != 0x1.C4p+6 ) goto label$3212;
  label$3213:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$252 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$252;
  }
  goto label$2967;
  label$3212:;
  if( ADR$1 != 0x1.C8p+6 ) goto label$3214;
  label$3215:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$2967;
  label$3214:;
  if( ADR$1 != 0x1.CCp+6 ) goto label$3216;
  label$3217:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   double vr$365 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$365 );
  }
  goto label$2967;
  label$3216:;
  if( ADR$1 != 0x1.Dp+6 ) goto label$3218;
  label$3219:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3;
   double vr$423 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$423 );
  }
  goto label$2967;
  label$3218:;
  if( ADR$1 != 0x1.D4p+6 ) goto label$3220;
  label$3221:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   FBSTRING* vr$452 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
   fb_StrAssign( (void*)&STRING_DATA$, -1ll, (void*)vr$452, -1ll, 0 );
   {
    R3$ = 0x1.p+0;
    double TMP$2314$4;
    int64 vr$453 = fb_StrLen( (void*)&STRING_DATA$, -1ll );
    TMP$2314$4 = (double)vr$453;
    goto label$3222;
    label$3225:;
    {
     FBSTRING* vr$456 = fb_StrMid( (FBSTRING*)&STRING_DATA$, ((int64)__builtin_nearbyint( R3$ )), 1ll );
     uint32 vr$457 = fb_ASC( (FBSTRING*)vr$456, 1ll );
     double vr$459 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, (double)vr$457 );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ((CHAR_BUFFER$ + ADR0$) + R3$) + -0x1.p+0, vr$459 );
    }
    label$3223:;
    R3$ = R3$ + 0x1.p+0;
    label$3222:;
    if( R3$ <= TMP$2314$4 ) goto label$3225;
    label$3224:;
   }
  }
  goto label$2967;
  label$3220:;
  if( ADR$1 != 0x1.D8p+6 ) goto label$3226;
  label$3227:;
  {
   STRING_ADR$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   STRING_LEN$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+4;
   {
    R3$ = 0x0p+0;
    double TMP$2315$4;
    TMP$2315$4 = STRING_LEN$;
    goto label$3228;
    label$3231:;
    {
     double vr$552 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( STRING_ADR$ + R3$ )) << (3ll & 63ll))) );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (CHAR_BUFFER$ + *(double*)((int64)(double*)MEM64$ + 395400ll)) + R3$, vr$552 );
    }
    label$3229:;
    R3$ = R3$ + 0x1.p+0;
    label$3228:;
    if( R3$ <= TMP$2315$4 ) goto label$3231;
    label$3230:;
   }
  }
  goto label$2967;
  label$3226:;
  if( ADR$1 < 0x1.p+14 ) goto label$3232;
  if( ADR$1 > 0x1.F9Cp+14 ) goto label$3232;
  label$3233:;
  {
   ADR$1 = ADR$1 + -0x1.p+14;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   int64 vr$564 = _Z6MODULOll( ((int64)__builtin_nearbyint( ADR$1 )), 90ll );
   XS$ = vr$564;
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = ((int64)__builtin_nearbyint( (double)XS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 90ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = ((int64)__builtin_nearbyint( (double)YS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$3235;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$3235:;
   label$3234:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$3237;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$3237:;
   label$3236:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$3238:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$3239;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.18p+5, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.28p+5, (double)*(uint8*)NIBBLES$ );
    double vr$699 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.81F8p+15, vr$699 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$3241;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$3241:;
    label$3240:;
   }
   goto label$3238;
   label$3239:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.p+14;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$2967;
  label$3232:;
  if( ADR$1 != 0x1.4p+19 ) goto label$3242;
  label$3243:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)(X_AXIS0$ + PIXEL_SIZE$), (float)(Y_AXIS0$ + PIXEL_SIZE$), (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 2, 65535u, 0 );
  }
  goto label$2967;
  label$3242:;
  if( ADR$1 != 0x1.40002p+19 ) goto label$3244;
  label$3245:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)X_AXIS1$, (float)Y_AXIS1$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0, (uint32)((int64)__builtin_nearbyint( BITMASK$ )), 0 );
  }
  goto label$2967;
  label$3244:;
  if( ADR$1 != 0x1.40004p+19 ) goto label$3246;
  label$3247:;
  {
   fb_GfxEllipse( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS1$, (float)RADIUS$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
  }
  goto label$2967;
  label$3246:;
  if( ADR$1 < 0x1.8p+19 ) goto label$3248;
  if( ADR$1 > 0x1.8FFEp+19 ) goto label$3248;
  label$3249:;
  {
   ADR$1 = ADR$1 + -0x1.8p+19;
   *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 262144ll) = V$1;
   ADR$1 = ADR$1 + 0x1.8p+19;
  }
  goto label$2967;
  label$3248:;
  if( ADR$1 < 0x1.Ap+19 ) goto label$3250;
  if( ADR$1 > 0x1.A7CEp+19 ) goto label$3250;
  label$3251:;
  {
   ADR$1 = ADR$1 + -0x1.Ap+19;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   int64 vr$793 = _Z6MODULOll( ((int64)__builtin_nearbyint( ADR$1 )), 160ll );
   XS$ = vr$793;
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = XS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 160ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = YS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$3253;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$3253:;
   label$3252:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$3255;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$3255:;
   label$3254:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$3256:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$3257;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.18p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.28p+5, 0x0p+0 );
    double vr$838 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.81F8p+15, vr$838 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$3259;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$3259:;
    label$3258:;
   }
   goto label$3256;
   label$3257:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.Ap+19;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$2967;
  label$3250:;
  if( ADR$1 < 0x1.BFEp+23 ) goto label$3260;
  if( ADR$1 > 0x1.BFFFFEp+23 ) goto label$3260;
  label$3261:;
  {
   {
    if( ADR$1 != 0x1.BFE004p+23 ) goto label$3263;
    label$3264:;
    {
    }
    goto label$3262;
    label$3263:;
    if( ADR$1 != 0x1.BFE008p+23 ) goto label$3265;
    label$3266:;
    {
    }
    goto label$3262;
    label$3265:;
    if( ADR$1 != 0x1.BFE01Cp+23 ) goto label$3267;
    label$3268:;
    {
    }
    goto label$3262;
    label$3267:;
    if( ADR$1 != 0x1.BFE02p+23 ) goto label$3269;
    label$3270:;
    {
    }
    goto label$3262;
    label$3269:;
    if( ADR$1 != 0x1.BFE024p+23 ) goto label$3271;
    label$3272:;
    {
    }
    goto label$3262;
    label$3271:;
    if( ADR$1 != 0x1.BFE028p+23 ) goto label$3273;
    label$3274:;
    {
    }
    goto label$3262;
    label$3273:;
    if( ADR$1 != 0x1.BFE034p+23 ) goto label$3275;
    label$3276:;
    {
    }
    goto label$3262;
    label$3275:;
    if( ADR$1 != 0x1.BFE04p+23 ) goto label$3277;
    label$3278:;
    {
    }
    goto label$3262;
    label$3277:;
    if( ADR$1 != 0x1.BFE05Cp+23 ) goto label$3279;
    label$3280:;
    {
    }
    goto label$3262;
    label$3279:;
    if( ADR$1 != 0x1.BFE07Cp+23 ) goto label$3281;
    label$3282:;
    {
    }
    goto label$3262;
    label$3281:;
    if( ADR$1 != 0x1.BFE08p+23 ) goto label$3283;
    label$3284:;
    {
    }
    goto label$3262;
    label$3283:;
    if( ADR$1 != 0x1.BFE084p+23 ) goto label$3285;
    label$3286:;
    {
    }
    goto label$3262;
    label$3285:;
    if( ADR$1 != 0x1.BFE088p+23 ) goto label$3287;
    label$3288:;
    {
    }
    goto label$3262;
    label$3287:;
    if( ADR$1 != 0x1.BFE08Cp+23 ) goto label$3289;
    label$3290:;
    {
    }
    goto label$3262;
    label$3289:;
    if( ADR$1 != 0x1.BFE0Ap+23 ) goto label$3291;
    label$3292:;
    {
    }
    goto label$3262;
    label$3291:;
    if( ADR$1 != 0x1.BFE0A4p+23 ) goto label$3293;
    label$3294:;
    {
    }
    goto label$3262;
    label$3293:;
    if( ADR$1 != 0x1.BFE0Bp+23 ) goto label$3295;
    label$3296:;
    {
    }
    goto label$3262;
    label$3295:;
    if( ADR$1 != 0x1.BFE0B4p+23 ) goto label$3297;
    label$3298:;
    {
    }
    goto label$3262;
    label$3297:;
    if( ADR$1 != 0x1.BFE0B8p+23 ) goto label$3299;
    label$3300:;
    {
    }
    goto label$3262;
    label$3299:;
    if( ADR$1 != 0x1.BFE0BCp+23 ) goto label$3301;
    label$3302:;
    {
    }
    goto label$3262;
    label$3301:;
    if( ADR$1 != 0x1.BFE0C8p+23 ) goto label$3303;
    label$3304:;
    {
    }
    goto label$3262;
    label$3303:;
    if( ADR$1 != 0x1.BFE0E8p+23 ) goto label$3305;
    label$3306:;
    {
    }
    goto label$3262;
    label$3305:;
    if( ADR$1 != 0x1.BFE0F8p+23 ) goto label$3307;
    label$3308:;
    {
    }
    goto label$3262;
    label$3307:;
    if( ADR$1 != 0x1.BFE1p+23 ) goto label$3309;
    label$3310:;
    {
    }
    goto label$3262;
    label$3309:;
    if( ADR$1 != 0x1.BFE104p+23 ) goto label$3311;
    label$3312:;
    {
    }
    goto label$3262;
    label$3311:;
    if( ADR$1 != 0x1.BFE108p+23 ) goto label$3313;
    label$3314:;
    {
    }
    goto label$3262;
    label$3313:;
    if( ADR$1 != 0x1.BFE10Cp+23 ) goto label$3315;
    label$3316:;
    {
    }
    goto label$3262;
    label$3315:;
    if( ADR$1 != 0x1.BFE11p+23 ) goto label$3317;
    label$3318:;
    {
    }
    goto label$3262;
    label$3317:;
    if( ADR$1 != 0x1.BFE114p+23 ) goto label$3319;
    label$3320:;
    {
    }
    goto label$3262;
    label$3319:;
    if( ADR$1 != 0x1.BFE118p+23 ) goto label$3321;
    label$3322:;
    {
    }
    goto label$3262;
    label$3321:;
    if( ADR$1 != 0x1.BFE11Cp+23 ) goto label$3323;
    label$3324:;
    {
    }
    goto label$3262;
    label$3323:;
    if( ADR$1 != 0x1.BFE12p+23 ) goto label$3325;
    label$3326:;
    {
    }
    goto label$3262;
    label$3325:;
    if( ADR$1 != 0x1.BFE124p+23 ) goto label$3327;
    label$3328:;
    {
    }
    goto label$3262;
    label$3327:;
    if( ADR$1 != 0x1.BFE128p+23 ) goto label$3329;
    label$3330:;
    {
    }
    goto label$3262;
    label$3329:;
    if( ADR$1 != 0x1.BFE12Cp+23 ) goto label$3331;
    label$3332:;
    {
    }
    goto label$3262;
    label$3331:;
    if( ADR$1 != 0x1.BFE13p+23 ) goto label$3333;
    label$3334:;
    {
    }
    goto label$3262;
    label$3333:;
    if( ADR$1 != 0x1.BFE13Cp+23 ) goto label$3335;
    label$3336:;
    {
    }
    goto label$3262;
    label$3335:;
    if( ADR$1 != 0x1.BFE14p+23 ) goto label$3337;
    label$3338:;
    {
    }
    goto label$3262;
    label$3337:;
    if( ADR$1 != 0x1.BFE144p+23 ) goto label$3339;
    label$3340:;
    {
    }
    goto label$3262;
    label$3339:;
    if( ADR$1 != 0x1.BFE148p+23 ) goto label$3341;
    label$3342:;
    {
    }
    goto label$3262;
    label$3341:;
    if( ADR$1 != 0x1.BFE14Cp+23 ) goto label$3343;
    label$3344:;
    {
    }
    goto label$3262;
    label$3343:;
    if( ADR$1 != 0x1.BFE15p+23 ) goto label$3345;
    label$3346:;
    {
    }
    goto label$3262;
    label$3345:;
    if( ADR$1 != 0x1.BFE154p+23 ) goto label$3347;
    label$3348:;
    {
    }
    goto label$3262;
    label$3347:;
    if( ADR$1 != 0x1.BFE1Cp+23 ) goto label$3349;
    label$3350:;
    {
    }
    goto label$3262;
    label$3349:;
    if( ADR$1 != 0x1.BFE1C4p+23 ) goto label$3351;
    label$3352:;
    {
    }
    goto label$3262;
    label$3351:;
    if( ADR$1 != 0x1.BFE2p+23 ) goto label$3353;
    label$3354:;
    {
    }
    goto label$3262;
    label$3353:;
    if( ADR$1 != 0x1.BFE204p+23 ) goto label$3355;
    label$3356:;
    {
    }
    goto label$3262;
    label$3355:;
    if( ADR$1 != 0x1.BFE208p+23 ) goto label$3357;
    label$3358:;
    {
    }
    goto label$3262;
    label$3357:;
    if( ADR$1 != 0x1.BFE20Cp+23 ) goto label$3359;
    label$3360:;
    {
    }
    goto label$3262;
    label$3359:;
    if( ADR$1 != 0x1.BFE21p+23 ) goto label$3361;
    label$3362:;
    {
    }
    goto label$3262;
    label$3361:;
    if( ADR$1 != 0x1.BFE22p+23 ) goto label$3363;
    label$3364:;
    {
    }
    goto label$3262;
    label$3363:;
    if( ADR$1 != 0x1.BFE214p+23 ) goto label$3365;
    label$3366:;
    {
    }
    goto label$3262;
    label$3365:;
    if( ADR$1 != 0x1.BFE284p+23 ) goto label$3367;
    label$3368:;
    {
    }
    goto label$3262;
    label$3367:;
    if( ADR$1 != 0x1.BFE3p+23 ) goto label$3369;
    label$3370:;
    {
    }
    goto label$3262;
    label$3369:;
    if( ADR$1 != 0x1.BFE38p+23 ) goto label$3371;
    label$3372:;
    {
    }
    goto label$3262;
    label$3371:;
    if( ADR$1 != 0x1.BFE384p+23 ) goto label$3373;
    label$3374:;
    {
    }
    goto label$3262;
    label$3373:;
    if( ADR$1 != 0x1.BFE388p+23 ) goto label$3375;
    label$3376:;
    {
    }
    goto label$3262;
    label$3375:;
    if( ADR$1 != 0x1.BFE38Cp+23 ) goto label$3377;
    label$3378:;
    {
    }
    goto label$3262;
    label$3377:;
    if( ADR$1 != 0x1.BFE39p+23 ) goto label$3379;
    label$3380:;
    {
    }
    goto label$3262;
    label$3379:;
    if( ADR$1 != 0x1.BFE394p+23 ) goto label$3381;
    label$3382:;
    {
    }
    goto label$3262;
    label$3381:;
    if( ADR$1 != 0x1.BFE398p+23 ) goto label$3383;
    label$3384:;
    {
    }
    goto label$3262;
    label$3383:;
    if( ADR$1 != 0x1.BFE39Cp+23 ) goto label$3385;
    label$3386:;
    {
    }
    goto label$3262;
    label$3385:;
    if( ADR$1 != 0x1.BFE3B8p+23 ) goto label$3387;
    label$3388:;
    {
    }
    goto label$3262;
    label$3387:;
    if( ADR$1 != 0x1.BFE3BCp+23 ) goto label$3389;
    label$3390:;
    {
    }
    goto label$3262;
    label$3389:;
    if( ADR$1 != 0x1.BFE3Cp+23 ) goto label$3391;
    label$3392:;
    {
    }
    goto label$3262;
    label$3391:;
    if( ADR$1 != 0x1.BFE3C4p+23 ) goto label$3393;
    label$3394:;
    {
    }
    goto label$3262;
    label$3393:;
    if( ADR$1 != 0x1.BFE3C8p+23 ) goto label$3395;
    label$3396:;
    {
    }
    label$3395:;
    label$3262:;
   }
  }
  label$3260:;
  label$2967:;
 }
 label$2966:;
}

void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$3397:;
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( V$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1 + 0x1.p+0, (double)((((uint64)__builtin_nearbyint( V$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$3398:;
}

double _ZN12SYSTEM_BUS_T8ISSYMBOLE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3399:;
 label$3401:;
 {
  {
   uint64 TMP$2316$3;
   FBSTRING* vr$2 = fb_StrMid( (FBSTRING*)S$1, ((int64)__builtin_nearbyint( START$1 )), 1ll );
   uint32 vr$3 = fb_ASC( (FBSTRING*)vr$2, 1ll );
   TMP$2316$3 = (uint64)vr$3;
   goto label$3405;
   label$3406:;
   {
    goto label$3402;
   }
   goto label$3404;
   label$3407:;
   {
    START$1 = START$1 + 0x1.p+0;
   }
   goto label$3404;
   label$3405:;
   static const void* tmp$2317[10ll] = {
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
    &&label$3406,
   };
   if( (TMP$2316$3 - 48ull) > 9ull ) goto label$3407;
   goto *tmp$2317[TMP$2316$3 - 48ull];
   label$3404:;
  }
 }
 label$3403:;
 goto label$3401;
 label$3402:;
 fb$result$1 = START$1;
 label$3400:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3408:;
 int64 TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 TMP$1 = ((int64)__builtin_nearbyint( START$1 ));
 label$3410:;
 {
  {
   uint64 TMP$2318$3;
   FBSTRING* vr$3 = fb_StrMid( (FBSTRING*)&GET_DATA$, TMP$1, 1ll );
   uint32 vr$4 = fb_ASC( (FBSTRING*)vr$3, 1ll );
   TMP$2318$3 = (uint64)vr$4;
   goto label$3414;
   label$3415:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$3413;
   label$3416:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$3413;
   label$3417:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$3413;
   label$3418:;
   {
    goto label$3411;
   }
   goto label$3413;
   label$3414:;
   static const void* tmp$2319[67ll] = {
    &&label$3416,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3416,
    &&label$3418,
    &&label$3416,
    &&label$3416,
    &&label$3418,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3415,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3416,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3417,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3417,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3418,
    &&label$3417,
   };
   if( (TMP$2318$3 - 38ull) > 66ull ) goto label$3418;
   goto *tmp$2319[TMP$2318$3 - 38ull];
   label$3413:;
  }
 }
 label$3412:;
 goto label$3410;
 label$3411:;
 FBSTRING* vr$10 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
 double vr$11 = fb_VAL( (FBSTRING*)vr$10 );
 if( vr$11 <= 0x0p+0 ) goto label$3420;
 {
  FBSTRING* vr$13 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
  double vr$14 = fb_VAL( (FBSTRING*)vr$13 );
  fb$result$1 = vr$14;
 }
 goto label$3419;
 label$3420:;
 {
  fb$result$1 = 0x0p+0;
 }
 label$3419:;
 label$3409:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6GETXYZEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$2320$1;
 FBSTRING TMP$2323$1;
 FBSTRING TMP$2325$1;
 label$3421:;
 __builtin_memset( &TMP$2320$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2320$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$3 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2320$1, 0x1.Cp+2 );
 *(double*)((int64)(double*)MEM64$ + 394840ll) = vr$3;
 fb_StrDelete( (FBSTRING*)&TMP$2320$1 );
 if( *(double*)((int64)(double*)MEM64$ + 394840ll) != 0x0p+0 ) goto label$3424;
 {
  FBSTRING TMP$2321$2;
  FBSTRING* vr$5 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$6 = fb_StrLen( (void*)vr$5, -1ll );
  __builtin_memset( &TMP$2321$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2321$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$12 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2321$2, (double)(vr$6 + 7ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$12 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2321$2 );
 }
 goto label$3423;
 label$3424:;
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$17 = fb_StrLen( (void*)vr$16, -1ll );
 FBSTRING* vr$19 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$17 + 7ll, 1ll );
 int32 vr$20 = fb_StrCompare( (void*)vr$19, -1ll, (void*)"-", 2ll );
 if( (int64)vr$20 != 0ll ) goto label$3425;
 {
  FBSTRING TMP$2322$2;
  FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$23 = fb_StrLen( (void*)vr$22, -1ll );
  __builtin_memset( &TMP$2322$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2322$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$29 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2322$2, (double)(vr$23 + 8ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$29 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2322$2 );
 }
 label$3425:;
 label$3423:;
 FBSTRING* vr$33 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$34 = fb_StrLen( (void*)vr$33, -1ll );
 __builtin_memset( &TMP$2323$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2323$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$40 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2323$1, (double)(vr$34 + 9ll) );
 *(double*)((int64)(double*)MEM64$ + 394848ll) = vr$40;
 fb_StrDelete( (FBSTRING*)&TMP$2323$1 );
 FBSTRING* vr$42 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$43 = fb_StrLen( (void*)vr$42, -1ll );
 FBSTRING* vr$45 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$43 + 9ll, 1ll );
 int32 vr$46 = fb_StrCompare( (void*)vr$45, -1ll, (void*)"-", 2ll );
 if( (int64)vr$46 != 0ll ) goto label$3427;
 {
  FBSTRING TMP$2324$2;
  FBSTRING* vr$48 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$49 = fb_StrLen( (void*)vr$48, -1ll );
  __builtin_memset( &TMP$2324$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2324$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$55 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2324$2, (double)(vr$49 + 10ll) );
  *(double*)((int64)(double*)MEM64$ + 394848ll) = -vr$55 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2324$2 );
 }
 label$3427:;
 label$3426:;
 FBSTRING* vr$59 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$60 = fb_StrLen( (void*)vr$59, -1ll );
 __builtin_memset( &TMP$2325$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2325$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$66 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2325$1, (double)(vr$60 + 13ll) );
 *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$66;
 fb_StrDelete( (FBSTRING*)&TMP$2325$1 );
 FBSTRING* vr$68 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$69 = fb_StrLen( (void*)vr$68, -1ll );
 FBSTRING* vr$71 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$69 + 13ll, 1ll );
 int32 vr$72 = fb_StrCompare( (void*)vr$71, -1ll, (void*)"-", 2ll );
 if( (int64)vr$72 != 0ll ) goto label$3429;
 {
  FBSTRING TMP$2326$2;
  FBSTRING* vr$74 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
  int64 vr$75 = fb_StrLen( (void*)vr$74, -1ll );
  __builtin_memset( &TMP$2326$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2326$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$81 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2326$2, (double)(vr$75 + 14ll) );
  *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$81 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2326$2 );
 }
 label$3429:;
 label$3428:;
 label$3422:;
}

double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3430:;
 {
  if( ADR$1 < 0x1.Cp+15 ) goto label$3433;
  if( ADR$1 > 0x1.FFFEp+15 ) goto label$3433;
  label$3434:;
  {
   fb$result$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Cp+15 )) << (3ll & 63ll)));
  }
  goto label$3432;
  label$3433:;
  if( ADR$1 < 0x1.4p+15 ) goto label$3435;
  if( ADR$1 > 0x1.7FFEp+15 ) goto label$3435;
  label$3436:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.4p+15 )) << (3ll & 63ll))) + 131072ll);
  }
  goto label$3432;
  label$3435:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$3437;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$3437;
  label$3438:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Bp+15 )) << (3ll & 63ll))) + 262144ll);
  }
  goto label$3432;
  label$3437:;
  if( ADR$1 < 0x1.Ap+15 ) goto label$3439;
  if( ADR$1 > 0x1.A7FEp+15 ) goto label$3439;
  label$3440:;
  {
   int64 REG$3;
   REG$3 = ((int64)__builtin_nearbyint( ADR$1 )) & 63ll;
   if( REG$3 != 18ll ) goto label$3442;
   {
    fb$result$1 = 0x0p+0;
   }
   goto label$3441;
   label$3442:;
   {
    fb$result$1 = 0x1.FEp+7;
    label$3441:;
   }
  }
  goto label$3432;
  label$3439:;
  {
   fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  label$3443:;
  label$3432:;
 }
 label$3431:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$3444:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 if( ((int64)-(ADR$1 >= 0x1.Bp+15) & (int64)-(ADR$1 <= 0x1.B7FEp+15)) == 0ll ) goto label$3447;
 goto label$3448;
 label$3447:;
 goto label$3449;
 label$3448:;
 ADR$1 = ADR$1 + -0x1.Bp+15;
 *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 16850952ll) = V$1;
 ADR$1 = ADR$1 + *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
 V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$3449:;
 if( ADR$1 != 0x1.8Ep+7 ) goto label$3451;
 goto label$3452;
 label$3451:;
 goto label$3453;
 label$3452:;
 label$3453:;
 if( ADR$1 != (double)(int64)FCOLOR$ ) goto label$3455;
 goto label$3456;
 label$3455:;
 goto label$3457;
 label$3456:;
 if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$3459;
 goto label$3460;
 label$3459:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$3462;
 goto label$3463;
 label$3462:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$3465;
 goto label$3466;
 label$3465:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$3468;
 goto label$3469;
 label$3468:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$3471;
 goto label$3472;
 label$3471:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$3474;
 goto label$3475;
 label$3474:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$3477;
 goto label$3478;
 label$3477:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$3480;
 goto label$3481;
 label$3480:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$3483;
 goto label$3484;
 label$3483:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$3486;
 goto label$3487;
 label$3486:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$3489;
 goto label$3490;
 label$3489:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$3492;
 goto label$3493;
 label$3492:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$3495;
 goto label$3496;
 label$3495:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$3498;
 goto label$3499;
 label$3498:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$3501;
 goto label$3502;
 label$3501:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$3504;
 goto label$3505;
 label$3504:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3507;
 goto label$3508;
 label$3507:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3510;
 goto label$3511;
 label$3510:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3513;
 goto label$3514;
 label$3513:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3516;
 goto label$3517;
 label$3516:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3519;
 goto label$3520;
 label$3519:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3522;
 goto label$3523;
 label$3522:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3525;
 goto label$3526;
 label$3525:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3528;
 goto label$3529;
 label$3528:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3531;
 goto label$3532;
 label$3531:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3534;
 goto label$3535;
 label$3534:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3537;
 goto label$3538;
 label$3537:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3540;
 goto label$3541;
 label$3540:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3543;
 goto label$3544;
 label$3543:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3546;
 goto label$3547;
 label$3546:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3549;
 goto label$3550;
 label$3549:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3552;
 goto label$3553;
 label$3552:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3555;
 goto label$3556;
 label$3555:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3558;
 goto label$3559;
 label$3558:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3561;
 goto label$3562;
 label$3561:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3564;
 goto label$3565;
 label$3564:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3567;
 goto label$3568;
 label$3567:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3570;
 goto label$3571;
 label$3570:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3573;
 goto label$3574;
 label$3573:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3576;
 goto label$3577;
 label$3576:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3579;
 goto label$3580;
 label$3579:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3582;
 goto label$3583;
 label$3582:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3585;
 goto label$3586;
 label$3585:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3588;
 goto label$3589;
 label$3588:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3591;
 goto label$3592;
 label$3591:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3594;
 goto label$3595;
 label$3594:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3597;
 goto label$3598;
 label$3597:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3600;
 goto label$3601;
 label$3600:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3603;
 goto label$3604;
 label$3603:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3606;
 goto label$3607;
 label$3606:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3609;
 goto label$3610;
 label$3609:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3612;
 goto label$3613;
 label$3612:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3615;
 goto label$3616;
 label$3615:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3618;
 goto label$3619;
 label$3618:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3621;
 goto label$3622;
 label$3621:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3624;
 goto label$3625;
 label$3624:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3627;
 goto label$3628;
 label$3627:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3630;
 goto label$3631;
 label$3630:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3633;
 goto label$3634;
 label$3633:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3636;
 goto label$3637;
 label$3636:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3639;
 goto label$3640;
 label$3639:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3642;
 goto label$3643;
 label$3642:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3645;
 goto label$3646;
 label$3645:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3648;
 goto label$3649;
 label$3648:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3651;
 goto label$3652;
 label$3651:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3654;
 goto label$3655;
 label$3654:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3657;
 goto label$3658;
 label$3657:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3660;
 goto label$3661;
 label$3660:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3663;
 goto label$3664;
 label$3663:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3666;
 goto label$3667;
 label$3666:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3669;
 goto label$3670;
 label$3669:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3672;
 goto label$3673;
 label$3672:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3675;
 goto label$3676;
 label$3675:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3678;
 goto label$3679;
 label$3678:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3681;
 goto label$3682;
 label$3681:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3684;
 goto label$3685;
 label$3684:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3687;
 goto label$3688;
 label$3687:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3690;
 goto label$3691;
 label$3690:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3693;
 goto label$3694;
 label$3693:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3696;
 goto label$3697;
 label$3696:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3699;
 goto label$3700;
 label$3699:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3702;
 goto label$3703;
 label$3702:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3705;
 goto label$3706;
 label$3705:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3708;
 goto label$3709;
 label$3708:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3711;
 goto label$3712;
 label$3711:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3714;
 goto label$3715;
 label$3714:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3717;
 goto label$3718;
 label$3717:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3720;
 goto label$3721;
 label$3720:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3723;
 goto label$3724;
 label$3723:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3726;
 goto label$3727;
 label$3726:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3729;
 goto label$3730;
 label$3729:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3732;
 goto label$3733;
 label$3732:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3735;
 goto label$3736;
 label$3735:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3738;
 goto label$3739;
 label$3738:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3741;
 goto label$3742;
 label$3741:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3744;
 goto label$3745;
 label$3744:;
 label$3746:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3748;
 goto label$3749;
 label$3748:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3751;
 goto label$3752;
 label$3751:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3754;
 goto label$3755;
 label$3754:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3757;
 goto label$3758;
 label$3757:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3760;
 goto label$3761;
 label$3760:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3763;
 goto label$3764;
 label$3763:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3766;
 goto label$3767;
 label$3766:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3769;
 goto label$3770;
 label$3769:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3772;
 goto label$3773;
 label$3772:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3775;
 goto label$3776;
 label$3775:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3778;
 goto label$3779;
 label$3778:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3781;
 goto label$3782;
 label$3781:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3784;
 goto label$3785;
 label$3784:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3787;
 goto label$3788;
 label$3787:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3790;
 goto label$3791;
 label$3790:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3793;
 goto label$3794;
 label$3793:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$3796;
 goto label$3797;
 label$3796:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3799;
 goto label$3800;
 label$3799:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3802;
 goto label$3803;
 label$3802:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3805;
 goto label$3806;
 label$3805:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3808;
 goto label$3809;
 label$3808:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3811;
 goto label$3812;
 label$3811:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3814;
 goto label$3815;
 label$3814:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3817;
 goto label$3818;
 label$3817:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3820;
 goto label$3821;
 label$3820:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3823;
 goto label$3824;
 label$3823:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3826;
 goto label$3827;
 label$3826:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3829;
 goto label$3830;
 label$3829:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3832;
 goto label$3833;
 label$3832:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3835;
 goto label$3836;
 label$3835:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3838;
 goto label$3839;
 label$3838:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3841;
 goto label$3842;
 label$3841:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3844;
 goto label$3845;
 label$3844:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3847;
 goto label$3848;
 label$3847:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3850;
 goto label$3851;
 label$3850:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3853;
 goto label$3854;
 label$3853:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3856;
 goto label$3857;
 label$3856:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3859;
 goto label$3860;
 label$3859:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3862;
 goto label$3863;
 label$3862:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3865;
 goto label$3866;
 label$3865:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3868;
 goto label$3869;
 label$3868:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3871;
 goto label$3872;
 label$3871:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3874;
 goto label$3875;
 label$3874:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3877;
 goto label$3878;
 label$3877:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3880;
 goto label$3881;
 label$3880:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3883;
 goto label$3884;
 label$3883:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3886;
 goto label$3887;
 label$3886:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3889;
 goto label$3890;
 label$3889:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3892;
 goto label$3893;
 label$3892:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3895;
 goto label$3896;
 label$3895:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3898;
 goto label$3899;
 label$3898:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3901;
 goto label$3902;
 label$3901:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3904;
 goto label$3905;
 label$3904:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3907;
 goto label$3908;
 label$3907:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3910;
 goto label$3911;
 label$3910:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3913;
 goto label$3914;
 label$3913:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3916;
 goto label$3917;
 label$3916:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3919;
 goto label$3920;
 label$3919:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3922;
 goto label$3923;
 label$3922:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3925;
 goto label$3926;
 label$3925:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3928;
 goto label$3929;
 label$3928:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3931;
 goto label$3932;
 label$3931:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3934;
 goto label$3935;
 label$3934:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3937;
 goto label$3938;
 label$3937:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3940;
 goto label$3941;
 label$3940:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3943;
 goto label$3944;
 label$3943:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3946;
 goto label$3947;
 label$3946:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3949;
 goto label$3950;
 label$3949:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3952;
 goto label$3953;
 label$3952:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3955;
 goto label$3956;
 label$3955:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3958;
 goto label$3959;
 label$3958:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3961;
 goto label$3962;
 label$3961:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3964;
 goto label$3965;
 label$3964:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3967;
 goto label$3968;
 label$3967:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3970;
 goto label$3971;
 label$3970:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3973;
 goto label$3974;
 label$3973:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3976;
 goto label$3977;
 label$3976:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3979;
 goto label$3980;
 label$3979:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3982;
 goto label$3983;
 label$3982:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3985;
 goto label$3986;
 label$3985:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$3988;
 goto label$3989;
 label$3988:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3991;
 goto label$3992;
 label$3991:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3994;
 goto label$3995;
 label$3994:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3997;
 goto label$3998;
 label$3997:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4000;
 goto label$4001;
 label$4000:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4003;
 goto label$4004;
 label$4003:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4006;
 goto label$4007;
 label$4006:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4009;
 goto label$4010;
 label$4009:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4012;
 goto label$4013;
 label$4012:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4015;
 goto label$4016;
 label$4015:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4018;
 goto label$4019;
 label$4018:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4021;
 goto label$4022;
 label$4021:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4024;
 goto label$4025;
 label$4024:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4027;
 goto label$4028;
 label$4027:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4030;
 goto label$4031;
 label$4030:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4033;
 goto label$4034;
 label$4033:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4036;
 goto label$4037;
 label$4036:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4039;
 goto label$4040;
 label$4039:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4042;
 goto label$4043;
 label$4042:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4045;
 goto label$4046;
 label$4045:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4048;
 goto label$4049;
 label$4048:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4051;
 goto label$4052;
 label$4051:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4054;
 goto label$4055;
 label$4054:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4057;
 goto label$4058;
 label$4057:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4060;
 goto label$4061;
 label$4060:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4063;
 goto label$4064;
 label$4063:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4066;
 goto label$4067;
 label$4066:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4069;
 goto label$4070;
 label$4069:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4072;
 goto label$4073;
 label$4072:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4075;
 goto label$4076;
 label$4075:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4078;
 goto label$4079;
 label$4078:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4081;
 goto label$4082;
 label$4081:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4084;
 goto label$4085;
 label$4084:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4087;
 goto label$4088;
 label$4087:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4090;
 goto label$4091;
 label$4090:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4093;
 goto label$4094;
 label$4093:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4096;
 goto label$4097;
 label$4096:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4099;
 goto label$4100;
 label$4099:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4102;
 goto label$4103;
 label$4102:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4105;
 goto label$4106;
 label$4105:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4108;
 goto label$4109;
 label$4108:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4111;
 goto label$4112;
 label$4111:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4114;
 goto label$4115;
 label$4114:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4117;
 goto label$4118;
 label$4117:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4120;
 goto label$4121;
 label$4120:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4123;
 goto label$4124;
 label$4123:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4126;
 goto label$4127;
 label$4126:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4129;
 goto label$4130;
 label$4129:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4132;
 goto label$4133;
 label$4132:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4135;
 goto label$4136;
 label$4135:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4138;
 goto label$4139;
 label$4138:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4141;
 goto label$4142;
 label$4141:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4144;
 goto label$4145;
 label$4144:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4147;
 goto label$4148;
 label$4147:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4150;
 goto label$4151;
 label$4150:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4153;
 goto label$4154;
 label$4153:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4156;
 goto label$4157;
 label$4156:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4159;
 goto label$4160;
 label$4159:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4162;
 goto label$4163;
 label$4162:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4165;
 goto label$4166;
 label$4165:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4168;
 goto label$4169;
 label$4168:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4171;
 goto label$4172;
 label$4171:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4174;
 goto label$4175;
 label$4174:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4177;
 goto label$4178;
 label$4177:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4180;
 goto label$4181;
 label$4180:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4183;
 goto label$4184;
 label$4183:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4186;
 goto label$4187;
 label$4186:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4189;
 goto label$4190;
 label$4189:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4192;
 goto label$4193;
 label$4192:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4195;
 goto label$4196;
 label$4195:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4198;
 goto label$4199;
 label$4198:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4201;
 goto label$4202;
 label$4201:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4204;
 goto label$4205;
 label$4204:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4207;
 goto label$4208;
 label$4207:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4210;
 goto label$4211;
 label$4210:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4213;
 goto label$4214;
 label$4213:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4216;
 goto label$4217;
 label$4216:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4219;
 goto label$4220;
 label$4219:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4222;
 goto label$4223;
 label$4222:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4225;
 goto label$4226;
 label$4225:;
 goto label$3457;
 label$3460:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3463:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3466:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3469:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3472:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3475:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3478:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3481:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3484:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3487:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3490:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3493:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3496:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3499:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3502:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3505:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3508:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3511:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3514:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3517:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3520:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3523:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3526:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3529:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3532:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3535:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3538:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3541:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3544:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3547:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3550:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3553:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3556:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3559:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3562:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3565:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3568:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3571:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3574:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3577:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3580:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3583:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3586:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3589:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3592:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3595:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3598:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3601:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3604:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3607:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3610:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3613:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3616:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3619:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3622:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3625:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3628:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3631:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3634:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3637:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3640:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3643:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3646:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3649:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3652:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3655:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3658:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3661:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3664:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3667:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3670:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3673:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3676:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3679:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3682:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3685:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3688:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3691:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3694:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3697:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3700:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3703:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3706:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3709:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3712:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3715:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3718:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3721:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3724:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3727:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3730:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3733:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3736:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3739:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3742:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3745:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3749:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3752:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3755:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3758:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3761:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3764:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3767:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3770:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3773:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3776:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3779:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3782:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3785:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3788:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3791:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3794:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3797:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3800:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3803:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3806:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3809:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3812:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3815:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3818:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3821:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3824:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3827:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3830:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3833:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3836:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3839:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3842:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3845:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3848:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3851:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3854:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3857:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3860:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3863:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3866:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3869:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3872:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3875:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3878:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3881:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3884:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3887:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3890:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3893:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3896:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3899:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3902:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3905:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3908:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3911:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3914:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3917:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3920:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3923:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3926:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3929:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3932:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3935:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3938:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3941:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3944:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3947:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3950:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3953:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3956:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3959:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3962:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3965:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3968:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3971:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3974:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3977:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3980:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$3983:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$3986:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$3989:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$3992:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$3995:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$3998:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4001:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4004:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4007:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4010:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4013:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4016:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4019:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4022:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4025:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4028:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4031:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4034:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4037:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4040:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4043:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4046:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4049:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4052:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4055:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4058:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4061:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4064:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4067:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4070:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4073:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4076:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4079:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4082:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4085:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4088:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4091:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4094:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4097:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4100:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4103:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4106:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+7 );
 goto label$3457;
 label$4109:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.82p+7 );
 goto label$3457;
 label$4112:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.44p+7 );
 goto label$3457;
 label$4115:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.06p+7 );
 goto label$3457;
 label$4118:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.9p+6 );
 goto label$3457;
 label$4121:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.14p+6 );
 goto label$3457;
 label$4124:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.3p+5 );
 goto label$3457;
 label$4127:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+2 );
 goto label$3457;
 label$4130:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4133:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4136:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4139:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4142:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4145:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4148:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4151:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4154:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4157:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4160:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4163:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4166:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4169:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4172:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4175:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$3457;
 label$4178:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$3457;
 label$4181:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$3457;
 label$4184:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4187:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4190:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4193:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4196:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4199:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4202:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4205:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.76p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4208:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4211:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$3457;
 label$4214:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4217:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$3457;
 label$4220:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4223:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$3457;
 label$4226:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.4p+5 );
 goto label$3457;
 label$3457:;
 if( ADR$1 != (double)(int64)VMCSB$ ) goto label$4228;
 {
  {
   if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$4230;
   label$4231:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4230:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4232;
   label$4233:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4232:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4234;
   label$4235:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4234:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4236;
   label$4237:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4236:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4238;
   label$4239:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4238:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4240;
   label$4241:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4240:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4242;
   label$4243:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4242:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4244;
   label$4245:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4244:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4246;
   label$4247:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4246:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4248;
   label$4249:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4248:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4250;
   label$4251:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4250:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4252;
   label$4253:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4252:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4254;
   label$4255:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4254:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4256;
   label$4257:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4256:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4258;
   label$4259:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + 5184ll) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$4229;
   label$4258:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4260;
   label$4261:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   label$4260:;
   label$4229:;
  }
 }
 goto label$4227;
 label$4228:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0X$) | (int64)-(ADR$1 == (double)(int64)SP1X$)) | (int64)-(ADR$1 == (double)(int64)SP2X$)) | (int64)-(ADR$1 == (double)(int64)SP3X$)) | (int64)-(ADR$1 == (double)(int64)SP4X$)) | (int64)-(ADR$1 == (double)(int64)SP5X$)) | (int64)-(ADR$1 == (double)(int64)SP6X$)) | (int64)-(ADR$1 == (double)(int64)SP7X$)) == 0ll ) goto label$4262;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$4227;
 label$4262:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0Y$) | (int64)-(ADR$1 == (double)(int64)SP1Y$)) | (int64)-(ADR$1 == (double)(int64)SP2Y$)) | (int64)-(ADR$1 == (double)(int64)SP3Y$)) | (int64)-(ADR$1 == (double)(int64)SP4Y$)) | (int64)-(ADR$1 == (double)(int64)SP5Y$)) | (int64)-(ADR$1 == (double)(int64)SP6Y$)) | (int64)-(ADR$1 == (double)(int64)SP7Y$)) == 0ll ) goto label$4263;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$4227;
 label$4263:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0COL$) | (int64)-(ADR$1 == (double)(int64)SP1COL$)) | (int64)-(ADR$1 == (double)(int64)SP2COL$)) | (int64)-(ADR$1 == (double)(int64)SP3COL$)) | (int64)-(ADR$1 == (double)(int64)SP4COL$)) | (int64)-(ADR$1 == (double)(int64)SP5COL$)) | (int64)-(ADR$1 == (double)(int64)SP6COL$)) | (int64)-(ADR$1 == (double)(int64)SP7COL$)) == 0ll ) goto label$4264;
 {
  _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)FCOLOR$, V$1 );
 }
 goto label$4227;
 label$4264:;
 if( ADR$1 != (double)(int64)EXTCOL$ ) goto label$4265;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$4267;
  goto label$4268;
  label$4267:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$4270;
  goto label$4271;
  label$4270:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$4273;
  goto label$4274;
  label$4273:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$4276;
  goto label$4277;
  label$4276:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$4279;
  goto label$4280;
  label$4279:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$4282;
  goto label$4283;
  label$4282:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$4285;
  goto label$4286;
  label$4285:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$4288;
  goto label$4289;
  label$4288:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$4291;
  goto label$4292;
  label$4291:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$4294;
  goto label$4295;
  label$4294:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$4297;
  goto label$4298;
  label$4297:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$4300;
  goto label$4301;
  label$4300:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$4303;
  goto label$4304;
  label$4303:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$4306;
  goto label$4307;
  label$4306:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$4309;
  goto label$4310;
  label$4309:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$4312;
  goto label$4313;
  label$4312:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4315;
  goto label$4316;
  label$4315:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4318;
  goto label$4319;
  label$4318:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4321;
  goto label$4322;
  label$4321:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4324;
  goto label$4325;
  label$4324:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4327;
  goto label$4328;
  label$4327:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4330;
  goto label$4331;
  label$4330:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4333;
  goto label$4334;
  label$4333:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4336;
  goto label$4337;
  label$4336:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4339;
  goto label$4340;
  label$4339:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4342;
  goto label$4343;
  label$4342:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4345;
  goto label$4346;
  label$4345:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4348;
  goto label$4349;
  label$4348:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4351;
  goto label$4352;
  label$4351:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4354;
  goto label$4355;
  label$4354:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4357;
  goto label$4358;
  label$4357:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4360;
  goto label$4361;
  label$4360:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4363;
  goto label$4364;
  label$4363:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4366;
  goto label$4367;
  label$4366:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4369;
  goto label$4370;
  label$4369:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4372;
  goto label$4373;
  label$4372:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4375;
  goto label$4376;
  label$4375:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4378;
  goto label$4379;
  label$4378:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4381;
  goto label$4382;
  label$4381:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4384;
  goto label$4385;
  label$4384:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4387;
  goto label$4388;
  label$4387:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4390;
  goto label$4391;
  label$4390:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4393;
  goto label$4394;
  label$4393:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4396;
  goto label$4397;
  label$4396:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4399;
  goto label$4400;
  label$4399:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4402;
  goto label$4403;
  label$4402:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4405;
  goto label$4406;
  label$4405:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4408;
  goto label$4409;
  label$4408:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4411;
  goto label$4412;
  label$4411:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4414;
  goto label$4415;
  label$4414:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4417;
  goto label$4418;
  label$4417:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4420;
  goto label$4421;
  label$4420:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4423;
  goto label$4424;
  label$4423:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4426;
  goto label$4427;
  label$4426:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4429;
  goto label$4430;
  label$4429:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4432;
  goto label$4433;
  label$4432:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4435;
  goto label$4436;
  label$4435:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4438;
  goto label$4439;
  label$4438:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4441;
  goto label$4442;
  label$4441:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4444;
  goto label$4445;
  label$4444:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4447;
  goto label$4448;
  label$4447:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4450;
  goto label$4451;
  label$4450:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4453;
  goto label$4454;
  label$4453:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4456;
  goto label$4457;
  label$4456:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4459;
  goto label$4460;
  label$4459:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4462;
  goto label$4463;
  label$4462:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4465;
  goto label$4466;
  label$4465:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4468;
  goto label$4469;
  label$4468:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4471;
  goto label$4472;
  label$4471:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4474;
  goto label$4475;
  label$4474:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4477;
  goto label$4478;
  label$4477:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4480;
  goto label$4481;
  label$4480:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4483;
  goto label$4484;
  label$4483:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4486;
  goto label$4487;
  label$4486:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4489;
  goto label$4490;
  label$4489:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4492;
  goto label$4493;
  label$4492:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4495;
  goto label$4496;
  label$4495:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4498;
  goto label$4499;
  label$4498:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4501;
  goto label$4502;
  label$4501:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4504;
  goto label$4505;
  label$4504:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4507;
  goto label$4508;
  label$4507:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4510;
  goto label$4511;
  label$4510:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4513;
  goto label$4514;
  label$4513:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4516;
  goto label$4517;
  label$4516:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4519;
  goto label$4520;
  label$4519:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4522;
  goto label$4523;
  label$4522:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4525;
  goto label$4526;
  label$4525:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4528;
  goto label$4529;
  label$4528:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4531;
  goto label$4532;
  label$4531:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4534;
  goto label$4535;
  label$4534:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4537;
  goto label$4538;
  label$4537:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4540;
  goto label$4541;
  label$4540:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4543;
  goto label$4544;
  label$4543:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4546;
  goto label$4547;
  label$4546:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4549;
  goto label$4550;
  label$4549:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4552;
  goto label$4553;
  label$4552:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4555;
  goto label$4556;
  label$4555:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4558;
  goto label$4559;
  label$4558:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4561;
  goto label$4562;
  label$4561:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4564;
  goto label$4565;
  label$4564:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4567;
  goto label$4568;
  label$4567:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4570;
  goto label$4571;
  label$4570:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4573;
  goto label$4574;
  label$4573:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4576;
  goto label$4577;
  label$4576:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4579;
  goto label$4580;
  label$4579:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4582;
  goto label$4583;
  label$4582:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4585;
  goto label$4586;
  label$4585:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4588;
  goto label$4589;
  label$4588:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4591;
  goto label$4592;
  label$4591:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4594;
  goto label$4595;
  label$4594:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4597;
  goto label$4598;
  label$4597:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4600;
  goto label$4601;
  label$4600:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4603;
  goto label$4604;
  label$4603:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4606;
  goto label$4607;
  label$4606:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4609;
  goto label$4610;
  label$4609:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4612;
  goto label$4613;
  label$4612:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4615;
  goto label$4616;
  label$4615:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4618;
  goto label$4619;
  label$4618:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4621;
  goto label$4622;
  label$4621:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4624;
  goto label$4625;
  label$4624:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4627;
  goto label$4628;
  label$4627:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4630;
  goto label$4631;
  label$4630:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4633;
  goto label$4634;
  label$4633:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4636;
  goto label$4637;
  label$4636:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4639;
  goto label$4640;
  label$4639:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4642;
  goto label$4643;
  label$4642:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4645;
  goto label$4646;
  label$4645:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4648;
  goto label$4649;
  label$4648:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4651;
  goto label$4652;
  label$4651:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4654;
  goto label$4655;
  label$4654:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4657;
  goto label$4658;
  label$4657:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4660;
  goto label$4661;
  label$4660:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4663;
  goto label$4664;
  label$4663:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4666;
  goto label$4667;
  label$4666:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4669;
  goto label$4670;
  label$4669:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4672;
  goto label$4673;
  label$4672:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4675;
  goto label$4676;
  label$4675:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4678;
  goto label$4679;
  label$4678:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4681;
  goto label$4682;
  label$4681:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4684;
  goto label$4685;
  label$4684:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4687;
  goto label$4688;
  label$4687:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4690;
  goto label$4691;
  label$4690:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4693;
  goto label$4694;
  label$4693:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4696;
  goto label$4697;
  label$4696:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4699;
  goto label$4700;
  label$4699:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4702;
  goto label$4703;
  label$4702:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4705;
  goto label$4706;
  label$4705:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4708;
  goto label$4709;
  label$4708:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4711;
  goto label$4712;
  label$4711:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4714;
  goto label$4715;
  label$4714:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4717;
  goto label$4718;
  label$4717:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4720;
  goto label$4721;
  label$4720:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4723;
  goto label$4724;
  label$4723:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4726;
  goto label$4727;
  label$4726:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4729;
  goto label$4730;
  label$4729:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4732;
  goto label$4733;
  label$4732:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4735;
  goto label$4736;
  label$4735:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4738;
  goto label$4739;
  label$4738:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4741;
  goto label$4742;
  label$4741:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4744;
  goto label$4745;
  label$4744:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4747;
  goto label$4748;
  label$4747:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4750;
  goto label$4751;
  label$4750:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4753;
  goto label$4754;
  label$4753:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4756;
  goto label$4757;
  label$4756:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4759;
  goto label$4760;
  label$4759:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4762;
  goto label$4763;
  label$4762:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4765;
  goto label$4766;
  label$4765:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4768;
  goto label$4769;
  label$4768:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4771;
  goto label$4772;
  label$4771:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4774;
  goto label$4775;
  label$4774:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4777;
  goto label$4778;
  label$4777:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4780;
  goto label$4781;
  label$4780:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4783;
  goto label$4784;
  label$4783:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4786;
  goto label$4787;
  label$4786:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4789;
  goto label$4790;
  label$4789:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4792;
  goto label$4793;
  label$4792:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4795;
  goto label$4796;
  label$4795:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4798;
  goto label$4799;
  label$4798:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4801;
  goto label$4802;
  label$4801:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4804;
  goto label$4805;
  label$4804:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4807;
  goto label$4808;
  label$4807:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4810;
  goto label$4811;
  label$4810:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4813;
  goto label$4814;
  label$4813:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4816;
  goto label$4817;
  label$4816:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4819;
  goto label$4820;
  label$4819:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4822;
  goto label$4823;
  label$4822:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4825;
  goto label$4826;
  label$4825:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4828;
  goto label$4829;
  label$4828:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4831;
  goto label$4832;
  label$4831:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4834;
  goto label$4835;
  label$4834:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4837;
  goto label$4838;
  label$4837:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4840;
  goto label$4841;
  label$4840:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4843;
  goto label$4844;
  label$4843:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4846;
  goto label$4847;
  label$4846:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4849;
  goto label$4850;
  label$4849:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4852;
  goto label$4853;
  label$4852:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4855;
  goto label$4856;
  label$4855:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4858;
  goto label$4859;
  label$4858:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4861;
  goto label$4862;
  label$4861:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4864;
  goto label$4865;
  label$4864:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4867;
  goto label$4868;
  label$4867:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4870;
  goto label$4871;
  label$4870:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4873;
  goto label$4874;
  label$4873:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4876;
  goto label$4877;
  label$4876:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4879;
  goto label$4880;
  label$4879:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4882;
  goto label$4883;
  label$4882:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4885;
  goto label$4886;
  label$4885:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4888;
  goto label$4889;
  label$4888:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4891;
  goto label$4892;
  label$4891:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4894;
  goto label$4895;
  label$4894:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4897;
  goto label$4898;
  label$4897:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4900;
  goto label$4901;
  label$4900:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4903;
  goto label$4904;
  label$4903:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4906;
  goto label$4907;
  label$4906:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4909;
  goto label$4910;
  label$4909:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4912;
  goto label$4913;
  label$4912:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4915;
  goto label$4916;
  label$4915:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4918;
  goto label$4919;
  label$4918:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4921;
  goto label$4922;
  label$4921:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4924;
  goto label$4925;
  label$4924:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4927;
  goto label$4928;
  label$4927:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4930;
  goto label$4931;
  label$4930:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4933;
  goto label$4934;
  label$4933:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4936;
  goto label$4937;
  label$4936:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4939;
  goto label$4940;
  label$4939:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4942;
  goto label$4943;
  label$4942:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4945;
  goto label$4946;
  label$4945:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4948;
  goto label$4949;
  label$4948:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4951;
  goto label$4952;
  label$4951:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4954;
  goto label$4955;
  label$4954:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4957;
  goto label$4958;
  label$4957:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4960;
  goto label$4961;
  label$4960:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4963;
  goto label$4964;
  label$4963:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4966;
  goto label$4967;
  label$4966:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4969;
  goto label$4970;
  label$4969:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4972;
  goto label$4973;
  label$4972:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4975;
  goto label$4976;
  label$4975:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4978;
  goto label$4979;
  label$4978:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4981;
  goto label$4982;
  label$4981:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4984;
  goto label$4985;
  label$4984:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4987;
  goto label$4988;
  label$4987:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4990;
  goto label$4991;
  label$4990:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4993;
  goto label$4994;
  label$4993:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4996;
  goto label$4997;
  label$4996:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4999;
  goto label$5000;
  label$4999:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5002;
  goto label$5003;
  label$5002:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5005;
  goto label$5006;
  label$5005:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5008;
  goto label$5009;
  label$5008:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5011;
  goto label$5012;
  label$5011:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5014;
  goto label$5015;
  label$5014:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5017;
  goto label$5018;
  label$5017:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5020;
  goto label$5021;
  label$5020:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5023;
  goto label$5024;
  label$5023:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5026;
  goto label$5027;
  label$5026:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5029;
  goto label$5030;
  label$5029:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5032;
  goto label$5033;
  label$5032:;
  goto label$5034;
  label$4268:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$5035;
  label$4271:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 51ll);
  goto label$5035;
  label$4274:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 102ll);
  goto label$5035;
  label$4277:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 153ll);
  goto label$5035;
  label$4280:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 204ll);
  goto label$5035;
  label$4283:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$5035;
  label$4286:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13056ll);
  goto label$5035;
  label$4289:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13107ll);
  goto label$5035;
  label$4292:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13158ll);
  goto label$5035;
  label$4295:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13209ll);
  goto label$5035;
  label$4298:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$5035;
  label$4301:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13311ll);
  goto label$5035;
  label$4304:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26112ll);
  goto label$5035;
  label$4307:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26163ll);
  goto label$5035;
  label$4310:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26214ll);
  goto label$5035;
  label$4313:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$5035;
  label$4316:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26316ll);
  goto label$5035;
  label$4319:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26367ll);
  goto label$5035;
  label$4322:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39168ll);
  goto label$5035;
  label$4325:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39219ll);
  goto label$5035;
  label$4328:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$5035;
  label$4331:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39321ll);
  goto label$5035;
  label$4334:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39372ll);
  goto label$5035;
  label$4337:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39423ll);
  goto label$5035;
  label$4340:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52224ll);
  goto label$5035;
  label$4343:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$5035;
  label$4346:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52326ll);
  goto label$5035;
  label$4349:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52377ll);
  goto label$5035;
  label$4352:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52428ll);
  goto label$5035;
  label$4355:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52479ll);
  goto label$5035;
  label$4358:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$5035;
  label$4361:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$5035;
  label$4364:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$5035;
  label$4367:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65433ll);
  goto label$5035;
  label$4370:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65484ll);
  goto label$5035;
  label$4373:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65535ll);
  goto label$5035;
  label$4376:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$5035;
  label$4379:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342387ll);
  goto label$5035;
  label$4382:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342438ll);
  goto label$5035;
  label$4385:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342489ll);
  goto label$5035;
  label$4388:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$5035;
  label$4391:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342591ll);
  goto label$5035;
  label$4394:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355392ll);
  goto label$5035;
  label$4397:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355443ll);
  goto label$5035;
  label$4400:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355494ll);
  goto label$5035;
  label$4403:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355545ll);
  goto label$5035;
  label$4406:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355596ll);
  goto label$5035;
  label$4409:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355647ll);
  goto label$5035;
  label$4412:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368448ll);
  goto label$5035;
  label$4415:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368499ll);
  goto label$5035;
  label$4418:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368550ll);
  goto label$5035;
  label$4421:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368601ll);
  goto label$5035;
  label$4424:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368652ll);
  goto label$5035;
  label$4427:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368703ll);
  goto label$5035;
  label$4430:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381504ll);
  goto label$5035;
  label$4433:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381555ll);
  goto label$5035;
  label$4436:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381606ll);
  goto label$5035;
  label$4439:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381657ll);
  goto label$5035;
  label$4442:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381708ll);
  goto label$5035;
  label$4445:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381759ll);
  goto label$5035;
  label$4448:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$5035;
  label$4451:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394611ll);
  goto label$5035;
  label$4454:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394662ll);
  goto label$5035;
  label$4457:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394713ll);
  goto label$5035;
  label$4460:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394764ll);
  goto label$5035;
  label$4463:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394815ll);
  goto label$5035;
  label$4466:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$5035;
  label$4469:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$5035;
  label$4472:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407718ll);
  goto label$5035;
  label$4475:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407769ll);
  goto label$5035;
  label$4478:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407820ll);
  goto label$5035;
  label$4481:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407871ll);
  goto label$5035;
  label$4484:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$5035;
  label$4487:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684723ll);
  goto label$5035;
  label$4490:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684774ll);
  goto label$5035;
  label$4493:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$5035;
  label$4496:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684876ll);
  goto label$5035;
  label$4499:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684927ll);
  goto label$5035;
  label$4502:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697728ll);
  goto label$5035;
  label$4505:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697779ll);
  goto label$5035;
  label$4508:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697830ll);
  goto label$5035;
  label$4511:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697881ll);
  goto label$5035;
  label$4514:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697932ll);
  goto label$5035;
  label$4517:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697983ll);
  goto label$5035;
  label$4520:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710784ll);
  goto label$5035;
  label$4523:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710835ll);
  goto label$5035;
  label$4526:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710886ll);
  goto label$5035;
  label$4529:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710937ll);
  goto label$5035;
  label$4532:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710988ll);
  goto label$5035;
  label$4535:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6711039ll);
  goto label$5035;
  label$4538:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$5035;
  label$4541:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723891ll);
  goto label$5035;
  label$4544:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723942ll);
  goto label$5035;
  label$4547:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723993ll);
  goto label$5035;
  label$4550:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6724095ll);
  goto label$5035;
  label$4553:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736896ll);
  goto label$5035;
  label$4556:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736947ll);
  goto label$5035;
  label$4559:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736998ll);
  goto label$5035;
  label$4562:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737049ll);
  goto label$5035;
  label$4565:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737100ll);
  goto label$5035;
  label$4568:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737151ll);
  goto label$5035;
  label$4571:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6749952ll);
  goto label$5035;
  label$4574:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750003ll);
  goto label$5035;
  label$4577:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$5035;
  label$4580:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750105ll);
  goto label$5035;
  label$4583:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750156ll);
  goto label$5035;
  label$4586:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750207ll);
  goto label$5035;
  label$4589:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$5035;
  label$4592:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027059ll);
  goto label$5035;
  label$4595:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$5035;
  label$4598:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027161ll);
  goto label$5035;
  label$4601:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027212ll);
  goto label$5035;
  label$4604:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027263ll);
  goto label$5035;
  label$4607:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040064ll);
  goto label$5035;
  label$4610:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040115ll);
  goto label$5035;
  label$4613:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040166ll);
  goto label$5035;
  label$4616:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040217ll);
  goto label$5035;
  label$4619:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040268ll);
  goto label$5035;
  label$4622:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040319ll);
  goto label$5035;
  label$4625:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$5035;
  label$4628:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053171ll);
  goto label$5035;
  label$4631:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053222ll);
  goto label$5035;
  label$4634:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053273ll);
  goto label$5035;
  label$4637:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053324ll);
  goto label$5035;
  label$4640:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053375ll);
  goto label$5035;
  label$4643:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066176ll);
  goto label$5035;
  label$4646:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066227ll);
  goto label$5035;
  label$4649:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066278ll);
  goto label$5035;
  label$4652:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066329ll);
  goto label$5035;
  label$4655:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066380ll);
  goto label$5035;
  label$4658:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066431ll);
  goto label$5035;
  label$4661:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079232ll);
  goto label$5035;
  label$4664:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079283ll);
  goto label$5035;
  label$4667:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079334ll);
  goto label$5035;
  label$4670:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079385ll);
  goto label$5035;
  label$4673:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079436ll);
  goto label$5035;
  label$4676:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079487ll);
  goto label$5035;
  label$4679:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092288ll);
  goto label$5035;
  label$4682:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092339ll);
  goto label$5035;
  label$4685:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092390ll);
  goto label$5035;
  label$4688:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092441ll);
  goto label$5035;
  label$4691:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092492ll);
  goto label$5035;
  label$4694:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092543ll);
  goto label$5035;
  label$4697:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$5035;
  label$4700:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$5035;
  label$4703:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369446ll);
  goto label$5035;
  label$4706:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369497ll);
  goto label$5035;
  label$4709:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369548ll);
  goto label$5035;
  label$4712:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369599ll);
  goto label$5035;
  label$4715:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$5035;
  label$4718:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382451ll);
  goto label$5035;
  label$4721:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382502ll);
  goto label$5035;
  label$4724:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382553ll);
  goto label$5035;
  label$4727:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382604ll);
  goto label$5035;
  label$4730:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382655ll);
  goto label$5035;
  label$4733:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395456ll);
  goto label$5035;
  label$4736:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395507ll);
  goto label$5035;
  label$4739:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395558ll);
  goto label$5035;
  label$4742:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395609ll);
  goto label$5035;
  label$4745:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395660ll);
  goto label$5035;
  label$4748:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395711ll);
  goto label$5035;
  label$4751:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408512ll);
  goto label$5035;
  label$4754:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408563ll);
  goto label$5035;
  label$4757:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408614ll);
  goto label$5035;
  label$4760:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408665ll);
  goto label$5035;
  label$4763:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408716ll);
  goto label$5035;
  label$4766:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408767ll);
  goto label$5035;
  label$4769:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421568ll);
  goto label$5035;
  label$4772:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421619ll);
  goto label$5035;
  label$4775:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421670ll);
  goto label$5035;
  label$4778:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421721ll);
  goto label$5035;
  label$4781:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421772ll);
  goto label$5035;
  label$4784:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421823ll);
  goto label$5035;
  label$4787:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434624ll);
  goto label$5035;
  label$4790:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434675ll);
  goto label$5035;
  label$4793:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434726ll);
  goto label$5035;
  label$4796:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434777ll);
  goto label$5035;
  label$4799:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434828ll);
  goto label$5035;
  label$4802:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434879ll);
  goto label$5035;
  label$4805:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$5035;
  label$4808:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711731ll);
  goto label$5035;
  label$4811:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711782ll);
  goto label$5035;
  label$4814:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711833ll);
  goto label$5035;
  label$4817:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711884ll);
  goto label$5035;
  label$4820:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711935ll);
  goto label$5035;
  label$4823:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724736ll);
  goto label$5035;
  label$4826:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724787ll);
  goto label$5035;
  label$4829:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724838ll);
  goto label$5035;
  label$4832:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724889ll);
  goto label$5035;
  label$4835:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724940ll);
  goto label$5035;
  label$4838:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724991ll);
  goto label$5035;
  label$4841:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737792ll);
  goto label$5035;
  label$4844:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737843ll);
  goto label$5035;
  label$4847:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737894ll);
  goto label$5035;
  label$4850:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737945ll);
  goto label$5035;
  label$4853:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737996ll);
  goto label$5035;
  label$4856:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16738047ll);
  goto label$5035;
  label$4859:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750848ll);
  goto label$5035;
  label$4862:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750899ll);
  goto label$5035;
  label$4865:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750950ll);
  goto label$5035;
  label$4868:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751001ll);
  goto label$5035;
  label$4871:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751052ll);
  goto label$5035;
  label$4874:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763904ll);
  goto label$5035;
  label$4877:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763955ll);
  goto label$5035;
  label$4880:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764006ll);
  goto label$5035;
  label$4883:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764057ll);
  goto label$5035;
  label$4886:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764108ll);
  goto label$5035;
  label$4889:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764159ll);
  goto label$5035;
  label$4892:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16776960ll);
  goto label$5035;
  label$4895:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777011ll);
  goto label$5035;
  label$4898:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777062ll);
  goto label$5035;
  label$4901:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777113ll);
  goto label$5035;
  label$4904:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777164ll);
  goto label$5035;
  label$4907:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777215ll);
  goto label$5035;
  label$4910:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 14737632ll);
  goto label$5035;
  label$4913:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 12698049ll);
  goto label$5035;
  label$4916:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10658466ll);
  goto label$5035;
  label$4919:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 8618883ll);
  goto label$5035;
  label$4922:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6579300ll);
  goto label$5035;
  label$4925:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4539717ll);
  goto label$5035;
  label$4928:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4605510ll);
  goto label$5035;
  label$4931:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 460551ll);
  goto label$5035;
  label$4934:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$5035;
  label$4937:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$5035;
  label$4940:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$5035;
  label$4943:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$5035;
  label$4946:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$5035;
  label$4949:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$5035;
  label$4952:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$5035;
  label$4955:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$5035;
  label$4958:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$5035;
  label$4961:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$5035;
  label$4964:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$5035;
  label$4967:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$5035;
  label$4970:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$5035;
  label$4973:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$5035;
  label$4976:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$5035;
  label$4979:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$5035;
  label$4982:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$5035;
  label$4985:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$5035;
  label$4988:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$5035;
  label$4991:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$5035;
  label$4994:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$5035;
  label$4997:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$5035;
  label$5000:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$5035;
  label$5003:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$5035;
  label$5006:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$5035;
  label$5009:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16756736ll);
  goto label$5035;
  label$5012:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16760832ll);
  goto label$5035;
  label$5015:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$5035;
  label$5018:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$5035;
  label$5021:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$5035;
  label$5024:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$5035;
  label$5027:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$5035;
  label$5030:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$5035;
  label$5033:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$5035;
  label$5035:;
  fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )), 2, 65535u, 0 );
  label$5036:;
 }
 goto label$4227;
 label$4265:;
 if( ((((int64)-(ADR$1 == (double)(int64)BGCOL0$) | (int64)-(ADR$1 == (double)(int64)BGCOL1$)) | (int64)-(ADR$1 == (double)(int64)BGCOL2$)) | (int64)-(ADR$1 == (double)(int64)BGCOL3$)) == 0ll ) goto label$5037;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$5039;
  goto label$5040;
  label$5039:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$5042;
  goto label$5043;
  label$5042:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$5045;
  goto label$5046;
  label$5045:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$5048;
  goto label$5049;
  label$5048:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$5051;
  goto label$5052;
  label$5051:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$5054;
  goto label$5055;
  label$5054:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$5057;
  goto label$5058;
  label$5057:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$5060;
  goto label$5061;
  label$5060:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$5063;
  goto label$5064;
  label$5063:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$5066;
  goto label$5067;
  label$5066:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$5069;
  goto label$5070;
  label$5069:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$5072;
  goto label$5073;
  label$5072:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$5075;
  goto label$5076;
  label$5075:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$5078;
  goto label$5079;
  label$5078:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$5081;
  goto label$5082;
  label$5081:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$5084;
  goto label$5085;
  label$5084:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5087;
  goto label$5088;
  label$5087:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5090;
  goto label$5091;
  label$5090:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5093;
  goto label$5094;
  label$5093:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5096;
  goto label$5097;
  label$5096:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5099;
  goto label$5100;
  label$5099:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5102;
  goto label$5103;
  label$5102:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5105;
  goto label$5106;
  label$5105:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5108;
  goto label$5109;
  label$5108:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5111;
  goto label$5112;
  label$5111:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5114;
  goto label$5115;
  label$5114:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5117;
  goto label$5118;
  label$5117:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5120;
  goto label$5121;
  label$5120:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5123;
  goto label$5124;
  label$5123:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5126;
  goto label$5127;
  label$5126:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5129;
  goto label$5130;
  label$5129:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5132;
  goto label$5133;
  label$5132:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5135;
  goto label$5136;
  label$5135:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5138;
  goto label$5139;
  label$5138:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5141;
  goto label$5142;
  label$5141:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5144;
  goto label$5145;
  label$5144:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5147;
  goto label$5148;
  label$5147:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5150;
  goto label$5151;
  label$5150:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5153;
  goto label$5154;
  label$5153:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5156;
  goto label$5157;
  label$5156:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5159;
  goto label$5160;
  label$5159:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5162;
  goto label$5163;
  label$5162:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5165;
  goto label$5166;
  label$5165:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5168;
  goto label$5169;
  label$5168:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5171;
  goto label$5172;
  label$5171:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5174;
  goto label$5175;
  label$5174:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5177;
  goto label$5178;
  label$5177:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5180;
  goto label$5181;
  label$5180:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5183;
  goto label$5184;
  label$5183:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5186;
  goto label$5187;
  label$5186:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5189;
  goto label$5190;
  label$5189:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5192;
  goto label$5193;
  label$5192:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5195;
  goto label$5196;
  label$5195:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5198;
  goto label$5199;
  label$5198:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5201;
  goto label$5202;
  label$5201:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5204;
  goto label$5205;
  label$5204:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5207;
  goto label$5208;
  label$5207:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5210;
  goto label$5211;
  label$5210:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5213;
  goto label$5214;
  label$5213:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5216;
  goto label$5217;
  label$5216:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5219;
  goto label$5220;
  label$5219:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5222;
  goto label$5223;
  label$5222:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5225;
  goto label$5226;
  label$5225:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5228;
  goto label$5229;
  label$5228:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5231;
  goto label$5232;
  label$5231:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5234;
  goto label$5235;
  label$5234:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5237;
  goto label$5238;
  label$5237:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5240;
  goto label$5241;
  label$5240:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5243;
  goto label$5244;
  label$5243:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5246;
  goto label$5247;
  label$5246:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5249;
  goto label$5250;
  label$5249:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5252;
  goto label$5253;
  label$5252:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5255;
  goto label$5256;
  label$5255:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5258;
  goto label$5259;
  label$5258:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5261;
  goto label$5262;
  label$5261:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5264;
  goto label$5265;
  label$5264:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5267;
  goto label$5268;
  label$5267:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5270;
  goto label$5271;
  label$5270:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5273;
  goto label$5274;
  label$5273:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5276;
  goto label$5277;
  label$5276:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5279;
  goto label$5280;
  label$5279:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5282;
  goto label$5283;
  label$5282:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5285;
  goto label$5286;
  label$5285:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5288;
  goto label$5289;
  label$5288:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5291;
  goto label$5292;
  label$5291:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5294;
  goto label$5295;
  label$5294:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5297;
  goto label$5298;
  label$5297:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5300;
  goto label$5301;
  label$5300:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5303;
  goto label$5304;
  label$5303:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5306;
  goto label$5307;
  label$5306:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5309;
  goto label$5310;
  label$5309:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5312;
  goto label$5313;
  label$5312:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5315;
  goto label$5316;
  label$5315:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5318;
  goto label$5319;
  label$5318:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5321;
  goto label$5322;
  label$5321:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5324;
  goto label$5325;
  label$5324:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5327;
  goto label$5328;
  label$5327:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5330;
  goto label$5331;
  label$5330:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5333;
  goto label$5334;
  label$5333:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5336;
  goto label$5337;
  label$5336:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5339;
  goto label$5340;
  label$5339:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5342;
  goto label$5343;
  label$5342:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5345;
  goto label$5346;
  label$5345:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5348;
  goto label$5349;
  label$5348:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5351;
  goto label$5352;
  label$5351:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5354;
  goto label$5355;
  label$5354:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5357;
  goto label$5358;
  label$5357:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5360;
  goto label$5361;
  label$5360:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5363;
  goto label$5364;
  label$5363:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5366;
  goto label$5367;
  label$5366:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5369;
  goto label$5370;
  label$5369:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5372;
  goto label$5373;
  label$5372:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5375;
  goto label$5376;
  label$5375:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5378;
  goto label$5379;
  label$5378:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5381;
  goto label$5382;
  label$5381:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5384;
  goto label$5385;
  label$5384:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5387;
  goto label$5388;
  label$5387:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5390;
  goto label$5391;
  label$5390:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5393;
  goto label$5394;
  label$5393:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5396;
  goto label$5397;
  label$5396:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5399;
  goto label$5400;
  label$5399:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5402;
  goto label$5403;
  label$5402:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5405;
  goto label$5406;
  label$5405:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5408;
  goto label$5409;
  label$5408:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5411;
  goto label$5412;
  label$5411:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5414;
  goto label$5415;
  label$5414:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5417;
  goto label$5418;
  label$5417:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5420;
  goto label$5421;
  label$5420:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5423;
  goto label$5424;
  label$5423:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5426;
  goto label$5427;
  label$5426:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5429;
  goto label$5430;
  label$5429:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5432;
  goto label$5433;
  label$5432:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5435;
  goto label$5436;
  label$5435:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5438;
  goto label$5439;
  label$5438:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5441;
  goto label$5442;
  label$5441:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5444;
  goto label$5445;
  label$5444:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5447;
  goto label$5448;
  label$5447:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5450;
  goto label$5451;
  label$5450:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5453;
  goto label$5454;
  label$5453:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5456;
  goto label$5457;
  label$5456:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5459;
  goto label$5460;
  label$5459:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5462;
  goto label$5463;
  label$5462:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5465;
  goto label$5466;
  label$5465:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5468;
  goto label$5469;
  label$5468:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5471;
  goto label$5472;
  label$5471:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5474;
  goto label$5475;
  label$5474:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5477;
  goto label$5478;
  label$5477:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5480;
  goto label$5481;
  label$5480:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5483;
  goto label$5484;
  label$5483:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5486;
  goto label$5487;
  label$5486:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5489;
  goto label$5490;
  label$5489:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5492;
  goto label$5493;
  label$5492:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5495;
  goto label$5496;
  label$5495:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5498;
  goto label$5499;
  label$5498:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5501;
  goto label$5502;
  label$5501:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5504;
  goto label$5505;
  label$5504:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5507;
  goto label$5508;
  label$5507:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5510;
  goto label$5511;
  label$5510:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5513;
  goto label$5514;
  label$5513:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5516;
  goto label$5517;
  label$5516:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5519;
  goto label$5520;
  label$5519:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5522;
  goto label$5523;
  label$5522:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5525;
  goto label$5526;
  label$5525:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5528;
  goto label$5529;
  label$5528:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5531;
  goto label$5532;
  label$5531:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5534;
  goto label$5535;
  label$5534:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5537;
  goto label$5538;
  label$5537:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5540;
  goto label$5541;
  label$5540:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5543;
  goto label$5544;
  label$5543:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5546;
  goto label$5547;
  label$5546:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5549;
  goto label$5550;
  label$5549:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5552;
  goto label$5553;
  label$5552:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5555;
  goto label$5556;
  label$5555:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5558;
  goto label$5559;
  label$5558:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5561;
  goto label$5562;
  label$5561:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5564;
  goto label$5565;
  label$5564:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5567;
  goto label$5568;
  label$5567:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5570;
  goto label$5571;
  label$5570:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5573;
  goto label$5574;
  label$5573:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5576;
  goto label$5577;
  label$5576:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5579;
  goto label$5580;
  label$5579:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5582;
  goto label$5583;
  label$5582:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5585;
  goto label$5586;
  label$5585:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5588;
  goto label$5589;
  label$5588:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5591;
  goto label$5592;
  label$5591:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5594;
  goto label$5595;
  label$5594:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5597;
  goto label$5598;
  label$5597:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5600;
  goto label$5601;
  label$5600:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5603;
  goto label$5604;
  label$5603:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5606;
  goto label$5607;
  label$5606:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5609;
  goto label$5610;
  label$5609:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5612;
  goto label$5613;
  label$5612:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5615;
  goto label$5616;
  label$5615:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5618;
  goto label$5619;
  label$5618:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5621;
  goto label$5622;
  label$5621:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5624;
  goto label$5625;
  label$5624:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5627;
  goto label$5628;
  label$5627:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5630;
  goto label$5631;
  label$5630:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5633;
  goto label$5634;
  label$5633:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5636;
  goto label$5637;
  label$5636:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5639;
  goto label$5640;
  label$5639:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5642;
  goto label$5643;
  label$5642:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5645;
  goto label$5646;
  label$5645:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5648;
  goto label$5649;
  label$5648:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5651;
  goto label$5652;
  label$5651:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5654;
  goto label$5655;
  label$5654:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5657;
  goto label$5658;
  label$5657:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5660;
  goto label$5661;
  label$5660:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5663;
  goto label$5664;
  label$5663:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5666;
  goto label$5667;
  label$5666:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5669;
  goto label$5670;
  label$5669:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5672;
  goto label$5673;
  label$5672:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5675;
  goto label$5676;
  label$5675:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5678;
  goto label$5679;
  label$5678:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5681;
  goto label$5682;
  label$5681:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5684;
  goto label$5685;
  label$5684:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5687;
  goto label$5688;
  label$5687:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5690;
  goto label$5691;
  label$5690:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5693;
  goto label$5694;
  label$5693:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5696;
  goto label$5697;
  label$5696:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5699;
  goto label$5700;
  label$5699:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5702;
  goto label$5703;
  label$5702:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5705;
  goto label$5706;
  label$5705:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5708;
  goto label$5709;
  label$5708:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5711;
  goto label$5712;
  label$5711:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5714;
  goto label$5715;
  label$5714:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5717;
  goto label$5718;
  label$5717:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5720;
  goto label$5721;
  label$5720:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5723;
  goto label$5724;
  label$5723:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5726;
  goto label$5727;
  label$5726:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5729;
  goto label$5730;
  label$5729:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5732;
  goto label$5733;
  label$5732:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5735;
  goto label$5736;
  label$5735:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5738;
  goto label$5739;
  label$5738:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5741;
  goto label$5742;
  label$5741:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5744;
  goto label$5745;
  label$5744:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5747;
  goto label$5748;
  label$5747:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5750;
  goto label$5751;
  label$5750:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5753;
  goto label$5754;
  label$5753:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5756;
  goto label$5757;
  label$5756:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5759;
  goto label$5760;
  label$5759:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5762;
  goto label$5763;
  label$5762:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5765;
  goto label$5766;
  label$5765:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5768;
  goto label$5769;
  label$5768:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5771;
  goto label$5772;
  label$5771:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5774;
  goto label$5775;
  label$5774:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5777;
  goto label$5778;
  label$5777:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5780;
  goto label$5781;
  label$5780:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5783;
  goto label$5784;
  label$5783:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5786;
  goto label$5787;
  label$5786:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5789;
  goto label$5790;
  label$5789:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5792;
  goto label$5793;
  label$5792:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5795;
  goto label$5796;
  label$5795:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5798;
  goto label$5799;
  label$5798:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5801;
  goto label$5802;
  label$5801:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5804;
  goto label$5805;
  label$5804:;
  goto label$5034;
  label$5040:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5043:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5046:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5049:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5052:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5055:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5058:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5061:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5064:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5067:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5070:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5073:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5076:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5079:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5082:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5085:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5088:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5091:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5094:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5097:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5100:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5103:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5106:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5109:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5112:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5115:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5118:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5121:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5124:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5127:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5130:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5133:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5136:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5139:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5142:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5145:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5148:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5151:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5154:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5157:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5160:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5163:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5166:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5169:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5172:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5175:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5178:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5181:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5184:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5187:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5190:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5193:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5196:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5199:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5202:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5205:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5208:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5211:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5214:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5217:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5220:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5223:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5226:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5229:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5232:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5235:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5238:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5241:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5244:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5247:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5250:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5253:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5256:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5259:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5262:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5265:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5268:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5271:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5274:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5277:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5280:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5283:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5286:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5289:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5292:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5295:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5298:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5301:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5304:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5307:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5310:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5313:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5316:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5319:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5322:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5325:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5328:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5331:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5334:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5337:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5340:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5343:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5346:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5349:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5352:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5355:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5358:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5361:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5364:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5367:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5370:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5373:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5376:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5379:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5382:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5385:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5388:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5391:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5394:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5397:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5400:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5403:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5406:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5409:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5412:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5415:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5418:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5421:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5424:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5427:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5430:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5433:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5436:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5439:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5442:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5445:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5448:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5451:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5454:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5457:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5460:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5463:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5466:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5469:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5472:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5475:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5478:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5481:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5484:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5487:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5490:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5493:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5496:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5499:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5502:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5505:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5508:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5511:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5514:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5517:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5520:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5523:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5526:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5529:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5532:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5535:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5538:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5541:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5544:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5547:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5550:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5553:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5556:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5559:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5562:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5565:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5568:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5571:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5574:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5577:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5580:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5583:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5586:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5589:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5592:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5595:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5598:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5601:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5604:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5607:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5610:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5613:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5616:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5619:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5622:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5625:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5628:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5631:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5634:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5637:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5640:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5643:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5646:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5649:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5652:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5655:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5658:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5661:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5664:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5667:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5670:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5673:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5676:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5679:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5682:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5685:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+7 );
  goto label$5034;
  label$5688:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.82p+7 );
  goto label$5034;
  label$5691:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.44p+7 );
  goto label$5034;
  label$5694:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.06p+7 );
  goto label$5034;
  label$5697:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.9p+6 );
  goto label$5034;
  label$5700:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.14p+6 );
  goto label$5034;
  label$5703:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.3p+5 );
  goto label$5034;
  label$5706:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+2 );
  goto label$5034;
  label$5709:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5712:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5715:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5718:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5721:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5724:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5727:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5730:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5733:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5736:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5739:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5742:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5745:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5748:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5751:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5754:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$5034;
  label$5757:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$5034;
  label$5760:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$5034;
  label$5763:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5766:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5769:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5772:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5775:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5778:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5781:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5784:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.6p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5787:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.8p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5790:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$5034;
  label$5793:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5796:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$5034;
  label$5799:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5802:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$5034;
  label$5805:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.4p+5 );
  goto label$5034;
  label$5034:;
 }
 label$5037:;
 label$4227:;
 {
  if( ADR$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$5807;
  label$5808:;
  {
  }
  goto label$5806;
  label$5807:;
  if( ADR$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$5809;
  label$5810:;
  {
   FBSTRING TMP$2329$3;
   FBSTRING TMP$2330$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6228 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$2329$3, 0, 24ll );
   FBSTRING* vr$6231 = fb_StrConcat( &TMP$2329$3, (void*)"mplayer -vo xv -fs -alang en dv://", 35ll, (void*)vr$6228, -1ll );
   __builtin_memset( &TMP$2330$3, 0, 24ll );
   FBSTRING* vr$6234 = fb_StrConcat( &TMP$2330$3, (void*)vr$6231, -1ll, (void*)" -dvd-device /dev/sr0", 22ll );
   fb_Shell( (FBSTRING*)vr$6234 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6235 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6235, 0, 1073741828 );
  }
  goto label$5806;
  label$5809:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5811;
  label$5812:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6242 = fb_StrAllocTempDescZEx( (uint8*)"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0", 66ll );
   fb_Shell( (FBSTRING*)vr$6242 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6243 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6243, 0, 1073741828 );
  }
  goto label$5806;
  label$5811:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5813;
  label$5814:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5813:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5815;
  label$5816:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5815:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5817;
  label$5818:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5817:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5819;
  label$5820:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5819:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5821;
  label$5822:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5821:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5823;
  label$5824:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5823:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5825;
  label$5826:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5825:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5827;
  label$5828:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5806;
  label$5827:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5829;
  label$5830:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393304ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393312ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393320ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393328ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393336ll);
  }
  goto label$5806;
  label$5829:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5831;
  label$5832:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393384ll);
  }
  goto label$5806;
  label$5831:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5833;
  label$5834:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393400ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393408ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393416ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393424ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393432ll);
  }
  goto label$5806;
  label$5833:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5835;
  label$5836:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393448ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393456ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393464ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393472ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393480ll);
  }
  goto label$5806;
  label$5835:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5837;
  label$5838:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393496ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393504ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393512ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393520ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393528ll);
  }
  goto label$5806;
  label$5837:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5839;
  label$5840:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393544ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393552ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393560ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393568ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393576ll);
  }
  goto label$5806;
  label$5839:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5841;
  label$5842:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393592ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393600ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393608ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393616ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393624ll);
  }
  goto label$5806;
  label$5841:;
  if( ADR$1 != 0x1.8068p+15 ) goto label$5843;
  label$5844:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393640ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393648ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393656ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393664ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393672ll);
  }
  goto label$5806;
  label$5843:;
  if( ADR$1 != 0x1.8074p+15 ) goto label$5845;
  label$5846:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393688ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393696ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393704ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393712ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393720ll);
  }
  goto label$5806;
  label$5845:;
  if( ADR$1 != 0x1.808p+15 ) goto label$5847;
  label$5848:;
  {
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393736ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393744ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393752ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393768ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393776ll);
  }
  goto label$5806;
  label$5847:;
  if( ADR$1 != 0x1.808Ep+15 ) goto label$5849;
  label$5850:;
  {
   *(double*)((int64)(double*)MEM64$ + 394920ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393792ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393824ll);
  }
  goto label$5806;
  label$5849:;
  if( ADR$1 != 0x1.8096p+15 ) goto label$5851;
  label$5852:;
  {
   *(double*)((int64)(double*)MEM64$ + 394928ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393832ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393840ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393848ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393856ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393864ll);
  }
  goto label$5806;
  label$5851:;
  if( ADR$1 != 0x1.80A4p+15 ) goto label$5853;
  label$5854:;
  {
   *(double*)((int64)(double*)MEM64$ + 394936ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393880ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393888ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393896ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393904ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393912ll);
  }
  goto label$5806;
  label$5853:;
  if( ADR$1 != 0x1.80Bp+15 ) goto label$5855;
  label$5856:;
  {
   *(double*)((int64)(double*)MEM64$ + 394944ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393928ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393936ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393944ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393952ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393960ll);
  }
  goto label$5806;
  label$5855:;
  if( ADR$1 != 0x1.80BCp+15 ) goto label$5857;
  label$5858:;
  {
   *(double*)((int64)(double*)MEM64$ + 394952ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393976ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393984ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393992ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394000ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394008ll);
  }
  goto label$5806;
  label$5857:;
  if( ADR$1 != 0x1.80C8p+15 ) goto label$5859;
  label$5860:;
  {
   *(double*)((int64)(double*)MEM64$ + 394960ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394024ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394032ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 386040ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394048ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394056ll);
  }
  goto label$5806;
  label$5859:;
  if( ADR$1 != 0x1.80D4p+15 ) goto label$5861;
  label$5862:;
  {
   *(double*)((int64)(double*)MEM64$ + 394968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394072ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394104ll);
  }
  goto label$5806;
  label$5861:;
  if( ADR$1 != 0x1.80Ep+15 ) goto label$5863;
  label$5864:;
  {
   *(double*)((int64)(double*)MEM64$ + 394976ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394120ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394128ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394136ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394144ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394152ll);
  }
  goto label$5806;
  label$5863:;
  if( ADR$1 != 0x1.80ECp+15 ) goto label$5865;
  label$5866:;
  {
   *(double*)((int64)(double*)MEM64$ + 394984ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394176ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394184ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394192ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394200ll);
  }
  goto label$5806;
  label$5865:;
  if( ADR$1 != 0x1.80F8p+15 ) goto label$5867;
  label$5868:;
  {
   *(double*)((int64)(double*)MEM64$ + 394992ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394216ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394224ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394232ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394240ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394248ll);
  }
  goto label$5806;
  label$5867:;
  if( ADR$1 != 0x1.8104p+15 ) goto label$5869;
  label$5870:;
  {
   *(double*)((int64)(double*)MEM64$ + 395000ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394264ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394272ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394280ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394288ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394296ll);
  }
  goto label$5806;
  label$5869:;
  if( ADR$1 != 0x1.811p+15 ) goto label$5871;
  label$5872:;
  {
   *(double*)((int64)(double*)MEM64$ + 395008ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394312ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394320ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394328ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394336ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394344ll);
  }
  goto label$5806;
  label$5871:;
  if( ADR$1 != 0x1.811Cp+15 ) goto label$5873;
  label$5874:;
  {
   *(double*)((int64)(double*)MEM64$ + 395016ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394360ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394368ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394376ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394384ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394392ll);
  }
  goto label$5806;
  label$5873:;
  if( ADR$1 != 0x1.8128p+15 ) goto label$5875;
  label$5876:;
  {
   *(double*)((int64)(double*)MEM64$ + 395024ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394440ll);
  }
  goto label$5806;
  label$5875:;
  if( ADR$1 != 0x1.8134p+15 ) goto label$5877;
  label$5878:;
  {
   *(double*)((int64)(double*)MEM64$ + 395032ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394456ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394464ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394472ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394480ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394488ll);
  }
  goto label$5806;
  label$5877:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$5879;
  label$5880:;
  {
   typedef void (*_ZN12SYSTEM_BUS_T8tmp$2332Ellllb)( int64, int64, int64, int64, boolean );
   ((_ZN12SYSTEM_BUS_T8tmp$2332Ellllb)&GLSCREEN)( ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) )), ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )), -1ll, -1ll, (boolean)1ll );
  }
  goto label$5806;
  label$5879:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5881;
  label$5882:;
  {
   {
    uint64 TMP$2333$4;
    TMP$2333$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$5884;
    label$5885:;
    {
     FBSTRING TMP$2342$5;
     boolean BFULLSCREEN$5;
     __builtin_memset( &BFULLSCREEN$5, 0, 1ll );
     boolean BTEXTURED$5;
     __builtin_memset( &BTEXTURED$5, 0, 1ll );
     boolean BNOISE$5;
     __builtin_memset( &BNOISE$5, 0, 1ll );
     boolean BLINEAR$5;
     __builtin_memset( &BLINEAR$5, 0, 1ll );
     boolean BNEAREST$5;
     __builtin_memset( &BNEAREST$5, 0, 1ll );
     boolean BNEARESTLINEAR$5;
     __builtin_memset( &BNEARESTLINEAR$5, 0, 1ll );
     boolean BLINEARNEAREST$5;
     __builtin_memset( &BLINEARNEAREST$5, 0, 1ll );
     boolean BMIPMAP$5;
     __builtin_memset( &BMIPMAP$5, 0, 1ll );
     boolean BREPEAT$5;
     __builtin_memset( &BREPEAT$5, 0, 1ll );
     *(double*)((int64)(double*)MEM64$ + 394952ll) = 0x1.Ep+10;
     *(double*)((int64)(double*)MEM64$ + 394960ll) = 0x1.0Ep+10;
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.814p+15, 0x0p+0 );
     struct $4VEC3 V3$5;
     __builtin_memset( &V3$5, 0, 12ll );
     *(float*)&V3$5 = 0x1.Ep+10f;
     *(float*)((uint8*)&V3$5 + 4ll) = 0x1.0Ep+10f;
     *(float*)((uint8*)&V3$5 + 8ll) = (float)((double)*(float*)&V3$5 / (double)*(float*)((uint8*)&V3$5 + 4ll));
     struct $9SHADERTOY SHADER$5;
     _ZN9SHADERTOYC1Ev( &SHADER$5 );
     int64 vr$7174 = fb_StrLen( (void*)&FILENAME$, -1ll );
     if( vr$7174 != 0ll ) goto label$5887;
     {
      BTEXTURED$5 = (boolean)1ll;
      fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"./shaders/pc/demo.glsl", 23ll, 0 );
     }
     label$5887:;
     label$5886:;
     boolean vr$7176 = _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( &SHADER$5, &FILENAME$ );
     if( vr$7176 != (boolean)0ll ) goto label$5889;
     {
      FBSTRING TMP$2337$6;
      FBSTRING TMP$2338$6;
      FBSTRING TMP$2339$6;
      FBSTRING TMP$2340$6;
      __builtin_memset( &TMP$2340$6, 0, 24ll );
      __builtin_memset( &TMP$2337$6, 0, 24ll );
      FBSTRING* vr$7181 = fb_StrConcat( &TMP$2337$6, (void*)"file: ", 7ll, (void*)&FILENAME$, -1ll );
      __builtin_memset( &TMP$2338$6, 0, 24ll );
      FBSTRING* vr$7184 = fb_StrConcat( &TMP$2338$6, (void*)vr$7181, -1ll, (void*)"\x0A\x0A", 3ll );
      __builtin_memset( &TMP$2339$6, 0, 24ll );
      FBSTRING* vr$7187 = fb_StrConcat( &TMP$2339$6, (void*)vr$7184, -1ll, (void*)((uint8*)&SHADER$5 + 8ll), -1ll );
      fb_StrAssign( (void*)&TMP$2340$6, -1ll, (void*)vr$7187, -1ll, 0 );
      ERROREXIT( &TMP$2340$6 );
      fb_StrDelete( (FBSTRING*)&TMP$2340$6 );
     }
     label$5889:;
     label$5888:;
     __builtin_memset( &TMP$2342$5, 0, 24ll );
     FBSTRING* vr$7193 = fb_StrConcat( &TMP$2342$5, (void*)&FILENAME$, -1ll, (void*)" ok ...", 8ll );
     fb_GfxSetWindowTitle( (FBSTRING*)vr$7193 );
     (GLUSEPROGRAM$)( *(uint32*)((uint8*)&SHADER$5 + 4ll) );
     int32 TEXTURES$5[4];
     __builtin_memset( (int32*)TEXTURES$5, 0, 16ll );
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
      int32* DATA;
      int32* PTR;
      int64 SIZE;
      int64 ELEMENT_LEN;
      int64 DIMENSIONS;
      int64 FLAGS;
      struct $16__FB_ARRAYDIMTB$ DIMTB[1];
     };
     extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$2343$5;
     *(int32**)&tmp$2343$5 = (int32*)TEXTURES$5;
     *(int32**)((uint8*)&tmp$2343$5 + 8ll) = (int32*)TEXTURES$5;
     *(int64*)((uint8*)&tmp$2343$5 + 16ll) = 16ll;
     *(int64*)((uint8*)&tmp$2343$5 + 24ll) = 4ll;
     *(int64*)((uint8*)&tmp$2343$5 + 32ll) = 1ll;
     *(int64*)((uint8*)&tmp$2343$5 + 40ll) = 49ll;
     *(int64*)((uint8*)&tmp$2343$5 + 48ll) = 4ll;
     *(int64*)((uint8*)&tmp$2343$5 + 56ll) = 0ll;
     *(int64*)((uint8*)&tmp$2343$5 + 64ll) = 3ll;
     glGenTextures( 4, (uint32*)TEXTURES$5 );
     if( BTEXTURED$5 == (boolean)0ll ) goto label$5891;
     {
      int64 TMP$2347$6;
      if( FGIMAGE$ != (void*)0ull ) goto label$5893;
      {
       void* vr$7198 = fb_GfxImageCreate( 512, 512, 4278190080u, 32, 0 );
       FGIMAGE$ = vr$7198;
       if( BNOISE$5 != (boolean)1ll ) goto label$5895;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$5899:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$5903:;
           {
            double vr$7199 = fb_Rnd( 0x1.p+0f );
            double vr$7205 = fb_Rnd( 0x1.p+0f );
            double vr$7212 = fb_Rnd( 0x1.p+0f );
            fb_GfxPset( FGIMAGE$, (float)X$11, (float)Y$9, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7199 * 0x1.FEp+7 )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7205 * 0x1.FEp+7 )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7212 * 0x1.FEp+7 ))) | 4278190080ll), 4, 0 );
           }
           label$5901:;
           X$11 = X$11 + 1ll;
           label$5900:;
           if( X$11 <= 512ll ) goto label$5903;
           label$5902:;
          }
         }
         label$5897:;
         Y$9 = Y$9 + 1ll;
         label$5896:;
         if( Y$9 <= 512ll ) goto label$5899;
         label$5898:;
        }
       }
       goto label$5894;
       label$5895:;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$5907:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$5911:;
           {
            uint32 TMP$2344$12;
            if( ((X$11 + Y$9) % 2ll) != 0ll ) goto label$5912;
            TMP$2344$12 = 4294967295u;
            goto label$8805;
            label$5912:;
            TMP$2344$12 = 4278190080u;
            label$8805:;
            fb_GfxLine( FGIMAGE$, (float)((double)(X$11 << (9ll & 63ll)) / 0x1.p+4), (float)((double)(Y$9 << (9ll & 63ll)) / 0x1.p+4), 0x1.Fp+4f, 0x1.Fp+4f, TMP$2344$12, 2, 65535u, 1 );
           }
           label$5909:;
           X$11 = X$11 + 1ll;
           label$5908:;
           if( X$11 <= 32ll ) goto label$5911;
           label$5910:;
          }
         }
         label$5905:;
         Y$9 = Y$9 + 1ll;
         label$5904:;
         if( Y$9 <= 32ll ) goto label$5907;
         label$5906:;
        }
        FBSTRING* vr$7236 = fb_StrAllocTempDescZEx( (uint8*)"FreeBASIC", 9ll );
        fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, 4, (FBSTRING*)vr$7236, 4294901760u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
        FBSTRING* vr$7237 = fb_StrAllocTempDescZEx( (uint8*)"Shadertoy.com", 13ll );
        fb_GfxDrawString( FGIMAGE$, 0x1.8p+4f, 0x1.8p+4f, 4, (FBSTRING*)vr$7237, 4278255360u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
       }
       label$5894:;
      }
      label$5893:;
      label$5892:;
      int64 TW$6;
      __builtin_memset( &TW$6, 0, 8ll );
      int64 TH$6;
      __builtin_memset( &TH$6, 0, 8ll );
      int64 TB$6;
      __builtin_memset( &TB$6, 0, 8ll );
      int64 TP$6;
      __builtin_memset( &TP$6, 0, 8ll );
      void* PIXELS$6;
      __builtin_memset( &PIXELS$6, 0, 8ll );
      TMP$2347$6 = 0ll;
      fb_GfxImageInfo64( (void*)FGIMAGE$, (int64*)&TW$6, (int64*)&TH$6, (int64*)&TB$6, (int64*)&TP$6, &PIXELS$6, &TMP$2347$6 );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
      if( BMIPMAP$5 == (boolean)0ll ) goto label$5914;
      {
       glTexParameteri( 3553u, 33169u, 1 );
       glTexParameteri( 3553u, 10240u, 9728 );
       glTexParameteri( 3553u, 10241u, 9987 );
      }
      label$5914:;
      label$5913:;
      if( BREPEAT$5 == (boolean)0ll ) goto label$5916;
      {
       glTexParameteri( 3553u, 10242u, 10497 );
       glTexParameteri( 3553u, 10243u, 10497 );
      }
      label$5916:;
      label$5915:;
      if( BLINEAR$5 == (boolean)0ll ) goto label$5918;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$5917;
      label$5918:;
      if( BNEAREST$5 == (boolean)0ll ) goto label$5919;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      goto label$5917;
      label$5919:;
      if( BNEARESTLINEAR$5 == (boolean)0ll ) goto label$5920;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$5917;
      label$5920:;
      if( BLINEARNEAREST$5 == (boolean)0ll ) goto label$5921;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      label$5921:;
      label$5917:;
      glTexImage2D( 3553u, 0, 6408, (int32)TW$6, (int32)TH$6, 0, 32993u, 5121u, (void*)PIXELS$6 );
      glBindTexture( 3553u, 0u );
     }
     label$5891:;
     label$5890:;
     int32 ICHANNEL0$5;
     int32 vr$7251 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iChannel0" );
     ICHANNEL0$5 = vr$7251;
     if( (int64)ICHANNEL0$5 <= -1ll ) goto label$5923;
     {
      (GLUNIFORM1I$)( ICHANNEL0$5, 0 );
      glActiveTexture( 33984u );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
     }
     label$5923:;
     label$5922:;
     int32 IGLOBALTIME$5;
     int32 vr$7253 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iGlobalTime" );
     IGLOBALTIME$5 = vr$7253;
     int32 ITIME$5;
     int32 vr$7254 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iTime" );
     ITIME$5 = vr$7254;
     int32 IRESOLUTION$5;
     int32 vr$7255 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iResolution" );
     IRESOLUTION$5 = vr$7255;
     int32 IMOUSE$5;
     int32 vr$7256 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iMouse" );
     IMOUSE$5 = vr$7256;
     int32 IFRAME$5;
     int32 vr$7257 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iFrame" );
     IFRAME$5 = vr$7257;
     if( (int64)IRESOLUTION$5 <= -1ll ) goto label$5925;
     {
      (GLUNIFORM3F$)( IRESOLUTION$5, *(float*)&V3$5, *(float*)((uint8*)&V3$5 + 4ll), *(float*)((uint8*)&V3$5 + 8ll) );
      label$5925:;
     }
     int64 OX$5;
     OX$5 = -1ll;
     int64 OY$5;
     OY$5 = -1ll;
     int64 OB$5;
     OB$5 = -1ll;
     int64 MX$5;
     __builtin_memset( &MX$5, 0, 8ll );
     int64 MY$5;
     __builtin_memset( &MY$5, 0, 8ll );
     int64 MB$5;
     __builtin_memset( &MB$5, 0, 8ll );
     int64 FRAMES$5;
     __builtin_memset( &FRAMES$5, 0, 8ll );
     int64 FPS$5;
     __builtin_memset( &FPS$5, 0, 8ll );
     double TRUNTIME$5;
     __builtin_memset( &TRUNTIME$5, 0, 8ll );
     double TSTART$5;
     double vr$7265 = fb_Timer( );
     TSTART$5 = vr$7265;
     double TNOW$5;
     __builtin_memset( &TNOW$5, 0, 8ll );
     double TLAST$5;
     TLAST$5 = TSTART$5;
     label$5926:;
     FBSTRING* vr$7267 = fb_Inkey( );
     int32 vr$7268 = fb_StrCompare( (void*)vr$7267, -1ll, (void*)"", 1ll );
     if( (int64)vr$7268 != 0ll ) goto label$5927;
     {
      double vr$7270 = fb_Timer( );
      TNOW$5 = vr$7270;
      TRUNTIME$5 = TNOW$5 - TSTART$5;
      if( (int64)ITIME$5 <= -1ll ) goto label$5929;
      {
       (GLUNIFORM1F$)( ITIME$5, (float)TRUNTIME$5 );
      }
      goto label$5928;
      label$5929:;
      if( (int64)IGLOBALTIME$5 <= -1ll ) goto label$5930;
      {
       (GLUNIFORM1F$)( IGLOBALTIME$5, (float)TRUNTIME$5 );
      }
      label$5930:;
      label$5928:;
      if( (int64)IFRAME$5 <= -1ll ) goto label$5932;
      {
       (GLUNIFORM1F$)( IFRAME$5, (float)FRAMES$5 );
       label$5932:;
      }
      if( (int64)IMOUSE$5 <= -1ll ) goto label$5934;
      {
       int64 TMP$2354$7;
       int64 TMP$2355$7;
       TMP$2355$7 = 0ll;
       TMP$2354$7 = 0ll;
       int32 vr$7284 = fb_GetMouse64( (int64*)&MX$5, (int64*)&MY$5, &TMP$2354$7, (int64*)&MB$5, &TMP$2355$7 );
       if( (int64)vr$7284 != 0ll ) goto label$5936;
       {
        int64 TMP$2356$8;
        int64 TMP$2357$8;
        if( OX$5 != MX$5 ) goto label$5937;
        TMP$2356$8 = (int64)-(OY$5 != MY$5);
        goto label$8806;
        label$5937:;
        TMP$2356$8 = -1ll;
        label$8806:;
        if( TMP$2356$8 != 0ll ) goto label$5938;
        TMP$2357$8 = (int64)-(OB$5 != MB$5);
        goto label$8807;
        label$5938:;
        TMP$2357$8 = -1ll;
        label$8807:;
        if( TMP$2357$8 == 0ll ) goto label$5940;
        {
         (GLUNIFORM4F$)( IMOUSE$5, (float)MX$5, (float)(SCR_H$ - (uint64)MY$5), (float)MB$5, 0x1.p+0f );
         OX$5 = MX$5;
         OY$5 = MY$5;
         OB$5 = MB$5;
        }
        label$5940:;
        label$5939:;
       }
       label$5936:;
       label$5935:;
      }
      label$5934:;
      label$5933:;
      glRectf( -0x1.p+0f, -0x1.p+0f, 0x1.p+0f, 0x1.p+0f );
      fb_GfxFlip( -1, -1 );
      FRAMES$5 = FRAMES$5 + 1ll;
      if( (FRAMES$5 % 60ll) != 0ll ) goto label$5942;
      {
       FBSTRING TMP$2359$7;
       FBSTRING TMP$2360$7;
       double vr$7294 = fb_Timer( );
       TNOW$5 = vr$7294;
       FPS$5 = ((int64)__builtin_nearbyint( 0x1.Ep+5 / (TNOW$5 - TLAST$5) ));
       TLAST$5 = TNOW$5;
       FBSTRING* vr$7298 = fb_LongintToStr( FPS$5 );
       __builtin_memset( &TMP$2359$7, 0, 24ll );
       FBSTRING* vr$7301 = fb_StrConcat( &TMP$2359$7, (void*)&FILENAME$, -1ll, (void*)" fps: ", 7ll );
       __builtin_memset( &TMP$2360$7, 0, 24ll );
       FBSTRING* vr$7304 = fb_StrConcat( &TMP$2360$7, (void*)vr$7301, -1ll, (void*)vr$7298, -1ll );
       fb_GfxDrawString( (void*)0ull, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)vr$7304, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
      }
      label$5942:;
      label$5941:;
     }
     goto label$5926;
     label$5927:;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
     fb_Cls( -65536 );
     {
      OFFSET$ = 0x0p+0;
      label$5946:;
      {
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
      }
      label$5944:;
      OFFSET$ = OFFSET$ + 0x1.p+0;
      label$5943:;
      if( OFFSET$ <= 0x1.p+10 ) goto label$5946;
      label$5945:;
     }
     _ZN9SHADERTOYD1Ev( &SHADER$5 );
    }
    goto label$5883;
    label$5947:;
    {
     FBSTRING* vr$7311 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$7311, 3u, 0u, 0u, 1, 0 );
     FBSTRING* vr$7312 = fb_StrAllocTempDescZEx( (uint8*)"// Start of file", 16ll );
     fb_PrintString( 1, (FBSTRING*)vr$7312, 1 );
    }
    goto label$5883;
    label$5948:;
    {
     FBSTRING* vr$7313 = fb_StrAllocTempDescZEx( (uint8*)"// End of file", 14ll );
     fb_PrintString( 1, (FBSTRING*)vr$7313, 1 );
     fb_FileClose( 1 );
    }
    goto label$5883;
    label$5949:;
    {
     FBSTRING TMP$2368$5;
     FBSTRING TMP$2369$5;
     FBSTRING TMP$2372$5;
     FBSTRING TMP$2373$5;
     FBSTRING* vr$7314 = fb_StrAllocTempDescZEx( (uint8*)"povray -d -H600 -W800 tmp.pov", 29ll );
     fb_Shell( (FBSTRING*)vr$7314 );
     FBSTRING* vr$7315 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png -w --o tmp.bmp", 30ll );
     fb_Shell( (FBSTRING*)vr$7315 );
     FBSTRING* vr$7316 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$2368$5, 0, 24ll );
     FBSTRING* vr$7319 = fb_StrConcat( &TMP$2368$5, (void*)"cp tmp.bmp ./vram/", 19ll, (void*)vr$7316, -1ll );
     __builtin_memset( &TMP$2369$5, 0, 24ll );
     FBSTRING* vr$7322 = fb_StrConcat( &TMP$2369$5, (void*)vr$7319, -1ll, (void*)".bmp", 5ll );
     fb_Shell( (FBSTRING*)vr$7322 );
     FBSTRING* vr$7323 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.pov tmp.png", 18ll );
     fb_Shell( (FBSTRING*)vr$7323 );
     fb_Cls( -65536 );
     FBSTRING* vr$7324 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$2372$5, 0, 24ll );
     FBSTRING* vr$7327 = fb_StrConcat( &TMP$2372$5, (void*)"./vram/", 8ll, (void*)vr$7324, -1ll );
     __builtin_memset( &TMP$2373$5, 0, 24ll );
     FBSTRING* vr$7330 = fb_StrConcat( &TMP$2373$5, (void*)vr$7327, -1ll, (void*)".bmp", 5ll );
     fb_GfxBload( (FBSTRING*)vr$7330, FGIMAGE$, (void*)0ull );
     fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$5883;
    label$5950:;
    {
     *(double*)((int64)(double*)MEM64$ + 394952ll) = V$1;
    }
    goto label$5883;
    label$5951:;
    {
     {
      uint8 FRAME$6;
      FRAME$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      uint8 TMP$2375$6;
      TMP$2375$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$5952;
      label$5955:;
      {
       FBSTRING TMP$2377$7;
       FBSTRING TMP$2378$7;
       FBSTRING* vr$7334 = fb_UIntToStr( (uint32)FRAME$6 );
       __builtin_memset( &TMP$2377$7, 0, 24ll );
       FBSTRING* vr$7337 = fb_StrConcat( &TMP$2377$7, (void*)".\x5Cvram\x5C", 8ll, (void*)vr$7334, -1ll );
       __builtin_memset( &TMP$2378$7, 0, 24ll );
       FBSTRING* vr$7340 = fb_StrConcat( &TMP$2378$7, (void*)vr$7337, -1ll, (void*)".bmp", 5ll );
       fb_GfxBload( (FBSTRING*)vr$7340, RENDER$, (void*)0ull );
       fb_SleepEx( 10, 1 );
       fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
      }
      label$5953:;
      FRAME$6 = (uint8)((int64)FRAME$6 + 1ll);
      label$5952:;
      if( (int64)FRAME$6 <= (int64)TMP$2375$6 ) goto label$5955;
      label$5954:;
     }
    }
    goto label$5883;
    label$5956:;
    {
     {
      uint64 TMP$2380$6;
      TMP$2380$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$5958;
      label$5959:;
      {
       FBSTRING* vr$7347 = fb_StrAllocTempDescZEx( (uint8*)"a", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7347, 0 );
      }
      goto label$5957;
      label$5960:;
      {
       FBSTRING* vr$7348 = fb_StrAllocTempDescZEx( (uint8*)"aa_level", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7348, 0 );
      }
      goto label$5957;
      label$5961:;
      {
       FBSTRING* vr$7349 = fb_StrAllocTempDescZEx( (uint8*)"aastep", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7349, 0 );
      }
      goto label$5957;
      label$5962:;
      {
       FBSTRING* vr$7350 = fb_StrAllocTempDescZEx( (uint8*)"aa_threshold", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7350, 0 );
      }
      goto label$5957;
      label$5963:;
      {
       FBSTRING* vr$7351 = fb_StrAllocTempDescZEx( (uint8*)"abs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7351, 0 );
      }
      goto label$5957;
      label$5964:;
      {
       FBSTRING* vr$7352 = fb_StrAllocTempDescZEx( (uint8*)"absolute", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7352, 0 );
      }
      goto label$5957;
      label$5965:;
      {
       FBSTRING* vr$7353 = fb_StrAllocTempDescZEx( (uint8*)"absorption", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7353, 0 );
      }
      goto label$5957;
      label$5966:;
      {
       FBSTRING* vr$7354 = fb_StrAllocTempDescZEx( (uint8*)"abstract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7354, 0 );
      }
      goto label$5957;
      label$5967:;
      {
       FBSTRING* vr$7355 = fb_StrAllocTempDescZEx( (uint8*)"accept", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7355, 0 );
      }
      goto label$5957;
      label$5968:;
      {
       FBSTRING* vr$7356 = fb_StrAllocTempDescZEx( (uint8*)"access", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7356, 0 );
      }
      goto label$5957;
      label$5969:;
      {
       FBSTRING* vr$7357 = fb_StrAllocTempDescZEx( (uint8*)"accuracy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7357, 0 );
      }
      goto label$5957;
      label$5970:;
      {
       FBSTRING* vr$7358 = fb_StrAllocTempDescZEx( (uint8*)"acos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7358, 0 );
      }
      goto label$5957;
      label$5971:;
      {
       FBSTRING* vr$7359 = fb_StrAllocTempDescZEx( (uint8*)"acosh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7359, 0 );
      }
      goto label$5957;
      label$5972:;
      {
       FBSTRING* vr$7360 = fb_StrAllocTempDescZEx( (uint8*)"active", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7360, 0 );
      }
      goto label$5957;
      label$5973:;
      {
       FBSTRING* vr$7361 = fb_StrAllocTempDescZEx( (uint8*)"adaptive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7361, 0 );
      }
      goto label$5957;
      label$5974:;
      {
       FBSTRING* vr$7362 = fb_StrAllocTempDescZEx( (uint8*)"adc_bailout", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7362, 0 );
      }
      goto label$5957;
      label$5975:;
      {
       FBSTRING* vr$7363 = fb_StrAllocTempDescZEx( (uint8*)"add", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7363, 0 );
      }
      goto label$5957;
      label$5976:;
      {
       FBSTRING* vr$7364 = fb_StrAllocTempDescZEx( (uint8*)"address", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7364, 0 );
      }
      goto label$5957;
      label$5977:;
      {
       FBSTRING* vr$7365 = fb_StrAllocTempDescZEx( (uint8*)"advancing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7365, 0 );
      }
      goto label$5957;
      label$5978:;
      {
       FBSTRING* vr$7366 = fb_StrAllocTempDescZEx( (uint8*)"after", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7366, 0 );
      }
      goto label$5957;
      label$5979:;
      {
       FBSTRING* vr$7367 = fb_StrAllocTempDescZEx( (uint8*)"agate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7367, 0 );
      }
      goto label$5957;
      label$5980:;
      {
       FBSTRING* vr$7368 = fb_StrAllocTempDescZEx( (uint8*)"agate_turb", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7368, 0 );
      }
      goto label$5957;
      label$5981:;
      {
       FBSTRING* vr$7369 = fb_StrAllocTempDescZEx( (uint8*)"alias", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7369, 0 );
      }
      goto label$5957;
      label$5982:;
      {
       FBSTRING* vr$7370 = fb_StrAllocTempDescZEx( (uint8*)"all", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7370, 0 );
      }
      goto label$5957;
      label$5983:;
      {
       FBSTRING* vr$7371 = fb_StrAllocTempDescZEx( (uint8*)"all_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7371, 0 );
      }
      goto label$5957;
      label$5984:;
      {
       FBSTRING* vr$7372 = fb_StrAllocTempDescZEx( (uint8*)"alpha", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7372, 0 );
      }
      goto label$5957;
      label$5985:;
      {
       FBSTRING* vr$7373 = fb_StrAllocTempDescZEx( (uint8*)"alphabet", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7373, 0 );
      }
      goto label$5957;
      label$5986:;
      {
       FBSTRING* vr$7374 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7374, 0 );
      }
      goto label$5957;
      label$5987:;
      {
       FBSTRING* vr$7375 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-lower", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7375, 0 );
      }
      goto label$5957;
      label$5988:;
      {
       FBSTRING* vr$7376 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-upper", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7376, 0 );
      }
      goto label$5957;
      label$5989:;
      {
       FBSTRING* vr$7377 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7377, 0 );
      }
      goto label$5957;
      label$5990:;
      {
       FBSTRING* vr$7378 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric-edited", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$7378, 0 );
      }
      goto label$5957;
      label$5991:;
      {
       FBSTRING* vr$7379 = fb_StrAllocTempDescZEx( (uint8*)"also", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7379, 0 );
      }
      goto label$5957;
      label$5992:;
      {
       FBSTRING* vr$7380 = fb_StrAllocTempDescZEx( (uint8*)"alter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7380, 0 );
      }
      goto label$5957;
      label$5993:;
      {
       FBSTRING* vr$7381 = fb_StrAllocTempDescZEx( (uint8*)"alternate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7381, 0 );
      }
      goto label$5957;
      label$5994:;
      {
       FBSTRING* vr$7382 = fb_StrAllocTempDescZEx( (uint8*)"altitude", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7382, 0 );
      }
      goto label$5957;
      label$5995:;
      {
       FBSTRING* vr$7383 = fb_StrAllocTempDescZEx( (uint8*)"always_sample", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7383, 0 );
      }
      goto label$5957;
      label$5996:;
      {
       FBSTRING* vr$7384 = fb_StrAllocTempDescZEx( (uint8*)"ambient", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7384, 0 );
      }
      goto label$5957;
      label$5997:;
      {
       FBSTRING* vr$7385 = fb_StrAllocTempDescZEx( (uint8*)"ambient_light", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7385, 0 );
      }
      goto label$5957;
      label$5998:;
      {
       FBSTRING* vr$7386 = fb_StrAllocTempDescZEx( (uint8*)"and", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7386, 0 );
      }
      goto label$5957;
      label$5999:;
      {
       FBSTRING* vr$7387 = fb_StrAllocTempDescZEx( (uint8*)"and_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7387, 0 );
      }
      goto label$5957;
      label$6000:;
      {
       FBSTRING* vr$7388 = fb_StrAllocTempDescZEx( (uint8*)"angle", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7388, 0 );
      }
      goto label$5957;
      label$6001:;
      {
       FBSTRING* vr$7389 = fb_StrAllocTempDescZEx( (uint8*)"any", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7389, 0 );
      }
      goto label$5957;
      label$6002:;
      {
       FBSTRING* vr$7390 = fb_StrAllocTempDescZEx( (uint8*)"aperture", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7390, 0 );
      }
      goto label$5957;
      label$6003:;
      {
       FBSTRING* vr$7391 = fb_StrAllocTempDescZEx( (uint8*)"append", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7391, 0 );
      }
      goto label$5957;
      label$6004:;
      {
       FBSTRING* vr$7392 = fb_StrAllocTempDescZEx( (uint8*)"apply", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7392, 0 );
      }
      goto label$5957;
      label$6005:;
      {
       FBSTRING* vr$7393 = fb_StrAllocTempDescZEx( (uint8*)"arc_angle", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7393, 0 );
      }
      goto label$5957;
      label$6006:;
      {
       FBSTRING* vr$7394 = fb_StrAllocTempDescZEx( (uint8*)"are", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7394, 0 );
      }
      goto label$5957;
      label$6007:;
      {
       FBSTRING* vr$7395 = fb_StrAllocTempDescZEx( (uint8*)"area", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7395, 0 );
      }
      goto label$5957;
      label$6008:;
      {
       FBSTRING* vr$7396 = fb_StrAllocTempDescZEx( (uint8*)"area_light", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7396, 0 );
      }
      goto label$5957;
      label$6009:;
      {
       FBSTRING* vr$7397 = fb_StrAllocTempDescZEx( (uint8*)"areas", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7397, 0 );
      }
      goto label$5957;
      label$6010:;
      {
       FBSTRING* vr$7398 = fb_StrAllocTempDescZEx( (uint8*)"array", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7398, 0 );
      }
      goto label$5957;
      label$6011:;
      {
       FBSTRING* vr$7399 = fb_StrAllocTempDescZEx( (uint8*)"arraylength", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7399, 0 );
      }
      goto label$5957;
      label$6012:;
      {
       FBSTRING* vr$7400 = fb_StrAllocTempDescZEx( (uint8*)"as", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7400, 0 );
      }
      goto label$5957;
      label$6013:;
      {
       FBSTRING* vr$7401 = fb_StrAllocTempDescZEx( (uint8*)"asc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7401, 0 );
      }
      goto label$5957;
      label$6014:;
      {
       FBSTRING* vr$7402 = fb_StrAllocTempDescZEx( (uint8*)"ascending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7402, 0 );
      }
      goto label$5957;
      label$6015:;
      {
       FBSTRING* vr$7403 = fb_StrAllocTempDescZEx( (uint8*)"ascii", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7403, 0 );
      }
      goto label$5957;
      label$6016:;
      {
       FBSTRING* vr$7404 = fb_StrAllocTempDescZEx( (uint8*)"asin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7404, 0 );
      }
      goto label$5957;
      label$6017:;
      {
       FBSTRING* vr$7405 = fb_StrAllocTempDescZEx( (uint8*)"asinh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7405, 0 );
      }
      goto label$5957;
      label$6018:;
      {
       FBSTRING* vr$7406 = fb_StrAllocTempDescZEx( (uint8*)"asm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7406, 0 );
      }
      goto label$5957;
      label$6019:;
      {
       FBSTRING* vr$7407 = fb_StrAllocTempDescZEx( (uint8*)"assembler", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7407, 0 );
      }
      goto label$5957;
      label$6020:;
      {
       FBSTRING* vr$7408 = fb_StrAllocTempDescZEx( (uint8*)"assert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7408, 0 );
      }
      goto label$5957;
      label$6021:;
      {
       FBSTRING* vr$7409 = fb_StrAllocTempDescZEx( (uint8*)"assign", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7409, 0 );
      }
      goto label$5957;
      label$6022:;
      {
       FBSTRING* vr$7410 = fb_StrAllocTempDescZEx( (uint8*)"assumed_gamma", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7410, 0 );
      }
      goto label$5957;
      label$6023:;
      {
       FBSTRING* vr$7411 = fb_StrAllocTempDescZEx( (uint8*)"async", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7411, 0 );
      }
      goto label$5957;
      label$6024:;
      {
       FBSTRING* vr$7412 = fb_StrAllocTempDescZEx( (uint8*)"at", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7412, 0 );
      }
      goto label$5957;
      label$6025:;
      {
       FBSTRING* vr$7413 = fb_StrAllocTempDescZEx( (uint8*)"atan", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7413, 0 );
      }
      goto label$5957;
      label$6026:;
      {
       FBSTRING* vr$7414 = fb_StrAllocTempDescZEx( (uint8*)"atan2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7414, 0 );
      }
      goto label$5957;
      label$6027:;
      {
       FBSTRING* vr$7415 = fb_StrAllocTempDescZEx( (uint8*)"atanh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7415, 0 );
      }
      goto label$5957;
      label$6028:;
      {
       FBSTRING* vr$7416 = fb_StrAllocTempDescZEx( (uint8*)"atn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7416, 0 );
      }
      goto label$5957;
      label$6029:;
      {
       FBSTRING* vr$7417 = fb_StrAllocTempDescZEx( (uint8*)"attribute", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7417, 0 );
      }
      goto label$5957;
      label$6030:;
      {
       FBSTRING* vr$7418 = fb_StrAllocTempDescZEx( (uint8*)"author", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7418, 0 );
      }
      goto label$5957;
      label$6031:;
      {
       FBSTRING* vr$7419 = fb_StrAllocTempDescZEx( (uint8*)"auto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7419, 0 );
      }
      goto label$5957;
      label$6032:;
      {
       FBSTRING* vr$7420 = fb_StrAllocTempDescZEx( (uint8*)"automatic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7420, 0 );
      }
      goto label$5957;
      label$6033:;
      {
       FBSTRING* vr$7421 = fb_StrAllocTempDescZEx( (uint8*)"autostop", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7421, 0 );
      }
      goto label$5957;
      label$6034:;
      {
       FBSTRING* vr$7422 = fb_StrAllocTempDescZEx( (uint8*)"average", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7422, 0 );
      }
      goto label$5957;
      label$6035:;
      {
       FBSTRING* vr$7423 = fb_StrAllocTempDescZEx( (uint8*)"avg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7423, 0 );
      }
      goto label$5957;
      label$6036:;
      {
       FBSTRING* vr$7424 = fb_StrAllocTempDescZEx( (uint8*)"await", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7424, 0 );
      }
      goto label$5957;
      label$6037:;
      {
       FBSTRING* vr$7425 = fb_StrAllocTempDescZEx( (uint8*)"b", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7425, 0 );
      }
      goto label$5957;
      label$6038:;
      {
       FBSTRING* vr$7426 = fb_StrAllocTempDescZEx( (uint8*)"backfacing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7426, 0 );
      }
      goto label$5957;
      label$6039:;
      {
       FBSTRING* vr$7427 = fb_StrAllocTempDescZEx( (uint8*)"background", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7427, 0 );
      }
      goto label$5957;
      label$6040:;
      {
       FBSTRING* vr$7428 = fb_StrAllocTempDescZEx( (uint8*)"backspace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7428, 0 );
      }
      goto label$5957;
      label$6041:;
      {
       FBSTRING* vr$7429 = fb_StrAllocTempDescZEx( (uint8*)"basis", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7429, 0 );
      }
      goto label$5957;
      label$6042:;
      {
       FBSTRING* vr$7430 = fb_StrAllocTempDescZEx( (uint8*)"beep", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7430, 0 );
      }
      goto label$5957;
      label$6043:;
      {
       FBSTRING* vr$7431 = fb_StrAllocTempDescZEx( (uint8*)"before", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7431, 0 );
      }
      goto label$5957;
      label$6044:;
      {
       FBSTRING* vr$7432 = fb_StrAllocTempDescZEx( (uint8*)"begin", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7432, 0 );
      }
      goto label$5957;
      label$6045:;
      {
       FBSTRING* vr$7433 = fb_StrAllocTempDescZEx( (uint8*)"beginning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7433, 0 );
      }
      goto label$5957;
      label$6046:;
      {
       FBSTRING* vr$7434 = fb_StrAllocTempDescZEx( (uint8*)"between", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7434, 0 );
      }
      goto label$5957;
      label$6047:;
      {
       FBSTRING* vr$7435 = fb_StrAllocTempDescZEx( (uint8*)"bezier_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7435, 0 );
      }
      goto label$5957;
      label$6048:;
      {
       FBSTRING* vr$7436 = fb_StrAllocTempDescZEx( (uint8*)"bicubic_patch", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7436, 0 );
      }
      goto label$5957;
      label$6049:;
      {
       FBSTRING* vr$7437 = fb_StrAllocTempDescZEx( (uint8*)"binary", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7437, 0 );
      }
      goto label$5957;
      label$6050:;
      {
       FBSTRING* vr$7438 = fb_StrAllocTempDescZEx( (uint8*)"bind", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7438, 0 );
      }
      goto label$5957;
      label$6051:;
      {
       FBSTRING* vr$7439 = fb_StrAllocTempDescZEx( (uint8*)"blackbody", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7439, 0 );
      }
      goto label$5957;
      label$6052:;
      {
       FBSTRING* vr$7440 = fb_StrAllocTempDescZEx( (uint8*)"black_hole", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7440, 0 );
      }
      goto label$5957;
      label$6053:;
      {
       FBSTRING* vr$7441 = fb_StrAllocTempDescZEx( (uint8*)"blank", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7441, 0 );
      }
      goto label$5957;
      label$6054:;
      {
       FBSTRING* vr$7442 = fb_StrAllocTempDescZEx( (uint8*)"bload", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7442, 0 );
      }
      goto label$5957;
      label$6055:;
      {
       FBSTRING* vr$7443 = fb_StrAllocTempDescZEx( (uint8*)"blob", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7443, 0 );
      }
      goto label$5957;
      label$6056:;
      {
       FBSTRING* vr$7444 = fb_StrAllocTempDescZEx( (uint8*)"block", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7444, 0 );
      }
      goto label$5957;
      label$6057:;
      {
       FBSTRING* vr$7445 = fb_StrAllocTempDescZEx( (uint8*)"blue", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7445, 0 );
      }
      goto label$5957;
      label$6058:;
      {
       FBSTRING* vr$7446 = fb_StrAllocTempDescZEx( (uint8*)"blur_samples", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7446, 0 );
      }
      goto label$5957;
      label$6059:;
      {
       FBSTRING* vr$7447 = fb_StrAllocTempDescZEx( (uint8*)"bool", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7447, 0 );
      }
      goto label$5957;
      label$6060:;
      {
       FBSTRING* vr$7448 = fb_StrAllocTempDescZEx( (uint8*)"both", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7448, 0 );
      }
      goto label$5957;
      label$6061:;
      {
       FBSTRING* vr$7449 = fb_StrAllocTempDescZEx( (uint8*)"bottom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7449, 0 );
      }
      goto label$5957;
      label$6062:;
      {
       FBSTRING* vr$7450 = fb_StrAllocTempDescZEx( (uint8*)"bounded_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7450, 0 );
      }
      goto label$5957;
      label$6063:;
      {
       FBSTRING* vr$7451 = fb_StrAllocTempDescZEx( (uint8*)"box", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7451, 0 );
      }
      goto label$5957;
      label$6064:;
      {
       FBSTRING* vr$7452 = fb_StrAllocTempDescZEx( (uint8*)"boxed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7452, 0 );
      }
      goto label$5957;
      label$6065:;
      {
       FBSTRING* vr$7453 = fb_StrAllocTempDescZEx( (uint8*)"bozo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7453, 0 );
      }
      goto label$5957;
      label$6066:;
      {
       FBSTRING* vr$7454 = fb_StrAllocTempDescZEx( (uint8*)"break", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7454, 0 );
      }
      goto label$5957;
      label$6067:;
      {
       FBSTRING* vr$7455 = fb_StrAllocTempDescZEx( (uint8*)"brick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7455, 0 );
      }
      goto label$5957;
      label$6068:;
      {
       FBSTRING* vr$7456 = fb_StrAllocTempDescZEx( (uint8*)"brick_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7456, 0 );
      }
      goto label$5957;
      label$6069:;
      {
       FBSTRING* vr$7457 = fb_StrAllocTempDescZEx( (uint8*)"brightness", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7457, 0 );
      }
      goto label$5957;
      label$6070:;
      {
       FBSTRING* vr$7458 = fb_StrAllocTempDescZEx( (uint8*)"brilliance", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7458, 0 );
      }
      goto label$5957;
      label$6071:;
      {
       FBSTRING* vr$7459 = fb_StrAllocTempDescZEx( (uint8*)"bsave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7459, 0 );
      }
      goto label$5957;
      label$6072:;
      {
       FBSTRING* vr$7460 = fb_StrAllocTempDescZEx( (uint8*)"b_spline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7460, 0 );
      }
      goto label$5957;
      label$6073:;
      {
       FBSTRING* vr$7461 = fb_StrAllocTempDescZEx( (uint8*)"bump", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7461, 0 );
      }
      goto label$5957;
      label$6074:;
      {
       FBSTRING* vr$7462 = fb_StrAllocTempDescZEx( (uint8*)"bump_map", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7462, 0 );
      }
      goto label$5957;
      label$6075:;
      {
       FBSTRING* vr$7463 = fb_StrAllocTempDescZEx( (uint8*)"bumps", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7463, 0 );
      }
      goto label$5957;
      label$6076:;
      {
       FBSTRING* vr$7464 = fb_StrAllocTempDescZEx( (uint8*)"bump_size", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7464, 0 );
      }
      goto label$5957;
      label$6077:;
      {
       FBSTRING* vr$7465 = fb_StrAllocTempDescZEx( (uint8*)"bvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7465, 0 );
      }
      goto label$5957;
      label$6078:;
      {
       FBSTRING* vr$7466 = fb_StrAllocTempDescZEx( (uint8*)"bvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7466, 0 );
      }
      goto label$5957;
      label$6079:;
      {
       FBSTRING* vr$7467 = fb_StrAllocTempDescZEx( (uint8*)"bvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7467, 0 );
      }
      goto label$5957;
      label$6080:;
      {
       FBSTRING* vr$7468 = fb_StrAllocTempDescZEx( (uint8*)"by", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7468, 0 );
      }
      goto label$5957;
      label$6081:;
      {
       FBSTRING* vr$7469 = fb_StrAllocTempDescZEx( (uint8*)"byte", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7469, 0 );
      }
      goto label$5957;
      label$6082:;
      {
       FBSTRING* vr$7470 = fb_StrAllocTempDescZEx( (uint8*)"c", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7470, 0 );
      }
      goto label$5957;
      label$6083:;
      {
       FBSTRING* vr$7471 = fb_StrAllocTempDescZEx( (uint8*)"cache", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7471, 0 );
      }
      goto label$5957;
      label$6084:;
      {
       FBSTRING* vr$7472 = fb_StrAllocTempDescZEx( (uint8*)"calculatenormal", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7472, 0 );
      }
      goto label$5957;
      label$6085:;
      {
       FBSTRING* vr$7473 = fb_StrAllocTempDescZEx( (uint8*)"call", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7473, 0 );
      }
      goto label$5957;
      label$6086:;
      {
       FBSTRING* vr$7474 = fb_StrAllocTempDescZEx( (uint8*)"calls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7474, 0 );
      }
      goto label$5957;
      label$6087:;
      {
       FBSTRING* vr$7475 = fb_StrAllocTempDescZEx( (uint8*)"camera", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7475, 0 );
      }
      goto label$5957;
      label$6088:;
      {
       FBSTRING* vr$7476 = fb_StrAllocTempDescZEx( (uint8*)"cancel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7476, 0 );
      }
      goto label$5957;
      label$6089:;
      {
       FBSTRING* vr$7477 = fb_StrAllocTempDescZEx( (uint8*)"cardinality", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7477, 0 );
      }
      goto label$5957;
      label$6090:;
      {
       FBSTRING* vr$7478 = fb_StrAllocTempDescZEx( (uint8*)"case", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7478, 0 );
      }
      goto label$5957;
      label$6091:;
      {
       FBSTRING* vr$7479 = fb_StrAllocTempDescZEx( (uint8*)"cast", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7479, 0 );
      }
      goto label$5957;
      label$6092:;
      {
       FBSTRING* vr$7480 = fb_StrAllocTempDescZEx( (uint8*)"castnamespace", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7480, 0 );
      }
      goto label$5957;
      label$6093:;
      {
       FBSTRING* vr$7481 = fb_StrAllocTempDescZEx( (uint8*)"caustics", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7481, 0 );
      }
      goto label$5957;
      label$6094:;
      {
       FBSTRING* vr$7482 = fb_StrAllocTempDescZEx( (uint8*)"cbl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7482, 0 );
      }
      goto label$5957;
      label$6095:;
      {
       FBSTRING* vr$7483 = fb_StrAllocTempDescZEx( (uint8*)"cbrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7483, 0 );
      }
      goto label$5957;
      label$6096:;
      {
       FBSTRING* vr$7484 = fb_StrAllocTempDescZEx( (uint8*)"cd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7484, 0 );
      }
      goto label$5957;
      label$6097:;
      {
       FBSTRING* vr$7485 = fb_StrAllocTempDescZEx( (uint8*)"cdbl", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7485, 0 );
      }
      goto label$5957;
      label$6098:;
      {
       FBSTRING* vr$7486 = fb_StrAllocTempDescZEx( (uint8*)"cdecl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7486, 0 );
      }
      goto label$5957;
      label$6099:;
      {
       FBSTRING* vr$7487 = fb_StrAllocTempDescZEx( (uint8*)"ceil", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7487, 0 );
      }
      goto label$5957;
      label$6100:;
      {
       FBSTRING* vr$7488 = fb_StrAllocTempDescZEx( (uint8*)"cellnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7488, 0 );
      }
      goto label$5957;
      label$6101:;
      {
       FBSTRING* vr$7489 = fb_StrAllocTempDescZEx( (uint8*)"cells", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7489, 0 );
      }
      goto label$5957;
      label$6102:;
      {
       FBSTRING* vr$7490 = fb_StrAllocTempDescZEx( (uint8*)"centroid", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7490, 0 );
      }
      goto label$5957;
      label$6103:;
      {
       FBSTRING* vr$7491 = fb_StrAllocTempDescZEx( (uint8*)"cf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7491, 0 );
      }
      goto label$5957;
      label$6104:;
      {
       FBSTRING* vr$7492 = fb_StrAllocTempDescZEx( (uint8*)"ch", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7492, 0 );
      }
      goto label$5957;
      label$6105:;
      {
       FBSTRING* vr$7493 = fb_StrAllocTempDescZEx( (uint8*)"chain", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7493, 0 );
      }
      goto label$5957;
      label$6106:;
      {
       FBSTRING* vr$7494 = fb_StrAllocTempDescZEx( (uint8*)"char", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7494, 0 );
      }
      goto label$5957;
      label$6107:;
      {
       FBSTRING* vr$7495 = fb_StrAllocTempDescZEx( (uint8*)"character", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7495, 0 );
      }
      goto label$5957;
      label$6108:;
      {
       FBSTRING* vr$7496 = fb_StrAllocTempDescZEx( (uint8*)"character_length", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7496, 0 );
      }
      goto label$5957;
      label$6109:;
      {
       FBSTRING* vr$7497 = fb_StrAllocTempDescZEx( (uint8*)"character_length_b", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7497, 0 );
      }
      goto label$5957;
      label$6110:;
      {
       FBSTRING* vr$7498 = fb_StrAllocTempDescZEx( (uint8*)"character_length_mb", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$7498, 0 );
      }
      goto label$5957;
      label$6111:;
      {
       FBSTRING* vr$7499 = fb_StrAllocTempDescZEx( (uint8*)"characters", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7499, 0 );
      }
      goto label$5957;
      label$6112:;
      {
       FBSTRING* vr$7500 = fb_StrAllocTempDescZEx( (uint8*)"char_length", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7500, 0 );
      }
      goto label$5957;
      label$6113:;
      {
       FBSTRING* vr$7501 = fb_StrAllocTempDescZEx( (uint8*)"char_length_b", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7501, 0 );
      }
      goto label$5957;
      label$6114:;
      {
       FBSTRING* vr$7502 = fb_StrAllocTempDescZEx( (uint8*)"char_length_mb", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7502, 0 );
      }
      goto label$5957;
      label$6115:;
      {
       FBSTRING* vr$7503 = fb_StrAllocTempDescZEx( (uint8*)"charset", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7503, 0 );
      }
      goto label$5957;
      label$6116:;
      {
       FBSTRING* vr$7504 = fb_StrAllocTempDescZEx( (uint8*)"chdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7504, 0 );
      }
      goto label$5957;
      label$6117:;
      {
       FBSTRING* vr$7505 = fb_StrAllocTempDescZEx( (uint8*)"check", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7505, 0 );
      }
      goto label$5957;
      label$6118:;
      {
       FBSTRING* vr$7506 = fb_StrAllocTempDescZEx( (uint8*)"checker", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7506, 0 );
      }
      goto label$5957;
      label$6119:;
      {
       FBSTRING* vr$7507 = fb_StrAllocTempDescZEx( (uint8*)"chr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7507, 0 );
      }
      goto label$5957;
      label$6120:;
      {
       FBSTRING* vr$7508 = fb_StrAllocTempDescZEx( (uint8*)"cint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7508, 0 );
      }
      goto label$5957;
      label$6121:;
      {
       FBSTRING* vr$7509 = fb_StrAllocTempDescZEx( (uint8*)"circle", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7509, 0 );
      }
      goto label$5957;
      label$6122:;
      {
       FBSTRING* vr$7510 = fb_StrAllocTempDescZEx( (uint8*)"circular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7510, 0 );
      }
      goto label$5957;
      label$6123:;
      {
       FBSTRING* vr$7511 = fb_StrAllocTempDescZEx( (uint8*)"clamp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7511, 0 );
      }
      goto label$5957;
      label$6124:;
      {
       FBSTRING* vr$7512 = fb_StrAllocTempDescZEx( (uint8*)"class", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7512, 0 );
      }
      goto label$5957;
      label$6125:;
      {
       FBSTRING* vr$7513 = fb_StrAllocTempDescZEx( (uint8*)"class-id", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7513, 0 );
      }
      goto label$5957;
      label$6126:;
      {
       FBSTRING* vr$7514 = fb_StrAllocTempDescZEx( (uint8*)"clear", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7514, 0 );
      }
      goto label$5957;
      label$6127:;
      {
       FBSTRING* vr$7515 = fb_StrAllocTempDescZEx( (uint8*)"clipped_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7515, 0 );
      }
      goto label$5957;
      label$6128:;
      {
       FBSTRING* vr$7516 = fb_StrAllocTempDescZEx( (uint8*)"clock", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7516, 0 );
      }
      goto label$5957;
      label$6129:;
      {
       FBSTRING* vr$7517 = fb_StrAllocTempDescZEx( (uint8*)"clock_delta", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7517, 0 );
      }
      goto label$5957;
      label$6130:;
      {
       FBSTRING* vr$7518 = fb_StrAllocTempDescZEx( (uint8*)"clock_on", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7518, 0 );
      }
      goto label$5957;
      label$6131:;
      {
       FBSTRING* vr$7519 = fb_StrAllocTempDescZEx( (uint8*)"clock-units", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7519, 0 );
      }
      goto label$5957;
      label$6132:;
      {
       FBSTRING* vr$7520 = fb_StrAllocTempDescZEx( (uint8*)"close", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7520, 0 );
      }
      goto label$5957;
      label$6133:;
      {
       FBSTRING* vr$7521 = fb_StrAllocTempDescZEx( (uint8*)"closure", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7521, 0 );
      }
      goto label$5957;
      label$6134:;
      {
       FBSTRING* vr$7522 = fb_StrAllocTempDescZEx( (uint8*)"cls", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7522, 0 );
      }
      goto label$5957;
      label$6135:;
      {
       FBSTRING* vr$7523 = fb_StrAllocTempDescZEx( (uint8*)"cobol", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7523, 0 );
      }
      goto label$5957;
      label$6136:;
      {
       FBSTRING* vr$7524 = fb_StrAllocTempDescZEx( (uint8*)"code", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7524, 0 );
      }
      goto label$5957;
      label$6137:;
      {
       FBSTRING* vr$7525 = fb_StrAllocTempDescZEx( (uint8*)"code-set", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7525, 0 );
      }
      goto label$5957;
      label$6138:;
      {
       FBSTRING* vr$7526 = fb_StrAllocTempDescZEx( (uint8*)"collating", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7526, 0 );
      }
      goto label$5957;
      label$6139:;
      {
       FBSTRING* vr$7527 = fb_StrAllocTempDescZEx( (uint8*)"collect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7527, 0 );
      }
      goto label$5957;
      label$6140:;
      {
       FBSTRING* vr$7528 = fb_StrAllocTempDescZEx( (uint8*)"color", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7528, 0 );
      }
      goto label$5957;
      label$6141:;
      {
       FBSTRING* vr$7529 = fb_StrAllocTempDescZEx( (uint8*)"color_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7529, 0 );
      }
      goto label$5957;
      label$6142:;
      {
       FBSTRING* vr$7530 = fb_StrAllocTempDescZEx( (uint8*)"color.w", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7530, 0 );
      }
      goto label$5957;
      label$6143:;
      {
       FBSTRING* vr$7531 = fb_StrAllocTempDescZEx( (uint8*)"colour", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7531, 0 );
      }
      goto label$5957;
      label$6144:;
      {
       FBSTRING* vr$7532 = fb_StrAllocTempDescZEx( (uint8*)"colour_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7532, 0 );
      }
      goto label$5957;
      label$6145:;
      {
       FBSTRING* vr$7533 = fb_StrAllocTempDescZEx( (uint8*)"column", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7533, 0 );
      }
      goto label$5957;
      label$6146:;
      {
       FBSTRING* vr$7534 = fb_StrAllocTempDescZEx( (uint8*)"com", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7534, 0 );
      }
      goto label$5957;
      label$6147:;
      {
       FBSTRING* vr$7535 = fb_StrAllocTempDescZEx( (uint8*)"comma", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7535, 0 );
      }
      goto label$5957;
      label$6148:;
      {
       FBSTRING* vr$7536 = fb_StrAllocTempDescZEx( (uint8*)"comment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7536, 0 );
      }
      goto label$5957;
      label$6149:;
      {
       FBSTRING* vr$7537 = fb_StrAllocTempDescZEx( (uint8*)"commit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7537, 0 );
      }
      goto label$5957;
      label$6150:;
      {
       FBSTRING* vr$7538 = fb_StrAllocTempDescZEx( (uint8*)"common", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7538, 0 );
      }
      goto label$5957;
      label$6151:;
      {
       FBSTRING* vr$7539 = fb_StrAllocTempDescZEx( (uint8*)"communication", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7539, 0 );
      }
      goto label$5957;
      label$6152:;
      {
       FBSTRING* vr$7540 = fb_StrAllocTempDescZEx( (uint8*)"comp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7540, 0 );
      }
      goto label$5957;
      label$6153:;
      {
       FBSTRING* vr$7541 = fb_StrAllocTempDescZEx( (uint8*)"comp-1", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7541, 0 );
      }
      goto label$5957;
      label$6154:;
      {
       FBSTRING* vr$7542 = fb_StrAllocTempDescZEx( (uint8*)"comp-2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7542, 0 );
      }
      goto label$5957;
      label$6155:;
      {
       FBSTRING* vr$7543 = fb_StrAllocTempDescZEx( (uint8*)"comp-3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7543, 0 );
      }
      goto label$5957;
      label$6156:;
      {
       FBSTRING* vr$7544 = fb_StrAllocTempDescZEx( (uint8*)"comp-4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7544, 0 );
      }
      goto label$5957;
      label$6157:;
      {
       FBSTRING* vr$7545 = fb_StrAllocTempDescZEx( (uint8*)"comp-5", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7545, 0 );
      }
      goto label$5957;
      label$6158:;
      {
       FBSTRING* vr$7546 = fb_StrAllocTempDescZEx( (uint8*)"complex", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7546, 0 );
      }
      goto label$5957;
      label$6159:;
      {
       FBSTRING* vr$7547 = fb_StrAllocTempDescZEx( (uint8*)"component", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7547, 0 );
      }
      goto label$5957;
      label$6160:;
      {
       FBSTRING* vr$7548 = fb_StrAllocTempDescZEx( (uint8*)"composite", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7548, 0 );
      }
      goto label$5957;
      label$6161:;
      {
       FBSTRING* vr$7549 = fb_StrAllocTempDescZEx( (uint8*)"computational", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7549, 0 );
      }
      goto label$5957;
      label$6162:;
      {
       FBSTRING* vr$7550 = fb_StrAllocTempDescZEx( (uint8*)"computational-1", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7550, 0 );
      }
      goto label$5957;
      label$6163:;
      {
       FBSTRING* vr$7551 = fb_StrAllocTempDescZEx( (uint8*)"computational-2", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7551, 0 );
      }
      goto label$5957;
      label$6164:;
      {
       FBSTRING* vr$7552 = fb_StrAllocTempDescZEx( (uint8*)"computational-3", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7552, 0 );
      }
      goto label$5957;
      label$6165:;
      {
       FBSTRING* vr$7553 = fb_StrAllocTempDescZEx( (uint8*)"computational-4", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7553, 0 );
      }
      goto label$5957;
      label$6166:;
      {
       FBSTRING* vr$7554 = fb_StrAllocTempDescZEx( (uint8*)"computational-5", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7554, 0 );
      }
      goto label$5957;
      label$6167:;
      {
       FBSTRING* vr$7555 = fb_StrAllocTempDescZEx( (uint8*)"compute", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7555, 0 );
      }
      goto label$5957;
      label$6168:;
      {
       FBSTRING* vr$7556 = fb_StrAllocTempDescZEx( (uint8*)"com-reg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7556, 0 );
      }
      goto label$5957;
      label$6169:;
      {
       FBSTRING* vr$7557 = fb_StrAllocTempDescZEx( (uint8*)"concat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7557, 0 );
      }
      goto label$5957;
      label$6170:;
      {
       FBSTRING* vr$7558 = fb_StrAllocTempDescZEx( (uint8*)"concatenate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7558, 0 );
      }
      goto label$5957;
      label$6171:;
      {
       FBSTRING* vr$7559 = fb_StrAllocTempDescZEx( (uint8*)"cond", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7559, 0 );
      }
      goto label$5957;
      label$6172:;
      {
       FBSTRING* vr$7560 = fb_StrAllocTempDescZEx( (uint8*)"cone", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7560, 0 );
      }
      goto label$5957;
      label$6173:;
      {
       FBSTRING* vr$7561 = fb_StrAllocTempDescZEx( (uint8*)"confidence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7561, 0 );
      }
      goto label$5957;
      label$6174:;
      {
       FBSTRING* vr$7562 = fb_StrAllocTempDescZEx( (uint8*)"configuration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7562, 0 );
      }
      goto label$5957;
      label$6175:;
      {
       FBSTRING* vr$7563 = fb_StrAllocTempDescZEx( (uint8*)"conic_sweep", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7563, 0 );
      }
      goto label$5957;
      label$6176:;
      {
       FBSTRING* vr$7564 = fb_StrAllocTempDescZEx( (uint8*)"conserve_energy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7564, 0 );
      }
      goto label$5957;
      label$6177:;
      {
       FBSTRING* vr$7565 = fb_StrAllocTempDescZEx( (uint8*)"const", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7565, 0 );
      }
      goto label$5957;
      label$6178:;
      {
       FBSTRING* vr$7566 = fb_StrAllocTempDescZEx( (uint8*)"constref", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7566, 0 );
      }
      goto label$5957;
      label$6179:;
      {
       FBSTRING* vr$7567 = fb_StrAllocTempDescZEx( (uint8*)"constructor", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7567, 0 );
      }
      goto label$5957;
      label$6180:;
      {
       FBSTRING* vr$7568 = fb_StrAllocTempDescZEx( (uint8*)"cont", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7568, 0 );
      }
      goto label$5957;
      label$6181:;
      {
       FBSTRING* vr$7569 = fb_StrAllocTempDescZEx( (uint8*)"contained_by", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7569, 0 );
      }
      goto label$5957;
      label$6182:;
      {
       FBSTRING* vr$7570 = fb_StrAllocTempDescZEx( (uint8*)"contains", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7570, 0 );
      }
      goto label$5957;
      label$6183:;
      {
       FBSTRING* vr$7571 = fb_StrAllocTempDescZEx( (uint8*)"content", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7571, 0 );
      }
      goto label$5957;
      label$6184:;
      {
       FBSTRING* vr$7572 = fb_StrAllocTempDescZEx( (uint8*)"continue", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7572, 0 );
      }
      goto label$5957;
      label$6185:;
      {
       FBSTRING* vr$7573 = fb_StrAllocTempDescZEx( (uint8*)"control", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7573, 0 );
      }
      goto label$5957;
      label$6186:;
      {
       FBSTRING* vr$7574 = fb_StrAllocTempDescZEx( (uint8*)"control0", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7574, 0 );
      }
      goto label$5957;
      label$6187:;
      {
       FBSTRING* vr$7575 = fb_StrAllocTempDescZEx( (uint8*)"control1", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7575, 0 );
      }
      goto label$5957;
      label$6188:;
      {
       FBSTRING* vr$7576 = fb_StrAllocTempDescZEx( (uint8*)"controls", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7576, 0 );
      }
      goto label$5957;
      label$6189:;
      {
       FBSTRING* vr$7577 = fb_StrAllocTempDescZEx( (uint8*)"converting", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7577, 0 );
      }
      goto label$5957;
      label$6190:;
      {
       FBSTRING* vr$7578 = fb_StrAllocTempDescZEx( (uint8*)"coords", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7578, 0 );
      }
      goto label$5957;
      label$6191:;
      {
       FBSTRING* vr$7579 = fb_StrAllocTempDescZEx( (uint8*)"corr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7579, 0 );
      }
      goto label$5957;
      label$6192:;
      {
       FBSTRING* vr$7580 = fb_StrAllocTempDescZEx( (uint8*)"corresponding", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7580, 0 );
      }
      goto label$5957;
      label$6193:;
      {
       FBSTRING* vr$7581 = fb_StrAllocTempDescZEx( (uint8*)"cos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7581, 0 );
      }
      goto label$5957;
      label$6194:;
      {
       FBSTRING* vr$7582 = fb_StrAllocTempDescZEx( (uint8*)"cosh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7582, 0 );
      }
      goto label$5957;
      label$6195:;
      {
       FBSTRING* vr$7583 = fb_StrAllocTempDescZEx( (uint8*)"count", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7583, 0 );
      }
      goto label$5957;
      label$6196:;
      {
       FBSTRING* vr$7584 = fb_StrAllocTempDescZEx( (uint8*)"cppdecl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7584, 0 );
      }
      goto label$5957;
      label$6197:;
      {
       FBSTRING* vr$7585 = fb_StrAllocTempDescZEx( (uint8*)"crackle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7585, 0 );
      }
      goto label$5957;
      label$6198:;
      {
       FBSTRING* vr$7586 = fb_StrAllocTempDescZEx( (uint8*)"crand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7586, 0 );
      }
      goto label$5957;
      label$6199:;
      {
       FBSTRING* vr$7587 = fb_StrAllocTempDescZEx( (uint8*)"cross", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7587, 0 );
      }
      goto label$5957;
      label$6200:;
      {
       FBSTRING* vr$7588 = fb_StrAllocTempDescZEx( (uint8*)"csng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7588, 0 );
      }
      goto label$5957;
      label$6201:;
      {
       FBSTRING* vr$7589 = fb_StrAllocTempDescZEx( (uint8*)"csrlin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7589, 0 );
      }
      goto label$5957;
      label$6202:;
      {
       FBSTRING* vr$7590 = fb_StrAllocTempDescZEx( (uint8*)"cube", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7590, 0 );
      }
      goto label$5957;
      label$6203:;
      {
       FBSTRING* vr$7591 = fb_StrAllocTempDescZEx( (uint8*)"cubic", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7591, 0 );
      }
      goto label$5957;
      label$6204:;
      {
       FBSTRING* vr$7592 = fb_StrAllocTempDescZEx( (uint8*)"cubic_spline", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7592, 0 );
      }
      goto label$5957;
      label$6205:;
      {
       FBSTRING* vr$7593 = fb_StrAllocTempDescZEx( (uint8*)"cubic_wave", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7593, 0 );
      }
      goto label$5957;
      label$6206:;
      {
       FBSTRING* vr$7594 = fb_StrAllocTempDescZEx( (uint8*)"currency", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7594, 0 );
      }
      goto label$5957;
      label$6207:;
      {
       FBSTRING* vr$7595 = fb_StrAllocTempDescZEx( (uint8*)"current_date", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7595, 0 );
      }
      goto label$5957;
      label$6208:;
      {
       FBSTRING* vr$7596 = fb_StrAllocTempDescZEx( (uint8*)"current_time", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7596, 0 );
      }
      goto label$5957;
      label$6209:;
      {
       FBSTRING* vr$7597 = fb_StrAllocTempDescZEx( (uint8*)"current_timestamp", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7597, 0 );
      }
      goto label$5957;
      label$6210:;
      {
       FBSTRING* vr$7598 = fb_StrAllocTempDescZEx( (uint8*)"cursor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7598, 0 );
      }
      goto label$5957;
      label$6211:;
      {
       FBSTRING* vr$7599 = fb_StrAllocTempDescZEx( (uint8*)"cutaway_textures", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7599, 0 );
      }
      goto label$5957;
      label$6212:;
      {
       FBSTRING* vr$7600 = fb_StrAllocTempDescZEx( (uint8*)"cvd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7600, 0 );
      }
      goto label$5957;
      label$6213:;
      {
       FBSTRING* vr$7601 = fb_StrAllocTempDescZEx( (uint8*)"cvi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7601, 0 );
      }
      goto label$5957;
      label$6214:;
      {
       FBSTRING* vr$7602 = fb_StrAllocTempDescZEx( (uint8*)"cvs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7602, 0 );
      }
      goto label$5957;
      label$5958:;
      static const void* tmp$4516[256ll] = {
       &&label$5959,
       &&label$5960,
       &&label$5961,
       &&label$5962,
       &&label$5963,
       &&label$5964,
       &&label$5965,
       &&label$5966,
       &&label$5967,
       &&label$5968,
       &&label$5969,
       &&label$5970,
       &&label$5971,
       &&label$5972,
       &&label$5973,
       &&label$5974,
       &&label$5975,
       &&label$5976,
       &&label$5977,
       &&label$5978,
       &&label$5979,
       &&label$5980,
       &&label$5981,
       &&label$5982,
       &&label$5983,
       &&label$5984,
       &&label$5985,
       &&label$5986,
       &&label$5987,
       &&label$5988,
       &&label$5989,
       &&label$5990,
       &&label$5991,
       &&label$5992,
       &&label$5993,
       &&label$5994,
       &&label$5995,
       &&label$5996,
       &&label$5997,
       &&label$5998,
       &&label$5999,
       &&label$6000,
       &&label$6001,
       &&label$6002,
       &&label$6003,
       &&label$6004,
       &&label$6005,
       &&label$6006,
       &&label$6007,
       &&label$6008,
       &&label$6009,
       &&label$6010,
       &&label$6011,
       &&label$6012,
       &&label$6013,
       &&label$6014,
       &&label$6015,
       &&label$6016,
       &&label$6017,
       &&label$6018,
       &&label$6019,
       &&label$6020,
       &&label$6021,
       &&label$6022,
       &&label$6023,
       &&label$6024,
       &&label$6025,
       &&label$6026,
       &&label$6027,
       &&label$6028,
       &&label$6029,
       &&label$6030,
       &&label$6031,
       &&label$6032,
       &&label$6033,
       &&label$6034,
       &&label$6035,
       &&label$6036,
       &&label$6037,
       &&label$6038,
       &&label$6039,
       &&label$6040,
       &&label$6041,
       &&label$6042,
       &&label$6043,
       &&label$6044,
       &&label$6045,
       &&label$6046,
       &&label$6047,
       &&label$6048,
       &&label$6049,
       &&label$6050,
       &&label$6051,
       &&label$6052,
       &&label$6053,
       &&label$6054,
       &&label$6055,
       &&label$6056,
       &&label$6057,
       &&label$6058,
       &&label$6059,
       &&label$6060,
       &&label$6061,
       &&label$6062,
       &&label$6063,
       &&label$6064,
       &&label$6065,
       &&label$6066,
       &&label$6067,
       &&label$6068,
       &&label$6069,
       &&label$6070,
       &&label$6071,
       &&label$6072,
       &&label$6073,
       &&label$6074,
       &&label$6075,
       &&label$6076,
       &&label$6077,
       &&label$6078,
       &&label$6079,
       &&label$6080,
       &&label$6081,
       &&label$6082,
       &&label$6083,
       &&label$6084,
       &&label$6085,
       &&label$6086,
       &&label$6087,
       &&label$6088,
       &&label$6089,
       &&label$6090,
       &&label$6091,
       &&label$6092,
       &&label$6093,
       &&label$6094,
       &&label$6095,
       &&label$6096,
       &&label$6097,
       &&label$6098,
       &&label$6099,
       &&label$6100,
       &&label$6101,
       &&label$6102,
       &&label$6103,
       &&label$6104,
       &&label$6105,
       &&label$6106,
       &&label$6107,
       &&label$6108,
       &&label$6109,
       &&label$6110,
       &&label$6111,
       &&label$6112,
       &&label$6113,
       &&label$6114,
       &&label$6115,
       &&label$6116,
       &&label$6117,
       &&label$6118,
       &&label$6119,
       &&label$6120,
       &&label$6121,
       &&label$6122,
       &&label$6123,
       &&label$6124,
       &&label$6125,
       &&label$6126,
       &&label$6127,
       &&label$6128,
       &&label$6129,
       &&label$6130,
       &&label$6131,
       &&label$6132,
       &&label$6133,
       &&label$6134,
       &&label$6135,
       &&label$6136,
       &&label$6137,
       &&label$6138,
       &&label$6139,
       &&label$6140,
       &&label$6141,
       &&label$6142,
       &&label$6143,
       &&label$6144,
       &&label$6145,
       &&label$6146,
       &&label$6147,
       &&label$6148,
       &&label$6149,
       &&label$6150,
       &&label$6151,
       &&label$6152,
       &&label$6153,
       &&label$6154,
       &&label$6155,
       &&label$6156,
       &&label$6157,
       &&label$6158,
       &&label$6159,
       &&label$6160,
       &&label$6161,
       &&label$6162,
       &&label$6163,
       &&label$6164,
       &&label$6165,
       &&label$6166,
       &&label$6167,
       &&label$6168,
       &&label$6169,
       &&label$6170,
       &&label$6171,
       &&label$6172,
       &&label$6173,
       &&label$6174,
       &&label$6175,
       &&label$6176,
       &&label$6177,
       &&label$6178,
       &&label$6179,
       &&label$6180,
       &&label$6181,
       &&label$6182,
       &&label$6183,
       &&label$6184,
       &&label$6185,
       &&label$6186,
       &&label$6187,
       &&label$6188,
       &&label$6189,
       &&label$6190,
       &&label$6191,
       &&label$6192,
       &&label$6193,
       &&label$6194,
       &&label$6195,
       &&label$6196,
       &&label$6197,
       &&label$6198,
       &&label$6199,
       &&label$6200,
       &&label$6201,
       &&label$6202,
       &&label$6203,
       &&label$6204,
       &&label$6205,
       &&label$6206,
       &&label$6207,
       &&label$6208,
       &&label$6209,
       &&label$6210,
       &&label$6211,
       &&label$6212,
       &&label$6213,
       &&label$6214,
      };
      if( TMP$2380$6 > 255ull ) goto label$5957;
      goto *tmp$4516[TMP$2380$6 - 0ull];
      label$5957:;
     }
    }
    goto label$5883;
    label$6215:;
    {
     {
      uint64 TMP$2634$6;
      TMP$2634$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$6217;
      label$6218:;
      {
       FBSTRING* vr$7604 = fb_StrAllocTempDescZEx( (uint8*)"cylinder", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7604, 0 );
      }
      goto label$6216;
      label$6219:;
      {
       FBSTRING* vr$7605 = fb_StrAllocTempDescZEx( (uint8*)"cylindrical", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7605, 0 );
      }
      goto label$6216;
      label$6220:;
      {
       FBSTRING* vr$7606 = fb_StrAllocTempDescZEx( (uint8*)"d", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7606, 0 );
      }
      goto label$6216;
      label$6221:;
      {
       FBSTRING* vr$7607 = fb_StrAllocTempDescZEx( (uint8*)"data", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7607, 0 );
      }
      goto label$6216;
      label$6222:;
      {
       FBSTRING* vr$7608 = fb_StrAllocTempDescZEx( (uint8*)"dataxel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7608, 0 );
      }
      goto label$6216;
      label$6223:;
      {
       FBSTRING* vr$7609 = fb_StrAllocTempDescZEx( (uint8*)"date", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7609, 0 );
      }
      goto label$6216;
      label$6224:;
      {
       FBSTRING* vr$7610 = fb_StrAllocTempDescZEx( (uint8*)"date-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7610, 0 );
      }
      goto label$6216;
      label$6225:;
      {
       FBSTRING* vr$7611 = fb_StrAllocTempDescZEx( (uint8*)"date-written", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7611, 0 );
      }
      goto label$6216;
      label$6226:;
      {
       FBSTRING* vr$7612 = fb_StrAllocTempDescZEx( (uint8*)"day", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7612, 0 );
      }
      goto label$6216;
      label$6227:;
      {
       FBSTRING* vr$7613 = fb_StrAllocTempDescZEx( (uint8*)"day-of-week", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7613, 0 );
      }
      goto label$6216;
      label$6228:;
      {
       FBSTRING* vr$7614 = fb_StrAllocTempDescZEx( (uint8*)"dbcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7614, 0 );
      }
      goto label$6216;
      label$6229:;
      {
       FBSTRING* vr$7615 = fb_StrAllocTempDescZEx( (uint8*)"dbms_in_memory", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7615, 0 );
      }
      goto label$6216;
      label$6230:;
      {
       FBSTRING* vr$7616 = fb_StrAllocTempDescZEx( (uint8*)"de", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7616, 0 );
      }
      goto label$6216;
      label$6231:;
      {
       FBSTRING* vr$7617 = fb_StrAllocTempDescZEx( (uint8*)"debug", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7617, 0 );
      }
      goto label$6216;
      label$6232:;
      {
       FBSTRING* vr$7618 = fb_StrAllocTempDescZEx( (uint8*)"debug-contents", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7618, 0 );
      }
      goto label$6216;
      label$6233:;
      {
       FBSTRING* vr$7619 = fb_StrAllocTempDescZEx( (uint8*)"debugging", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7619, 0 );
      }
      goto label$6216;
      label$6234:;
      {
       FBSTRING* vr$7620 = fb_StrAllocTempDescZEx( (uint8*)"debug-item", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7620, 0 );
      }
      goto label$6216;
      label$6235:;
      {
       FBSTRING* vr$7621 = fb_StrAllocTempDescZEx( (uint8*)"debug-line", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7621, 0 );
      }
      goto label$6216;
      label$6236:;
      {
       FBSTRING* vr$7622 = fb_StrAllocTempDescZEx( (uint8*)"debug-name", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7622, 0 );
      }
      goto label$6216;
      label$6237:;
      {
       FBSTRING* vr$7623 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7623, 0 );
      }
      goto label$6216;
      label$6238:;
      {
       FBSTRING* vr$7624 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7624, 0 );
      }
      goto label$6216;
      label$6239:;
      {
       FBSTRING* vr$7625 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7625, 0 );
      }
      goto label$6216;
      label$6240:;
      {
       FBSTRING* vr$7626 = fb_StrAllocTempDescZEx( (uint8*)"dec", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7626, 0 );
      }
      goto label$6216;
      label$6241:;
      {
       FBSTRING* vr$7627 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7627, 0 );
      }
      goto label$6216;
      label$6242:;
      {
       FBSTRING* vr$7628 = fb_StrAllocTempDescZEx( (uint8*)"decimal-point", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7628, 0 );
      }
      goto label$6216;
      label$6243:;
      {
       FBSTRING* vr$7629 = fb_StrAllocTempDescZEx( (uint8*)"declaratives", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7629, 0 );
      }
      goto label$6216;
      label$6244:;
      {
       FBSTRING* vr$7630 = fb_StrAllocTempDescZEx( (uint8*)"declare", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7630, 0 );
      }
      goto label$6216;
      label$6245:;
      {
       FBSTRING* vr$7631 = fb_StrAllocTempDescZEx( (uint8*)"decode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7631, 0 );
      }
      goto label$6216;
      label$6246:;
      {
       FBSTRING* vr$7632 = fb_StrAllocTempDescZEx( (uint8*)"def", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7632, 0 );
      }
      goto label$6216;
      label$6247:;
      {
       FBSTRING* vr$7633 = fb_StrAllocTempDescZEx( (uint8*)"default", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7633, 0 );
      }
      goto label$6216;
      label$6248:;
      {
       FBSTRING* vr$7634 = fb_StrAllocTempDescZEx( (uint8*)"defdbl", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7634, 0 );
      }
      goto label$6216;
      label$6249:;
      {
       FBSTRING* vr$7635 = fb_StrAllocTempDescZEx( (uint8*)"define", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7635, 0 );
      }
      goto label$6216;
      label$6250:;
      {
       FBSTRING* vr$7636 = fb_StrAllocTempDescZEx( (uint8*)"defined", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7636, 0 );
      }
      goto label$6216;
      label$6251:;
      {
       FBSTRING* vr$7637 = fb_StrAllocTempDescZEx( (uint8*)"defint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7637, 0 );
      }
      goto label$6216;
      label$6252:;
      {
       FBSTRING* vr$7638 = fb_StrAllocTempDescZEx( (uint8*)"defsng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7638, 0 );
      }
      goto label$6216;
      label$6253:;
      {
       FBSTRING* vr$7639 = fb_StrAllocTempDescZEx( (uint8*)"defstr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7639, 0 );
      }
      goto label$6216;
      label$6254:;
      {
       FBSTRING* vr$7640 = fb_StrAllocTempDescZEx( (uint8*)"degrees", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7640, 0 );
      }
      goto label$6216;
      label$6255:;
      {
       FBSTRING* vr$7641 = fb_StrAllocTempDescZEx( (uint8*)"delete", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7641, 0 );
      }
      goto label$6216;
      label$6256:;
      {
       FBSTRING* vr$7642 = fb_StrAllocTempDescZEx( (uint8*)"delimited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7642, 0 );
      }
      goto label$6216;
      label$6257:;
      {
       FBSTRING* vr$7643 = fb_StrAllocTempDescZEx( (uint8*)"delimiter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7643, 0 );
      }
      goto label$6216;
      label$6258:;
      {
       FBSTRING* vr$7644 = fb_StrAllocTempDescZEx( (uint8*)"density", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7644, 0 );
      }
      goto label$6216;
      label$6259:;
      {
       FBSTRING* vr$7645 = fb_StrAllocTempDescZEx( (uint8*)"density_file", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7645, 0 );
      }
      goto label$6216;
      label$6260:;
      {
       FBSTRING* vr$7646 = fb_StrAllocTempDescZEx( (uint8*)"density_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7646, 0 );
      }
      goto label$6216;
      label$6261:;
      {
       FBSTRING* vr$7647 = fb_StrAllocTempDescZEx( (uint8*)"dents", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7647, 0 );
      }
      goto label$6216;
      label$6262:;
      {
       FBSTRING* vr$7648 = fb_StrAllocTempDescZEx( (uint8*)"depending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7648, 0 );
      }
      goto label$6216;
      label$6263:;
      {
       FBSTRING* vr$7649 = fb_StrAllocTempDescZEx( (uint8*)"desc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7649, 0 );
      }
      goto label$6216;
      label$6264:;
      {
       FBSTRING* vr$7650 = fb_StrAllocTempDescZEx( (uint8*)"descending", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7650, 0 );
      }
      goto label$6216;
      label$6265:;
      {
       FBSTRING* vr$7651 = fb_StrAllocTempDescZEx( (uint8*)"destination", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7651, 0 );
      }
      goto label$6216;
      label$6266:;
      {
       FBSTRING* vr$7652 = fb_StrAllocTempDescZEx( (uint8*)"destructor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7652, 0 );
      }
      goto label$6216;
      label$6267:;
      {
       FBSTRING* vr$7653 = fb_StrAllocTempDescZEx( (uint8*)"detail", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7653, 0 );
      }
      goto label$6216;
      label$6268:;
      {
       FBSTRING* vr$7654 = fb_StrAllocTempDescZEx( (uint8*)"determinant", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7654, 0 );
      }
      goto label$6216;
      label$6269:;
      {
       FBSTRING* vr$7655 = fb_StrAllocTempDescZEx( (uint8*)"df3", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7655, 0 );
      }
      goto label$6216;
      label$6270:;
      {
       FBSTRING* vr$7656 = fb_StrAllocTempDescZEx( (uint8*)"dict_find", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7656, 0 );
      }
      goto label$6216;
      label$6271:;
      {
       FBSTRING* vr$7657 = fb_StrAllocTempDescZEx( (uint8*)"dict_next", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7657, 0 );
      }
      goto label$6216;
      label$6272:;
      {
       FBSTRING* vr$7658 = fb_StrAllocTempDescZEx( (uint8*)"dict_value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7658, 0 );
      }
      goto label$6216;
      label$6273:;
      {
       FBSTRING* vr$7659 = fb_StrAllocTempDescZEx( (uint8*)"difference", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7659, 0 );
      }
      goto label$6216;
      label$6274:;
      {
       FBSTRING* vr$7660 = fb_StrAllocTempDescZEx( (uint8*)"diffuse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7660, 0 );
      }
      goto label$6216;
      label$6275:;
      {
       FBSTRING* vr$7661 = fb_StrAllocTempDescZEx( (uint8*)"dim", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7661, 0 );
      }
      goto label$6216;
      label$6276:;
      {
       FBSTRING* vr$7662 = fb_StrAllocTempDescZEx( (uint8*)"dimension", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7662, 0 );
      }
      goto label$6216;
      label$6277:;
      {
       FBSTRING* vr$7663 = fb_StrAllocTempDescZEx( (uint8*)"dimensions", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7663, 0 );
      }
      goto label$6216;
      label$6278:;
      {
       FBSTRING* vr$7664 = fb_StrAllocTempDescZEx( (uint8*)"dimension_size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7664, 0 );
      }
      goto label$6216;
      label$6279:;
      {
       FBSTRING* vr$7665 = fb_StrAllocTempDescZEx( (uint8*)"direction", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7665, 0 );
      }
      goto label$6216;
      label$6280:;
      {
       FBSTRING* vr$7666 = fb_StrAllocTempDescZEx( (uint8*)"directive_error", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7666, 0 );
      }
      goto label$6216;
      label$6281:;
      {
       FBSTRING* vr$7667 = fb_StrAllocTempDescZEx( (uint8*)"disc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7667, 0 );
      }
      goto label$6216;
      label$6282:;
      {
       FBSTRING* vr$7668 = fb_StrAllocTempDescZEx( (uint8*)"discard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7668, 0 );
      }
      goto label$6216;
      label$6283:;
      {
       FBSTRING* vr$7669 = fb_StrAllocTempDescZEx( (uint8*)"dispersion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7669, 0 );
      }
      goto label$6216;
      label$6284:;
      {
       FBSTRING* vr$7670 = fb_StrAllocTempDescZEx( (uint8*)"dispersion_samples", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7670, 0 );
      }
      goto label$6216;
      label$6285:;
      {
       FBSTRING* vr$7671 = fb_StrAllocTempDescZEx( (uint8*)"displace", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7671, 0 );
      }
      goto label$6216;
      label$6286:;
      {
       FBSTRING* vr$7672 = fb_StrAllocTempDescZEx( (uint8*)"display", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7672, 0 );
      }
      goto label$6216;
      label$6287:;
      {
       FBSTRING* vr$7673 = fb_StrAllocTempDescZEx( (uint8*)"display-1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7673, 0 );
      }
      goto label$6216;
      label$6288:;
      {
       FBSTRING* vr$7674 = fb_StrAllocTempDescZEx( (uint8*)"dispose", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7674, 0 );
      }
      goto label$6216;
      label$6289:;
      {
       FBSTRING* vr$7675 = fb_StrAllocTempDescZEx( (uint8*)"distance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7675, 0 );
      }
      goto label$6216;
      label$6290:;
      {
       FBSTRING* vr$7676 = fb_StrAllocTempDescZEx( (uint8*)"dist_exp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7676, 0 );
      }
      goto label$6216;
      label$6291:;
      {
       FBSTRING* vr$7677 = fb_StrAllocTempDescZEx( (uint8*)"distinct", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7677, 0 );
      }
      goto label$6216;
      label$6292:;
      {
       FBSTRING* vr$7678 = fb_StrAllocTempDescZEx( (uint8*)"div", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7678, 0 );
      }
      goto label$6216;
      label$6293:;
      {
       FBSTRING* vr$7679 = fb_StrAllocTempDescZEx( (uint8*)"divide", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7679, 0 );
      }
      goto label$6216;
      label$6294:;
      {
       FBSTRING* vr$7680 = fb_StrAllocTempDescZEx( (uint8*)"division", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7680, 0 );
      }
      goto label$6216;
      label$6295:;
      {
       FBSTRING* vr$7681 = fb_StrAllocTempDescZEx( (uint8*)"do", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7681, 0 );
      }
      goto label$6216;
      label$6296:;
      {
       FBSTRING* vr$7682 = fb_StrAllocTempDescZEx( (uint8*)"dot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7682, 0 );
      }
      goto label$6216;
      label$6297:;
      {
       FBSTRING* vr$7683 = fb_StrAllocTempDescZEx( (uint8*)"double", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7683, 0 );
      }
      goto label$6216;
      label$6298:;
      {
       FBSTRING* vr$7684 = fb_StrAllocTempDescZEx( (uint8*)"doublegreatethan", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7684, 0 );
      }
      goto label$6216;
      label$6299:;
      {
       FBSTRING* vr$7685 = fb_StrAllocTempDescZEx( (uint8*)"double_illuminate", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7685, 0 );
      }
      goto label$6216;
      label$6300:;
      {
       FBSTRING* vr$7686 = fb_StrAllocTempDescZEx( (uint8*)"down", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7686, 0 );
      }
      goto label$6216;
      label$6301:;
      {
       FBSTRING* vr$7687 = fb_StrAllocTempDescZEx( (uint8*)"downto", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7687, 0 );
      }
      goto label$6216;
      label$6302:;
      {
       FBSTRING* vr$7688 = fb_StrAllocTempDescZEx( (uint8*)"draw", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7688, 0 );
      }
      goto label$6216;
      label$6303:;
      {
       FBSTRING* vr$7689 = fb_StrAllocTempDescZEx( (uint8*)"duplicates", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7689, 0 );
      }
      goto label$6216;
      label$6304:;
      {
       FBSTRING* vr$7690 = fb_StrAllocTempDescZEx( (uint8*)"dvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7690, 0 );
      }
      goto label$6216;
      label$6305:;
      {
       FBSTRING* vr$7691 = fb_StrAllocTempDescZEx( (uint8*)"dvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7691, 0 );
      }
      goto label$6216;
      label$6306:;
      {
       FBSTRING* vr$7692 = fb_StrAllocTempDescZEx( (uint8*)"dvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7692, 0 );
      }
      goto label$6216;
      label$6307:;
      {
       FBSTRING* vr$7693 = fb_StrAllocTempDescZEx( (uint8*)"dx", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7693, 0 );
      }
      goto label$6216;
      label$6308:;
      {
       FBSTRING* vr$7694 = fb_StrAllocTempDescZEx( (uint8*)"dy", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7694, 0 );
      }
      goto label$6216;
      label$6309:;
      {
       FBSTRING* vr$7695 = fb_StrAllocTempDescZEx( (uint8*)"dynamic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7695, 0 );
      }
      goto label$6216;
      label$6310:;
      {
       FBSTRING* vr$7696 = fb_StrAllocTempDescZEx( (uint8*)"dz", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7696, 0 );
      }
      goto label$6216;
      label$6311:;
      {
       FBSTRING* vr$7697 = fb_StrAllocTempDescZEx( (uint8*)"e", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7697, 0 );
      }
      goto label$6216;
      label$6312:;
      {
       FBSTRING* vr$7698 = fb_StrAllocTempDescZEx( (uint8*)"eccentricity", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7698, 0 );
      }
      goto label$6216;
      label$6313:;
      {
       FBSTRING* vr$7699 = fb_StrAllocTempDescZEx( (uint8*)"edit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7699, 0 );
      }
      goto label$6216;
      label$6314:;
      {
       FBSTRING* vr$7700 = fb_StrAllocTempDescZEx( (uint8*)"egcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7700, 0 );
      }
      goto label$6216;
      label$6315:;
      {
       FBSTRING* vr$7701 = fb_StrAllocTempDescZEx( (uint8*)"egi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7701, 0 );
      }
      goto label$6216;
      label$6316:;
      {
       FBSTRING* vr$7702 = fb_StrAllocTempDescZEx( (uint8*)"eject", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7702, 0 );
      }
      goto label$6216;
      label$6317:;
      {
       FBSTRING* vr$7703 = fb_StrAllocTempDescZEx( (uint8*)"elif", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7703, 0 );
      }
      goto label$6216;
      label$6318:;
      {
       FBSTRING* vr$7704 = fb_StrAllocTempDescZEx( (uint8*)"else", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7704, 0 );
      }
      goto label$6216;
      label$6319:;
      {
       FBSTRING* vr$7705 = fb_StrAllocTempDescZEx( (uint8*)"elseif", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7705, 0 );
      }
      goto label$6216;
      label$6320:;
      {
       FBSTRING* vr$7706 = fb_StrAllocTempDescZEx( (uint8*)"emi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7706, 0 );
      }
      goto label$6216;
      label$6321:;
      {
       FBSTRING* vr$7707 = fb_StrAllocTempDescZEx( (uint8*)"emission", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7707, 0 );
      }
      goto label$6216;
      label$6322:;
      {
       FBSTRING* vr$7708 = fb_StrAllocTempDescZEx( (uint8*)"enable", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7708, 0 );
      }
      goto label$6216;
      label$6323:;
      {
       FBSTRING* vr$7709 = fb_StrAllocTempDescZEx( (uint8*)"encode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7709, 0 );
      }
      goto label$6216;
      label$6324:;
      {
       FBSTRING* vr$7710 = fb_StrAllocTempDescZEx( (uint8*)"end", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7710, 0 );
      }
      goto label$6216;
      label$6325:;
      {
       FBSTRING* vr$7711 = fb_StrAllocTempDescZEx( (uint8*)"end-add", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7711, 0 );
      }
      goto label$6216;
      label$6326:;
      {
       FBSTRING* vr$7712 = fb_StrAllocTempDescZEx( (uint8*)"end-call", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7712, 0 );
      }
      goto label$6216;
      label$6327:;
      {
       FBSTRING* vr$7713 = fb_StrAllocTempDescZEx( (uint8*)"end-compute", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7713, 0 );
      }
      goto label$6216;
      label$6328:;
      {
       FBSTRING* vr$7714 = fb_StrAllocTempDescZEx( (uint8*)"end-delete", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7714, 0 );
      }
      goto label$6216;
      label$6329:;
      {
       FBSTRING* vr$7715 = fb_StrAllocTempDescZEx( (uint8*)"end-divide", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7715, 0 );
      }
      goto label$6216;
      label$6330:;
      {
       FBSTRING* vr$7716 = fb_StrAllocTempDescZEx( (uint8*)"end-evaluate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7716, 0 );
      }
      goto label$6216;
      label$6331:;
      {
       FBSTRING* vr$7717 = fb_StrAllocTempDescZEx( (uint8*)"end-if", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7717, 0 );
      }
      goto label$6216;
      label$6332:;
      {
       FBSTRING* vr$7718 = fb_StrAllocTempDescZEx( (uint8*)"ending", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7718, 0 );
      }
      goto label$6216;
      label$6333:;
      {
       FBSTRING* vr$7719 = fb_StrAllocTempDescZEx( (uint8*)"end-invoke", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7719, 0 );
      }
      goto label$6216;
      label$6334:;
      {
       FBSTRING* vr$7720 = fb_StrAllocTempDescZEx( (uint8*)"end-multiply", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7720, 0 );
      }
      goto label$6216;
      label$6335:;
      {
       FBSTRING* vr$7721 = fb_StrAllocTempDescZEx( (uint8*)"endofdata", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7721, 0 );
      }
      goto label$6216;
      label$6336:;
      {
       FBSTRING* vr$7722 = fb_StrAllocTempDescZEx( (uint8*)"end-of-page", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7722, 0 );
      }
      goto label$6216;
      label$6337:;
      {
       FBSTRING* vr$7723 = fb_StrAllocTempDescZEx( (uint8*)"end-perform", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7723, 0 );
      }
      goto label$6216;
      label$6338:;
      {
       FBSTRING* vr$7724 = fb_StrAllocTempDescZEx( (uint8*)"end-read", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7724, 0 );
      }
      goto label$6216;
      label$6339:;
      {
       FBSTRING* vr$7725 = fb_StrAllocTempDescZEx( (uint8*)"end-receive", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7725, 0 );
      }
      goto label$6216;
      label$6340:;
      {
       FBSTRING* vr$7726 = fb_StrAllocTempDescZEx( (uint8*)"end-return", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7726, 0 );
      }
      goto label$6216;
      label$6341:;
      {
       FBSTRING* vr$7727 = fb_StrAllocTempDescZEx( (uint8*)"end-rewrite", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7727, 0 );
      }
      goto label$6216;
      label$6342:;
      {
       FBSTRING* vr$7728 = fb_StrAllocTempDescZEx( (uint8*)"end-search", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7728, 0 );
      }
      goto label$6216;
      label$6343:;
      {
       FBSTRING* vr$7729 = fb_StrAllocTempDescZEx( (uint8*)"end-start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7729, 0 );
      }
      goto label$6216;
      label$6344:;
      {
       FBSTRING* vr$7730 = fb_StrAllocTempDescZEx( (uint8*)"end-string", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7730, 0 );
      }
      goto label$6216;
      label$6345:;
      {
       FBSTRING* vr$7731 = fb_StrAllocTempDescZEx( (uint8*)"end-subtract", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7731, 0 );
      }
      goto label$6216;
      label$6346:;
      {
       FBSTRING* vr$7732 = fb_StrAllocTempDescZEx( (uint8*)"endswith", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7732, 0 );
      }
      goto label$6216;
      label$6347:;
      {
       FBSTRING* vr$7733 = fb_StrAllocTempDescZEx( (uint8*)"end-unstring", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7733, 0 );
      }
      goto label$6216;
      label$6348:;
      {
       FBSTRING* vr$7734 = fb_StrAllocTempDescZEx( (uint8*)"end-write", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7734, 0 );
      }
      goto label$6216;
      label$6349:;
      {
       FBSTRING* vr$7735 = fb_StrAllocTempDescZEx( (uint8*)"enter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7735, 0 );
      }
      goto label$6216;
      label$6350:;
      {
       FBSTRING* vr$7736 = fb_StrAllocTempDescZEx( (uint8*)"entry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7736, 0 );
      }
      goto label$6216;
      label$6351:;
      {
       FBSTRING* vr$7737 = fb_StrAllocTempDescZEx( (uint8*)"enum", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7737, 0 );
      }
      goto label$6216;
      label$6352:;
      {
       FBSTRING* vr$7738 = fb_StrAllocTempDescZEx( (uint8*)"environ", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7738, 0 );
      }
      goto label$6216;
      label$6353:;
      {
       FBSTRING* vr$7739 = fb_StrAllocTempDescZEx( (uint8*)"environment", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7739, 0 );
      }
      goto label$6216;
      label$6354:;
      {
       FBSTRING* vr$7740 = fb_StrAllocTempDescZEx( (uint8*)"eof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7740, 0 );
      }
      goto label$6216;
      label$6355:;
      {
       FBSTRING* vr$7741 = fb_StrAllocTempDescZEx( (uint8*)"eop", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7741, 0 );
      }
      goto label$6216;
      label$6356:;
      {
       FBSTRING* vr$7742 = fb_StrAllocTempDescZEx( (uint8*)"equal", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7742, 0 );
      }
      goto label$6216;
      label$6357:;
      {
       FBSTRING* vr$7743 = fb_StrAllocTempDescZEx( (uint8*)"equivalence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7743, 0 );
      }
      goto label$6216;
      label$6358:;
      {
       FBSTRING* vr$7744 = fb_StrAllocTempDescZEx( (uint8*)"eqv", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7744, 0 );
      }
      goto label$6216;
      label$6359:;
      {
       FBSTRING* vr$7745 = fb_StrAllocTempDescZEx( (uint8*)"erase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7745, 0 );
      }
      goto label$6216;
      label$6360:;
      {
       FBSTRING* vr$7746 = fb_StrAllocTempDescZEx( (uint8*)"erdev", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7746, 0 );
      }
      goto label$6216;
      label$6361:;
      {
       FBSTRING* vr$7747 = fb_StrAllocTempDescZEx( (uint8*)"erf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7747, 0 );
      }
      goto label$6216;
      label$6362:;
      {
       FBSTRING* vr$7748 = fb_StrAllocTempDescZEx( (uint8*)"erfc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7748, 0 );
      }
      goto label$6216;
      label$6363:;
      {
       FBSTRING* vr$7749 = fb_StrAllocTempDescZEx( (uint8*)"erl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7749, 0 );
      }
      goto label$6216;
      label$6364:;
      {
       FBSTRING* vr$7750 = fb_StrAllocTempDescZEx( (uint8*)"err", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7750, 0 );
      }
      goto label$6216;
      label$6365:;
      {
       FBSTRING* vr$7751 = fb_StrAllocTempDescZEx( (uint8*)"error", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7751, 0 );
      }
      goto label$6216;
      label$6366:;
      {
       FBSTRING* vr$7752 = fb_StrAllocTempDescZEx( (uint8*)"error_bound", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7752, 0 );
      }
      goto label$6216;
      label$6367:;
      {
       FBSTRING* vr$7753 = fb_StrAllocTempDescZEx( (uint8*)"escape", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7753, 0 );
      }
      goto label$6216;
      label$6368:;
      {
       FBSTRING* vr$7754 = fb_StrAllocTempDescZEx( (uint8*)"esi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7754, 0 );
      }
      goto label$6216;
      label$6369:;
      {
       FBSTRING* vr$7755 = fb_StrAllocTempDescZEx( (uint8*)"evaluate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7755, 0 );
      }
      goto label$6216;
      label$6370:;
      {
       FBSTRING* vr$7756 = fb_StrAllocTempDescZEx( (uint8*)"every", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7756, 0 );
      }
      goto label$6216;
      label$6371:;
      {
       FBSTRING* vr$7757 = fb_StrAllocTempDescZEx( (uint8*)"except", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7757, 0 );
      }
      goto label$6216;
      label$6372:;
      {
       FBSTRING* vr$7758 = fb_StrAllocTempDescZEx( (uint8*)"exception", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7758, 0 );
      }
      goto label$6216;
      label$6373:;
      {
       FBSTRING* vr$7759 = fb_StrAllocTempDescZEx( (uint8*)"exit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7759, 0 );
      }
      goto label$6216;
      label$6374:;
      {
       FBSTRING* vr$7760 = fb_StrAllocTempDescZEx( (uint8*)"exp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7760, 0 );
      }
      goto label$6216;
      label$6375:;
      {
       FBSTRING* vr$7761 = fb_StrAllocTempDescZEx( (uint8*)"exp2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7761, 0 );
      }
      goto label$6216;
      label$6376:;
      {
       FBSTRING* vr$7762 = fb_StrAllocTempDescZEx( (uint8*)"expand", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7762, 0 );
      }
      goto label$6216;
      label$6377:;
      {
       FBSTRING* vr$7763 = fb_StrAllocTempDescZEx( (uint8*)"expand_thresholds", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7763, 0 );
      }
      goto label$6216;
      label$6378:;
      {
       FBSTRING* vr$7764 = fb_StrAllocTempDescZEx( (uint8*)"expm1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7764, 0 );
      }
      goto label$6216;
      label$6379:;
      {
       FBSTRING* vr$7765 = fb_StrAllocTempDescZEx( (uint8*)"exponent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7765, 0 );
      }
      goto label$6216;
      label$6380:;
      {
       FBSTRING* vr$7766 = fb_StrAllocTempDescZEx( (uint8*)"export", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7766, 0 );
      }
      goto label$6216;
      label$6381:;
      {
       FBSTRING* vr$7767 = fb_StrAllocTempDescZEx( (uint8*)"exports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7767, 0 );
      }
      goto label$6216;
      label$6382:;
      {
       FBSTRING* vr$7768 = fb_StrAllocTempDescZEx( (uint8*)"extend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7768, 0 );
      }
      goto label$6216;
      label$6383:;
      {
       FBSTRING* vr$7769 = fb_StrAllocTempDescZEx( (uint8*)"exterior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7769, 0 );
      }
      goto label$6216;
      label$6384:;
      {
       FBSTRING* vr$7770 = fb_StrAllocTempDescZEx( (uint8*)"extern", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7770, 0 );
      }
      goto label$6216;
      label$6385:;
      {
       FBSTRING* vr$7771 = fb_StrAllocTempDescZEx( (uint8*)"external", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7771, 0 );
      }
      goto label$6216;
      label$6386:;
      {
       FBSTRING* vr$7772 = fb_StrAllocTempDescZEx( (uint8*)"exterr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7772, 0 );
      }
      goto label$6216;
      label$6387:;
      {
       FBSTRING* vr$7773 = fb_StrAllocTempDescZEx( (uint8*)"extinction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7773, 0 );
      }
      goto label$6216;
      label$6388:;
      {
       FBSTRING* vr$7774 = fb_StrAllocTempDescZEx( (uint8*)"extract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7774, 0 );
      }
      goto label$6216;
      label$6389:;
      {
       FBSTRING* vr$7775 = fb_StrAllocTempDescZEx( (uint8*)"f", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7775, 0 );
      }
      goto label$6216;
      label$6390:;
      {
       FBSTRING* vr$7776 = fb_StrAllocTempDescZEx( (uint8*)"fabs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7776, 0 );
      }
      goto label$6216;
      label$6391:;
      {
       FBSTRING* vr$7777 = fb_StrAllocTempDescZEx( (uint8*)"faceforward", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7777, 0 );
      }
      goto label$6216;
      label$6392:;
      {
       FBSTRING* vr$7778 = fb_StrAllocTempDescZEx( (uint8*)"face_indices", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7778, 0 );
      }
      goto label$6216;
      label$6393:;
      {
       FBSTRING* vr$7779 = fb_StrAllocTempDescZEx( (uint8*)"facets", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7779, 0 );
      }
      goto label$6216;
      label$6394:;
      {
       FBSTRING* vr$7780 = fb_StrAllocTempDescZEx( (uint8*)"fade_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7780, 0 );
      }
      goto label$6216;
      label$6395:;
      {
       FBSTRING* vr$7781 = fb_StrAllocTempDescZEx( (uint8*)"fade_colour", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7781, 0 );
      }
      goto label$6216;
      label$6396:;
      {
       FBSTRING* vr$7782 = fb_StrAllocTempDescZEx( (uint8*)"fade_distance", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7782, 0 );
      }
      goto label$6216;
      label$6397:;
      {
       FBSTRING* vr$7783 = fb_StrAllocTempDescZEx( (uint8*)"fade_power", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7783, 0 );
      }
      goto label$6216;
      label$6398:;
      {
       FBSTRING* vr$7784 = fb_StrAllocTempDescZEx( (uint8*)"falloff", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7784, 0 );
      }
      goto label$6216;
      label$6399:;
      {
       FBSTRING* vr$7785 = fb_StrAllocTempDescZEx( (uint8*)"falloff_angle", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7785, 0 );
      }
      goto label$6216;
      label$6400:;
      {
       FBSTRING* vr$7786 = fb_StrAllocTempDescZEx( (uint8*)"false", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7786, 0 );
      }
      goto label$6216;
      label$6401:;
      {
       FBSTRING* vr$7787 = fb_StrAllocTempDescZEx( (uint8*)"far", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7787, 0 );
      }
      goto label$6216;
      label$6402:;
      {
       FBSTRING* vr$7788 = fb_StrAllocTempDescZEx( (uint8*)"fclose", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7788, 0 );
      }
      goto label$6216;
      label$6403:;
      {
       FBSTRING* vr$7789 = fb_StrAllocTempDescZEx( (uint8*)"fd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7789, 0 );
      }
      goto label$6216;
      label$6404:;
      {
       FBSTRING* vr$7790 = fb_StrAllocTempDescZEx( (uint8*)"field", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7790, 0 );
      }
      goto label$6216;
      label$6405:;
      {
       FBSTRING* vr$7791 = fb_StrAllocTempDescZEx( (uint8*)"file", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7791, 0 );
      }
      goto label$6216;
      label$6406:;
      {
       FBSTRING* vr$7792 = fb_StrAllocTempDescZEx( (uint8*)"file-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7792, 0 );
      }
      goto label$6216;
      label$6407:;
      {
       FBSTRING* vr$7793 = fb_StrAllocTempDescZEx( (uint8*)"file_exists", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7793, 0 );
      }
      goto label$6216;
      label$6408:;
      {
       FBSTRING* vr$7794 = fb_StrAllocTempDescZEx( (uint8*)"files", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7794, 0 );
      }
      goto label$6216;
      label$6409:;
      {
       FBSTRING* vr$7795 = fb_StrAllocTempDescZEx( (uint8*)"filler", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7795, 0 );
      }
      goto label$6216;
      label$6410:;
      {
       FBSTRING* vr$7796 = fb_StrAllocTempDescZEx( (uint8*)"filter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7796, 0 );
      }
      goto label$6216;
      label$6411:;
      {
       FBSTRING* vr$7797 = fb_StrAllocTempDescZEx( (uint8*)"filterwidth", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7797, 0 );
      }
      goto label$6216;
      label$6412:;
      {
       FBSTRING* vr$7798 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7798, 0 );
      }
      goto label$6216;
      label$6413:;
      {
       FBSTRING* vr$7799 = fb_StrAllocTempDescZEx( (uint8*)"final_clock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7799, 0 );
      }
      goto label$6216;
      label$6414:;
      {
       FBSTRING* vr$7800 = fb_StrAllocTempDescZEx( (uint8*)"final_frame", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7800, 0 );
      }
      goto label$6216;
      label$6415:;
      {
       FBSTRING* vr$7801 = fb_StrAllocTempDescZEx( (uint8*)"finalization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7801, 0 );
      }
      goto label$6216;
      label$6416:;
      {
       FBSTRING* vr$7802 = fb_StrAllocTempDescZEx( (uint8*)"finally", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7802, 0 );
      }
      goto label$6216;
      label$6417:;
      {
       FBSTRING* vr$7803 = fb_StrAllocTempDescZEx( (uint8*)"finish", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7803, 0 );
      }
      goto label$6216;
      label$6418:;
      {
       FBSTRING* vr$7804 = fb_StrAllocTempDescZEx( (uint8*)"first", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7804, 0 );
      }
      goto label$6216;
      label$6419:;
      {
       FBSTRING* vr$7805 = fb_StrAllocTempDescZEx( (uint8*)"fisheye", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7805, 0 );
      }
      goto label$6216;
      label$6420:;
      {
       FBSTRING* vr$7806 = fb_StrAllocTempDescZEx( (uint8*)"fix", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7806, 0 );
      }
      goto label$6216;
      label$6421:;
      {
       FBSTRING* vr$7807 = fb_StrAllocTempDescZEx( (uint8*)"fixed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7807, 0 );
      }
      goto label$6216;
      label$6422:;
      {
       FBSTRING* vr$7808 = fb_StrAllocTempDescZEx( (uint8*)"flat", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7808, 0 );
      }
      goto label$6216;
      label$6423:;
      {
       FBSTRING* vr$7809 = fb_StrAllocTempDescZEx( (uint8*)"flatness", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7809, 0 );
      }
      goto label$6216;
      label$6424:;
      {
       FBSTRING* vr$7810 = fb_StrAllocTempDescZEx( (uint8*)"flip", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7810, 0 );
      }
      goto label$6216;
      label$6425:;
      {
       FBSTRING* vr$7811 = fb_StrAllocTempDescZEx( (uint8*)"float", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7811, 0 );
      }
      goto label$6216;
      label$6426:;
      {
       FBSTRING* vr$7812 = fb_StrAllocTempDescZEx( (uint8*)"floor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7812, 0 );
      }
      goto label$6216;
      label$6427:;
      {
       FBSTRING* vr$7813 = fb_StrAllocTempDescZEx( (uint8*)"fmod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7813, 0 );
      }
      goto label$6216;
      label$6428:;
      {
       FBSTRING* vr$7814 = fb_StrAllocTempDescZEx( (uint8*)"fn", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7814, 0 );
      }
      goto label$6216;
      label$6429:;
      {
       FBSTRING* vr$7815 = fb_StrAllocTempDescZEx( (uint8*)"focal_point", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7815, 0 );
      }
      goto label$6216;
      label$6430:;
      {
       FBSTRING* vr$7816 = fb_StrAllocTempDescZEx( (uint8*)"fog", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7816, 0 );
      }
      goto label$6216;
      label$6431:;
      {
       FBSTRING* vr$7817 = fb_StrAllocTempDescZEx( (uint8*)"fog_alt", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7817, 0 );
      }
      goto label$6216;
      label$6432:;
      {
       FBSTRING* vr$7818 = fb_StrAllocTempDescZEx( (uint8*)"fog_offset", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7818, 0 );
      }
      goto label$6216;
      label$6433:;
      {
       FBSTRING* vr$7819 = fb_StrAllocTempDescZEx( (uint8*)"fog_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7819, 0 );
      }
      goto label$6216;
      label$6434:;
      {
       FBSTRING* vr$7820 = fb_StrAllocTempDescZEx( (uint8*)"footing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7820, 0 );
      }
      goto label$6216;
      label$6435:;
      {
       FBSTRING* vr$7821 = fb_StrAllocTempDescZEx( (uint8*)"fopen", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7821, 0 );
      }
      goto label$6216;
      label$6436:;
      {
       FBSTRING* vr$7822 = fb_StrAllocTempDescZEx( (uint8*)"for", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7822, 0 );
      }
      goto label$6216;
      label$6437:;
      {
       FBSTRING* vr$7823 = fb_StrAllocTempDescZEx( (uint8*)"form", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7823, 0 );
      }
      goto label$6216;
      label$6438:;
      {
       FBSTRING* vr$7824 = fb_StrAllocTempDescZEx( (uint8*)"format", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7824, 0 );
      }
      goto label$6216;
      label$6439:;
      {
       FBSTRING* vr$7825 = fb_StrAllocTempDescZEx( (uint8*)"forward", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7825, 0 );
      }
      goto label$6216;
      label$6440:;
      {
       FBSTRING* vr$7826 = fb_StrAllocTempDescZEx( (uint8*)"fprintf", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7826, 0 );
      }
      goto label$6216;
      label$6441:;
      {
       FBSTRING* vr$7827 = fb_StrAllocTempDescZEx( (uint8*)"frag_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7827, 0 );
      }
      goto label$6216;
      label$6442:;
      {
       FBSTRING* vr$7828 = fb_StrAllocTempDescZEx( (uint8*)"fragcolor", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7828, 0 );
      }
      goto label$6216;
      label$6443:;
      {
       FBSTRING* vr$7829 = fb_StrAllocTempDescZEx( (uint8*)"frag_coord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7829, 0 );
      }
      goto label$6216;
      label$6444:;
      {
       FBSTRING* vr$7830 = fb_StrAllocTempDescZEx( (uint8*)"fragcoord", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7830, 0 );
      }
      goto label$6216;
      label$6445:;
      {
       FBSTRING* vr$7831 = fb_StrAllocTempDescZEx( (uint8*)"frame_number", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7831, 0 );
      }
      goto label$6216;
      label$6446:;
      {
       FBSTRING* vr$7832 = fb_StrAllocTempDescZEx( (uint8*)"fre", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7832, 0 );
      }
      goto label$6216;
      label$6447:;
      {
       FBSTRING* vr$7833 = fb_StrAllocTempDescZEx( (uint8*)"frequency", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7833, 0 );
      }
      goto label$6216;
      label$6448:;
      {
       FBSTRING* vr$7834 = fb_StrAllocTempDescZEx( (uint8*)"fresnel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7834, 0 );
      }
      goto label$6216;
      label$6449:;
      {
       FBSTRING* vr$7835 = fb_StrAllocTempDescZEx( (uint8*)"from", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7835, 0 );
      }
      goto label$6216;
      label$6450:;
      {
       FBSTRING* vr$7836 = fb_StrAllocTempDescZEx( (uint8*)"full", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7836, 0 );
      }
      goto label$6216;
      label$6451:;
      {
       FBSTRING* vr$7837 = fb_StrAllocTempDescZEx( (uint8*)"function", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7837, 0 );
      }
      goto label$6216;
      label$6452:;
      {
       FBSTRING* vr$7838 = fb_StrAllocTempDescZEx( (uint8*)"fvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7838, 0 );
      }
      goto label$6216;
      label$6453:;
      {
       FBSTRING* vr$7839 = fb_StrAllocTempDescZEx( (uint8*)"fvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7839, 0 );
      }
      goto label$6216;
      label$6454:;
      {
       FBSTRING* vr$7840 = fb_StrAllocTempDescZEx( (uint8*)"fvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7840, 0 );
      }
      goto label$6216;
      label$6455:;
      {
       FBSTRING* vr$7841 = fb_StrAllocTempDescZEx( (uint8*)"g", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7841, 0 );
      }
      goto label$6216;
      label$6456:;
      {
       FBSTRING* vr$7842 = fb_StrAllocTempDescZEx( (uint8*)"gather", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7842, 0 );
      }
      goto label$6216;
      label$6457:;
      {
       FBSTRING* vr$7843 = fb_StrAllocTempDescZEx( (uint8*)"generate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7843, 0 );
      }
      goto label$6216;
      label$6458:;
      {
       FBSTRING* vr$7844 = fb_StrAllocTempDescZEx( (uint8*)"generic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7844, 0 );
      }
      goto label$6216;
      label$6459:;
      {
       FBSTRING* vr$7845 = fb_StrAllocTempDescZEx( (uint8*)"get", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7845, 0 );
      }
      goto label$6216;
      label$6460:;
      {
       FBSTRING* vr$7846 = fb_StrAllocTempDescZEx( (uint8*)"getattribute", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7846, 0 );
      }
      goto label$6216;
      label$6461:;
      {
       FBSTRING* vr$7847 = fb_StrAllocTempDescZEx( (uint8*)"getchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7847, 0 );
      }
      goto label$6216;
      label$6462:;
      {
       FBSTRING* vr$7848 = fb_StrAllocTempDescZEx( (uint8*)"getmatrix", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7848, 0 );
      }
      goto label$6216;
      label$6463:;
      {
       FBSTRING* vr$7849 = fb_StrAllocTempDescZEx( (uint8*)"getmessage", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7849, 0 );
      }
      goto label$6216;
      label$6464:;
      {
       FBSTRING* vr$7850 = fb_StrAllocTempDescZEx( (uint8*)"gettextureinfo", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7850, 0 );
      }
      goto label$6216;
      label$6465:;
      {
       FBSTRING* vr$7851 = fb_StrAllocTempDescZEx( (uint8*)"gif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7851, 0 );
      }
      goto label$6216;
      label$6466:;
      {
       FBSTRING* vr$7852 = fb_StrAllocTempDescZEx( (uint8*)"giving", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7852, 0 );
      }
      goto label$6216;
      label$6467:;
      {
       FBSTRING* vr$7853 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcolor", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7853, 0 );
      }
      goto label$6216;
      label$6468:;
      {
       FBSTRING* vr$7854 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcoord.xy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7854, 0 );
      }
      goto label$6216;
      label$6469:;
      {
       FBSTRING* vr$7855 = fb_StrAllocTempDescZEx( (uint8*)"global", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7855, 0 );
      }
      goto label$6216;
      label$6470:;
      {
       FBSTRING* vr$7856 = fb_StrAllocTempDescZEx( (uint8*)"global_lights", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7856, 0 );
      }
      goto label$6216;
      label$6471:;
      {
       FBSTRING* vr$7857 = fb_StrAllocTempDescZEx( (uint8*)"global_settings", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7857, 0 );
      }
      goto label$6216;
      label$6472:;
      {
       FBSTRING* vr$7858 = fb_StrAllocTempDescZEx( (uint8*)"go", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7858, 0 );
      }
      goto label$6216;
      label$6473:;
      {
       FBSTRING* vr$7859 = fb_StrAllocTempDescZEx( (uint8*)"goback", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7859, 0 );
      }
      goto label$6216;
      label$6217:;
      static const void* tmp$4517[256ll] = {
       &&label$6218,
       &&label$6219,
       &&label$6220,
       &&label$6221,
       &&label$6222,
       &&label$6223,
       &&label$6224,
       &&label$6225,
       &&label$6226,
       &&label$6227,
       &&label$6228,
       &&label$6229,
       &&label$6230,
       &&label$6231,
       &&label$6232,
       &&label$6233,
       &&label$6234,
       &&label$6235,
       &&label$6236,
       &&label$6237,
       &&label$6238,
       &&label$6239,
       &&label$6240,
       &&label$6241,
       &&label$6242,
       &&label$6243,
       &&label$6244,
       &&label$6245,
       &&label$6246,
       &&label$6247,
       &&label$6248,
       &&label$6249,
       &&label$6250,
       &&label$6251,
       &&label$6252,
       &&label$6253,
       &&label$6254,
       &&label$6255,
       &&label$6256,
       &&label$6257,
       &&label$6258,
       &&label$6259,
       &&label$6260,
       &&label$6261,
       &&label$6262,
       &&label$6263,
       &&label$6264,
       &&label$6265,
       &&label$6266,
       &&label$6267,
       &&label$6268,
       &&label$6269,
       &&label$6270,
       &&label$6271,
       &&label$6272,
       &&label$6273,
       &&label$6274,
       &&label$6275,
       &&label$6276,
       &&label$6277,
       &&label$6278,
       &&label$6279,
       &&label$6280,
       &&label$6281,
       &&label$6282,
       &&label$6283,
       &&label$6284,
       &&label$6285,
       &&label$6286,
       &&label$6287,
       &&label$6288,
       &&label$6289,
       &&label$6290,
       &&label$6291,
       &&label$6292,
       &&label$6293,
       &&label$6294,
       &&label$6295,
       &&label$6296,
       &&label$6297,
       &&label$6298,
       &&label$6299,
       &&label$6300,
       &&label$6301,
       &&label$6302,
       &&label$6303,
       &&label$6304,
       &&label$6305,
       &&label$6306,
       &&label$6307,
       &&label$6308,
       &&label$6309,
       &&label$6310,
       &&label$6311,
       &&label$6312,
       &&label$6313,
       &&label$6314,
       &&label$6315,
       &&label$6316,
       &&label$6317,
       &&label$6318,
       &&label$6319,
       &&label$6320,
       &&label$6321,
       &&label$6322,
       &&label$6323,
       &&label$6324,
       &&label$6325,
       &&label$6326,
       &&label$6327,
       &&label$6328,
       &&label$6329,
       &&label$6330,
       &&label$6331,
       &&label$6332,
       &&label$6333,
       &&label$6334,
       &&label$6335,
       &&label$6336,
       &&label$6337,
       &&label$6338,
       &&label$6339,
       &&label$6340,
       &&label$6341,
       &&label$6342,
       &&label$6343,
       &&label$6344,
       &&label$6345,
       &&label$6346,
       &&label$6347,
       &&label$6348,
       &&label$6349,
       &&label$6350,
       &&label$6351,
       &&label$6352,
       &&label$6353,
       &&label$6354,
       &&label$6355,
       &&label$6356,
       &&label$6357,
       &&label$6358,
       &&label$6359,
       &&label$6360,
       &&label$6361,
       &&label$6362,
       &&label$6363,
       &&label$6364,
       &&label$6365,
       &&label$6366,
       &&label$6367,
       &&label$6368,
       &&label$6369,
       &&label$6370,
       &&label$6371,
       &&label$6372,
       &&label$6373,
       &&label$6374,
       &&label$6375,
       &&label$6376,
       &&label$6377,
       &&label$6378,
       &&label$6379,
       &&label$6380,
       &&label$6381,
       &&label$6382,
       &&label$6383,
       &&label$6384,
       &&label$6385,
       &&label$6386,
       &&label$6387,
       &&label$6388,
       &&label$6389,
       &&label$6390,
       &&label$6391,
       &&label$6392,
       &&label$6393,
       &&label$6394,
       &&label$6395,
       &&label$6396,
       &&label$6397,
       &&label$6398,
       &&label$6399,
       &&label$6400,
       &&label$6401,
       &&label$6402,
       &&label$6403,
       &&label$6404,
       &&label$6405,
       &&label$6406,
       &&label$6407,
       &&label$6408,
       &&label$6409,
       &&label$6410,
       &&label$6411,
       &&label$6412,
       &&label$6413,
       &&label$6414,
       &&label$6415,
       &&label$6416,
       &&label$6417,
       &&label$6418,
       &&label$6419,
       &&label$6420,
       &&label$6421,
       &&label$6422,
       &&label$6423,
       &&label$6424,
       &&label$6425,
       &&label$6426,
       &&label$6427,
       &&label$6428,
       &&label$6429,
       &&label$6430,
       &&label$6431,
       &&label$6432,
       &&label$6433,
       &&label$6434,
       &&label$6435,
       &&label$6436,
       &&label$6437,
       &&label$6438,
       &&label$6439,
       &&label$6440,
       &&label$6441,
       &&label$6442,
       &&label$6443,
       &&label$6444,
       &&label$6445,
       &&label$6446,
       &&label$6447,
       &&label$6448,
       &&label$6449,
       &&label$6450,
       &&label$6451,
       &&label$6452,
       &&label$6453,
       &&label$6454,
       &&label$6455,
       &&label$6456,
       &&label$6457,
       &&label$6458,
       &&label$6459,
       &&label$6460,
       &&label$6461,
       &&label$6462,
       &&label$6463,
       &&label$6464,
       &&label$6465,
       &&label$6466,
       &&label$6467,
       &&label$6468,
       &&label$6469,
       &&label$6470,
       &&label$6471,
       &&label$6472,
       &&label$6473,
      };
      if( TMP$2634$6 > 255ull ) goto label$6216;
      goto *tmp$4517[TMP$2634$6 - 0ull];
      label$6216:;
     }
    }
    goto label$5883;
    label$6474:;
    {
     {
      uint64 TMP$2887$6;
      TMP$2887$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$6476;
      label$6477:;
      {
       FBSTRING* vr$7861 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7861, 0 );
      }
      goto label$6475;
      label$6478:;
      {
       FBSTRING* vr$7862 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7862, 1 );
      }
      goto label$6475;
      label$6479:;
      {
       FBSTRING* vr$7865 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7865, 0 );
      }
      goto label$6475;
      label$6480:;
      {
       FBSTRING* vr$7868 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7868, 1 );
      }
      goto label$6475;
      label$6481:;
      {
       FBSTRING* vr$7869 = fb_StrAllocTempDescZEx( (uint8*)"\x0D\x0A", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7869, 1 );
      }
      goto label$6475;
      label$6482:;
      {
       FBSTRING* vr$7871 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7871, 0 );
      }
      goto label$6475;
      label$6483:;
      {
       FBSTRING* vr$7873 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7873, 1 );
      }
      goto label$6475;
      label$6484:;
      {
       FBSTRING* vr$7875 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7875, 0 );
      }
      goto label$6475;
      label$6485:;
      {
       FBSTRING* vr$7877 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7877, 1 );
      }
      goto label$6475;
      label$6486:;
      {
       FBSTRING* vr$7879 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7879, 0 );
      }
      goto label$6475;
      label$6487:;
      {
       FBSTRING* vr$7881 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7881, 1 );
      }
      goto label$6475;
      label$6476:;
      static const void* tmp$4518[11ll] = {
       &&label$6477,
       &&label$6478,
       &&label$6479,
       &&label$6480,
       &&label$6481,
       &&label$6482,
       &&label$6483,
       &&label$6484,
       &&label$6485,
       &&label$6486,
       &&label$6487,
      };
      if( TMP$2887$6 > 10ull ) goto label$6475;
      goto *tmp$4518[TMP$2887$6 - 0ull];
      label$6475:;
     }
    }
    goto label$5883;
    label$6488:;
    {
     FBSTRING* vr$7883 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7883, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6489:;
    {
     FBSTRING* vr$7885 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7885, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6490:;
    {
     FBSTRING* vr$7886 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7886, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6491:;
    {
     FBSTRING* vr$7887 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7887, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6492:;
    {
     FBSTRING* vr$7889 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7889, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6493:;
    {
     FBSTRING* vr$7891 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7891, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5883;
    label$6494:;
    {
     {
      uint64 TMP$2891$6;
      TMP$2891$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$6496;
      label$6497:;
      {
       FBSTRING TMP$2895$7;
       FBSTRING TMP$2896$7;
       FBSTRING* vr$7893 = fb_StrAllocTempDescZEx( (uint8*)"CHARS.INC", 9ll );
       FBSTRING* vr$7894 = fb_StrLcase2( (FBSTRING*)vr$7893, 0 );
       __builtin_memset( &TMP$2895$7, 0, 24ll );
       FBSTRING* vr$7897 = fb_StrConcat( &TMP$2895$7, (void*)"#include \x0D", 11ll, (void*)vr$7894, -1ll );
       __builtin_memset( &TMP$2896$7, 0, 24ll );
       FBSTRING* vr$7900 = fb_StrConcat( &TMP$2896$7, (void*)vr$7897, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7900, 1 );
      }
      goto label$6495;
      label$6498:;
      {
       FBSTRING TMP$2898$7;
       FBSTRING TMP$2899$7;
       FBSTRING* vr$7901 = fb_StrAllocTempDescZEx( (uint8*)"COLORS.INC", 10ll );
       FBSTRING* vr$7902 = fb_StrLcase2( (FBSTRING*)vr$7901, 0 );
       __builtin_memset( &TMP$2898$7, 0, 24ll );
       FBSTRING* vr$7905 = fb_StrConcat( &TMP$2898$7, (void*)"#include \x0D", 11ll, (void*)vr$7902, -1ll );
       __builtin_memset( &TMP$2899$7, 0, 24ll );
       FBSTRING* vr$7908 = fb_StrConcat( &TMP$2899$7, (void*)vr$7905, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7908, 1 );
      }
      goto label$6495;
      label$6499:;
      {
       FBSTRING TMP$2901$7;
       FBSTRING TMP$2902$7;
       FBSTRING* vr$7909 = fb_StrAllocTempDescZEx( (uint8*)"CONSTS.INC", 10ll );
       FBSTRING* vr$7910 = fb_StrLcase2( (FBSTRING*)vr$7909, 0 );
       __builtin_memset( &TMP$2901$7, 0, 24ll );
       FBSTRING* vr$7913 = fb_StrConcat( &TMP$2901$7, (void*)"#include \x0D", 11ll, (void*)vr$7910, -1ll );
       __builtin_memset( &TMP$2902$7, 0, 24ll );
       FBSTRING* vr$7916 = fb_StrConcat( &TMP$2902$7, (void*)vr$7913, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7916, 1 );
      }
      goto label$6495;
      label$6500:;
      {
       FBSTRING TMP$2904$7;
       FBSTRING TMP$2905$7;
       FBSTRING* vr$7917 = fb_StrAllocTempDescZEx( (uint8*)"DEBUG.INC", 9ll );
       FBSTRING* vr$7918 = fb_StrLcase2( (FBSTRING*)vr$7917, 0 );
       __builtin_memset( &TMP$2904$7, 0, 24ll );
       FBSTRING* vr$7921 = fb_StrConcat( &TMP$2904$7, (void*)"#include \x0D", 11ll, (void*)vr$7918, -1ll );
       __builtin_memset( &TMP$2905$7, 0, 24ll );
       FBSTRING* vr$7924 = fb_StrConcat( &TMP$2905$7, (void*)vr$7921, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7924, 1 );
      }
      goto label$6495;
      label$6501:;
      {
       FBSTRING TMP$2907$7;
       FBSTRING TMP$2908$7;
       FBSTRING* vr$7925 = fb_StrAllocTempDescZEx( (uint8*)"FINISH.INC", 10ll );
       FBSTRING* vr$7926 = fb_StrLcase2( (FBSTRING*)vr$7925, 0 );
       __builtin_memset( &TMP$2907$7, 0, 24ll );
       FBSTRING* vr$7929 = fb_StrConcat( &TMP$2907$7, (void*)"#include \x0D", 11ll, (void*)vr$7926, -1ll );
       __builtin_memset( &TMP$2908$7, 0, 24ll );
       FBSTRING* vr$7932 = fb_StrConcat( &TMP$2908$7, (void*)vr$7929, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7932, 1 );
      }
      goto label$6495;
      label$6502:;
      {
       FBSTRING TMP$2910$7;
       FBSTRING TMP$2911$7;
       FBSTRING* vr$7933 = fb_StrAllocTempDescZEx( (uint8*)"GLASS.INC", 9ll );
       FBSTRING* vr$7934 = fb_StrLcase2( (FBSTRING*)vr$7933, 0 );
       __builtin_memset( &TMP$2910$7, 0, 24ll );
       FBSTRING* vr$7937 = fb_StrConcat( &TMP$2910$7, (void*)"#include \x0D", 11ll, (void*)vr$7934, -1ll );
       __builtin_memset( &TMP$2911$7, 0, 24ll );
       FBSTRING* vr$7940 = fb_StrConcat( &TMP$2911$7, (void*)vr$7937, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7940, 1 );
      }
      goto label$6495;
      label$6503:;
      {
       FBSTRING TMP$2913$7;
       FBSTRING TMP$2914$7;
       FBSTRING* vr$7941 = fb_StrAllocTempDescZEx( (uint8*)"GOLDS.INC", 9ll );
       FBSTRING* vr$7942 = fb_StrLcase2( (FBSTRING*)vr$7941, 0 );
       __builtin_memset( &TMP$2913$7, 0, 24ll );
       FBSTRING* vr$7945 = fb_StrConcat( &TMP$2913$7, (void*)"#include \x0D", 11ll, (void*)vr$7942, -1ll );
       __builtin_memset( &TMP$2914$7, 0, 24ll );
       FBSTRING* vr$7948 = fb_StrConcat( &TMP$2914$7, (void*)vr$7945, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7948, 1 );
      }
      goto label$6495;
      label$6504:;
      {
       FBSTRING TMP$2916$7;
       FBSTRING TMP$2917$7;
       FBSTRING* vr$7949 = fb_StrAllocTempDescZEx( (uint8*)"METALS.INC", 10ll );
       FBSTRING* vr$7950 = fb_StrLcase2( (FBSTRING*)vr$7949, 0 );
       __builtin_memset( &TMP$2916$7, 0, 24ll );
       FBSTRING* vr$7953 = fb_StrConcat( &TMP$2916$7, (void*)"#include \x0D", 11ll, (void*)vr$7950, -1ll );
       __builtin_memset( &TMP$2917$7, 0, 24ll );
       FBSTRING* vr$7956 = fb_StrConcat( &TMP$2917$7, (void*)vr$7953, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7956, 1 );
      }
      goto label$6495;
      label$6505:;
      {
       FBSTRING TMP$2919$7;
       FBSTRING TMP$2920$7;
       FBSTRING* vr$7957 = fb_StrAllocTempDescZEx( (uint8*)"RAD_DEF.INC", 11ll );
       FBSTRING* vr$7958 = fb_StrLcase2( (FBSTRING*)vr$7957, 0 );
       __builtin_memset( &TMP$2919$7, 0, 24ll );
       FBSTRING* vr$7961 = fb_StrConcat( &TMP$2919$7, (void*)"#include \x0D", 11ll, (void*)vr$7958, -1ll );
       __builtin_memset( &TMP$2920$7, 0, 24ll );
       FBSTRING* vr$7964 = fb_StrConcat( &TMP$2920$7, (void*)vr$7961, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7964, 1 );
      }
      goto label$6495;
      label$6506:;
      {
       FBSTRING TMP$2922$7;
       FBSTRING TMP$2923$7;
       FBSTRING* vr$7965 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES2.INC", 11ll );
       FBSTRING* vr$7966 = fb_StrLcase2( (FBSTRING*)vr$7965, 0 );
       __builtin_memset( &TMP$2922$7, 0, 24ll );
       FBSTRING* vr$7969 = fb_StrConcat( &TMP$2922$7, (void*)"#include \x0D", 11ll, (void*)vr$7966, -1ll );
       __builtin_memset( &TMP$2923$7, 0, 24ll );
       FBSTRING* vr$7972 = fb_StrConcat( &TMP$2923$7, (void*)vr$7969, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7972, 1 );
      }
      goto label$6495;
      label$6507:;
      {
       FBSTRING TMP$2925$7;
       FBSTRING TMP$2926$7;
       FBSTRING* vr$7973 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES.INC", 10ll );
       FBSTRING* vr$7974 = fb_StrLcase2( (FBSTRING*)vr$7973, 0 );
       __builtin_memset( &TMP$2925$7, 0, 24ll );
       FBSTRING* vr$7977 = fb_StrConcat( &TMP$2925$7, (void*)"#include \x0D", 11ll, (void*)vr$7974, -1ll );
       __builtin_memset( &TMP$2926$7, 0, 24ll );
       FBSTRING* vr$7980 = fb_StrConcat( &TMP$2926$7, (void*)vr$7977, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7980, 1 );
      }
      goto label$6495;
      label$6508:;
      {
       FBSTRING TMP$2928$7;
       FBSTRING TMP$2929$7;
       FBSTRING* vr$7981 = fb_StrAllocTempDescZEx( (uint8*)"SHAPESQ.INC", 11ll );
       FBSTRING* vr$7982 = fb_StrLcase2( (FBSTRING*)vr$7981, 0 );
       __builtin_memset( &TMP$2928$7, 0, 24ll );
       FBSTRING* vr$7985 = fb_StrConcat( &TMP$2928$7, (void*)"#include \x0D", 11ll, (void*)vr$7982, -1ll );
       __builtin_memset( &TMP$2929$7, 0, 24ll );
       FBSTRING* vr$7988 = fb_StrConcat( &TMP$2929$7, (void*)vr$7985, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7988, 1 );
      }
      goto label$6495;
      label$6509:;
      {
       FBSTRING TMP$2931$7;
       FBSTRING TMP$2932$7;
       FBSTRING* vr$7989 = fb_StrAllocTempDescZEx( (uint8*)"SKIES.INC", 9ll );
       FBSTRING* vr$7990 = fb_StrLcase2( (FBSTRING*)vr$7989, 0 );
       __builtin_memset( &TMP$2931$7, 0, 24ll );
       FBSTRING* vr$7993 = fb_StrConcat( &TMP$2931$7, (void*)"#include \x0D", 11ll, (void*)vr$7990, -1ll );
       __builtin_memset( &TMP$2932$7, 0, 24ll );
       FBSTRING* vr$7996 = fb_StrConcat( &TMP$2932$7, (void*)vr$7993, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7996, 1 );
      }
      goto label$6495;
      label$6510:;
      {
       FBSTRING TMP$2934$7;
       FBSTRING TMP$2935$7;
       FBSTRING* vr$7997 = fb_StrAllocTempDescZEx( (uint8*)"STAGE1.INC", 10ll );
       FBSTRING* vr$7998 = fb_StrLcase2( (FBSTRING*)vr$7997, 0 );
       __builtin_memset( &TMP$2934$7, 0, 24ll );
       FBSTRING* vr$8001 = fb_StrConcat( &TMP$2934$7, (void*)"#include \x0D", 11ll, (void*)vr$7998, -1ll );
       __builtin_memset( &TMP$2935$7, 0, 24ll );
       FBSTRING* vr$8004 = fb_StrConcat( &TMP$2935$7, (void*)vr$8001, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8004, 1 );
      }
      goto label$6495;
      label$6511:;
      {
       FBSTRING TMP$2937$7;
       FBSTRING TMP$2938$7;
       FBSTRING* vr$8005 = fb_StrAllocTempDescZEx( (uint8*)"STARS.INC", 9ll );
       FBSTRING* vr$8006 = fb_StrLcase2( (FBSTRING*)vr$8005, 0 );
       __builtin_memset( &TMP$2937$7, 0, 24ll );
       FBSTRING* vr$8009 = fb_StrConcat( &TMP$2937$7, (void*)"#include \x0D", 11ll, (void*)vr$8006, -1ll );
       __builtin_memset( &TMP$2938$7, 0, 24ll );
       FBSTRING* vr$8012 = fb_StrConcat( &TMP$2938$7, (void*)vr$8009, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8012, 1 );
      }
      goto label$6495;
      label$6512:;
      {
       FBSTRING TMP$2940$7;
       FBSTRING TMP$2941$7;
       FBSTRING* vr$8013 = fb_StrAllocTempDescZEx( (uint8*)"STDCAM.INC", 10ll );
       FBSTRING* vr$8014 = fb_StrLcase2( (FBSTRING*)vr$8013, 0 );
       __builtin_memset( &TMP$2940$7, 0, 24ll );
       FBSTRING* vr$8017 = fb_StrConcat( &TMP$2940$7, (void*)"#include \x0D", 11ll, (void*)vr$8014, -1ll );
       __builtin_memset( &TMP$2941$7, 0, 24ll );
       FBSTRING* vr$8020 = fb_StrConcat( &TMP$2941$7, (void*)vr$8017, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8020, 1 );
      }
      goto label$6495;
      label$6513:;
      {
       FBSTRING TMP$2943$7;
       FBSTRING TMP$2944$7;
       FBSTRING* vr$8021 = fb_StrAllocTempDescZEx( (uint8*)"STONEOLD.INC", 12ll );
       FBSTRING* vr$8022 = fb_StrLcase2( (FBSTRING*)vr$8021, 0 );
       __builtin_memset( &TMP$2943$7, 0, 24ll );
       FBSTRING* vr$8025 = fb_StrConcat( &TMP$2943$7, (void*)"#include \x0D", 11ll, (void*)vr$8022, -1ll );
       __builtin_memset( &TMP$2944$7, 0, 24ll );
       FBSTRING* vr$8028 = fb_StrConcat( &TMP$2944$7, (void*)vr$8025, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8028, 1 );
      }
      goto label$6495;
      label$6514:;
      {
       FBSTRING TMP$2946$7;
       FBSTRING TMP$2947$7;
       FBSTRING* vr$8029 = fb_StrAllocTempDescZEx( (uint8*)"STONES1.INC", 11ll );
       FBSTRING* vr$8030 = fb_StrLcase2( (FBSTRING*)vr$8029, 0 );
       __builtin_memset( &TMP$2946$7, 0, 24ll );
       FBSTRING* vr$8033 = fb_StrConcat( &TMP$2946$7, (void*)"#include \x0D", 11ll, (void*)vr$8030, -1ll );
       __builtin_memset( &TMP$2947$7, 0, 24ll );
       FBSTRING* vr$8036 = fb_StrConcat( &TMP$2947$7, (void*)vr$8033, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8036, 1 );
      }
      goto label$6495;
      label$6515:;
      {
       FBSTRING TMP$2949$7;
       FBSTRING TMP$2950$7;
       FBSTRING* vr$8037 = fb_StrAllocTempDescZEx( (uint8*)"STONES2.INC", 11ll );
       FBSTRING* vr$8038 = fb_StrLcase2( (FBSTRING*)vr$8037, 0 );
       __builtin_memset( &TMP$2949$7, 0, 24ll );
       FBSTRING* vr$8041 = fb_StrConcat( &TMP$2949$7, (void*)"#include \x0D", 11ll, (void*)vr$8038, -1ll );
       __builtin_memset( &TMP$2950$7, 0, 24ll );
       FBSTRING* vr$8044 = fb_StrConcat( &TMP$2950$7, (void*)vr$8041, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8044, 1 );
      }
      goto label$6495;
      label$6516:;
      {
       FBSTRING TMP$2952$7;
       FBSTRING TMP$2953$7;
       FBSTRING* vr$8045 = fb_StrAllocTempDescZEx( (uint8*)"STONES.INC", 10ll );
       FBSTRING* vr$8046 = fb_StrLcase2( (FBSTRING*)vr$8045, 0 );
       __builtin_memset( &TMP$2952$7, 0, 24ll );
       FBSTRING* vr$8049 = fb_StrConcat( &TMP$2952$7, (void*)"#include \x0D", 11ll, (void*)vr$8046, -1ll );
       __builtin_memset( &TMP$2953$7, 0, 24ll );
       FBSTRING* vr$8052 = fb_StrConcat( &TMP$2953$7, (void*)vr$8049, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8052, 1 );
      }
      goto label$6495;
      label$6517:;
      {
       FBSTRING TMP$2955$7;
       FBSTRING TMP$2956$7;
       FBSTRING* vr$8053 = fb_StrAllocTempDescZEx( (uint8*)"TEXTURES.INC", 12ll );
       FBSTRING* vr$8054 = fb_StrLcase2( (FBSTRING*)vr$8053, 0 );
       __builtin_memset( &TMP$2955$7, 0, 24ll );
       FBSTRING* vr$8057 = fb_StrConcat( &TMP$2955$7, (void*)"#include \x0D", 11ll, (void*)vr$8054, -1ll );
       __builtin_memset( &TMP$2956$7, 0, 24ll );
       FBSTRING* vr$8060 = fb_StrConcat( &TMP$2956$7, (void*)vr$8057, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8060, 1 );
      }
      goto label$6495;
      label$6518:;
      {
       FBSTRING TMP$2958$7;
       FBSTRING TMP$2959$7;
       FBSTRING* vr$8061 = fb_StrAllocTempDescZEx( (uint8*)"WOODMAPS.INC", 12ll );
       FBSTRING* vr$8062 = fb_StrLcase2( (FBSTRING*)vr$8061, 0 );
       __builtin_memset( &TMP$2958$7, 0, 24ll );
       FBSTRING* vr$8065 = fb_StrConcat( &TMP$2958$7, (void*)"#include \x0D", 11ll, (void*)vr$8062, -1ll );
       __builtin_memset( &TMP$2959$7, 0, 24ll );
       FBSTRING* vr$8068 = fb_StrConcat( &TMP$2959$7, (void*)vr$8065, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8068, 1 );
      }
      goto label$6495;
      label$6519:;
      {
       FBSTRING TMP$2961$7;
       FBSTRING TMP$2962$7;
       FBSTRING* vr$8069 = fb_StrAllocTempDescZEx( (uint8*)"WOODS.INC", 9ll );
       FBSTRING* vr$8070 = fb_StrLcase2( (FBSTRING*)vr$8069, 0 );
       __builtin_memset( &TMP$2961$7, 0, 24ll );
       FBSTRING* vr$8073 = fb_StrConcat( &TMP$2961$7, (void*)"#include \x0D", 11ll, (void*)vr$8070, -1ll );
       __builtin_memset( &TMP$2962$7, 0, 24ll );
       FBSTRING* vr$8076 = fb_StrConcat( &TMP$2962$7, (void*)vr$8073, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8076, 1 );
      }
      goto label$6495;
      label$6496:;
      static const void* tmp$4519[23ll] = {
       &&label$6497,
       &&label$6498,
       &&label$6499,
       &&label$6500,
       &&label$6501,
       &&label$6502,
       &&label$6503,
       &&label$6504,
       &&label$6505,
       &&label$6506,
       &&label$6507,
       &&label$6508,
       &&label$6509,
       &&label$6510,
       &&label$6511,
       &&label$6512,
       &&label$6513,
       &&label$6514,
       &&label$6515,
       &&label$6516,
       &&label$6517,
       &&label$6518,
       &&label$6519,
      };
      if( TMP$2891$6 > 22ull ) goto label$6495;
      goto *tmp$4519[TMP$2891$6 - 0ull];
      label$6495:;
     }
    }
    goto label$5883;
    label$6520:;
    {
     {
      uint64 TMP$2963$6;
      TMP$2963$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$6522;
      label$6523:;
      {
       FBSTRING* vr$8078 = fb_StrAllocTempDescZEx( (uint8*)"gosub", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8078, 0 );
      }
      goto label$6521;
      label$6524:;
      {
       FBSTRING* vr$8079 = fb_StrAllocTempDescZEx( (uint8*)"goto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8079, 0 );
      }
      goto label$6521;
      label$6525:;
      {
       FBSTRING* vr$8080 = fb_StrAllocTempDescZEx( (uint8*)"gradient", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8080, 0 );
      }
      goto label$6521;
      label$6526:;
      {
       FBSTRING* vr$8081 = fb_StrAllocTempDescZEx( (uint8*)"granite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8081, 0 );
      }
      goto label$6521;
      label$6527:;
      {
       FBSTRING* vr$8082 = fb_StrAllocTempDescZEx( (uint8*)"gray", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8082, 0 );
      }
      goto label$6521;
      label$6528:;
      {
       FBSTRING* vr$8083 = fb_StrAllocTempDescZEx( (uint8*)"gray_threshold", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8083, 0 );
      }
      goto label$6521;
      label$6529:;
      {
       FBSTRING* vr$8084 = fb_StrAllocTempDescZEx( (uint8*)"greateeq", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8084, 0 );
      }
      goto label$6521;
      label$6530:;
      {
       FBSTRING* vr$8085 = fb_StrAllocTempDescZEx( (uint8*)"greater", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8085, 0 );
      }
      goto label$6521;
      label$6531:;
      {
       FBSTRING* vr$8086 = fb_StrAllocTempDescZEx( (uint8*)"green", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8086, 0 );
      }
      goto label$6521;
      label$6532:;
      {
       FBSTRING* vr$8087 = fb_StrAllocTempDescZEx( (uint8*)"group", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8087, 0 );
      }
      goto label$6521;
      label$6533:;
      {
       FBSTRING* vr$8088 = fb_StrAllocTempDescZEx( (uint8*)"group_by", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8088, 0 );
      }
      goto label$6521;
      label$6534:;
      {
       FBSTRING* vr$8089 = fb_StrAllocTempDescZEx( (uint8*)"h", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8089, 0 );
      }
      goto label$6521;
      label$6535:;
      {
       FBSTRING* vr$8090 = fb_StrAllocTempDescZEx( (uint8*)"half", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8090, 0 );
      }
      goto label$6521;
      label$6536:;
      {
       FBSTRING* vr$8091 = fb_StrAllocTempDescZEx( (uint8*)"hash", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8091, 0 );
      }
      goto label$6521;
      label$6537:;
      {
       FBSTRING* vr$8092 = fb_StrAllocTempDescZEx( (uint8*)"hashnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8092, 0 );
      }
      goto label$6521;
      label$6538:;
      {
       FBSTRING* vr$8093 = fb_StrAllocTempDescZEx( (uint8*)"having", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8093, 0 );
      }
      goto label$6521;
      label$6539:;
      {
       FBSTRING* vr$8094 = fb_StrAllocTempDescZEx( (uint8*)"header", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8094, 0 );
      }
      goto label$6521;
      label$6540:;
      {
       FBSTRING* vr$8095 = fb_StrAllocTempDescZEx( (uint8*)"heading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8095, 0 );
      }
      goto label$6521;
      label$6541:;
      {
       FBSTRING* vr$8096 = fb_StrAllocTempDescZEx( (uint8*)"height_field", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8096, 0 );
      }
      goto label$6521;
      label$6542:;
      {
       FBSTRING* vr$8097 = fb_StrAllocTempDescZEx( (uint8*)"henyey_greenstein", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8097, 0 );
      }
      goto label$6521;
      label$6543:;
      {
       FBSTRING* vr$8098 = fb_StrAllocTempDescZEx( (uint8*)"hex", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8098, 0 );
      }
      goto label$6521;
      label$6544:;
      {
       FBSTRING* vr$8099 = fb_StrAllocTempDescZEx( (uint8*)"hexagon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8099, 0 );
      }
      goto label$6521;
      label$6545:;
      {
       FBSTRING* vr$8100 = fb_StrAllocTempDescZEx( (uint8*)"hf_gray_16", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8100, 0 );
      }
      goto label$6521;
      label$6546:;
      {
       FBSTRING* vr$8101 = fb_StrAllocTempDescZEx( (uint8*)"hierarchy", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8101, 0 );
      }
      goto label$6521;
      label$6547:;
      {
       FBSTRING* vr$8102 = fb_StrAllocTempDescZEx( (uint8*)"highp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8102, 0 );
      }
      goto label$6521;
      label$6548:;
      {
       FBSTRING* vr$8103 = fb_StrAllocTempDescZEx( (uint8*)"high-value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8103, 0 );
      }
      goto label$6521;
      label$6549:;
      {
       FBSTRING* vr$8104 = fb_StrAllocTempDescZEx( (uint8*)"high-values", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8104, 0 );
      }
      goto label$6521;
      label$6550:;
      {
       FBSTRING* vr$8105 = fb_StrAllocTempDescZEx( (uint8*)"hintend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8105, 0 );
      }
      goto label$6521;
      label$6551:;
      {
       FBSTRING* vr$8106 = fb_StrAllocTempDescZEx( (uint8*)"hint_error", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8106, 0 );
      }
      goto label$6521;
      label$6552:;
      {
       FBSTRING* vr$8107 = fb_StrAllocTempDescZEx( (uint8*)"hintstart", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8107, 0 );
      }
      goto label$6521;
      label$6553:;
      {
       FBSTRING* vr$8108 = fb_StrAllocTempDescZEx( (uint8*)"holdout", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8108, 0 );
      }
      goto label$6521;
      label$6554:;
      {
       FBSTRING* vr$8109 = fb_StrAllocTempDescZEx( (uint8*)"hollow", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8109, 0 );
      }
      goto label$6521;
      label$6555:;
      {
       FBSTRING* vr$8110 = fb_StrAllocTempDescZEx( (uint8*)"hour", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8110, 0 );
      }
      goto label$6521;
      label$6556:;
      {
       FBSTRING* vr$8111 = fb_StrAllocTempDescZEx( (uint8*)"hvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8111, 0 );
      }
      goto label$6521;
      label$6557:;
      {
       FBSTRING* vr$8112 = fb_StrAllocTempDescZEx( (uint8*)"hvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8112, 0 );
      }
      goto label$6521;
      label$6558:;
      {
       FBSTRING* vr$8113 = fb_StrAllocTempDescZEx( (uint8*)"hvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8113, 0 );
      }
      goto label$6521;
      label$6559:;
      {
       FBSTRING* vr$8114 = fb_StrAllocTempDescZEx( (uint8*)"hypercomplex", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8114, 0 );
      }
      goto label$6521;
      label$6560:;
      {
       FBSTRING* vr$8115 = fb_StrAllocTempDescZEx( (uint8*)"hypot", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8115, 0 );
      }
      goto label$6521;
      label$6561:;
      {
       FBSTRING* vr$8116 = fb_StrAllocTempDescZEx( (uint8*)"i", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8116, 0 );
      }
      goto label$6521;
      label$6562:;
      {
       FBSTRING* vr$8117 = fb_StrAllocTempDescZEx( (uint8*)"iChannel0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8117, 0 );
      }
      goto label$6521;
      label$6563:;
      {
       FBSTRING* vr$8118 = fb_StrAllocTempDescZEx( (uint8*)"iChannel1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8118, 0 );
      }
      goto label$6521;
      label$6564:;
      {
       FBSTRING* vr$8119 = fb_StrAllocTempDescZEx( (uint8*)"iChannel2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8119, 0 );
      }
      goto label$6521;
      label$6565:;
      {
       FBSTRING* vr$8120 = fb_StrAllocTempDescZEx( (uint8*)"iChannel3", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8120, 0 );
      }
      goto label$6521;
      label$6566:;
      {
       FBSTRING* vr$8121 = fb_StrAllocTempDescZEx( (uint8*)"iChannelResolution", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8121, 0 );
      }
      goto label$6521;
      label$6567:;
      {
       FBSTRING* vr$8122 = fb_StrAllocTempDescZEx( (uint8*)"iChannelTime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8122, 0 );
      }
      goto label$6521;
      label$6568:;
      {
       FBSTRING* vr$8123 = fb_StrAllocTempDescZEx( (uint8*)"iCube", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8123, 0 );
      }
      goto label$6521;
      label$6569:;
      {
       FBSTRING* vr$8124 = fb_StrAllocTempDescZEx( (uint8*)"id", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8124, 0 );
      }
      goto label$6521;
      label$6570:;
      {
       FBSTRING* vr$8125 = fb_StrAllocTempDescZEx( (uint8*)"iDate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8125, 0 );
      }
      goto label$6521;
      label$6571:;
      {
       FBSTRING* vr$8126 = fb_StrAllocTempDescZEx( (uint8*)"identification", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8126, 0 );
      }
      goto label$6521;
      label$6572:;
      {
       FBSTRING* vr$8127 = fb_StrAllocTempDescZEx( (uint8*)"if", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8127, 0 );
      }
      goto label$6521;
      label$6573:;
      {
       FBSTRING* vr$8128 = fb_StrAllocTempDescZEx( (uint8*)"ifdef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8128, 0 );
      }
      goto label$6521;
      label$6574:;
      {
       FBSTRING* vr$8129 = fb_StrAllocTempDescZEx( (uint8*)"ifelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8129, 0 );
      }
      goto label$6521;
      label$6575:;
      {
       FBSTRING* vr$8130 = fb_StrAllocTempDescZEx( (uint8*)"iff", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8130, 0 );
      }
      goto label$6521;
      label$6576:;
      {
       FBSTRING* vr$8131 = fb_StrAllocTempDescZEx( (uint8*)"ifndef", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8131, 0 );
      }
      goto label$6521;
      label$6577:;
      {
       FBSTRING* vr$8132 = fb_StrAllocTempDescZEx( (uint8*)"iframe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8132, 0 );
      }
      goto label$6521;
      label$6578:;
      {
       FBSTRING* vr$8133 = fb_StrAllocTempDescZEx( (uint8*)"iframerate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8133, 0 );
      }
      goto label$6521;
      label$6579:;
      {
       FBSTRING* vr$8134 = fb_StrAllocTempDescZEx( (uint8*)"iGlobalTime", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8134, 0 );
      }
      goto label$6521;
      label$6580:;
      {
       FBSTRING* vr$8135 = fb_StrAllocTempDescZEx( (uint8*)"iimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8135, 0 );
      }
      goto label$6521;
      label$6581:;
      {
       FBSTRING* vr$8136 = fb_StrAllocTempDescZEx( (uint8*)"iimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8136, 0 );
      }
      goto label$6521;
      label$6582:;
      {
       FBSTRING* vr$8137 = fb_StrAllocTempDescZEx( (uint8*)"iimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8137, 0 );
      }
      goto label$6521;
      label$6583:;
      {
       FBSTRING* vr$8138 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8138, 0 );
      }
      goto label$6521;
      label$6584:;
      {
       FBSTRING* vr$8139 = fb_StrAllocTempDescZEx( (uint8*)"iimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8139, 0 );
      }
      goto label$6521;
      label$6585:;
      {
       FBSTRING* vr$8140 = fb_StrAllocTempDescZEx( (uint8*)"iimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8140, 0 );
      }
      goto label$6521;
      label$6586:;
      {
       FBSTRING* vr$8141 = fb_StrAllocTempDescZEx( (uint8*)"iimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8141, 0 );
      }
      goto label$6521;
      label$6587:;
      {
       FBSTRING* vr$8142 = fb_StrAllocTempDescZEx( (uint8*)"image", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8142, 0 );
      }
      goto label$6521;
      label$6588:;
      {
       FBSTRING* vr$8143 = fb_StrAllocTempDescZEx( (uint8*)"image1D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8143, 0 );
      }
      goto label$6521;
      label$6589:;
      {
       FBSTRING* vr$8144 = fb_StrAllocTempDescZEx( (uint8*)"image1DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8144, 0 );
      }
      goto label$6521;
      label$6590:;
      {
       FBSTRING* vr$8145 = fb_StrAllocTempDescZEx( (uint8*)"image1DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8145, 0 );
      }
      goto label$6521;
      label$6591:;
      {
       FBSTRING* vr$8146 = fb_StrAllocTempDescZEx( (uint8*)"image1DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8146, 0 );
      }
      goto label$6521;
      label$6592:;
      {
       FBSTRING* vr$8147 = fb_StrAllocTempDescZEx( (uint8*)"image2D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8147, 0 );
      }
      goto label$6521;
      label$6593:;
      {
       FBSTRING* vr$8148 = fb_StrAllocTempDescZEx( (uint8*)"image2DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8148, 0 );
      }
      goto label$6521;
      label$6594:;
      {
       FBSTRING* vr$8149 = fb_StrAllocTempDescZEx( (uint8*)"image2DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8149, 0 );
      }
      goto label$6521;
      label$6595:;
      {
       FBSTRING* vr$8150 = fb_StrAllocTempDescZEx( (uint8*)"image2DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8150, 0 );
      }
      goto label$6521;
      label$6596:;
      {
       FBSTRING* vr$8151 = fb_StrAllocTempDescZEx( (uint8*)"image3D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8151, 0 );
      }
      goto label$6521;
      label$6597:;
      {
       FBSTRING* vr$8152 = fb_StrAllocTempDescZEx( (uint8*)"imageBuffer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8152, 0 );
      }
      goto label$6521;
      label$6598:;
      {
       FBSTRING* vr$8153 = fb_StrAllocTempDescZEx( (uint8*)"imageCube", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8153, 0 );
      }
      goto label$6521;
      label$6599:;
      {
       FBSTRING* vr$8154 = fb_StrAllocTempDescZEx( (uint8*)"image_height", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8154, 0 );
      }
      goto label$6521;
      label$6600:;
      {
       FBSTRING* vr$8155 = fb_StrAllocTempDescZEx( (uint8*)"image_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8155, 0 );
      }
      goto label$6521;
      label$6601:;
      {
       FBSTRING* vr$8156 = fb_StrAllocTempDescZEx( (uint8*)"image_pattern", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8156, 0 );
      }
      goto label$6521;
      label$6602:;
      {
       FBSTRING* vr$8157 = fb_StrAllocTempDescZEx( (uint8*)"image_width", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8157, 0 );
      }
      goto label$6521;
      label$6603:;
      {
       FBSTRING* vr$8158 = fb_StrAllocTempDescZEx( (uint8*)"imouse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8158, 0 );
      }
      goto label$6521;
      label$6604:;
      {
       FBSTRING* vr$8159 = fb_StrAllocTempDescZEx( (uint8*)"imp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8159, 0 );
      }
      goto label$6521;
      label$6605:;
      {
       FBSTRING* vr$8160 = fb_StrAllocTempDescZEx( (uint8*)"implementation", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8160, 0 );
      }
      goto label$6521;
      label$6606:;
      {
       FBSTRING* vr$8161 = fb_StrAllocTempDescZEx( (uint8*)"import", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8161, 0 );
      }
      goto label$6521;
      label$6607:;
      {
       FBSTRING* vr$8162 = fb_StrAllocTempDescZEx( (uint8*)"in", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8162, 0 );
      }
      goto label$6521;
      label$6608:;
      {
       FBSTRING* vr$8163 = fb_StrAllocTempDescZEx( (uint8*)"include", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8163, 0 );
      }
      goto label$6521;
      label$6609:;
      {
       FBSTRING* vr$8164 = fb_StrAllocTempDescZEx( (uint8*)"index", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8164, 0 );
      }
      goto label$6521;
      label$6610:;
      {
       FBSTRING* vr$8165 = fb_StrAllocTempDescZEx( (uint8*)"indexed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8165, 0 );
      }
      goto label$6521;
      label$6611:;
      {
       FBSTRING* vr$8166 = fb_StrAllocTempDescZEx( (uint8*)"indicate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8166, 0 );
      }
      goto label$6521;
      label$6612:;
      {
       FBSTRING* vr$8167 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8167, 0 );
      }
      goto label$6521;
      label$6613:;
      {
       FBSTRING* vr$8168 = fb_StrAllocTempDescZEx( (uint8*)"inherits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8168, 0 );
      }
      goto label$6521;
      label$6614:;
      {
       FBSTRING* vr$8169 = fb_StrAllocTempDescZEx( (uint8*)"initial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8169, 0 );
      }
      goto label$6521;
      label$6615:;
      {
       FBSTRING* vr$8170 = fb_StrAllocTempDescZEx( (uint8*)"initial_clock", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8170, 0 );
      }
      goto label$6521;
      label$6616:;
      {
       FBSTRING* vr$8171 = fb_StrAllocTempDescZEx( (uint8*)"initial_frame", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8171, 0 );
      }
      goto label$6521;
      label$6617:;
      {
       FBSTRING* vr$8172 = fb_StrAllocTempDescZEx( (uint8*)"initialization", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8172, 0 );
      }
      goto label$6521;
      label$6618:;
      {
       FBSTRING* vr$8173 = fb_StrAllocTempDescZEx( (uint8*)"initialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8173, 0 );
      }
      goto label$6521;
      label$6619:;
      {
       FBSTRING* vr$8174 = fb_StrAllocTempDescZEx( (uint8*)"initiate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8174, 0 );
      }
      goto label$6521;
      label$6620:;
      {
       FBSTRING* vr$8175 = fb_StrAllocTempDescZEx( (uint8*)"inkey", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8175, 0 );
      }
      goto label$6521;
      label$6621:;
      {
       FBSTRING* vr$8176 = fb_StrAllocTempDescZEx( (uint8*)"inline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8176, 0 );
      }
      goto label$6521;
      label$6622:;
      {
       FBSTRING* vr$8177 = fb_StrAllocTempDescZEx( (uint8*)"inlinenoinline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8177, 0 );
      }
      goto label$6521;
      label$6623:;
      {
       FBSTRING* vr$8178 = fb_StrAllocTempDescZEx( (uint8*)"in_memory", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8178, 0 );
      }
      goto label$6521;
      label$6624:;
      {
       FBSTRING* vr$8179 = fb_StrAllocTempDescZEx( (uint8*)"inner", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8179, 0 );
      }
      goto label$6521;
      label$6625:;
      {
       FBSTRING* vr$8180 = fb_StrAllocTempDescZEx( (uint8*)"inout", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8180, 0 );
      }
      goto label$6521;
      label$6626:;
      {
       FBSTRING* vr$8181 = fb_StrAllocTempDescZEx( (uint8*)"inp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8181, 0 );
      }
      goto label$6521;
      label$6627:;
      {
       FBSTRING* vr$8182 = fb_StrAllocTempDescZEx( (uint8*)"input", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8182, 0 );
      }
      goto label$6521;
      label$6628:;
      {
       FBSTRING* vr$8183 = fb_StrAllocTempDescZEx( (uint8*)"input-output", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8183, 0 );
      }
      goto label$6521;
      label$6629:;
      {
       FBSTRING* vr$8184 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8184, 0 );
      }
      goto label$6521;
      label$6630:;
      {
       FBSTRING* vr$8185 = fb_StrAllocTempDescZEx( (uint8*)"insert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8185, 0 );
      }
      goto label$6521;
      label$6631:;
      {
       FBSTRING* vr$8186 = fb_StrAllocTempDescZEx( (uint8*)"inside", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8186, 0 );
      }
      goto label$6521;
      label$6632:;
      {
       FBSTRING* vr$8187 = fb_StrAllocTempDescZEx( (uint8*)"inside_vector", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8187, 0 );
      }
      goto label$6521;
      label$6633:;
      {
       FBSTRING* vr$8188 = fb_StrAllocTempDescZEx( (uint8*)"inspect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8188, 0 );
      }
      goto label$6521;
      label$6634:;
      {
       FBSTRING* vr$8189 = fb_StrAllocTempDescZEx( (uint8*)"installation", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8189, 0 );
      }
      goto label$6521;
      label$6635:;
      {
       FBSTRING* vr$8190 = fb_StrAllocTempDescZEx( (uint8*)"instr", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8190, 0 );
      }
      goto label$6521;
      label$6636:;
      {
       FBSTRING* vr$8191 = fb_StrAllocTempDescZEx( (uint8*)"int", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8191, 0 );
      }
      goto label$6521;
      label$6637:;
      {
       FBSTRING* vr$8192 = fb_StrAllocTempDescZEx( (uint8*)"integer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8192, 0 );
      }
      goto label$6521;
      label$6638:;
      {
       FBSTRING* vr$8193 = fb_StrAllocTempDescZEx( (uint8*)"interface", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8193, 0 );
      }
      goto label$6521;
      label$6639:;
      {
       FBSTRING* vr$8194 = fb_StrAllocTempDescZEx( (uint8*)"interior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8194, 0 );
      }
      goto label$6521;
      label$6640:;
      {
       FBSTRING* vr$8195 = fb_StrAllocTempDescZEx( (uint8*)"interior_texture", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8195, 0 );
      }
      goto label$6521;
      label$6641:;
      {
       FBSTRING* vr$8196 = fb_StrAllocTempDescZEx( (uint8*)"internal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8196, 0 );
      }
      goto label$6521;
      label$6642:;
      {
       FBSTRING* vr$8197 = fb_StrAllocTempDescZEx( (uint8*)"interpolate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8197, 0 );
      }
      goto label$6521;
      label$6643:;
      {
       FBSTRING* vr$8198 = fb_StrAllocTempDescZEx( (uint8*)"intersect", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8198, 0 );
      }
      goto label$6521;
      label$6644:;
      {
       FBSTRING* vr$8199 = fb_StrAllocTempDescZEx( (uint8*)"intersection", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8199, 0 );
      }
      goto label$6521;
      label$6645:;
      {
       FBSTRING* vr$8200 = fb_StrAllocTempDescZEx( (uint8*)"interval", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8200, 0 );
      }
      goto label$6521;
      label$6646:;
      {
       FBSTRING* vr$8201 = fb_StrAllocTempDescZEx( (uint8*)"intervals", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8201, 0 );
      }
      goto label$6521;
      label$6647:;
      {
       FBSTRING* vr$8202 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8202, 0 );
      }
      goto label$6521;
      label$6648:;
      {
       FBSTRING* vr$8203 = fb_StrAllocTempDescZEx( (uint8*)"intrinsic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8203, 0 );
      }
      goto label$6521;
      label$6649:;
      {
       FBSTRING* vr$8204 = fb_StrAllocTempDescZEx( (uint8*)"invalid", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8204, 0 );
      }
      goto label$6521;
      label$6650:;
      {
       FBSTRING* vr$8205 = fb_StrAllocTempDescZEx( (uint8*)"invariant", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8205, 0 );
      }
      goto label$6521;
      label$6651:;
      {
       FBSTRING* vr$8206 = fb_StrAllocTempDescZEx( (uint8*)"inverse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8206, 0 );
      }
      goto label$6521;
      label$6652:;
      {
       FBSTRING* vr$8207 = fb_StrAllocTempDescZEx( (uint8*)"inversesqr", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8207, 0 );
      }
      goto label$6521;
      label$6653:;
      {
       FBSTRING* vr$8208 = fb_StrAllocTempDescZEx( (uint8*)"invoke", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8208, 0 );
      }
      goto label$6521;
      label$6654:;
      {
       FBSTRING* vr$8209 = fb_StrAllocTempDescZEx( (uint8*)"i-o", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8209, 0 );
      }
      goto label$6521;
      label$6655:;
      {
       FBSTRING* vr$8210 = fb_StrAllocTempDescZEx( (uint8*)"i-o-control", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8210, 0 );
      }
      goto label$6521;
      label$6656:;
      {
       FBSTRING* vr$8211 = fb_StrAllocTempDescZEx( (uint8*)"ioctl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8211, 0 );
      }
      goto label$6521;
      label$6657:;
      {
       FBSTRING* vr$8212 = fb_StrAllocTempDescZEx( (uint8*)"ior", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8212, 0 );
      }
      goto label$6521;
      label$6658:;
      {
       FBSTRING* vr$8213 = fb_StrAllocTempDescZEx( (uint8*)"i_resolution", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8213, 0 );
      }
      goto label$6521;
      label$6659:;
      {
       FBSTRING* vr$8214 = fb_StrAllocTempDescZEx( (uint8*)"iResolution", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8214, 0 );
      }
      goto label$6521;
      label$6660:;
      {
       FBSTRING* vr$8215 = fb_StrAllocTempDescZEx( (uint8*)"irid", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8215, 0 );
      }
      goto label$6521;
      label$6661:;
      {
       FBSTRING* vr$8216 = fb_StrAllocTempDescZEx( (uint8*)"irid_wavelength", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8216, 0 );
      }
      goto label$6521;
      label$6662:;
      {
       FBSTRING* vr$8217 = fb_StrAllocTempDescZEx( (uint8*)"is", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8217, 0 );
      }
      goto label$6521;
      label$6663:;
      {
       FBSTRING* vr$8218 = fb_StrAllocTempDescZEx( (uint8*)"isampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8218, 0 );
      }
      goto label$6521;
      label$6664:;
      {
       FBSTRING* vr$8219 = fb_StrAllocTempDescZEx( (uint8*)"isampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8219, 0 );
      }
      goto label$6521;
      label$6665:;
      {
       FBSTRING* vr$8220 = fb_StrAllocTempDescZEx( (uint8*)"isampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8220, 0 );
      }
      goto label$6521;
      label$6666:;
      {
       FBSTRING* vr$8221 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8221, 0 );
      }
      goto label$6521;
      label$6667:;
      {
       FBSTRING* vr$8222 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DRect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8222, 0 );
      }
      goto label$6521;
      label$6668:;
      {
       FBSTRING* vr$8223 = fb_StrAllocTempDescZEx( (uint8*)"isampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8223, 0 );
      }
      goto label$6521;
      label$6669:;
      {
       FBSTRING* vr$8224 = fb_StrAllocTempDescZEx( (uint8*)"iSampleRate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8224, 0 );
      }
      goto label$6521;
      label$6670:;
      {
       FBSTRING* vr$8225 = fb_StrAllocTempDescZEx( (uint8*)"glsl ", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8225, 0 );
      }
      goto label$6521;
      label$6671:;
      {
       FBSTRING* vr$8226 = fb_StrAllocTempDescZEx( (uint8*)"isamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8226, 0 );
      }
      goto label$6521;
      label$6672:;
      {
       FBSTRING* vr$8227 = fb_StrAllocTempDescZEx( (uint8*)"isconnected", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8227, 0 );
      }
      goto label$6521;
      label$6673:;
      {
       FBSTRING* vr$8228 = fb_StrAllocTempDescZEx( (uint8*)"isconstant", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8228, 0 );
      }
      goto label$6521;
      label$6674:;
      {
       FBSTRING* vr$8229 = fb_StrAllocTempDescZEx( (uint8*)"isfinite", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8229, 0 );
      }
      goto label$6521;
      label$6675:;
      {
       FBSTRING* vr$8230 = fb_StrAllocTempDescZEx( (uint8*)"isinf", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8230, 0 );
      }
      goto label$6521;
      label$6676:;
      {
       FBSTRING* vr$8231 = fb_StrAllocTempDescZEx( (uint8*)"isnan", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8231, 0 );
      }
      goto label$6521;
      label$6677:;
      {
       FBSTRING* vr$8232 = fb_StrAllocTempDescZEx( (uint8*)"isosurface", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8232, 0 );
      }
      goto label$6521;
      label$6678:;
      {
       FBSTRING* vr$8233 = fb_StrAllocTempDescZEx( (uint8*)"isotropic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8233, 0 );
      }
      goto label$6521;
      label$6679:;
      {
       FBSTRING* vr$8234 = fb_StrAllocTempDescZEx( (uint8*)"iterate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8234, 0 );
      }
      goto label$6521;
      label$6680:;
      {
       FBSTRING* vr$8235 = fb_StrAllocTempDescZEx( (uint8*)"i_time", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8235, 0 );
      }
      goto label$6521;
      label$6681:;
      {
       FBSTRING* vr$8236 = fb_StrAllocTempDescZEx( (uint8*)"itime", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8236, 0 );
      }
      goto label$6521;
      label$6682:;
      {
       FBSTRING* vr$8237 = fb_StrAllocTempDescZEx( (uint8*)"itimedelta", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8237, 0 );
      }
      goto label$6521;
      label$6683:;
      {
       FBSTRING* vr$8238 = fb_StrAllocTempDescZEx( (uint8*)"ivec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8238, 0 );
      }
      goto label$6521;
      label$6684:;
      {
       FBSTRING* vr$8239 = fb_StrAllocTempDescZEx( (uint8*)"ivec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8239, 0 );
      }
      goto label$6521;
      label$6685:;
      {
       FBSTRING* vr$8240 = fb_StrAllocTempDescZEx( (uint8*)"ivec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8240, 0 );
      }
      goto label$6521;
      label$6686:;
      {
       FBSTRING* vr$8241 = fb_StrAllocTempDescZEx( (uint8*)"j", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8241, 0 );
      }
      goto label$6521;
      label$6687:;
      {
       FBSTRING* vr$8242 = fb_StrAllocTempDescZEx( (uint8*)"jitter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8242, 0 );
      }
      goto label$6521;
      label$6688:;
      {
       FBSTRING* vr$8243 = fb_StrAllocTempDescZEx( (uint8*)"join", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8243, 0 );
      }
      goto label$6521;
      label$6689:;
      {
       FBSTRING* vr$8244 = fb_StrAllocTempDescZEx( (uint8*)"jpeg", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8244, 0 );
      }
      goto label$6521;
      label$6690:;
      {
       FBSTRING* vr$8245 = fb_StrAllocTempDescZEx( (uint8*)"julia", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8245, 0 );
      }
      goto label$6521;
      label$6691:;
      {
       FBSTRING* vr$8246 = fb_StrAllocTempDescZEx( (uint8*)"julia_fractal", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8246, 0 );
      }
      goto label$6521;
      label$6692:;
      {
       FBSTRING* vr$8247 = fb_StrAllocTempDescZEx( (uint8*)"just", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8247, 0 );
      }
      goto label$6521;
      label$6693:;
      {
       FBSTRING* vr$8248 = fb_StrAllocTempDescZEx( (uint8*)"justified", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8248, 0 );
      }
      goto label$6521;
      label$6694:;
      {
       FBSTRING* vr$8249 = fb_StrAllocTempDescZEx( (uint8*)"k", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8249, 0 );
      }
      goto label$6521;
      label$6695:;
      {
       FBSTRING* vr$8250 = fb_StrAllocTempDescZEx( (uint8*)"kanji", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8250, 0 );
      }
      goto label$6521;
      label$6696:;
      {
       FBSTRING* vr$8251 = fb_StrAllocTempDescZEx( (uint8*)"key", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8251, 0 );
      }
      goto label$6521;
      label$6697:;
      {
       FBSTRING* vr$8252 = fb_StrAllocTempDescZEx( (uint8*)"kill", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8252, 0 );
      }
      goto label$6521;
      label$6698:;
      {
       FBSTRING* vr$8253 = fb_StrAllocTempDescZEx( (uint8*)"l", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8253, 0 );
      }
      goto label$6521;
      label$6699:;
      {
       FBSTRING* vr$8254 = fb_StrAllocTempDescZEx( (uint8*)"label", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8254, 0 );
      }
      goto label$6521;
      label$6700:;
      {
       FBSTRING* vr$8255 = fb_StrAllocTempDescZEx( (uint8*)"lambda", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8255, 0 );
      }
      goto label$6521;
      label$6701:;
      {
       FBSTRING* vr$8256 = fb_StrAllocTempDescZEx( (uint8*)"last", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8256, 0 );
      }
      goto label$6521;
      label$6702:;
      {
       FBSTRING* vr$8257 = fb_StrAllocTempDescZEx( (uint8*)"lathe", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8257, 0 );
      }
      goto label$6521;
      label$6703:;
      {
       FBSTRING* vr$8258 = fb_StrAllocTempDescZEx( (uint8*)"layout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8258, 0 );
      }
      goto label$6521;
      label$6704:;
      {
       FBSTRING* vr$8259 = fb_StrAllocTempDescZEx( (uint8*)"lcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8259, 0 );
      }
      goto label$6521;
      label$6705:;
      {
       FBSTRING* vr$8260 = fb_StrAllocTempDescZEx( (uint8*)"leading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8260, 0 );
      }
      goto label$6521;
      label$6706:;
      {
       FBSTRING* vr$8261 = fb_StrAllocTempDescZEx( (uint8*)"leave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8261, 0 );
      }
      goto label$6521;
      label$6707:;
      {
       FBSTRING* vr$8262 = fb_StrAllocTempDescZEx( (uint8*)"left", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8262, 0 );
      }
      goto label$6521;
      label$6708:;
      {
      }
      goto label$6521;
      label$6709:;
      {
       FBSTRING* vr$8263 = fb_StrAllocTempDescZEx( (uint8*)"len", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8263, 0 );
      }
      goto label$6521;
      label$6710:;
      {
       FBSTRING* vr$8264 = fb_StrAllocTempDescZEx( (uint8*)"length", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8264, 0 );
      }
      goto label$6521;
      label$6711:;
      {
       FBSTRING* vr$8265 = fb_StrAllocTempDescZEx( (uint8*)"leopard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8265, 0 );
      }
      goto label$6521;
      label$6712:;
      {
       FBSTRING* vr$8266 = fb_StrAllocTempDescZEx( (uint8*)"less", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8266, 0 );
      }
      goto label$6521;
      label$6713:;
      {
       FBSTRING* vr$8267 = fb_StrAllocTempDescZEx( (uint8*)"lesseq", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8267, 0 );
      }
      goto label$6521;
      label$6714:;
      {
       FBSTRING* vr$8268 = fb_StrAllocTempDescZEx( (uint8*)"let", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8268, 0 );
      }
      goto label$6521;
      label$6715:;
      {
       FBSTRING* vr$8269 = fb_StrAllocTempDescZEx( (uint8*)"libraryt", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8269, 0 );
      }
      goto label$6521;
      label$6716:;
      {
       FBSTRING* vr$8270 = fb_StrAllocTempDescZEx( (uint8*)"light_group", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8270, 0 );
      }
      goto label$6521;
      label$6717:;
      {
       FBSTRING* vr$8271 = fb_StrAllocTempDescZEx( (uint8*)"light_source", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8271, 0 );
      }
      goto label$6521;
      label$6718:;
      {
       FBSTRING* vr$8272 = fb_StrAllocTempDescZEx( (uint8*)"like", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8272, 0 );
      }
      goto label$6521;
      label$6719:;
      {
       FBSTRING* vr$8273 = fb_StrAllocTempDescZEx( (uint8*)"limit", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8273, 0 );
      }
      goto label$6521;
      label$6720:;
      {
       FBSTRING* vr$8274 = fb_StrAllocTempDescZEx( (uint8*)"limits", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8274, 0 );
      }
      goto label$6521;
      label$6721:;
      {
       FBSTRING* vr$8275 = fb_StrAllocTempDescZEx( (uint8*)"linage", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8275, 0 );
      }
      goto label$6521;
      label$6722:;
      {
       FBSTRING* vr$8276 = fb_StrAllocTempDescZEx( (uint8*)"linage-counter", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8276, 0 );
      }
      goto label$6521;
      label$6723:;
      {
       FBSTRING* vr$8277 = fb_StrAllocTempDescZEx( (uint8*)"line", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8277, 0 );
      }
      goto label$6521;
      label$6724:;
      {
       FBSTRING* vr$8278 = fb_StrAllocTempDescZEx( (uint8*)"linear_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8278, 0 );
      }
      goto label$6521;
      label$6725:;
      {
       FBSTRING* vr$8279 = fb_StrAllocTempDescZEx( (uint8*)"linearstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8279, 0 );
      }
      goto label$6521;
      label$6726:;
      {
       FBSTRING* vr$8280 = fb_StrAllocTempDescZEx( (uint8*)"linear_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8280, 0 );
      }
      goto label$6521;
      label$6727:;
      {
       FBSTRING* vr$8281 = fb_StrAllocTempDescZEx( (uint8*)"line-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8281, 0 );
      }
      goto label$6521;
      label$6728:;
      {
       FBSTRING* vr$8282 = fb_StrAllocTempDescZEx( (uint8*)"lines", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8282, 0 );
      }
      goto label$6521;
      label$6729:;
      {
       FBSTRING* vr$8283 = fb_StrAllocTempDescZEx( (uint8*)"linkage", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8283, 0 );
      }
      goto label$6521;
      label$6730:;
      {
       FBSTRING* vr$8284 = fb_StrAllocTempDescZEx( (uint8*)"list", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8284, 0 );
      }
      goto label$6521;
      label$6731:;
      {
       FBSTRING* vr$8285 = fb_StrAllocTempDescZEx( (uint8*)"llist", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8285, 0 );
      }
      goto label$6521;
      label$6732:;
      {
       FBSTRING* vr$8286 = fb_StrAllocTempDescZEx( (uint8*)"ln", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8286, 0 );
      }
      goto label$6521;
      label$6733:;
      {
       FBSTRING* vr$8287 = fb_StrAllocTempDescZEx( (uint8*)"load", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8287, 0 );
      }
      goto label$6521;
      label$6734:;
      {
       FBSTRING* vr$8288 = fb_StrAllocTempDescZEx( (uint8*)"load_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8288, 0 );
      }
      goto label$6521;
      label$6735:;
      {
       FBSTRING* vr$8289 = fb_StrAllocTempDescZEx( (uint8*)"loc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8289, 0 );
      }
      goto label$6521;
      label$6736:;
      {
       FBSTRING* vr$8290 = fb_StrAllocTempDescZEx( (uint8*)"local", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8290, 0 );
      }
      goto label$6521;
      label$6737:;
      {
       FBSTRING* vr$8291 = fb_StrAllocTempDescZEx( (uint8*)"local-storage", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8291, 0 );
      }
      goto label$6521;
      label$6738:;
      {
       FBSTRING* vr$8292 = fb_StrAllocTempDescZEx( (uint8*)"locate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8292, 0 );
      }
      goto label$6521;
      label$6739:;
      {
       FBSTRING* vr$8293 = fb_StrAllocTempDescZEx( (uint8*)"location", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8293, 0 );
      }
      goto label$6521;
      label$6740:;
      {
       FBSTRING* vr$8294 = fb_StrAllocTempDescZEx( (uint8*)"lock", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8294, 0 );
      }
      goto label$6521;
      label$6741:;
      {
       FBSTRING* vr$8295 = fb_StrAllocTempDescZEx( (uint8*)"lof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8295, 0 );
      }
      goto label$6521;
      label$6742:;
      {
       FBSTRING* vr$8296 = fb_StrAllocTempDescZEx( (uint8*)"log", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8296, 0 );
      }
      goto label$6521;
      label$6743:;
      {
       FBSTRING* vr$8297 = fb_StrAllocTempDescZEx( (uint8*)"log10", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8297, 0 );
      }
      goto label$6521;
      label$6744:;
      {
       FBSTRING* vr$8298 = fb_StrAllocTempDescZEx( (uint8*)"log2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8298, 0 );
      }
      goto label$6521;
      label$6745:;
      {
       FBSTRING* vr$8299 = fb_StrAllocTempDescZEx( (uint8*)"logb", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8299, 0 );
      }
      goto label$6521;
      label$6746:;
      {
       FBSTRING* vr$8300 = fb_StrAllocTempDescZEx( (uint8*)"logical", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8300, 0 );
      }
      goto label$6521;
      label$6747:;
      {
       FBSTRING* vr$8301 = fb_StrAllocTempDescZEx( (uint8*)"long", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8301, 0 );
      }
      goto label$6521;
      label$6748:;
      {
       FBSTRING* vr$8302 = fb_StrAllocTempDescZEx( (uint8*)"look_at", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8302, 0 );
      }
      goto label$6521;
      label$6749:;
      {
       FBSTRING* vr$8303 = fb_StrAllocTempDescZEx( (uint8*)"looks_like", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8303, 0 );
      }
      goto label$6521;
      label$6750:;
      {
       FBSTRING* vr$8304 = fb_StrAllocTempDescZEx( (uint8*)"loop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8304, 0 );
      }
      goto label$6521;
      label$6751:;
      {
       FBSTRING* vr$8305 = fb_StrAllocTempDescZEx( (uint8*)"lower", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8305, 0 );
      }
      goto label$6521;
      label$6752:;
      {
       FBSTRING* vr$8306 = fb_StrAllocTempDescZEx( (uint8*)"lower_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8306, 0 );
      }
      goto label$6521;
      label$6753:;
      {
       FBSTRING* vr$8307 = fb_StrAllocTempDescZEx( (uint8*)"low_error_factor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8307, 0 );
      }
      goto label$6521;
      label$6754:;
      {
       FBSTRING* vr$8308 = fb_StrAllocTempDescZEx( (uint8*)"lowp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8308, 0 );
      }
      goto label$6521;
      label$6755:;
      {
       FBSTRING* vr$8309 = fb_StrAllocTempDescZEx( (uint8*)"low-value", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8309, 0 );
      }
      goto label$6521;
      label$6756:;
      {
       FBSTRING* vr$8310 = fb_StrAllocTempDescZEx( (uint8*)"low-values", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8310, 0 );
      }
      goto label$6521;
      label$6757:;
      {
       FBSTRING* vr$8311 = fb_StrAllocTempDescZEx( (uint8*)"lpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8311, 0 );
      }
      goto label$6521;
      label$6758:;
      {
       FBSTRING* vr$8312 = fb_StrAllocTempDescZEx( (uint8*)"lpos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8312, 0 );
      }
      goto label$6521;
      label$6759:;
      {
       FBSTRING* vr$8313 = fb_StrAllocTempDescZEx( (uint8*)"lprint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8313, 0 );
      }
      goto label$6521;
      label$6760:;
      {
       FBSTRING* vr$8314 = fb_StrAllocTempDescZEx( (uint8*)"lset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8314, 0 );
      }
      goto label$6521;
      label$6761:;
      {
       FBSTRING* vr$8315 = fb_StrAllocTempDescZEx( (uint8*)"luminance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8315, 0 );
      }
      goto label$6521;
      label$6762:;
      {
       FBSTRING* vr$8316 = fb_StrAllocTempDescZEx( (uint8*)"m", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8316, 0 );
      }
      goto label$6521;
      label$6763:;
      {
       FBSTRING* vr$8317 = fb_StrAllocTempDescZEx( (uint8*)"m_2_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8317, 0 );
      }
      goto label$6521;
      label$6764:;
      {
       FBSTRING* vr$8318 = fb_StrAllocTempDescZEx( (uint8*)"m_2_sqrtpi", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8318, 0 );
      }
      goto label$6521;
      label$6765:;
      {
       FBSTRING* vr$8319 = fb_StrAllocTempDescZEx( (uint8*)"m_4_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8319, 0 );
      }
      goto label$6521;
      label$6766:;
      {
       FBSTRING* vr$8320 = fb_StrAllocTempDescZEx( (uint8*)"macro", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8320, 0 );
      }
      goto label$6521;
      label$6767:;
      {
       FBSTRING* vr$8321 = fb_StrAllocTempDescZEx( (uint8*)"magnet", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8321, 0 );
      }
      goto label$6521;
      label$6768:;
      {
       FBSTRING* vr$8322 = fb_StrAllocTempDescZEx( (uint8*)"main", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8322, 0 );
      }
      goto label$6521;
      label$6769:;
      {
       FBSTRING* vr$8323 = fb_StrAllocTempDescZEx( (uint8*)"main_image", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8323, 0 );
      }
      goto label$6521;
      label$6770:;
      {
       FBSTRING* vr$8324 = fb_StrAllocTempDescZEx( (uint8*)"mainImage", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8324, 0 );
      }
      goto label$6521;
      label$6771:;
      {
       FBSTRING* vr$8325 = fb_StrAllocTempDescZEx( (uint8*)"major_radius", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8325, 0 );
      }
      goto label$6521;
      label$6772:;
      {
       FBSTRING* vr$8326 = fb_StrAllocTempDescZEx( (uint8*)"mandel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8326, 0 );
      }
      goto label$6521;
      label$6773:;
      {
       FBSTRING* vr$8327 = fb_StrAllocTempDescZEx( (uint8*)"map", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8327, 0 );
      }
      goto label$6521;
      label$6774:;
      {
       FBSTRING* vr$8328 = fb_StrAllocTempDescZEx( (uint8*)"map_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8328, 0 );
      }
      goto label$6521;
      label$6775:;
      {
       FBSTRING* vr$8329 = fb_StrAllocTempDescZEx( (uint8*)"marble", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8329, 0 );
      }
      goto label$6521;
      label$6776:;
      {
       FBSTRING* vr$8330 = fb_StrAllocTempDescZEx( (uint8*)"mat2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8330, 0 );
      }
      goto label$6521;
      label$6777:;
      {
       FBSTRING* vr$8331 = fb_StrAllocTempDescZEx( (uint8*)"mat2x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8331, 0 );
      }
      goto label$6521;
      label$6522:;
      static const void* tmp$4520[256ll] = {
       &&label$6523,
       &&label$6524,
       &&label$6525,
       &&label$6526,
       &&label$6527,
       &&label$6528,
       &&label$6529,
       &&label$6530,
       &&label$6531,
       &&label$6532,
       &&label$6533,
       &&label$6534,
       &&label$6535,
       &&label$6536,
       &&label$6537,
       &&label$6538,
       &&label$6539,
       &&label$6540,
       &&label$6541,
       &&label$6542,
       &&label$6543,
       &&label$6544,
       &&label$6545,
       &&label$6546,
       &&label$6547,
       &&label$6548,
       &&label$6549,
       &&label$6521,
       &&label$6550,
       &&label$6551,
       &&label$6552,
       &&label$6553,
       &&label$6554,
       &&label$6555,
       &&label$6556,
       &&label$6557,
       &&label$6558,
       &&label$6559,
       &&label$6560,
       &&label$6561,
       &&label$6562,
       &&label$6563,
       &&label$6564,
       &&label$6565,
       &&label$6566,
       &&label$6567,
       &&label$6568,
       &&label$6569,
       &&label$6570,
       &&label$6571,
       &&label$6572,
       &&label$6573,
       &&label$6574,
       &&label$6575,
       &&label$6576,
       &&label$6577,
       &&label$6578,
       &&label$6579,
       &&label$6580,
       &&label$6581,
       &&label$6582,
       &&label$6583,
       &&label$6584,
       &&label$6585,
       &&label$6586,
       &&label$6587,
       &&label$6588,
       &&label$6589,
       &&label$6590,
       &&label$6591,
       &&label$6592,
       &&label$6593,
       &&label$6594,
       &&label$6595,
       &&label$6596,
       &&label$6597,
       &&label$6598,
       &&label$6599,
       &&label$6600,
       &&label$6601,
       &&label$6602,
       &&label$6603,
       &&label$6604,
       &&label$6605,
       &&label$6606,
       &&label$6607,
       &&label$6608,
       &&label$6609,
       &&label$6610,
       &&label$6611,
       &&label$6612,
       &&label$6613,
       &&label$6614,
       &&label$6615,
       &&label$6616,
       &&label$6617,
       &&label$6618,
       &&label$6619,
       &&label$6620,
       &&label$6621,
       &&label$6622,
       &&label$6623,
       &&label$6624,
       &&label$6625,
       &&label$6626,
       &&label$6627,
       &&label$6628,
       &&label$6629,
       &&label$6630,
       &&label$6631,
       &&label$6632,
       &&label$6633,
       &&label$6634,
       &&label$6635,
       &&label$6636,
       &&label$6637,
       &&label$6638,
       &&label$6639,
       &&label$6640,
       &&label$6641,
       &&label$6642,
       &&label$6643,
       &&label$6644,
       &&label$6645,
       &&label$6646,
       &&label$6647,
       &&label$6648,
       &&label$6649,
       &&label$6650,
       &&label$6651,
       &&label$6652,
       &&label$6653,
       &&label$6654,
       &&label$6655,
       &&label$6656,
       &&label$6657,
       &&label$6658,
       &&label$6659,
       &&label$6660,
       &&label$6661,
       &&label$6662,
       &&label$6663,
       &&label$6664,
       &&label$6665,
       &&label$6666,
       &&label$6667,
       &&label$6668,
       &&label$6669,
       &&label$6670,
       &&label$6671,
       &&label$6672,
       &&label$6673,
       &&label$6674,
       &&label$6675,
       &&label$6676,
       &&label$6677,
       &&label$6678,
       &&label$6679,
       &&label$6680,
       &&label$6681,
       &&label$6682,
       &&label$6683,
       &&label$6684,
       &&label$6685,
       &&label$6686,
       &&label$6687,
       &&label$6688,
       &&label$6689,
       &&label$6690,
       &&label$6691,
       &&label$6692,
       &&label$6693,
       &&label$6694,
       &&label$6695,
       &&label$6696,
       &&label$6697,
       &&label$6698,
       &&label$6699,
       &&label$6700,
       &&label$6701,
       &&label$6702,
       &&label$6703,
       &&label$6704,
       &&label$6705,
       &&label$6706,
       &&label$6707,
       &&label$6708,
       &&label$6709,
       &&label$6710,
       &&label$6711,
       &&label$6712,
       &&label$6713,
       &&label$6714,
       &&label$6715,
       &&label$6716,
       &&label$6717,
       &&label$6718,
       &&label$6719,
       &&label$6720,
       &&label$6721,
       &&label$6722,
       &&label$6723,
       &&label$6724,
       &&label$6725,
       &&label$6726,
       &&label$6727,
       &&label$6728,
       &&label$6729,
       &&label$6730,
       &&label$6731,
       &&label$6732,
       &&label$6733,
       &&label$6734,
       &&label$6735,
       &&label$6736,
       &&label$6737,
       &&label$6738,
       &&label$6739,
       &&label$6740,
       &&label$6741,
       &&label$6742,
       &&label$6743,
       &&label$6744,
       &&label$6745,
       &&label$6746,
       &&label$6747,
       &&label$6748,
       &&label$6749,
       &&label$6750,
       &&label$6751,
       &&label$6752,
       &&label$6753,
       &&label$6754,
       &&label$6755,
       &&label$6756,
       &&label$6757,
       &&label$6758,
       &&label$6759,
       &&label$6760,
       &&label$6761,
       &&label$6762,
       &&label$6763,
       &&label$6764,
       &&label$6765,
       &&label$6766,
       &&label$6767,
       &&label$6768,
       &&label$6769,
       &&label$6770,
       &&label$6771,
       &&label$6772,
       &&label$6773,
       &&label$6774,
       &&label$6775,
       &&label$6776,
       &&label$6777,
      };
      if( TMP$2963$6 > 255ull ) goto label$6521;
      goto *tmp$4520[TMP$2963$6 - 0ull];
      label$6521:;
     }
    }
    goto label$5883;
    label$6778:;
    {
     {
      uint64 TMP$3209$6;
      TMP$3209$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$6780;
      label$6781:;
      {
       FBSTRING* vr$8333 = fb_StrAllocTempDescZEx( (uint8*)"mat2x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8333, 0 );
      }
      goto label$6779;
      label$6782:;
      {
       FBSTRING* vr$8334 = fb_StrAllocTempDescZEx( (uint8*)"mat2x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8334, 0 );
      }
      goto label$6779;
      label$6783:;
      {
       FBSTRING* vr$8335 = fb_StrAllocTempDescZEx( (uint8*)"mat3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8335, 0 );
      }
      goto label$6779;
      label$6784:;
      {
       FBSTRING* vr$8336 = fb_StrAllocTempDescZEx( (uint8*)"mat3x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8336, 0 );
      }
      goto label$6779;
      label$6785:;
      {
       FBSTRING* vr$8337 = fb_StrAllocTempDescZEx( (uint8*)"mat3x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8337, 0 );
      }
      goto label$6779;
      label$6786:;
      {
       FBSTRING* vr$8338 = fb_StrAllocTempDescZEx( (uint8*)"mat3x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8338, 0 );
      }
      goto label$6779;
      label$6787:;
      {
       FBSTRING* vr$8339 = fb_StrAllocTempDescZEx( (uint8*)"mat4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8339, 0 );
      }
      goto label$6779;
      label$6788:;
      {
       FBSTRING* vr$8340 = fb_StrAllocTempDescZEx( (uint8*)"mat4x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8340, 0 );
      }
      goto label$6779;
      label$6789:;
      {
       FBSTRING* vr$8341 = fb_StrAllocTempDescZEx( (uint8*)"mat4x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8341, 0 );
      }
      goto label$6779;
      label$6790:;
      {
       FBSTRING* vr$8342 = fb_StrAllocTempDescZEx( (uint8*)"mat4x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8342, 0 );
      }
      goto label$6779;
      label$6791:;
      {
       FBSTRING* vr$8343 = fb_StrAllocTempDescZEx( (uint8*)"material", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8343, 0 );
      }
      goto label$6779;
      label$6792:;
      {
       FBSTRING* vr$8344 = fb_StrAllocTempDescZEx( (uint8*)"material_map", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8344, 0 );
      }
      goto label$6779;
      label$6793:;
      {
       FBSTRING* vr$8345 = fb_StrAllocTempDescZEx( (uint8*)"matrix", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8345, 0 );
      }
      goto label$6779;
      label$6794:;
      {
       FBSTRING* vr$8346 = fb_StrAllocTempDescZEx( (uint8*)"max", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8346, 0 );
      }
      goto label$6779;
      label$6795:;
      {
       FBSTRING* vr$8347 = fb_StrAllocTempDescZEx( (uint8*)"max_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8347, 0 );
      }
      goto label$6779;
      label$6796:;
      {
       FBSTRING* vr$8348 = fb_StrAllocTempDescZEx( (uint8*)"max_gradient", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8348, 0 );
      }
      goto label$6779;
      label$6797:;
      {
       FBSTRING* vr$8349 = fb_StrAllocTempDescZEx( (uint8*)"max_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8349, 0 );
      }
      goto label$6779;
      label$6798:;
      {
       FBSTRING* vr$8350 = fb_StrAllocTempDescZEx( (uint8*)"max_iteration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8350, 0 );
      }
      goto label$6779;
      label$6799:;
      {
       FBSTRING* vr$8351 = fb_StrAllocTempDescZEx( (uint8*)"max_sample", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8351, 0 );
      }
      goto label$6779;
      label$6800:;
      {
       FBSTRING* vr$8352 = fb_StrAllocTempDescZEx( (uint8*)"max_trace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8352, 0 );
      }
      goto label$6779;
      label$6801:;
      {
       FBSTRING* vr$8353 = fb_StrAllocTempDescZEx( (uint8*)"max_trace_level", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8353, 0 );
      }
      goto label$6779;
      label$6802:;
      {
       FBSTRING* vr$8354 = fb_StrAllocTempDescZEx( (uint8*)"m_e", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8354, 0 );
      }
      goto label$6779;
      label$6803:;
      {
       FBSTRING* vr$8355 = fb_StrAllocTempDescZEx( (uint8*)"media", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8355, 0 );
      }
      goto label$6779;
      label$6804:;
      {
       FBSTRING* vr$8356 = fb_StrAllocTempDescZEx( (uint8*)"media_attenuation", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8356, 0 );
      }
      goto label$6779;
      label$6805:;
      {
       FBSTRING* vr$8357 = fb_StrAllocTempDescZEx( (uint8*)"media_interaction", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8357, 0 );
      }
      goto label$6779;
      label$6806:;
      {
       FBSTRING* vr$8358 = fb_StrAllocTempDescZEx( (uint8*)"mediump", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8358, 0 );
      }
      goto label$6779;
      label$6807:;
      {
       FBSTRING* vr$8359 = fb_StrAllocTempDescZEx( (uint8*)"memory", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8359, 0 );
      }
      goto label$6779;
      label$6808:;
      {
       FBSTRING* vr$8360 = fb_StrAllocTempDescZEx( (uint8*)"memory_size", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8360, 0 );
      }
      goto label$6779;
      label$6809:;
      {
       FBSTRING* vr$8361 = fb_StrAllocTempDescZEx( (uint8*)"merge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8361, 0 );
      }
      goto label$6779;
      label$6810:;
      {
       FBSTRING* vr$8362 = fb_StrAllocTempDescZEx( (uint8*)"mesh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8362, 0 );
      }
      goto label$6779;
      label$6811:;
      {
       FBSTRING* vr$8363 = fb_StrAllocTempDescZEx( (uint8*)"mesh2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8363, 0 );
      }
      goto label$6779;
      label$6812:;
      {
       FBSTRING* vr$8364 = fb_StrAllocTempDescZEx( (uint8*)"message", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8364, 0 );
      }
      goto label$6779;
      label$6813:;
      {
       FBSTRING* vr$8365 = fb_StrAllocTempDescZEx( (uint8*)"metaclass", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8365, 0 );
      }
      goto label$6779;
      label$6814:;
      {
       FBSTRING* vr$8366 = fb_StrAllocTempDescZEx( (uint8*)"meta_hint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8366, 0 );
      }
      goto label$6779;
      label$6815:;
      {
       FBSTRING* vr$8367 = fb_StrAllocTempDescZEx( (uint8*)"metallic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8367, 0 );
      }
      goto label$6779;
      label$6816:;
      {
       FBSTRING* vr$8368 = fb_StrAllocTempDescZEx( (uint8*)"method", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8368, 0 );
      }
      goto label$6779;
      label$6817:;
      {
       FBSTRING* vr$8369 = fb_StrAllocTempDescZEx( (uint8*)"method-id", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8369, 0 );
      }
      goto label$6779;
      label$6818:;
      {
       FBSTRING* vr$8370 = fb_StrAllocTempDescZEx( (uint8*)"metric", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8370, 0 );
      }
      goto label$6779;
      label$6819:;
      {
       FBSTRING* vr$8371 = fb_StrAllocTempDescZEx( (uint8*)"microfacet", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8371, 0 );
      }
      goto label$6779;
      label$6820:;
      {
       FBSTRING* vr$8372 = fb_StrAllocTempDescZEx( (uint8*)"mid", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8372, 0 );
      }
      goto label$6779;
      label$6821:;
      {
       FBSTRING* vr$8373 = fb_StrAllocTempDescZEx( (uint8*)"min", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8373, 0 );
      }
      goto label$6779;
      label$6822:;
      {
       FBSTRING* vr$8374 = fb_StrAllocTempDescZEx( (uint8*)"min_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8374, 0 );
      }
      goto label$6779;
      label$6823:;
      {
       FBSTRING* vr$8375 = fb_StrAllocTempDescZEx( (uint8*)"minimum_reuse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8375, 0 );
      }
      goto label$6779;
      label$6824:;
      {
       FBSTRING* vr$8376 = fb_StrAllocTempDescZEx( (uint8*)"minute", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8376, 0 );
      }
      goto label$6779;
      label$6825:;
      {
       FBSTRING* vr$8377 = fb_StrAllocTempDescZEx( (uint8*)"mkd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8377, 0 );
      }
      goto label$6779;
      label$6826:;
      {
       FBSTRING* vr$8378 = fb_StrAllocTempDescZEx( (uint8*)"mkdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8378, 0 );
      }
      goto label$6779;
      label$6827:;
      {
       FBSTRING* vr$8379 = fb_StrAllocTempDescZEx( (uint8*)"mki", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8379, 0 );
      }
      goto label$6779;
      label$6828:;
      {
       FBSTRING* vr$8380 = fb_StrAllocTempDescZEx( (uint8*)"mks", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8380, 0 );
      }
      goto label$6779;
      label$6829:;
      {
       FBSTRING* vr$8381 = fb_StrAllocTempDescZEx( (uint8*)"M_LN", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8381, 0 );
      }
      goto label$6779;
      label$6830:;
      {
       FBSTRING* vr$8382 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8382, 0 );
      }
      goto label$6779;
      label$6831:;
      {
       FBSTRING* vr$8383 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8383, 0 );
      }
      goto label$6779;
      label$6832:;
      {
       FBSTRING* vr$8384 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8384, 0 );
      }
      goto label$6779;
      label$6833:;
      {
       FBSTRING* vr$8385 = fb_StrAllocTempDescZEx( (uint8*)"mod", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8385, 0 );
      }
      goto label$6779;
      label$6834:;
      {
       FBSTRING* vr$8386 = fb_StrAllocTempDescZEx( (uint8*)"mode", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8386, 0 );
      }
      goto label$6779;
      label$6835:;
      {
       FBSTRING* vr$8387 = fb_StrAllocTempDescZEx( (uint8*)"modules", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8387, 0 );
      }
      goto label$6779;
      label$6836:;
      {
       FBSTRING* vr$8388 = fb_StrAllocTempDescZEx( (uint8*)"month", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8388, 0 );
      }
      goto label$6779;
      label$6837:;
      {
       FBSTRING* vr$8389 = fb_StrAllocTempDescZEx( (uint8*)"more-labels", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8389, 0 );
      }
      goto label$6779;
      label$6838:;
      {
       FBSTRING* vr$8390 = fb_StrAllocTempDescZEx( (uint8*)"mortar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8390, 0 );
      }
      goto label$6779;
      label$6839:;
      {
       FBSTRING* vr$8391 = fb_StrAllocTempDescZEx( (uint8*)"motor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8391, 0 );
      }
      goto label$6779;
      label$6840:;
      {
       FBSTRING* vr$8392 = fb_StrAllocTempDescZEx( (uint8*)"move", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8392, 0 );
      }
      goto label$6779;
      label$6841:;
      {
       FBSTRING* vr$8393 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8393, 0 );
      }
      goto label$6779;
      label$6842:;
      {
       FBSTRING* vr$8394 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8394, 0 );
      }
      goto label$6779;
      label$6843:;
      {
       FBSTRING* vr$8395 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8395, 0 );
      }
      goto label$6779;
      label$6844:;
      {
       FBSTRING* vr$8396 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8396, 0 );
      }
      goto label$6779;
      label$6845:;
      {
       FBSTRING* vr$8397 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8397, 0 );
      }
      goto label$6779;
      label$6846:;
      {
       FBSTRING* vr$8398 = fb_StrAllocTempDescZEx( (uint8*)"multiple", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8398, 0 );
      }
      goto label$6779;
      label$6847:;
      {
       FBSTRING* vr$8399 = fb_StrAllocTempDescZEx( (uint8*)"multiply", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8399, 0 );
      }
      goto label$6779;
      label$6848:;
      {
       FBSTRING* vr$8400 = fb_StrAllocTempDescZEx( (uint8*)"n", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8400, 0 );
      }
      goto label$6779;
      label$6849:;
      {
       FBSTRING* vr$8401 = fb_StrAllocTempDescZEx( (uint8*)"name", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8401, 0 );
      }
      goto label$6779;
      label$6850:;
      {
       FBSTRING* vr$8402 = fb_StrAllocTempDescZEx( (uint8*)"namelist", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8402, 0 );
      }
      goto label$6779;
      label$6851:;
      {
       FBSTRING* vr$8403 = fb_StrAllocTempDescZEx( (uint8*)"native", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8403, 0 );
      }
      goto label$6779;
      label$6852:;
      {
       FBSTRING* vr$8404 = fb_StrAllocTempDescZEx( (uint8*)"native_binary", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8404, 0 );
      }
      goto label$6779;
      label$6853:;
      {
       FBSTRING* vr$8405 = fb_StrAllocTempDescZEx( (uint8*)"natural", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8405, 0 );
      }
      goto label$6779;
      label$6854:;
      {
       FBSTRING* vr$8406 = fb_StrAllocTempDescZEx( (uint8*)"natural_spline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8406, 0 );
      }
      goto label$6779;
      label$6855:;
      {
       FBSTRING* vr$8407 = fb_StrAllocTempDescZEx( (uint8*)"nchar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8407, 0 );
      }
      goto label$6779;
      label$6856:;
      {
       FBSTRING* vr$8408 = fb_StrAllocTempDescZEx( (uint8*)"near", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8408, 0 );
      }
      goto label$6779;
      label$6857:;
      {
       FBSTRING* vr$8409 = fb_StrAllocTempDescZEx( (uint8*)"nearest_count", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8409, 0 );
      }
      goto label$6779;
      label$6858:;
      {
       FBSTRING* vr$8410 = fb_StrAllocTempDescZEx( (uint8*)"negative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8410, 0 );
      }
      goto label$6779;
      label$6859:;
      {
       FBSTRING* vr$8411 = fb_StrAllocTempDescZEx( (uint8*)"nested_loop", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8411, 0 );
      }
      goto label$6779;
      label$6860:;
      {
       FBSTRING* vr$8412 = fb_StrAllocTempDescZEx( (uint8*)"new", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8412, 0 );
      }
      goto label$6779;
      label$6861:;
      {
       FBSTRING* vr$8413 = fb_StrAllocTempDescZEx( (uint8*)"next", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8413, 0 );
      }
      goto label$6779;
      label$6862:;
      {
       FBSTRING* vr$8414 = fb_StrAllocTempDescZEx( (uint8*)"nil", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8414, 0 );
      }
      goto label$6779;
      label$6863:;
      {
       FBSTRING* vr$8415 = fb_StrAllocTempDescZEx( (uint8*)"no", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8415, 0 );
      }
      goto label$6779;
      label$6864:;
      {
       FBSTRING* vr$8416 = fb_StrAllocTempDescZEx( (uint8*)"no_bump_scale", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8416, 0 );
      }
      goto label$6779;
      label$6865:;
      {
       FBSTRING* vr$8417 = fb_StrAllocTempDescZEx( (uint8*)"no_cache", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8417, 0 );
      }
      goto label$6779;
      label$6866:;
      {
       FBSTRING* vr$8418 = fb_StrAllocTempDescZEx( (uint8*)"no_image", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8418, 0 );
      }
      goto label$6779;
      label$6867:;
      {
       FBSTRING* vr$8419 = fb_StrAllocTempDescZEx( (uint8*)"noise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8419, 0 );
      }
      goto label$6779;
      label$6868:;
      {
       FBSTRING* vr$8420 = fb_StrAllocTempDescZEx( (uint8*)"noise_generator", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8420, 0 );
      }
      goto label$6779;
      label$6869:;
      {
       FBSTRING* vr$8421 = fb_StrAllocTempDescZEx( (uint8*)"none", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8421, 0 );
      }
      goto label$6779;
      label$6870:;
      {
       FBSTRING* vr$8422 = fb_StrAllocTempDescZEx( (uint8*)"nonlocal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8422, 0 );
      }
      goto label$6779;
      label$6871:;
      {
       FBSTRING* vr$8423 = fb_StrAllocTempDescZEx( (uint8*)"noperspective", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8423, 0 );
      }
      goto label$6779;
      label$6872:;
      {
       FBSTRING* vr$8424 = fb_StrAllocTempDescZEx( (uint8*)"no_reflection", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8424, 0 );
      }
      goto label$6779;
      label$6873:;
      {
       FBSTRING* vr$8425 = fb_StrAllocTempDescZEx( (uint8*)"normal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8425, 0 );
      }
      goto label$6779;
      label$6874:;
      {
       FBSTRING* vr$8426 = fb_StrAllocTempDescZEx( (uint8*)"normal_indices", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8426, 0 );
      }
      goto label$6779;
      label$6875:;
      {
       FBSTRING* vr$8427 = fb_StrAllocTempDescZEx( (uint8*)"normalize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8427, 0 );
      }
      goto label$6779;
      label$6876:;
      {
       FBSTRING* vr$8428 = fb_StrAllocTempDescZEx( (uint8*)"normal_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8428, 0 );
      }
      goto label$6779;
      label$6877:;
      {
       FBSTRING* vr$8429 = fb_StrAllocTempDescZEx( (uint8*)"normal_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8429, 0 );
      }
      goto label$6779;
      label$6878:;
      {
       FBSTRING* vr$8430 = fb_StrAllocTempDescZEx( (uint8*)"no_shadow", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8430, 0 );
      }
      goto label$6779;
      label$6879:;
      {
       FBSTRING* vr$8431 = fb_StrAllocTempDescZEx( (uint8*)"nostackframe", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8431, 0 );
      }
      goto label$6779;
      label$6880:;
      {
       FBSTRING* vr$8432 = fb_StrAllocTempDescZEx( (uint8*)"not", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8432, 0 );
      }
      goto label$6779;
      label$6881:;
      {
       FBSTRING* vr$8433 = fb_StrAllocTempDescZEx( (uint8*)"noteq", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8433, 0 );
      }
      goto label$6779;
      label$6882:;
      {
       FBSTRING* vr$8434 = fb_StrAllocTempDescZEx( (uint8*)"null", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8434, 0 );
      }
      goto label$6779;
      label$6883:;
      {
       FBSTRING* vr$8435 = fb_StrAllocTempDescZEx( (uint8*)"nulls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8435, 0 );
      }
      goto label$6779;
      label$6884:;
      {
       FBSTRING* vr$8436 = fb_StrAllocTempDescZEx( (uint8*)"number", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8436, 1 );
      }
      goto label$6779;
      label$6885:;
      {
       FBSTRING* vr$8437 = fb_StrAllocTempDescZEx( (uint8*)"number_of_waves", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8437, 0 );
      }
      goto label$6779;
      label$6886:;
      {
       FBSTRING* vr$8438 = fb_StrAllocTempDescZEx( (uint8*)"numeric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8438, 0 );
      }
      goto label$6779;
      label$6887:;
      {
       FBSTRING* vr$8439 = fb_StrAllocTempDescZEx( (uint8*)"numeric-edited", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8439, 0 );
      }
      goto label$6779;
      label$6888:;
      {
       FBSTRING* vr$8440 = fb_StrAllocTempDescZEx( (uint8*)"o", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8440, 0 );
      }
      goto label$6779;
      label$6889:;
      {
       FBSTRING* vr$8441 = fb_StrAllocTempDescZEx( (uint8*)"object", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8441, 0 );
      }
      goto label$6779;
      label$6890:;
      {
       FBSTRING* vr$8442 = fb_StrAllocTempDescZEx( (uint8*)"object-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8442, 0 );
      }
      goto label$6779;
      label$6891:;
      {
       FBSTRING* vr$8443 = fb_StrAllocTempDescZEx( (uint8*)"occurs", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8443, 0 );
      }
      goto label$6779;
      label$6892:;
      {
       FBSTRING* vr$8444 = fb_StrAllocTempDescZEx( (uint8*)"oct", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8444, 0 );
      }
      goto label$6779;
      label$6893:;
      {
       FBSTRING* vr$8445 = fb_StrAllocTempDescZEx( (uint8*)"octaves", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8445, 0 );
      }
      goto label$6779;
      label$6894:;
      {
       FBSTRING* vr$8446 = fb_StrAllocTempDescZEx( (uint8*)"octet_length", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8446, 0 );
      }
      goto label$6779;
      label$6895:;
      {
       FBSTRING* vr$8447 = fb_StrAllocTempDescZEx( (uint8*)"of", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8447, 0 );
      }
      goto label$6779;
      label$6896:;
      {
       FBSTRING* vr$8448 = fb_StrAllocTempDescZEx( (uint8*)"off", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8448, 0 );
      }
      goto label$6779;
      label$6897:;
      {
       FBSTRING* vr$8449 = fb_StrAllocTempDescZEx( (uint8*)"offset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8449, 0 );
      }
      goto label$6779;
      label$6898:;
      {
       FBSTRING* vr$8450 = fb_StrAllocTempDescZEx( (uint8*)"oldfpccall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8450, 0 );
      }
      goto label$6779;
      label$6899:;
      {
       FBSTRING* vr$8451 = fb_StrAllocTempDescZEx( (uint8*)"omega", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8451, 0 );
      }
      goto label$6779;
      label$6900:;
      {
       FBSTRING* vr$8452 = fb_StrAllocTempDescZEx( (uint8*)"omitted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8452, 0 );
      }
      goto label$6779;
      label$6901:;
      {
       FBSTRING* vr$8453 = fb_StrAllocTempDescZEx( (uint8*)"omnimax", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8453, 0 );
      }
      goto label$6779;
      label$6902:;
      {
       FBSTRING* vr$8454 = fb_StrAllocTempDescZEx( (uint8*)"on", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8454, 0 );
      }
      goto label$6779;
      label$6903:;
      {
       FBSTRING* vr$8455 = fb_StrAllocTempDescZEx( (uint8*)"once", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8455, 0 );
      }
      goto label$6779;
      label$6904:;
      {
       FBSTRING* vr$8456 = fb_StrAllocTempDescZEx( (uint8*)"onion", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8456, 0 );
      }
      goto label$6779;
      label$6905:;
      {
       FBSTRING* vr$8457 = fb_StrAllocTempDescZEx( (uint8*)"open", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8457, 0 );
      }
      goto label$6779;
      label$6906:;
      {
       FBSTRING* vr$8458 = fb_StrAllocTempDescZEx( (uint8*)"operator", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8458, 0 );
      }
      goto label$6779;
      label$6907:;
      {
       FBSTRING* vr$8459 = fb_StrAllocTempDescZEx( (uint8*)"option", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8459, 0 );
      }
      goto label$6779;
      label$6908:;
      {
       FBSTRING* vr$8460 = fb_StrAllocTempDescZEx( (uint8*)"optional", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8460, 0 );
      }
      goto label$6779;
      label$6909:;
      {
       FBSTRING* vr$8461 = fb_StrAllocTempDescZEx( (uint8*)"options", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8461, 0 );
      }
      goto label$6779;
      label$6910:;
      {
       FBSTRING* vr$8462 = fb_StrAllocTempDescZEx( (uint8*)"or", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8462, 0 );
      }
      goto label$6779;
      label$6911:;
      {
       FBSTRING* vr$8463 = fb_StrAllocTempDescZEx( (uint8*)"or_bits", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8463, 0 );
      }
      goto label$6779;
      label$6912:;
      {
       FBSTRING* vr$8464 = fb_StrAllocTempDescZEx( (uint8*)"order", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8464, 0 );
      }
      goto label$6779;
      label$6913:;
      {
       FBSTRING* vr$8465 = fb_StrAllocTempDescZEx( (uint8*)"ordered", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8465, 0 );
      }
      goto label$6779;
      label$6914:;
      {
       FBSTRING* vr$8466 = fb_StrAllocTempDescZEx( (uint8*)"oren_nayar", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8466, 0 );
      }
      goto label$6779;
      label$6915:;
      {
       FBSTRING* vr$8467 = fb_StrAllocTempDescZEx( (uint8*)"organization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8467, 0 );
      }
      goto label$6779;
      label$6916:;
      {
       FBSTRING* vr$8468 = fb_StrAllocTempDescZEx( (uint8*)"orient", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8468, 0 );
      }
      goto label$6779;
      label$6917:;
      {
       FBSTRING* vr$8469 = fb_StrAllocTempDescZEx( (uint8*)"orientation", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8469, 0 );
      }
      goto label$6779;
      label$6918:;
      {
       FBSTRING* vr$8470 = fb_StrAllocTempDescZEx( (uint8*)"orthographic", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8470, 0 );
      }
      goto label$6779;
      label$6919:;
      {
       FBSTRING* vr$8471 = fb_StrAllocTempDescZEx( (uint8*)"other", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8471, 0 );
      }
      goto label$6779;
      label$6920:;
      {
       FBSTRING* vr$8472 = fb_StrAllocTempDescZEx( (uint8*)"out", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8472, 0 );
      }
      goto label$6779;
      label$6921:;
      {
       FBSTRING* vr$8473 = fb_StrAllocTempDescZEx( (uint8*)"outer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8473, 0 );
      }
      goto label$6779;
      label$6922:;
      {
       FBSTRING* vr$8474 = fb_StrAllocTempDescZEx( (uint8*)"output", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8474, 0 );
      }
      goto label$6779;
      label$6923:;
      {
       FBSTRING* vr$8475 = fb_StrAllocTempDescZEx( (uint8*)"overflow", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8475, 0 );
      }
      goto label$6779;
      label$6924:;
      {
       FBSTRING* vr$8476 = fb_StrAllocTempDescZEx( (uint8*)"overlaps", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8476, 0 );
      }
      goto label$6779;
      label$6925:;
      {
       FBSTRING* vr$8477 = fb_StrAllocTempDescZEx( (uint8*)"override", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8477, 0 );
      }
      goto label$6779;
      label$6926:;
      {
       FBSTRING* vr$8478 = fb_StrAllocTempDescZEx( (uint8*)"p", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8478, 0 );
      }
      goto label$6779;
      label$6927:;
      {
       FBSTRING* vr$8479 = fb_StrAllocTempDescZEx( (uint8*)"packed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8479, 0 );
      }
      goto label$6779;
      label$6928:;
      {
       FBSTRING* vr$8480 = fb_StrAllocTempDescZEx( (uint8*)"packed-decimal", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8480, 0 );
      }
      goto label$6779;
      label$6929:;
      {
       FBSTRING* vr$8481 = fb_StrAllocTempDescZEx( (uint8*)"padding", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8481, 0 );
      }
      goto label$6779;
      label$6930:;
      {
       FBSTRING* vr$8482 = fb_StrAllocTempDescZEx( (uint8*)"page", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8482, 0 );
      }
      goto label$6779;
      label$6931:;
      {
       FBSTRING* vr$8483 = fb_StrAllocTempDescZEx( (uint8*)"page-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8483, 0 );
      }
      goto label$6779;
      label$6932:;
      {
       FBSTRING* vr$8484 = fb_StrAllocTempDescZEx( (uint8*)"paint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8484, 0 );
      }
      goto label$6779;
      label$6933:;
      {
       FBSTRING* vr$8485 = fb_StrAllocTempDescZEx( (uint8*)"palette", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8485, 0 );
      }
      goto label$6779;
      label$6934:;
      {
       FBSTRING* vr$8486 = fb_StrAllocTempDescZEx( (uint8*)"panoramic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8486, 0 );
      }
      goto label$6779;
      label$6935:;
      {
       FBSTRING* vr$8487 = fb_StrAllocTempDescZEx( (uint8*)"parallel", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8487, 0 );
      }
      goto label$6779;
      label$6936:;
      {
       FBSTRING* vr$8488 = fb_StrAllocTempDescZEx( (uint8*)"parameter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8488, 0 );
      }
      goto label$6779;
      label$6937:;
      {
       FBSTRING* vr$8489 = fb_StrAllocTempDescZEx( (uint8*)"parametric", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8489, 0 );
      }
      goto label$6779;
      label$6938:;
      {
       FBSTRING* vr$8490 = fb_StrAllocTempDescZEx( (uint8*)"partition", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8490, 0 );
      }
      goto label$6779;
      label$6939:;
      {
       FBSTRING* vr$8491 = fb_StrAllocTempDescZEx( (uint8*)"pascal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8491, 0 );
      }
      goto label$6779;
      label$6940:;
      {
       FBSTRING* vr$8492 = fb_StrAllocTempDescZEx( (uint8*)"pass", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8492, 0 );
      }
      goto label$6779;
      label$6941:;
      {
       FBSTRING* vr$8493 = fb_StrAllocTempDescZEx( (uint8*)"pass_through", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8493, 0 );
      }
      goto label$6779;
      label$6942:;
      {
       FBSTRING* vr$8494 = fb_StrAllocTempDescZEx( (uint8*)"password", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8494, 0 );
      }
      goto label$6779;
      label$6943:;
      {
       FBSTRING* vr$8495 = fb_StrAllocTempDescZEx( (uint8*)"pattern", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8495, 0 );
      }
      goto label$6779;
      label$6944:;
      {
       FBSTRING* vr$8496 = fb_StrAllocTempDescZEx( (uint8*)"pause", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8496, 0 );
      }
      goto label$6779;
      label$6945:;
      {
       FBSTRING* vr$8497 = fb_StrAllocTempDescZEx( (uint8*)"pcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8497, 0 );
      }
      goto label$6779;
      label$6946:;
      {
       FBSTRING* vr$8498 = fb_StrAllocTempDescZEx( (uint8*)"peek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8498, 0 );
      }
      goto label$6779;
      label$6947:;
      {
       FBSTRING* vr$8499 = fb_StrAllocTempDescZEx( (uint8*)"pen", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8499, 0 );
      }
      goto label$6779;
      label$6948:;
      {
       FBSTRING* vr$8500 = fb_StrAllocTempDescZEx( (uint8*)"perform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8500, 0 );
      }
      goto label$6779;
      label$6949:;
      {
       FBSTRING* vr$8501 = fb_StrAllocTempDescZEx( (uint8*)"perspective", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8501, 0 );
      }
      goto label$6779;
      label$6950:;
      {
       FBSTRING* vr$8502 = fb_StrAllocTempDescZEx( (uint8*)"pf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8502, 0 );
      }
      goto label$6779;
      label$6951:;
      {
       FBSTRING* vr$8503 = fb_StrAllocTempDescZEx( (uint8*)"pgm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8503, 0 );
      }
      goto label$6779;
      label$6952:;
      {
       FBSTRING* vr$8504 = fb_StrAllocTempDescZEx( (uint8*)"ph", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8504, 0 );
      }
      goto label$6779;
      label$6953:;
      {
       FBSTRING* vr$8505 = fb_StrAllocTempDescZEx( (uint8*)"phase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8505, 0 );
      }
      goto label$6779;
      label$6954:;
      {
       FBSTRING* vr$8506 = fb_StrAllocTempDescZEx( (uint8*)"phong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8506, 0 );
      }
      goto label$6779;
      label$6955:;
      {
       FBSTRING* vr$8507 = fb_StrAllocTempDescZEx( (uint8*)"phong_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8507, 0 );
      }
      goto label$6779;
      label$6956:;
      {
       FBSTRING* vr$8508 = fb_StrAllocTempDescZEx( (uint8*)"photons", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8508, 0 );
      }
      goto label$6779;
      label$6957:;
      {
       FBSTRING* vr$8509 = fb_StrAllocTempDescZEx( (uint8*)"pi", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8509, 0 );
      }
      goto label$6779;
      label$6958:;
      {
       FBSTRING* vr$8510 = fb_StrAllocTempDescZEx( (uint8*)"pic", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8510, 0 );
      }
      goto label$6779;
      label$6959:;
      {
       FBSTRING* vr$8511 = fb_StrAllocTempDescZEx( (uint8*)"picture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8511, 0 );
      }
      goto label$6779;
      label$6960:;
      {
       FBSTRING* vr$8512 = fb_StrAllocTempDescZEx( (uint8*)"pigment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8512, 0 );
      }
      goto label$6779;
      label$6961:;
      {
       FBSTRING* vr$8513 = fb_StrAllocTempDescZEx( (uint8*)"pigment_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8513, 0 );
      }
      goto label$6779;
      label$6962:;
      {
       FBSTRING* vr$8514 = fb_StrAllocTempDescZEx( (uint8*)"pigment_pattern", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8514, 0 );
      }
      goto label$6779;
      label$6963:;
      {
       FBSTRING* vr$8515 = fb_StrAllocTempDescZEx( (uint8*)"planar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8515, 0 );
      }
      goto label$6779;
      label$6964:;
      {
       FBSTRING* vr$8516 = fb_StrAllocTempDescZEx( (uint8*)"plane", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8516, 0 );
      }
      goto label$6779;
      label$6965:;
      {
       FBSTRING* vr$8517 = fb_StrAllocTempDescZEx( (uint8*)"play", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8517, 0 );
      }
      goto label$6779;
      label$6966:;
      {
       FBSTRING* vr$8518 = fb_StrAllocTempDescZEx( (uint8*)"plus", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8518, 0 );
      }
      goto label$6779;
      label$6967:;
      {
       FBSTRING* vr$8519 = fb_StrAllocTempDescZEx( (uint8*)"pmap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8519, 0 );
      }
      goto label$6779;
      label$6968:;
      {
       FBSTRING* vr$8520 = fb_StrAllocTempDescZEx( (uint8*)"png", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8520, 0 );
      }
      goto label$6779;
      label$6969:;
      {
       FBSTRING* vr$8521 = fb_StrAllocTempDescZEx( (uint8*)"pnoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8521, 0 );
      }
      goto label$6779;
      label$6970:;
      {
       FBSTRING* vr$8522 = fb_StrAllocTempDescZEx( (uint8*)"point", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8522, 0 );
      }
      goto label$6779;
      label$6971:;
      {
       FBSTRING* vr$8523 = fb_StrAllocTempDescZEx( (uint8*)"point_at", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8523, 0 );
      }
      goto label$6779;
      label$6972:;
      {
       FBSTRING* vr$8524 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_get", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8524, 0 );
      }
      goto label$6779;
      label$6973:;
      {
       FBSTRING* vr$8525 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_search", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8525, 0 );
      }
      goto label$6779;
      label$6974:;
      {
       FBSTRING* vr$8526 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_write", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8526, 0 );
      }
      goto label$6779;
      label$6975:;
      {
       FBSTRING* vr$8527 = fb_StrAllocTempDescZEx( (uint8*)"pointer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8527, 0 );
      }
      goto label$6779;
      label$6976:;
      {
       FBSTRING* vr$8528 = fb_StrAllocTempDescZEx( (uint8*)"poke", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8528, 0 );
      }
      goto label$6779;
      label$6977:;
      {
       FBSTRING* vr$8529 = fb_StrAllocTempDescZEx( (uint8*)"poly", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8529, 0 );
      }
      goto label$6779;
      label$6978:;
      {
       FBSTRING* vr$8530 = fb_StrAllocTempDescZEx( (uint8*)"polygon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8530, 0 );
      }
      goto label$6779;
      label$6979:;
      {
       FBSTRING* vr$8531 = fb_StrAllocTempDescZEx( (uint8*)"poly_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8531, 0 );
      }
      goto label$6779;
      label$6980:;
      {
       FBSTRING* vr$8532 = fb_StrAllocTempDescZEx( (uint8*)"pos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8532, 0 );
      }
      goto label$6779;
      label$6981:;
      {
       FBSTRING* vr$8533 = fb_StrAllocTempDescZEx( (uint8*)"position", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8533, 0 );
      }
      goto label$6779;
      label$6982:;
      {
       FBSTRING* vr$8534 = fb_StrAllocTempDescZEx( (uint8*)"position_b", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8534, 0 );
      }
      goto label$6779;
      label$6983:;
      {
       FBSTRING* vr$8535 = fb_StrAllocTempDescZEx( (uint8*)"position_mb", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8535, 0 );
      }
      goto label$6779;
      label$6984:;
      {
       FBSTRING* vr$8536 = fb_StrAllocTempDescZEx( (uint8*)"positive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8536, 0 );
      }
      goto label$6779;
      label$6985:;
      {
       FBSTRING* vr$8537 = fb_StrAllocTempDescZEx( (uint8*)"pot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8537, 0 );
      }
      goto label$6779;
      label$6986:;
      {
       FBSTRING* vr$8538 = fb_StrAllocTempDescZEx( (uint8*)"pow", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8538, 0 );
      }
      goto label$6779;
      label$6987:;
      {
       FBSTRING* vr$8539 = fb_StrAllocTempDescZEx( (uint8*)"ppm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8539, 0 );
      }
      goto label$6779;
      label$6988:;
      {
       FBSTRING* vr$8540 = fb_StrAllocTempDescZEx( (uint8*)"precision", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8540, 0 );
      }
      goto label$6779;
      label$6989:;
      {
       FBSTRING* vr$8541 = fb_StrAllocTempDescZEx( (uint8*)"precompute", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8541, 0 );
      }
      goto label$6779;
      label$6990:;
      {
       FBSTRING* vr$8542 = fb_StrAllocTempDescZEx( (uint8*)"preset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8542, 0 );
      }
      goto label$6779;
      label$6991:;
      {
       FBSTRING* vr$8543 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_end", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8543, 0 );
      }
      goto label$6779;
      label$6992:;
      {
       FBSTRING* vr$8544 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_start", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8544, 0 );
      }
      goto label$6779;
      label$6993:;
      {
       FBSTRING* vr$8545 = fb_StrAllocTempDescZEx( (uint8*)"print", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8545, 0 );
      }
      goto label$6779;
      label$6994:;
      {
       FBSTRING* vr$8546 = fb_StrAllocTempDescZEx( (uint8*)"printf", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8546, 0 );
      }
      goto label$6779;
      label$6995:;
      {
       FBSTRING* vr$8547 = fb_StrAllocTempDescZEx( (uint8*)"printing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8547, 0 );
      }
      goto label$6779;
      label$6996:;
      {
       FBSTRING* vr$8548 = fb_StrAllocTempDescZEx( (uint8*)"prism", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8548, 0 );
      }
      goto label$6779;
      label$6997:;
      {
       FBSTRING* vr$8549 = fb_StrAllocTempDescZEx( (uint8*)"private", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8549, 0 );
      }
      goto label$6779;
      label$6998:;
      {
       FBSTRING* vr$8550 = fb_StrAllocTempDescZEx( (uint8*)"procedure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8550, 0 );
      }
      goto label$6779;
      label$6999:;
      {
       FBSTRING* vr$8551 = fb_StrAllocTempDescZEx( (uint8*)"procedure-pointer", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8551, 0 );
      }
      goto label$6779;
      label$7000:;
      {
       FBSTRING* vr$8552 = fb_StrAllocTempDescZEx( (uint8*)"procedures", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8552, 0 );
      }
      goto label$6779;
      label$7001:;
      {
       FBSTRING* vr$8553 = fb_StrAllocTempDescZEx( (uint8*)"proceed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8553, 0 );
      }
      goto label$6779;
      label$7002:;
      {
       FBSTRING* vr$8554 = fb_StrAllocTempDescZEx( (uint8*)"processing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8554, 0 );
      }
      goto label$6779;
      label$7003:;
      {
       FBSTRING* vr$8555 = fb_StrAllocTempDescZEx( (uint8*)"prod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8555, 0 );
      }
      goto label$6779;
      label$7004:;
      {
       FBSTRING* vr$8556 = fb_StrAllocTempDescZEx( (uint8*)"program", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8556, 0 );
      }
      goto label$6779;
      label$7005:;
      {
       FBSTRING* vr$8557 = fb_StrAllocTempDescZEx( (uint8*)"program-id", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8557, 0 );
      }
      goto label$6779;
      label$7006:;
      {
       FBSTRING* vr$8558 = fb_StrAllocTempDescZEx( (uint8*)"projected_through", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8558, 0 );
      }
      goto label$6779;
      label$7007:;
      {
       FBSTRING* vr$8559 = fb_StrAllocTempDescZEx( (uint8*)"property", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8559, 0 );
      }
      goto label$6779;
      label$7008:;
      {
       FBSTRING* vr$8560 = fb_StrAllocTempDescZEx( (uint8*)"protected", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8560, 0 );
      }
      goto label$6779;
      label$7009:;
      {
       FBSTRING* vr$8561 = fb_StrAllocTempDescZEx( (uint8*)"pset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8561, 0 );
      }
      goto label$6779;
      label$7010:;
      {
       FBSTRING* vr$8562 = fb_StrAllocTempDescZEx( (uint8*)"psnoise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8562, 0 );
      }
      goto label$6779;
      label$7011:;
      {
       FBSTRING* vr$8563 = fb_StrAllocTempDescZEx( (uint8*)"ptype", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8563, 0 );
      }
      goto label$6779;
      label$7012:;
      {
       FBSTRING* vr$8564 = fb_StrAllocTempDescZEx( (uint8*)"public", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8564, 0 );
      }
      goto label$6779;
      label$7013:;
      {
       FBSTRING* vr$8565 = fb_StrAllocTempDescZEx( (uint8*)"published", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8565, 0 );
      }
      goto label$6779;
      label$7014:;
      {
       FBSTRING* vr$8566 = fb_StrAllocTempDescZEx( (uint8*)"purge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8566, 0 );
      }
      goto label$6779;
      label$7015:;
      {
       FBSTRING* vr$8567 = fb_StrAllocTempDescZEx( (uint8*)"put", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8567, 0 );
      }
      goto label$6779;
      label$7016:;
      {
       FBSTRING* vr$8568 = fb_StrAllocTempDescZEx( (uint8*)"pwr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8568, 0 );
      }
      goto label$6779;
      label$7017:;
      {
       FBSTRING* vr$8569 = fb_StrAllocTempDescZEx( (uint8*)"q", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8569, 0 );
      }
      goto label$6779;
      label$7018:;
      {
       FBSTRING* vr$8570 = fb_StrAllocTempDescZEx( (uint8*)"quadratic_spline", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8570, 0 );
      }
      goto label$6779;
      label$7019:;
      {
       FBSTRING* vr$8571 = fb_StrAllocTempDescZEx( (uint8*)"quadric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8571, 0 );
      }
      goto label$6779;
      label$7020:;
      {
       FBSTRING* vr$8572 = fb_StrAllocTempDescZEx( (uint8*)"quartic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8572, 0 );
      }
      goto label$6779;
      label$7021:;
      {
       FBSTRING* vr$8573 = fb_StrAllocTempDescZEx( (uint8*)"quaternion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8573, 0 );
      }
      goto label$6779;
      label$7022:;
      {
       FBSTRING* vr$8574 = fb_StrAllocTempDescZEx( (uint8*)"queue", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8574, 0 );
      }
      goto label$6779;
      label$7023:;
      {
       FBSTRING* vr$8575 = fb_StrAllocTempDescZEx( (uint8*)"quick_color", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8575, 0 );
      }
      goto label$6779;
      label$7024:;
      {
       FBSTRING* vr$8576 = fb_StrAllocTempDescZEx( (uint8*)"quick_colour", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8576, 0 );
      }
      goto label$6779;
      label$7025:;
      {
       FBSTRING* vr$8577 = fb_StrAllocTempDescZEx( (uint8*)"quilted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8577, 0 );
      }
      goto label$6779;
      label$7026:;
      {
       FBSTRING* vr$8578 = fb_StrAllocTempDescZEx( (uint8*)"quote", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8578, 0 );
      }
      goto label$6779;
      label$7027:;
      {
       FBSTRING* vr$8579 = fb_StrAllocTempDescZEx( (uint8*)"quotes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8579, 0 );
      }
      goto label$6779;
      label$7028:;
      {
       FBSTRING* vr$8580 = fb_StrAllocTempDescZEx( (uint8*)"r", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8580, 0 );
      }
      goto label$6779;
      label$7029:;
      {
       FBSTRING* vr$8581 = fb_StrAllocTempDescZEx( (uint8*)"radial", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8581, 0 );
      }
      goto label$6779;
      label$7030:;
      {
       FBSTRING* vr$8582 = fb_StrAllocTempDescZEx( (uint8*)"radians", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8582, 0 );
      }
      goto label$6779;
      label$7031:;
      {
       FBSTRING* vr$8583 = fb_StrAllocTempDescZEx( (uint8*)"radiosity", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8583, 0 );
      }
      goto label$6779;
      label$7032:;
      {
       FBSTRING* vr$8584 = fb_StrAllocTempDescZEx( (uint8*)"radius", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8584, 0 );
      }
      goto label$6779;
      label$7033:;
      {
       FBSTRING* vr$8585 = fb_StrAllocTempDescZEx( (uint8*)"rainbow", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8585, 0 );
      }
      goto label$6779;
      label$7034:;
      {
       FBSTRING* vr$8586 = fb_StrAllocTempDescZEx( (uint8*)"raise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8586, 0 );
      }
      goto label$6779;
      label$7035:;
      {
       FBSTRING* vr$8587 = fb_StrAllocTempDescZEx( (uint8*)"ramp_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8587, 0 );
      }
      goto label$6779;
      label$7036:;
      {
       FBSTRING* vr$8588 = fb_StrAllocTempDescZEx( (uint8*)"rand", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8588, 0 );
      }
      goto label$6779;
      label$6780:;
      static const void* tmp$4521[256ll] = {
       &&label$6781,
       &&label$6782,
       &&label$6783,
       &&label$6784,
       &&label$6785,
       &&label$6786,
       &&label$6787,
       &&label$6788,
       &&label$6789,
       &&label$6790,
       &&label$6791,
       &&label$6792,
       &&label$6793,
       &&label$6794,
       &&label$6795,
       &&label$6796,
       &&label$6797,
       &&label$6798,
       &&label$6799,
       &&label$6800,
       &&label$6801,
       &&label$6802,
       &&label$6803,
       &&label$6804,
       &&label$6805,
       &&label$6806,
       &&label$6807,
       &&label$6808,
       &&label$6809,
       &&label$6810,
       &&label$6811,
       &&label$6812,
       &&label$6813,
       &&label$6814,
       &&label$6815,
       &&label$6816,
       &&label$6817,
       &&label$6818,
       &&label$6819,
       &&label$6820,
       &&label$6821,
       &&label$6822,
       &&label$6823,
       &&label$6824,
       &&label$6825,
       &&label$6826,
       &&label$6827,
       &&label$6828,
       &&label$6829,
       &&label$6830,
       &&label$6831,
       &&label$6832,
       &&label$6833,
       &&label$6834,
       &&label$6835,
       &&label$6836,
       &&label$6837,
       &&label$6838,
       &&label$6839,
       &&label$6840,
       &&label$6841,
       &&label$6842,
       &&label$6843,
       &&label$6844,
       &&label$6845,
       &&label$6846,
       &&label$6847,
       &&label$6848,
       &&label$6849,
       &&label$6850,
       &&label$6851,
       &&label$6852,
       &&label$6853,
       &&label$6854,
       &&label$6855,
       &&label$6856,
       &&label$6857,
       &&label$6858,
       &&label$6859,
       &&label$6860,
       &&label$6861,
       &&label$6862,
       &&label$6863,
       &&label$6864,
       &&label$6865,
       &&label$6866,
       &&label$6867,
       &&label$6868,
       &&label$6869,
       &&label$6870,
       &&label$6871,
       &&label$6872,
       &&label$6873,
       &&label$6874,
       &&label$6875,
       &&label$6876,
       &&label$6877,
       &&label$6878,
       &&label$6879,
       &&label$6880,
       &&label$6881,
       &&label$6882,
       &&label$6883,
       &&label$6884,
       &&label$6885,
       &&label$6886,
       &&label$6887,
       &&label$6888,
       &&label$6889,
       &&label$6890,
       &&label$6891,
       &&label$6892,
       &&label$6893,
       &&label$6894,
       &&label$6895,
       &&label$6896,
       &&label$6897,
       &&label$6898,
       &&label$6899,
       &&label$6900,
       &&label$6901,
       &&label$6902,
       &&label$6903,
       &&label$6904,
       &&label$6905,
       &&label$6906,
       &&label$6907,
       &&label$6908,
       &&label$6909,
       &&label$6910,
       &&label$6911,
       &&label$6912,
       &&label$6913,
       &&label$6914,
       &&label$6915,
       &&label$6916,
       &&label$6917,
       &&label$6918,
       &&label$6919,
       &&label$6920,
       &&label$6921,
       &&label$6922,
       &&label$6923,
       &&label$6924,
       &&label$6925,
       &&label$6926,
       &&label$6927,
       &&label$6928,
       &&label$6929,
       &&label$6930,
       &&label$6931,
       &&label$6932,
       &&label$6933,
       &&label$6934,
       &&label$6935,
       &&label$6936,
       &&label$6937,
       &&label$6938,
       &&label$6939,
       &&label$6940,
       &&label$6941,
       &&label$6942,
       &&label$6943,
       &&label$6944,
       &&label$6945,
       &&label$6946,
       &&label$6947,
       &&label$6948,
       &&label$6949,
       &&label$6950,
       &&label$6951,
       &&label$6952,
       &&label$6953,
       &&label$6954,
       &&label$6955,
       &&label$6956,
       &&label$6957,
       &&label$6958,
       &&label$6959,
       &&label$6960,
       &&label$6961,
       &&label$6962,
       &&label$6963,
       &&label$6964,
       &&label$6965,
       &&label$6966,
       &&label$6967,
       &&label$6968,
       &&label$6969,
       &&label$6970,
       &&label$6971,
       &&label$6972,
       &&label$6973,
       &&label$6974,
       &&label$6975,
       &&label$6976,
       &&label$6977,
       &&label$6978,
       &&label$6979,
       &&label$6980,
       &&label$6981,
       &&label$6982,
       &&label$6983,
       &&label$6984,
       &&label$6985,
       &&label$6986,
       &&label$6987,
       &&label$6988,
       &&label$6989,
       &&label$6990,
       &&label$6991,
       &&label$6992,
       &&label$6993,
       &&label$6994,
       &&label$6995,
       &&label$6996,
       &&label$6997,
       &&label$6998,
       &&label$6999,
       &&label$7000,
       &&label$7001,
       &&label$7002,
       &&label$7003,
       &&label$7004,
       &&label$7005,
       &&label$7006,
       &&label$7007,
       &&label$7008,
       &&label$7009,
       &&label$7010,
       &&label$7011,
       &&label$7012,
       &&label$7013,
       &&label$7014,
       &&label$7015,
       &&label$7016,
       &&label$7017,
       &&label$7018,
       &&label$7019,
       &&label$7020,
       &&label$7021,
       &&label$7022,
       &&label$7023,
       &&label$7024,
       &&label$7025,
       &&label$7026,
       &&label$7027,
       &&label$7028,
       &&label$7029,
       &&label$7030,
       &&label$7031,
       &&label$7032,
       &&label$7033,
       &&label$7034,
       &&label$7035,
       &&label$7036,
      };
      if( TMP$3209$6 > 255ull ) goto label$6779;
      goto *tmp$4521[TMP$3209$6 - 0ull];
      label$6779:;
     }
    }
    goto label$5883;
    label$7037:;
    {
     {
      uint64 TMP$3461$6;
      TMP$3461$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      if( TMP$3461$6 != 0ull ) goto label$7039;
      label$7040:;
      {
       FBSTRING* vr$8590 = fb_StrAllocTempDescZEx( (uint8*)"random", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8590, 0 );
      }
      goto label$7038;
      label$7039:;
      if( TMP$3461$6 != 1ull ) goto label$7041;
      label$7042:;
      {
       FBSTRING* vr$8591 = fb_StrAllocTempDescZEx( (uint8*)"randomize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8591, 0 );
      }
      goto label$7038;
      label$7041:;
      if( TMP$3461$6 != 2ull ) goto label$7043;
      label$7044:;
      {
       FBSTRING* vr$8592 = fb_StrAllocTempDescZEx( (uint8*)"range", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8592, 0 );
      }
      goto label$7038;
      label$7043:;
      if( TMP$3461$6 != 3ull ) goto label$7045;
      label$7046:;
      {
       FBSTRING* vr$8593 = fb_StrAllocTempDescZEx( (uint8*)"ratio", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8593, 0 );
      }
      goto label$7038;
      label$7045:;
      if( TMP$3461$6 != 4ull ) goto label$7047;
      label$7048:;
      {
       FBSTRING* vr$8594 = fb_StrAllocTempDescZEx( (uint8*)"raytype", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8594, 0 );
      }
      goto label$7038;
      label$7047:;
      if( TMP$3461$6 != 5ull ) goto label$7049;
      label$7050:;
      {
       FBSTRING* vr$8595 = fb_StrAllocTempDescZEx( (uint8*)"rd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8595, 0 );
      }
      goto label$7038;
      label$7049:;
      if( TMP$3461$6 != 6ull ) goto label$7051;
      label$7052:;
      {
       FBSTRING* vr$8596 = fb_StrAllocTempDescZEx( (uint8*)"read", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8596, 0 );
      }
      goto label$7038;
      label$7051:;
      if( TMP$3461$6 != 7ull ) goto label$7053;
      label$7054:;
      {
       FBSTRING* vr$8597 = fb_StrAllocTempDescZEx( (uint8*)"ready", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8597, 0 );
      }
      goto label$7038;
      label$7053:;
      if( TMP$3461$6 != 8ull ) goto label$7055;
      label$7056:;
      {
       FBSTRING* vr$8598 = fb_StrAllocTempDescZEx( (uint8*)"real", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8598, 0 );
      }
      goto label$7038;
      label$7055:;
      if( TMP$3461$6 != 9ull ) goto label$7057;
      label$7058:;
      {
       FBSTRING* vr$8599 = fb_StrAllocTempDescZEx( (uint8*)"receive", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8599, 0 );
      }
      goto label$7038;
      label$7057:;
      if( TMP$3461$6 != 10ull ) goto label$7059;
      label$7060:;
      {
       FBSTRING* vr$8600 = fb_StrAllocTempDescZEx( (uint8*)"reciprocal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8600, 0 );
      }
      goto label$7038;
      label$7059:;
      if( TMP$3461$6 != 11ull ) goto label$7061;
      label$7062:;
      {
       FBSTRING* vr$8601 = fb_StrAllocTempDescZEx( (uint8*)"record", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8601, 0 );
      }
      goto label$7038;
      label$7061:;
      if( TMP$3461$6 != 12ull ) goto label$7063;
      label$7064:;
      {
       FBSTRING* vr$8602 = fb_StrAllocTempDescZEx( (uint8*)"recording", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8602, 0 );
      }
      goto label$7038;
      label$7063:;
      if( TMP$3461$6 != 13ull ) goto label$7065;
      label$7066:;
      {
       FBSTRING* vr$8603 = fb_StrAllocTempDescZEx( (uint8*)"records", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8603, 0 );
      }
      goto label$7038;
      label$7065:;
      if( TMP$3461$6 != 14ull ) goto label$7067;
      label$7068:;
      {
       FBSTRING* vr$8604 = fb_StrAllocTempDescZEx( (uint8*)"recursion_limit", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8604, 0 );
      }
      goto label$7038;
      label$7067:;
      if( TMP$3461$6 != 15ull ) goto label$7069;
      label$7070:;
      {
       FBSTRING* vr$8605 = fb_StrAllocTempDescZEx( (uint8*)"recursive", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8605, 0 );
      }
      goto label$7038;
      label$7069:;
      if( TMP$3461$6 != 16ull ) goto label$7071;
      label$7072:;
      {
       FBSTRING* vr$8606 = fb_StrAllocTempDescZEx( (uint8*)"red", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8606, 0 );
      }
      goto label$7038;
      label$7071:;
      if( TMP$3461$6 != 17ull ) goto label$7073;
      label$7074:;
      {
       FBSTRING* vr$8607 = fb_StrAllocTempDescZEx( (uint8*)"redefines", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8607, 0 );
      }
      goto label$7038;
      label$7073:;
      if( TMP$3461$6 != 18ull ) goto label$7075;
      label$7076:;
      {
       FBSTRING* vr$8608 = fb_StrAllocTempDescZEx( (uint8*)"reel", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8608, 0 );
      }
      goto label$7038;
      label$7075:;
      if( TMP$3461$6 != 19ull ) goto label$7077;
      label$7078:;
      {
       FBSTRING* vr$8609 = fb_StrAllocTempDescZEx( (uint8*)"reference", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8609, 0 );
      }
      goto label$7038;
      label$7077:;
      if( TMP$3461$6 != 20ull ) goto label$7079;
      label$7080:;
      {
       FBSTRING* vr$8610 = fb_StrAllocTempDescZEx( (uint8*)"references", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8610, 0 );
      }
      goto label$7038;
      label$7079:;
      if( TMP$3461$6 != 21ull ) goto label$7081;
      label$7082:;
      {
       FBSTRING* vr$8611 = fb_StrAllocTempDescZEx( (uint8*)"reflect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8611, 0 );
      }
      goto label$7038;
      label$7081:;
      if( TMP$3461$6 != 22ull ) goto label$7083;
      label$7084:;
      {
       FBSTRING* vr$8612 = fb_StrAllocTempDescZEx( (uint8*)"reflection", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8612, 0 );
      }
      goto label$7038;
      label$7083:;
      if( TMP$3461$6 != 23ull ) goto label$7085;
      label$7086:;
      {
       FBSTRING* vr$8613 = fb_StrAllocTempDescZEx( (uint8*)"reflection_exponent", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8613, 0 );
      }
      goto label$7038;
      label$7085:;
      if( TMP$3461$6 != 24ull ) goto label$7087;
      label$7088:;
      {
       FBSTRING* vr$8614 = fb_StrAllocTempDescZEx( (uint8*)"refract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8614, 0 );
      }
      goto label$7038;
      label$7087:;
      if( TMP$3461$6 != 25ull ) goto label$7089;
      label$7090:;
      {
       FBSTRING* vr$8615 = fb_StrAllocTempDescZEx( (uint8*)"refraction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8615, 0 );
      }
      goto label$7038;
      label$7089:;
      if( TMP$3461$6 != 26ull ) goto label$7091;
      label$7092:;
      {
       FBSTRING* vr$8616 = fb_StrAllocTempDescZEx( (uint8*)"regex_match", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8616, 0 );
      }
      goto label$7038;
      label$7091:;
      if( TMP$3461$6 != 27ull ) goto label$7093;
      label$7094:;
      {
       FBSTRING* vr$8617 = fb_StrAllocTempDescZEx( (uint8*)"regex_search", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8617, 0 );
      }
      goto label$7038;
      label$7093:;
      if( TMP$3461$6 != 28ull ) goto label$7095;
      label$7096:;
      {
       FBSTRING* vr$8618 = fb_StrAllocTempDescZEx( (uint8*)"register", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8618, 0 );
      }
      goto label$7038;
      label$7095:;
      if( TMP$3461$6 != 29ull ) goto label$7097;
      label$7098:;
      {
       FBSTRING* vr$8619 = fb_StrAllocTempDescZEx( (uint8*)"reintroduce", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8619, 0 );
      }
      goto label$7038;
      label$7097:;
      if( TMP$3461$6 != 30ull ) goto label$7099;
      label$7100:;
      {
       FBSTRING* vr$8620 = fb_StrAllocTempDescZEx( (uint8*)"relative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8620, 0 );
      }
      goto label$7038;
      label$7099:;
      if( TMP$3461$6 != 31ull ) goto label$7101;
      label$7102:;
      {
       FBSTRING* vr$8621 = fb_StrAllocTempDescZEx( (uint8*)"release", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8621, 0 );
      }
      goto label$7038;
      label$7101:;
      if( TMP$3461$6 != 32ull ) goto label$7103;
      label$7104:;
      {
       FBSTRING* vr$8622 = fb_StrAllocTempDescZEx( (uint8*)"reload", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8622, 0 );
      }
      goto label$7038;
      label$7103:;
      if( TMP$3461$6 != 33ull ) goto label$7105;
      label$7106:;
      {
       FBSTRING* vr$8623 = fb_StrAllocTempDescZEx( (uint8*)"rem", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8623, 0 );
      }
      goto label$7038;
      label$7105:;
      if( TMP$3461$6 != 34ull ) goto label$7107;
      label$7108:;
      {
       FBSTRING* vr$8624 = fb_StrAllocTempDescZEx( (uint8*)"remainder", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8624, 0 );
      }
      goto label$7038;
      label$7107:;
      if( TMP$3461$6 != 35ull ) goto label$7109;
      label$7110:;
      {
       FBSTRING* vr$8625 = fb_StrAllocTempDescZEx( (uint8*)"removal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8625, 0 );
      }
      goto label$7038;
      label$7109:;
      if( TMP$3461$6 != 36ull ) goto label$7111;
      label$7112:;
      {
       FBSTRING* vr$8626 = fb_StrAllocTempDescZEx( (uint8*)"renames", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8626, 0 );
      }
      goto label$7038;
      label$7111:;
      if( TMP$3461$6 != 37ull ) goto label$7113;
      label$7114:;
      {
       FBSTRING* vr$8627 = fb_StrAllocTempDescZEx( (uint8*)"render", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8627, 0 );
      }
      goto label$7038;
      label$7113:;
      if( TMP$3461$6 != 38ull ) goto label$7115;
      label$7116:;
      {
       FBSTRING* vr$8628 = fb_StrAllocTempDescZEx( (uint8*)"renum", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8628, 0 );
      }
      goto label$7038;
      label$7115:;
      if( TMP$3461$6 != 39ull ) goto label$7117;
      label$7118:;
      {
       FBSTRING* vr$8629 = fb_StrAllocTempDescZEx( (uint8*)"repeat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8629, 0 );
      }
      goto label$7038;
      label$7117:;
      if( TMP$3461$6 != 40ull ) goto label$7119;
      label$7120:;
      {
       FBSTRING* vr$8630 = fb_StrAllocTempDescZEx( (uint8*)"replace", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8630, 0 );
      }
      goto label$7038;
      label$7119:;
      if( TMP$3461$6 != 41ull ) goto label$7121;
      label$7122:;
      {
       FBSTRING* vr$8631 = fb_StrAllocTempDescZEx( (uint8*)"replacing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8631, 0 );
      }
      goto label$7038;
      label$7121:;
      if( TMP$3461$6 != 42ull ) goto label$7123;
      label$7124:;
      {
       FBSTRING* vr$8632 = fb_StrAllocTempDescZEx( (uint8*)"report", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8632, 0 );
      }
      goto label$7038;
      label$7123:;
      if( TMP$3461$6 != 43ull ) goto label$7125;
      label$7126:;
      {
       FBSTRING* vr$8633 = fb_StrAllocTempDescZEx( (uint8*)"reporting", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8633, 0 );
      }
      goto label$7038;
      label$7125:;
      if( TMP$3461$6 != 44ull ) goto label$7127;
      label$7128:;
      {
       FBSTRING* vr$8634 = fb_StrAllocTempDescZEx( (uint8*)"reports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8634, 0 );
      }
      goto label$7038;
      label$7127:;
      if( TMP$3461$6 != 45ull ) goto label$7129;
      label$7130:;
      {
       FBSTRING* vr$8635 = fb_StrAllocTempDescZEx( (uint8*)"repository", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8635, 0 );
      }
      goto label$7038;
      label$7129:;
      if( TMP$3461$6 != 46ull ) goto label$7131;
      label$7132:;
      {
       FBSTRING* vr$8636 = fb_StrAllocTempDescZEx( (uint8*)"rerun", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8636, 0 );
      }
      goto label$7038;
      label$7131:;
      if( TMP$3461$6 != 47ull ) goto label$7133;
      label$7134:;
      {
       FBSTRING* vr$8637 = fb_StrAllocTempDescZEx( (uint8*)"reserve", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8637, 0 );
      }
      goto label$7038;
      label$7133:;
      if( TMP$3461$6 != 48ull ) goto label$7135;
      label$7136:;
      {
       FBSTRING* vr$8638 = fb_StrAllocTempDescZEx( (uint8*)"reset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8638, 0 );
      }
      goto label$7038;
      label$7135:;
      if( TMP$3461$6 != 49ull ) goto label$7137;
      label$7138:;
      {
       FBSTRING* vr$8639 = fb_StrAllocTempDescZEx( (uint8*)"restore", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8639, 0 );
      }
      goto label$7038;
      label$7137:;
      if( TMP$3461$6 != 50ull ) goto label$7139;
      label$7140:;
      {
       FBSTRING* vr$8640 = fb_StrAllocTempDescZEx( (uint8*)"resume", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8640, 0 );
      }
      goto label$7038;
      label$7139:;
      if( TMP$3461$6 != 51ull ) goto label$7141;
      label$7142:;
      {
       FBSTRING* vr$8641 = fb_StrAllocTempDescZEx( (uint8*)"return", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8641, 0 );
      }
      goto label$7038;
      label$7141:;
      if( TMP$3461$6 != 52ull ) goto label$7143;
      label$7144:;
      {
       FBSTRING* vr$8642 = fb_StrAllocTempDescZEx( (uint8*)"return-code", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8642, 0 );
      }
      goto label$7038;
      label$7143:;
      if( TMP$3461$6 != 53ull ) goto label$7145;
      label$7146:;
      {
       FBSTRING* vr$8643 = fb_StrAllocTempDescZEx( (uint8*)"returning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8643, 0 );
      }
      goto label$7038;
      label$7145:;
      if( TMP$3461$6 != 54ull ) goto label$7147;
      label$7148:;
      {
       FBSTRING* vr$8644 = fb_StrAllocTempDescZEx( (uint8*)"reversed", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8644, 0 );
      }
      goto label$7038;
      label$7147:;
      if( TMP$3461$6 != 55ull ) goto label$7149;
      label$7150:;
      {
       FBSTRING* vr$8645 = fb_StrAllocTempDescZEx( (uint8*)"rewind", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8645, 0 );
      }
      goto label$7038;
      label$7149:;
      if( TMP$3461$6 != 56ull ) goto label$7151;
      label$7152:;
      {
       FBSTRING* vr$8646 = fb_StrAllocTempDescZEx( (uint8*)"rewrite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8646, 0 );
      }
      goto label$7038;
      label$7151:;
      if( TMP$3461$6 != 57ull ) goto label$7153;
      label$7154:;
      {
       FBSTRING* vr$8647 = fb_StrAllocTempDescZEx( (uint8*)"rf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8647, 0 );
      }
      goto label$7038;
      label$7153:;
      if( TMP$3461$6 != 58ull ) goto label$7155;
      label$7156:;
      {
       FBSTRING* vr$8648 = fb_StrAllocTempDescZEx( (uint8*)"rgb", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8648, 0 );
      }
      goto label$7038;
      label$7155:;
      if( TMP$3461$6 != 59ull ) goto label$7157;
      label$7158:;
      {
       FBSTRING* vr$8649 = fb_StrAllocTempDescZEx( (uint8*)"rgbf", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8649, 0 );
      }
      goto label$7038;
      label$7157:;
      if( TMP$3461$6 != 60ull ) goto label$7159;
      label$7160:;
      {
       FBSTRING* vr$8650 = fb_StrAllocTempDescZEx( (uint8*)"rgbft", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8650, 0 );
      }
      goto label$7038;
      label$7159:;
      if( TMP$3461$6 != 61ull ) goto label$7161;
      label$7162:;
      {
       FBSTRING* vr$8651 = fb_StrAllocTempDescZEx( (uint8*)"rgbt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8651, 0 );
      }
      goto label$7038;
      label$7161:;
      if( TMP$3461$6 != 62ull ) goto label$7163;
      label$7164:;
      {
       FBSTRING* vr$8652 = fb_StrAllocTempDescZEx( (uint8*)"rh", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8652, 0 );
      }
      goto label$7038;
      label$7163:;
      if( TMP$3461$6 != 63ull ) goto label$7165;
      label$7166:;
      {
       FBSTRING* vr$8653 = fb_StrAllocTempDescZEx( (uint8*)"right", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8653, 0 );
      }
      goto label$7038;
      label$7165:;
      if( TMP$3461$6 != 65ull ) goto label$7167;
      label$7168:;
      {
       FBSTRING* vr$8654 = fb_StrAllocTempDescZEx( (uint8*)"ripples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8654, 0 );
      }
      goto label$7038;
      label$7167:;
      if( TMP$3461$6 != 66ull ) goto label$7169;
      label$7170:;
      {
       FBSTRING* vr$8655 = fb_StrAllocTempDescZEx( (uint8*)"rmdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8655, 0 );
      }
      goto label$7038;
      label$7169:;
      if( TMP$3461$6 != 67ull ) goto label$7171;
      label$7172:;
      {
       FBSTRING* vr$8656 = fb_StrAllocTempDescZEx( (uint8*)"rnd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8656, 0 );
      }
      goto label$7038;
      label$7171:;
      if( TMP$3461$6 != 68ull ) goto label$7173;
      label$7174:;
      {
       FBSTRING* vr$8657 = fb_StrAllocTempDescZEx( (uint8*)"rotate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8657, 0 );
      }
      goto label$7038;
      label$7173:;
      if( TMP$3461$6 != 69ull ) goto label$7175;
      label$7176:;
      {
       FBSTRING* vr$8658 = fb_StrAllocTempDescZEx( (uint8*)"roughness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8658, 0 );
      }
      goto label$7038;
      label$7175:;
      if( TMP$3461$6 != 70ull ) goto label$7177;
      label$7178:;
      {
       FBSTRING* vr$8659 = fb_StrAllocTempDescZEx( (uint8*)"round", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8659, 0 );
      }
      goto label$7038;
      label$7177:;
      if( TMP$3461$6 != 71ull ) goto label$7179;
      label$7180:;
      {
       FBSTRING* vr$8660 = fb_StrAllocTempDescZEx( (uint8*)"rounded", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8660, 0 );
      }
      goto label$7038;
      label$7179:;
      if( TMP$3461$6 != 72ull ) goto label$7181;
      label$7182:;
      {
       FBSTRING* vr$8661 = fb_StrAllocTempDescZEx( (uint8*)"row", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8661, 0 );
      }
      goto label$7038;
      label$7181:;
      if( TMP$3461$6 != 73ull ) goto label$7183;
      label$7184:;
      {
       FBSTRING* vr$8662 = fb_StrAllocTempDescZEx( (uint8*)"row_major", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8662, 0 );
      }
      goto label$7038;
      label$7183:;
      if( TMP$3461$6 != 74ull ) goto label$7185;
      label$7186:;
      {
       FBSTRING* vr$8663 = fb_StrAllocTempDescZEx( (uint8*)"rpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8663, 0 );
      }
      goto label$7038;
      label$7185:;
      if( TMP$3461$6 != 75ull ) goto label$7187;
      label$7188:;
      {
       FBSTRING* vr$8664 = fb_StrAllocTempDescZEx( (uint8*)"rset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8664, 0 );
      }
      goto label$7038;
      label$7187:;
      if( TMP$3461$6 != 76ull ) goto label$7189;
      label$7190:;
      {
       FBSTRING* vr$8665 = fb_StrAllocTempDescZEx( (uint8*)"run", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8665, 0 );
      }
      goto label$7038;
      label$7189:;
      if( TMP$3461$6 != 77ull ) goto label$7191;
      label$7192:;
      {
       FBSTRING* vr$8666 = fb_StrAllocTempDescZEx( (uint8*)"s", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8666, 0 );
      }
      goto label$7038;
      label$7191:;
      if( TMP$3461$6 != 78ull ) goto label$7193;
      label$7194:;
      {
       FBSTRING* vr$8667 = fb_StrAllocTempDescZEx( (uint8*)"safecall", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8667, 0 );
      }
      goto label$7038;
      label$7193:;
      if( TMP$3461$6 != 79ull ) goto label$7195;
      label$7196:;
      {
       FBSTRING* vr$8668 = fb_StrAllocTempDescZEx( (uint8*)"same", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8668, 0 );
      }
      goto label$7038;
      label$7195:;
      if( TMP$3461$6 != 80ull ) goto label$7197;
      label$7198:;
      {
       FBSTRING* vr$8669 = fb_StrAllocTempDescZEx( (uint8*)"same_source", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8669, 0 );
      }
      goto label$7038;
      label$7197:;
      if( TMP$3461$6 != 81ull ) goto label$7199;
      label$7200:;
      {
       FBSTRING* vr$8670 = fb_StrAllocTempDescZEx( (uint8*)"sampler1D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8670, 0 );
      }
      goto label$7038;
      label$7199:;
      if( TMP$3461$6 != 82ull ) goto label$7201;
      label$7202:;
      {
       FBSTRING* vr$8671 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8671, 0 );
      }
      goto label$7038;
      label$7201:;
      if( TMP$3461$6 != 83ull ) goto label$7203;
      label$7204:;
      {
       FBSTRING* vr$8672 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8672, 0 );
      }
      goto label$7038;
      label$7203:;
      if( TMP$3461$6 != 84ull ) goto label$7205;
      label$7206:;
      {
       FBSTRING* vr$8673 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8673, 0 );
      }
      goto label$7038;
      label$7205:;
      if( TMP$3461$6 != 95ull ) goto label$7207;
      label$7208:;
      {
       FBSTRING* vr$8674 = fb_StrAllocTempDescZEx( (uint8*)"sampler2D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8674, 0 );
      }
      goto label$7038;
      label$7207:;
      if( TMP$3461$6 != 86ull ) goto label$7209;
      label$7210:;
      {
       FBSTRING* vr$8675 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8675, 0 );
      }
      goto label$7038;
      label$7209:;
      if( TMP$3461$6 != 87ull ) goto label$7211;
      label$7212:;
      {
       FBSTRING* vr$8676 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8676, 0 );
      }
      goto label$7038;
      label$7211:;
      if( TMP$3461$6 != 88ull ) goto label$7213;
      label$7214:;
      {
       FBSTRING* vr$8677 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8677, 0 );
      }
      goto label$7038;
      label$7213:;
      if( TMP$3461$6 != 89ull ) goto label$7215;
      label$7216:;
      {
       FBSTRING* vr$8678 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRectShadow", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8678, 0 );
      }
      goto label$7038;
      label$7215:;
      if( TMP$3461$6 != 90ull ) goto label$7217;
      label$7218:;
      {
       FBSTRING* vr$8679 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8679, 0 );
      }
      goto label$7038;
      label$7217:;
      if( TMP$3461$6 != 91ull ) goto label$7219;
      label$7220:;
      {
       FBSTRING* vr$8680 = fb_StrAllocTempDescZEx( (uint8*)"sampler3D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8680, 0 );
      }
      goto label$7038;
      label$7219:;
      if( TMP$3461$6 != 92ull ) goto label$7221;
      label$7222:;
      {
       FBSTRING* vr$8681 = fb_StrAllocTempDescZEx( (uint8*)"sampler3DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8681, 0 );
      }
      goto label$7038;
      label$7221:;
      if( TMP$3461$6 != 93ull ) goto label$7223;
      label$7224:;
      {
       FBSTRING* vr$8682 = fb_StrAllocTempDescZEx( (uint8*)"samplerBuffer", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8682, 0 );
      }
      goto label$7038;
      label$7223:;
      if( TMP$3461$6 != 94ull ) goto label$7225;
      label$7226:;
      {
       FBSTRING* vr$8683 = fb_StrAllocTempDescZEx( (uint8*)"samplerCube", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8683, 0 );
      }
      goto label$7038;
      label$7225:;
      if( TMP$3461$6 != 95ull ) goto label$7227;
      label$7228:;
      {
       FBSTRING* vr$8684 = fb_StrAllocTempDescZEx( (uint8*)"samplerCubeShadow", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8684, 0 );
      }
      goto label$7038;
      label$7227:;
      if( TMP$3461$6 != 96ull ) goto label$7229;
      label$7230:;
      {
       FBSTRING* vr$8685 = fb_StrAllocTempDescZEx( (uint8*)"samples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8685, 0 );
      }
      goto label$7038;
      label$7229:;
      if( TMP$3461$6 != 97ull ) goto label$7231;
      label$7232:;
      {
       FBSTRING* vr$8686 = fb_StrAllocTempDescZEx( (uint8*)"save", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8686, 0 );
      }
      goto label$7038;
      label$7231:;
      if( TMP$3461$6 != 98ull ) goto label$7233;
      label$7234:;
      {
       FBSTRING* vr$8687 = fb_StrAllocTempDescZEx( (uint8*)"save_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8687, 0 );
      }
      goto label$7038;
      label$7233:;
      if( TMP$3461$6 != 99ull ) goto label$7235;
      label$7236:;
      {
       FBSTRING* vr$8688 = fb_StrAllocTempDescZEx( (uint8*)"scale", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8688, 0 );
      }
      goto label$7038;
      label$7235:;
      if( TMP$3461$6 != 100ull ) goto label$7237;
      label$7238:;
      {
       FBSTRING* vr$8689 = fb_StrAllocTempDescZEx( (uint8*)"scallop_wave", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8689, 0 );
      }
      goto label$7038;
      label$7237:;
      if( TMP$3461$6 != 101ull ) goto label$7239;
      label$7240:;
      {
       FBSTRING* vr$8690 = fb_StrAllocTempDescZEx( (uint8*)"scattering", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8690, 0 );
      }
      goto label$7038;
      label$7239:;
      if( TMP$3461$6 != 102ull ) goto label$7241;
      label$7242:;
      {
       FBSTRING* vr$8691 = fb_StrAllocTempDescZEx( (uint8*)"screen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8691, 0 );
      }
      goto label$7038;
      label$7241:;
      if( TMP$3461$6 != 103ull ) goto label$7243;
      label$7244:;
      {
       FBSTRING* vr$8692 = fb_StrAllocTempDescZEx( (uint8*)"sd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8692, 0 );
      }
      goto label$7038;
      label$7243:;
      if( TMP$3461$6 != 104ull ) goto label$7245;
      label$7246:;
      {
       FBSTRING* vr$8693 = fb_StrAllocTempDescZEx( (uint8*)"search", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8693, 0 );
      }
      goto label$7038;
      label$7245:;
      if( TMP$3461$6 != 105ull ) goto label$7247;
      label$7248:;
      {
       FBSTRING* vr$8694 = fb_StrAllocTempDescZEx( (uint8*)"second", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8694, 0 );
      }
      goto label$7038;
      label$7247:;
      if( TMP$3461$6 != 106ull ) goto label$7249;
      label$7250:;
      {
       FBSTRING* vr$8695 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8695, 0 );
      }
      goto label$7038;
      label$7249:;
      if( TMP$3461$6 != 107ull ) goto label$7251;
      label$7252:;
      {
       FBSTRING* vr$8696 = fb_StrAllocTempDescZEx( (uint8*)"security", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8696, 0 );
      }
      goto label$7038;
      label$7251:;
      if( TMP$3461$6 != 108ull ) goto label$7253;
      label$7254:;
      {
       FBSTRING* vr$8697 = fb_StrAllocTempDescZEx( (uint8*)"seed", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8697, 0 );
      }
      goto label$7038;
      label$7253:;
      if( TMP$3461$6 != 109ull ) goto label$7255;
      label$7256:;
      {
       FBSTRING* vr$8698 = fb_StrAllocTempDescZEx( (uint8*)"segment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8698, 0 );
      }
      goto label$7038;
      label$7255:;
      if( TMP$3461$6 != 110ull ) goto label$7257;
      label$7258:;
      {
       FBSTRING* vr$8699 = fb_StrAllocTempDescZEx( (uint8*)"segment-limit", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8699, 0 );
      }
      goto label$7038;
      label$7257:;
      if( TMP$3461$6 != 111ull ) goto label$7259;
      label$7260:;
      {
       FBSTRING* vr$8700 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8700, 0 );
      }
      goto label$7038;
      label$7259:;
      if( TMP$3461$6 != 112ull ) goto label$7261;
      label$7262:;
      {
       FBSTRING* vr$8701 = fb_StrAllocTempDescZEx( (uint8*)"select", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8701, 0 );
      }
      goto label$7038;
      label$7261:;
      if( TMP$3461$6 != 113ull ) goto label$7263;
      label$7264:;
      {
       FBSTRING* vr$8702 = fb_StrAllocTempDescZEx( (uint8*)"selector", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8702, 0 );
      }
      goto label$7038;
      label$7263:;
      if( TMP$3461$6 != 114ull ) goto label$7265;
      label$7266:;
      {
       FBSTRING* vr$8703 = fb_StrAllocTempDescZEx( (uint8*)"selection", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8703, 0 );
      }
      goto label$7038;
      label$7265:;
      if( TMP$3461$6 != 115ull ) goto label$7267;
      label$7268:;
      {
       FBSTRING* vr$8704 = fb_StrAllocTempDescZEx( (uint8*)"self", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8704, 0 );
      }
      goto label$7038;
      label$7267:;
      if( TMP$3461$6 != 116ull ) goto label$7269;
      label$7270:;
      {
       FBSTRING* vr$8705 = fb_StrAllocTempDescZEx( (uint8*)"send", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8705, 0 );
      }
      goto label$7038;
      label$7269:;
      if( TMP$3461$6 != 117ull ) goto label$7271;
      label$7272:;
      {
       FBSTRING* vr$8706 = fb_StrAllocTempDescZEx( (uint8*)"sentence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8706, 0 );
      }
      goto label$7038;
      label$7271:;
      if( TMP$3461$6 != 118ull ) goto label$7273;
      label$7274:;
      {
       FBSTRING* vr$8707 = fb_StrAllocTempDescZEx( (uint8*)"separate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8707, 0 );
      }
      goto label$7038;
      label$7273:;
      if( TMP$3461$6 != 119ull ) goto label$7275;
      label$7276:;
      {
       FBSTRING* vr$8708 = fb_StrAllocTempDescZEx( (uint8*)"sequence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8708, 0 );
      }
      goto label$7038;
      label$7275:;
      if( TMP$3461$6 != 120ull ) goto label$7277;
      label$7278:;
      {
       FBSTRING* vr$8709 = fb_StrAllocTempDescZEx( (uint8*)"sequential", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8709, 0 );
      }
      goto label$7038;
      label$7277:;
      if( TMP$3461$6 != 121ull ) goto label$7279;
      label$7280:;
      {
       FBSTRING* vr$8710 = fb_StrAllocTempDescZEx( (uint8*)"sequentially", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8710, 0 );
      }
      goto label$7038;
      label$7279:;
      if( TMP$3461$6 != 122ull ) goto label$7281;
      label$7282:;
      {
       FBSTRING* vr$8711 = fb_StrAllocTempDescZEx( (uint8*)"service", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8711, 0 );
      }
      goto label$7038;
      label$7281:;
      if( TMP$3461$6 != 123ull ) goto label$7283;
      label$7284:;
      {
       FBSTRING* vr$8712 = fb_StrAllocTempDescZEx( (uint8*)"set", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8712, 0 );
      }
      goto label$7038;
      label$7283:;
      if( TMP$3461$6 != 124ull ) goto label$7285;
      label$7286:;
      {
       FBSTRING* vr$8713 = fb_StrAllocTempDescZEx( (uint8*)"sgn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8713, 0 );
      }
      goto label$7038;
      label$7285:;
      if( TMP$3461$6 != 125ull ) goto label$7287;
      label$7288:;
      {
       FBSTRING* vr$8714 = fb_StrAllocTempDescZEx( (uint8*)"shadowless", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8714, 0 );
      }
      goto label$7038;
      label$7287:;
      if( TMP$3461$6 != 126ull ) goto label$7289;
      label$7290:;
      {
       FBSTRING* vr$8715 = fb_StrAllocTempDescZEx( (uint8*)"shell", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8715, 0 );
      }
      goto label$7038;
      label$7289:;
      if( TMP$3461$6 != 127ull ) goto label$7291;
      label$7292:;
      {
       FBSTRING* vr$8716 = fb_StrAllocTempDescZEx( (uint8*)"shift-in", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8716, 0 );
      }
      goto label$7038;
      label$7291:;
      if( TMP$3461$6 != 128ull ) goto label$7293;
      label$7294:;
      {
       FBSTRING* vr$8717 = fb_StrAllocTempDescZEx( (uint8*)"shift-out", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8717, 0 );
      }
      goto label$7038;
      label$7293:;
      if( TMP$3461$6 != 129ull ) goto label$7295;
      label$7296:;
      {
       FBSTRING* vr$8718 = fb_StrAllocTempDescZEx( (uint8*)"shl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8718, 0 );
      }
      goto label$7038;
      label$7295:;
      if( TMP$3461$6 != 130ull ) goto label$7297;
      label$7298:;
      {
       FBSTRING* vr$8719 = fb_StrAllocTempDescZEx( (uint8*)"short", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8719, 0 );
      }
      goto label$7038;
      label$7297:;
      if( TMP$3461$6 != 131ull ) goto label$7299;
      label$7300:;
      {
       FBSTRING* vr$8720 = fb_StrAllocTempDescZEx( (uint8*)"shr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8720, 0 );
      }
      goto label$7038;
      label$7299:;
      if( TMP$3461$6 != 132ull ) goto label$7301;
      label$7302:;
      {
       FBSTRING* vr$8721 = fb_StrAllocTempDescZEx( (uint8*)"sign", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8721, 0 );
      }
      goto label$7038;
      label$7301:;
      if( TMP$3461$6 != 133ull ) goto label$7303;
      label$7304:;
      {
       FBSTRING* vr$8722 = fb_StrAllocTempDescZEx( (uint8*)"simple_nested_loop", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8722, 0 );
      }
      goto label$7038;
      label$7303:;
      if( TMP$3461$6 != 134ull ) goto label$7305;
      label$7306:;
      {
       FBSTRING* vr$8723 = fb_StrAllocTempDescZEx( (uint8*)"sin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8723, 0 );
      }
      goto label$7038;
      label$7305:;
      if( TMP$3461$6 != 135ull ) goto label$7307;
      label$7308:;
      {
       FBSTRING* vr$8724 = fb_StrAllocTempDescZEx( (uint8*)"sine_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8724, 0 );
      }
      goto label$7038;
      label$7307:;
      if( TMP$3461$6 != 136ull ) goto label$7309;
      label$7310:;
      {
       FBSTRING* vr$8725 = fb_StrAllocTempDescZEx( (uint8*)"sinh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8725, 0 );
      }
      goto label$7038;
      label$7309:;
      if( TMP$3461$6 != 137ull ) goto label$7311;
      label$7312:;
      {
       FBSTRING* vr$8726 = fb_StrAllocTempDescZEx( (uint8*)"size", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8726, 0 );
      }
      goto label$7038;
      label$7311:;
      if( TMP$3461$6 != 138ull ) goto label$7313;
      label$7314:;
      {
       FBSTRING* vr$8727 = fb_StrAllocTempDescZEx( (uint8*)"sizeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8727, 0 );
      }
      goto label$7038;
      label$7313:;
      if( TMP$3461$6 != 139ull ) goto label$7315;
      label$7316:;
      {
       FBSTRING* vr$8728 = fb_StrAllocTempDescZEx( (uint8*)"skip1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8728, 0 );
      }
      goto label$7038;
      label$7315:;
      if( TMP$3461$6 != 140ull ) goto label$7317;
      label$7318:;
      {
       FBSTRING* vr$8729 = fb_StrAllocTempDescZEx( (uint8*)"skip2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8729, 0 );
      }
      goto label$7038;
      label$7317:;
      if( TMP$3461$6 != 141ull ) goto label$7319;
      label$7320:;
      {
       FBSTRING* vr$8730 = fb_StrAllocTempDescZEx( (uint8*)"skip3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8730, 0 );
      }
      goto label$7038;
      label$7319:;
      if( TMP$3461$6 != 142ull ) goto label$7321;
      label$7322:;
      {
       FBSTRING* vr$8731 = fb_StrAllocTempDescZEx( (uint8*)"sky", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8731, 0 );
      }
      goto label$7038;
      label$7321:;
      if( TMP$3461$6 != 143ull ) goto label$7323;
      label$7324:;
      {
       FBSTRING* vr$8732 = fb_StrAllocTempDescZEx( (uint8*)"sky_sphere", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8732, 0 );
      }
      goto label$7038;
      label$7323:;
      if( TMP$3461$6 != 144ull ) goto label$7325;
      label$7326:;
      {
       FBSTRING* vr$8733 = fb_StrAllocTempDescZEx( (uint8*)"slice", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8733, 0 );
      }
      goto label$7038;
      label$7325:;
      if( TMP$3461$6 != 145ull ) goto label$7327;
      label$7328:;
      {
       FBSTRING* vr$8734 = fb_StrAllocTempDescZEx( (uint8*)"slope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8734, 0 );
      }
      goto label$7038;
      label$7327:;
      if( TMP$3461$6 != 146ull ) goto label$7329;
      label$7330:;
      {
       FBSTRING* vr$8735 = fb_StrAllocTempDescZEx( (uint8*)"slope_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8735, 0 );
      }
      goto label$7038;
      label$7329:;
      if( TMP$3461$6 != 147ull ) goto label$7331;
      label$7332:;
      {
       FBSTRING* vr$8736 = fb_StrAllocTempDescZEx( (uint8*)"smallint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8736, 0 );
      }
      goto label$7038;
      label$7331:;
      if( TMP$3461$6 != 148ull ) goto label$7333;
      label$7334:;
      {
       FBSTRING* vr$8737 = fb_StrAllocTempDescZEx( (uint8*)"smooth", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8737, 0 );
      }
      goto label$7038;
      label$7333:;
      if( TMP$3461$6 != 149ull ) goto label$7335;
      label$7336:;
      {
       FBSTRING* vr$8738 = fb_StrAllocTempDescZEx( (uint8*)"smooth_linearstep", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8738, 0 );
      }
      goto label$7038;
      label$7335:;
      if( TMP$3461$6 != 150ull ) goto label$7337;
      label$7338:;
      {
       FBSTRING* vr$8739 = fb_StrAllocTempDescZEx( (uint8*)"smoothstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8739, 0 );
      }
      goto label$7038;
      label$7337:;
      if( TMP$3461$6 != 151ull ) goto label$7339;
      label$7340:;
      {
       FBSTRING* vr$8740 = fb_StrAllocTempDescZEx( (uint8*)"smooth_triangle", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8740, 0 );
      }
      goto label$7038;
      label$7339:;
      if( TMP$3461$6 != 152ull ) goto label$7341;
      label$7342:;
      {
       FBSTRING* vr$8741 = fb_StrAllocTempDescZEx( (uint8*)"snoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8741, 0 );
      }
      goto label$7038;
      label$7341:;
      if( TMP$3461$6 != 153ull ) goto label$7343;
      label$7344:;
      {
       FBSTRING* vr$8742 = fb_StrAllocTempDescZEx( (uint8*)"softfloat", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8742, 0 );
      }
      goto label$7038;
      label$7343:;
      if( TMP$3461$6 != 154ull ) goto label$7345;
      label$7346:;
      {
       FBSTRING* vr$8743 = fb_StrAllocTempDescZEx( (uint8*)"solid", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8743, 0 );
      }
      goto label$7038;
      label$7345:;
      if( TMP$3461$6 != 155ull ) goto label$7347;
      label$7348:;
      {
       FBSTRING* vr$8744 = fb_StrAllocTempDescZEx( (uint8*)"sor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8744, 0 );
      }
      goto label$7038;
      label$7347:;
      if( TMP$3461$6 != 156ull ) goto label$7349;
      label$7350:;
      {
       FBSTRING* vr$8745 = fb_StrAllocTempDescZEx( (uint8*)"sort", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8745, 0 );
      }
      goto label$7038;
      label$7349:;
      if( TMP$3461$6 != 157ull ) goto label$7351;
      label$7352:;
      {
       FBSTRING* vr$8746 = fb_StrAllocTempDescZEx( (uint8*)"sort-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8746, 0 );
      }
      goto label$7038;
      label$7351:;
      if( TMP$3461$6 != 158ull ) goto label$7353;
      label$7354:;
      {
       FBSTRING* vr$8747 = fb_StrAllocTempDescZEx( (uint8*)"sort-core-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8747, 0 );
      }
      goto label$7038;
      label$7353:;
      if( TMP$3461$6 != 159ull ) goto label$7355;
      label$7356:;
      {
       FBSTRING* vr$8748 = fb_StrAllocTempDescZEx( (uint8*)"sort-file-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8748, 0 );
      }
      goto label$7038;
      label$7355:;
      if( TMP$3461$6 != 160ull ) goto label$7357;
      label$7358:;
      {
       FBSTRING* vr$8749 = fb_StrAllocTempDescZEx( (uint8*)"sort-merge", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8749, 0 );
      }
      goto label$7038;
      label$7357:;
      if( TMP$3461$6 != 161ull ) goto label$7359;
      label$7360:;
      {
       FBSTRING* vr$8750 = fb_StrAllocTempDescZEx( (uint8*)"sort-message", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8750, 0 );
      }
      goto label$7038;
      label$7359:;
      if( TMP$3461$6 != 162ull ) goto label$7361;
      label$7362:;
      {
       FBSTRING* vr$8751 = fb_StrAllocTempDescZEx( (uint8*)"sort-mode-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8751, 0 );
      }
      goto label$7038;
      label$7361:;
      if( TMP$3461$6 != 163ull ) goto label$7363;
      label$7364:;
      {
       FBSTRING* vr$8752 = fb_StrAllocTempDescZEx( (uint8*)"sort-return", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8752, 0 );
      }
      goto label$7038;
      label$7363:;
      if( TMP$3461$6 != 164ull ) goto label$7365;
      label$7366:;
      {
       FBSTRING* vr$8753 = fb_StrAllocTempDescZEx( (uint8*)"sound", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8753, 0 );
      }
      goto label$7038;
      label$7365:;
      if( TMP$3461$6 != 165ull ) goto label$7367;
      label$7368:;
      {
       FBSTRING* vr$8754 = fb_StrAllocTempDescZEx( (uint8*)"source", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8754, 0 );
      }
      goto label$7038;
      label$7367:;
      if( TMP$3461$6 != 166ull ) goto label$7369;
      label$7370:;
      {
       FBSTRING* vr$8755 = fb_StrAllocTempDescZEx( (uint8*)"source-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8755, 0 );
      }
      goto label$7038;
      label$7369:;
      if( TMP$3461$6 != 167ull ) goto label$7371;
      label$7372:;
      {
       FBSTRING* vr$8756 = fb_StrAllocTempDescZEx( (uint8*)"space", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8756, 0 );
      }
      goto label$7038;
      label$7371:;
      if( TMP$3461$6 != 169ull ) goto label$7373;
      label$7374:;
      {
       FBSTRING* vr$8757 = fb_StrAllocTempDescZEx( (uint8*)"spaces", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8757, 0 );
      }
      goto label$7038;
      label$7373:;
      if( TMP$3461$6 != 170ull ) goto label$7375;
      label$7376:;
      {
       FBSTRING* vr$8758 = fb_StrAllocTempDescZEx( (uint8*)"spacing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8758, 0 );
      }
      goto label$7038;
      label$7375:;
      if( TMP$3461$6 != 171ull ) goto label$7377;
      label$7378:;
      {
       FBSTRING* vr$8759 = fb_StrAllocTempDescZEx( (uint8*)"spc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8759, 0 );
      }
      goto label$7038;
      label$7377:;
      if( TMP$3461$6 != 172ull ) goto label$7379;
      label$7380:;
      {
       FBSTRING* vr$8760 = fb_StrAllocTempDescZEx( (uint8*)"specialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8760, 0 );
      }
      goto label$7038;
      label$7379:;
      if( TMP$3461$6 != 173ull ) goto label$7381;
      label$7382:;
      {
       FBSTRING* vr$8761 = fb_StrAllocTempDescZEx( (uint8*)"special-names", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8761, 0 );
      }
      goto label$7038;
      label$7381:;
      if( TMP$3461$6 != 174ull ) goto label$7383;
      label$7384:;
      {
       FBSTRING* vr$8762 = fb_StrAllocTempDescZEx( (uint8*)"specular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8762, 0 );
      }
      goto label$7038;
      label$7383:;
      if( TMP$3461$6 != 175ull ) goto label$7385;
      label$7386:;
      {
       FBSTRING* vr$8763 = fb_StrAllocTempDescZEx( (uint8*)"sphere", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8763, 0 );
      }
      goto label$7038;
      label$7385:;
      if( TMP$3461$6 != 176ull ) goto label$7387;
      label$7388:;
      {
       FBSTRING* vr$8764 = fb_StrAllocTempDescZEx( (uint8*)"sphere_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8764, 0 );
      }
      goto label$7038;
      label$7387:;
      if( TMP$3461$6 != 177ull ) goto label$7389;
      label$7390:;
      {
       FBSTRING* vr$8765 = fb_StrAllocTempDescZEx( (uint8*)"spherical", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8765, 0 );
      }
      goto label$7038;
      label$7389:;
      if( TMP$3461$6 != 178ull ) goto label$7391;
      label$7392:;
      {
       FBSTRING* vr$8766 = fb_StrAllocTempDescZEx( (uint8*)"spiral1", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8766, 0 );
      }
      goto label$7038;
      label$7391:;
      if( TMP$3461$6 != 179ull ) goto label$7393;
      label$7394:;
      {
       FBSTRING* vr$8767 = fb_StrAllocTempDescZEx( (uint8*)"spiral2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8767, 0 );
      }
      goto label$7038;
      label$7393:;
      if( TMP$3461$6 != 180ull ) goto label$7395;
      label$7396:;
      {
       FBSTRING* vr$8768 = fb_StrAllocTempDescZEx( (uint8*)"spline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8768, 0 );
      }
      goto label$7038;
      label$7395:;
      if( TMP$3461$6 != 181ull ) goto label$7397;
      label$7398:;
      {
       FBSTRING* vr$8769 = fb_StrAllocTempDescZEx( (uint8*)"splineinverse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8769, 0 );
      }
      goto label$7038;
      label$7397:;
      if( TMP$3461$6 != 182ull ) goto label$7399;
      label$7400:;
      {
       FBSTRING* vr$8770 = fb_StrAllocTempDescZEx( (uint8*)"split", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8770, 0 );
      }
      goto label$7038;
      label$7399:;
      if( TMP$3461$6 != 183ull ) goto label$7401;
      label$7402:;
      {
       FBSTRING* vr$8771 = fb_StrAllocTempDescZEx( (uint8*)"split_union", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8771, 0 );
      }
      goto label$7038;
      label$7401:;
      if( TMP$3461$6 != 184ull ) goto label$7403;
      label$7404:;
      {
       FBSTRING* vr$8772 = fb_StrAllocTempDescZEx( (uint8*)"spotlight", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8772, 0 );
      }
      goto label$7038;
      label$7403:;
      if( TMP$3461$6 != 185ull ) goto label$7405;
      label$7406:;
      {
       FBSTRING* vr$8773 = fb_StrAllocTempDescZEx( (uint8*)"spotted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8773, 0 );
      }
      goto label$7038;
      label$7405:;
      if( TMP$3461$6 != 186ull ) goto label$7407;
      label$7408:;
      {
       FBSTRING* vr$8774 = fb_StrAllocTempDescZEx( (uint8*)"sqr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8774, 0 );
      }
      goto label$7038;
      label$7407:;
      if( TMP$3461$6 != 187ull ) goto label$7409;
      label$7410:;
      {
       FBSTRING* vr$8775 = fb_StrAllocTempDescZEx( (uint8*)"sqrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8775, 0 );
      }
      goto label$7038;
      label$7409:;
      if( TMP$3461$6 != 188ull ) goto label$7411;
      label$7412:;
      {
       FBSTRING* vr$8776 = fb_StrAllocTempDescZEx( (uint8*)"standard", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8776, 0 );
      }
      goto label$7038;
      label$7411:;
      if( TMP$3461$6 != 189ull ) goto label$7413;
      label$7414:;
      {
       FBSTRING* vr$8777 = fb_StrAllocTempDescZEx( (uint8*)"standard-1", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8777, 0 );
      }
      goto label$7038;
      label$7413:;
      if( TMP$3461$6 != 190ull ) goto label$7415;
      label$7416:;
      {
       FBSTRING* vr$8778 = fb_StrAllocTempDescZEx( (uint8*)"standard-2", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8778, 0 );
      }
      goto label$7038;
      label$7415:;
      if( TMP$3461$6 != 191ull ) goto label$7417;
      label$7418:;
      {
       FBSTRING* vr$8779 = fb_StrAllocTempDescZEx( (uint8*)"start", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8779, 0 );
      }
      goto label$7038;
      label$7417:;
      if( TMP$3461$6 != 192ull ) goto label$7419;
      label$7420:;
      {
       FBSTRING* vr$8780 = fb_StrAllocTempDescZEx( (uint8*)"startswith", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8780, 0 );
      }
      goto label$7038;
      label$7419:;
      if( TMP$3461$6 != 193ull ) goto label$7421;
      label$7422:;
      {
       FBSTRING* vr$8781 = fb_StrAllocTempDescZEx( (uint8*)"static", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8781, 0 );
      }
      goto label$7038;
      label$7421:;
      if( TMP$3461$6 != 194ull ) goto label$7423;
      label$7424:;
      {
       FBSTRING* vr$8782 = fb_StrAllocTempDescZEx( (uint8*)"statistics", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8782, 0 );
      }
      goto label$7038;
      label$7423:;
      if( TMP$3461$6 != 195ull ) goto label$7425;
      label$7426:;
      {
       FBSTRING* vr$8783 = fb_StrAllocTempDescZEx( (uint8*)"status", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8783, 0 );
      }
      goto label$7038;
      label$7425:;
      if( TMP$3461$6 != 196ull ) goto label$7427;
      label$7428:;
      {
       FBSTRING* vr$8784 = fb_StrAllocTempDescZEx( (uint8*)"stdcall", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8784, 0 );
      }
      goto label$7038;
      label$7427:;
      if( TMP$3461$6 != 197ull ) goto label$7429;
      label$7430:;
      {
       FBSTRING* vr$8785 = fb_StrAllocTempDescZEx( (uint8*)"stdout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8785, 0 );
      }
      goto label$7038;
      label$7429:;
      if( TMP$3461$6 != 198ull ) goto label$7431;
      label$7432:;
      {
       FBSTRING* vr$8786 = fb_StrAllocTempDescZEx( (uint8*)"step", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8786, 0 );
      }
      goto label$7038;
      label$7431:;
      if( TMP$3461$6 != 199ull ) goto label$7433;
      label$7434:;
      {
       FBSTRING* vr$8787 = fb_StrAllocTempDescZEx( (uint8*)"stick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8787, 0 );
      }
      goto label$7038;
      label$7433:;
      if( TMP$3461$6 != 200ull ) goto label$7435;
      label$7436:;
      {
       FBSTRING* vr$8788 = fb_StrAllocTempDescZEx( (uint8*)"stof", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8788, 0 );
      }
      goto label$7038;
      label$7435:;
      if( TMP$3461$6 != 201ull ) goto label$7437;
      label$7438:;
      {
       FBSTRING* vr$8789 = fb_StrAllocTempDescZEx( (uint8*)"stoi", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8789, 0 );
      }
      goto label$7038;
      label$7437:;
      if( TMP$3461$6 != 202ull ) goto label$7439;
      label$7440:;
      {
       FBSTRING* vr$8790 = fb_StrAllocTempDescZEx( (uint8*)"stop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8790, 0 );
      }
      goto label$7038;
      label$7439:;
      if( TMP$3461$6 != 203ull ) goto label$7441;
      label$7442:;
      {
       FBSTRING* vr$8791 = fb_StrAllocTempDescZEx( (uint8*)"str", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8791, 0 );
      }
      goto label$7038;
      label$7441:;
      if( TMP$3461$6 != 205ull ) goto label$7443;
      label$7444:;
      {
       FBSTRING* vr$8792 = fb_StrAllocTempDescZEx( (uint8*)"strcmp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8792, 0 );
      }
      goto label$7038;
      label$7443:;
      if( TMP$3461$6 != 206ull ) goto label$7445;
      label$7446:;
      {
       FBSTRING* vr$8793 = fb_StrAllocTempDescZEx( (uint8*)"strength", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8793, 0 );
      }
      goto label$7038;
      label$7445:;
      if( TMP$3461$6 != 207ull ) goto label$7447;
      label$7448:;
      {
       FBSTRING* vr$8794 = fb_StrAllocTempDescZEx( (uint8*)"strig", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8794, 0 );
      }
      goto label$7038;
      label$7447:;
      if( TMP$3461$6 != 208ull ) goto label$7449;
      label$7450:;
      {
       FBSTRING* vr$8795 = fb_StrAllocTempDescZEx( (uint8*)"string", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8795, 0 );
      }
      goto label$7038;
      label$7449:;
      if( TMP$3461$6 != 209ull ) goto label$7451;
      label$7452:;
      {
       FBSTRING* vr$8796 = fb_StrAllocTempDescZEx( (uint8*)"strptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8796, 0 );
      }
      goto label$7038;
      label$7451:;
      if( TMP$3461$6 != 210ull ) goto label$7453;
      label$7454:;
      {
       FBSTRING* vr$8797 = fb_StrAllocTempDescZEx( (uint8*)"strlen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8797, 0 );
      }
      goto label$7038;
      label$7453:;
      if( TMP$3461$6 != 211ull ) goto label$7455;
      label$7456:;
      {
       FBSTRING* vr$8798 = fb_StrAllocTempDescZEx( (uint8*)"strlwr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8798, 0 );
      }
      goto label$7038;
      label$7455:;
      if( TMP$3461$6 != 212ull ) goto label$7457;
      label$7458:;
      {
       FBSTRING* vr$8799 = fb_StrAllocTempDescZEx( (uint8*)"structure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8799, 0 );
      }
      goto label$7038;
      label$7457:;
      if( TMP$3461$6 != 213ull ) goto label$7459;
      label$7460:;
      {
       FBSTRING* vr$8800 = fb_StrAllocTempDescZEx( (uint8*)"strupr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8800, 0 );
      }
      goto label$7038;
      label$7459:;
      if( TMP$3461$6 != 214ull ) goto label$7461;
      label$7462:;
      {
       FBSTRING* vr$8801 = fb_StrAllocTempDescZEx( (uint8*)"sturm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8801, 0 );
      }
      goto label$7038;
      label$7461:;
      if( TMP$3461$6 != 215ull ) goto label$7463;
      label$7464:;
      {
       FBSTRING* vr$8802 = fb_StrAllocTempDescZEx( (uint8*)"subarray", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8802, 0 );
      }
      goto label$7038;
      label$7463:;
      if( TMP$3461$6 != 216ull ) goto label$7465;
      label$7466:;
      {
       FBSTRING* vr$8803 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8803, 0 );
      }
      goto label$7038;
      label$7465:;
      if( TMP$3461$6 != 217ull ) goto label$7467;
      label$7468:;
      {
       FBSTRING* vr$8804 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8804, 0 );
      }
      goto label$7038;
      label$7467:;
      if( TMP$3461$6 != 218ull ) goto label$7469;
      label$7470:;
      {
       FBSTRING* vr$8805 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8805, 0 );
      }
      goto label$7038;
      label$7469:;
      if( TMP$3461$6 != 219ull ) goto label$7471;
      label$7472:;
      {
       FBSTRING* vr$8806 = fb_StrAllocTempDescZEx( (uint8*)"subroutine", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8806, 0 );
      }
      goto label$7038;
      label$7471:;
      if( TMP$3461$6 != 220ull ) goto label$7473;
      label$7474:;
      {
       FBSTRING* vr$8807 = fb_StrAllocTempDescZEx( (uint8*)"substr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8807, 0 );
      }
      goto label$7038;
      label$7473:;
      if( TMP$3461$6 != 221ull ) goto label$7475;
      label$7476:;
      {
       FBSTRING* vr$8808 = fb_StrAllocTempDescZEx( (uint8*)"substring", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8808, 0 );
      }
      goto label$7038;
      label$7475:;
      if( TMP$3461$6 != 222ull ) goto label$7477;
      label$7478:;
      {
       FBSTRING* vr$8809 = fb_StrAllocTempDescZEx( (uint8*)"substring_mb", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8809, 0 );
      }
      goto label$7038;
      label$7477:;
      if( TMP$3461$6 != 223ull ) goto label$7479;
      label$7480:;
      {
       FBSTRING* vr$8810 = fb_StrAllocTempDescZEx( (uint8*)"subtract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8810, 0 );
      }
      goto label$7038;
      label$7479:;
      if( TMP$3461$6 != 224ull ) goto label$7481;
      label$7482:;
      {
       FBSTRING* vr$8811 = fb_StrAllocTempDescZEx( (uint8*)"sum", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8811, 0 );
      }
      goto label$7038;
      label$7481:;
      if( TMP$3461$6 != 225ull ) goto label$7483;
      label$7484:;
      {
       FBSTRING* vr$8812 = fb_StrAllocTempDescZEx( (uint8*)"super", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8812, 0 );
      }
      goto label$7038;
      label$7483:;
      if( TMP$3461$6 != 226ull ) goto label$7485;
      label$7486:;
      {
       FBSTRING* vr$8813 = fb_StrAllocTempDescZEx( (uint8*)"superellipsoid", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8813, 0 );
      }
      goto label$7038;
      label$7485:;
      if( TMP$3461$6 != 227ull ) goto label$7487;
      label$7488:;
      {
       FBSTRING* vr$8814 = fb_StrAllocTempDescZEx( (uint8*)"superp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8814, 0 );
      }
      goto label$7038;
      label$7487:;
      if( TMP$3461$6 != 228ull ) goto label$7489;
      label$7490:;
      {
       FBSTRING* vr$8815 = fb_StrAllocTempDescZEx( (uint8*)"suppress", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8815, 0 );
      }
      goto label$7038;
      label$7489:;
      if( TMP$3461$6 != 229ull ) goto label$7491;
      label$7492:;
      {
       FBSTRING* vr$8816 = fb_StrAllocTempDescZEx( (uint8*)"surfacearea", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8816, 0 );
      }
      goto label$7038;
      label$7491:;
      if( TMP$3461$6 != 230ull ) goto label$7493;
      label$7494:;
      {
       FBSTRING* vr$8817 = fb_StrAllocTempDescZEx( (uint8*)"swap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8817, 0 );
      }
      goto label$7038;
      label$7493:;
      if( TMP$3461$6 != 231ull ) goto label$7495;
      label$7496:;
      {
       FBSTRING* vr$8818 = fb_StrAllocTempDescZEx( (uint8*)"switch", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8818, 0 );
      }
      goto label$7038;
      label$7495:;
      if( TMP$3461$6 != 232ull ) goto label$7497;
      label$7498:;
      {
       FBSTRING* vr$8819 = fb_StrAllocTempDescZEx( (uint8*)"symbolic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8819, 0 );
      }
      goto label$7038;
      label$7497:;
      if( TMP$3461$6 != 233ull ) goto label$7499;
      label$7500:;
      {
       FBSTRING* vr$8820 = fb_StrAllocTempDescZEx( (uint8*)"sync", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8820, 0 );
      }
      goto label$7038;
      label$7499:;
      if( TMP$3461$6 != 234ull ) goto label$7501;
      label$7502:;
      {
       FBSTRING* vr$8821 = fb_StrAllocTempDescZEx( (uint8*)"synchronized", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8821, 0 );
      }
      goto label$7038;
      label$7501:;
      if( TMP$3461$6 != 235ull ) goto label$7503;
      label$7504:;
      {
       FBSTRING* vr$8822 = fb_StrAllocTempDescZEx( (uint8*)"sys", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8822, 0 );
      }
      goto label$7038;
      label$7503:;
      if( TMP$3461$6 != 236ull ) goto label$7505;
      label$7506:;
      {
       FBSTRING* vr$8823 = fb_StrAllocTempDescZEx( (uint8*)"system", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8823, 0 );
      }
      goto label$7038;
      label$7505:;
      if( TMP$3461$6 != 237ull ) goto label$7507;
      label$7508:;
      {
       FBSTRING* vr$8824 = fb_StrAllocTempDescZEx( (uint8*)"t", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8824, 0 );
      }
      goto label$7038;
      label$7507:;
      if( TMP$3461$6 != 238ull ) goto label$7509;
      label$7510:;
      {
       FBSTRING* vr$8825 = fb_StrAllocTempDescZEx( (uint8*)"tab", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8825, 0 );
      }
      goto label$7038;
      label$7509:;
      if( TMP$3461$6 != 239ull ) goto label$7511;
      label$7512:;
      {
       FBSTRING* vr$8826 = fb_StrAllocTempDescZEx( (uint8*)"table", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8826, 0 );
      }
      goto label$7038;
      label$7511:;
      if( TMP$3461$6 != 240ull ) goto label$7513;
      label$7514:;
      {
       FBSTRING* vr$8827 = fb_StrAllocTempDescZEx( (uint8*)"tally", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8827, 0 );
      }
      goto label$7038;
      label$7513:;
      if( TMP$3461$6 != 241ull ) goto label$7515;
      label$7516:;
      {
       FBSTRING* vr$8828 = fb_StrAllocTempDescZEx( (uint8*)"tallying", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8828, 0 );
      }
      goto label$7038;
      label$7515:;
      if( TMP$3461$6 != 242ull ) goto label$7517;
      label$7518:;
      {
       FBSTRING* vr$8829 = fb_StrAllocTempDescZEx( (uint8*)"tan", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8829, 0 );
      }
      goto label$7038;
      label$7517:;
      if( TMP$3461$6 != 243ull ) goto label$7519;
      label$7520:;
      {
       FBSTRING* vr$8830 = fb_StrAllocTempDescZEx( (uint8*)"tanh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8830, 0 );
      }
      goto label$7038;
      label$7519:;
      if( TMP$3461$6 != 244ull ) goto label$7521;
      label$7522:;
      {
       FBSTRING* vr$8831 = fb_StrAllocTempDescZEx( (uint8*)"tape", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8831, 0 );
      }
      goto label$7038;
      label$7521:;
      if( TMP$3461$6 != 245ull ) goto label$7523;
      label$7524:;
      {
       FBSTRING* vr$8832 = fb_StrAllocTempDescZEx( (uint8*)"target", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8832, 0 );
      }
      goto label$7038;
      label$7523:;
      if( TMP$3461$6 != 246ull ) goto label$7525;
      label$7526:;
      {
       FBSTRING* vr$8833 = fb_StrAllocTempDescZEx( (uint8*)"template", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8833, 0 );
      }
      goto label$7038;
      label$7525:;
      if( TMP$3461$6 != 247ull ) goto label$7527;
      label$7528:;
      {
       FBSTRING* vr$8834 = fb_StrAllocTempDescZEx( (uint8*)"term", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8834, 0 );
      }
      goto label$7038;
      label$7527:;
      if( TMP$3461$6 != 248ull ) goto label$7529;
      label$7530:;
      {
       FBSTRING* vr$8835 = fb_StrAllocTempDescZEx( (uint8*)"terminal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8835, 0 );
      }
      goto label$7038;
      label$7529:;
      if( TMP$3461$6 != 249ull ) goto label$7531;
      label$7532:;
      {
       FBSTRING* vr$8836 = fb_StrAllocTempDescZEx( (uint8*)"terminate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8836, 0 );
      }
      goto label$7038;
      label$7531:;
      if( TMP$3461$6 != 250ull ) goto label$7533;
      label$7534:;
      {
       FBSTRING* vr$8837 = fb_StrAllocTempDescZEx( (uint8*)"test", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8837, 0 );
      }
      goto label$7038;
      label$7533:;
      if( TMP$3461$6 != 251ull ) goto label$7535;
      label$7536:;
      {
       FBSTRING* vr$8838 = fb_StrAllocTempDescZEx( (uint8*)"text", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8838, 0 );
      }
      goto label$7038;
      label$7535:;
      if( TMP$3461$6 != 252ull ) goto label$7537;
      label$7538:;
      {
       FBSTRING* vr$8839 = fb_StrAllocTempDescZEx( (uint8*)"texture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8839, 0 );
      }
      goto label$7038;
      label$7537:;
      if( TMP$3461$6 != 253ull ) goto label$7539;
      label$7540:;
      {
       FBSTRING* vr$8840 = fb_StrAllocTempDescZEx( (uint8*)"texture3d", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8840, 0 );
      }
      goto label$7038;
      label$7539:;
      if( TMP$3461$6 != 254ull ) goto label$7541;
      label$7542:;
      {
       FBSTRING* vr$8841 = fb_StrAllocTempDescZEx( (uint8*)"texture_list", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8841, 0 );
      }
      goto label$7038;
      label$7541:;
      if( TMP$3461$6 != 255ull ) goto label$7543;
      label$7544:;
      {
       FBSTRING* vr$8842 = fb_StrAllocTempDescZEx( (uint8*)"texture_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8842, 0 );
      }
      label$7543:;
      label$7038:;
     }
    }
    goto label$5883;
    label$7545:;
    {
     {
      uint64 TMP$3712$6;
      TMP$3712$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$7547;
      label$7548:;
      {
       FBSTRING* vr$8844 = fb_StrAllocTempDescZEx( (uint8*)"tga", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8844, 0 );
      }
      goto label$7546;
      label$7549:;
      {
       FBSTRING* vr$8845 = fb_StrAllocTempDescZEx( (uint8*)"than", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8845, 0 );
      }
      goto label$7546;
      label$7550:;
      {
       FBSTRING* vr$8846 = fb_StrAllocTempDescZEx( (uint8*)"then", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8846, 0 );
      }
      goto label$7546;
      label$7551:;
      {
       FBSTRING* vr$8847 = fb_StrAllocTempDescZEx( (uint8*)"thickness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8847, 0 );
      }
      goto label$7546;
      label$7552:;
      {
       FBSTRING* vr$8848 = fb_StrAllocTempDescZEx( (uint8*)"this", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8848, 0 );
      }
      goto label$7546;
      label$7553:;
      {
       FBSTRING* vr$8849 = fb_StrAllocTempDescZEx( (uint8*)"threadvar", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8849, 0 );
      }
      goto label$7546;
      label$7554:;
      {
       FBSTRING* vr$8850 = fb_StrAllocTempDescZEx( (uint8*)"threshold", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8850, 0 );
      }
      goto label$7546;
      label$7555:;
      {
       FBSTRING* vr$8851 = fb_StrAllocTempDescZEx( (uint8*)"through", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8851, 0 );
      }
      goto label$7546;
      label$7556:;
      {
       FBSTRING* vr$8852 = fb_StrAllocTempDescZEx( (uint8*)"thru", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8852, 0 );
      }
      goto label$7546;
      label$7557:;
      {
       FBSTRING* vr$8853 = fb_StrAllocTempDescZEx( (uint8*)"tiff", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8853, 0 );
      }
      goto label$7546;
      label$7558:;
      {
       FBSTRING* vr$8854 = fb_StrAllocTempDescZEx( (uint8*)"tightness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8854, 0 );
      }
      goto label$7546;
      label$7559:;
      {
       FBSTRING* vr$8855 = fb_StrAllocTempDescZEx( (uint8*)"tile2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8855, 0 );
      }
      goto label$7546;
      label$7560:;
      {
       FBSTRING* vr$8856 = fb_StrAllocTempDescZEx( (uint8*)"tiles", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8856, 0 );
      }
      goto label$7546;
      label$7561:;
      {
       FBSTRING* vr$8857 = fb_StrAllocTempDescZEx( (uint8*)"time", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8857, 0 );
      }
      goto label$7546;
      label$7562:;
      {
       FBSTRING* vr$8858 = fb_StrAllocTempDescZEx( (uint8*)"timer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8858, 0 );
      }
      goto label$7546;
      label$7563:;
      {
       FBSTRING* vr$8859 = fb_StrAllocTempDescZEx( (uint8*)"times", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8859, 0 );
      }
      goto label$7546;
      label$7564:;
      {
       FBSTRING* vr$8860 = fb_StrAllocTempDescZEx( (uint8*)"timestamp", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8860, 0 );
      }
      goto label$7546;
      label$7565:;
      {
       FBSTRING* vr$8861 = fb_StrAllocTempDescZEx( (uint8*)"timesten", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8861, 0 );
      }
      goto label$7546;
      label$7566:;
      {
       FBSTRING* vr$8862 = fb_StrAllocTempDescZEx( (uint8*)"title", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8862, 0 );
      }
      goto label$7546;
      label$7567:;
      {
       FBSTRING* vr$8863 = fb_StrAllocTempDescZEx( (uint8*)"to", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8863, 0 );
      }
      goto label$7546;
      label$7568:;
      {
       FBSTRING* vr$8864 = fb_StrAllocTempDescZEx( (uint8*)"tolerance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8864, 0 );
      }
      goto label$7546;
      label$7569:;
      {
       FBSTRING* vr$8865 = fb_StrAllocTempDescZEx( (uint8*)"top", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8865, 0 );
      }
      goto label$7546;
      label$7570:;
      {
       FBSTRING* vr$8866 = fb_StrAllocTempDescZEx( (uint8*)"toroidal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8866, 0 );
      }
      goto label$7546;
      label$7571:;
      {
       FBSTRING* vr$8867 = fb_StrAllocTempDescZEx( (uint8*)"torus", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8867, 0 );
      }
      goto label$7546;
      label$7572:;
      {
       FBSTRING* vr$8868 = fb_StrAllocTempDescZEx( (uint8*)"trace", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8868, 0 );
      }
      goto label$7546;
      label$7573:;
      {
       FBSTRING* vr$8869 = fb_StrAllocTempDescZEx( (uint8*)"trailing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8869, 0 );
      }
      goto label$7546;
      label$7574:;
      {
       FBSTRING* vr$8870 = fb_StrAllocTempDescZEx( (uint8*)"transform", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8870, 0 );
      }
      goto label$7546;
      label$7575:;
      {
       FBSTRING* vr$8871 = fb_StrAllocTempDescZEx( (uint8*)"transformc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8871, 0 );
      }
      goto label$7546;
      label$7576:;
      {
       FBSTRING* vr$8872 = fb_StrAllocTempDescZEx( (uint8*)"transformu", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8872, 0 );
      }
      goto label$7546;
      label$7577:;
      {
       FBSTRING* vr$8873 = fb_StrAllocTempDescZEx( (uint8*)"translate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8873, 0 );
      }
      goto label$7546;
      label$7578:;
      {
       FBSTRING* vr$8874 = fb_StrAllocTempDescZEx( (uint8*)"translucent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8874, 0 );
      }
      goto label$7546;
      label$7579:;
      {
       FBSTRING* vr$8875 = fb_StrAllocTempDescZEx( (uint8*)"transmit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8875, 0 );
      }
      goto label$7546;
      label$7580:;
      {
       FBSTRING* vr$8876 = fb_StrAllocTempDescZEx( (uint8*)"transparent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8876, 0 );
      }
      goto label$7546;
      label$7581:;
      {
       FBSTRING* vr$8877 = fb_StrAllocTempDescZEx( (uint8*)"transpose", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8877, 0 );
      }
      goto label$7546;
      label$7582:;
      {
       FBSTRING* vr$8878 = fb_StrAllocTempDescZEx( (uint8*)"triangle", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8878, 0 );
      }
      goto label$7546;
      label$7583:;
      {
       FBSTRING* vr$8879 = fb_StrAllocTempDescZEx( (uint8*)"triangle_wave", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8879, 0 );
      }
      goto label$7546;
      label$7584:;
      {
       FBSTRING* vr$8880 = fb_StrAllocTempDescZEx( (uint8*)"trim", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8880, 0 );
      }
      goto label$7546;
      label$7585:;
      {
       FBSTRING* vr$8881 = fb_StrAllocTempDescZEx( (uint8*)"trim_b", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8881, 0 );
      }
      goto label$7546;
      label$7586:;
      {
       FBSTRING* vr$8882 = fb_StrAllocTempDescZEx( (uint8*)"trim_mb", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8882, 0 );
      }
      goto label$7546;
      label$7587:;
      {
       FBSTRING* vr$8883 = fb_StrAllocTempDescZEx( (uint8*)"troff", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8883, 0 );
      }
      goto label$7546;
      label$7588:;
      {
       FBSTRING* vr$8884 = fb_StrAllocTempDescZEx( (uint8*)"tron", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8884, 0 );
      }
      goto label$7546;
      label$7589:;
      {
       FBSTRING* vr$8885 = fb_StrAllocTempDescZEx( (uint8*)"true", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8885, 0 );
      }
      goto label$7546;
      label$7590:;
      {
       FBSTRING* vr$8886 = fb_StrAllocTempDescZEx( (uint8*)"trunc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8886, 0 );
      }
      goto label$7546;
      label$7591:;
      {
       FBSTRING* vr$8887 = fb_StrAllocTempDescZEx( (uint8*)"try", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8887, 0 );
      }
      goto label$7546;
      label$7592:;
      {
       FBSTRING* vr$8888 = fb_StrAllocTempDescZEx( (uint8*)"ttf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8888, 0 );
      }
      goto label$7546;
      label$7593:;
      {
       FBSTRING* vr$8889 = fb_StrAllocTempDescZEx( (uint8*)"turb_depth", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8889, 0 );
      }
      goto label$7546;
      label$7594:;
      {
       FBSTRING* vr$8890 = fb_StrAllocTempDescZEx( (uint8*)"turbulence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8890, 0 );
      }
      goto label$7546;
      label$7595:;
      {
       FBSTRING* vr$8891 = fb_StrAllocTempDescZEx( (uint8*)"type", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8891, 0 );
      }
      goto label$7546;
      label$7596:;
      {
       FBSTRING* vr$8892 = fb_StrAllocTempDescZEx( (uint8*)"typedef", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8892, 0 );
      }
      goto label$7546;
      label$7597:;
      {
       FBSTRING* vr$8893 = fb_StrAllocTempDescZEx( (uint8*)"u", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8893, 0 );
      }
      goto label$7546;
      label$7598:;
      {
       FBSTRING* vr$8894 = fb_StrAllocTempDescZEx( (uint8*)"uimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8894, 0 );
      }
      goto label$7546;
      label$7599:;
      {
       FBSTRING* vr$8895 = fb_StrAllocTempDescZEx( (uint8*)"uimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8895, 0 );
      }
      goto label$7546;
      label$7600:;
      {
       FBSTRING* vr$8896 = fb_StrAllocTempDescZEx( (uint8*)"uimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8896, 0 );
      }
      goto label$7546;
      label$7601:;
      {
       FBSTRING* vr$8897 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8897, 0 );
      }
      goto label$7546;
      label$7602:;
      {
       FBSTRING* vr$8898 = fb_StrAllocTempDescZEx( (uint8*)"uimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8898, 0 );
      }
      goto label$7546;
      label$7603:;
      {
       FBSTRING* vr$8899 = fb_StrAllocTempDescZEx( (uint8*)"uimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8899, 0 );
      }
      goto label$7546;
      label$7604:;
      {
       FBSTRING* vr$8900 = fb_StrAllocTempDescZEx( (uint8*)"uimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8900, 0 );
      }
      goto label$7546;
      label$7605:;
      {
       FBSTRING* vr$8901 = fb_StrAllocTempDescZEx( (uint8*)"uint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8901, 0 );
      }
      goto label$7546;
      label$7606:;
      {
       FBSTRING* vr$8902 = fb_StrAllocTempDescZEx( (uint8*)"ultra_wide_angle", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8902, 0 );
      }
      goto label$7546;
      label$7607:;
      {
       FBSTRING* vr$8903 = fb_StrAllocTempDescZEx( (uint8*)"undef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8903, 0 );
      }
      goto label$7546;
      label$7608:;
      {
       FBSTRING* vr$8904 = fb_StrAllocTempDescZEx( (uint8*)"uniform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8904, 0 );
      }
      goto label$7546;
      label$7609:;
      {
       FBSTRING* vr$8905 = fb_StrAllocTempDescZEx( (uint8*)"union", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8905, 0 );
      }
      goto label$7546;
      label$7610:;
      {
       FBSTRING* vr$8906 = fb_StrAllocTempDescZEx( (uint8*)"unit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8906, 0 );
      }
      goto label$7546;
      label$7611:;
      {
       FBSTRING* vr$8907 = fb_StrAllocTempDescZEx( (uint8*)"unknown", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8907, 0 );
      }
      goto label$7546;
      label$7612:;
      {
       FBSTRING* vr$8908 = fb_StrAllocTempDescZEx( (uint8*)"unlock", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8908, 0 );
      }
      goto label$7546;
      label$7613:;
      {
       FBSTRING* vr$8909 = fb_StrAllocTempDescZEx( (uint8*)"unsigned", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8909, 0 );
      }
      goto label$7546;
      label$7614:;
      {
       FBSTRING* vr$8910 = fb_StrAllocTempDescZEx( (uint8*)"unstring", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8910, 0 );
      }
      goto label$7546;
      label$7615:;
      {
       FBSTRING* vr$8911 = fb_StrAllocTempDescZEx( (uint8*)"until", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8911, 0 );
      }
      goto label$7546;
      label$7616:;
      {
       FBSTRING* vr$8912 = fb_StrAllocTempDescZEx( (uint8*)"up", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8912, 0 );
      }
      goto label$7546;
      label$7617:;
      {
       FBSTRING* vr$8913 = fb_StrAllocTempDescZEx( (uint8*)"update", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8913, 0 );
      }
      goto label$7546;
      label$7618:;
      {
       FBSTRING* vr$8914 = fb_StrAllocTempDescZEx( (uint8*)"upon", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8914, 0 );
      }
      goto label$7546;
      label$7619:;
      {
       FBSTRING* vr$8915 = fb_StrAllocTempDescZEx( (uint8*)"upper", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8915, 0 );
      }
      goto label$7546;
      label$7620:;
      {
       FBSTRING* vr$8916 = fb_StrAllocTempDescZEx( (uint8*)"upper_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8916, 0 );
      }
      goto label$7546;
      label$7621:;
      {
       FBSTRING* vr$8917 = fb_StrAllocTempDescZEx( (uint8*)"usage", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8917, 0 );
      }
      goto label$7546;
      label$7622:;
      {
       FBSTRING* vr$8918 = fb_StrAllocTempDescZEx( (uint8*)"usampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8918, 0 );
      }
      goto label$7546;
      label$7623:;
      {
       FBSTRING* vr$8919 = fb_StrAllocTempDescZEx( (uint8*)"usampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8919, 0 );
      }
      goto label$7546;
      label$7624:;
      {
       FBSTRING* vr$8920 = fb_StrAllocTempDescZEx( (uint8*)"usampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8920, 0 );
      }
      goto label$7546;
      label$7625:;
      {
       FBSTRING* vr$8921 = fb_StrAllocTempDescZEx( (uint8*)"usampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8921, 0 );
      }
      goto label$7546;
      label$7626:;
      {
       FBSTRING* vr$8922 = fb_StrAllocTempDescZEx( (uint8*)"usampler2drect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8922, 0 );
      }
      goto label$7546;
      label$7627:;
      {
       FBSTRING* vr$8923 = fb_StrAllocTempDescZEx( (uint8*)"usampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8923, 0 );
      }
      goto label$7546;
      label$7628:;
      {
       FBSTRING* vr$8924 = fb_StrAllocTempDescZEx( (uint8*)"usamplerBufferStruct", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8924, 0 );
      }
      goto label$7546;
      label$7629:;
      {
       FBSTRING* vr$8925 = fb_StrAllocTempDescZEx( (uint8*)"usamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8925, 0 );
      }
      goto label$7546;
      label$7630:;
      {
       FBSTRING* vr$8926 = fb_StrAllocTempDescZEx( (uint8*)"use", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8926, 0 );
      }
      goto label$7546;
      label$7631:;
      {
       FBSTRING* vr$8927 = fb_StrAllocTempDescZEx( (uint8*)"use_alpha", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8927, 0 );
      }
      goto label$7546;
      label$7632:;
      {
       FBSTRING* vr$8928 = fb_StrAllocTempDescZEx( (uint8*)"use_color", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8928, 0 );
      }
      goto label$7546;
      label$7633:;
      {
       FBSTRING* vr$8929 = fb_StrAllocTempDescZEx( (uint8*)"use_colour", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8929, 0 );
      }
      goto label$7546;
      label$7634:;
      {
       FBSTRING* vr$8930 = fb_StrAllocTempDescZEx( (uint8*)"use_index", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8930, 0 );
      }
      goto label$7546;
      label$7635:;
      {
       FBSTRING* vr$8931 = fb_StrAllocTempDescZEx( (uint8*)"uses", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8931, 0 );
      }
      goto label$7546;
      label$7636:;
      {
       FBSTRING* vr$8932 = fb_StrAllocTempDescZEx( (uint8*)"using", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8932, 0 );
      }
      goto label$7546;
      label$7637:;
      {
       FBSTRING* vr$8933 = fb_StrAllocTempDescZEx( (uint8*)"usr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8933, 0 );
      }
      goto label$7546;
      label$7638:;
      {
       FBSTRING* vr$8934 = fb_StrAllocTempDescZEx( (uint8*)"u_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8934, 0 );
      }
      goto label$7546;
      label$7639:;
      {
       FBSTRING* vr$8935 = fb_StrAllocTempDescZEx( (uint8*)"utf8", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8935, 0 );
      }
      goto label$7546;
      label$7640:;
      {
       FBSTRING* vr$8936 = fb_StrAllocTempDescZEx( (uint8*)"utf16", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8936, 0 );
      }
      goto label$7546;
      label$7641:;
      {
       FBSTRING* vr$8937 = fb_StrAllocTempDescZEx( (uint8*)"utf32", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8937, 0 );
      }
      goto label$7546;
      label$7642:;
      {
       FBSTRING* vr$8938 = fb_StrAllocTempDescZEx( (uint8*)"uvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8938, 0 );
      }
      goto label$7546;
      label$7643:;
      {
       FBSTRING* vr$8939 = fb_StrAllocTempDescZEx( (uint8*)"uvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8939, 0 );
      }
      goto label$7546;
      label$7644:;
      {
       FBSTRING* vr$8940 = fb_StrAllocTempDescZEx( (uint8*)"uvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8940, 0 );
      }
      goto label$7546;
      label$7645:;
      {
       FBSTRING* vr$8941 = fb_StrAllocTempDescZEx( (uint8*)"uv_indices", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8941, 0 );
      }
      goto label$7546;
      label$7646:;
      {
       FBSTRING* vr$8942 = fb_StrAllocTempDescZEx( (uint8*)"uv_mapping", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8942, 0 );
      }
      goto label$7546;
      label$7647:;
      {
       FBSTRING* vr$8943 = fb_StrAllocTempDescZEx( (uint8*)"uv_vectors", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8943, 0 );
      }
      goto label$7546;
      label$7648:;
      {
       FBSTRING* vr$8944 = fb_StrAllocTempDescZEx( (uint8*)"v", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8944, 0 );
      }
      goto label$7546;
      label$7649:;
      {
       FBSTRING* vr$8945 = fb_StrAllocTempDescZEx( (uint8*)"val", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8945, 0 );
      }
      goto label$7546;
      label$7650:;
      {
       FBSTRING* vr$8946 = fb_StrAllocTempDescZEx( (uint8*)"value", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8946, 0 );
      }
      goto label$7546;
      label$7651:;
      {
       FBSTRING* vr$8947 = fb_StrAllocTempDescZEx( (uint8*)"values", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8947, 0 );
      }
      goto label$7546;
      label$7652:;
      {
       FBSTRING* vr$8948 = fb_StrAllocTempDescZEx( (uint8*)"var", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8948, 0 );
      }
      goto label$7546;
      label$7653:;
      {
       FBSTRING* vr$8949 = fb_StrAllocTempDescZEx( (uint8*)"varchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8949, 0 );
      }
      goto label$7546;
      label$7654:;
      {
       FBSTRING* vr$8950 = fb_StrAllocTempDescZEx( (uint8*)"variance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8950, 0 );
      }
      goto label$7546;
      label$7655:;
      {
       FBSTRING* vr$8951 = fb_StrAllocTempDescZEx( (uint8*)"varptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8951, 0 );
      }
      goto label$7546;
      label$7656:;
      {
       FBSTRING* vr$8952 = fb_StrAllocTempDescZEx( (uint8*)"varying", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8952, 0 );
      }
      goto label$7546;
      label$7657:;
      {
       FBSTRING* vr$8953 = fb_StrAllocTempDescZEx( (uint8*)"vaxis_rotate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8953, 0 );
      }
      goto label$7546;
      label$7658:;
      {
       FBSTRING* vr$8954 = fb_StrAllocTempDescZEx( (uint8*)"vcross", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8954, 0 );
      }
      goto label$7546;
      label$7659:;
      {
       FBSTRING* vr$8955 = fb_StrAllocTempDescZEx( (uint8*)"vdot", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8955, 0 );
      }
      goto label$7546;
      label$7660:;
      {
       FBSTRING* vr$8956 = fb_StrAllocTempDescZEx( (uint8*)"vec2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8956, 0 );
      }
      goto label$7546;
      label$7661:;
      {
       FBSTRING* vr$8957 = fb_StrAllocTempDescZEx( (uint8*)"vec3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8957, 0 );
      }
      goto label$7546;
      label$7662:;
      {
       FBSTRING* vr$8958 = fb_StrAllocTempDescZEx( (uint8*)"vec4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8958, 0 );
      }
      goto label$7546;
      label$7663:;
      {
       FBSTRING* vr$8959 = fb_StrAllocTempDescZEx( (uint8*)"vector", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8959, 0 );
      }
      goto label$7546;
      label$7664:;
      {
       FBSTRING* vr$8960 = fb_StrAllocTempDescZEx( (uint8*)"version", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8960, 0 );
      }
      goto label$7546;
      label$7665:;
      {
       FBSTRING* vr$8961 = fb_StrAllocTempDescZEx( (uint8*)"vertex_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8961, 0 );
      }
      goto label$7546;
      label$7666:;
      {
       FBSTRING* vr$8962 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8962, 0 );
      }
      goto label$7546;
      label$7667:;
      {
       FBSTRING* vr$8963 = fb_StrAllocTempDescZEx( (uint8*)"virtual", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8963, 0 );
      }
      goto label$7546;
      label$7668:;
      {
       FBSTRING* vr$8964 = fb_StrAllocTempDescZEx( (uint8*)"vlength", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8964, 0 );
      }
      goto label$7546;
      label$7669:;
      {
       FBSTRING* vr$8965 = fb_StrAllocTempDescZEx( (uint8*)"vnormalize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8965, 0 );
      }
      goto label$7546;
      label$7670:;
      {
       FBSTRING* vr$8966 = fb_StrAllocTempDescZEx( (uint8*)"void", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8966, 0 );
      }
      goto label$7546;
      label$7671:;
      {
       FBSTRING* vr$8967 = fb_StrAllocTempDescZEx( (uint8*)"volatile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8967, 0 );
      }
      goto label$7546;
      label$7672:;
      {
       FBSTRING* vr$8968 = fb_StrAllocTempDescZEx( (uint8*)"vrotate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8968, 0 );
      }
      goto label$7546;
      label$7673:;
      {
       FBSTRING* vr$8969 = fb_StrAllocTempDescZEx( (uint8*)"v_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8969, 0 );
      }
      goto label$7546;
      label$7674:;
      {
       FBSTRING* vr$8970 = fb_StrAllocTempDescZEx( (uint8*)"vstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8970, 0 );
      }
      goto label$7546;
      label$7675:;
      {
       FBSTRING* vr$8971 = fb_StrAllocTempDescZEx( (uint8*)"vturbulence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8971, 0 );
      }
      goto label$7546;
      label$7676:;
      {
       FBSTRING* vr$8972 = fb_StrAllocTempDescZEx( (uint8*)"w", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8972, 0 );
      }
      goto label$7546;
      label$7677:;
      {
       FBSTRING* vr$8973 = fb_StrAllocTempDescZEx( (uint8*)"wait", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8973, 0 );
      }
      goto label$7546;
      label$7678:;
      {
       FBSTRING* vr$8974 = fb_StrAllocTempDescZEx( (uint8*)"ward", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8974, 0 );
      }
      goto label$7546;
      label$7679:;
      {
       FBSTRING* vr$8975 = fb_StrAllocTempDescZEx( (uint8*)"warning", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8975, 0 );
      }
      goto label$7546;
      label$7680:;
      {
       FBSTRING* vr$8976 = fb_StrAllocTempDescZEx( (uint8*)"warp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8976, 0 );
      }
      goto label$7546;
      label$7681:;
      {
       FBSTRING* vr$8977 = fb_StrAllocTempDescZEx( (uint8*)"water_level", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8977, 0 );
      }
      goto label$7546;
      label$7682:;
      {
       FBSTRING* vr$8978 = fb_StrAllocTempDescZEx( (uint8*)"wavelength_color", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8978, 0 );
      }
      goto label$7546;
      label$7683:;
      {
       FBSTRING* vr$8979 = fb_StrAllocTempDescZEx( (uint8*)"waves", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8979, 0 );
      }
      goto label$7546;
      label$7684:;
      {
       FBSTRING* vr$8980 = fb_StrAllocTempDescZEx( (uint8*)"wend", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8980, 0 );
      }
      goto label$7546;
      label$7685:;
      {
       FBSTRING* vr$8981 = fb_StrAllocTempDescZEx( (uint8*)"when", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8981, 0 );
      }
      goto label$7546;
      label$7686:;
      {
       FBSTRING* vr$8982 = fb_StrAllocTempDescZEx( (uint8*)"when-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8982, 0 );
      }
      goto label$7546;
      label$7687:;
      {
       FBSTRING* vr$8983 = fb_StrAllocTempDescZEx( (uint8*)"where", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8983, 0 );
      }
      goto label$7546;
      label$7688:;
      {
       FBSTRING* vr$8984 = fb_StrAllocTempDescZEx( (uint8*)"while", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8984, 0 );
      }
      goto label$7546;
      label$7689:;
      {
       FBSTRING* vr$8985 = fb_StrAllocTempDescZEx( (uint8*)"width", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8985, 0 );
      }
      goto label$7546;
      label$7690:;
      {
       FBSTRING* vr$8986 = fb_StrAllocTempDescZEx( (uint8*)"window", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8986, 0 );
      }
      goto label$7546;
      label$7691:;
      {
       FBSTRING* vr$8987 = fb_StrAllocTempDescZEx( (uint8*)"with", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8987, 0 );
      }
      goto label$7546;
      label$7692:;
      {
       FBSTRING* vr$8988 = fb_StrAllocTempDescZEx( (uint8*)"wood", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8988, 0 );
      }
      goto label$7546;
      label$7693:;
      {
       FBSTRING* vr$8989 = fb_StrAllocTempDescZEx( (uint8*)"words", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8989, 0 );
      }
      goto label$7546;
      label$7694:;
      {
       FBSTRING* vr$8990 = fb_StrAllocTempDescZEx( (uint8*)"working-storage", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8990, 0 );
      }
      goto label$7546;
      label$7695:;
      {
       FBSTRING* vr$8991 = fb_StrAllocTempDescZEx( (uint8*)"wrinkles", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8991, 0 );
      }
      goto label$7546;
      label$7696:;
      {
       FBSTRING* vr$8992 = fb_StrAllocTempDescZEx( (uint8*)"write", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8992, 0 );
      }
      goto label$7546;
      label$7697:;
      {
       FBSTRING* vr$8993 = fb_StrAllocTempDescZEx( (uint8*)"write-only", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8993, 0 );
      }
      goto label$7546;
      label$7698:;
      {
       FBSTRING* vr$8994 = fb_StrAllocTempDescZEx( (uint8*)"x", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8994, 0 );
      }
      goto label$7546;
      label$7699:;
      {
       FBSTRING* vr$8995 = fb_StrAllocTempDescZEx( (uint8*)"xor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8995, 0 );
      }
      goto label$7546;
      label$7700:;
      {
       FBSTRING* vr$8996 = fb_StrAllocTempDescZEx( (uint8*)"xor_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8996, 0 );
      }
      goto label$7546;
      label$7701:;
      {
       FBSTRING* vr$8997 = fb_StrAllocTempDescZEx( (uint8*)"y", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8997, 1 );
      }
      goto label$7546;
      label$7702:;
      {
       FBSTRING* vr$8998 = fb_StrAllocTempDescZEx( (uint8*)"year", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8998, 0 );
      }
      goto label$7546;
      label$7703:;
      {
       FBSTRING* vr$8999 = fb_StrAllocTempDescZEx( (uint8*)"yes", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8999, 0 );
      }
      goto label$7546;
      label$7704:;
      {
       FBSTRING* vr$9000 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9000, 0 );
      }
      goto label$7546;
      label$7705:;
      {
       FBSTRING* vr$9001 = fb_StrAllocTempDescZEx( (uint8*)"z", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9001, 0 );
      }
      goto label$7546;
      label$7706:;
      {
       FBSTRING* vr$9002 = fb_StrAllocTempDescZEx( (uint8*)"zero", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9002, 0 );
      }
      goto label$7546;
      label$7707:;
      {
       FBSTRING* vr$9003 = fb_StrAllocTempDescZEx( (uint8*)"zeroes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9003, 0 );
      }
      goto label$7546;
      label$7708:;
      {
       FBSTRING* vr$9004 = fb_StrAllocTempDescZEx( (uint8*)"zeros", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9004, 0 );
      }
      goto label$7546;
      label$7547:;
      static const void* tmp$4522[162ll] = {
       &&label$7548,
       &&label$7549,
       &&label$7550,
       &&label$7551,
       &&label$7552,
       &&label$7553,
       &&label$7554,
       &&label$7555,
       &&label$7556,
       &&label$7557,
       &&label$7558,
       &&label$7559,
       &&label$7560,
       &&label$7561,
       &&label$7546,
       &&label$7562,
       &&label$7563,
       &&label$7564,
       &&label$7565,
       &&label$7566,
       &&label$7567,
       &&label$7568,
       &&label$7569,
       &&label$7570,
       &&label$7571,
       &&label$7572,
       &&label$7573,
       &&label$7574,
       &&label$7575,
       &&label$7576,
       &&label$7577,
       &&label$7578,
       &&label$7579,
       &&label$7580,
       &&label$7581,
       &&label$7582,
       &&label$7583,
       &&label$7584,
       &&label$7585,
       &&label$7586,
       &&label$7587,
       &&label$7588,
       &&label$7589,
       &&label$7590,
       &&label$7591,
       &&label$7592,
       &&label$7593,
       &&label$7594,
       &&label$7595,
       &&label$7596,
       &&label$7597,
       &&label$7598,
       &&label$7599,
       &&label$7600,
       &&label$7601,
       &&label$7602,
       &&label$7603,
       &&label$7604,
       &&label$7605,
       &&label$7606,
       &&label$7607,
       &&label$7608,
       &&label$7609,
       &&label$7610,
       &&label$7611,
       &&label$7612,
       &&label$7613,
       &&label$7614,
       &&label$7615,
       &&label$7616,
       &&label$7617,
       &&label$7618,
       &&label$7619,
       &&label$7620,
       &&label$7621,
       &&label$7622,
       &&label$7623,
       &&label$7624,
       &&label$7625,
       &&label$7626,
       &&label$7627,
       &&label$7628,
       &&label$7629,
       &&label$7630,
       &&label$7631,
       &&label$7632,
       &&label$7633,
       &&label$7634,
       &&label$7635,
       &&label$7636,
       &&label$7637,
       &&label$7638,
       &&label$7639,
       &&label$7640,
       &&label$7641,
       &&label$7642,
       &&label$7643,
       &&label$7644,
       &&label$7645,
       &&label$7646,
       &&label$7647,
       &&label$7648,
       &&label$7649,
       &&label$7650,
       &&label$7651,
       &&label$7652,
       &&label$7653,
       &&label$7654,
       &&label$7655,
       &&label$7656,
       &&label$7657,
       &&label$7658,
       &&label$7659,
       &&label$7660,
       &&label$7661,
       &&label$7662,
       &&label$7663,
       &&label$7664,
       &&label$7665,
       &&label$7666,
       &&label$7667,
       &&label$7668,
       &&label$7669,
       &&label$7670,
       &&label$7671,
       &&label$7672,
       &&label$7673,
       &&label$7674,
       &&label$7675,
       &&label$7676,
       &&label$7677,
       &&label$7678,
       &&label$7679,
       &&label$7680,
       &&label$7681,
       &&label$7682,
       &&label$7683,
       &&label$7684,
       &&label$7685,
       &&label$7686,
       &&label$7687,
       &&label$7688,
       &&label$7689,
       &&label$7690,
       &&label$7691,
       &&label$7692,
       &&label$7693,
       &&label$7694,
       &&label$7695,
       &&label$7696,
       &&label$7697,
       &&label$7698,
       &&label$7699,
       &&label$7700,
       &&label$7701,
       &&label$7702,
       &&label$7703,
       &&label$7704,
       &&label$7705,
       &&label$7706,
       &&label$7707,
       &&label$7708,
      };
      if( TMP$3712$6 > 161ull ) goto label$7546;
      goto *tmp$4522[TMP$3712$6 - 0ull];
      label$7546:;
     }
    }
    goto label$5883;
    label$7709:;
    {
     {
      uint64 TMP$3868$6;
      TMP$3868$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$7711;
      label$7712:;
      {
       FBSTRING* vr$9006 = fb_StrAllocTempDescZEx( (uint8*)"buffer", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9006, 0 );
      }
      goto label$7710;
      label$7713:;
      {
       FBSTRING* vr$9007 = fb_StrAllocTempDescZEx( (uint8*)"shared", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9007, 0 );
      }
      goto label$7710;
      label$7714:;
      {
       FBSTRING* vr$9008 = fb_StrAllocTempDescZEx( (uint8*)"coherent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9008, 0 );
      }
      goto label$7710;
      label$7715:;
      {
       FBSTRING* vr$9009 = fb_StrAllocTempDescZEx( (uint8*)"restrict", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9009, 0 );
      }
      goto label$7710;
      label$7716:;
      {
       FBSTRING* vr$9010 = fb_StrAllocTempDescZEx( (uint8*)"readonly", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9010, 0 );
      }
      goto label$7710;
      label$7717:;
      {
       FBSTRING* vr$9011 = fb_StrAllocTempDescZEx( (uint8*)"writeonly", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9011, 0 );
      }
      goto label$7710;
      label$7718:;
      {
       FBSTRING* vr$9012 = fb_StrAllocTempDescZEx( (uint8*)"atomic_uint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9012, 0 );
      }
      goto label$7710;
      label$7719:;
      {
       FBSTRING* vr$9013 = fb_StrAllocTempDescZEx( (uint8*)"patch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9013, 0 );
      }
      goto label$7710;
      label$7720:;
      {
       FBSTRING* vr$9014 = fb_StrAllocTempDescZEx( (uint8*)"sample", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9014, 0 );
      }
      goto label$7710;
      label$7721:;
      {
       FBSTRING* vr$9015 = fb_StrAllocTempDescZEx( (uint8*)"precise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9015, 0 );
      }
      goto label$7710;
      label$7722:;
      {
       FBSTRING* vr$9016 = fb_StrAllocTempDescZEx( (uint8*)"dmat2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9016, 0 );
      }
      goto label$7710;
      label$7723:;
      {
       FBSTRING* vr$9017 = fb_StrAllocTempDescZEx( (uint8*)"dmat3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9017, 0 );
      }
      goto label$7710;
      label$7724:;
      {
       FBSTRING* vr$9018 = fb_StrAllocTempDescZEx( (uint8*)"dmat4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9018, 0 );
      }
      goto label$7710;
      label$7725:;
      {
       FBSTRING* vr$9019 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9019, 0 );
      }
      goto label$7710;
      label$7726:;
      {
       FBSTRING* vr$9020 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9020, 0 );
      }
      goto label$7710;
      label$7727:;
      {
       FBSTRING* vr$9021 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9021, 0 );
      }
      goto label$7710;
      label$7728:;
      {
       FBSTRING* vr$9022 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9022, 0 );
      }
      goto label$7710;
      label$7729:;
      {
       FBSTRING* vr$9023 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9023, 0 );
      }
      goto label$7710;
      label$7730:;
      {
       FBSTRING* vr$9024 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9024, 0 );
      }
      goto label$7710;
      label$7731:;
      {
       FBSTRING* vr$9025 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9025, 0 );
      }
      goto label$7710;
      label$7732:;
      {
       FBSTRING* vr$9026 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9026, 0 );
      }
      goto label$7710;
      label$7733:;
      {
       FBSTRING* vr$9027 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9027, 0 );
      }
      goto label$7710;
      label$7734:;
      {
       FBSTRING* vr$9028 = fb_StrAllocTempDescZEx( (uint8*)"image2DMS", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9028, 0 );
      }
      goto label$7710;
      label$7735:;
      {
       FBSTRING* vr$9029 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9029, 0 );
      }
      goto label$7710;
      label$7736:;
      {
       FBSTRING* vr$9030 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9030, 0 );
      }
      goto label$7710;
      label$7737:;
      {
       FBSTRING* vr$9031 = fb_StrAllocTempDescZEx( (uint8*)"image2DMSArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9031, 0 );
      }
      goto label$7710;
      label$7738:;
      {
       FBSTRING* vr$9032 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9032, 0 );
      }
      goto label$7710;
      label$7739:;
      {
       FBSTRING* vr$9033 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9033, 0 );
      }
      goto label$7710;
      label$7740:;
      {
       FBSTRING* vr$9034 = fb_StrAllocTempDescZEx( (uint8*)"struct", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9034, 0 );
      }
      goto label$7710;
      label$7741:;
      {
       FBSTRING* vr$9035 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9035, 0 );
      }
      goto label$7710;
      label$7742:;
      {
       FBSTRING* vr$9036 = fb_StrAllocTempDescZEx( (uint8*)"resource", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9036, 0 );
      }
      goto label$7710;
      label$7743:;
      {
       FBSTRING* vr$9037 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9037, 0 );
      }
      goto label$7710;
      label$7744:;
      {
       FBSTRING* vr$9038 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9038, 0 );
      }
      goto label$7710;
      label$7745:;
      {
       FBSTRING* vr$9039 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9039, 0 );
      }
      goto label$7710;
      label$7746:;
      {
       FBSTRING* vr$9040 = fb_StrAllocTempDescZEx( (uint8*)"M_2PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9040, 0 );
      }
      goto label$7710;
      label$7747:;
      {
       FBSTRING* vr$9041 = fb_StrAllocTempDescZEx( (uint8*)"M_4PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9041, 0 );
      }
      goto label$7710;
      label$7748:;
      {
       FBSTRING* vr$9042 = fb_StrAllocTempDescZEx( (uint8*)"M_2_SQRTPI", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9042, 0 );
      }
      goto label$7710;
      label$7749:;
      {
       FBSTRING* vr$9043 = fb_StrAllocTempDescZEx( (uint8*)"M_E", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9043, 0 );
      }
      goto label$7710;
      label$7750:;
      {
       FBSTRING* vr$9044 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9044, 0 );
      }
      goto label$7710;
      label$7751:;
      {
       FBSTRING* vr$9045 = fb_StrAllocTempDescZEx( (uint8*)"M_LN10", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9045, 0 );
      }
      goto label$7710;
      label$7752:;
      {
       FBSTRING* vr$9046 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9046, 0 );
      }
      goto label$7710;
      label$7753:;
      {
       FBSTRING* vr$9047 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9047, 0 );
      }
      goto label$7710;
      label$7754:;
      {
       FBSTRING* vr$9048 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9048, 0 );
      }
      goto label$7710;
      label$7755:;
      {
       FBSTRING* vr$9049 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT1_2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9049, 0 );
      }
      goto label$7710;
      label$7756:;
      {
       FBSTRING* vr$9050 = fb_StrAllocTempDescZEx( (uint8*)"sincos", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9050, 0 );
      }
      goto label$7710;
      label$7757:;
      {
       FBSTRING* vr$9051 = fb_StrAllocTempDescZEx( (uint8*)"inversesqrt", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9051, 0 );
      }
      goto label$7710;
      label$7758:;
      {
       FBSTRING* vr$9052 = fb_StrAllocTempDescZEx( (uint8*)"seg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9052, 0 );
      }
      goto label$7710;
      label$7759:;
      {
       FBSTRING* vr$9053 = fb_StrAllocTempDescZEx( (uint8*)"seek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9053, 0 );
      }
      goto label$7710;
      label$7760:;
      {
       FBSTRING* vr$9054 = fb_StrAllocTempDescZEx( (uint8*)"sleep", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9054, 0 );
      }
      goto label$7710;
      label$7761:;
      {
       FBSTRING* vr$9055 = fb_StrAllocTempDescZEx( (uint8*)"console", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9055, 0 );
      }
      goto label$7710;
      label$7762:;
      {
       FBSTRING* vr$9056 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_1", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9056, 0 );
      }
      goto label$7710;
      label$7763:;
      {
       FBSTRING* vr$9057 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_2", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9057, 0 );
      }
      goto label$7710;
      label$7764:;
      {
       FBSTRING* vr$9058 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_3", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9058, 0 );
      }
      goto label$7710;
      label$7765:;
      {
       FBSTRING* vr$9059 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_4", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9059, 0 );
      }
      goto label$7710;
      label$7766:;
      {
       FBSTRING* vr$9060 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_5", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9060, 0 );
      }
      goto label$7710;
      label$7767:;
      {
       FBSTRING* vr$9061 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_6", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9061, 0 );
      }
      goto label$7710;
      label$7768:;
      {
       FBSTRING* vr$9062 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_7", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9062, 0 );
      }
      goto label$7710;
      label$7769:;
      {
       FBSTRING* vr$9063 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_8", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9063, 0 );
      }
      goto label$7710;
      label$7770:;
      {
       FBSTRING* vr$9064 = fb_StrAllocTempDescZEx( (uint8*)"abort", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9064, 0 );
      }
      goto label$7710;
      label$7771:;
      {
       FBSTRING* vr$9065 = fb_StrAllocTempDescZEx( (uint8*)"achar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9065, 0 );
      }
      goto label$7710;
      label$7772:;
      {
       FBSTRING* vr$9066 = fb_StrAllocTempDescZEx( (uint8*)"acosd", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9066, 0 );
      }
      goto label$7710;
      label$7773:;
      {
       FBSTRING* vr$9067 = fb_StrAllocTempDescZEx( (uint8*)"adjustl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9067, 0 );
      }
      goto label$7710;
      label$7774:;
      {
       FBSTRING* vr$9068 = fb_StrAllocTempDescZEx( (uint8*)"adjustr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9068, 0 );
      }
      goto label$7710;
      label$7775:;
      {
       FBSTRING* vr$9069 = fb_StrAllocTempDescZEx( (uint8*)"aimag", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9069, 0 );
      }
      goto label$7710;
      label$7776:;
      {
       FBSTRING* vr$9070 = fb_StrAllocTempDescZEx( (uint8*)"aint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9070, 0 );
      }
      goto label$7710;
      label$7777:;
      {
       FBSTRING* vr$9071 = fb_StrAllocTempDescZEx( (uint8*)"alarm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9071, 0 );
      }
      goto label$7710;
      label$7778:;
      {
       FBSTRING* vr$9072 = fb_StrAllocTempDescZEx( (uint8*)"alocated", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9072, 0 );
      }
      goto label$7710;
      label$7779:;
      {
       FBSTRING* vr$9073 = fb_StrAllocTempDescZEx( (uint8*)"implicit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9073, 0 );
      }
      goto label$7710;
      label$7780:;
      {
       FBSTRING* vr$9074 = fb_StrAllocTempDescZEx( (uint8*)"find", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9074, 0 );
      }
      goto label$7710;
      label$7781:;
      {
       FBSTRING* vr$9075 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9075, 0 );
      }
      goto label$7710;
      label$7782:;
      {
       FBSTRING* vr$9076 = fb_StrAllocTempDescZEx( (uint8*)"image2DRect", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9076, 0 );
      }
      goto label$7710;
      label$7783:;
      {
       FBSTRING* vr$9077 = fb_StrAllocTempDescZEx( (uint8*)"smpler2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9077, 0 );
      }
      goto label$7710;
      label$7784:;
      {
       FBSTRING* vr$9078 = fb_StrAllocTempDescZEx( (uint8*)"shortint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9078, 0 );
      }
      goto label$7710;
      label$7785:;
      {
       FBSTRING* vr$9079 = fb_StrAllocTempDescZEx( (uint8*)"word", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9079, 0 );
      }
      goto label$7710;
      label$7786:;
      {
       FBSTRING* vr$9080 = fb_StrAllocTempDescZEx( (uint8*)"cardinal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9080, 0 );
      }
      goto label$7710;
      label$7787:;
      {
       FBSTRING* vr$9081 = fb_StrAllocTempDescZEx( (uint8*)"longint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9081, 0 );
      }
      goto label$7710;
      label$7788:;
      {
       FBSTRING* vr$9082 = fb_StrAllocTempDescZEx( (uint8*)"longword", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9082, 0 );
      }
      goto label$7710;
      label$7789:;
      {
       FBSTRING* vr$9083 = fb_StrAllocTempDescZEx( (uint8*)"int64", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9083, 0 );
      }
      goto label$7710;
      label$7790:;
      {
       FBSTRING* vr$9084 = fb_StrAllocTempDescZEx( (uint8*)"qword", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9084, 0 );
      }
      goto label$7710;
      label$7791:;
      {
       FBSTRING* vr$9085 = fb_StrAllocTempDescZEx( (uint8*)"single", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9085, 0 );
      }
      goto label$7710;
      label$7792:;
      {
       FBSTRING* vr$9086 = fb_StrAllocTempDescZEx( (uint8*)"extended", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9086, 0 );
      }
      goto label$7710;
      label$7793:;
      {
       FBSTRING* vr$9087 = fb_StrAllocTempDescZEx( (uint8*)"boolean", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9087, 0 );
      }
      goto label$7710;
      label$7794:;
      {
       FBSTRING* vr$9088 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9088, 0 );
      }
      goto label$7710;
      label$7795:;
      {
       FBSTRING* vr$9089 = fb_StrAllocTempDescZEx( (uint8*)"base", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9089, 0 );
      }
      goto label$7710;
      label$7796:;
      {
       FBSTRING* vr$9090 = fb_StrAllocTempDescZEx( (uint8*)"sbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9090, 0 );
      }
      goto label$7710;
      label$7797:;
      {
       FBSTRING* vr$9091 = fb_StrAllocTempDescZEx( (uint8*)"ushort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9091, 0 );
      }
      goto label$7710;
      label$7798:;
      {
       FBSTRING* vr$9092 = fb_StrAllocTempDescZEx( (uint8*)"ulong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9092, 0 );
      }
      goto label$7710;
      label$7799:;
      {
       FBSTRING* vr$9093 = fb_StrAllocTempDescZEx( (uint8*)"catch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9093, 0 );
      }
      goto label$7710;
      label$7800:;
      {
       FBSTRING* vr$9094 = fb_StrAllocTempDescZEx( (uint8*)"checked", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9094, 0 );
      }
      goto label$7710;
      label$7801:;
      {
       FBSTRING* vr$9095 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9095, 0 );
      }
      goto label$7710;
      label$7802:;
      {
       FBSTRING* vr$9096 = fb_StrAllocTempDescZEx( (uint8*)"delegate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9096, 0 );
      }
      goto label$7710;
      label$7803:;
      {
       FBSTRING* vr$9097 = fb_StrAllocTempDescZEx( (uint8*)"event", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9097, 0 );
      }
      goto label$7710;
      label$7804:;
      {
       FBSTRING* vr$9098 = fb_StrAllocTempDescZEx( (uint8*)"foreach", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9098, 0 );
      }
      goto label$7710;
      label$7805:;
      {
       FBSTRING* vr$9099 = fb_StrAllocTempDescZEx( (uint8*)"namespace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9099, 0 );
      }
      goto label$7710;
      label$7806:;
      {
       FBSTRING* vr$9100 = fb_StrAllocTempDescZEx( (uint8*)"params", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9100, 0 );
      }
      goto label$7710;
      label$7807:;
      {
       FBSTRING* vr$9101 = fb_StrAllocTempDescZEx( (uint8*)"ref", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9101, 0 );
      }
      goto label$7710;
      label$7808:;
      {
       FBSTRING* vr$9102 = fb_StrAllocTempDescZEx( (uint8*)"sealed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9102, 0 );
      }
      goto label$7710;
      label$7809:;
      {
       FBSTRING* vr$9103 = fb_StrAllocTempDescZEx( (uint8*)"stackalloc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9103, 0 );
      }
      goto label$7710;
      label$7810:;
      {
       FBSTRING* vr$9104 = fb_StrAllocTempDescZEx( (uint8*)"typeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9104, 0 );
      }
      goto label$7710;
      label$7811:;
      {
       FBSTRING* vr$9105 = fb_StrAllocTempDescZEx( (uint8*)"throw", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9105, 0 );
      }
      goto label$7710;
      label$7812:;
      {
       FBSTRING* vr$9106 = fb_StrAllocTempDescZEx( (uint8*)"unchecked", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9106, 0 );
      }
      goto label$7710;
      label$7813:;
      {
       FBSTRING* vr$9107 = fb_StrAllocTempDescZEx( (uint8*)"unsafe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9107, 0 );
      }
      goto label$7710;
      label$7814:;
      {
       FBSTRING* vr$9108 = fb_StrAllocTempDescZEx( (uint8*)"equals", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9108, 0 );
      }
      goto label$7710;
      label$7815:;
      {
       FBSTRING* vr$9109 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9109, 0 );
      }
      goto label$7710;
      label$7816:;
      {
       FBSTRING* vr$9110 = fb_StrAllocTempDescZEx( (uint8*)"nameof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9110, 0 );
      }
      goto label$7710;
      label$7817:;
      {
       FBSTRING* vr$9111 = fb_StrAllocTempDescZEx( (uint8*)"notnull", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9111, 0 );
      }
      goto label$7710;
      label$7818:;
      {
       FBSTRING* vr$9112 = fb_StrAllocTempDescZEx( (uint8*)"orderby", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9112, 0 );
      }
      goto label$7710;
      label$7819:;
      {
       FBSTRING* vr$9113 = fb_StrAllocTempDescZEx( (uint8*)"partial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9113, 0 );
      }
      goto label$7710;
      label$7820:;
      {
       FBSTRING* vr$9114 = fb_StrAllocTempDescZEx( (uint8*)"remove", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9114, 0 );
      }
      goto label$7710;
      label$7821:;
      {
       FBSTRING* vr$9115 = fb_StrAllocTempDescZEx( (uint8*)"unmanaged", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9115, 0 );
      }
      goto label$7710;
      label$7822:;
      {
       FBSTRING* vr$9116 = fb_StrAllocTempDescZEx( (uint8*)"inf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9116, 0 );
      }
      goto label$7710;
      label$7823:;
      {
       FBSTRING* vr$9117 = fb_StrAllocTempDescZEx( (uint8*)"NaN", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9117, 0 );
      }
      goto label$7710;
      label$7824:;
      {
       FBSTRING* vr$9118 = fb_StrAllocTempDescZEx( (uint8*)"NA", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9118, 0 );
      }
      goto label$7710;
      label$7825:;
      {
       FBSTRING* vr$9119 = fb_StrAllocTempDescZEx( (uint8*)"as?", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9119, 0 );
      }
      goto label$7710;
      label$7826:;
      {
       FBSTRING* vr$9120 = fb_StrAllocTempDescZEx( (uint8*)"fun", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9120, 0 );
      }
      goto label$7710;
      label$7827:;
      {
       FBSTRING* vr$9121 = fb_StrAllocTempDescZEx( (uint8*)"!in", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9121, 0 );
      }
      goto label$7710;
      label$7828:;
      {
       FBSTRING* vr$9122 = fb_StrAllocTempDescZEx( (uint8*)"!is", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9122, 0 );
      }
      goto label$7710;
      label$7829:;
      {
       FBSTRING* vr$9123 = fb_StrAllocTempDescZEx( (uint8*)"package", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9123, 0 );
      }
      goto label$7710;
      label$7830:;
      {
       FBSTRING* vr$9124 = fb_StrAllocTempDescZEx( (uint8*)"typealias", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9124, 0 );
      }
      goto label$7710;
      label$7831:;
      {
       FBSTRING* vr$9125 = fb_StrAllocTempDescZEx( (uint8*)"init", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9125, 0 );
      }
      goto label$7710;
      label$7832:;
      {
       FBSTRING* vr$9126 = fb_StrAllocTempDescZEx( (uint8*)"param", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9126, 0 );
      }
      goto label$7710;
      label$7833:;
      {
       FBSTRING* vr$9127 = fb_StrAllocTempDescZEx( (uint8*)"receiver", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9127, 0 );
      }
      goto label$7710;
      label$7834:;
      {
       FBSTRING* vr$9128 = fb_StrAllocTempDescZEx( (uint8*)"setparam", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9128, 0 );
      }
      goto label$7710;
      label$7835:;
      {
       FBSTRING* vr$9129 = fb_StrAllocTempDescZEx( (uint8*)"actual", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9129, 0 );
      }
      goto label$7710;
      label$7836:;
      {
       FBSTRING* vr$9130 = fb_StrAllocTempDescZEx( (uint8*)"annotation", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9130, 0 );
      }
      goto label$7710;
      label$7837:;
      {
       FBSTRING* vr$9131 = fb_StrAllocTempDescZEx( (uint8*)"companion", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9131, 0 );
      }
      goto label$7710;
      label$7838:;
      {
       FBSTRING* vr$9132 = fb_StrAllocTempDescZEx( (uint8*)"crossinline", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9132, 0 );
      }
      goto label$7710;
      label$7839:;
      {
       FBSTRING* vr$9133 = fb_StrAllocTempDescZEx( (uint8*)"expect", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9133, 0 );
      }
      goto label$7710;
      label$7840:;
      {
       FBSTRING* vr$9134 = fb_StrAllocTempDescZEx( (uint8*)"infix", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9134, 0 );
      }
      goto label$7710;
      label$7841:;
      {
       FBSTRING* vr$9135 = fb_StrAllocTempDescZEx( (uint8*)"lateinit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9135, 0 );
      }
      goto label$7710;
      label$7842:;
      {
       FBSTRING* vr$9136 = fb_StrAllocTempDescZEx( (uint8*)"noinline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9136, 0 );
      }
      goto label$7710;
      label$7843:;
      {
       FBSTRING* vr$9137 = fb_StrAllocTempDescZEx( (uint8*)"reified", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9137, 0 );
      }
      goto label$7710;
      label$7844:;
      {
       FBSTRING* vr$9138 = fb_StrAllocTempDescZEx( (uint8*)"suspend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9138, 0 );
      }
      goto label$7710;
      label$7845:;
      {
       FBSTRING* vr$9139 = fb_StrAllocTempDescZEx( (uint8*)"tailrec", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9139, 0 );
      }
      goto label$7710;
      label$7846:;
      {
       FBSTRING* vr$9140 = fb_StrAllocTempDescZEx( (uint8*)"vararg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9140, 0 );
      }
      goto label$7710;
      label$7847:;
      {
       FBSTRING* vr$9141 = fb_StrAllocTempDescZEx( (uint8*)"it", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9141, 0 );
      }
      goto label$7710;
      label$7848:;
      {
       FBSTRING* vr$9142 = fb_StrAllocTempDescZEx( (uint8*)"callable", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9142, 0 );
      }
      goto label$7710;
      label$7849:;
      {
       FBSTRING* vr$9143 = fb_StrAllocTempDescZEx( (uint8*)"clone", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9143, 0 );
      }
      goto label$7710;
      label$7850:;
      {
       FBSTRING* vr$9144 = fb_StrAllocTempDescZEx( (uint8*)"echo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9144, 0 );
      }
      goto label$7710;
      label$7851:;
      {
       FBSTRING* vr$9145 = fb_StrAllocTempDescZEx( (uint8*)"empty", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9145, 0 );
      }
      goto label$7710;
      label$7852:;
      {
       FBSTRING* vr$9146 = fb_StrAllocTempDescZEx( (uint8*)"enddeclare", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9146, 0 );
      }
      goto label$7710;
      label$7853:;
      {
       FBSTRING* vr$9147 = fb_StrAllocTempDescZEx( (uint8*)"endfor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9147, 0 );
      }
      goto label$7710;
      label$7854:;
      {
       FBSTRING* vr$9148 = fb_StrAllocTempDescZEx( (uint8*)"endforeach", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9148, 0 );
      }
      goto label$7710;
      label$7855:;
      {
       FBSTRING* vr$9149 = fb_StrAllocTempDescZEx( (uint8*)"endif", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9149, 0 );
      }
      goto label$7710;
      label$7856:;
      {
       FBSTRING* vr$9150 = fb_StrAllocTempDescZEx( (uint8*)"endswitch", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9150, 0 );
      }
      goto label$7710;
      label$7857:;
      {
       FBSTRING* vr$9151 = fb_StrAllocTempDescZEx( (uint8*)"endwile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9151, 0 );
      }
      goto label$7710;
      label$7858:;
      {
       FBSTRING* vr$9152 = fb_StrAllocTempDescZEx( (uint8*)"extends", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9152, 0 );
      }
      goto label$7710;
      label$7859:;
      {
       FBSTRING* vr$9153 = fb_StrAllocTempDescZEx( (uint8*)"instanceof", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9153, 0 );
      }
      goto label$7710;
      label$7860:;
      {
       FBSTRING* vr$9154 = fb_StrAllocTempDescZEx( (uint8*)"isset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9154, 0 );
      }
      goto label$7710;
      label$7861:;
      {
       FBSTRING* vr$9155 = fb_StrAllocTempDescZEx( (uint8*)"require", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9155, 0 );
      }
      goto label$7710;
      label$7862:;
      {
       FBSTRING* vr$9156 = fb_StrAllocTempDescZEx( (uint8*)"trait", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9156, 0 );
      }
      goto label$7710;
      label$7863:;
      {
       FBSTRING* vr$9157 = fb_StrAllocTempDescZEx( (uint8*)"unset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9157, 0 );
      }
      goto label$7710;
      label$7864:;
      {
       FBSTRING* vr$9158 = fb_StrAllocTempDescZEx( (uint8*)"del", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9158, 0 );
      }
      goto label$7710;
      label$7865:;
      {
       FBSTRING* vr$9159 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9159, 0 );
      }
      goto label$7710;
      label$7866:;
      {
       FBSTRING* vr$9160 = fb_StrAllocTempDescZEx( (uint8*)"signed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9160, 0 );
      }
      goto label$7710;
      label$7867:;
      {
       FBSTRING* vr$9161 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9161, 0 );
      }
      goto label$7710;
      label$7868:;
      {
       FBSTRING* vr$9162 = fb_StrAllocTempDescZEx( (uint8*)"implements", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9162, 0 );
      }
      goto label$7710;
      label$7869:;
      {
       FBSTRING* vr$9163 = fb_StrAllocTempDescZEx( (uint8*)"strictfp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9163, 0 );
      }
      goto label$7710;
      label$7870:;
      {
       FBSTRING* vr$9164 = fb_StrAllocTempDescZEx( (uint8*)"throws", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9164, 0 );
      }
      goto label$7710;
      label$7871:;
      {
       FBSTRING* vr$9165 = fb_StrAllocTempDescZEx( (uint8*)"transient", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9165, 0 );
      }
      goto label$7710;
      label$7872:;
      {
       FBSTRING* vr$9166 = fb_StrAllocTempDescZEx( (uint8*)"allocate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9166, 0 );
      }
      goto label$7710;
      label$7873:;
      {
       FBSTRING* vr$9167 = fb_StrAllocTempDescZEx( (uint8*)"andalso", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9167, 0 );
      }
      goto label$7710;
      label$7874:;
      {
       FBSTRING* vr$9168 = fb_StrAllocTempDescZEx( (uint8*)"assertwarn", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9168, 0 );
      }
      goto label$7710;
      label$7875:;
      {
       FBSTRING* vr$9169 = fb_StrAllocTempDescZEx( (uint8*)"bin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9169, 0 );
      }
      goto label$7710;
      label$7876:;
      {
       FBSTRING* vr$9170 = fb_StrAllocTempDescZEx( (uint8*)"bit", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9170, 0 );
      }
      goto label$7710;
      label$7877:;
      {
       FBSTRING* vr$9171 = fb_StrAllocTempDescZEx( (uint8*)"bitreset", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9171, 0 );
      }
      goto label$7710;
      label$7878:;
      {
       FBSTRING* vr$9172 = fb_StrAllocTempDescZEx( (uint8*)"bitset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9172, 0 );
      }
      goto label$7710;
      label$7879:;
      {
       FBSTRING* vr$9173 = fb_StrAllocTempDescZEx( (uint8*)"byref", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9173, 0 );
      }
      goto label$7710;
      label$7880:;
      {
       FBSTRING* vr$9174 = fb_StrAllocTempDescZEx( (uint8*)"byval", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9174, 0 );
      }
      goto label$7710;
      label$7881:;
      {
       FBSTRING* vr$9175 = fb_StrAllocTempDescZEx( (uint8*)"callocate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9175, 0 );
      }
      goto label$7710;
      label$7882:;
      {
       FBSTRING* vr$9176 = fb_StrAllocTempDescZEx( (uint8*)"cbool", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9176, 0 );
      }
      goto label$7710;
      label$7883:;
      {
       FBSTRING* vr$9177 = fb_StrAllocTempDescZEx( (uint8*)"cbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9177, 0 );
      }
      goto label$7710;
      label$7884:;
      {
       FBSTRING* vr$9178 = fb_StrAllocTempDescZEx( (uint8*)"clng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9178, 0 );
      }
      goto label$7710;
      label$7885:;
      {
       FBSTRING* vr$9179 = fb_StrAllocTempDescZEx( (uint8*)"clongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9179, 0 );
      }
      goto label$7710;
      label$7886:;
      {
       FBSTRING* vr$9180 = fb_StrAllocTempDescZEx( (uint8*)"command", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9180, 0 );
      }
      goto label$7710;
      label$7887:;
      {
       FBSTRING* vr$9181 = fb_StrAllocTempDescZEx( (uint8*)"condbroadcast", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9181, 0 );
      }
      goto label$7710;
      label$7888:;
      {
       FBSTRING* vr$9182 = fb_StrAllocTempDescZEx( (uint8*)"condcreate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9182, 0 );
      }
      goto label$7710;
      label$7889:;
      {
       FBSTRING* vr$9183 = fb_StrAllocTempDescZEx( (uint8*)"conddestroy", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9183, 0 );
      }
      goto label$7710;
      label$7890:;
      {
       FBSTRING* vr$9184 = fb_StrAllocTempDescZEx( (uint8*)"condsignal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9184, 0 );
      }
      goto label$7710;
      label$7891:;
      {
       FBSTRING* vr$9185 = fb_StrAllocTempDescZEx( (uint8*)"condwait", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9185, 0 );
      }
      goto label$7710;
      label$7892:;
      {
       FBSTRING* vr$9186 = fb_StrAllocTempDescZEx( (uint8*)"cptr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9186, 0 );
      }
      goto label$7710;
      label$7893:;
      {
       FBSTRING* vr$9187 = fb_StrAllocTempDescZEx( (uint8*)"cshort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9187, 0 );
      }
      goto label$7710;
      label$7894:;
      {
       FBSTRING* vr$9188 = fb_StrAllocTempDescZEx( (uint8*)"csign", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9188, 0 );
      }
      goto label$7710;
      label$7895:;
      {
       FBSTRING* vr$9189 = fb_StrAllocTempDescZEx( (uint8*)"cubyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9189, 0 );
      }
      goto label$7710;
      label$7896:;
      {
       FBSTRING* vr$9190 = fb_StrAllocTempDescZEx( (uint8*)"cuint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9190, 0 );
      }
      goto label$7710;
      label$7897:;
      {
       FBSTRING* vr$9191 = fb_StrAllocTempDescZEx( (uint8*)"culng", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9191, 0 );
      }
      goto label$7710;
      label$7898:;
      {
       FBSTRING* vr$9192 = fb_StrAllocTempDescZEx( (uint8*)"culngint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9192, 0 );
      }
      goto label$7710;
      label$7899:;
      {
       FBSTRING* vr$9193 = fb_StrAllocTempDescZEx( (uint8*)"cunsg", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9193, 0 );
      }
      goto label$7710;
      label$7900:;
      {
       FBSTRING* vr$9194 = fb_StrAllocTempDescZEx( (uint8*)"curdir", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9194, 0 );
      }
      goto label$7710;
      label$7901:;
      {
       FBSTRING* vr$9195 = fb_StrAllocTempDescZEx( (uint8*)"cushort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9195, 0 );
      }
      goto label$7710;
      label$7902:;
      {
       FBSTRING* vr$9196 = fb_StrAllocTempDescZEx( (uint8*)"custom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9196, 0 );
      }
      goto label$7710;
      label$7903:;
      {
       FBSTRING* vr$9197 = fb_StrAllocTempDescZEx( (uint8*)"cva_arg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9197, 0 );
      }
      goto label$7710;
      label$7904:;
      {
       FBSTRING* vr$9198 = fb_StrAllocTempDescZEx( (uint8*)"cva_copy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9198, 0 );
      }
      goto label$7710;
      label$7905:;
      {
       FBSTRING* vr$9199 = fb_StrAllocTempDescZEx( (uint8*)"cva_list", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9199, 0 );
      }
      goto label$7710;
      label$7906:;
      {
       FBSTRING* vr$9200 = fb_StrAllocTempDescZEx( (uint8*)"cva_end", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9200, 0 );
      }
      goto label$7710;
      label$7907:;
      {
       FBSTRING* vr$9201 = fb_StrAllocTempDescZEx( (uint8*)"cva_start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9201, 0 );
      }
      goto label$7710;
      label$7908:;
      {
       FBSTRING* vr$9202 = fb_StrAllocTempDescZEx( (uint8*)"cvl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9202, 0 );
      }
      goto label$7710;
      label$7909:;
      {
       FBSTRING* vr$9203 = fb_StrAllocTempDescZEx( (uint8*)"cvlongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9203, 0 );
      }
      goto label$7710;
      label$7910:;
      {
       FBSTRING* vr$9204 = fb_StrAllocTempDescZEx( (uint8*)"cvshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9204, 0 );
      }
      goto label$7710;
      label$7911:;
      {
       FBSTRING* vr$9205 = fb_StrAllocTempDescZEx( (uint8*)"dateadd", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9205, 0 );
      }
      goto label$7710;
      label$7912:;
      {
       FBSTRING* vr$9206 = fb_StrAllocTempDescZEx( (uint8*)"datediff", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9206, 0 );
      }
      goto label$7710;
      label$7913:;
      {
       FBSTRING* vr$9207 = fb_StrAllocTempDescZEx( (uint8*)"datepart", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9207, 0 );
      }
      goto label$7710;
      label$7914:;
      {
       FBSTRING* vr$9208 = fb_StrAllocTempDescZEx( (uint8*)"dateserial", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9208, 0 );
      }
      goto label$7710;
      label$7915:;
      {
       FBSTRING* vr$9209 = fb_StrAllocTempDescZEx( (uint8*)"datevalue", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9209, 0 );
      }
      goto label$7710;
      label$7916:;
      {
       FBSTRING* vr$9210 = fb_StrAllocTempDescZEx( (uint8*)"deallocate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9210, 0 );
      }
      goto label$7710;
      label$7917:;
      {
       FBSTRING* vr$9211 = fb_StrAllocTempDescZEx( (uint8*)"defbyte", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9211, 0 );
      }
      goto label$7710;
      label$7918:;
      {
       FBSTRING* vr$9212 = fb_StrAllocTempDescZEx( (uint8*)"deflng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9212, 0 );
      }
      goto label$7710;
      label$7919:;
      {
       FBSTRING* vr$9213 = fb_StrAllocTempDescZEx( (uint8*)"deflongint", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9213, 0 );
      }
      goto label$7710;
      label$7920:;
      {
       FBSTRING* vr$9214 = fb_StrAllocTempDescZEx( (uint8*)"defshort", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9214, 0 );
      }
      goto label$7710;
      label$7921:;
      {
       FBSTRING* vr$9215 = fb_StrAllocTempDescZEx( (uint8*)"defubyte", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9215, 0 );
      }
      goto label$7710;
      label$7922:;
      {
       FBSTRING* vr$9216 = fb_StrAllocTempDescZEx( (uint8*)"defuint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9216, 0 );
      }
      goto label$7710;
      label$7923:;
      {
       FBSTRING* vr$9217 = fb_StrAllocTempDescZEx( (uint8*)"defulongint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9217, 0 );
      }
      goto label$7710;
      label$7924:;
      {
       FBSTRING* vr$9218 = fb_StrAllocTempDescZEx( (uint8*)"defushort", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9218, 0 );
      }
      goto label$7710;
      label$7925:;
      {
       FBSTRING* vr$9219 = fb_StrAllocTempDescZEx( (uint8*)"dir", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9219, 0 );
      }
      goto label$7710;
      label$7926:;
      {
       FBSTRING* vr$9220 = fb_StrAllocTempDescZEx( (uint8*)"dylibfree", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9220, 0 );
      }
      goto label$7710;
      label$7927:;
      {
       FBSTRING* vr$9221 = fb_StrAllocTempDescZEx( (uint8*)"dylibload", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9221, 0 );
      }
      goto label$7710;
      label$7928:;
      {
       FBSTRING* vr$9222 = fb_StrAllocTempDescZEx( (uint8*)"dylibsymbol", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9222, 1 );
      }
      goto label$7710;
      label$7929:;
      {
       FBSTRING* vr$9223 = fb_StrAllocTempDescZEx( (uint8*)"encoding", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9223, 0 );
      }
      goto label$7710;
      label$7930:;
      {
       FBSTRING* vr$9224 = fb_StrAllocTempDescZEx( (uint8*)"erfn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9224, 0 );
      }
      goto label$7710;
      label$7931:;
      {
       FBSTRING* vr$9225 = fb_StrAllocTempDescZEx( (uint8*)"ermn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9225, 0 );
      }
      goto label$7710;
      label$7932:;
      {
       FBSTRING* vr$9226 = fb_StrAllocTempDescZEx( (uint8*)"exec", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9226, 0 );
      }
      goto label$7710;
      label$7933:;
      {
       FBSTRING* vr$9227 = fb_StrAllocTempDescZEx( (uint8*)"exepath", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9227, 0 );
      }
      goto label$7710;
      label$7934:;
      {
       FBSTRING* vr$9228 = fb_StrAllocTempDescZEx( (uint8*)"compile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9228, 0 );
      }
      goto label$7710;
      label$7935:;
      {
       FBSTRING* vr$9229 = fb_StrAllocTempDescZEx( (uint8*)"help", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9229, 0 );
      }
      goto label$7710;
      label$7936:;
      {
       FBSTRING* vr$9230 = fb_StrAllocTempDescZEx( (uint8*)"identify", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9230, 0 );
      }
      goto label$7710;
      label$7937:;
      {
       FBSTRING* vr$9231 = fb_StrAllocTempDescZEx( (uint8*)"listnh", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9231, 0 );
      }
      goto label$7710;
      label$7938:;
      {
       FBSTRING* vr$9232 = fb_StrAllocTempDescZEx( (uint8*)"old", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9232, 0 );
      }
      goto label$7710;
      label$7939:;
      {
       FBSTRING* vr$9233 = fb_StrAllocTempDescZEx( (uint8*)"rename", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9233, 0 );
      }
      goto label$7710;
      label$7940:;
      {
       FBSTRING* vr$9234 = fb_StrAllocTempDescZEx( (uint8*)"resequence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9234, 0 );
      }
      goto label$7710;
      label$7941:;
      {
       FBSTRING* vr$9235 = fb_StrAllocTempDescZEx( (uint8*)"scratch", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9235, 0 );
      }
      goto label$7710;
      label$7942:;
      {
       FBSTRING* vr$9236 = fb_StrAllocTempDescZEx( (uint8*)"show", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9236, 0 );
      }
      goto label$7710;
      label$7943:;
      {
       FBSTRING* vr$9237 = fb_StrAllocTempDescZEx( (uint8*)"unsave", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9237, 0 );
      }
      goto label$7710;
      label$7944:;
      {
       FBSTRING* vr$9238 = fb_StrAllocTempDescZEx( (uint8*)"bufsiz", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9238, 0 );
      }
      goto label$7710;
      label$7945:;
      {
       FBSTRING* vr$9239 = fb_StrAllocTempDescZEx( (uint8*)"ccpos", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9239, 0 );
      }
      goto label$7710;
      label$7946:;
      {
       FBSTRING* vr$9240 = fb_StrAllocTempDescZEx( (uint8*)"change", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9240, 0 );
      }
      goto label$7710;
      label$7947:;
      {
       FBSTRING* vr$9241 = fb_StrAllocTempDescZEx( (uint8*)"ctrlc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9241, 0 );
      }
      goto label$7710;
      label$7948:;
      {
       FBSTRING* vr$9242 = fb_StrAllocTempDescZEx( (uint8*)"det", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9242, 0 );
      }
      goto label$7710;
      label$7949:;
      {
       FBSTRING* vr$9243 = fb_StrAllocTempDescZEx( (uint8*)"dif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9243, 0 );
      }
      goto label$7710;
      label$7950:;
      {
       FBSTRING* vr$9244 = fb_StrAllocTempDescZEx( (uint8*)"ern", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9244, 0 );
      }
      goto label$7710;
      label$7951:;
      {
       FBSTRING* vr$9245 = fb_StrAllocTempDescZEx( (uint8*)"fileattr", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9245, 0 );
      }
      goto label$7710;
      label$7952:;
      {
       FBSTRING* vr$9246 = fb_StrAllocTempDescZEx( (uint8*)"filecopy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9246, 0 );
      }
      goto label$7710;
      label$7953:;
      {
       FBSTRING* vr$9247 = fb_StrAllocTempDescZEx( (uint8*)"filedatetime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9247, 0 );
      }
      goto label$7710;
      label$7954:;
      {
       FBSTRING* vr$9248 = fb_StrAllocTempDescZEx( (uint8*)"fileexists", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9248, 0 );
      }
      goto label$7710;
      label$7955:;
      {
       FBSTRING* vr$9249 = fb_StrAllocTempDescZEx( (uint8*)"filelen", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9249, 0 );
      }
      goto label$7710;
      label$7956:;
      {
       FBSTRING* vr$9250 = fb_StrAllocTempDescZEx( (uint8*)"freefile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9250, 0 );
      }
      goto label$7710;
      label$7957:;
      {
       FBSTRING* vr$9251 = fb_StrAllocTempDescZEx( (uint8*)"frac", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9251, 0 );
      }
      goto label$7710;
      label$7958:;
      {
       FBSTRING* vr$9252 = fb_StrAllocTempDescZEx( (uint8*)"getjoystick", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9252, 0 );
      }
      goto label$7710;
      label$7959:;
      {
       FBSTRING* vr$9253 = fb_StrAllocTempDescZEx( (uint8*)"getkey", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9253, 0 );
      }
      goto label$7710;
      label$7960:;
      {
       FBSTRING* vr$9254 = fb_StrAllocTempDescZEx( (uint8*)"getmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9254, 0 );
      }
      goto label$7710;
      label$7961:;
      {
       FBSTRING* vr$9255 = fb_StrAllocTempDescZEx( (uint8*)"hibyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9255, 0 );
      }
      goto label$7710;
      label$7962:;
      {
       FBSTRING* vr$9256 = fb_StrAllocTempDescZEx( (uint8*)"hiword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9256, 0 );
      }
      goto label$7710;
      label$7711:;
      static const void* tmp$4523[256ll] = {
       &&label$7712,
       &&label$7713,
       &&label$7714,
       &&label$7710,
       &&label$7715,
       &&label$7716,
       &&label$7717,
       &&label$7718,
       &&label$7719,
       &&label$7720,
       &&label$7721,
       &&label$7722,
       &&label$7723,
       &&label$7724,
       &&label$7725,
       &&label$7726,
       &&label$7727,
       &&label$7728,
       &&label$7729,
       &&label$7730,
       &&label$7710,
       &&label$7731,
       &&label$7732,
       &&label$7733,
       &&label$7734,
       &&label$7735,
       &&label$7736,
       &&label$7737,
       &&label$7738,
       &&label$7739,
       &&label$7740,
       &&label$7741,
       &&label$7742,
       &&label$7743,
       &&label$7744,
       &&label$7745,
       &&label$7746,
       &&label$7747,
       &&label$7748,
       &&label$7749,
       &&label$7750,
       &&label$7751,
       &&label$7752,
       &&label$7753,
       &&label$7754,
       &&label$7755,
       &&label$7756,
       &&label$7757,
       &&label$7758,
       &&label$7759,
       &&label$7760,
       &&label$7761,
       &&label$7762,
       &&label$7763,
       &&label$7764,
       &&label$7765,
       &&label$7766,
       &&label$7767,
       &&label$7768,
       &&label$7769,
       &&label$7770,
       &&label$7771,
       &&label$7772,
       &&label$7773,
       &&label$7774,
       &&label$7775,
       &&label$7776,
       &&label$7777,
       &&label$7778,
       &&label$7779,
       &&label$7780,
       &&label$7781,
       &&label$7782,
       &&label$7783,
       &&label$7784,
       &&label$7785,
       &&label$7786,
       &&label$7787,
       &&label$7788,
       &&label$7789,
       &&label$7790,
       &&label$7791,
       &&label$7792,
       &&label$7793,
       &&label$7794,
       &&label$7795,
       &&label$7796,
       &&label$7797,
       &&label$7798,
       &&label$7799,
       &&label$7800,
       &&label$7801,
       &&label$7802,
       &&label$7803,
       &&label$7804,
       &&label$7805,
       &&label$7806,
       &&label$7807,
       &&label$7808,
       &&label$7809,
       &&label$7810,
       &&label$7811,
       &&label$7812,
       &&label$7813,
       &&label$7814,
       &&label$7815,
       &&label$7710,
       &&label$7816,
       &&label$7817,
       &&label$7818,
       &&label$7819,
       &&label$7820,
       &&label$7821,
       &&label$7822,
       &&label$7823,
       &&label$7824,
       &&label$7825,
       &&label$7826,
       &&label$7827,
       &&label$7828,
       &&label$7829,
       &&label$7830,
       &&label$7831,
       &&label$7832,
       &&label$7833,
       &&label$7834,
       &&label$7835,
       &&label$7710,
       &&label$7710,
       &&label$7836,
       &&label$7837,
       &&label$7838,
       &&label$7839,
       &&label$7840,
       &&label$7841,
       &&label$7842,
       &&label$7843,
       &&label$7844,
       &&label$7845,
       &&label$7846,
       &&label$7847,
       &&label$7848,
       &&label$7849,
       &&label$7850,
       &&label$7851,
       &&label$7852,
       &&label$7853,
       &&label$7854,
       &&label$7855,
       &&label$7856,
       &&label$7857,
       &&label$7858,
       &&label$7859,
       &&label$7860,
       &&label$7861,
       &&label$7862,
       &&label$7863,
       &&label$7864,
       &&label$7865,
       &&label$7866,
       &&label$7867,
       &&label$7868,
       &&label$7869,
       &&label$7870,
       &&label$7871,
       &&label$7872,
       &&label$7873,
       &&label$7874,
       &&label$7875,
       &&label$7876,
       &&label$7877,
       &&label$7878,
       &&label$7879,
       &&label$7880,
       &&label$7881,
       &&label$7882,
       &&label$7883,
       &&label$7884,
       &&label$7885,
       &&label$7886,
       &&label$7887,
       &&label$7888,
       &&label$7889,
       &&label$7890,
       &&label$7891,
       &&label$7892,
       &&label$7893,
       &&label$7894,
       &&label$7895,
       &&label$7896,
       &&label$7897,
       &&label$7898,
       &&label$7899,
       &&label$7900,
       &&label$7901,
       &&label$7902,
       &&label$7903,
       &&label$7904,
       &&label$7905,
       &&label$7906,
       &&label$7907,
       &&label$7908,
       &&label$7909,
       &&label$7910,
       &&label$7911,
       &&label$7912,
       &&label$7913,
       &&label$7914,
       &&label$7915,
       &&label$7916,
       &&label$7917,
       &&label$7918,
       &&label$7919,
       &&label$7920,
       &&label$7921,
       &&label$7922,
       &&label$7923,
       &&label$7924,
       &&label$7925,
       &&label$7926,
       &&label$7927,
       &&label$7928,
       &&label$7929,
       &&label$7930,
       &&label$7931,
       &&label$7932,
       &&label$7933,
       &&label$7934,
       &&label$7935,
       &&label$7936,
       &&label$7937,
       &&label$7938,
       &&label$7939,
       &&label$7940,
       &&label$7941,
       &&label$7942,
       &&label$7943,
       &&label$7944,
       &&label$7945,
       &&label$7946,
       &&label$7947,
       &&label$7948,
       &&label$7949,
       &&label$7950,
       &&label$7951,
       &&label$7952,
       &&label$7953,
       &&label$7954,
       &&label$7955,
       &&label$7956,
       &&label$7957,
       &&label$7958,
       &&label$7959,
       &&label$7960,
       &&label$7961,
       &&label$7962,
      };
      if( TMP$3868$6 > 255ull ) goto label$7710;
      goto *tmp$4523[TMP$3868$6 - 0ull];
      label$7710:;
     }
    }
    goto label$5883;
    label$7963:;
    {
     {
      uint64 TMP$4106$6;
      TMP$4106$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$7965;
      label$7966:;
      {
       FBSTRING* vr$9258 = fb_StrAllocTempDescZEx( (uint8*)"imageconvertrow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9258, 0 );
      }
      goto label$7964;
      label$7967:;
      {
       FBSTRING* vr$9259 = fb_StrAllocTempDescZEx( (uint8*)"imagecreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9259, 0 );
      }
      goto label$7964;
      label$7968:;
      {
       FBSTRING* vr$9260 = fb_StrAllocTempDescZEx( (uint8*)"imagedestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9260, 0 );
      }
      goto label$7964;
      label$7969:;
      {
       FBSTRING* vr$9261 = fb_StrAllocTempDescZEx( (uint8*)"imageinfo", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9261, 0 );
      }
      goto label$7964;
      label$7970:;
      {
       FBSTRING* vr$9262 = fb_StrAllocTempDescZEx( (uint8*)"instrrev", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9262, 0 );
      }
      goto label$7964;
      label$7971:;
      {
       FBSTRING* vr$9263 = fb_StrAllocTempDescZEx( (uint8*)"isdate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9263, 0 );
      }
      goto label$7964;
      label$7972:;
      {
       FBSTRING* vr$9264 = fb_StrAllocTempDescZEx( (uint8*)"isredirected", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9264, 0 );
      }
      goto label$7964;
      label$7973:;
      {
       FBSTRING* vr$9265 = fb_StrAllocTempDescZEx( (uint8*)"lbound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9265, 0 );
      }
      goto label$7964;
      label$7974:;
      {
       FBSTRING* vr$9266 = fb_StrAllocTempDescZEx( (uint8*)"lcase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9266, 0 );
      }
      goto label$7964;
      label$7975:;
      {
       FBSTRING* vr$9267 = fb_StrAllocTempDescZEx( (uint8*)"lib", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9267, 0 );
      }
      goto label$7964;
      label$7976:;
      {
       FBSTRING* vr$9268 = fb_StrAllocTempDescZEx( (uint8*)"lobyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9268, 0 );
      }
      goto label$7964;
      label$7977:;
      {
       FBSTRING* vr$9269 = fb_StrAllocTempDescZEx( (uint8*)"loword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9269, 0 );
      }
      goto label$7964;
      label$7978:;
      {
       FBSTRING* vr$9270 = fb_StrAllocTempDescZEx( (uint8*)"ltrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9270, 0 );
      }
      goto label$7964;
      label$7979:;
      {
       FBSTRING* vr$9271 = fb_StrAllocTempDescZEx( (uint8*)"mkl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9271, 0 );
      }
      goto label$7964;
      label$7980:;
      {
       FBSTRING* vr$9272 = fb_StrAllocTempDescZEx( (uint8*)"mklongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9272, 0 );
      }
      goto label$7964;
      label$7981:;
      {
       FBSTRING* vr$9273 = fb_StrAllocTempDescZEx( (uint8*)"mkshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9273, 0 );
      }
      goto label$7964;
      label$7982:;
      {
       FBSTRING* vr$9274 = fb_StrAllocTempDescZEx( (uint8*)"monthname", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9274, 1 );
      }
      goto label$7964;
      label$7983:;
      {
       FBSTRING* vr$9275 = fb_StrAllocTempDescZEx( (uint8*)"multikey", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9275, 0 );
      }
      goto label$7964;
      label$7984:;
      {
       FBSTRING* vr$9276 = fb_StrAllocTempDescZEx( (uint8*)"mutexcreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9276, 0 );
      }
      goto label$7964;
      label$7985:;
      {
       FBSTRING* vr$9277 = fb_StrAllocTempDescZEx( (uint8*)"mutexdestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9277, 0 );
      }
      goto label$7964;
      label$7986:;
      {
       FBSTRING* vr$9278 = fb_StrAllocTempDescZEx( (uint8*)"mutexlock", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9278, 0 );
      }
      goto label$7964;
      label$7987:;
      {
       FBSTRING* vr$9279 = fb_StrAllocTempDescZEx( (uint8*)"mutexunlock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9279, 0 );
      }
      goto label$7964;
      label$7988:;
      {
       FBSTRING* vr$9280 = fb_StrAllocTempDescZEx( (uint8*)"naked", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9280, 0 );
      }
      goto label$7964;
      label$7989:;
      {
       FBSTRING* vr$9281 = fb_StrAllocTempDescZEx( (uint8*)"now", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9281, 1 );
      }
      goto label$7964;
      label$7990:;
      {
       FBSTRING* vr$9282 = fb_StrAllocTempDescZEx( (uint8*)"offsetof", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9282, 0 );
      }
      goto label$7964;
      label$7991:;
      {
       FBSTRING* vr$9283 = fb_StrAllocTempDescZEx( (uint8*)"orelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9283, 0 );
      }
      goto label$7964;
      label$7992:;
      {
       FBSTRING* vr$9284 = fb_StrAllocTempDescZEx( (uint8*)"overload", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9284, 0 );
      }
      goto label$7964;
      label$7993:;
      {
       FBSTRING* vr$9285 = fb_StrAllocTempDescZEx( (uint8*)"pointcoord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9285, 0 );
      }
      goto label$7964;
      label$7994:;
      {
       FBSTRING* vr$9286 = fb_StrAllocTempDescZEx( (uint8*)"ptr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9286, 0 );
      }
      goto label$7964;
      label$7995:;
      {
       FBSTRING* vr$9287 = fb_StrAllocTempDescZEx( (uint8*)"preserve", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9287, 0 );
      }
      goto label$7964;
      label$7996:;
      {
       FBSTRING* vr$9288 = fb_StrAllocTempDescZEx( (uint8*)"procptr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9288, 0 );
      }
      goto label$7964;
      label$7997:;
      {
       FBSTRING* vr$9289 = fb_StrAllocTempDescZEx( (uint8*)"redim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9289, 0 );
      }
      goto label$7964;
      label$7998:;
      {
       FBSTRING* vr$9290 = fb_StrAllocTempDescZEx( (uint8*)"rgba", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9290, 0 );
      }
      goto label$7964;
      label$7999:;
      {
       FBSTRING* vr$9291 = fb_StrAllocTempDescZEx( (uint8*)"rtrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9291, 0 );
      }
      goto label$7964;
      label$8000:;
      {
       FBSTRING* vr$9292 = fb_StrAllocTempDescZEx( (uint8*)"sadd", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9292, 0 );
      }
      goto label$7964;
      label$8001:;
      {
       FBSTRING* vr$9293 = fb_StrAllocTempDescZEx( (uint8*)"scope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9293, 0 );
      }
      goto label$7964;
      label$8002:;
      {
       FBSTRING* vr$9294 = fb_StrAllocTempDescZEx( (uint8*)"screencopy", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9294, 0 );
      }
      goto label$7964;
      label$8003:;
      {
       FBSTRING* vr$9295 = fb_StrAllocTempDescZEx( (uint8*)"screencontrol", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9295, 0 );
      }
      goto label$7964;
      label$8004:;
      {
       FBSTRING* vr$9296 = fb_StrAllocTempDescZEx( (uint8*)"screenevent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9296, 0 );
      }
      goto label$7964;
      label$8005:;
      {
       FBSTRING* vr$9297 = fb_StrAllocTempDescZEx( (uint8*)"screenglproc", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9297, 0 );
      }
      goto label$7964;
      label$8006:;
      {
       FBSTRING* vr$9298 = fb_StrAllocTempDescZEx( (uint8*)"screeninfo", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9298, 0 );
      }
      goto label$7964;
      label$8007:;
      {
       FBSTRING* vr$9299 = fb_StrAllocTempDescZEx( (uint8*)"screenlist", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9299, 0 );
      }
      goto label$7964;
      label$8008:;
      {
       FBSTRING* vr$9300 = fb_StrAllocTempDescZEx( (uint8*)"screenlock", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9300, 0 );
      }
      goto label$7964;
      label$8009:;
      {
       FBSTRING* vr$9301 = fb_StrAllocTempDescZEx( (uint8*)"screenptr", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9301, 0 );
      }
      goto label$7964;
      label$8010:;
      {
       FBSTRING* vr$9302 = fb_StrAllocTempDescZEx( (uint8*)"screenres", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9302, 0 );
      }
      goto label$7964;
      label$8011:;
      {
       FBSTRING* vr$9303 = fb_StrAllocTempDescZEx( (uint8*)"screenset", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9303, 0 );
      }
      goto label$7964;
      label$8012:;
      {
       FBSTRING* vr$9304 = fb_StrAllocTempDescZEx( (uint8*)"screensync", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9304, 0 );
      }
      goto label$7964;
      label$8013:;
      {
       FBSTRING* vr$9305 = fb_StrAllocTempDescZEx( (uint8*)"screenunlock", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9305, 0 );
      }
      goto label$7964;
      label$8014:;
      {
       FBSTRING* vr$9306 = fb_StrAllocTempDescZEx( (uint8*)"setdate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9306, 0 );
      }
      goto label$7964;
      label$8015:;
      {
       FBSTRING* vr$9307 = fb_StrAllocTempDescZEx( (uint8*)"setenviron", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9307, 0 );
      }
      goto label$7964;
      label$8016:;
      {
       FBSTRING* vr$9308 = fb_StrAllocTempDescZEx( (uint8*)"setmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9308, 0 );
      }
      goto label$7964;
      label$8017:;
      {
       FBSTRING* vr$9309 = fb_StrAllocTempDescZEx( (uint8*)"settime", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9309, 0 );
      }
      goto label$7964;
      label$8018:;
      {
       FBSTRING* vr$9310 = fb_StrAllocTempDescZEx( (uint8*)"sub", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9310, 0 );
      }
      goto label$7964;
      label$8019:;
      {
       FBSTRING* vr$9311 = fb_StrAllocTempDescZEx( (uint8*)"threadcall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9311, 0 );
      }
      goto label$7964;
      label$8020:;
      {
       FBSTRING* vr$9312 = fb_StrAllocTempDescZEx( (uint8*)"threadcreate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9312, 0 );
      }
      goto label$7964;
      label$8021:;
      {
       FBSTRING* vr$9313 = fb_StrAllocTempDescZEx( (uint8*)"threaddetach", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9313, 0 );
      }
      goto label$7964;
      label$8022:;
      {
       FBSTRING* vr$9314 = fb_StrAllocTempDescZEx( (uint8*)"threadwait", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9314, 0 );
      }
      goto label$7964;
      label$8023:;
      {
       FBSTRING* vr$9315 = fb_StrAllocTempDescZEx( (uint8*)"trans", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9315, 0 );
      }
      goto label$7964;
      label$8024:;
      {
       FBSTRING* vr$9316 = fb_StrAllocTempDescZEx( (uint8*)"ubound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9316, 0 );
      }
      goto label$7964;
      label$8025:;
      {
       FBSTRING* vr$9317 = fb_StrAllocTempDescZEx( (uint8*)"ubyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9317, 0 );
      }
      goto label$7964;
      label$8026:;
      {
       FBSTRING* vr$9318 = fb_StrAllocTempDescZEx( (uint8*)"ucase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9318, 0 );
      }
      goto label$7964;
      label$8027:;
      {
       FBSTRING* vr$9319 = fb_StrAllocTempDescZEx( (uint8*)"uinteger", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9319, 0 );
      }
      goto label$7964;
      label$8028:;
      {
       FBSTRING* vr$9320 = fb_StrAllocTempDescZEx( (uint8*)"ulongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9320, 0 );
      }
      goto label$7964;
      label$8029:;
      {
       FBSTRING* vr$9321 = fb_StrAllocTempDescZEx( (uint8*)"va_arg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9321, 0 );
      }
      goto label$7964;
      label$8030:;
      {
       FBSTRING* vr$9322 = fb_StrAllocTempDescZEx( (uint8*)"va_first", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9322, 0 );
      }
      goto label$7964;
      label$8031:;
      {
       FBSTRING* vr$9323 = fb_StrAllocTempDescZEx( (uint8*)"va_next", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9323, 0 );
      }
      goto label$7964;
      label$8032:;
      {
       FBSTRING* vr$9324 = fb_StrAllocTempDescZEx( (uint8*)"vallng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9324, 0 );
      }
      goto label$7964;
      label$8033:;
      {
       FBSTRING* vr$9325 = fb_StrAllocTempDescZEx( (uint8*)"valint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9325, 0 );
      }
      goto label$7964;
      label$8034:;
      {
       FBSTRING* vr$9326 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9326, 0 );
      }
      goto label$7964;
      label$8035:;
      {
       FBSTRING* vr$9327 = fb_StrAllocTempDescZEx( (uint8*)"wbin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9327, 0 );
      }
      goto label$7964;
      label$8036:;
      {
       FBSTRING* vr$9328 = fb_StrAllocTempDescZEx( (uint8*)"wchr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9328, 0 );
      }
      goto label$7964;
      label$8037:;
      {
       FBSTRING* vr$9329 = fb_StrAllocTempDescZEx( (uint8*)"weekday", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9329, 0 );
      }
      goto label$7964;
      label$8038:;
      {
       FBSTRING* vr$9330 = fb_StrAllocTempDescZEx( (uint8*)"weekdayname", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9330, 0 );
      }
      goto label$7964;
      label$8039:;
      {
       FBSTRING* vr$9331 = fb_StrAllocTempDescZEx( (uint8*)"whex", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9331, 0 );
      }
      goto label$7964;
      label$8040:;
      {
       FBSTRING* vr$9332 = fb_StrAllocTempDescZEx( (uint8*)"windowtitle", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9332, 0 );
      }
      goto label$7964;
      label$8041:;
      {
       FBSTRING* vr$9333 = fb_StrAllocTempDescZEx( (uint8*)"winput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9333, 0 );
      }
      goto label$7964;
      label$8042:;
      {
       FBSTRING* vr$9334 = fb_StrAllocTempDescZEx( (uint8*)"woct", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9334, 0 );
      }
      goto label$7964;
      label$8043:;
      {
       FBSTRING* vr$9335 = fb_StrAllocTempDescZEx( (uint8*)"wspace", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9335, 0 );
      }
      goto label$7964;
      label$8044:;
      {
       FBSTRING* vr$9336 = fb_StrAllocTempDescZEx( (uint8*)"wstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9336, 0 );
      }
      goto label$7964;
      label$8045:;
      {
       FBSTRING* vr$9337 = fb_StrAllocTempDescZEx( (uint8*)"wstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9337, 0 );
      }
      goto label$7964;
      label$8046:;
      {
       FBSTRING* vr$9338 = fb_StrAllocTempDescZEx( (uint8*)"zstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9338, 0 );
      }
      goto label$7964;
      label$8047:;
      {
       FBSTRING* vr$9339 = fb_StrAllocTempDescZEx( (uint8*)"ert", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9339, 0 );
      }
      goto label$7964;
      label$8048:;
      {
       FBSTRING* vr$9340 = fb_StrAllocTempDescZEx( (uint8*)"endifle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9340, 0 );
      }
      goto label$7964;
      label$8049:;
      {
       FBSTRING* vr$9341 = fb_StrAllocTempDescZEx( (uint8*)"fnend", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9341, 0 );
      }
      goto label$7964;
      label$8050:;
      {
       FBSTRING* vr$9342 = fb_StrAllocTempDescZEx( (uint8*)"fnexit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9342, 0 );
      }
      goto label$7964;
      label$8051:;
      {
       FBSTRING* vr$9343 = fb_StrAllocTempDescZEx( (uint8*)"free", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9343, 0 );
      }
      goto label$7964;
      label$8052:;
      {
       FBSTRING* vr$9344 = fb_StrAllocTempDescZEx( (uint8*)"fsp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9344, 0 );
      }
      goto label$7964;
      label$8053:;
      {
       FBSTRING* vr$9345 = fb_StrAllocTempDescZEx( (uint8*)"functionend", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9345, 0 );
      }
      goto label$7964;
      label$8054:;
      {
       FBSTRING* vr$9346 = fb_StrAllocTempDescZEx( (uint8*)"functionexit", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9346, 0 );
      }
      goto label$7964;
      label$8055:;
      {
       FBSTRING* vr$9347 = fb_StrAllocTempDescZEx( (uint8*)"getrfa", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9347, 0 );
      }
      goto label$7964;
      label$8056:;
      {
       FBSTRING* vr$9348 = fb_StrAllocTempDescZEx( (uint8*)"handler", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9348, 0 );
      }
      goto label$7964;
      label$8057:;
      {
       FBSTRING* vr$9349 = fb_StrAllocTempDescZEx( (uint8*)"linput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9349, 0 );
      }
      goto label$7964;
      label$8058:;
      {
       FBSTRING* vr$9350 = fb_StrAllocTempDescZEx( (uint8*)"mag", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9350, 0 );
      }
      goto label$7964;
      label$8059:;
      {
       FBSTRING* vr$9351 = fb_StrAllocTempDescZEx( (uint8*)"magtape", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9351, 0 );
      }
      goto label$7964;
      label$8060:;
      {
       FBSTRING* vr$9352 = fb_StrAllocTempDescZEx( (uint8*)"mar", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9352, 0 );
      }
      goto label$7964;
      label$8061:;
      {
       FBSTRING* vr$9353 = fb_StrAllocTempDescZEx( (uint8*)"margin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9353, 0 );
      }
      goto label$7964;
      label$8062:;
      {
       FBSTRING* vr$9354 = fb_StrAllocTempDescZEx( (uint8*)"mat", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9354, 0 );
      }
      goto label$7964;
      label$8063:;
      {
       FBSTRING* vr$9355 = fb_StrAllocTempDescZEx( (uint8*)"noecho", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9355, 0 );
      }
      goto label$7964;
      label$8064:;
      {
       FBSTRING* vr$9356 = fb_StrAllocTempDescZEx( (uint8*)"nomargin", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9356, 0 );
      }
      goto label$7964;
      label$8065:;
      {
       FBSTRING* vr$9357 = fb_StrAllocTempDescZEx( (uint8*)"num", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9357, 0 );
      }
      goto label$7964;
      label$8066:;
      {
       FBSTRING* vr$9358 = fb_StrAllocTempDescZEx( (uint8*)"num2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9358, 0 );
      }
      goto label$7964;
      label$8067:;
      {
       FBSTRING* vr$9359 = fb_StrAllocTempDescZEx( (uint8*)"num1", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9359, 0 );
      }
      goto label$7964;
      label$8068:;
      {
       FBSTRING* vr$9360 = fb_StrAllocTempDescZEx( (uint8*)"place", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9360, 0 );
      }
      goto label$7964;
      label$8069:;
      {
       FBSTRING* vr$9361 = fb_StrAllocTempDescZEx( (uint8*)"quo", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9361, 0 );
      }
      goto label$7964;
      label$8070:;
      {
       FBSTRING* vr$9362 = fb_StrAllocTempDescZEx( (uint8*)"rad", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9362, 0 );
      }
      goto label$7964;
      label$8071:;
      {
       FBSTRING* vr$9363 = fb_StrAllocTempDescZEx( (uint8*)"rctrlc", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9363, 0 );
      }
      goto label$7964;
      label$8072:;
      {
       FBSTRING* vr$9364 = fb_StrAllocTempDescZEx( (uint8*)"rctrl0", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9364, 0 );
      }
      goto label$7964;
      label$8073:;
      {
       FBSTRING* vr$9365 = fb_StrAllocTempDescZEx( (uint8*)"recount", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9365, 0 );
      }
      goto label$7964;
      label$8074:;
      {
       FBSTRING* vr$9366 = fb_StrAllocTempDescZEx( (uint8*)"remap", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9366, 0 );
      }
      goto label$7964;
      label$8075:;
      {
       FBSTRING* vr$9367 = fb_StrAllocTempDescZEx( (uint8*)"retry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9367, 0 );
      }
      goto label$7964;
      label$8076:;
      {
       FBSTRING* vr$9368 = fb_StrAllocTempDescZEx( (uint8*)"rmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9368, 0 );
      }
      goto label$7964;
      label$8077:;
      {
       FBSTRING* vr$9369 = fb_StrAllocTempDescZEx( (uint8*)"prompt", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9369, 0 );
      }
      goto label$7964;
      label$8078:;
      {
       FBSTRING* vr$9370 = fb_StrAllocTempDescZEx( (uint8*)"subend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9370, 0 );
      }
      goto label$7964;
      label$8079:;
      {
       FBSTRING* vr$9371 = fb_StrAllocTempDescZEx( (uint8*)"exitsub", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9371, 0 );
      }
      goto label$7964;
      label$8080:;
      {
       FBSTRING* vr$9372 = fb_StrAllocTempDescZEx( (uint8*)"trm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9372, 0 );
      }
      goto label$7964;
      label$8081:;
      {
       FBSTRING* vr$9373 = fb_StrAllocTempDescZEx( (uint8*)"unless", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9373, 0 );
      }
      goto label$7964;
      label$8082:;
      {
       FBSTRING* vr$9374 = fb_StrAllocTempDescZEx( (uint8*)"vmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9374, 0 );
      }
      goto label$7964;
      label$8083:;
      {
       FBSTRING* vr$9375 = fb_StrAllocTempDescZEx( (uint8*)"xlate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9375, 0 );
      }
      goto label$7964;
      label$8084:;
      {
       FBSTRING* vr$9376 = fb_StrAllocTempDescZEx( (uint8*)"allocated", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9376, 0 );
      }
      goto label$7964;
      label$8085:;
      {
       FBSTRING* vr$9377 = fb_StrAllocTempDescZEx( (uint8*)"anint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9377, 0 );
      }
      goto label$7964;
      label$8086:;
      {
       FBSTRING* vr$9378 = fb_StrAllocTempDescZEx( (uint8*)"asind", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9378, 0 );
      }
      goto label$7964;
      label$8087:;
      {
       FBSTRING* vr$9379 = fb_StrAllocTempDescZEx( (uint8*)"associated", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9379, 0 );
      }
      goto label$7964;
      label$8088:;
      {
       FBSTRING* vr$9380 = fb_StrAllocTempDescZEx( (uint8*)"atand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9380, 0 );
      }
      goto label$7964;
      label$8089:;
      {
       FBSTRING* vr$9381 = fb_StrAllocTempDescZEx( (uint8*)"atan2d", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9381, 0 );
      }
      goto label$7964;
      label$8090:;
      {
       FBSTRING* vr$9382 = fb_StrAllocTempDescZEx( (uint8*)"atomic_add", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9382, 0 );
      }
      goto label$7964;
      label$8091:;
      {
       FBSTRING* vr$9383 = fb_StrAllocTempDescZEx( (uint8*)"atomic_and", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9383, 0 );
      }
      goto label$7964;
      label$8092:;
      {
       FBSTRING* vr$9384 = fb_StrAllocTempDescZEx( (uint8*)"atomic_cas", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9384, 0 );
      }
      goto label$7964;
      label$8093:;
      {
       FBSTRING* vr$9385 = fb_StrAllocTempDescZEx( (uint8*)"atomic_define", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9385, 0 );
      }
      goto label$7964;
      label$8094:;
      {
       FBSTRING* vr$9386 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_add", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9386, 0 );
      }
      goto label$7964;
      label$8095:;
      {
       FBSTRING* vr$9387 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch and", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9387, 0 );
      }
      goto label$7964;
      label$8096:;
      {
       FBSTRING* vr$9388 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_or", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9388, 0 );
      }
      goto label$7964;
      label$8097:;
      {
       FBSTRING* vr$9389 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_xor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9389, 0 );
      }
      goto label$7964;
      label$8098:;
      {
       FBSTRING* vr$9390 = fb_StrAllocTempDescZEx( (uint8*)"atomic_or", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9390, 0 );
      }
      goto label$7964;
      label$8099:;
      {
       FBSTRING* vr$9391 = fb_StrAllocTempDescZEx( (uint8*)"atomic_ref", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9391, 0 );
      }
      goto label$7964;
      label$8100:;
      {
       FBSTRING* vr$9392 = fb_StrAllocTempDescZEx( (uint8*)"atomic_xor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9392, 0 );
      }
      goto label$7964;
      label$8101:;
      {
       FBSTRING* vr$9393 = fb_StrAllocTempDescZEx( (uint8*)"backtrace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9393, 0 );
      }
      goto label$7964;
      label$8102:;
      {
       FBSTRING* vr$9394 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9394, 0 );
      }
      goto label$7964;
      label$8103:;
      {
       FBSTRING* vr$9395 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9395, 0 );
      }
      goto label$7964;
      label$8104:;
      {
       FBSTRING* vr$9396 = fb_StrAllocTempDescZEx( (uint8*)"bessel_jn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9396, 0 );
      }
      goto label$7964;
      label$8105:;
      {
       FBSTRING* vr$9397 = fb_StrAllocTempDescZEx( (uint8*)"bessel_y0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9397, 0 );
      }
      goto label$7964;
      label$8106:;
      {
       FBSTRING* vr$9398 = fb_StrAllocTempDescZEx( (uint8*)"bassel_y1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9398, 0 );
      }
      goto label$7964;
      label$8107:;
      {
       FBSTRING* vr$9399 = fb_StrAllocTempDescZEx( (uint8*)"bessel_yn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9399, 0 );
      }
      goto label$7964;
      label$8108:;
      {
       FBSTRING* vr$9400 = fb_StrAllocTempDescZEx( (uint8*)"bge", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9400, 0 );
      }
      goto label$7964;
      label$8109:;
      {
       FBSTRING* vr$9401 = fb_StrAllocTempDescZEx( (uint8*)"bgt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9401, 0 );
      }
      goto label$7964;
      label$8110:;
      {
       FBSTRING* vr$9402 = fb_StrAllocTempDescZEx( (uint8*)"bit_size", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9402, 0 );
      }
      goto label$7964;
      label$8111:;
      {
       FBSTRING* vr$9403 = fb_StrAllocTempDescZEx( (uint8*)"ble", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9403, 0 );
      }
      goto label$7964;
      label$8112:;
      {
       FBSTRING* vr$9404 = fb_StrAllocTempDescZEx( (uint8*)"blt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9404, 0 );
      }
      goto label$7964;
      label$8113:;
      {
       FBSTRING* vr$9405 = fb_StrAllocTempDescZEx( (uint8*)"btest", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9405, 0 );
      }
      goto label$7964;
      label$8114:;
      {
       FBSTRING* vr$9406 = fb_StrAllocTempDescZEx( (uint8*)"c_associated", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9406, 0 );
      }
      goto label$7964;
      label$8115:;
      {
       FBSTRING* vr$9407 = fb_StrAllocTempDescZEx( (uint8*)"c_f_pointer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9407, 0 );
      }
      goto label$7964;
      label$7965:;
      static const void* tmp$4524[151ll] = {
       &&label$7966,
       &&label$7967,
       &&label$7968,
       &&label$7969,
       &&label$7970,
       &&label$7971,
       &&label$7972,
       &&label$7973,
       &&label$7974,
       &&label$7975,
       &&label$7976,
       &&label$7964,
       &&label$7977,
       &&label$7978,
       &&label$7979,
       &&label$7980,
       &&label$7981,
       &&label$7982,
       &&label$7983,
       &&label$7984,
       &&label$7985,
       &&label$7986,
       &&label$7987,
       &&label$7988,
       &&label$7989,
       &&label$7990,
       &&label$7991,
       &&label$7992,
       &&label$7993,
       &&label$7994,
       &&label$7995,
       &&label$7996,
       &&label$7997,
       &&label$7998,
       &&label$7999,
       &&label$8000,
       &&label$8001,
       &&label$8002,
       &&label$8003,
       &&label$8004,
       &&label$8005,
       &&label$8006,
       &&label$8007,
       &&label$8008,
       &&label$8009,
       &&label$8010,
       &&label$8011,
       &&label$8012,
       &&label$8013,
       &&label$8014,
       &&label$8015,
       &&label$8016,
       &&label$8017,
       &&label$8018,
       &&label$8019,
       &&label$8020,
       &&label$8021,
       &&label$8022,
       &&label$8023,
       &&label$8024,
       &&label$8025,
       &&label$8026,
       &&label$8027,
       &&label$8028,
       &&label$8029,
       &&label$8030,
       &&label$8031,
       &&label$8032,
       &&label$8033,
       &&label$8034,
       &&label$8035,
       &&label$8036,
       &&label$8037,
       &&label$8038,
       &&label$8039,
       &&label$8040,
       &&label$8041,
       &&label$8042,
       &&label$8043,
       &&label$8044,
       &&label$8045,
       &&label$8046,
       &&label$8047,
       &&label$8048,
       &&label$8049,
       &&label$8050,
       &&label$8051,
       &&label$8052,
       &&label$8053,
       &&label$8054,
       &&label$8055,
       &&label$8056,
       &&label$8057,
       &&label$8058,
       &&label$8059,
       &&label$8060,
       &&label$8061,
       &&label$8062,
       &&label$8063,
       &&label$8064,
       &&label$8065,
       &&label$8066,
       &&label$8067,
       &&label$8068,
       &&label$8069,
       &&label$8070,
       &&label$8071,
       &&label$8072,
       &&label$8073,
       &&label$8074,
       &&label$8075,
       &&label$8076,
       &&label$8077,
       &&label$8078,
       &&label$8079,
       &&label$8080,
       &&label$8081,
       &&label$8082,
       &&label$8083,
       &&label$8084,
       &&label$8085,
       &&label$8086,
       &&label$8087,
       &&label$8088,
       &&label$8089,
       &&label$8090,
       &&label$8091,
       &&label$8092,
       &&label$8093,
       &&label$8094,
       &&label$8095,
       &&label$8096,
       &&label$8097,
       &&label$8098,
       &&label$8099,
       &&label$8100,
       &&label$8101,
       &&label$8102,
       &&label$8103,
       &&label$8104,
       &&label$8105,
       &&label$8106,
       &&label$8107,
       &&label$8108,
       &&label$8109,
       &&label$8110,
       &&label$8111,
       &&label$8112,
       &&label$8113,
       &&label$8114,
       &&label$8115,
      };
      if( TMP$4106$6 > 150ull ) goto label$7964;
      goto *tmp$4524[TMP$4106$6 - 0ull];
      label$7964:;
     }
    }
    goto label$5883;
    label$5884:;
    static const void* tmp$4525[23ll] = {
     &&label$5885,
     &&label$5947,
     &&label$5948,
     &&label$5949,
     &&label$5950,
     &&label$5951,
     &&label$5956,
     &&label$6215,
     &&label$5883,
     &&label$6474,
     &&label$6488,
     &&label$6489,
     &&label$6490,
     &&label$6491,
     &&label$6492,
     &&label$6493,
     &&label$6494,
     &&label$6520,
     &&label$6778,
     &&label$7037,
     &&label$7545,
     &&label$7709,
     &&label$7963,
    };
    if( TMP$2333$4 > 22ull ) goto label$5883;
    goto *tmp$4525[TMP$2333$4 - 0ull];
    label$5883:;
   }
  }
  goto label$5806;
  label$5881:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8116;
  label$8117:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8119;
    label$8120:;
    {
     uint8 TMP$4259$5;
     uint8 TMP$4261$5;
     uint8 TMP$4263$5;
     uint8 TMP$4265$5;
     uint8 TMP$4267$5;
     uint8 TMP$4269$5;
     uint8 TMP$4271$5;
     uint8 TMP$4273$5;
     uint8 TMP$4275$5;
     uint8 TMP$4277$5;
     uint8 TMP$4279$5;
     uint8 TMP$4281$5;
     uint8 TMP$4283$5;
     uint8 TMP$4285$5;
     uint8 TMP$4287$5;
     uint8 TMP$4289$5;
     uint8 TMP$4291$5;
     uint8 TMP$4293$5;
     uint8 TMP$4295$5;
     uint8 TMP$4297$5;
     uint8 TMP$4299$5;
     uint8 TMP$4301$5;
     uint8 TMP$4303$5;
     uint8 TMP$4305$5;
     uint8 TMP$4307$5;
     uint8 TMP$4309$5;
     uint8 TMP$4311$5;
     uint8 TMP$4313$5;
     uint8 TMP$4315$5;
     uint8 TMP$4317$5;
     uint8 TMP$4319$5;
     uint8 TMP$4321$5;
     uint8 TMP$4323$5;
     uint8 TMP$4325$5;
     uint8 TMP$4327$5;
     uint8 TMP$4329$5;
     uint8 TMP$4331$5;
     uint8 TMP$4333$5;
     uint8 TMP$4335$5;
     uint8 TMP$4337$5;
     uint8 TMP$4339$5;
     uint8 TMP$4341$5;
     uint8 TMP$4350$5;
     uint8 TMP$4352$5;
     uint8 TMP$4354$5;
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9420 = fb_StrAllocTempDescZEx( (uint8*)"blender --version > err.txt", 27ll );
     fb_Shell( (FBSTRING*)vr$9420 );
     FBSTRING* vr$9422 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9422, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$8121:;
     int32 vr$9424 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9424 != 0ll ) goto label$8122;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$8121;
     label$8122:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9429 = fb_StrAllocTempDescZEx( (uint8*)"tmp.py", 6ll );
     fb_FileOpen( (FBSTRING*)vr$9429, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     TMP$4259$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9430 = fb_StrAllocTempDescZEx( (uint8*)"# Start of file", 15ll );
     fb_PrintString( (int32)TMP$4259$5, (FBSTRING*)vr$9430, 1 );
     TMP$4261$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9432 = fb_StrAllocTempDescZEx( (uint8*)"import bpy,math,mathutils,bmesh,bgl,blf", 39ll );
     fb_PrintString( (int32)TMP$4261$5, (FBSTRING*)vr$9432, 1 );
     TMP$4263$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9434 = fb_StrAllocTempDescZEx( (uint8*)"from math import radians", 24ll );
     fb_PrintString( (int32)TMP$4263$5, (FBSTRING*)vr$9434, 1 );
     TMP$4265$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9436 = fb_StrAllocTempDescZEx( (uint8*)"from random import randint", 26ll );
     fb_PrintString( (int32)TMP$4265$5, (FBSTRING*)vr$9436, 1 );
     TMP$4267$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9438 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.engine = 'CYCLES'", 42ll );
     fb_PrintString( (int32)TMP$4267$5, (FBSTRING*)vr$9438, 1 );
     TMP$4269$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9440 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_x = 640", 43ll );
     fb_PrintString( (int32)TMP$4269$5, (FBSTRING*)vr$9440, 1 );
     TMP$4271$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9442 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_y = 480", 43ll );
     fb_PrintString( (int32)TMP$4271$5, (FBSTRING*)vr$9442, 1 );
     TMP$4273$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9444 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_percentage = 100", 52ll );
     fb_PrintString( (int32)TMP$4273$5, (FBSTRING*)vr$9444, 1 );
     TMP$4275$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9446 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.image_settings.file_format = 'BMP'", 59ll );
     fb_PrintString( (int32)TMP$4275$5, (FBSTRING*)vr$9446, 1 );
     TMP$4277$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9448 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_x = 32", 36ll );
     fb_PrintString( (int32)TMP$4277$5, (FBSTRING*)vr$9448, 1 );
     TMP$4279$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9450 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_y = 32", 36ll );
     fb_PrintString( (int32)TMP$4279$5, (FBSTRING*)vr$9450, 1 );
     TMP$4281$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9452 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.preview_samples = 1", 44ll );
     fb_PrintString( (int32)TMP$4281$5, (FBSTRING*)vr$9452, 1 );
     TMP$4283$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9454 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_persistent_data = True", 51ll );
     fb_PrintString( (int32)TMP$4283$5, (FBSTRING*)vr$9454, 1 );
     TMP$4285$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9456 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_progressive_refine = True", 54ll );
     fb_PrintString( (int32)TMP$4285$5, (FBSTRING*)vr$9456, 1 );
     TMP$4287$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9458 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_save_buffers = True", 48ll );
     fb_PrintString( (int32)TMP$4287$5, (FBSTRING*)vr$9458, 1 );
     TMP$4289$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9460 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_border = True", 42ll );
     fb_PrintString( (int32)TMP$4289$5, (FBSTRING*)vr$9460, 1 );
     TMP$4291$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9462 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.device = 'CPU'", 39ll );
     fb_PrintString( (int32)TMP$4291$5, (FBSTRING*)vr$9462, 1 );
     TMP$4293$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9464 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.max_bounces = 3", 40ll );
     fb_PrintString( (int32)TMP$4293$5, (FBSTRING*)vr$9464, 1 );
     TMP$4295$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9466 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.min_bounces = 0", 40ll );
     fb_PrintString( (int32)TMP$4295$5, (FBSTRING*)vr$9466, 1 );
     TMP$4297$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9468 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.diffuse_bounces = 3", 44ll );
     fb_PrintString( (int32)TMP$4297$5, (FBSTRING*)vr$9468, 1 );
     TMP$4299$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9470 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.glossy_bounces = 3", 43ll );
     fb_PrintString( (int32)TMP$4299$5, (FBSTRING*)vr$9470, 1 );
     TMP$4301$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9472 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transmission_bounces = 1", 49ll );
     fb_PrintString( (int32)TMP$4301$5, (FBSTRING*)vr$9472, 1 );
     TMP$4303$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9474 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_max_bounces = 4", 52ll );
     fb_PrintString( (int32)TMP$4303$5, (FBSTRING*)vr$9474, 1 );
     TMP$4305$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9476 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_min_bounces = 0", 52ll );
     fb_PrintString( (int32)TMP$4305$5, (FBSTRING*)vr$9476, 1 );
     TMP$4307$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9478 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_reflective = False", 52ll );
     fb_PrintString( (int32)TMP$4307$5, (FBSTRING*)vr$9478, 1 );
     TMP$4309$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9480 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_refractive = False", 52ll );
     fb_PrintString( (int32)TMP$4309$5, (FBSTRING*)vr$9480, 1 );
     TMP$4311$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9482 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_square_samples = True", 50ll );
     fb_PrintString( (int32)TMP$4311$5, (FBSTRING*)vr$9482, 1 );
     TMP$4313$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9484 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.samples = 4", 36ll );
     fb_PrintString( (int32)TMP$4313$5, (FBSTRING*)vr$9484, 1 );
     TMP$4315$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9486 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_spatial_splits = True", 56ll );
     fb_PrintString( (int32)TMP$4315$5, (FBSTRING*)vr$9486, 1 );
     TMP$4317$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9488 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.world.cycles.max_bounces = 1", 46ll );
     fb_PrintString( (int32)TMP$4317$5, (FBSTRING*)vr$9488, 1 );
     TMP$4319$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9490 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.volume_bounces = 0", 43ll );
     fb_PrintString( (int32)TMP$4319$5, (FBSTRING*)vr$9490, 1 );
     TMP$4321$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9492 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.cycles.is_portal = True", 47ll );
     fb_PrintString( (int32)TMP$4321$5, (FBSTRING*)vr$9492, 1 );
     TMP$4323$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9494 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_hair_bvh = False", 51ll );
     fb_PrintString( (int32)TMP$4323$5, (FBSTRING*)vr$9494, 1 );
     TMP$4325$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9496 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.shading_system = True", 46ll );
     fb_PrintString( (int32)TMP$4325$5, (FBSTRING*)vr$9496, 1 );
     TMP$4327$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9498 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Light'].select_set(True)", 42ll );
     fb_PrintString( (int32)TMP$4327$5, (FBSTRING*)vr$9498, 1 );
     TMP$4329$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9500 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Light']", 65ll );
     fb_PrintString( (int32)TMP$4329$5, (FBSTRING*)vr$9500, 1 );
     TMP$4331$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9502 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.type = 'SUN'", 36ll );
     fb_PrintString( (int32)TMP$4331$5, (FBSTRING*)vr$9502, 1 );
     TMP$4333$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9504 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.energy = 1", 34ll );
     fb_PrintString( (int32)TMP$4333$5, (FBSTRING*)vr$9504, 1 );
     TMP$4335$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9506 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.use_shadow = True", 41ll );
     fb_PrintString( (int32)TMP$4335$5, (FBSTRING*)vr$9506, 1 );
     TMP$4337$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9508 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Cube'].select_set(True)", 41ll );
     fb_PrintString( (int32)TMP$4337$5, (FBSTRING*)vr$9508, 1 );
     TMP$4339$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9510 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Cube']", 64ll );
     fb_PrintString( (int32)TMP$4339$5, (FBSTRING*)vr$9510, 1 );
     TMP$4341$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9512 = fb_StrAllocTempDescZEx( (uint8*)"scene = bpy.data.scenes[\x22Scene\x22]", 32ll );
     fb_PrintString( (int32)TMP$4341$5, (FBSTRING*)vr$9512, 1 );
     label$8123:;
     {
      FBSTRING* vr$9514 = fb_StrAllocTempDescZEx( (uint8*)"BLENDER:\x5C> ", 11ll );
      fb_LineInput( (FBSTRING*)vr$9514, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9515 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9515 == 0ll ) goto label$8127;
      {
       uint8 TMP$4349$7;
       TMP$4349$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4349$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$8126;
      label$8127:;
      {
       goto label$8124;
       label$8126:;
      }
     }
     label$8125:;
     goto label$8123;
     label$8124:;
     TMP$4350$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9518 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.scenes['Scene'].render.filepath = './tmp'", 50ll );
     fb_PrintString( (int32)TMP$4350$5, (FBSTRING*)vr$9518, 1 );
     TMP$4352$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9520 = fb_StrAllocTempDescZEx( (uint8*)"bpy.ops.render.render(use_viewport = True, write_still=True)", 60ll );
     fb_PrintString( (int32)TMP$4352$5, (FBSTRING*)vr$9520, 1 );
     TMP$4354$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9522 = fb_StrAllocTempDescZEx( (uint8*)"# End of file", 13ll );
     fb_PrintString( (int32)TMP$4354$5, (FBSTRING*)vr$9522, 1 );
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9525 = fb_StrAllocTempDescZEx( (uint8*)"blender -b -P tmp.py", 20ll );
     fb_Shell( (FBSTRING*)vr$9525 );
     FBSTRING* vr$9526 = fb_StrAllocTempDescZEx( (uint8*)"tmp.bmp", 7ll );
     fb_GfxBload( (FBSTRING*)vr$9526, (void*)0ull, (void*)0ull );
     FBSTRING* vr$9527 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.py tmp.bmp", 17ll );
     fb_Shell( (FBSTRING*)vr$9527 );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9528 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9528, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$8118;
    label$8119:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8128;
    label$8129:;
    {
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9531 = fb_StrAllocTempDescZEx( (uint8*)"cobc -V > err.txt", 17ll );
     fb_Shell( (FBSTRING*)vr$9531 );
     FBSTRING* vr$9533 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9533, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$8130:;
     int32 vr$9535 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9535 != 0ll ) goto label$8131;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$8130;
     label$8131:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9539 = fb_StrAllocTempDescZEx( (uint8*)"tmp.cob", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9539, 3u, 0u, 0u, 2, 0 );
     label$8132:;
     {
      FBSTRING* vr$9540 = fb_StrAllocTempDescZEx( (uint8*)"COBOL:\x5C> ", 9ll );
      fb_LineInput( (FBSTRING*)vr$9540, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9541 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9541 == 0ll ) goto label$8136;
      {
       uint8 TMP$4363$7;
       TMP$4363$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4363$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$8135;
      label$8136:;
      {
       goto label$8133;
       label$8135:;
      }
     }
     label$8134:;
     goto label$8132;
     label$8133:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9545 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob -o tmp", 28ll );
     fb_Shell( (FBSTRING*)vr$9545 );
     FBSTRING* vr$9546 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9546 );
     FBSTRING* vr$9547 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9547, 2u, 0u, 0u, 2, 0 );
     label$8137:;
     int32 vr$9549 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9549 != 0ll ) goto label$8138;
     {
      fb_FileLineInput( 2, (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$8137;
     label$8138:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9552 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp tmp.cob tmp.txt err.txt", 30ll );
     fb_Shell( (FBSTRING*)vr$9552 );
     FBSTRING* vr$9553 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9553, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$8118;
    label$8128:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$8139;
    label$8140:;
    {
     fb_GfxScreenRes( 800, 600, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9556 = fb_StrAllocTempDescZEx( (uint8*)"Persistence of Vision(tm) Ray Tracer 3.7.0.9", 44ll );
     fb_PrintString( 0, (FBSTRING*)vr$9556, 1 );
     FBSTRING* vr$9557 = fb_StrAllocTempDescZEx( (uint8*)"POV-Ray is based on DKBTrace 2.12 by David K. Buck & Aaron A. Collins", 69ll );
     fb_PrintString( 0, (FBSTRING*)vr$9557, 1 );
     FBSTRING* vr$9558 = fb_StrAllocTempDescZEx( (uint8*)"(C) 1991-2013 Persistence of Vision Raytracer Pty. Ltd.", 55ll );
     fb_PrintString( 0, (FBSTRING*)vr$9558, 1 );
     FBSTRING* vr$9560 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9560, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$8141:;
     {
      FBSTRING* vr$9561 = fb_StrAllocTempDescZEx( (uint8*)"POVRAY:\x5C> ", 10ll );
      fb_LineInput( (FBSTRING*)vr$9561, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9562 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9562 == 0ll ) goto label$8145;
      {
       uint8 TMP$4370$7;
       TMP$4370$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4370$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$8144;
      label$8145:;
      {
       goto label$8142;
       label$8144:;
      }
     }
     label$8143:;
     goto label$8141;
     label$8142:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9566 = fb_StrAllocTempDescZEx( (uint8*)"povray tmp.pov", 14ll );
     fb_Shell( (FBSTRING*)vr$9566 );
     FBSTRING* vr$9567 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png 0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9567 );
     FBSTRING* vr$9568 = fb_StrAllocTempDescZEx( (uint8*)"mv 0.bmp ./vram/0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9568 );
     FBSTRING* vr$9569 = fb_StrAllocTempDescZEx( (uint8*)"./vram/0.bmp", 12ll );
     fb_GfxBload( (FBSTRING*)vr$9569, (void*)0ull, (void*)0ull );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9570 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9570, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$8118;
    label$8139:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$8146;
    label$8147:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc ", 5ll, 0 );
    }
    goto label$8118;
    label$8146:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$8148;
    label$8149:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc -lang qb ", 14ll, 0 );
    }
    goto label$8118;
    label$8148:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$8150;
    label$8151:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8118;
    label$8150:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$8152;
    label$8153:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cob", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"cobc -x -free ", 15ll, 0 );
    }
    goto label$8118;
    label$8152:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$8154;
    label$8155:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.f77", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gfortran -std=legacy ", 22ll, 0 );
    }
    goto label$8118;
    label$8154:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$8156;
    label$8157:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fpc ", 5ll, 0 );
    }
    goto label$8118;
    label$8156:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$8158;
    label$8159:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.osl", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8118;
    label$8158:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$8160;
    label$8161:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pov", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"povray ", 8ll, 0 );
    }
    goto label$8118;
    label$8160:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$8162;
    label$8163:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.java", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"java ", 6ll, 0 );
    }
    goto label$8118;
    label$8162:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$8164;
    label$8165:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.c", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gcc ", 5ll, 0 );
    }
    goto label$8118;
    label$8164:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$8166;
    label$8167:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cpp", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"g++ ", 5ll, 0 );
    }
    goto label$8118;
    label$8166:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$8168;
    label$8169:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cs", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"csc ", 5ll, 0 );
    }
    goto label$8118;
    label$8168:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$8170;
    label$8171:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.js", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"node ", 6ll, 0 );
    }
    goto label$8118;
    label$8170:;
    if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8172;
    label$8173:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.php", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"php -f ", 8ll, 0 );
    }
    goto label$8118;
    label$8172:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8174;
    label$8175:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.py", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"python ", 8ll, 0 );
    }
    goto label$8118;
    label$8174:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8176;
    label$8177:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.swift", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"swift ", 7ll, 0 );
    }
    goto label$8118;
    label$8176:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8178;
    label$8179:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.m", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"octave --persist ", 18ll, 0 );
    }
    goto label$8118;
    label$8178:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8180;
    label$8181:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.kt", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"kotlinc ", 9ll, 0 );
    }
    goto label$8118;
    label$8180:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8182;
    label$8183:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.r", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"rscript ", 9ll, 0 );
    }
    goto label$8118;
    label$8182:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8184;
    label$8185:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.dart", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"dart ", 6ll, 0 );
    }
    goto label$8118;
    label$8184:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8186;
    label$8187:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.scala", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"scalac ", 8ll, 0 );
    }
    goto label$8118;
    label$8186:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8188;
    label$8189:;
    {
     fb_FileOpen( (FBSTRING*)&FILENAME$, 3u, 0u, 0u, 1, 0 );
    }
    goto label$8118;
    label$8188:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8190;
    label$8191:;
    {
     fb_FileClose( 1 );
    }
    goto label$8118;
    label$8190:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8192;
    label$8193:;
    {
     FBSTRING TMP$4411$5;
     FBSTRING TMP$4416$5;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     __builtin_memset( &TMP$4411$5, 0, 24ll );
     FBSTRING* vr$9665 = fb_StrConcat( &TMP$4411$5, (void*)&COMPILER$, -1ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9665 );
     FBSTRING* vr$9666 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9666 );
     FBSTRING* vr$9667 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9667, 2u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$8194:;
     int32 vr$9668 = fb_FileEof( 1 );
     if( (int64)vr$9668 != 0ll ) goto label$8195;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$4412$7;
       int64 vr$9670 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$4412$7 = (uint16)vr$9670;
       goto label$8196;
       label$8199:;
       {
        FBSTRING* vr$9673 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9674 = fb_ASC( (FBSTRING*)vr$9673, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9674;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$8201;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$8201:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$8197:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$8196:;
       if( (int64)INDEX$ <= (int64)TMP$4412$7 ) goto label$8199;
       label$8198:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$8194;
     label$8195:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$4414$6;
      int64 vr$9694 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$4414$6 = (uint16)vr$9694;
      goto label$8202;
      label$8205:;
      {
       FBSTRING* vr$9697 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9698 = fb_ASC( (FBSTRING*)vr$9697, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9698;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$8207;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$8207:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$8203:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$8202:;
      if( (int64)INDEX$ <= (int64)TMP$4414$6 ) goto label$8205;
      label$8204:;
     }
     __builtin_memset( &TMP$4416$5, 0, 24ll );
     FBSTRING* vr$9719 = fb_StrConcat( &TMP$4416$5, (void*)"rm ./tmp; ./", 13ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9719 );
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$8118;
    label$8192:;
    if( V$1 != 0x1.Bp+4 ) goto label$8208;
    label$8209:;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394848ll) = 0x0p+0;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_FileOpen( (FBSTRING*)&FILENAME$, 0u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$8210:;
     int32 vr$9724 = fb_FileEof( 1 );
     if( (int64)vr$9724 != 0ll ) goto label$8211;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$4418$7;
       int64 vr$9726 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$4418$7 = (uint16)vr$9726;
       goto label$8212;
       label$8215:;
       {
        FBSTRING* vr$9729 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9730 = fb_ASC( (FBSTRING*)vr$9729, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9730;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$8217;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$8217:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$8213:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$8212:;
       if( (int64)INDEX$ <= (int64)TMP$4418$7 ) goto label$8215;
       label$8214:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$8210;
     label$8211:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$4419$6;
      int64 vr$9750 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$4419$6 = (uint16)vr$9750;
      goto label$8218;
      label$8221:;
      {
       FBSTRING* vr$9753 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9754 = fb_ASC( (FBSTRING*)vr$9753, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9754;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$8223;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$8223:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$8219:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$8218:;
      if( (int64)INDEX$ <= (int64)TMP$4419$6 ) goto label$8221;
      label$8220:;
     }
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$8118;
    label$8208:;
    if( V$1 != 0x1.Cp+4 ) goto label$8224;
    label$8225:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
    }
    label$8224:;
    label$8118:;
   }
  }
  goto label$5806;
  label$8116:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8226;
  label$8227:;
  {
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8142p+15, 0x0p+0 );
  }
  goto label$5806;
  label$8226:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8228;
  label$8229:;
  {
   int64 TMP$4421$3;
   int64 TMP$4422$3;
   int64 X$3;
   __builtin_memset( &X$3, 0, 8ll );
   int64 Y$3;
   __builtin_memset( &Y$3, 0, 8ll );
   int64 WHEEL$3;
   __builtin_memset( &WHEEL$3, 0, 8ll );
   int64 BUTTONS$3;
   __builtin_memset( &BUTTONS$3, 0, 8ll );
   int64 RES$3;
   __builtin_memset( &RES$3, 0, 8ll );
   TMP$4422$3 = 0ll;
   TMP$4421$3 = 0ll;
   int32 vr$9806 = fb_GetMouse64( (int64*)&X$3, (int64*)&Y$3, &TMP$4421$3, (int64*)&BUTTONS$3, &TMP$4422$3 );
   *(double*)((int64)(double*)MEM64$ + 394576ll) = (double)vr$9806;
   *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)X$3;
   *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)Y$3;
   *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)WHEEL$3;
   if( (BUTTONS$3 & 1ll) == 0ll ) goto label$8231;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+0;
    label$8231:;
   }
   if( (BUTTONS$3 & 2ll) == 0ll ) goto label$8233;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+1;
    label$8233:;
   }
   if( (BUTTONS$3 & 4ll) == 0ll ) goto label$8235;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+2;
    label$8235:;
   }
  }
  goto label$5806;
  label$8228:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8236;
  label$8237:;
  {
   fb_PageCopy( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394840ll) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394848ll) )) );
  }
  goto label$5806;
  label$8236:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8238;
  label$8239:;
  {
   FBSTRING TMP$4425$3;
   FBSTRING TMP$4426$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    int64 C$4;
    C$4 = 0ll;
    label$8243:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + (C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$8241:;
    C$4 = C$4 + 1ll;
    label$8240:;
    if( C$4 <= 8191ll ) goto label$8243;
    label$8242:;
   }
   FBSTRING* vr$9840 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$4425$3, 0, 24ll );
   FBSTRING* vr$9843 = fb_StrConcat( &TMP$4425$3, (void*)"./chargen/", 11ll, (void*)vr$9840, -1ll );
   __builtin_memset( &TMP$4426$3, 0, 24ll );
   FBSTRING* vr$9846 = fb_StrConcat( &TMP$4426$3, (void*)vr$9843, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$9846, 0u, 0u, 0u, 1, 0 );
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$4427$4;
    int64 vr$9847 = fb_FileSize( 1 );
    TMP$4427$4 = vr$9847;
    goto label$8244;
    label$8247:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + (I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$8245:;
    I$4 = I$4 + 1ll;
    label$8244:;
    if( I$4 <= TMP$4427$4 ) goto label$8247;
    label$8246:;
   }
   fb_FileClose( 1 );
  }
  goto label$5806;
  label$8238:;
  if( ADR$1 == (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8249;
  label$8250:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8248;
  label$8249:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$8252;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$8252;
    label$8253:;
    {
     int64 vr$9883 = _Z6MODULOll( ((int64)__builtin_nearbyint( V$1 )), ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)FCOLOR$, (double)vr$9883 );
    }
    goto label$8251;
    label$8252:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8254;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8254;
    label$8255:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8251;
    label$8254:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8256;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8256;
    label$8257:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8251;
    label$8256:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8258;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8258;
    label$8259:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8251;
    label$8258:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$8260:;
    label$8251:;
   }
   if( ADR$1 != 0x1.81D8p+15 ) goto label$8262;
   {
    double vr$10045 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.A04p+15, vr$10045 );
    double vr$10047 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.A042p+15, vr$10047 );
   }
   label$8262:;
   label$8261:;
  }
  goto label$5806;
  label$8248:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8263;
  label$8264:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$8266;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$8266;
    label$8267:;
    {
     int64 vr$10069 = _Z6MODULOll( ((int64)__builtin_nearbyint( V$1 )), ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)BGCOL0$, (double)vr$10069 );
    }
    goto label$8265;
    label$8266:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8268;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8268;
    label$8269:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8265;
    label$8268:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8270;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8270;
    label$8271:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8265;
    label$8270:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8272;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8272;
    label$8273:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$8265;
    label$8272:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$8274:;
    label$8265:;
   }
  }
  goto label$5806;
  label$8263:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8275;
  label$8276:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$5806;
  label$8275:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8277;
  label$8278:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$5806;
  label$8277:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$8279;
  label$8280:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   fb_Chain( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10369 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10369, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$8284:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$8282:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$8281:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$8284;
    label$8283:;
   }
  }
  goto label$5806;
  label$8279:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8285;
  label$8286:;
  {
   FBSTRING TMP$4429$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4429$3, 0, 24ll );
   FBSTRING* vr$10384 = fb_StrConcat( &TMP$4429$3, (void*)"wine ", 6ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$10384 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10385 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10385, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$8290:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$8288:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$8287:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$8290;
    label$8289:;
   }
  }
  goto label$5806;
  label$8285:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8291;
  label$8292:;
  {
   FBSTRING TMP$4432$3;
   FBSTRING TMP$4433$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4432$3, 0, 24ll );
   FBSTRING* vr$10400 = fb_StrConcat( &TMP$4432$3, (void*)"dosbox-x ", 10ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4433$3, 0, 24ll );
   FBSTRING* vr$10403 = fb_StrConcat( &TMP$4433$3, (void*)vr$10400, -1ll, (void*)" -fullscreen -exit", 19ll );
   fb_Shell( (FBSTRING*)vr$10403 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10404 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10404, 0, 1073741828 );
  }
  goto label$5806;
  label$8291:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8293;
  label$8294:;
  {
   FBSTRING TMP$4435$3;
   __builtin_memset( &TMP$4435$3, 0, 24ll );
   FBSTRING* vr$10417 = fb_StrConcat( &TMP$4435$3, (void*)&STRCODE$, -1ll, (void*)".asm", 5ll );
   fb_FileOpen( (FBSTRING*)vr$10417, 3u, 0u, 0u, 1, 0 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8293:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8295;
  label$8296:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8295:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8297;
  label$8298:;
  {
   fb_FileClose( 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8297:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8299;
  label$8300:;
  {
   FBSTRING TMP$4439$3;
   FBSTRING TMP$4440$3;
   FBSTRING TMP$4441$3;
   FBSTRING TMP$4442$3;
   __builtin_memset( &TMP$4439$3, 0, 24ll );
   FBSTRING* vr$10450 = fb_StrConcat( &TMP$4439$3, (void*)"nasm ", 6ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4440$3, 0, 24ll );
   FBSTRING* vr$10453 = fb_StrConcat( &TMP$4440$3, (void*)vr$10450, -1ll, (void*)".asm -f bin -o", 15ll );
   __builtin_memset( &TMP$4441$3, 0, 24ll );
   FBSTRING* vr$10456 = fb_StrConcat( &TMP$4441$3, (void*)vr$10453, -1ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4442$3, 0, 24ll );
   FBSTRING* vr$10459 = fb_StrConcat( &TMP$4442$3, (void*)vr$10456, -1ll, (void*)".bin", 5ll );
   fb_Shell( (FBSTRING*)vr$10459 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8299:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8301;
  label$8302:;
  {
   FBSTRING TMP$4445$3;
   FBSTRING TMP$4446$3;
   FBSTRING TMP$4447$3;
   FBSTRING TMP$4449$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4445$3, 0, 24ll );
   FBSTRING* vr$10472 = fb_StrConcat( &TMP$4445$3, (void*)"dosbox-x -c 'boot ", 19ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4446$3, 0, 24ll );
   FBSTRING* vr$10475 = fb_StrConcat( &TMP$4446$3, (void*)vr$10472, -1ll, (void*)"'", 2ll );
   __builtin_memset( &TMP$4447$3, 0, 24ll );
   FBSTRING* vr$10478 = fb_StrConcat( &TMP$4447$3, (void*)vr$10475, -1ll, (void*)" -exit", 7ll );
   fb_Shell( (FBSTRING*)vr$10478 );
   __builtin_memset( &TMP$4449$3, 0, 24ll );
   FBSTRING* vr$10481 = fb_StrConcat( &TMP$4449$3, (void*)"rm ", 4ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$10481 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10482 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10482, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$8306:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
    }
    label$8304:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$8303:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$8306;
    label$8305:;
   }
  }
  goto label$5806;
  label$8301:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8307;
  label$8308:;
  {
   fb_Shell( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8307:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8309;
  label$8310:;
  {
   SWCH$ = V$1;
  }
  goto label$5806;
  label$8309:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8311;
  label$8312:;
  {
   FBSTRING* vr$10519 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10520 = fb_StrLcase2( (FBSTRING*)vr$10519, 0 );
   fb_StrConcatAssign( (void*)&STRCODE$, -1ll, (void*)vr$10520, -1ll, 0 );
  }
  goto label$5806;
  label$8311:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8313;
  label$8314:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8313:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8315;
  label$8316:;
  {
   *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) = V$1;
   if( (((int64)__builtin_nearbyint( *(double*)((uint8*)((uint8*)THIS$1 + (C$ << (3ll & 63ll))) + 262144ll) )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) >> (X$ & 63ll))) == 0ll ) goto label$8318;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$8320;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$8319;
    label$8320:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$8319:;
   }
   goto label$8317;
   label$8318:;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$8322;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$8321;
    label$8322:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$8321:;
   }
   label$8317:;
  }
  goto label$5806;
  label$8315:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8323;
  label$8324:;
  {
   fb_FileClose( 1 );
  }
  goto label$5806;
  label$8323:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8325;
  label$8326:;
  {
   FBSTRING* vr$10628 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10629 = fb_StrLcase2( (FBSTRING*)vr$10628, 0 );
   fb_StrConcatAssign( (void*)&FILENAME$, -1ll, (void*)vr$10629, -1ll, 0 );
  }
  goto label$5806;
  label$8325:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8327;
  label$8328:;
  {
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8142p+15, 0x0p+0 );
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8327:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) ) goto label$8329;
  label$8330:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8332;
    label$8333:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$8331;
    label$8332:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8334;
    label$8335:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$8331;
    label$8334:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$8336;
    label$8337:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    goto label$8331;
    label$8336:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$8338;
    label$8339:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    label$8338:;
    label$8331:;
   }
  }
  goto label$5806;
  label$8329:;
  if( ADR$1 != 0x1.8202p+15 ) goto label$8340;
  label$8341:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8343;
    label$8344:;
    {
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      int64 TMP$4450$6;
      TMP$4450$6 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$8345;
      label$8348:;
      {
       {
        Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) ));
        int64 TMP$4451$8;
        TMP$4451$8 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394976ll) ));
        goto label$8349;
        label$8352:;
        {
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8004p+15, ((double)X$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394952ll) - *(double*)((int64)(double*)MEM64$ + 394960ll)) )) * 0x1.FEp+7 );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8006p+15, (double)G$ );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.8008p+15, ((double)Y$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394168ll) - *(double*)((int64)(double*)MEM64$ + 394976ll)) )) * 0x1.FEp+7 );
         fb_GfxPset( FGIMAGE$, (float)X$, (float)Y$, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
        }
        label$8350:;
        Y$ = Y$ + 1ll;
        label$8349:;
        if( Y$ <= TMP$4451$8 ) goto label$8352;
        label$8351:;
       }
       G$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394928ll) ));
      }
      label$8346:;
      X$ = X$ + 1ll;
      label$8345:;
      if( X$ <= TMP$4450$6 ) goto label$8348;
      label$8347:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$8342;
    label$8343:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8353;
    label$8354:;
    {
    }
    goto label$8342;
    label$8353:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$8355;
    label$8356:;
    {
    }
    goto label$8342;
    label$8355:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$8357;
    label$8358:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$8362:;
      {
       double PS$7;
       double vr$10697 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10697;
       uint32 vr$10699 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( THIS$1, (float)PS$7, (boolean)0ll );
       COLOUR$5 = vr$10699;
       {
        int32 YY$8;
        YY$8 = 0;
        label$8366:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10704 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10704 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$8364:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$8363:;
        if( (int64)YY$8 <= 540ll ) goto label$8366;
        label$8365:;
       }
      }
      label$8360:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$8359:;
      if( (int64)XX$6 <= 1920ll ) goto label$8362;
      label$8361:;
     }
    }
    goto label$8342;
    label$8357:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$8367;
    label$8368:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$8372:;
      {
       double PS$7;
       double vr$10741 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10741;
       uint32 vr$10743 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( THIS$1, (float)PS$7, (boolean)0ll );
       COLOUR$5 = vr$10743;
       {
        int32 YY$8;
        YY$8 = 0;
        label$8376:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10748 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10748 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$8374:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$8373:;
        if( (int64)YY$8 <= 540ll ) goto label$8376;
        label$8375:;
       }
      }
      label$8370:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$8369:;
      if( (int64)XX$6 <= 1920ll ) goto label$8372;
      label$8371:;
     }
     _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( THIS$1, 0x0p+0f, (boolean)1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$8380:;
      {
       double PS$7;
       double vr$10776 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10776;
       uint32 vr$10778 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfb( THIS$1, (float)PS$7, (boolean)0ll );
       COLOUR$5 = vr$10778;
       R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
       G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
       B$5 = *(uint8*)&COLOUR$5;
       double RVAL$7;
       double vr$10783 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.F4p+9, 0x1.9p+8 );
       RVAL$7 = vr$10783;
       double RAD$7;
       double vr$10785 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10785;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)RVAL$7, (float)RAD$7, 4294901760u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double GVAL$7;
       double vr$10790 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.F4p+9, 0x1.9p+8 );
       GVAL$7 = vr$10790;
       double vr$10792 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10792;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)GVAL$7, (float)RAD$7, 4278255360u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double BVAL$7;
       double vr$10797 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.F4p+9, 0x1.9p+8 );
       BVAL$7 = vr$10797;
       double vr$10799 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10799;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)BVAL$7, (float)RAD$7, 4278190335u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
      }
      label$8378:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$8377:;
      if( (int64)XX$6 <= 1920ll ) goto label$8380;
      label$8379:;
     }
     _ZN12SYSTEM_BUS_T6FILTEREPvi( THIS$1, FGIMAGE$, 5 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$8342;
    label$8367:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$8381;
    label$8382:;
    {
     _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( THIS$1 );
    }
    goto label$8342;
    label$8381:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$8383;
    label$8384:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( THIS$1 );
    }
    goto label$8342;
    label$8383:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$8385;
    label$8386:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( THIS$1 );
    }
    goto label$8342;
    label$8385:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$8387;
    label$8388:;
    {
     _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( THIS$1 );
    }
    label$8387:;
    label$8342:;
   }
  }
  goto label$5806;
  label$8340:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8389;
  label$8390:;
  {
   fb_GfxLock( );
  }
  goto label$5806;
  label$8389:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8391;
  label$8392:;
  {
   fb_GfxUnlock( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) )) );
  }
  goto label$5806;
  label$8391:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8393;
  label$8394:;
  {
   fb_GfxUnlock( (int32)YS$, (int32)(YS$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) );
  }
  goto label$5806;
  label$8393:;
  if( ADR$1 != 0x1.820Ap+15 ) goto label$8395;
  label$8396:;
  {
   {
    uint64 TMP$4454$4;
    TMP$4454$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$8398;
    label$8399:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$8397;
    label$8400:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$8397;
    label$8401:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$8397;
    label$8402:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$8397;
    label$8403:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$8397;
    label$8404:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$8397;
    label$8398:;
    static const void* tmp$4526[6ll] = {
     &&label$8399,
     &&label$8400,
     &&label$8401,
     &&label$8402,
     &&label$8403,
     &&label$8404,
    };
    if( TMP$4454$4 > 5ull ) goto label$8397;
    goto *tmp$4526[TMP$4454$4 - 0ull];
    label$8397:;
   }
  }
  goto label$5806;
  label$8395:;
  if( ADR$1 != 0x1.820Cp+15 ) goto label$8405;
  label$8406:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8408;
    label$8409:;
    {
     fb_GfxPset( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$8407;
    label$8408:;
    if( V$1 != 0x1.p+0 ) goto label$8410;
    label$8411:;
    {
     fb_GfxPset( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$8407;
    label$8410:;
    if( V$1 != 0x1.p+1 ) goto label$8412;
    label$8413:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$8407;
    label$8412:;
    if( V$1 != 0x1.8p+1 ) goto label$8414;
    label$8415:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$8407;
    label$8414:;
    if( V$1 != 0x1.p+2 ) goto label$8416;
    label$8417:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 1, 65535u, 0 );
    }
    goto label$8407;
    label$8416:;
    if( V$1 != 0x1.4p+2 ) goto label$8418;
    label$8419:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394920ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 1, 65535u, 0 );
    }
    goto label$8407;
    label$8418:;
    if( V$1 != 0x1.8p+2 ) goto label$8420;
    label$8421:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
    }
    goto label$8407;
    label$8420:;
    if( V$1 != 0x1.Cp+2 ) goto label$8422;
    label$8423:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 2, 65535u, 0 );
    }
    goto label$8407;
    label$8422:;
    if( V$1 != 0x1.p+3 ) goto label$8424;
    label$8425:;
    {
     fb_GfxEllipse( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$8407;
    label$8424:;
    if( V$1 != 0x1.2p+3 ) goto label$8426;
    label$8427:;
    {
     fb_GfxEllipse( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$8407;
    label$8426:;
    if( V$1 != 0x1.4p+3 ) goto label$8428;
    label$8429:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    goto label$8407;
    label$8428:;
    if( V$1 != 0x1.6p+3 ) goto label$8430;
    label$8431:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    label$8430:;
    label$8407:;
   }
  }
  goto label$5806;
  label$8405:;
  if( ADR$1 != 0x1.820Ep+15 ) goto label$8432;
  label$8433:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 0 );
   fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)&STRCODE$, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5806;
  label$8432:;
  if( ADR$1 != 0x1.821p+15 ) goto label$8434;
  label$8435:;
  {
   {
    double TMP$4455$4;
    TMP$4455$4 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll)));
    if( TMP$4455$4 < 0x1.p+0 ) goto label$8437;
    if( TMP$4455$4 > 0x1.DCp+6 ) goto label$8437;
    label$8438:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2;
    }
    goto label$8436;
    label$8437:;
    if( TMP$4455$4 < 0x1.DCp+6 ) goto label$8439;
    if( TMP$4455$4 > 0x1.FCp+6 ) goto label$8439;
    label$8440:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$8436;
    label$8439:;
    if( TMP$4455$4 < 0x1.p+7 ) goto label$8441;
    if( TMP$4455$4 > 0x1.0Cp+7 ) goto label$8441;
    label$8442:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$8436;
    label$8441:;
    if( TMP$4455$4 < 0x1.0Ep+7 ) goto label$8443;
    if( TMP$4455$4 > 0x1.44p+7 ) goto label$8443;
    label$8444:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$8443:;
    label$8436:;
   }
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   {
    double TMP$4456$4;
    TMP$4456$4 = *(double*)((int64)(double*)MEM64$ + 395400ll);
    if( TMP$4456$4 < 0x1.p+14 ) goto label$8446;
    if( TMP$4456$4 > 0x1.F9Cp+14 ) goto label$8446;
    label$8447:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR0$ + 0x1.p+0 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR0$, *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1;
    }
    goto label$8445;
    label$8446:;
    if( TMP$4456$4 < 0x1.4p+19 ) goto label$8448;
    if( TMP$4456$4 > 0x1.5FFFEp+19 ) goto label$8448;
    label$8449:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$8448:;
    label$8445:;
   }
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
  }
  goto label$5806;
  label$8434:;
  if( ADR$1 != 0x1.8212p+15 ) goto label$8450;
  label$8451:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395384ll);
  }
  goto label$5806;
  label$8450:;
  if( ADR$1 != 0x1.822p+15 ) goto label$8452;
  label$8453:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395440ll);
  }
  goto label$5806;
  label$8452:;
  if( ADR$1 != 0x1.822Ep+15 ) goto label$8454;
  label$8455:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395464ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395472ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395480ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395488ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395496ll);
  }
  goto label$5806;
  label$8454:;
  if( ADR$1 != 0x1.823Cp+15 ) goto label$8456;
  label$8457:;
  {
   *(double*)((int64)(double*)MEM64$ + 395512ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395520ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395528ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395536ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395544ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395552ll);
  }
  goto label$5806;
  label$8456:;
  if( ADR$1 != 0x1.824Ap+15 ) goto label$8458;
  label$8459:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395576ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395584ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395592ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395600ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395608ll);
  }
  goto label$5806;
  label$8458:;
  if( ADR$1 != 0x1.8258p+15 ) goto label$8460;
  label$8461:;
  {
   *(double*)((int64)(double*)MEM64$ + 395624ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395640ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395664ll);
  }
  goto label$5806;
  label$8460:;
  if( ADR$1 != 0x1.8266p+15 ) goto label$8462;
  label$8463:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395688ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395696ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395704ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395712ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395720ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395728ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395736ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395744ll);
  }
  goto label$5806;
  label$8462:;
  if( ADR$1 != 0x1.827Ap+15 ) goto label$8464;
  label$8465:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395768ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395776ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395784ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395792ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395824ll);
  }
  goto label$5806;
  label$8464:;
  if( ADR$1 != 0x1.828Ep+15 ) goto label$8466;
  label$8467:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395848ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395856ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395864ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395872ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395880ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395888ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395896ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395904ll);
  }
  goto label$5806;
  label$8466:;
  if( ADR$1 != 0x1.82A2p+15 ) goto label$8468;
  label$8469:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395928ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395936ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395944ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395952ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395960ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395968ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395976ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395984ll);
  }
  goto label$5806;
  label$8468:;
  if( ADR$1 != 0x1.82B6p+15 ) goto label$8470;
  label$8471:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396008ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396016ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396024ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396032ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396040ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396048ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396056ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396064ll);
  }
  goto label$5806;
  label$8470:;
  if( ADR$1 != 0x1.82CAp+15 ) goto label$8472;
  label$8473:;
  {
   *(double*)((int64)(double*)MEM64$ + 396080ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396088ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396096ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396104ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396112ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396120ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396128ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396136ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396144ll);
  }
  goto label$5806;
  label$8472:;
  if( ADR$1 != 0x1.82DEp+15 ) goto label$8474;
  label$8475:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$5806;
  label$8474:;
  if( ADR$1 != 0x1.82Ep+15 ) goto label$8476;
  label$8477:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$5806;
  label$8476:;
  if( ADR$1 != 0x1.82E2p+15 ) goto label$8478;
  label$8479:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$5806;
  label$8478:;
  if( ADR$1 != 0x1.82E4p+15 ) goto label$8480;
  label$8481:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$5806;
  label$8480:;
  if( ADR$1 != 0x1.82E6p+15 ) goto label$8482;
  label$8483:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$5806;
  label$8482:;
  if( ADR$1 != 0x1.82E8p+15 ) goto label$8484;
  label$8485:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$5806;
  label$8484:;
  if( ADR$1 != 0x1.82EAp+15 ) goto label$8486;
  label$8487:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$5806;
  label$8486:;
  if( ADR$1 != 0x1.82ECp+15 ) goto label$8488;
  label$8489:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$5806;
  label$8488:;
  if( ADR$1 != 0x1.82EEp+15 ) goto label$8490;
  label$8491:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$5806;
  label$8490:;
  if( ADR$1 != 0x1.82Fp+15 ) goto label$8492;
  label$8493:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$5806;
  label$8492:;
  if( ADR$1 != 0x1.82F2p+15 ) goto label$8494;
  label$8495:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8497;
    label$8498:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 395120ll);
    }
    goto label$8496;
    label$8497:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8499;
    label$8500:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
    }
    label$8499:;
    label$8496:;
   }
  }
  goto label$5806;
  label$8494:;
  if( ADR$1 != 0x1.82F4p+15 ) goto label$8501;
  label$8502:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8501:;
  if( ADR$1 != 0x1.82F6p+15 ) goto label$8503;
  label$8504:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8503:;
  if( ADR$1 != 0x1.82F8p+15 ) goto label$8505;
  label$8506:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8505:;
  if( ADR$1 != 0x1.82FAp+15 ) goto label$8507;
  label$8508:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8507:;
  if( ADR$1 != 0x1.82FCp+15 ) goto label$8509;
  label$8510:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8509:;
  if( ADR$1 != 0x1.82FEp+15 ) goto label$8511;
  label$8512:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8511:;
  if( ADR$1 != 0x1.83p+15 ) goto label$8513;
  label$8514:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8513:;
  if( ADR$1 != 0x1.D122p+15 ) goto label$8515;
  label$8516:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8515:;
  if( ADR$1 != 0x1.8304p+15 ) goto label$8517;
  label$8518:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8517:;
  if( ADR$1 != 0x1.8306p+15 ) goto label$8519;
  label$8520:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8519:;
  if( ADR$1 != 0x1.8308p+15 ) goto label$8521;
  label$8522:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8521:;
  if( ADR$1 != 0x1.830Ap+15 ) goto label$8523;
  label$8524:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8523:;
  if( ADR$1 != 0x1.830Cp+15 ) goto label$8525;
  label$8526:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8525:;
  if( ADR$1 != 0x1.830Ep+15 ) goto label$8527;
  label$8528:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8527:;
  if( ADR$1 != 0x1.831p+15 ) goto label$8529;
  label$8530:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8529:;
  if( ADR$1 != 0x1.8312p+15 ) goto label$8531;
  label$8532:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8531:;
  if( ADR$1 != 0x1.8314p+15 ) goto label$8533;
  label$8534:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8533:;
  if( ADR$1 != 0x1.8316p+15 ) goto label$8535;
  label$8536:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8535:;
  if( ADR$1 != 0x1.8318p+15 ) goto label$8537;
  label$8538:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8537:;
  if( ADR$1 != 0x1.831Ap+15 ) goto label$8539;
  label$8540:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8539:;
  if( ADR$1 != 0x1.831Cp+15 ) goto label$8541;
  label$8542:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$5806;
  label$8541:;
  if( ADR$1 != 0x1.831Ep+15 ) goto label$8543;
  label$8544:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8543:;
  if( ADR$1 != 0x1.832p+15 ) goto label$8545;
  label$8546:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$5806;
  label$8545:;
  if( ADR$1 != 0x1.8322p+15 ) goto label$8547;
  label$8548:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8547:;
  if( ADR$1 != 0x1.8324p+15 ) goto label$8549;
  label$8550:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$5806;
  label$8549:;
  if( ADR$1 != 0x1.8326p+15 ) goto label$8551;
  label$8552:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$5806;
  label$8551:;
  if( ADR$1 != 0x1.8328p+15 ) goto label$8553;
  label$8554:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$5806;
  label$8553:;
  if( ADR$1 != 0x1.832Ap+15 ) goto label$8555;
  label$8556:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$5806;
  label$8555:;
  if( ADR$1 != 0x1.832Cp+15 ) goto label$8557;
  label$8558:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8557:;
  if( ADR$1 != 0x1.832Ep+15 ) goto label$8559;
  label$8560:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$5806;
  label$8559:;
  if( ADR$1 != 0x1.833p+15 ) goto label$8561;
  label$8562:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$5806;
  label$8561:;
  if( ADR$1 != 0x1.8332p+15 ) goto label$8563;
  label$8564:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$5806;
  label$8563:;
  if( ADR$1 != 0x1.8334p+15 ) goto label$8565;
  label$8566:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$5806;
  label$8565:;
  if( ADR$1 != 0x1.8336p+15 ) goto label$8567;
  label$8568:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) - *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$5806;
  label$8567:;
  if( ADR$1 != 0x1.8338p+15 ) goto label$8569;
  label$8570:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) * *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$5806;
  label$8569:;
  if( ADR$1 != 0x1.833Ap+15 ) goto label$8571;
  label$8572:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) / *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$5806;
  label$8571:;
  if( ADR$1 != 0x1.833Cp+15 ) goto label$8573;
  label$8574:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$5806;
  label$8573:;
  if( ADR$1 != 0x1.833Ep+15 ) goto label$8575;
  label$8576:;
  {
   double vr$11247 = pow( *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11247;
  }
  goto label$5806;
  label$8575:;
  if( ADR$1 != 0x1.834p+15 ) goto label$8577;
  label$8578:;
  {
   double vr$11248 = _Z6MODULOdd( *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11248;
  }
  goto label$5806;
  label$8577:;
  if( ADR$1 != 0x1.8342p+15 ) goto label$8579;
  label$8580:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = -(*(double*)((int64)(double*)MEM64$ + 395680ll));
  }
  goto label$5806;
  label$8579:;
  if( ADR$1 != 0x1.8344p+15 ) goto label$8581;
  label$8582:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$5806;
  label$8581:;
  if( ADR$1 != 0x1.8346p+15 ) goto label$8583;
  label$8584:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$5806;
  label$8583:;
  if( ADR$1 != 0x1.8348p+15 ) goto label$8585;
  label$8586:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8585:;
  if( ADR$1 != 0x1.834Ap+15 ) goto label$8587;
  label$8588:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8587:;
  if( ADR$1 != 0x1.834Cp+15 ) goto label$8589;
  label$8590:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8589:;
  if( ADR$1 != 0x1.834Ep+15 ) goto label$8591;
  label$8592:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8591:;
  if( ADR$1 != 0x1.835p+15 ) goto label$8593;
  label$8594:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) >= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8593:;
  if( ADR$1 != 0x1.8352p+15 ) goto label$8595;
  label$8596:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$5806;
  label$8595:;
  if( ADR$1 != 0x1.8354p+15 ) goto label$8597;
  label$8598:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$5806;
  label$8597:;
  if( ADR$1 != 0x1.8356p+15 ) goto label$8599;
  label$8600:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$5806;
  label$8599:;
  if( ADR$1 != 0x1.8358p+15 ) goto label$8601;
  label$8602:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$5806;
  label$8601:;
  if( ADR$1 != 0x1.835Ap+15 ) goto label$8603;
  label$8604:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$5806;
  label$8603:;
  if( ADR$1 != 0x1.835Cp+15 ) goto label$8605;
  label$8606:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$5806;
  label$8605:;
  if( ADR$1 != 0x1.835Ep+15 ) goto label$8607;
  label$8608:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8607:;
  if( ADR$1 != 0x1.836p+15 ) goto label$8609;
  label$8610:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$5806;
  label$8609:;
  if( ADR$1 != 0x1.8362p+15 ) goto label$8611;
  label$8612:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + 0x1.p+0;
  }
  goto label$5806;
  label$8611:;
  if( ADR$1 != 0x1.8364p+15 ) goto label$8613;
  label$8614:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + 0x1.p+0;
  }
  goto label$5806;
  label$8613:;
  if( ADR$1 != 0x1.8366p+15 ) goto label$8615;
  label$8616:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + 0x1.p+0;
  }
  goto label$5806;
  label$8615:;
  if( ADR$1 != 0x1.8368p+15 ) goto label$8617;
  label$8618:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + -0x1.p+0;
  }
  goto label$5806;
  label$8617:;
  if( ADR$1 != 0x1.836Ap+15 ) goto label$8619;
  label$8620:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + -0x1.p+0;
  }
  goto label$5806;
  label$8619:;
  if( ADR$1 != 0x1.836Cp+15 ) goto label$8621;
  label$8622:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + -0x1.p+0;
  }
  goto label$5806;
  label$8621:;
  if( ADR$1 != 0x1.836Ep+15 ) goto label$8623;
  label$8624:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8626;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8626:;
   }
  }
  goto label$5806;
  label$8623:;
  if( ADR$1 != 0x1.837p+15 ) goto label$8627;
  label$8628:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8630;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8630:;
   }
  }
  goto label$5806;
  label$8627:;
  if( ADR$1 != 0x1.8372p+15 ) goto label$8631;
  label$8632:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8634;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8634:;
   }
  }
  goto label$5806;
  label$8631:;
  if( ADR$1 != 0x1.8374p+15 ) goto label$8635;
  label$8636:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8638;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8638:;
   }
  }
  goto label$5806;
  label$8635:;
  if( ADR$1 != 0x1.8376p+15 ) goto label$8639;
  label$8640:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8642;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8642:;
   }
  }
  goto label$5806;
  label$8639:;
  if( ADR$1 != 0x1.8378p+15 ) goto label$8643;
  label$8644:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$8646;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$8646:;
   }
  }
  goto label$5806;
  label$8643:;
  if( ADR$1 != 0x1.837Ap+15 ) goto label$8647;
  label$8648:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
  }
  goto label$5806;
  label$8647:;
  if( ADR$1 != 0x1.837Cp+15 ) goto label$8649;
  label$8650:;
  {
   double vr$11296 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11296;
  }
  goto label$5806;
  label$8649:;
  if( ADR$1 != 0x1.837Ep+15 ) goto label$8651;
  label$8652:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 395680ll) );
  }
  goto label$5806;
  label$8651:;
  if( ADR$1 != 0x1.838p+15 ) goto label$8653;
  label$8654:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 396000ll);
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$8655:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$8656;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395680ll);
     double TMP$4457$5;
     TMP$4457$5 = *(double*)((int64)(double*)MEM64$ + 395760ll);
     goto label$8657;
     label$8660:;
     {
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$8658:;
     PC$ = PC$ + 0x1.p+0;
     label$8657:;
     if( PC$ <= TMP$4457$5 ) goto label$8660;
     label$8659:;
    }
    TMP$3 = (TMP$3 + 1ull) % ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396968ll) ));
   }
   goto label$8655;
   label$8656:;
  }
  goto label$5806;
  label$8653:;
  if( ADR$1 != 0x1.8382p+15 ) goto label$8661;
  label$8662:;
  {
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396976ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396984ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396992ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397000ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397008ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397016ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397024ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397032ll);
  }
  goto label$5806;
  label$8661:;
  if( ADR$1 != 0x1.8384p+15 ) goto label$8663;
  label$8664:;
  {
   *(double*)((int64)(double*)MEM64$ + 397040ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397064ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397072ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397104ll);
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$5806;
  label$8663:;
  if( ADR$1 != 0x1.8386p+15 ) goto label$8665;
  label$8666:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$5806;
  label$8665:;
  if( ADR$1 != 0x1.8388p+15 ) goto label$8667;
  label$8668:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$5806;
  label$8667:;
  if( ADR$1 != 0x1.838Ap+15 ) goto label$8669;
  label$8670:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$5806;
  label$8669:;
  if( ADR$1 != 0x1.838Cp+15 ) goto label$8671;
  label$8672:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$5806;
  label$8671:;
  if( ADR$1 != 0x1.838Ep+15 ) goto label$8673;
  label$8674:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), (float)*(double*)((int64)(double*)MEM64$ + 394848ll), (float)*(double*)((int64)(double*)MEM64$ + 394864ll), (float)*(double*)((int64)(double*)MEM64$ + 394872ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
  }
  goto label$5806;
  label$8673:;
  if( ADR$1 != 0x1.83CEp+15 ) goto label$8675;
  label$8676:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8678;
    label$8679:;
    {
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    goto label$8677;
    label$8678:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8680;
    label$8681:;
    {
     fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    label$8680:;
    label$8677:;
   }
  }
  goto label$5806;
  label$8675:;
  if( ADR$1 != 0x1.83Dp+15 ) goto label$8682;
  label$8683:;
  {
   FBSTRING TMP$4458$3;
   FBSTRING TMP$4459$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$8687:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$8685:;
    C$4 = C$4 + 1ull;
    label$8684:;
    if( C$4 <= 8191ull ) goto label$8687;
    label$8686:;
   }
   FBSTRING* vr$11491 = fb_DoubleToStr( V$1 + 0x1.FEp+7 );
   __builtin_memset( &TMP$4458$3, 0, 24ll );
   FBSTRING* vr$11494 = fb_StrConcat( &TMP$4458$3, (void*)"./chargen/", 11ll, (void*)vr$11491, -1ll );
   __builtin_memset( &TMP$4459$3, 0, 24ll );
   FBSTRING* vr$11497 = fb_StrConcat( &TMP$4459$3, (void*)vr$11494, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11497, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$4460$4;
    int64 vr$11498 = fb_FileSize( 1 );
    TMP$4460$4 = (uint64)vr$11498;
    goto label$8688;
    label$8691:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$8689:;
    I$4 = I$4 + 1ull;
    label$8688:;
    if( I$4 <= TMP$4460$4 ) goto label$8691;
    label$8690:;
   }
   fb_FileClose( 1 );
  }
  goto label$5806;
  label$8682:;
  if( ADR$1 != 0x1.83D2p+15 ) goto label$8692;
  label$8693:;
  {
   FBSTRING TMP$4461$3;
   FBSTRING TMP$4462$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$8697:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$8695:;
    C$4 = C$4 + 1ull;
    label$8694:;
    if( C$4 <= 8191ull ) goto label$8697;
    label$8696:;
   }
   FBSTRING* vr$11509 = fb_DoubleToStr( V$1 + 0x1.FEp+8 );
   __builtin_memset( &TMP$4461$3, 0, 24ll );
   FBSTRING* vr$11512 = fb_StrConcat( &TMP$4461$3, (void*)"./chargen/", 11ll, (void*)vr$11509, -1ll );
   __builtin_memset( &TMP$4462$3, 0, 24ll );
   FBSTRING* vr$11515 = fb_StrConcat( &TMP$4462$3, (void*)vr$11512, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11515, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$4463$4;
    int64 vr$11516 = fb_FileSize( 1 );
    TMP$4463$4 = (uint64)vr$11516;
    goto label$8698;
    label$8701:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$8699:;
    I$4 = I$4 + 1ull;
    label$8698:;
    if( I$4 <= TMP$4463$4 ) goto label$8701;
    label$8700:;
   }
   fb_FileClose( 1 );
  }
  goto label$5806;
  label$8692:;
  if( ADR$1 != 0x1.83D4p+15 ) goto label$8702;
  label$8703:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8705;
    label$8706:;
    {
     FBSTRING TMP$4464$5;
     FBSTRING TMP$4465$5;
     FBSTRING TMP$4466$5;
     FBSTRING TMP$4467$5;
     FBSTRING TMP$4468$5;
     FBSTRING* vr$11522 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11523 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11524 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4464$5, 0, 24ll );
     FBSTRING* vr$11527 = fb_StrConcat( &TMP$4464$5, (void*)"c", 2ll, (void*)vr$11524, -1ll );
     __builtin_memset( &TMP$4465$5, 0, 24ll );
     FBSTRING* vr$11530 = fb_StrConcat( &TMP$4465$5, (void*)vr$11527, -1ll, (void*)"M", 2ll );
     __builtin_memset( &TMP$4466$5, 0, 24ll );
     FBSTRING* vr$11533 = fb_StrConcat( &TMP$4466$5, (void*)vr$11530, -1ll, (void*)vr$11523, -1ll );
     __builtin_memset( &TMP$4467$5, 0, 24ll );
     FBSTRING* vr$11536 = fb_StrConcat( &TMP$4467$5, (void*)vr$11533, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$4468$5, 0, 24ll );
     FBSTRING* vr$11539 = fb_StrConcat( &TMP$4468$5, (void*)vr$11536, -1ll, (void*)vr$11522, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11539 );
    }
    goto label$8704;
    label$8705:;
    if( V$1 != 0x1.p+0 ) goto label$8707;
    label$8708:;
    {
     FBSTRING TMP$4469$5;
     FBSTRING TMP$4470$5;
     FBSTRING TMP$4471$5;
     FBSTRING* vr$11540 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11541 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4469$5, 0, 24ll );
     FBSTRING* vr$11544 = fb_StrConcat( &TMP$4469$5, (void*)"c", 2ll, (void*)vr$11541, -1ll );
     __builtin_memset( &TMP$4470$5, 0, 24ll );
     FBSTRING* vr$11547 = fb_StrConcat( &TMP$4470$5, (void*)vr$11544, -1ll, (void*)"u", 2ll );
     __builtin_memset( &TMP$4471$5, 0, 24ll );
     FBSTRING* vr$11550 = fb_StrConcat( &TMP$4471$5, (void*)vr$11547, -1ll, (void*)vr$11540, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11550 );
    }
    goto label$8704;
    label$8707:;
    if( V$1 != 0x1.p+1 ) goto label$8709;
    label$8710:;
    {
     FBSTRING TMP$4472$5;
     FBSTRING TMP$4473$5;
     FBSTRING TMP$4474$5;
     FBSTRING* vr$11551 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11552 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4472$5, 0, 24ll );
     FBSTRING* vr$11555 = fb_StrConcat( &TMP$4472$5, (void*)"c", 2ll, (void*)vr$11552, -1ll );
     __builtin_memset( &TMP$4473$5, 0, 24ll );
     FBSTRING* vr$11558 = fb_StrConcat( &TMP$4473$5, (void*)vr$11555, -1ll, (void*)"d", 2ll );
     __builtin_memset( &TMP$4474$5, 0, 24ll );
     FBSTRING* vr$11561 = fb_StrConcat( &TMP$4474$5, (void*)vr$11558, -1ll, (void*)vr$11551, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11561 );
    }
    goto label$8704;
    label$8709:;
    if( V$1 != 0x1.8p+1 ) goto label$8711;
    label$8712:;
    {
     FBSTRING TMP$4475$5;
     FBSTRING TMP$4476$5;
     FBSTRING TMP$4477$5;
     FBSTRING* vr$11562 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11563 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4475$5, 0, 24ll );
     FBSTRING* vr$11566 = fb_StrConcat( &TMP$4475$5, (void*)"c", 2ll, (void*)vr$11563, -1ll );
     __builtin_memset( &TMP$4476$5, 0, 24ll );
     FBSTRING* vr$11569 = fb_StrConcat( &TMP$4476$5, (void*)vr$11566, -1ll, (void*)"l", 2ll );
     __builtin_memset( &TMP$4477$5, 0, 24ll );
     FBSTRING* vr$11572 = fb_StrConcat( &TMP$4477$5, (void*)vr$11569, -1ll, (void*)vr$11562, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11572 );
    }
    goto label$8704;
    label$8711:;
    if( V$1 != 0x1.p+2 ) goto label$8713;
    label$8714:;
    {
     FBSTRING TMP$4478$5;
     FBSTRING TMP$4479$5;
     FBSTRING TMP$4480$5;
     FBSTRING* vr$11573 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11574 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4478$5, 0, 24ll );
     FBSTRING* vr$11577 = fb_StrConcat( &TMP$4478$5, (void*)"c", 2ll, (void*)vr$11574, -1ll );
     __builtin_memset( &TMP$4479$5, 0, 24ll );
     FBSTRING* vr$11580 = fb_StrConcat( &TMP$4479$5, (void*)vr$11577, -1ll, (void*)"r", 2ll );
     __builtin_memset( &TMP$4480$5, 0, 24ll );
     FBSTRING* vr$11583 = fb_StrConcat( &TMP$4480$5, (void*)vr$11580, -1ll, (void*)vr$11573, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11583 );
    }
    goto label$8704;
    label$8713:;
    if( V$1 != 0x1.4p+2 ) goto label$8715;
    label$8716:;
    {
     FBSTRING TMP$4481$5;
     FBSTRING TMP$4482$5;
     FBSTRING TMP$4483$5;
     FBSTRING* vr$11584 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11585 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4481$5, 0, 24ll );
     FBSTRING* vr$11588 = fb_StrConcat( &TMP$4481$5, (void*)"c", 2ll, (void*)vr$11585, -1ll );
     __builtin_memset( &TMP$4482$5, 0, 24ll );
     FBSTRING* vr$11591 = fb_StrConcat( &TMP$4482$5, (void*)vr$11588, -1ll, (void*)"e", 2ll );
     __builtin_memset( &TMP$4483$5, 0, 24ll );
     FBSTRING* vr$11594 = fb_StrConcat( &TMP$4483$5, (void*)vr$11591, -1ll, (void*)vr$11584, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11594 );
    }
    goto label$8704;
    label$8715:;
    if( V$1 != 0x1.8p+2 ) goto label$8717;
    label$8718:;
    {
     FBSTRING TMP$4484$5;
     FBSTRING TMP$4485$5;
     FBSTRING TMP$4486$5;
     FBSTRING* vr$11595 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11596 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4484$5, 0, 24ll );
     FBSTRING* vr$11599 = fb_StrConcat( &TMP$4484$5, (void*)"c", 2ll, (void*)vr$11596, -1ll );
     __builtin_memset( &TMP$4485$5, 0, 24ll );
     FBSTRING* vr$11602 = fb_StrConcat( &TMP$4485$5, (void*)vr$11599, -1ll, (void*)"f", 2ll );
     __builtin_memset( &TMP$4486$5, 0, 24ll );
     FBSTRING* vr$11605 = fb_StrConcat( &TMP$4486$5, (void*)vr$11602, -1ll, (void*)vr$11595, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11605 );
    }
    goto label$8704;
    label$8717:;
    if( V$1 != 0x1.Cp+2 ) goto label$8719;
    label$8720:;
    {
     FBSTRING TMP$4487$5;
     FBSTRING TMP$4488$5;
     FBSTRING TMP$4489$5;
     FBSTRING* vr$11606 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11607 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4487$5, 0, 24ll );
     FBSTRING* vr$11610 = fb_StrConcat( &TMP$4487$5, (void*)"c", 2ll, (void*)vr$11607, -1ll );
     __builtin_memset( &TMP$4488$5, 0, 24ll );
     FBSTRING* vr$11613 = fb_StrConcat( &TMP$4488$5, (void*)vr$11610, -1ll, (void*)"g", 2ll );
     __builtin_memset( &TMP$4489$5, 0, 24ll );
     FBSTRING* vr$11616 = fb_StrConcat( &TMP$4489$5, (void*)vr$11613, -1ll, (void*)vr$11606, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11616 );
    }
    goto label$8704;
    label$8719:;
    if( V$1 != 0x1.p+3 ) goto label$8721;
    label$8722:;
    {
     FBSTRING TMP$4490$5;
     FBSTRING TMP$4491$5;
     FBSTRING TMP$4492$5;
     FBSTRING* vr$11617 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11618 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4490$5, 0, 24ll );
     FBSTRING* vr$11621 = fb_StrConcat( &TMP$4490$5, (void*)"c", 2ll, (void*)vr$11618, -1ll );
     __builtin_memset( &TMP$4491$5, 0, 24ll );
     FBSTRING* vr$11624 = fb_StrConcat( &TMP$4491$5, (void*)vr$11621, -1ll, (void*)"h", 2ll );
     __builtin_memset( &TMP$4492$5, 0, 24ll );
     FBSTRING* vr$11627 = fb_StrConcat( &TMP$4492$5, (void*)vr$11624, -1ll, (void*)vr$11617, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11627 );
    }
    goto label$8704;
    label$8721:;
    if( V$1 != 0x1.2p+3 ) goto label$8723;
    label$8724:;
    {
     FBSTRING TMP$4493$5;
     FBSTRING* vr$11628 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4493$5, 0, 24ll );
     FBSTRING* vr$11631 = fb_StrConcat( &TMP$4493$5, (void*)"c", 2ll, (void*)vr$11628, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11631 );
    }
    goto label$8704;
    label$8723:;
    if( V$1 != 0x1.4p+3 ) goto label$8725;
    label$8726:;
    {
     FBSTRING TMP$4494$5;
     FBSTRING TMP$4495$5;
     FBSTRING TMP$4496$5;
     FBSTRING TMP$4497$5;
     FBSTRING TMP$4498$5;
     FBSTRING* vr$11632 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11633 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11634 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4494$5, 0, 24ll );
     FBSTRING* vr$11637 = fb_StrConcat( &TMP$4494$5, (void*)"c", 2ll, (void*)vr$11634, -1ll );
     __builtin_memset( &TMP$4495$5, 0, 24ll );
     FBSTRING* vr$11640 = fb_StrConcat( &TMP$4495$5, (void*)vr$11637, -1ll, (void*)"p", 2ll );
     __builtin_memset( &TMP$4496$5, 0, 24ll );
     FBSTRING* vr$11643 = fb_StrConcat( &TMP$4496$5, (void*)vr$11640, -1ll, (void*)vr$11633, -1ll );
     __builtin_memset( &TMP$4497$5, 0, 24ll );
     FBSTRING* vr$11646 = fb_StrConcat( &TMP$4497$5, (void*)vr$11643, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$4498$5, 0, 24ll );
     FBSTRING* vr$11649 = fb_StrConcat( &TMP$4498$5, (void*)vr$11646, -1ll, (void*)vr$11632, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11649 );
    }
    goto label$8704;
    label$8725:;
    if( V$1 != 0x1.6p+3 ) goto label$8727;
    label$8728:;
    {
     FBSTRING TMP$4499$5;
     FBSTRING TMP$4500$5;
     FBSTRING TMP$4501$5;
     FBSTRING* vr$11650 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11651 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4499$5, 0, 24ll );
     FBSTRING* vr$11654 = fb_StrConcat( &TMP$4499$5, (void*)"c", 2ll, (void*)vr$11651, -1ll );
     __builtin_memset( &TMP$4500$5, 0, 24ll );
     FBSTRING* vr$11657 = fb_StrConcat( &TMP$4500$5, (void*)vr$11654, -1ll, (void*)"s", 2ll );
     __builtin_memset( &TMP$4501$5, 0, 24ll );
     FBSTRING* vr$11660 = fb_StrConcat( &TMP$4501$5, (void*)vr$11657, -1ll, (void*)vr$11650, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11660 );
    }
    goto label$8704;
    label$8727:;
    if( V$1 != 0x1.8p+3 ) goto label$8729;
    label$8730:;
    {
     FBSTRING TMP$4502$5;
     FBSTRING TMP$4503$5;
     FBSTRING TMP$4504$5;
     FBSTRING* vr$11661 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11662 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4502$5, 0, 24ll );
     FBSTRING* vr$11665 = fb_StrConcat( &TMP$4502$5, (void*)"c", 2ll, (void*)vr$11662, -1ll );
     __builtin_memset( &TMP$4503$5, 0, 24ll );
     FBSTRING* vr$11668 = fb_StrConcat( &TMP$4503$5, (void*)vr$11665, -1ll, (void*)"a", 2ll );
     __builtin_memset( &TMP$4504$5, 0, 24ll );
     FBSTRING* vr$11671 = fb_StrConcat( &TMP$4504$5, (void*)vr$11668, -1ll, (void*)vr$11661, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11671 );
    }
    goto label$8704;
    label$8729:;
    if( V$1 != 0x1.Ap+3 ) goto label$8731;
    label$8732:;
    {
     FBSTRING TMP$4506$5;
     FBSTRING TMP$4507$5;
     FBSTRING TMP$4508$5;
     FBSTRING* vr$11672 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11673 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4506$5, 0, 24ll );
     FBSTRING* vr$11676 = fb_StrConcat( &TMP$4506$5, (void*)"c", 2ll, (void*)vr$11673, -1ll );
     __builtin_memset( &TMP$4507$5, 0, 24ll );
     FBSTRING* vr$11679 = fb_StrConcat( &TMP$4507$5, (void*)vr$11676, -1ll, (void*)"ta", 3ll );
     __builtin_memset( &TMP$4508$5, 0, 24ll );
     FBSTRING* vr$11682 = fb_StrConcat( &TMP$4508$5, (void*)vr$11679, -1ll, (void*)vr$11672, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11682 );
    }
    goto label$8704;
    label$8731:;
    if( V$1 != 0x1.Cp+3 ) goto label$8733;
    label$8734:;
    {
     FBSTRING TMP$4509$5;
     FBSTRING TMP$4510$5;
     FBSTRING* vr$11683 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4509$5, 0, 24ll );
     FBSTRING* vr$11686 = fb_StrConcat( &TMP$4509$5, (void*)"c", 2ll, (void*)vr$11683, -1ll );
     __builtin_memset( &TMP$4510$5, 0, 24ll );
     FBSTRING* vr$11689 = fb_StrConcat( &TMP$4510$5, (void*)vr$11686, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11689 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8704;
    label$8733:;
    if( V$1 != 0x1.Ep+3 ) goto label$8735;
    label$8736:;
    {
     FBSTRING TMP$4511$5;
     __builtin_memset( &TMP$4511$5, 0, 24ll );
     FBSTRING* vr$11692 = fb_StrConcat( &TMP$4511$5, (void*)"b", 2ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11692 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8704;
    label$8735:;
    if( V$1 != 0x1.p+4 ) goto label$8737;
    label$8738:;
    {
     FBSTRING TMP$4512$5;
     FBSTRING TMP$4513$5;
     FBSTRING TMP$4514$5;
     FBSTRING* vr$11693 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$4512$5, 0, 24ll );
     FBSTRING* vr$11696 = fb_StrConcat( &TMP$4512$5, (void*)"c", 2ll, (void*)vr$11693, -1ll );
     __builtin_memset( &TMP$4513$5, 0, 24ll );
     FBSTRING* vr$11699 = fb_StrConcat( &TMP$4513$5, (void*)vr$11696, -1ll, (void*)"n", 2ll );
     __builtin_memset( &TMP$4514$5, 0, 24ll );
     FBSTRING* vr$11702 = fb_StrConcat( &TMP$4514$5, (void*)vr$11699, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11702 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    label$8737:;
    label$8704:;
   }
  }
  goto label$5806;
  label$8702:;
  if( ADR$1 != 0x1.83D6p+15 ) goto label$8739;
  label$8740:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8742;
    label$8743:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 395608ll) + *(double*)((int64)(double*)MEM64$ + 394888ll)) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+5), *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$8742:;
    label$8741:;
   }
  }
  goto label$5806;
  label$8739:;
  if( ADR$1 != 0x1.83D8p+15 ) goto label$8744;
  label$8745:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8747;
    label$8748:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.68p+6)) + 0x1.p+14, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$8747:;
    label$8746:;
   }
  }
  goto label$5806;
  label$8744:;
  if( ADR$1 != 0x1.83DAp+15 ) goto label$8749;
  label$8750:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8752;
    label$8753:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+7)) + 0x1.Ap+19, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$8752:;
    label$8751:;
   }
  }
  goto label$5806;
  label$8749:;
  if( ADR$1 < *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) ) goto label$8754;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) ) goto label$8754;
  label$8755:;
  {
   ADR$1 = ADR$1 - *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
   C$ = ((uint64)__builtin_nearbyint( V$1 ));
   C$ = (uint64)C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((uint64)__builtin_nearbyint( (double)(uint64)C$ + *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll))) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$8757;
   {
    *(double*)&C$ = (double)(((int64)__builtin_nearbyint( *(double*)&C$ )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
    label$8757:;
   }
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8759;
   {
    *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
    label$8759:;
   }
   _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)*(uint8*)NIBBLES$ );
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8761;
   {
    XS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    XS$ = (uint64)XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    XS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)XS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    YS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) / (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    YS$ = (uint64)YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    YS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)YS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
    *(double*)&X$ = (double)*(uint8*)NIBBLES$;
    label$8762:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll)))) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))))) != 0ll ) goto label$8763;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll)) + 0x1.Cp+2;
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll)) + 0x1.Cp+2;
     double vr$11923 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), 0x1.81F8p+15, vr$11923 );
     X$ = (uint64)X$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
     if( (double)(uint64)X$ <= *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) ) goto label$8765;
     {
      X$ = (uint64)*(uint8*)NIBBLES$;
      Y$ = (uint64)Y$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      C$ = (uint64)C$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$8765:;
     label$8764:;
    }
    goto label$8762;
    label$8763:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)*(uint8*)NIBBLES$ );
   }
   goto label$8760;
   label$8761:;
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8766;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
    X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
    label$8767:;
    if( ((int64)-(Y$ == 0ll) & (int64)-(X$ == 0ll)) != 0ll ) goto label$8768;
    {
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)(((XS$ - X$) * 5ll) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)(((XS$ - X$) * 5ll) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$12003 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12003 );
     X$ = X$ + -1ll;
     if( X$ >= 0ll ) goto label$8770;
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
      Y$ = Y$ + -1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$8770:;
     label$8769:;
    }
    goto label$8767;
    label$8768:;
    fb_GfxUnlock( (int32)YS$, (int32)(YS$ + 8ll) );
   }
   goto label$8760;
   label$8766:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.p+1 ) goto label$8771;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = ((int64)__builtin_nearbyint( (double)XS$ + 0x1.88p+4 ));
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = ((int64)__builtin_nearbyint( (double)YS$ + 0x1.88p+4 ));
    Y$ = 0ll;
    X$ = 0ll;
    label$8772:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$8773;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)((XS$ + X$) * 5ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)((YS$ + Y$) << (2ll & 63ll)) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = ((double)(((XS$ + X$) * 5ll) + 7ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = ((double)(((YS$ + Y$) << (2ll & 63ll)) + 4ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$12054 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12054 );
     X$ = X$ + 1ll;
     if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$8775;
     {
      X$ = 0ll;
      Y$ = Y$ + 1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$8775:;
     label$8774:;
    }
    goto label$8772;
    label$8773:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   }
   goto label$8760;
   label$8771:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.8p+1 ) goto label$8776;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 80ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 80ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    {
     Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
     goto label$8777;
     label$8780:;
     {
      {
       X$ = 0ll;
       int64 TMP$4515$7;
       TMP$4515$7 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
       goto label$8781;
       label$8784:;
       {
        *(double*)((int64)(double*)MEM64$ + 394864ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394872ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        *(double*)((int64)(double*)MEM64$ + 394840ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394848ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        double vr$12097 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
        _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12097 );
       }
       label$8782:;
       X$ = X$ + 1ll;
       label$8781:;
       if( X$ <= TMP$4515$7 ) goto label$8784;
       label$8783:;
      }
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
      C$ = ((int64)__builtin_nearbyint( (double)C$ + 0x1.p+0 ));
     }
     label$8778:;
     Y$ = Y$ + -1ll;
     label$8777:;
     if( Y$ >= 0ll ) goto label$8780;
     label$8779:;
    }
    fb_GfxUnlock( (int32)YS$, ((int32)__builtin_nearbyint( (double)YS$ + 0x1.p+3 )) );
   }
   label$8776:;
   label$8760:;
  }
  goto label$5806;
  label$8754:;
  if( ADR$1 < (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$8785;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$8785;
  label$8786:;
  {
   {
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$8788;
    label$8789:;
    {
    }
    goto label$8787;
    label$8788:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01p+10) ) goto label$8790;
    label$8791:;
    {
    }
    goto label$8787;
    label$8790:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.014p+10) ) goto label$8792;
    label$8793:;
    {
    }
    goto label$8787;
    label$8792:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.018p+10) ) goto label$8794;
    label$8795:;
    {
    }
    goto label$8787;
    label$8794:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$8796;
    label$8797:;
    {
    }
    label$8796:;
    label$8787:;
   }
  }
  goto label$5806;
  label$8785:;
  if( ADR$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$8798;
  if( ADR$1 > (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$8798;
  label$8799:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, V$1 );
  }
  goto label$5806;
  label$8798:;
  if( ADR$1 < 0x1.Cp+15 ) goto label$8802;
  if( ADR$1 <= 0x1.FFFEp+15 ) goto label$8801;
  label$8802:;
  if( ADR$1 < 0x1.4p+15 ) goto label$8803;
  if( ADR$1 <= 0x1.7FFEp+15 ) goto label$8801;
  label$8803:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$8800;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$8800;
  label$8801:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
  }
  label$8800:;
  label$5806:;
 }
 label$8804:;
 label$3445:;
}

uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$8808:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$8809;
 label$8809:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$8810:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$8811;
 label$8811:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$8812:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb$result$1 = (uint16)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$6 )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
 goto label$8813;
 label$8813:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$8814:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$8815:;
}

void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$8816:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$8817:;
}

void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double W16$1 )
{
 label$8818:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( W16$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (double)((((uint64)__builtin_nearbyint( W16$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$8819:;
}

void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510* THIS$1, struct $12SYSTEM_BUS_T* LPMEM$1 )
{
 label$8820:;
 __builtin_memset( (uint8*)THIS$1, 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 1ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 2ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 3ll), 0, 1ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 4ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 6ll), 0, 2ll );
 __builtin_memset( (struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), 0, 64ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 80ll), 0, 16384ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 16464ll), 0, 312ll );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll) = LPMEM$1;
 int64 I$1;
 I$1 = 0ll;
 fb_DataRestore( (void*)label$8823 );
 {
  I$1 = 0ll;
  label$8827:;
  {
   {
    struct $6OPCODE* TMP$4528$4;
    TMP$4528$4 = (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + (I$1 << (6ll & 63ll))) + 80ll);
    fb_DataReadULongint( (uint64*)TMP$4528$4 );
    fb_DataReadStr( (void*)((uint8*)TMP$4528$4 + 8ll), 4ll, 0 );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4528$4 + 16ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4528$4 + 24ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4528$4 + 32ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4528$4 + 56ll) );
   }
  }
  label$8825:;
  I$1 = I$1 + 1ll;
  label$8824:;
  if( I$1 <= 255ll ) goto label$8827;
  label$8826:;
 }
 fb_DataRestore( (void*)label$8829 );
 {
  I$1 = 0ll;
  label$8833:;
  {
   fb_DataReadStr( (void*)((uint8*)((uint8*)THIS$1 + (I$1 * 24ll)) + 16464ll), -1ll, 0 );
  }
  label$8831:;
  I$1 = I$1 + 1ll;
  label$8830:;
  if( I$1 <= 12ll ) goto label$8833;
  label$8832:;
 }
 *(uint8*)((uint8*)THIS$1 + 7ll) = (uint8)1u;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)64738u;
 label$8821:;
}

void _ZN7CPU6510D1Ev( struct $7CPU6510* THIS$1 )
{
 label$8834:;
 label$8835:;
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE {
  FBSTRING* DATA;
  FBSTRING* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N7CPU65108FBARRAY1I8FBSTRINGEE ) == 72) ? 1 : -1];
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE tmp$4530$1;
 *(FBSTRING**)&tmp$4530$1 = (FBSTRING*)((uint8*)THIS$1 + 16464ll);
 *(FBSTRING**)((uint8*)&tmp$4530$1 + 8ll) = (FBSTRING*)((uint8*)THIS$1 + 16464ll);
 *(int64*)((uint8*)&tmp$4530$1 + 16ll) = 312ll;
 *(int64*)((uint8*)&tmp$4530$1 + 24ll) = 24ll;
 *(int64*)((uint8*)&tmp$4530$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$4530$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$4530$1 + 48ll) = 13ll;
 *(int64*)((uint8*)&tmp$4530$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$4530$1 + 64ll) = 12ll;
 fb_ArrayDestructStr( (struct $7FBARRAYIvE*)&tmp$4530$1 );
}

FBSTRING* _ZN7CPU6510cv8FBSTRINGEv( struct $7CPU6510* THIS$1 )
{
 FBSTRING TMP$4544$1;
 FBSTRING TMP$4545$1;
 FBSTRING TMP$4546$1;
 FBSTRING TMP$4547$1;
 FBSTRING TMP$4548$1;
 FBSTRING TMP$4549$1;
 FBSTRING TMP$4550$1;
 FBSTRING TMP$4551$1;
 FBSTRING TMP$4552$1;
 FBSTRING TMP$4553$1;
 FBSTRING TMP$4554$1;
 FBSTRING TMP$4555$1;
 FBSTRING TMP$4556$1;
 FBSTRING TMP$4557$1;
 FBSTRING TMP$4558$1;
 FBSTRING TMP$4559$1;
 FBSTRING TMP$4560$1;
 FBSTRING TMP$4561$1;
 FBSTRING TMP$4562$1;
 FBSTRING TMP$4563$1;
 FBSTRING TMP$4564$1;
 FBSTRING TMP$4565$1;
 FBSTRING TMP$4566$1;
 FBSTRING TMP$4567$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$8836:;
 FBSTRING* vr$4 = fb_ULongintToStr( (uint64)(int64)*(uint8*)THIS$1 & 1ull );
 FBSTRING* vr$9 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (1ll & 63ll)) & 1ull );
 FBSTRING* vr$14 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (2ll & 63ll)) & 1ull );
 FBSTRING* vr$19 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (3ll & 63ll)) & 1ull );
 FBSTRING* vr$24 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (4ll & 63ll)) & 1ull );
 FBSTRING* vr$29 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (6ll & 63ll)) & 1ull );
 FBSTRING* vr$34 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (7ll & 63ll)) & 1ull );
 FBSTRING* vr$37 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 6ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$40 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 3ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$43 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 2ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$46 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$49 = fb_HEXEx_s( *(uint16*)((uint8*)THIS$1 + 4ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 __builtin_memset( &TMP$4544$1, 0, 24ll );
 FBSTRING* vr$52 = fb_StrConcat( &TMP$4544$1, (void*)"PC:", 4ll, (void*)vr$49, -1ll );
 __builtin_memset( &TMP$4545$1, 0, 24ll );
 FBSTRING* vr$55 = fb_StrConcat( &TMP$4545$1, (void*)vr$52, -1ll, (void*)" A:", 4ll );
 __builtin_memset( &TMP$4546$1, 0, 24ll );
 FBSTRING* vr$58 = fb_StrConcat( &TMP$4546$1, (void*)vr$55, -1ll, (void*)vr$46, -1ll );
 __builtin_memset( &TMP$4547$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$4547$1, (void*)vr$58, -1ll, (void*)" X:", 4ll );
 __builtin_memset( &TMP$4548$1, 0, 24ll );
 FBSTRING* vr$64 = fb_StrConcat( &TMP$4548$1, (void*)vr$61, -1ll, (void*)vr$43, -1ll );
 __builtin_memset( &TMP$4549$1, 0, 24ll );
 FBSTRING* vr$67 = fb_StrConcat( &TMP$4549$1, (void*)vr$64, -1ll, (void*)" Y:", 4ll );
 __builtin_memset( &TMP$4550$1, 0, 24ll );
 FBSTRING* vr$70 = fb_StrConcat( &TMP$4550$1, (void*)vr$67, -1ll, (void*)vr$40, -1ll );
 __builtin_memset( &TMP$4551$1, 0, 24ll );
 FBSTRING* vr$73 = fb_StrConcat( &TMP$4551$1, (void*)vr$70, -1ll, (void*)" S:", 4ll );
 __builtin_memset( &TMP$4552$1, 0, 24ll );
 FBSTRING* vr$76 = fb_StrConcat( &TMP$4552$1, (void*)vr$73, -1ll, (void*)vr$37, -1ll );
 __builtin_memset( &TMP$4553$1, 0, 24ll );
 FBSTRING* vr$79 = fb_StrConcat( &TMP$4553$1, (void*)vr$76, -1ll, (void*)" N:", 4ll );
 __builtin_memset( &TMP$4554$1, 0, 24ll );
 FBSTRING* vr$82 = fb_StrConcat( &TMP$4554$1, (void*)vr$79, -1ll, (void*)vr$34, -1ll );
 __builtin_memset( &TMP$4555$1, 0, 24ll );
 FBSTRING* vr$85 = fb_StrConcat( &TMP$4555$1, (void*)vr$82, -1ll, (void*)" V:", 4ll );
 __builtin_memset( &TMP$4556$1, 0, 24ll );
 FBSTRING* vr$88 = fb_StrConcat( &TMP$4556$1, (void*)vr$85, -1ll, (void*)vr$29, -1ll );
 __builtin_memset( &TMP$4557$1, 0, 24ll );
 FBSTRING* vr$91 = fb_StrConcat( &TMP$4557$1, (void*)vr$88, -1ll, (void*)" -", 3ll );
 __builtin_memset( &TMP$4558$1, 0, 24ll );
 FBSTRING* vr$94 = fb_StrConcat( &TMP$4558$1, (void*)vr$91, -1ll, (void*)" B:", 4ll );
 __builtin_memset( &TMP$4559$1, 0, 24ll );
 FBSTRING* vr$97 = fb_StrConcat( &TMP$4559$1, (void*)vr$94, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$4560$1, 0, 24ll );
 FBSTRING* vr$100 = fb_StrConcat( &TMP$4560$1, (void*)vr$97, -1ll, (void*)" D:", 4ll );
 __builtin_memset( &TMP$4561$1, 0, 24ll );
 FBSTRING* vr$103 = fb_StrConcat( &TMP$4561$1, (void*)vr$100, -1ll, (void*)vr$19, -1ll );
 __builtin_memset( &TMP$4562$1, 0, 24ll );
 FBSTRING* vr$106 = fb_StrConcat( &TMP$4562$1, (void*)vr$103, -1ll, (void*)" I:", 4ll );
 __builtin_memset( &TMP$4563$1, 0, 24ll );
 FBSTRING* vr$109 = fb_StrConcat( &TMP$4563$1, (void*)vr$106, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$4564$1, 0, 24ll );
 FBSTRING* vr$112 = fb_StrConcat( &TMP$4564$1, (void*)vr$109, -1ll, (void*)" Z:", 4ll );
 __builtin_memset( &TMP$4565$1, 0, 24ll );
 FBSTRING* vr$115 = fb_StrConcat( &TMP$4565$1, (void*)vr$112, -1ll, (void*)vr$9, -1ll );
 __builtin_memset( &TMP$4566$1, 0, 24ll );
 FBSTRING* vr$118 = fb_StrConcat( &TMP$4566$1, (void*)vr$115, -1ll, (void*)" C:", 4ll );
 __builtin_memset( &TMP$4567$1, 0, 24ll );
 FBSTRING* vr$121 = fb_StrConcat( &TMP$4567$1, (void*)vr$118, -1ll, (void*)vr$4, -1ll );
 fb_StrAssign( (void*)&fb$result$1, -1ll, (void*)vr$121, -1ll, 0 );
 label$8837:;
 FBSTRING* vr$124 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$124;
}

double _ZN7CPU65104TICKEd( struct $7CPU6510* THIS$1, double FLG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8838:;
 uint8 TICKS$1;
 TICKS$1 = *(uint8*)NIBBLES$;
 FBSTRING MSG$1;
 FBSTRING* vr$2 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MSG$1, -1ll, (void*)vr$2, -1ll, 0 );
 struct $5MULTI V$1;
 __builtin_memset( &V$1, 0, 16ll );
 uint8 vr$10 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + ((int64)vr$10 << (6ll & 63ll))) + 80ll), 64 );
 *(double*)((uint8*)THIS$1 + 56ll) = (double)*(uint8*)NIBBLES$;
 TICKS$1 = (uint8)((int64)TICKS$1 + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint64 TMP$4568$2;
  TMP$4568$2 = *(uint64*)((uint8*)THIS$1 + 32ll);
  goto label$8841;
  label$8842:;
  {
  }
  goto label$8840;
  label$8843:;
  {
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8844:;
  {
   double vr$29 = _ZN7CPU65107ADR_IMMEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$29 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8845:;
  {
   double vr$33 = _ZN7CPU65107ADR_ABSEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$33 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8846:;
  {
   double vr$37 = _ZN7CPU65108ADR_ZEROEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$37 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8847:;
  {
   double vr$41 = _ZN7CPU65109ADR_ZEROXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$41 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8848:;
  {
   double vr$45 = _ZN7CPU65109ADR_ZEROYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$45 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8849:;
  {
   double vr$49 = _ZN7CPU65108ADR_ABSXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$49 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8850:;
  {
   double vr$53 = _ZN7CPU65108ADR_ABSYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$53 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8851:;
  {
   double vr$57 = _ZN7CPU65107ADR_RELEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$57 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8852:;
  {
   double vr$61 = _ZN7CPU65108ADR_INDXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$61 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8853:;
  {
   double vr$65 = _ZN7CPU65108ADR_INDYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$65 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8854:;
  {
   double vr$69 = _ZN7CPU65107ADR_INDEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$69 ));
   (*(tmp$1736*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$8840;
  label$8841:;
  static const void* tmp$4569[13ll] = {
   &&label$8842,
   &&label$8843,
   &&label$8844,
   &&label$8845,
   &&label$8846,
   &&label$8847,
   &&label$8848,
   &&label$8849,
   &&label$8850,
   &&label$8851,
   &&label$8852,
   &&label$8853,
   &&label$8854,
  };
  if( TMP$4568$2 > 12ull ) goto label$8840;
  goto *tmp$4569[TMP$4568$2 - 0ull];
  label$8840:;
 }
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MSG$1 );
 label$8839:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_UNKEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8855:;
 fb_Sleep( -1 );
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 goto label$8856;
 label$8856:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8857:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8858:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8859:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8860:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8861:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)vr$4;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8862:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8863:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8864:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8865:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8866:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8867:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8868:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8869:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8870:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8871:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8872:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8873:;
 struct $5MULTI V$1;
 __builtin_memset( &V$1, 0, 16ll );
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$1 = (uint16)(((int64)vr$5 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 uint16 vr$19 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$1 );
 *(uint16*)&V$1 = vr$19;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 fb$result$1 = (double)*(uint16*)&V$1;
 label$8874:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8875:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)vr$4 );
 *(uint16*)&V$ = vr$7;
 *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 fb$result$1 = (double)*(uint16*)&V$;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8876:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8877:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$ = vr$4;
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$ );
 *(uint16*)&V$ = vr$7;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 fb$result$1 = (double)*(uint16*)&V$;
 label$8878:;
 return fb$result$1;
}

void _ZN7CPU65104PUSHEd( struct $7CPU6510* THIS$1, double B$1 )
{
 label$8879:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll), B$1 );
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8880:;
}

double _ZN7CPU65104PULLEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8881:;
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 uint8 vr$10 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll) );
 fb$result$1 = (double)vr$10;
 label$8882:;
 return fb$result$1;
}

void INS_UNK( struct $7CPU6510* CPU$1 )
{
 label$8883:;
 label$8884:;
}

void INS_ADC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4570$1;
 uint8 TMP$4571$1;
 uint8 TMP$4572$1;
 uint8 TMP$4573$1;
 label$8885:;
 uint8 UB$1;
 UB$1 = *(uint8*)NIBBLES$;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 UB$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) + (int64)UB$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8888;
 {
  *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$8888:;
 }
 if( ((~((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)UB$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$8889;
 TMP$4570$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8893;
 label$8889:;
 TMP$4570$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$8893:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4570$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ <= (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8890;
 TMP$4571$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8894;
 label$8890:;
 TMP$4571$1 = *(uint8*)NIBBLES$;
 label$8894:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4571$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8891;
 TMP$4572$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8895;
 label$8891:;
 TMP$4572$1 = *(uint8*)NIBBLES$;
 label$8895:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4572$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8892;
 TMP$4573$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8896;
 label$8892:;
 TMP$4573$1 = *(uint8*)NIBBLES$;
 label$8896:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4573$1 & 1ull) << (7ll & 63ll)));
 label$8886:;
}

void INS_AND( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4574$1;
 uint8 TMP$4575$1;
 label$8897:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8899;
 TMP$4574$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8901;
 label$8899:;
 TMP$4574$1 = *(uint8*)NIBBLES$;
 label$8901:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4574$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8900;
 TMP$4575$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8902;
 label$8900:;
 TMP$4575$1 = *(uint8*)NIBBLES$;
 label$8902:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4575$1 & 1ull) << (7ll & 63ll)));
 label$8898:;
}

void INS_ASL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4576$1;
 uint8 TMP$4577$1;
 uint8 TMP$4578$1;
 label$8903:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8905;
 TMP$4576$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8908;
 label$8905:;
 TMP$4576$1 = *(uint8*)NIBBLES$;
 label$8908:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4576$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8906;
 TMP$4577$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8909;
 label$8906:;
 TMP$4577$1 = *(uint8*)NIBBLES$;
 label$8909:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4577$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8907;
 TMP$4578$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8910;
 label$8907:;
 TMP$4578$1 = *(uint8*)NIBBLES$;
 label$8910:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4578$1 & 1ull) << (7ll & 63ll)));
 label$8904:;
}

void INS_ASLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4579$1;
 uint8 TMP$4580$1;
 uint8 TMP$4581$1;
 label$8911:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8913;
 TMP$4579$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8916;
 label$8913:;
 TMP$4579$1 = *(uint8*)NIBBLES$;
 label$8916:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4579$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8914;
 TMP$4580$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8917;
 label$8914:;
 TMP$4580$1 = *(uint8*)NIBBLES$;
 label$8917:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4580$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8915;
 TMP$4581$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8918;
 label$8915:;
 TMP$4581$1 = *(uint8*)NIBBLES$;
 label$8918:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4581$1 & 1ull) << (7ll & 63ll)));
 label$8912:;
}

void INS_BCC( struct $7CPU6510* CPU$1 )
{
 label$8919:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8922;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8922:;
 label$8921:;
 label$8920:;
}

void INS_BCS( struct $7CPU6510* CPU$1 )
{
 label$8923:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) == 0ull ) goto label$8926;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8926:;
 label$8925:;
 label$8924:;
}

void INS_BEQ( struct $7CPU6510* CPU$1 )
{
 label$8927:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8930;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8930:;
 label$8929:;
 label$8928:;
}

void INS_BIT( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4582$1;
 uint8 TMP$4583$1;
 uint8 TMP$4584$1;
 label$8931:;
 int8 B$1;
 __builtin_memset( &B$1, 0, 1ll );
 int8 vr$4 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 B$1 = vr$4;
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8933;
 TMP$4582$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8936;
 label$8933:;
 TMP$4582$1 = *(uint8*)NIBBLES$;
 label$8936:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4582$1 & 1ull) << (7ll & 63ll)));
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8934;
 TMP$4583$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8937;
 label$8934:;
 TMP$4583$1 = *(uint8*)NIBBLES$;
 label$8937:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4583$1 & 1ull) << (6ll & 63ll)));
 if( (int64)*(uint8*)NIBBLES$ != ((int64)B$1 & (int64)*(int8*)((uint8*)CPU$1 + 2ll)) ) goto label$8935;
 TMP$4584$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8938;
 label$8935:;
 TMP$4584$1 = *(uint8*)NIBBLES$;
 label$8938:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4584$1 & 1ull) << (1ll & 63ll)));
 label$8932:;
}

void INS_BMI( struct $7CPU6510* CPU$1 )
{
 label$8939:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) == 0ull ) goto label$8942;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8942:;
 label$8941:;
 label$8940:;
}

void INS_BNE( struct $7CPU6510* CPU$1 )
{
 label$8943:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8946;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8946:;
 label$8945:;
 label$8944:;
}

void INS_BPL( struct $7CPU6510* CPU$1 )
{
 label$8947:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) != 0ull ) goto label$8950;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8950:;
 label$8949:;
 label$8948:;
}

void INS_BRK( struct $7CPU6510* CPU$1 )
{
 label$8951:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (4ll & 63ll)));
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 uint16 vr$29 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint16*)((uint8*)CPU$1 + 4ll) = vr$29;
 label$8952:;
}

void INS_BVC( struct $7CPU6510* CPU$1 )
{
 label$8953:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8956;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8956:;
 label$8955:;
 label$8954:;
}

void INS_BVS( struct $7CPU6510* CPU$1 )
{
 label$8957:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) == 0ull ) goto label$8960;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8960:;
 label$8959:;
 label$8958:;
}

void INS_CLC( struct $7CPU6510* CPU$1 )
{
 label$8961:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)NIBBLES$ & 1ull));
 label$8962:;
}

void INS_CLD( struct $7CPU6510* CPU$1 )
{
 label$8963:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (3ll & 63ll)));
 label$8964:;
}

void INS_CLI( struct $7CPU6510* CPU$1 )
{
 label$8965:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (2ll & 63ll)));
 label$8966:;
}

void INS_CLV( struct $7CPU6510* CPU$1 )
{
 label$8967:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (6ll & 63ll)));
 label$8968:;
}

void INS_CMP( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4585$1;
 uint8 TMP$4586$1;
 uint8 TMP$4587$1;
 label$8969:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8971;
 TMP$4585$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8974;
 label$8971:;
 TMP$4585$1 = *(uint8*)NIBBLES$;
 label$8974:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4585$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8972;
 TMP$4586$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8975;
 label$8972:;
 TMP$4586$1 = *(uint8*)NIBBLES$;
 label$8975:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4586$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8973;
 TMP$4587$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8976;
 label$8973:;
 TMP$4587$1 = *(uint8*)NIBBLES$;
 label$8976:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4587$1 & 1ull) << (7ll & 63ll)));
 label$8970:;
}

void INS_CPX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4588$1;
 uint8 TMP$4589$1;
 uint8 TMP$4590$1;
 label$8977:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 2ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8979;
 TMP$4588$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8982;
 label$8979:;
 TMP$4588$1 = *(uint8*)NIBBLES$;
 label$8982:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4588$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8980;
 TMP$4589$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8983;
 label$8980:;
 TMP$4589$1 = *(uint8*)NIBBLES$;
 label$8983:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4589$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8981;
 TMP$4590$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8984;
 label$8981:;
 TMP$4590$1 = *(uint8*)NIBBLES$;
 label$8984:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4590$1 & 1ull) << (7ll & 63ll)));
 label$8978:;
}

void INS_CPY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4591$1;
 uint8 TMP$4592$1;
 uint8 TMP$4593$1;
 label$8985:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 3ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8987;
 TMP$4591$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8990;
 label$8987:;
 TMP$4591$1 = *(uint8*)NIBBLES$;
 label$8990:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4591$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8988;
 TMP$4592$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8991;
 label$8988:;
 TMP$4592$1 = *(uint8*)NIBBLES$;
 label$8991:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4592$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8989;
 TMP$4593$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8992;
 label$8989:;
 TMP$4593$1 = *(uint8*)NIBBLES$;
 label$8992:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4593$1 & 1ull) << (7ll & 63ll)));
 label$8986:;
}

void INS_DEC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4594$1;
 uint8 TMP$4595$1;
 label$8993:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int8*)&V$ = (int8)((int64)*(int8*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(int8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8995;
 TMP$4594$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8997;
 label$8995:;
 TMP$4594$1 = *(uint8*)NIBBLES$;
 label$8997:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4594$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8996;
 TMP$4595$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8998;
 label$8996:;
 TMP$4595$1 = *(uint8*)NIBBLES$;
 label$8998:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4595$1 & 1ull) << (7ll & 63ll)));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 label$8994:;
}

void INS_DEX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4596$1;
 uint8 TMP$4597$1;
 label$8999:;
 *(int8*)((uint8*)CPU$1 + 2ll) = (int8)((int32)__builtin_nearbyint( (double)(int64)*(int8*)((uint8*)CPU$1 + 2ll) + -0x1.p+0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9001;
 TMP$4596$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9003;
 label$9001:;
 TMP$4596$1 = *(uint8*)NIBBLES$;
 label$9003:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4596$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9002;
 TMP$4597$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9004;
 label$9002:;
 TMP$4597$1 = *(uint8*)NIBBLES$;
 label$9004:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4597$1 & 1ull) << (7ll & 63ll)));
 label$9000:;
}

void INS_DEY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4598$1;
 uint8 TMP$4599$1;
 label$9005:;
 *(int8*)((uint8*)CPU$1 + 3ll) = (int8)((int64)*(int8*)((uint8*)CPU$1 + 3ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9007;
 TMP$4598$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9009;
 label$9007:;
 TMP$4598$1 = *(uint8*)NIBBLES$;
 label$9009:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4598$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9008;
 TMP$4599$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9010;
 label$9008:;
 TMP$4599$1 = *(uint8*)NIBBLES$;
 label$9010:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4599$1 & 1ull) << (7ll & 63ll)));
 label$9006:;
}

void INS_EOR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4600$1;
 uint8 TMP$4601$1;
 label$9011:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9013;
 TMP$4600$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9015;
 label$9013:;
 TMP$4600$1 = *(uint8*)NIBBLES$;
 label$9015:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4600$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9014;
 TMP$4601$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9016;
 label$9014:;
 TMP$4601$1 = *(uint8*)NIBBLES$;
 label$9016:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4601$1 & 1ull) << (7ll & 63ll)));
 label$9012:;
}

void INS_INC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4602$1;
 uint8 TMP$4603$1;
 label$9017:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN12SYSTEM_BUS_T9WRITEBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9019;
 TMP$4602$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9021;
 label$9019:;
 TMP$4602$1 = *(uint8*)NIBBLES$;
 label$9021:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4602$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$9020;
 TMP$4603$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9022;
 label$9020:;
 TMP$4603$1 = *(uint8*)NIBBLES$;
 label$9022:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4603$1 & 1ull) << (7ll & 63ll)));
 label$9018:;
}

void INS_INX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4604$1;
 uint8 TMP$4605$1;
 label$9023:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 2ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9025;
 TMP$4604$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9027;
 label$9025:;
 TMP$4604$1 = *(uint8*)NIBBLES$;
 label$9027:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4604$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$9026;
 TMP$4605$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9028;
 label$9026:;
 TMP$4605$1 = *(uint8*)NIBBLES$;
 label$9028:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4605$1 & 1ull) << (7ll & 63ll)));
 label$9024:;
}

void INS_INY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4606$1;
 uint8 TMP$4607$1;
 label$9029:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 3ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9031;
 TMP$4606$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9033;
 label$9031:;
 TMP$4606$1 = *(uint8*)NIBBLES$;
 label$9033:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4606$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$9032;
 TMP$4607$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9034;
 label$9032:;
 TMP$4607$1 = *(uint8*)NIBBLES$;
 label$9034:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4607$1 & 1ull) << (7ll & 63ll)));
 label$9030:;
}

void INS_JMP( struct $7CPU6510* CPU$1 )
{
 label$9035:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$9036:;
}

void INS_JSR( struct $7CPU6510* CPU$1 )
{
 label$9037:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$9038:;
}

void INS_LDA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4608$1;
 uint8 TMP$4609$1;
 label$9039:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9041;
 TMP$4608$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9043;
 label$9041:;
 TMP$4608$1 = *(uint8*)NIBBLES$;
 label$9043:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4608$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9042;
 TMP$4609$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9044;
 label$9042:;
 TMP$4609$1 = *(uint8*)NIBBLES$;
 label$9044:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4609$1 & 1ull) << (7ll & 63ll)));
 label$9040:;
}

void INS_LDX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4610$1;
 uint8 TMP$4611$1;
 label$9045:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 2ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9047;
 TMP$4610$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9049;
 label$9047:;
 TMP$4610$1 = *(uint8*)NIBBLES$;
 label$9049:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4610$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9048;
 TMP$4611$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9050;
 label$9048:;
 TMP$4611$1 = *(uint8*)NIBBLES$;
 label$9050:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4611$1 & 1ull) << (7ll & 63ll)));
 label$9046:;
}

void INS_LDY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4612$1;
 uint8 TMP$4613$1;
 label$9051:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 3ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9053;
 TMP$4612$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9055;
 label$9053:;
 TMP$4612$1 = *(uint8*)NIBBLES$;
 label$9055:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4612$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9054;
 TMP$4613$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9056;
 label$9054:;
 TMP$4613$1 = *(uint8*)NIBBLES$;
 label$9056:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4613$1 & 1ull) << (7ll & 63ll)));
 label$9052:;
}

void INS_LSR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4614$1;
 uint8 TMP$4615$1;
 uint8 TMP$4616$1;
 label$9057:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$9059;
 TMP$4614$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9062;
 label$9059:;
 TMP$4614$1 = *(uint8*)NIBBLES$;
 label$9062:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4614$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9060;
 TMP$4615$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9063;
 label$9060:;
 TMP$4615$1 = *(uint8*)NIBBLES$;
 label$9063:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4615$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9061;
 TMP$4616$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9064;
 label$9061:;
 TMP$4616$1 = *(uint8*)NIBBLES$;
 label$9064:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4616$1 & 1ull) << (7ll & 63ll)));
 label$9058:;
}

void INS_LSRA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4617$1;
 uint8 TMP$4618$1;
 uint8 TMP$4619$1;
 label$9065:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$9067;
 TMP$4617$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9070;
 label$9067:;
 TMP$4617$1 = *(uint8*)NIBBLES$;
 label$9070:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4617$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9068;
 TMP$4618$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9071;
 label$9068:;
 TMP$4618$1 = *(uint8*)NIBBLES$;
 label$9071:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4618$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9069;
 TMP$4619$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9072;
 label$9069:;
 TMP$4619$1 = *(uint8*)NIBBLES$;
 label$9072:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4619$1 & 1ull) << (7ll & 63ll)));
 label$9066:;
}

void INS_NOP( struct $7CPU6510* CPU$1 )
{
 label$9073:;
 label$9074:;
}

void INS_ORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4620$1;
 uint8 TMP$4621$1;
 label$9075:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9077;
 TMP$4620$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9079;
 label$9077:;
 TMP$4620$1 = *(uint8*)NIBBLES$;
 label$9079:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4620$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9078;
 TMP$4621$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9080;
 label$9078:;
 TMP$4621$1 = *(uint8*)NIBBLES$;
 label$9080:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4621$1 & 1ull) << (7ll & 63ll)));
 label$9076:;
}

void INS_PHA( struct $7CPU6510* CPU$1 )
{
 label$9081:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$9082:;
}

void INS_PHP( struct $7CPU6510* CPU$1 )
{
 label$9083:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 label$9084:;
}

void INS_PLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4622$1;
 uint8 TMP$4623$1;
 label$9085:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9087;
 TMP$4622$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9089;
 label$9087:;
 TMP$4622$1 = *(uint8*)NIBBLES$;
 label$9089:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4622$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9088;
 TMP$4623$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9090;
 label$9088:;
 TMP$4623$1 = *(uint8*)NIBBLES$;
 label$9090:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4623$1 & 1ull) << (7ll & 63ll)));
 label$9086:;
}

void INS_PLP( struct $7CPU6510* CPU$1 )
{
 label$9091:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 label$9092:;
}

void INS_ROL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4624$1;
 uint8 TMP$4625$1;
 uint8 TMP$4626$1;
 uint8 TMP$4627$1;
 label$9093:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9095;
 TMP$4624$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9101;
 label$9095:;
 TMP$4624$1 = *(uint8*)NIBBLES$;
 label$9101:;
 CARY$ = (int64)TMP$4624$1;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$9096;
 TMP$4625$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9102;
 label$9096:;
 TMP$4625$1 = *(uint8*)NIBBLES$;
 label$9102:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4625$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$9098;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$9098:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9099;
 TMP$4626$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9103;
 label$9099:;
 TMP$4626$1 = *(uint8*)NIBBLES$;
 label$9103:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4626$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9100;
 TMP$4627$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9104;
 label$9100:;
 TMP$4627$1 = *(uint8*)NIBBLES$;
 label$9104:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4627$1 & 1ull) << (7ll & 63ll)));
 label$9094:;
}

void INS_ROLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4628$1;
 uint8 TMP$4629$1;
 uint8 TMP$4630$1;
 uint8 TMP$4631$1;
 label$9105:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9107;
 TMP$4628$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9113;
 label$9107:;
 TMP$4628$1 = *(uint8*)NIBBLES$;
 label$9113:;
 CARY$ = (int64)TMP$4628$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$9108;
 TMP$4629$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9114;
 label$9108:;
 TMP$4629$1 = *(uint8*)NIBBLES$;
 label$9114:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4629$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$9110;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$9110:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9111;
 TMP$4630$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9115;
 label$9111:;
 TMP$4630$1 = *(uint8*)NIBBLES$;
 label$9115:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4630$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9112;
 TMP$4631$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9116;
 label$9112:;
 TMP$4631$1 = *(uint8*)NIBBLES$;
 label$9116:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4631$1 & 1ull) << (7ll & 63ll)));
 label$9106:;
}

void INS_ROR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4632$1;
 uint8 TMP$4633$1;
 uint8 TMP$4634$1;
 uint8 TMP$4635$1;
 label$9117:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9119;
 TMP$4632$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9125;
 label$9119:;
 TMP$4632$1 = *(uint8*)NIBBLES$;
 label$9125:;
 CARY$ = (int64)TMP$4632$1;
 uint8 vr$8 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$8;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$9120;
 TMP$4633$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9126;
 label$9120:;
 TMP$4633$1 = *(uint8*)NIBBLES$;
 label$9126:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4633$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$9122;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$9122:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9123;
 TMP$4634$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9127;
 label$9123:;
 TMP$4634$1 = *(uint8*)NIBBLES$;
 label$9127:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4634$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$9124;
 TMP$4635$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9128;
 label$9124:;
 TMP$4635$1 = *(uint8*)NIBBLES$;
 label$9128:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4635$1 & 1ull) << (7ll & 63ll)));
 label$9118:;
}

void INS_RORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4636$1;
 uint8 TMP$4637$1;
 uint8 TMP$4638$1;
 uint8 TMP$4639$1;
 label$9129:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9131;
 TMP$4636$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9137;
 label$9131:;
 TMP$4636$1 = *(uint8*)NIBBLES$;
 label$9137:;
 CARY$ = (int64)TMP$4636$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$9132;
 TMP$4637$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9138;
 label$9132:;
 TMP$4637$1 = *(uint8*)NIBBLES$;
 label$9138:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4637$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$9134;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$9134:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9135;
 TMP$4638$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9139;
 label$9135:;
 TMP$4638$1 = *(uint8*)NIBBLES$;
 label$9139:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4638$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9136;
 TMP$4639$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9140;
 label$9136:;
 TMP$4639$1 = *(uint8*)NIBBLES$;
 label$9140:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4639$1 & 1ull) << (7ll & 63ll)));
 label$9130:;
}

void INS_RTI( struct $7CPU6510* CPU$1 )
{
 label$9141:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 double vr$6 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$6 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 1ll);
 label$9142:;
}

void INS_RTS( struct $7CPU6510* CPU$1 )
{
 label$9143:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 1ll);
 label$9144:;
}

void INS_SBC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4640$1;
 uint8 TMP$4641$1;
 uint8 TMP$4642$1;
 uint8 TMP$4643$1;
 label$9145:;
 struct $5MULTI B$1;
 __builtin_memset( &B$1, 0, 16ll );
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&B$1 = vr$4;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)*(uint8*)&B$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$9148;
 {
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$9148:;
 }
 if( ((((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&B$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$9149;
 TMP$4640$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9153;
 label$9149:;
 TMP$4640$1 = *(uint8*)NIBBLES$;
 label$9153:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4640$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9150;
 TMP$4641$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9154;
 label$9150:;
 TMP$4641$1 = *(uint8*)NIBBLES$;
 label$9154:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4641$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$9151;
 TMP$4642$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9155;
 label$9151:;
 TMP$4642$1 = *(uint8*)NIBBLES$;
 label$9155:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4642$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$9152;
 TMP$4643$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9156;
 label$9152:;
 TMP$4643$1 = *(uint8*)NIBBLES$;
 label$9156:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4643$1 & 1ull) << (7ll & 63ll)));
 label$9146:;
}

void INS_SEC( struct $7CPU6510* CPU$1 )
{
 label$9157:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull));
 label$9158:;
}

void INS_SED( struct $7CPU6510* CPU$1 )
{
 label$9159:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (3ll & 63ll)));
 label$9160:;
}

void INS_SEI( struct $7CPU6510* CPU$1 )
{
 label$9161:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 label$9162:;
}

void INS_STA( struct $7CPU6510* CPU$1 )
{
 label$9163:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$9164:;
}

void INS_STX( struct $7CPU6510* CPU$1 )
{
 label$9165:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 2ll) );
 label$9166:;
}

void INS_STY( struct $7CPU6510* CPU$1 )
{
 label$9167:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 3ll) );
 label$9168:;
}

void INS_TAX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4644$1;
 uint8 TMP$4645$1;
 label$9169:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9171;
 TMP$4644$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9173;
 label$9171:;
 TMP$4644$1 = *(uint8*)NIBBLES$;
 label$9173:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4644$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9172;
 TMP$4645$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9174;
 label$9172:;
 TMP$4645$1 = *(uint8*)NIBBLES$;
 label$9174:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4645$1 & 1ull) << (7ll & 63ll)));
 label$9170:;
}

void INS_TAY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4646$1;
 uint8 TMP$4647$1;
 label$9175:;
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9177;
 TMP$4646$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9179;
 label$9177:;
 TMP$4646$1 = *(uint8*)NIBBLES$;
 label$9179:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4646$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9178;
 TMP$4647$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9180;
 label$9178:;
 TMP$4647$1 = *(uint8*)NIBBLES$;
 label$9180:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4647$1 & 1ull) << (7ll & 63ll)));
 label$9176:;
}

void INS_TSX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4648$1;
 uint8 TMP$4649$1;
 label$9181:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 6ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9183;
 TMP$4648$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9185;
 label$9183:;
 TMP$4648$1 = *(uint8*)NIBBLES$;
 label$9185:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4648$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9184;
 TMP$4649$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9186;
 label$9184:;
 TMP$4649$1 = *(uint8*)NIBBLES$;
 label$9186:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4649$1 & 1ull) << (7ll & 63ll)));
 label$9182:;
}

void INS_TXA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4650$1;
 uint8 TMP$4651$1;
 label$9187:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9189;
 TMP$4650$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9191;
 label$9189:;
 TMP$4650$1 = *(uint8*)NIBBLES$;
 label$9191:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4650$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9190;
 TMP$4651$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9192;
 label$9190:;
 TMP$4651$1 = *(uint8*)NIBBLES$;
 label$9192:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4651$1 & 1ull) << (7ll & 63ll)));
 label$9188:;
}

void INS_TXS( struct $7CPU6510* CPU$1 )
{
 label$9193:;
 *(uint8*)((uint8*)CPU$1 + 6ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 label$9194:;
}

void INS_TYA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4652$1;
 uint8 TMP$4653$1;
 label$9195:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 3ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$9197;
 TMP$4652$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9199;
 label$9197:;
 TMP$4652$1 = *(uint8*)NIBBLES$;
 label$9199:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4652$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$9198;
 TMP$4653$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$9200;
 label$9198:;
 TMP$4653$1 = *(uint8*)NIBBLES$;
 label$9200:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4653$1 & 1ull) << (7ll & 63ll)));
 label$9196:;
}

void INS_R32( struct $7CPU6510* CPU$1 )
{
 label$9201:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$9202:;
}

void INS_W32( struct $7CPU6510* CPU$1 )
{
 label$9203:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$9204:;
}

void INS_R64( struct $7CPU6510* CPU$1 )
{
 label$9205:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$9206:;
}

void INS_W64( struct $7CPU6510* CPU$1 )
{
 label$9207:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$9208:;
}

int64 INTERRUPTSERVICE( struct $7CPU6510* CPU$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$9805:;
 static FBSTRING S$1;
 int64 KEY$1;
 __builtin_memset( &KEY$1, 0, 8ll );
 int64 IRQTICKS$1;
 __builtin_memset( &IRQTICKS$1, 0, 8ll );
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (2ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9808;
 {
  fb$result$1 = (int64)*(uint8*)NIBBLES$;
  goto label$9806;
  label$9808:;
 }
 int64 NCHARS$1;
 uint8 vr$10 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7 );
 NCHARS$1 = (int64)vr$10;
 if( NCHARS$1 >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$9810;
 {
  FBSTRING STRKEY$2;
  FBSTRING* vr$13 = fb_Inkey( );
  fb_StrInit( (void*)&STRKEY$2, -1ll, (void*)vr$13, -1ll, 0 );
  int64 vr$16 = fb_StrLen( (void*)&STRKEY$2, -1ll );
  KEY$1 = vr$16;
  if( KEY$1 == 0ll ) goto label$9812;
  {
   KEY$1 = (int64)*(uint8*)((uint8*)((uint8*)*(uint8**)&STRKEY$2 + KEY$1) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) + ((KEY$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) * ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
   {
    if( KEY$1 != (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9814;
    label$9815:;
    {
     fb_End( 0 );
    }
    goto label$9813;
    label$9814:;
    if( KEY$1 < 65ll ) goto label$9816;
    if( KEY$1 > 90ll ) goto label$9816;
    label$9817:;
    {
     KEY$1 = KEY$1 + 32ll;
     FBSTRING* vr$34 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$34, -1ll, 0 );
    }
    goto label$9813;
    label$9816:;
    if( KEY$1 < 97ll ) goto label$9818;
    if( KEY$1 > 122ll ) goto label$9818;
    label$9819:;
    {
     KEY$1 = KEY$1 + -32ll;
     FBSTRING* vr$36 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$36, -1ll, 0 );
    }
    goto label$9813;
    label$9818:;
    if( KEY$1 != 316ll ) goto label$9820;
    label$9821:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$37 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$37, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$38 = fb_StrAllocTempDescZEx( (uint8*)"save filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$38, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$41 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$41 == 0ll ) goto label$9823;
     {
      int32 vr$42 = fb_FileFree( );
      KEY$1 = (int64)vr$42;
      int32 vr$46 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 2u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$46 != 0ll ) goto label$9825;
      {
       uint8 U8$7;
       __builtin_memset( &U8$7, 0, 1ll );
       int64 NBYTES$7;
       uint16 vr$50 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5 );
       NBYTES$7 = (int64)vr$50;
       NBYTES$7 = NBYTES$7 + -2048ll;
       fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$5270$8;
        TMP$5270$8 = NBYTES$7 + -1ll;
        goto label$9826;
        label$9829:;
        {
         uint8 vr$59 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll) );
         U8$7 = vr$59;
         fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
        }
        label$9827:;
        I$8 = I$8 + 1ll;
        label$9826:;
        if( I$8 <= TMP$5270$8 ) goto label$9829;
        label$9828:;
       }
       fb_FileClose( (int32)KEY$1 );
      }
      goto label$9824;
      label$9825:;
      {
       FBSTRING TMP$5272$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$64 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$64, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$5272$7, 0, 24ll );
       FBSTRING* vr$68 = fb_StrConcat( &TMP$5272$7, (void*)"can't create: ", 15ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$68, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$9824:;
     }
     label$9823:;
     label$9822:;
     KEY$1 = 0ll;
    }
    goto label$9813;
    label$9820:;
    if( KEY$1 != 317ll ) goto label$9830;
    label$9831:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$69 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$69, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$70 = fb_StrAllocTempDescZEx( (uint8*)"load filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$70, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$73 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$73 == 0ll ) goto label$9833;
     {
      int32 vr$74 = fb_FileFree( );
      KEY$1 = (int64)vr$74;
      int32 vr$78 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 1u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$78 != 0ll ) goto label$9835;
      {
       uint8 U8$7;
       __builtin_memset( &U8$7, 0, 1ll );
       int64 NBYTES$7;
       __builtin_memset( &NBYTES$7, 0, 8ll );
       fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$5274$8;
        TMP$5274$8 = NBYTES$7 + -1ll;
        goto label$9836;
        label$9839:;
        {
         fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
         _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll), (double)U8$7 );
        }
        label$9837:;
        I$8 = I$8 + 1ll;
        label$9836:;
        if( I$8 <= TMP$5274$8 ) goto label$9839;
        label$9838:;
       }
       fb_FileClose( (int32)KEY$1 );
       NBYTES$7 = NBYTES$7 + 2048ll;
       _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5, (double)NBYTES$7 );
       *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)42282u;
      }
      goto label$9834;
      label$9835:;
      {
       FBSTRING TMP$5276$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$97 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$97, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$5276$7, 0, 24ll );
       FBSTRING* vr$101 = fb_StrConcat( &TMP$5276$7, (void*)"can't open: ", 13ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$101, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$9834:;
     }
     label$9833:;
     label$9832:;
     KEY$1 = 0ll;
    }
    goto label$9813;
    label$9830:;
    if( KEY$1 != 327ll ) goto label$9840;
    label$9841:;
    {
     KEY$1 = 19ll;
    }
    goto label$9813;
    label$9840:;
    if( KEY$1 != 8ll ) goto label$9842;
    label$9843:;
    {
     KEY$1 = 20ll;
    }
    goto label$9813;
    label$9842:;
    if( KEY$1 != 331ll ) goto label$9844;
    label$9845:;
    {
     KEY$1 = 157ll;
    }
    goto label$9813;
    label$9844:;
    if( KEY$1 != 328ll ) goto label$9846;
    label$9847:;
    {
     KEY$1 = 145ll;
    }
    goto label$9813;
    label$9846:;
    if( KEY$1 != 333ll ) goto label$9848;
    label$9849:;
    {
     KEY$1 = 29ll;
    }
    goto label$9813;
    label$9848:;
    if( KEY$1 != 336ll ) goto label$9850;
    label$9851:;
    {
     KEY$1 = 17ll;
    }
    label$9850:;
    label$9813:;
   }
   if( KEY$1 == 0ll ) goto label$9853;
   {
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(NCHARS$1 + 631ll), (double)KEY$1 );
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7, (double)(NCHARS$1 + 1ll) );
   }
   label$9853:;
   label$9852:;
  }
  label$9812:;
  label$9811:;
  fb_StrDelete( (FBSTRING*)&STRKEY$2 );
 }
 label$9810:;
 label$9809:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 uint8 vr$117 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = vr$117;
 uint8 vr$120 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFEp+15 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = vr$120;
 *(uint8*)CPU$1 = (uint8)((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull);
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | 4ull);
 label$9854:;
 if( *(uint64*)((uint8*)CPU$1 + 16ll) == 64ull ) goto label$9855;
 {
  _ZN7CPU65104TICKEd( CPU$1, __builtin_inf() );
  IRQTICKS$1 = IRQTICKS$1 + 1ll;
 }
 goto label$9854;
 label$9855:;
 double vr$133 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$133 ));
 double vr$136 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$136 ));
 double vr$139 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$139 ));
 if( KEY$1 != 13ll ) goto label$9857;
 {
  FLAG$ = 1ll;
 }
 goto label$9856;
 label$9857:;
 {
  FLAG$ = 0ll;
 }
 label$9856:;
 fb$result$1 = IRQTICKS$1;
 label$9806:;
 return fb$result$1;
}

void RASTERLINE( void* PARAM$1 )
{
 label$9858:;
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 struct $10THREADSCAN* SCANPARAMS$1;
 SCANPARAMS$1 = (struct $10THREADSCAN*)PARAM$1;
 {
  uint64 X$2;
  X$2 = 0ull;
  uint64 TMP$5277$2;
  TMP$5277$2 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)SCANPARAMS$1 + 8ll) ));
  goto label$9860;
  label$9863:;
  {
   *(double*)&FRAGCOORD$1 = (double)X$2;
   *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)SCANPARAMS$1 + 16ll) - *(double*)SCANPARAMS$1;
   _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
   uint32 vr$12 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
   fb_GfxPset( FGIMAGE$, (float)X$2, (float)*(double*)SCANPARAMS$1, vr$12, 4, 0 );
  }
  label$9861:;
  X$2 = X$2 + 1ull;
  label$9860:;
  if( X$2 <= TMP$5277$2 ) goto label$9863;
  label$9862:;
 }
 label$9859:;
}

void KMAIN( struct $14MULTIBOOT_INFO* MB_INFO$1 )
{
 label$9864:;
 TICKS$ = (uint64)*(uint8*)NIBBLES$;
 RES$ = (uint64)*(uint8*)NIBBLES$;
 label$9866:;
 {
  TICKS$ = TICKS$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
  if( FLAG$ != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9870;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll), (double)TICKS$ );
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$9869;
  label$9870:;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll), __builtin_inf() );
  }
  label$9869:;
  if( (TICKS$ % (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$9872;
  {
   int64 vr$21 = INTERRUPTSERVICE( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) );
   TICKS$ = TICKS$ + (uint64)vr$21;
   fb_GfxLock( );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)BGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   fb_GfxWaitVSync( );
   fb_GfxUnlock( -1, -1 );
   *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  }
  label$9872:;
  label$9871:;
 }
 label$9868:;
 goto label$9866;
 label$9867:;
 free( (void*)MEM64$ );
 free( (void*)&RETURN_POINT$ );
 label$9865:;
}

int32 main( int32 __FB_ARGC__$0, char** __FB_ARGV__$0 )
{
 int32 fb$result$0;
 __builtin_memset( &fb$result$0, 0, 4ll );
 fb_Init( __FB_ARGC__$0, (uint8**)__FB_ARGV__$0, 0 );
 fb_DataRestore( (void*)label$8823 );
 label$0:;
 void* vr$1 = malloc( 65536ull );
 RETURN_POINT$ = (uint64*)vr$1;
 void* vr$2 = calloc( 5242880ull, 1ull );
 QBS_MALLOC$ = (struct $3QBS*)vr$2;
 void* vr$3 = malloc( 524288ull );
 QBS_MALLOC_FREED$ = (int64*)vr$3;
 void* vr$4 = malloc( 524288ull );
 QBS_MEM64_LIST$ = (int64*)vr$4;
 void* vr$5 = malloc( 524288ull );
 QBS_LIST$ = (int64*)vr$5;
 void* vr$6 = calloc( 524288ull, 1ull );
 QBS_TMP_LIST$ = (int64*)vr$6;
 uint8* QBS_DATA$0;
 void* vr$7 = malloc( 1048576ull );
 QBS_DATA$0 = (uint8*)vr$7;
 struct $4LIST* MOUSE_MESSAGE_QUEUE_HANDLES$0;
 MOUSE_MESSAGE_QUEUE_HANDLES$0 = (struct $4LIST*)0ull;
 int64 MOUSE_MESSAGE_QUEUE_FIRST$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_FIRST$0, 0, 8ll );
 int64 MOUSE_MESSAGE_QUEUE_DEFAULT$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_DEFAULT$0, 0, 8ll );
 struct $10CPU_STRUCT CPU_X86$0;
 __builtin_memset( &CPU_X86$0, 0, 88ll );
 label$8822:;
 label$8828:;
 label$2113:;
 KMAIN( MB_INFO$ );
 label$1:;
 fb_End( 0 );
 return fb$result$0;
}

static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* THIS$1 )
{
 __builtin_memset( (uint32*)THIS$1, 0, 4ll );
 __builtin_memset( (uint32*)((uint8*)THIS$1 + 4ll), 0, 4ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 8ll), 0, 24ll );
 label$101:;
 label$102:;
}

static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY* THIS$1, struct $9SHADERTOY* __FB_RHS__$1 )
{
 label$103:;
 *(uint32*)THIS$1 = *(uint32*)__FB_RHS__$1;
 *(uint32*)((uint8*)THIS$1 + 4ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 4ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 8ll), -1ll, 0 );
 label$104:;
}

static void _ZN5PLANEaSERKS_( struct $5PLANE* THIS$1, struct $5PLANE* __FB_RHS__$1 )
{
 label$544:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, (struct $7VECTOR3*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)__FB_RHS__$1 + 24ll);
 label$545:;
}

static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* THIS$1 )
{
 _ZN6VECTORC1Ev( (struct $6VECTOR*)THIS$1 );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll) );
 label$1338:;
 label$1339:;
}

static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE* THIS$1, struct $9RECTANGLE* __FB_RHS__$1 )
{
 label$1340:;
 __builtin_memcpy( (struct $6VECTOR*)THIS$1, (struct $6VECTOR*)__FB_RHS__$1, 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 32ll), 32 );
 label$1341:;
}

static void _ZN5MAP2DaSERKS_( struct $5MAP2D* THIS$1, struct $5MAP2D* __FB_RHS__$1 )
{
 label$1346:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *($11MAP2D_TYPES*)((uint8*)THIS$1 + 8ll) = *($11MAP2D_TYPES*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $9BMPHEADER*)((uint8*)THIS$1 + 16ll), (struct $9BMPHEADER*)((uint8*)__FB_RHS__$1 + 16ll), 54 );
 *(uint8**)((uint8*)THIS$1 + 72ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 72ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 label$1347:;
}

static void _ZN8MATERIALaSERKS_( struct $8MATERIAL* THIS$1, struct $8MATERIAL* __FB_RHS__$1 )
{
 label$1352:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 8ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 8ll), 32 );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)__FB_RHS__$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)__FB_RHS__$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)__FB_RHS__$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)__FB_RHS__$1 + 64ll);
 *(double*)((uint8*)THIS$1 + 72ll) = *(double*)((uint8*)__FB_RHS__$1 + 72ll);
 *(double*)((uint8*)THIS$1 + 80ll) = *(double*)((uint8*)__FB_RHS__$1 + 80ll);
 *(double*)((uint8*)THIS$1 + 88ll) = *(double*)((uint8*)__FB_RHS__$1 + 88ll);
 *(boolean*)((uint8*)THIS$1 + 96ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 96ll);
 *(boolean*)((uint8*)THIS$1 + 97ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 97ll);
 *(boolean*)((uint8*)THIS$1 + 98ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 98ll);
 *(boolean*)((uint8*)THIS$1 + 99ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 99ll);
 *(int64*)((uint8*)THIS$1 + 104ll) = *(int64*)((uint8*)__FB_RHS__$1 + 104ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 152ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 152ll), 32 );
 *(int64*)((uint8*)THIS$1 + 184ll) = *(int64*)((uint8*)__FB_RHS__$1 + 184ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 192ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 192ll), 32 );
 *(int64*)((uint8*)THIS$1 + 224ll) = *(int64*)((uint8*)__FB_RHS__$1 + 224ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 232ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 232ll), 32 );
 label$1353:;
}

static void _ZN5LIGHTaSERKS_( struct $5LIGHT* THIS$1, struct $5LIGHT* __FB_RHS__$1 )
{
 label$1358:;
 *($11LIGHT_TYPES*)THIS$1 = *($11LIGHT_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 16ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 16ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(boolean*)((uint8*)THIS$1 + 192ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 192ll);
 label$1359:;
}

static void _ZN4POLYaSERKS_( struct $4POLY* THIS$1, struct $4POLY* __FB_RHS__$1 )
{
 label$1364:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 8ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 8ll) );
 *(int64*)((uint8*)THIS$1 + 72ll) = *(int64*)((uint8*)__FB_RHS__$1 + 72ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 80ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 80ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 88ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 120ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 120ll), 32 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 label$1365:;
}

static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D* THIS$1, struct $8OBJECT3D* __FB_RHS__$1 )
{
 label$1370:;
 *($14OBJECT3D_TYPES*)THIS$1 = *($14OBJECT3D_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 16ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 16ll) );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 *(int64*)((uint8*)THIS$1 + 112ll) = *(int64*)((uint8*)__FB_RHS__$1 + 112ll);
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 136ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 136ll);
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(struct $4POLY***)((uint8*)THIS$1 + 152ll) = *(struct $4POLY***)((uint8*)__FB_RHS__$1 + 152ll);
 label$1371:;
}

static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER* THIS$1, struct $9RAYTRACER* __FB_RHS__$1 )
{
 label$1376:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 *(int64*)((uint8*)THIS$1 + 16ll) = *(int64*)((uint8*)__FB_RHS__$1 + 16ll);
 *(int64*)((uint8*)THIS$1 + 24ll) = *(int64*)((uint8*)__FB_RHS__$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)__FB_RHS__$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)__FB_RHS__$1 + 40ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 *(double*)((uint8*)THIS$1 + 80ll) = *(double*)((uint8*)__FB_RHS__$1 + 80ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 88ll), 32 );
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(int64*)((uint8*)THIS$1 + 136ll) = *(int64*)((uint8*)__FB_RHS__$1 + 136ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 176ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 208ll), 32 );
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)__FB_RHS__$1 + 240ll);
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = *(struct $8MATERIAL***)((uint8*)__FB_RHS__$1 + 248ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)__FB_RHS__$1 + 256ll);
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = *(struct $8OBJECT3D***)((uint8*)__FB_RHS__$1 + 264ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)__FB_RHS__$1 + 272ll);
 *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = *(struct $5LIGHT***)((uint8*)__FB_RHS__$1 + 280ll);
 *(int64*)((uint8*)THIS$1 + 288ll) = *(int64*)((uint8*)__FB_RHS__$1 + 288ll);
 *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = *(struct $5MAP2D***)((uint8*)__FB_RHS__$1 + 296ll);
 *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)__FB_RHS__$1 + 304ll);
 *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = *(struct $7AAPIXEL***)((uint8*)__FB_RHS__$1 + 312ll);
 label$1377:;
}

static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T* THIS$1, struct $12SYSTEM_BUS_T* __FB_RHS__$1 )
{
 int64 TMP$1696$1;
 double* TMP$1697$1;
 double* TMP$1698$1;
 int64 TMP$1699$1;
 double* TMP$1700$1;
 double* TMP$1701$1;
 int64 TMP$1702$1;
 double* TMP$1703$1;
 double* TMP$1704$1;
 int64 TMP$1705$1;
 double* TMP$1706$1;
 double* TMP$1707$1;
 int64 TMP$1708$1;
 double* TMP$1709$1;
 double* TMP$1710$1;
 int64 TMP$1711$1;
 double* TMP$1712$1;
 double* TMP$1713$1;
 int64 TMP$1714$1;
 uint8* TMP$1715$1;
 uint8* TMP$1716$1;
 int64 TMP$1717$1;
 uint8* TMP$1718$1;
 uint8* TMP$1719$1;
 label$2076:;
 TMP$1697$1 = (double*)THIS$1;
 TMP$1698$1 = (double*)__FB_RHS__$1;
 TMP$1696$1 = 0ll;
 label$2078:;
 *TMP$1697$1 = *TMP$1698$1;
 TMP$1697$1 = (double*)((uint8*)TMP$1697$1 + 8ll);
 TMP$1698$1 = (double*)((uint8*)TMP$1698$1 + 8ll);
 TMP$1696$1 = TMP$1696$1 + 1ll;
 if( TMP$1696$1 != 16384ll ) goto label$2078;
 TMP$1700$1 = (double*)((uint8*)THIS$1 + 131072ll);
 TMP$1701$1 = (double*)((uint8*)__FB_RHS__$1 + 131072ll);
 TMP$1699$1 = 0ll;
 label$2079:;
 *TMP$1700$1 = *TMP$1701$1;
 TMP$1700$1 = (double*)((uint8*)TMP$1700$1 + 8ll);
 TMP$1701$1 = (double*)((uint8*)TMP$1701$1 + 8ll);
 TMP$1699$1 = TMP$1699$1 + 1ll;
 if( TMP$1699$1 != 16384ll ) goto label$2079;
 TMP$1703$1 = (double*)((uint8*)THIS$1 + 262144ll);
 TMP$1704$1 = (double*)((uint8*)__FB_RHS__$1 + 262144ll);
 TMP$1702$1 = 0ll;
 label$2080:;
 *TMP$1703$1 = *TMP$1704$1;
 TMP$1703$1 = (double*)((uint8*)TMP$1703$1 + 8ll);
 TMP$1704$1 = (double*)((uint8*)TMP$1704$1 + 8ll);
 TMP$1702$1 = TMP$1702$1 + 1ll;
 if( TMP$1702$1 != 2073601ll ) goto label$2080;
 TMP$1706$1 = (double*)((uint8*)THIS$1 + 16850952ll);
 TMP$1707$1 = (double*)((uint8*)__FB_RHS__$1 + 16850952ll);
 TMP$1705$1 = 0ll;
 label$2081:;
 *TMP$1706$1 = *TMP$1707$1;
 TMP$1706$1 = (double*)((uint8*)TMP$1706$1 + 8ll);
 TMP$1707$1 = (double*)((uint8*)TMP$1707$1 + 8ll);
 TMP$1705$1 = TMP$1705$1 + 1ll;
 if( TMP$1705$1 != 1024ll ) goto label$2081;
 TMP$1709$1 = (double*)((uint8*)THIS$1 + 16859144ll);
 TMP$1710$1 = (double*)((uint8*)__FB_RHS__$1 + 16859144ll);
 TMP$1708$1 = 0ll;
 label$2082:;
 *TMP$1709$1 = *TMP$1710$1;
 TMP$1709$1 = (double*)((uint8*)TMP$1709$1 + 8ll);
 TMP$1710$1 = (double*)((uint8*)TMP$1710$1 + 8ll);
 TMP$1708$1 = TMP$1708$1 + 1ll;
 if( TMP$1708$1 != 360ll ) goto label$2082;
 TMP$1712$1 = (double*)((uint8*)THIS$1 + 16862024ll);
 TMP$1713$1 = (double*)((uint8*)__FB_RHS__$1 + 16862024ll);
 TMP$1711$1 = 0ll;
 label$2083:;
 *TMP$1712$1 = *TMP$1713$1;
 TMP$1712$1 = (double*)((uint8*)TMP$1712$1 + 8ll);
 TMP$1713$1 = (double*)((uint8*)TMP$1713$1 + 8ll);
 TMP$1711$1 = TMP$1711$1 + 1ll;
 if( TMP$1711$1 != 360ll ) goto label$2083;
 _ZN9RAYTRACERaSERKS_( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll), (struct $9RAYTRACER*)((uint8*)__FB_RHS__$1 + 16864904ll) );
 TMP$1715$1 = (uint8*)((uint8*)THIS$1 + 16865224ll);
 TMP$1716$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16865224ll);
 TMP$1714$1 = 0ll;
 label$2084:;
 *TMP$1715$1 = *TMP$1716$1;
 TMP$1715$1 = (uint8*)(TMP$1715$1 + 1ll);
 TMP$1716$1 = (uint8*)(TMP$1716$1 + 1ll);
 TMP$1714$1 = TMP$1714$1 + 1ll;
 if( TMP$1714$1 != 2048ll ) goto label$2084;
 TMP$1718$1 = (uint8*)((uint8*)THIS$1 + 16867272ll);
 TMP$1719$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16867272ll);
 TMP$1717$1 = 0ll;
 label$2085:;
 *TMP$1718$1 = *TMP$1719$1;
 TMP$1718$1 = (uint8*)(TMP$1718$1 + 1ll);
 TMP$1719$1 = (uint8*)(TMP$1719$1 + 1ll);
 TMP$1717$1 = TMP$1717$1 + 1ll;
 if( TMP$1717$1 != 2048ll ) goto label$2085;
 label$2077:;
}

static void _ZN7CPU6510aSERKS_( struct $7CPU6510* THIS$1, struct $7CPU6510* __FB_RHS__$1 )
{
 int64 TMP$1745$1;
 struct $6OPCODE* TMP$1746$1;
 struct $6OPCODE* TMP$1747$1;
 int64 TMP$1748$1;
 FBSTRING* TMP$1749$1;
 FBSTRING* TMP$1750$1;
 label$2088:;
 __builtin_memcpy( (uint8*)THIS$1, (uint8*)__FB_RHS__$1, 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 1ll), (uint8*)((uint8*)__FB_RHS__$1 + 1ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 2ll), (uint8*)((uint8*)__FB_RHS__$1 + 2ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 3ll), (uint8*)((uint8*)__FB_RHS__$1 + 3ll), 1 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 4ll), (uint16*)((uint8*)__FB_RHS__$1 + 4ll), 2 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 6ll), (uint16*)((uint8*)__FB_RHS__$1 + 6ll), 2 );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll) = *(struct $12SYSTEM_BUS_T**)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 16ll), 64 );
 TMP$1746$1 = (struct $6OPCODE*)((uint8*)THIS$1 + 80ll);
 TMP$1747$1 = (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 80ll);
 TMP$1745$1 = 0ll;
 label$2090:;
 __builtin_memcpy( TMP$1746$1, TMP$1747$1, 64 );
 TMP$1746$1 = (struct $6OPCODE*)((uint8*)TMP$1746$1 + 64ll);
 TMP$1747$1 = (struct $6OPCODE*)((uint8*)TMP$1747$1 + 64ll);
 TMP$1745$1 = TMP$1745$1 + 1ll;
 if( TMP$1745$1 != 256ll ) goto label$2090;
 TMP$1749$1 = (FBSTRING*)((uint8*)THIS$1 + 16464ll);
 TMP$1750$1 = (FBSTRING*)((uint8*)__FB_RHS__$1 + 16464ll);
 TMP$1748$1 = 0ll;
 label$2091:;
 fb_StrAssign( (void*)TMP$1749$1, -1ll, (void*)TMP$1750$1, -1ll, 0 );
 TMP$1749$1 = (FBSTRING*)((uint8*)TMP$1749$1 + 24ll);
 TMP$1750$1 = (FBSTRING*)((uint8*)TMP$1750$1 + 24ll);
 TMP$1748$1 = TMP$1748$1 + 1ll;
 if( TMP$1748$1 != 13ll ) goto label$2091;
 label$2089:;
}

__attribute__(( constructor )) static void _GLOBAL__I( void )
{
 label$9874:;
 _ZN4MAT2C1Ed( &M2$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &IRESOLUTION$ );
 _ZN7VECTOR4C1Ev( &IMOUSE$ );
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$ );
 _ZN7VECTOR2C1Ev( &FRAGCOORD$ );
 _ZN7VECTOR2C1Ev( &Q$ );
 _ZN7VECTOR2C1Ev( &P2$ );
 _ZN7VECTOR3C1Ev( &RO$ );
 _ZN7VECTOR3C1Ev( &TA$ );
 _ZN4MAT3C1Ed( &CA$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &RD$ );
 _ZN7VECTOR3C1Ev( &COL$ );
 _ZN7VECTOR2C1Ev( &UV$ );
 _ZN7VECTOR3C1Ev( &CW$ );
 _ZN7VECTOR3C1Ev( &CP$ );
 _ZN7VECTOR3C1Ev( &CU$ );
 _ZN7VECTOR3C1Ev( &CV$ );
 _ZN7VECTOR3C1Ev( &LIN$ );
 _ZN7VECTOR3C1Ev( &REF$ );
 _ZN7VECTOR3C1Ev( &LIGHT$ );
 _ZN7VECTOR3C1Ev( &P3$ );
 _ZN7VECTOR3C1Ev( &NOR$ );
 _ZN7VECTOR2C1Ev( &RES2$ );
 _ZN7VECTOR3C1Ev( &AOPOS$ );
 _ZN7VECTOR2C1Ev( &RV2$ );
 _ZN5C64_TC1Ev( &COMPUTER$ );
 label$9875:;
}

__attribute__(( destructor )) static void _GLOBAL__D( void )
{
 label$9877:;
 _ZN5C64_TD1Ev( &COMPUTER$ );
 label$9878:;
}
