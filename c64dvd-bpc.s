	.file	"c64dvd-bpc.c"
	.intel_syntax noprefix
	.text
	.p2align 4,,15
	.globl	INS_ASLA
	.type	INS_ASLA, @function
INS_ASLA:
.L2:
	movsx	rdx, BYTE PTR [rdi+8]
	mov	rsi, QWORD PTR [rdi]
	mov	rcx, rdx
	shr	rdx, 63
	and	rsi, -4
	add	ecx, ecx
	mov	r8, rdx
	xor	edx, edx
	test	cl, cl
	mov	BYTE PTR [rdi+8], cl
	sete	dl
	or	rsi, r8
	and	ecx, 128
	lea	rax, [rdx+rdx]
	or	rax, rsi
	and	al, 127
	or	rax, rcx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_ASLA, .-INS_ASLA
	.p2align 4,,15
	.globl	INS_CLC
	.type	INS_CLC, @function
INS_CLC:
.L5:
	and	QWORD PTR [rdi], -2
	ret
	.size	INS_CLC, .-INS_CLC
	.p2align 4,,15
	.globl	INS_CLD
	.type	INS_CLD, @function
INS_CLD:
.L7:
	and	QWORD PTR [rdi], -9
	ret
	.size	INS_CLD, .-INS_CLD
	.p2align 4,,15
	.globl	INS_CLI
	.type	INS_CLI, @function
INS_CLI:
.L9:
	and	QWORD PTR [rdi], -5
	ret
	.size	INS_CLI, .-INS_CLI
	.p2align 4,,15
	.globl	INS_CLV
	.type	INS_CLV, @function
INS_CLV:
.L11:
	and	QWORD PTR [rdi], -65
	ret
	.size	INS_CLV, .-INS_CLV
	.p2align 4,,15
	.globl	INS_DEX
	.type	INS_DEX, @function
INS_DEX:
.L13:
	movzx	eax, BYTE PTR [rdi+9]
	lea	edx, [rax-1]
	mov	rax, QWORD PTR [rdi]
	mov	BYTE PTR [rdi+9], dl
	and	rax, -3
	test	dl, dl
	je	.L14
.L15:
.L16:
	and	edx, 128
	and	al, 127
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L14:
	or	rax, 2
	xor	edx, edx
	and	al, 127
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_DEX, .-INS_DEX
	.p2align 4,,15
	.globl	INS_DEY
	.type	INS_DEY, @function
INS_DEY:
.L19:
	movzx	eax, BYTE PTR [rdi+10]
	lea	edx, [rax-1]
	mov	rax, QWORD PTR [rdi]
	mov	BYTE PTR [rdi+10], dl
	and	rax, -3
	test	dl, dl
	je	.L20
.L21:
.L22:
	and	edx, 128
	and	al, 127
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L20:
	or	rax, 2
	xor	edx, edx
	and	al, 127
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_DEY, .-INS_DEY
	.p2align 4,,15
	.globl	INS_JMP
	.type	INS_JMP, @function
INS_JMP:
.L25:
	movzx	eax, WORD PTR [rdi+64]
	mov	WORD PTR [rdi+12], ax
	ret
	.size	INS_JMP, .-INS_JMP
	.p2align 4,,15
	.globl	INS_LSRA
	.type	INS_LSRA, @function
INS_LSRA:
.L27:
	movzx	esi, BYTE PTR [rdi+8]
	mov	rcx, QWORD PTR [rdi]
	mov	r8, rsi
	and	rcx, -4
	and	r8d, 1
	shr	sil
	sete	dl
	mov	BYTE PTR [rdi+8], sil
	movzx	edx, dl
	lea	rax, [rdx+rdx]
	mov	rdx, rcx
	or	rdx, r8
	or	rax, rdx
	and	al, 127
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_LSRA, .-INS_LSRA
	.p2align 4,,15
	.globl	INS_ROLA
	.type	INS_ROLA, @function
INS_ROLA:
.L29:
	mov	rsi, QWORD PTR [rdi]
	movsx	rcx, BYTE PTR [rdi+8]
	mov	rax, rsi
	mov	rdx, rcx
	shr	rcx, 63
	and	rax, -2
	add	edx, edx
	or	rax, rcx
	and	esi, 1
	mov	QWORD PTR [rdi], rax
	je	.L32
	or	edx, 1
	xor	ecx, ecx
	mov	BYTE PTR [rdi+8], dl
.L31:
	and	al, 125
	and	edx, 128
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L32:
	xor	ecx, ecx
	test	dl, dl
	mov	BYTE PTR [rdi+8], dl
	sete	cl
	add	rcx, rcx
	jmp	.L31
	.size	INS_ROLA, .-INS_ROLA
	.p2align 4,,15
	.globl	INS_RORA
	.type	INS_RORA, @function
INS_RORA:
.L34:
	mov	rcx, QWORD PTR [rdi]
	movzx	edx, BYTE PTR [rdi+8]
	mov	rax, rcx
	mov	rsi, rdx
	shr	dl
	and	rax, -2
	and	esi, 1
	or	rax, rsi
	and	ecx, 1
	mov	QWORD PTR [rdi], rax
	je	.L37
	or	edx, -128
	xor	ecx, ecx
	mov	BYTE PTR [rdi+8], dl
.L36:
	and	al, 125
	and	edx, 128
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L37:
	xor	ecx, ecx
	test	dl, dl
	mov	BYTE PTR [rdi+8], dl
	sete	cl
	add	rcx, rcx
	jmp	.L36
	.size	INS_RORA, .-INS_RORA
	.p2align 4,,15
	.globl	INS_SEC
	.type	INS_SEC, @function
INS_SEC:
.L39:
	or	QWORD PTR [rdi], 1
	ret
	.size	INS_SEC, .-INS_SEC
	.p2align 4,,15
	.globl	INS_SED
	.type	INS_SED, @function
INS_SED:
.L41:
	or	QWORD PTR [rdi], 8
	ret
	.size	INS_SED, .-INS_SED
	.p2align 4,,15
	.globl	INS_SEI
	.type	INS_SEI, @function
INS_SEI:
.L43:
	or	QWORD PTR [rdi], 4
	ret
	.size	INS_SEI, .-INS_SEI
	.p2align 4,,15
	.globl	INS_TAX
	.type	INS_TAX, @function
INS_TAX:
.L45:
	movzx	edx, BYTE PTR [rdi+8]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+9], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TAX, .-INS_TAX
	.p2align 4,,15
	.globl	INS_TAY
	.type	INS_TAY, @function
INS_TAY:
.L47:
	movzx	edx, BYTE PTR [rdi+8]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+10], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TAY, .-INS_TAY
	.p2align 4,,15
	.globl	INS_TSX
	.type	INS_TSX, @function
INS_TSX:
.L49:
	movzx	edx, BYTE PTR [rdi+14]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+9], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TSX, .-INS_TSX
	.p2align 4,,15
	.globl	INS_TXA
	.type	INS_TXA, @function
INS_TXA:
.L51:
	movzx	edx, BYTE PTR [rdi+9]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+8], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TXA, .-INS_TXA
	.p2align 4,,15
	.globl	INS_TXS
	.type	INS_TXS, @function
INS_TXS:
.L53:
	movzx	eax, BYTE PTR [rdi+9]
	mov	BYTE PTR [rdi+14], al
	ret
	.size	INS_TXS, .-INS_TXS
	.p2align 4,,15
	.globl	INS_TYA
	.type	INS_TYA, @function
INS_TYA:
.L55:
	movzx	edx, BYTE PTR [rdi+10]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+8], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TYA, .-INS_TYA
	.p2align 4,,15
	.globl	INS_INX
	.type	INS_INX, @function
INS_INX:
.L57:
	mov	QWORD PTR [rsp-8], 0
	movzx	eax, BYTE PTR [rdi+9]
	mov	BYTE PTR [rsp-8], al
	movzx	eax, WORD PTR [rsp-8]
	lea	edx, [rax+1]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+9], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_INX, .-INS_INX
	.p2align 4,,15
	.globl	INS_INY
	.type	INS_INY, @function
INS_INY:
.L59:
	mov	QWORD PTR [rsp-8], 0
	movzx	eax, BYTE PTR [rdi+10]
	mov	BYTE PTR [rsp-8], al
	movzx	eax, WORD PTR [rsp-8]
	lea	edx, [rax+1]
	xor	eax, eax
	test	dl, dl
	mov	BYTE PTR [rdi+10], dl
	sete	al
	and	edx, 128
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rdi]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_INY, .-INS_INY
	.p2align 4,,15
	.globl	INS_UNK
	.type	INS_UNK, @function
INS_UNK:
	ret
	.size	INS_UNK, .-INS_UNK
	.p2align 4,,15
	.globl	INS_NOP
	.type	INS_NOP, @function
INS_NOP:
	ret
	.size	INS_NOP, .-INS_NOP
	.p2align 4,,15
	.globl	INS_R32
	.type	INS_R32, @function
INS_R32:
.L63:
	mov	eax, DWORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L64
	cmp	rax, 65535
	jbe	.L87
.L65:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L80
.L85:
.L83:
	cvttsd2si	rax, xmm0
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
.L69:
.L82:
	.p2align 4,,10
	.p2align 3
.L87:
.L66:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L85
.L80:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L89:
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L64:
	mov	rdx, rax
	cmp	rax, 40959
	ja	.L88
.L70:
	lea	esi, [rdx-53248]
	cmp	esi, 1023
	ja	.L65
.L79:
	and	edx, 63
	cmp	edx, 18
	setne	al
	neg	eax
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L88:
	cmp	rax, 49151
	ja	.L75
.L72:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L85
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L89
.L71:
.L75:
	cmp	rax, 55295
	jbe	.L70
	cmp	rax, 56319
	ja	.L65
.L76:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L80
	jmp	.L85
	.size	INS_R32, .-INS_R32
	.p2align 4,,15
	.globl	INS_R64
	.type	INS_R64, @function
INS_R64:
.L91:
	mov	rax, QWORD PTR [rdi+64]
	mov	rdx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L92
	cmp	rax, 65535
	jbe	.L116
.L107:
	movsd	xmm0, QWORD PTR [rdx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L109
.L114:
.L112:
	cvttsd2si	rax, xmm0
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
.L97:
.L111:
	.p2align 4,,10
	.p2align 3
.L116:
.L94:
	movsd	xmm0, QWORD PTR [rdx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L114
.L109:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L118:
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L92:
	cmp	rax, 40959
	ja	.L117
.L98:
	lea	rcx, [rax-53248]
	cmp	rcx, 1023
	ja	.L107
.L108:
	and	eax, 63
	cmp	rax, 18
	setne	al
	neg	eax
	mov	BYTE PTR [rbx+8], al
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L117:
	cmp	rax, 49151
	ja	.L103
.L100:
	movsd	xmm0, QWORD PTR [rdx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L114
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L118
.L99:
.L103:
	cmp	rax, 55295
	jbe	.L98
	cmp	rax, 56319
	ja	.L107
.L104:
	movsd	xmm0, QWORD PTR [rdx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L109
	jmp	.L114
	.size	INS_R64, .-INS_R64
	.p2align 4,,15
	.globl	INS_PLP
	.type	INS_PLP, @function
INS_PLP:
.L120:
	add	BYTE PTR [rdi+14], 1
	movzx	eax, WORD PTR [rdi+14]
	push	rbx
	mov	rcx, QWORD PTR [rdi+16]
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L121
.L122:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L137
.L142:
.L140:
	cvttsd2si	rax, xmm0
	mov	BYTE PTR [rbx], al
	pop	rbx
	ret
.L125:
.L139:
	.p2align 4,,10
	.p2align 3
.L121:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L126
	cmp	rax, 49151
	ja	.L131
.L128:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L142
.L137:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	mov	BYTE PTR [rbx], al
	pop	rbx
	ret
.L127:
	.p2align 4,,10
	.p2align 3
.L131:
	cmp	rax, 55295
	jbe	.L126
	cmp	rax, 56319
	ja	.L132
.L133:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L137
	jmp	.L142
	.p2align 4,,10
	.p2align 3
.L126:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L143
.L132:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L137
	jmp	.L142
	.p2align 4,,10
	.p2align 3
.L143:
.L136:
	and	edx, 63
	cmp	dx, 18
	setne	al
	neg	eax
	mov	BYTE PTR [rbx], al
	pop	rbx
	ret
	.size	INS_PLP, .-INS_PLP
	.p2align 4,,15
	.globl	INS_LDY
	.type	INS_LDY, @function
INS_LDY:
.L145:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L146
.L147:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L164
.L173:
	cvttsd2si	rax, xmm0
.L150:
.L166:
.L167:
	xor	edx, edx
	test	al, al
	mov	BYTE PTR [rbx+10], al
	sete	dl
	and	eax, 128
	lea	rcx, [rdx+rdx]
.L168:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L146:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L151
	cmp	rax, 49151
	ja	.L156
.L153:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L173
.L164:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L167
.L152:
	.p2align 4,,10
	.p2align 3
.L156:
	cmp	rax, 55295
	jbe	.L151
	cmp	rax, 56319
	ja	.L157
.L158:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L164
	jmp	.L173
	.p2align 4,,10
	.p2align 3
.L151:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L174
.L157:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L164
	jmp	.L173
	.p2align 4,,10
	.p2align 3
.L174:
.L161:
	and	edx, 63
	cmp	dx, 18
	je	.L175
	mov	BYTE PTR [rbx+10], -1
	mov	eax, 128
	xor	ecx, ecx
	jmp	.L168
	.p2align 4,,10
	.p2align 3
.L175:
	mov	BYTE PTR [rbx+10], 0
	xor	eax, eax
	mov	ecx, 2
	jmp	.L168
	.size	INS_LDY, .-INS_LDY
	.p2align 4,,15
	.globl	INS_LDA
	.type	INS_LDA, @function
INS_LDA:
.L177:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L178
.L179:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L196
.L205:
	cvttsd2si	rax, xmm0
.L182:
.L198:
.L199:
	xor	edx, edx
	test	al, al
	mov	BYTE PTR [rbx+8], al
	sete	dl
	and	eax, 128
	lea	rcx, [rdx+rdx]
.L200:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L178:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L183
	cmp	rax, 49151
	ja	.L188
.L185:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L205
.L196:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L199
.L184:
	.p2align 4,,10
	.p2align 3
.L188:
	cmp	rax, 55295
	jbe	.L183
	cmp	rax, 56319
	ja	.L189
.L190:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L196
	jmp	.L205
	.p2align 4,,10
	.p2align 3
.L183:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L206
.L189:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L196
	jmp	.L205
	.p2align 4,,10
	.p2align 3
.L206:
.L193:
	and	edx, 63
	cmp	dx, 18
	je	.L207
	mov	BYTE PTR [rbx+8], -1
	mov	eax, 128
	xor	ecx, ecx
	jmp	.L200
	.p2align 4,,10
	.p2align 3
.L207:
	mov	BYTE PTR [rbx+8], 0
	xor	eax, eax
	mov	ecx, 2
	jmp	.L200
	.size	INS_LDA, .-INS_LDA
	.p2align 4,,15
	.globl	INS_LDX
	.type	INS_LDX, @function
INS_LDX:
.L209:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L210
.L211:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L228
.L237:
	cvttsd2si	rax, xmm0
.L214:
.L230:
.L231:
	xor	edx, edx
	test	al, al
	mov	BYTE PTR [rbx+9], al
	sete	dl
	and	eax, 128
	lea	rcx, [rdx+rdx]
.L232:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L210:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L215
	cmp	rax, 49151
	ja	.L220
.L217:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L237
.L228:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L231
.L216:
	.p2align 4,,10
	.p2align 3
.L220:
	cmp	rax, 55295
	jbe	.L215
	cmp	rax, 56319
	ja	.L221
.L222:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L228
	jmp	.L237
	.p2align 4,,10
	.p2align 3
.L215:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L238
.L221:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L228
	jmp	.L237
	.p2align 4,,10
	.p2align 3
.L238:
.L225:
	and	edx, 63
	cmp	dx, 18
	je	.L239
	mov	BYTE PTR [rbx+9], -1
	mov	eax, 128
	xor	ecx, ecx
	jmp	.L232
	.p2align 4,,10
	.p2align 3
.L239:
	mov	BYTE PTR [rbx+9], 0
	xor	eax, eax
	mov	ecx, 2
	jmp	.L232
	.size	INS_LDX, .-INS_LDX
	.p2align 4,,15
	.globl	INS_ORA
	.type	INS_ORA, @function
INS_ORA:
.L241:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L242
.L243:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L259
.L266:
	cvttsd2si	rax, xmm0
.L246:
.L261:
.L262:
	or	al, BYTE PTR [rbx+8]
	sete	dl
	mov	BYTE PTR [rbx+8], al
	and	eax, 128
	movzx	edx, dl
	lea	rcx, [rdx+rdx]
.L263:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L242:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L247
	cmp	rax, 49151
	ja	.L252
.L249:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L266
.L259:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L262
.L248:
	.p2align 4,,10
	.p2align 3
.L252:
	cmp	rax, 55295
	jbe	.L247
	cmp	rax, 56319
	ja	.L253
.L254:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L259
	jmp	.L266
	.p2align 4,,10
	.p2align 3
.L247:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L267
.L253:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L259
	jmp	.L266
	.p2align 4,,10
	.p2align 3
.L267:
.L257:
	and	edx, 63
	xor	eax, eax
	cmp	dx, 18
	je	.L262
	mov	BYTE PTR [rbx+8], -1
	mov	eax, 128
	xor	ecx, ecx
	jmp	.L263
	.size	INS_ORA, .-INS_ORA
	.p2align 4,,15
	.globl	INS_EOR
	.type	INS_EOR, @function
INS_EOR:
.L269:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L270
.L271:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L286
.L291:
	cvttsd2si	rax, xmm0
.L274:
.L288:
.L289:
	movzx	ecx, BYTE PTR [rbx+8]
	mov	edx, ecx
	xor	edx, eax
	cmp	cl, al
	sete	al
	mov	BYTE PTR [rbx+8], dl
	and	edx, 128
	movzx	eax, al
	lea	rcx, [rax+rax]
	mov	rax, QWORD PTR [rbx]
	and	al, 125
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L270:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L275
	cmp	rax, 49151
	ja	.L280
.L277:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L291
.L286:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L289
.L276:
	.p2align 4,,10
	.p2align 3
.L280:
	cmp	rax, 55295
	jbe	.L275
	cmp	rax, 56319
	ja	.L281
.L282:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L286
	jmp	.L291
	.p2align 4,,10
	.p2align 3
.L275:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L292
.L281:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L286
	jmp	.L291
	.p2align 4,,10
	.p2align 3
.L292:
.L285:
	and	edx, 63
	cmp	dx, 18
	setne	al
	neg	eax
	jmp	.L289
	.size	INS_EOR, .-INS_EOR
	.p2align 4,,15
	.globl	INS_RTS
	.type	INS_RTS, @function
INS_RTS:
.L294:
	push	r12
	mov	r12, QWORD PTR [rdi+16]
	push	rbp
	movzx	ebp, BYTE PTR [rdi+14]
	push	rbx
	mov	rbx, rdi
	lea	eax, [rbp+1]
	mov	BYTE PTR [rdi+14], al
	movzx	eax, WORD PTR [rdi+14]
	cmp	rax, 57343
	jbe	.L295
.L296:
	movsd	xmm0, QWORD PTR [r12+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L311
.L336:
	cvttsd2si	rax, xmm0
.L299:
.L313:
.L314:
	add	ebp, 2
	mov	BYTE PTR [rbx+12], al
	mov	BYTE PTR [rbx+14], bpl
	movzx	eax, WORD PTR [rbx+14]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L315
.L316:
	movsd	xmm0, QWORD PTR [r12+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L331
.L337:
.L334:
	cvttsd2si	rax, xmm0
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
.L319:
.L333:
	.p2align 4,,10
	.p2align 3
.L295:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L300
	cmp	rax, 49151
	ja	.L305
.L302:
	movsd	xmm0, QWORD PTR [r12+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L336
.L311:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L314
	.p2align 4,,10
	.p2align 3
.L315:
	cmp	rax, 40959
	jbe	.L320
	cmp	rax, 49151
	ja	.L325
.L322:
	movsd	xmm0, QWORD PTR [r12+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L337
.L331:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
.L301:
	.p2align 4,,10
	.p2align 3
.L305:
	cmp	rax, 55295
	jbe	.L300
	cmp	rax, 56319
	ja	.L306
.L307:
	movsd	xmm0, QWORD PTR [r12+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L311
	jmp	.L336
.L321:
	.p2align 4,,10
	.p2align 3
.L325:
	cmp	rax, 55295
	jbe	.L320
	cmp	rax, 56319
	jbe	.L338
.L326:
	movsd	xmm0, QWORD PTR [r12+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L331
	jmp	.L337
	.p2align 4,,10
	.p2align 3
.L300:
	lea	ecx, [rdx+12288]
	cmp	cx, 1023
	jbe	.L339
.L306:
	movsd	xmm0, QWORD PTR [r12+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L311
	jmp	.L336
	.p2align 4,,10
	.p2align 3
.L338:
.L327:
	movsd	xmm0, QWORD PTR [r12+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L331
	jmp	.L337
	.p2align 4,,10
	.p2align 3
.L320:
	lea	ecx, [rdx+12288]
	cmp	cx, 1023
	ja	.L326
.L330:
	and	edx, 63
	cmp	dx, 18
	setne	al
	neg	eax
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.p2align 4,,10
	.p2align 3
.L339:
.L310:
	and	edx, 63
	cmp	dx, 18
	setne	al
	neg	eax
	jmp	.L314
	.size	INS_RTS, .-INS_RTS
	.p2align 4,,15
	.globl	INS_AND
	.type	INS_AND, @function
INS_AND:
.L341:
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	push	rbx
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L342
.L343:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L359
.L368:
	cvttsd2si	rax, xmm0
.L346:
.L361:
.L362:
	and	al, BYTE PTR [rbx+8]
	sete	dl
	mov	BYTE PTR [rbx+8], al
	and	eax, 128
	movzx	edx, dl
	lea	rcx, [rdx+rdx]
.L363:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L342:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L347
	cmp	rax, 49151
	ja	.L352
.L349:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L368
.L359:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L362
.L348:
	.p2align 4,,10
	.p2align 3
.L352:
	cmp	rax, 55295
	jbe	.L347
	cmp	rax, 56319
	ja	.L353
.L354:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L359
	jmp	.L368
	.p2align 4,,10
	.p2align 3
.L347:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L369
.L353:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L359
	jmp	.L368
	.p2align 4,,10
	.p2align 3
.L369:
.L357:
	and	edx, 63
	mov	eax, -1
	cmp	dx, 18
	jne	.L362
	mov	BYTE PTR [rbx+8], 0
	xor	eax, eax
	mov	ecx, 2
	jmp	.L363
	.size	INS_AND, .-INS_AND
	.p2align 4,,15
	.globl	INS_PLA
	.type	INS_PLA, @function
INS_PLA:
.L371:
	add	BYTE PTR [rdi+14], 1
	movzx	eax, WORD PTR [rdi+14]
	push	rbx
	mov	rcx, QWORD PTR [rdi+16]
	mov	rbx, rdi
	cmp	rax, 57343
	jbe	.L372
.L373:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L390
.L399:
	cvttsd2si	rax, xmm0
.L376:
.L392:
.L393:
	xor	edx, edx
	test	al, al
	mov	BYTE PTR [rbx+8], al
	sete	dl
	and	eax, 128
	lea	rcx, [rdx+rdx]
.L394:
	mov	rdx, QWORD PTR [rbx]
	and	dl, 125
	or	rdx, rcx
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	pop	rbx
	ret
	.p2align 4,,10
	.p2align 3
.L372:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L377
	cmp	rax, 49151
	ja	.L382
.L379:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L399
.L390:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L393
.L378:
	.p2align 4,,10
	.p2align 3
.L382:
	cmp	rax, 55295
	jbe	.L377
	cmp	rax, 56319
	ja	.L383
.L384:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L390
	jmp	.L399
	.p2align 4,,10
	.p2align 3
.L377:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L400
.L383:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L390
	jmp	.L399
	.p2align 4,,10
	.p2align 3
.L400:
.L387:
	and	edx, 63
	cmp	dx, 18
	je	.L401
	mov	BYTE PTR [rbx+8], -1
	mov	eax, 128
	xor	ecx, ecx
	jmp	.L394
	.p2align 4,,10
	.p2align 3
.L401:
	mov	BYTE PTR [rbx+8], 0
	xor	eax, eax
	mov	ecx, 2
	jmp	.L394
	.size	INS_PLA, .-INS_PLA
	.p2align 4,,15
	.globl	INS_BIT
	.type	INS_BIT, @function
INS_BIT:
.L403:
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rdi+16]
	movzx	ebp, BYTE PTR [rdi+9]
	cmp	rax, 57343
	jbe	.L404
.L405:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L421
.L428:
	cvttsd2si	rdx, xmm0
.L408:
.L423:
.L424:
	mov	ecx, edx
	mov	rsi, rdx
	shr	cl, 6
	and	esi, 128
	mov	rax, rcx
	and	eax, 1
	sal	rax, 6
	test	bpl, dl
	sete	dl
	mov	rcx, rax
	movzx	edx, dl
	add	rdx, rdx
.L420:
	mov	rax, QWORD PTR [rbx]
	and	al, 63
	or	rax, rsi
	or	rax, rcx
	and	rax, -3
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L404:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L409
	cmp	rax, 49151
	ja	.L414
.L411:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L428
.L421:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L424
.L410:
	.p2align 4,,10
	.p2align 3
.L414:
	cmp	rax, 55295
	jbe	.L409
	cmp	rax, 56319
	ja	.L415
.L416:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L421
	jmp	.L428
	.p2align 4,,10
	.p2align 3
.L409:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L429
.L415:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L421
	jmp	.L428
	.p2align 4,,10
	.p2align 3
.L429:
.L419:
	and	edx, 63
	cmp	dx, 18
	je	.L425
	xor	eax, eax
	test	bpl, bpl
	mov	ecx, 64
	mov	esi, 128
	sete	al
	lea	rdx, [rax+rax]
	jmp	.L420
	.p2align 4,,10
	.p2align 3
.L425:
	mov	edx, 2
	xor	ecx, ecx
	xor	esi, esi
	jmp	.L420
	.size	INS_BIT, .-INS_BIT
	.p2align 4,,15
	.globl	INS_CPY
	.type	INS_CPY, @function
INS_CPY:
.L431:
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	mov	rsi, QWORD PTR [rdi+16]
	movzx	ebp, BYTE PTR [rdi+10]
	cmp	rax, 57343
	jbe	.L432
.L433:
	movsd	xmm0, QWORD PTR [rsi+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L449
.L455:
	cvttsd2si	rdx, xmm0
.L450:
	movzx	edx, dl
.L436:
.L451:
.L452:
	mov	ecx, ebp
	sub	ecx, edx
	xor	edx, edx
	cmp	cx, 255
	setbe	dl
.L448:
	mov	rax, QWORD PTR [rbx]
	and	rax, -4
	or	rax, rdx
	xor	edx, edx
	test	cl, cl
	sete	dl
	and	ecx, 128
	add	rdx, rdx
	or	rax, rdx
	and	al, 127
	or	rax, rcx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L432:
	mov	rdx, rax
	mov	ecx, ebp
	cmp	rax, 40959
	jbe	.L437
	cmp	rax, 49151
	ja	.L442
.L439:
	movsd	xmm0, QWORD PTR [rsi+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L455
.L449:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L450
.L438:
	.p2align 4,,10
	.p2align 3
.L442:
	cmp	rax, 55295
	jbe	.L437
	cmp	rax, 56319
	ja	.L443
.L444:
	movsd	xmm0, QWORD PTR [rsi+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L449
	jmp	.L455
	.p2align 4,,10
	.p2align 3
.L437:
	lea	edi, [rdx+12288]
	cmp	di, 1023
	jbe	.L456
.L443:
	movsd	xmm0, QWORD PTR [rsi+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L449
	jmp	.L455
	.p2align 4,,10
	.p2align 3
.L456:
.L447:
	mov	eax, edx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	jne	.L452
	mov	edx, 1
	jmp	.L448
	.size	INS_CPY, .-INS_CPY
	.p2align 4,,15
	.globl	INS_CMP
	.type	INS_CMP, @function
INS_CMP:
.L458:
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	mov	rsi, QWORD PTR [rdi+16]
	movzx	ebp, BYTE PTR [rdi+8]
	cmp	rax, 57343
	jbe	.L459
.L460:
	movsd	xmm0, QWORD PTR [rsi+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L476
.L482:
	cvttsd2si	rdx, xmm0
.L477:
	movzx	edx, dl
.L463:
.L478:
.L479:
	mov	ecx, ebp
	sub	ecx, edx
	xor	edx, edx
	cmp	cx, 255
	setbe	dl
.L475:
	mov	rax, QWORD PTR [rbx]
	and	rax, -4
	or	rax, rdx
	xor	edx, edx
	test	cl, cl
	sete	dl
	and	ecx, 128
	add	rdx, rdx
	or	rax, rdx
	and	al, 127
	or	rax, rcx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L459:
	mov	rdx, rax
	mov	ecx, ebp
	cmp	rax, 40959
	jbe	.L464
	cmp	rax, 49151
	ja	.L469
.L466:
	movsd	xmm0, QWORD PTR [rsi+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L482
.L476:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L477
.L465:
	.p2align 4,,10
	.p2align 3
.L469:
	cmp	rax, 55295
	jbe	.L464
	cmp	rax, 56319
	ja	.L470
.L471:
	movsd	xmm0, QWORD PTR [rsi+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L476
	jmp	.L482
	.p2align 4,,10
	.p2align 3
.L464:
	lea	edi, [rdx+12288]
	cmp	di, 1023
	jbe	.L483
.L470:
	movsd	xmm0, QWORD PTR [rsi+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L476
	jmp	.L482
	.p2align 4,,10
	.p2align 3
.L483:
.L474:
	mov	eax, edx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	jne	.L479
	mov	edx, 1
	jmp	.L475
	.size	INS_CMP, .-INS_CMP
	.p2align 4,,15
	.globl	INS_CPX
	.type	INS_CPX, @function
INS_CPX:
.L485:
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	mov	rsi, QWORD PTR [rdi+16]
	movzx	ebp, BYTE PTR [rdi+9]
	cmp	rax, 57343
	jbe	.L486
.L487:
	movsd	xmm0, QWORD PTR [rsi+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L503
.L509:
	cvttsd2si	rdx, xmm0
.L504:
	movzx	edx, dl
.L490:
.L505:
.L506:
	mov	ecx, ebp
	sub	ecx, edx
	xor	edx, edx
	cmp	cx, 255
	setbe	dl
.L502:
	mov	rax, QWORD PTR [rbx]
	and	rax, -4
	or	rax, rdx
	xor	edx, edx
	test	cl, cl
	sete	dl
	and	ecx, 128
	add	rdx, rdx
	or	rax, rdx
	and	al, 127
	or	rax, rcx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L486:
	mov	rdx, rax
	mov	ecx, ebp
	cmp	rax, 40959
	jbe	.L491
	cmp	rax, 49151
	ja	.L496
.L493:
	movsd	xmm0, QWORD PTR [rsi+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L509
.L503:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L504
.L492:
	.p2align 4,,10
	.p2align 3
.L496:
	cmp	rax, 55295
	jbe	.L491
	cmp	rax, 56319
	ja	.L497
.L498:
	movsd	xmm0, QWORD PTR [rsi+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L503
	jmp	.L509
	.p2align 4,,10
	.p2align 3
.L491:
	lea	edi, [rdx+12288]
	cmp	di, 1023
	jbe	.L510
.L497:
	movsd	xmm0, QWORD PTR [rsi+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L503
	jmp	.L509
	.p2align 4,,10
	.p2align 3
.L510:
.L501:
	mov	eax, edx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	jne	.L506
	mov	edx, 1
	jmp	.L502
	.size	INS_CPX, .-INS_CPX
	.p2align 4,,15
	.globl	INS_BCS
	.type	INS_BCS, @function
INS_BCS:
.L512:
	test	BYTE PTR [rdi], 1
	je	.L545
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L514
.L515:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L530
.L548:
	cvttsd2si	rax, xmm0
.L531:
	cbw
	add	ebp, eax
.L518:
.L532:
.L533:
.L513:
.L534:
.L535:
.L536:
.L537:
.L538:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L514:
	cmp	rax, 40959
	jbe	.L519
	cmp	rax, 49151
	jbe	.L549
.L520:
.L524:
	cmp	rax, 55295
	jbe	.L519
	cmp	rax, 56319
	ja	.L525
.L526:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L548
	.p2align 4,,10
	.p2align 3
.L530:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L531
	.p2align 4,,10
	.p2align 3
.L545:
	ret
	.p2align 4,,10
	.p2align 3
.L549:
.L521:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L530
	jmp	.L548
	.p2align 4,,10
	.p2align 3
.L519:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L550
.L525:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L530
	jmp	.L548
	.p2align 4,,10
	.p2align 3
.L550:
.L529:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L533
	.size	INS_BCS, .-INS_BCS
	.p2align 4,,15
	.globl	INS_BCC
	.type	INS_BCC, @function
INS_BCC:
.L552:
	test	BYTE PTR [rdi], 1
	jne	.L582
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L554
.L555:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L570
.L585:
	cvttsd2si	rax, xmm0
.L571:
	cbw
	add	ebp, eax
.L558:
.L572:
.L573:
.L553:
.L574:
.L575:
.L576:
.L577:
.L578:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L554:
	cmp	rax, 40959
	jbe	.L559
	cmp	rax, 49151
	jbe	.L586
.L560:
.L564:
	cmp	rax, 55295
	jbe	.L559
	cmp	rax, 56319
	ja	.L565
.L566:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L585
	.p2align 4,,10
	.p2align 3
.L570:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L571
	.p2align 4,,10
	.p2align 3
.L582:
	ret
	.p2align 4,,10
	.p2align 3
.L586:
.L561:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L570
	jmp	.L585
	.p2align 4,,10
	.p2align 3
.L559:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L587
.L565:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L570
	jmp	.L585
	.p2align 4,,10
	.p2align 3
.L587:
.L569:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L573
	.size	INS_BCC, .-INS_BCC
	.p2align 4,,15
	.globl	INS_BNE
	.type	INS_BNE, @function
INS_BNE:
.L589:
	test	BYTE PTR [rdi], 2
	jne	.L619
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L591
.L592:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L607
.L622:
	cvttsd2si	rax, xmm0
.L608:
	cbw
	add	ebp, eax
.L595:
.L609:
.L610:
.L590:
.L611:
.L612:
.L613:
.L614:
.L615:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L591:
	cmp	rax, 40959
	jbe	.L596
	cmp	rax, 49151
	jbe	.L623
.L597:
.L601:
	cmp	rax, 55295
	jbe	.L596
	cmp	rax, 56319
	ja	.L602
.L603:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L622
	.p2align 4,,10
	.p2align 3
.L607:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L608
	.p2align 4,,10
	.p2align 3
.L619:
	ret
	.p2align 4,,10
	.p2align 3
.L623:
.L598:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L607
	jmp	.L622
	.p2align 4,,10
	.p2align 3
.L596:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L624
.L602:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L607
	jmp	.L622
	.p2align 4,,10
	.p2align 3
.L624:
.L606:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L610
	.size	INS_BNE, .-INS_BNE
	.p2align 4,,15
	.globl	INS_BMI
	.type	INS_BMI, @function
INS_BMI:
.L626:
	test	BYTE PTR [rdi], -128
	je	.L659
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L628
.L629:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L644
.L662:
	cvttsd2si	rax, xmm0
.L645:
	cbw
	add	ebp, eax
.L632:
.L646:
.L647:
.L627:
.L648:
.L649:
.L650:
.L651:
.L652:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L628:
	cmp	rax, 40959
	jbe	.L633
	cmp	rax, 49151
	jbe	.L663
.L634:
.L638:
	cmp	rax, 55295
	jbe	.L633
	cmp	rax, 56319
	ja	.L639
.L640:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L662
	.p2align 4,,10
	.p2align 3
.L644:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L645
	.p2align 4,,10
	.p2align 3
.L659:
	ret
	.p2align 4,,10
	.p2align 3
.L663:
.L635:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L644
	jmp	.L662
	.p2align 4,,10
	.p2align 3
.L633:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L664
.L639:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L644
	jmp	.L662
	.p2align 4,,10
	.p2align 3
.L664:
.L643:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L647
	.size	INS_BMI, .-INS_BMI
	.p2align 4,,15
	.globl	INS_BVC
	.type	INS_BVC, @function
INS_BVC:
.L666:
	test	BYTE PTR [rdi], 64
	jne	.L696
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L668
.L669:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L684
.L699:
	cvttsd2si	rax, xmm0
.L685:
	cbw
	add	ebp, eax
.L672:
.L686:
.L687:
.L667:
.L688:
.L689:
.L690:
.L691:
.L692:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L668:
	cmp	rax, 40959
	jbe	.L673
	cmp	rax, 49151
	jbe	.L700
.L674:
.L678:
	cmp	rax, 55295
	jbe	.L673
	cmp	rax, 56319
	ja	.L679
.L680:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L699
	.p2align 4,,10
	.p2align 3
.L684:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L685
	.p2align 4,,10
	.p2align 3
.L696:
	ret
	.p2align 4,,10
	.p2align 3
.L700:
.L675:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L684
	jmp	.L699
	.p2align 4,,10
	.p2align 3
.L673:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L701
.L679:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L684
	jmp	.L699
	.p2align 4,,10
	.p2align 3
.L701:
.L683:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L687
	.size	INS_BVC, .-INS_BVC
	.p2align 4,,15
	.globl	INS_BPL
	.type	INS_BPL, @function
INS_BPL:
.L703:
	test	BYTE PTR [rdi], -128
	jne	.L733
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L705
.L706:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L721
.L736:
	cvttsd2si	rax, xmm0
.L722:
	cbw
	add	ebp, eax
.L709:
.L723:
.L724:
.L704:
.L725:
.L726:
.L727:
.L728:
.L729:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L705:
	cmp	rax, 40959
	jbe	.L710
	cmp	rax, 49151
	jbe	.L737
.L711:
.L715:
	cmp	rax, 55295
	jbe	.L710
	cmp	rax, 56319
	ja	.L716
.L717:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L736
	.p2align 4,,10
	.p2align 3
.L721:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L722
	.p2align 4,,10
	.p2align 3
.L733:
	ret
	.p2align 4,,10
	.p2align 3
.L737:
.L712:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L721
	jmp	.L736
	.p2align 4,,10
	.p2align 3
.L710:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L738
.L716:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L721
	jmp	.L736
	.p2align 4,,10
	.p2align 3
.L738:
.L720:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L724
	.size	INS_BPL, .-INS_BPL
	.p2align 4,,15
	.globl	INS_BEQ
	.type	INS_BEQ, @function
INS_BEQ:
.L740:
	test	BYTE PTR [rdi], 2
	je	.L773
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L742
.L743:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L758
.L776:
	cvttsd2si	rax, xmm0
.L759:
	cbw
	add	ebp, eax
.L746:
.L760:
.L761:
.L741:
.L762:
.L763:
.L764:
.L765:
.L766:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L742:
	cmp	rax, 40959
	jbe	.L747
	cmp	rax, 49151
	jbe	.L777
.L748:
.L752:
	cmp	rax, 55295
	jbe	.L747
	cmp	rax, 56319
	ja	.L753
.L754:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L776
	.p2align 4,,10
	.p2align 3
.L758:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L759
	.p2align 4,,10
	.p2align 3
.L773:
	ret
	.p2align 4,,10
	.p2align 3
.L777:
.L749:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L758
	jmp	.L776
	.p2align 4,,10
	.p2align 3
.L747:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L778
.L753:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L758
	jmp	.L776
	.p2align 4,,10
	.p2align 3
.L778:
.L757:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L761
	.size	INS_BEQ, .-INS_BEQ
	.p2align 4,,15
	.globl	INS_BVS
	.type	INS_BVS, @function
INS_BVS:
.L780:
	test	BYTE PTR [rdi], 64
	je	.L813
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+64]
	movzx	ebp, WORD PTR [rdi+12]
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rax
	cmp	rax, 57343
	jbe	.L782
.L783:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L798
.L816:
	cvttsd2si	rax, xmm0
.L799:
	cbw
	add	ebp, eax
.L786:
.L800:
.L801:
.L781:
.L802:
.L803:
.L804:
.L805:
.L806:
	mov	WORD PTR [rbx+12], bp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L782:
	cmp	rax, 40959
	jbe	.L787
	cmp	rax, 49151
	jbe	.L817
.L788:
.L792:
	cmp	rax, 55295
	jbe	.L787
	cmp	rax, 56319
	ja	.L793
.L794:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L816
	.p2align 4,,10
	.p2align 3
.L798:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L799
	.p2align 4,,10
	.p2align 3
.L813:
	ret
	.p2align 4,,10
	.p2align 3
.L817:
.L789:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L798
	jmp	.L816
	.p2align 4,,10
	.p2align 3
.L787:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L818
.L793:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L798
	jmp	.L816
	.p2align 4,,10
	.p2align 3
.L818:
.L797:
	and	edx, 63
	lea	eax, [rbp-1]
	cmp	dx, 18
	cmovne	ebp, eax
	jmp	.L801
	.size	INS_BVS, .-INS_BVS
	.p2align 4,,15
	.globl	_ZN5C64_TD1Ev
	.type	_ZN5C64_TD1Ev, @function
_ZN5C64_TD1Ev:
.L820:
	push	rbx
	mov	rbx, rdi
	sub	rsp, 64
	mov	rax, QWORD PTR [rdi+8]
	test	rax, rax
	je	.L821
.L822:
.L823:
	add	rax, 14416
	mov	rdi, rsp
	mov	QWORD PTR [rsp+16], 312
	mov	QWORD PTR [rsp], rax
	mov	QWORD PTR [rsp+8], rax
	mov	QWORD PTR [rsp+24], 24
	mov	QWORD PTR [rsp+32], 1
	mov	QWORD PTR [rsp+40], 13
	mov	QWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+56], 12
	call	fb_ArrayDestructStr
	mov	rdi, QWORD PTR [rbx+8]
	call	free
.L821:
	mov	rdi, QWORD PTR [rbx]
	test	rdi, rdi
	je	.L824
	call	free
.L824:
	mov	rdi, QWORD PTR IMAGE$[rip]
	call	fb_GfxImageDestroy
	mov	edi, 1000
	call	fb_Sleep
	add	rsp, 64
	pop	rbx
	ret
	.size	_ZN5C64_TD1Ev, .-_ZN5C64_TD1Ev
	.p2align 4,,15
	.globl	_ZN8MEMORY_TD1Ev
	.type	_ZN8MEMORY_TD1Ev, @function
_ZN8MEMORY_TD1Ev:
	ret
.L833:
.L834:
	.size	_ZN8MEMORY_TD1Ev, .-_ZN8MEMORY_TD1Ev
	.p2align 4,,15
	.globl	_ZN8MEMORY_T6PEEK64Ey
	.type	_ZN8MEMORY_T6PEEK64Ey, @function
_ZN8MEMORY_T6PEEK64Ey:
	sub	rsp, 8
	cmp	rsi, 57343
	jbe	.L836
	cmp	rsi, 65535
	jbe	.L862
.L851:
	movsd	xmm0, QWORD PTR [rdi+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L853
.L860:
	cvttsd2si	rax, xmm0
	add	rsp, 8
	ret
.L841:
.L855:
.L856:
	.p2align 4,,10
	.p2align 3
.L862:
.L838:
	movsd	xmm0, QWORD PTR [rdi+65528+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L860
.L853:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L864:
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L836:
	cmp	rsi, 40959
	ja	.L863
.L842:
	lea	rax, [rsi-53248]
	cmp	rax, 1023
	ja	.L851
.L852:
	and	esi, 63
	mov	eax, 255
	mov	edx, 0
	cmp	rsi, 18
	cmove	rax, rdx
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L863:
	cmp	rsi, 49151
	ja	.L847
.L844:
	movsd	xmm0, QWORD PTR [rdi+262136+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L860
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L864
.L843:
.L847:
	cmp	rsi, 55295
	jbe	.L842
	cmp	rsi, 56319
	ja	.L851
.L848:
	movsd	xmm0, QWORD PTR [rdi+212984+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L853
	jmp	.L860
	.size	_ZN8MEMORY_T6PEEK64Ey, .-_ZN8MEMORY_T6PEEK64Ey
	.p2align 4,,15
	.globl	INS_ADC
	.type	INS_ADC, @function
INS_ADC:
.L866:
	push	rbx
	mov	rbx, rdi
	xor	eax, eax
	sub	rsp, 16
	movzx	esi, WORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	mov	DWORD PTR [rsp+10], 0
	mov	WORD PTR [rsp+14], ax
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	edi, BYTE PTR [rbx+8]
	movzx	edx, al
	mov	ecx, edi
	add	edi, edx
	mov	rdx, QWORD PTR [rbx]
	mov	WORD PTR [rsp+8], di
	test	dl, 1
	je	.L867
	add	edi, 1
	mov	WORD PTR [rsp+8], di
.L867:
	movzx	esi, BYTE PTR [rsp+8]
	xor	eax, ecx
	or	rax, -129
	xor	ecx, esi
	not	rax
	mov	BYTE PTR [rbx+8], sil
	movzx	ecx, cl
	test	rax, rcx
	setne	al
	and	rdx, -66
	movzx	eax, al
	sal	rax, 6
	or	rdx, rax
	xor	eax, eax
	cmp	di, 255
	seta	al
	or	rdx, rax
	xor	eax, eax
	test	sil, sil
	sete	al
	and	dl, 125
	and	esi, 128
	add	rax, rax
	or	rdx, rax
	or	rdx, rsi
	mov	QWORD PTR [rbx], rdx
	add	rsp, 16
	pop	rbx
	ret
	.size	INS_ADC, .-INS_ADC
	.p2align 4,,15
	.globl	INS_SBC
	.type	INS_SBC, @function
INS_SBC:
.L873:
	push	rbx
	mov	rbx, rdi
	xor	eax, eax
	sub	rsp, 16
	movzx	esi, WORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	mov	DWORD PTR [rsp+2], 0
	mov	WORD PTR [rsp+6], ax
	mov	QWORD PTR [rsp+8], 0
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	ecx, BYTE PTR [rbx+8]
	movzx	edx, al
	mov	esi, ecx
	sub	ecx, edx
	mov	rdx, QWORD PTR [rbx]
	mov	WORD PTR [rsp], cx
	test	dl, 1
	jne	.L874
	sub	ecx, 1
	mov	WORD PTR [rsp], cx
.L874:
	movzx	ecx, BYTE PTR [rsp]
	xor	eax, esi
	and	rdx, -66
	xor	esi, ecx
	mov	BYTE PTR [rbx+8], cl
	and	eax, esi
	shr	rax
	and	eax, 64
	or	rdx, rax
	xor	eax, eax
	cmp	WORD PTR [rsp], 255
	setbe	al
	or	rdx, rax
	xor	eax, eax
	test	cl, cl
	sete	al
	and	dl, 125
	and	ecx, 128
	add	rax, rax
	or	rdx, rax
	or	rdx, rcx
	mov	QWORD PTR [rbx], rdx
	add	rsp, 16
	pop	rbx
	ret
	.size	INS_SBC, .-INS_SBC
	.p2align 4,,15
	.globl	INS_RTI
	.type	INS_RTI, @function
INS_RTI:
.L877:
	push	r12
	push	rbp
	push	rbx
	movzx	ebp, BYTE PTR [rdi+14]
	mov	rbx, rdi
	mov	r12, QWORD PTR [rdi+16]
	lea	eax, [rbp+1]
	mov	BYTE PTR [rdi+14], al
	movzx	esi, WORD PTR [rdi+14]
	mov	rdi, r12
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rdi, r12
	mov	BYTE PTR [rbx], al
	lea	eax, [rbp+2]
	add	ebp, 3
	mov	BYTE PTR [rbx+14], al
	movzx	esi, WORD PTR [rbx+14]
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	BYTE PTR [rbx+14], bpl
	mov	BYTE PTR [rbx+12], al
	movzx	eax, WORD PTR [rbx+14]
	cmp	rax, 57343
	jbe	.L878
.L879:
	movsd	xmm0, QWORD PTR [r12+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L894
.L899:
.L897:
	cvttsd2si	rax, xmm0
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
.L882:
.L896:
	.p2align 4,,10
	.p2align 3
.L878:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L883
	cmp	rax, 49151
	ja	.L888
.L885:
	movsd	xmm0, QWORD PTR [r12+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L899
.L894:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
.L884:
	.p2align 4,,10
	.p2align 3
.L888:
	cmp	rax, 55295
	jbe	.L883
	cmp	rax, 56319
	ja	.L889
.L890:
	movsd	xmm0, QWORD PTR [r12+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L894
	jmp	.L899
	.p2align 4,,10
	.p2align 3
.L883:
	lea	ecx, [rdx+12288]
	cmp	cx, 1023
	jbe	.L900
.L889:
	movsd	xmm0, QWORD PTR [r12+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L894
	jmp	.L899
	.p2align 4,,10
	.p2align 3
.L900:
.L893:
	and	edx, 63
	cmp	dx, 18
	setne	al
	neg	eax
	mov	BYTE PTR [rbx+13], al
	add	WORD PTR [rbx+12], 1
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.size	INS_RTI, .-INS_RTI
	.p2align 4,,15
	.globl	_ZN8MEMORY_T9READUBYTEEy
	.type	_ZN8MEMORY_T9READUBYTEEy, @function
_ZN8MEMORY_T9READUBYTEEy:
	sub	rsp, 8
	cmp	rsi, 57343
	jbe	.L902
	cmp	rsi, 65535
	jbe	.L926
.L917:
	movsd	xmm0, QWORD PTR [rdi+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L919
.L924:
	cvttsd2si	rax, xmm0
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L926:
.L904:
	movsd	xmm0, QWORD PTR [rdi+65528+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L924
.L919:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L907:
.L921:
.L922:
.L928:
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L902:
	cmp	rsi, 40959
	ja	.L927
.L908:
	lea	rax, [rsi-53248]
	cmp	rax, 1023
	ja	.L917
.L918:
	and	esi, 63
	cmp	rsi, 18
	setne	al
	add	rsp, 8
	neg	eax
	ret
	.p2align 4,,10
	.p2align 3
.L927:
	cmp	rsi, 49151
	ja	.L913
.L910:
	movsd	xmm0, QWORD PTR [rdi+262136+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L924
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L928
.L909:
.L913:
	cmp	rsi, 55295
	jbe	.L908
	cmp	rsi, 56319
	ja	.L917
.L914:
	movsd	xmm0, QWORD PTR [rdi+212984+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L919
	jmp	.L924
	.size	_ZN8MEMORY_T9READUBYTEEy, .-_ZN8MEMORY_T9READUBYTEEy
	.p2align 4,,15
	.globl	_ZN8MEMORY_T8READBYTEEy
	.type	_ZN8MEMORY_T8READBYTEEy, @function
_ZN8MEMORY_T8READBYTEEy:
	sub	rsp, 8
	cmp	rsi, 57343
	jbe	.L930
	cmp	rsi, 65535
	jbe	.L954
.L945:
	movsd	xmm0, QWORD PTR [rdi+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L947
.L952:
	cvttsd2si	rax, xmm0
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L954:
.L932:
	movsd	xmm0, QWORD PTR [rdi+65528+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L952
.L947:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L935:
.L949:
.L950:
.L956:
	add	rsp, 8
	ret
	.p2align 4,,10
	.p2align 3
.L930:
	cmp	rsi, 40959
	ja	.L955
.L936:
	lea	rax, [rsi-53248]
	cmp	rax, 1023
	ja	.L945
.L946:
	and	esi, 63
	cmp	rsi, 18
	setne	al
	add	rsp, 8
	neg	eax
	ret
	.p2align 4,,10
	.p2align 3
.L955:
	cmp	rsi, 49151
	ja	.L941
.L938:
	movsd	xmm0, QWORD PTR [rdi+262136+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L952
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L956
.L937:
.L941:
	cmp	rsi, 55295
	jbe	.L936
	cmp	rsi, 56319
	ja	.L945
.L942:
	movsd	xmm0, QWORD PTR [rdi+212984+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L947
	jmp	.L952
	.size	_ZN8MEMORY_T8READBYTEEy, .-_ZN8MEMORY_T8READBYTEEy
	.p2align 4,,15
	.globl	_ZN8MEMORY_T10READUSHORTEy
	.type	_ZN8MEMORY_T10READUSHORTEy, @function
_ZN8MEMORY_T10READUSHORTEy:
	push	r13
	mov	r13, rdi
	push	r12
	lea	r12, [rsi+1]
	push	rbp
	mov	rbp, rsi
	push	rbx
	sub	rsp, 24
	cmp	rsi, 57343
	jbe	.L958
	cmp	rsi, 65535
	jbe	.L1007
.L974:
	movsd	xmm0, QWORD PTR [r13+0+rbp*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L977
	cvttsd2si	rbx, xmm0
.L978:
	cmp	r12, 57343
	jbe	.L979
.L963:
	cmp	r12, 65535
	jbe	.L1008
.L980:
	cmp	r12, 56319
	ja	.L995
.L992:
	movsd	xmm0, QWORD PTR [r13+212992+rbp*8]
	movsd	QWORD PTR [rsp+8], xmm1
	call	nearbyint
	movsd	xmm1, QWORD PTR [rsp+8]
	comisd	xmm0, xmm1
	jb	.L1006
	.p2align 4,,10
	.p2align 3
.L997:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L998:
.L984:
.L999:
.L1000:
	sal	eax, 8
	add	rsp, 24
	or	ebx, eax
	mov	eax, ebx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.p2align 4,,10
	.p2align 3
.L1007:
.L960:
	movsd	xmm0, QWORD PTR [rdi+65528+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L1009
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
	cmp	r12, 65535
	ja	.L980
.L1008:
.L981:
	movsd	xmm0, QWORD PTR [r13+65536+rbp*8]
	movsd	QWORD PTR [rsp+8], xmm1
	call	nearbyint
	movsd	xmm1, QWORD PTR [rsp+8]
	comisd	xmm0, xmm1
	jnb	.L997
	jmp	.L1006
	.p2align 4,,10
	.p2align 3
.L958:
	cmp	rsi, 40959
	ja	.L1010
.L964:
	lea	rax, [rbp-53248]
	cmp	rax, 1023
	ja	.L974
.L975:
	mov	rax, rbp
	mov	ebx, 255
	and	eax, 63
	cmp	rax, 18
	mov	eax, 0
	cmove	ebx, eax
	cmp	r12, 40959
	jbe	.L985
.L1011:
	cmp	r12, 49151
	ja	.L990
.L987:
	movsd	xmm0, QWORD PTR [r13+262144+rbp*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L997
	jmp	.L1006
	.p2align 4,,10
	.p2align 3
.L1010:
	cmp	rsi, 49151
	ja	.L970
.L966:
	movsd	xmm0, QWORD PTR [rdi+262136+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L972
.L1005:
	cvttsd2si	rbx, xmm0
.L979:
	cmp	r12, 40959
	ja	.L1011
.L985:
	sub	rbp, 53247
	movsd	xmm1, QWORD PTR .LC0[rip]
	cmp	rbp, 1023
	jbe	.L1012
.L995:
	movsd	xmm0, QWORD PTR [r13+0+r12*8]
	movsd	QWORD PTR [rsp+8], xmm1
	call	nearbyint
	movsd	xmm1, QWORD PTR [rsp+8]
	comisd	xmm0, xmm1
	jnb	.L997
	.p2align 4,,10
	.p2align 3
.L1006:
	cvttsd2si	rax, xmm0
	jmp	.L998
	.p2align 4,,10
	.p2align 3
.L977:
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
	jmp	.L978
	.p2align 4,,10
	.p2align 3
.L1009:
	cvttsd2si	rbx, xmm0
	jmp	.L963
.L965:
.L970:
	cmp	rsi, 55295
	jbe	.L964
	cmp	rsi, 56319
	ja	.L974
.L971:
	movsd	xmm0, QWORD PTR [rdi+212984+rsi*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L1005
.L972:
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
	jmp	.L979
	.p2align 4,,10
	.p2align 3
.L1012:
.L996:
	and	r12d, 63
	mov	eax, ebx
	or	ax, -256
	cmp	r12, 18
	cmovne	ebx, eax
	add	rsp, 24
	mov	eax, ebx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
.L986:
.L990:
	cmp	r12, 55295
	jbe	.L985
	movsd	xmm1, QWORD PTR .LC0[rip]
	jmp	.L980
	.size	_ZN8MEMORY_T10READUSHORTEy, .-_ZN8MEMORY_T10READUSHORTEy
	.p2align 4,,15
	.globl	_ZN8MEMORY_T11WRITEUSHORTEyy
	.type	_ZN8MEMORY_T11WRITEUSHORTEyy, @function
_ZN8MEMORY_T11WRITEUSHORTEyy:
.L1014:
	push	r12
	mov	r12, rdi
	push	rbp
	mov	rbp, rdx
	movzx	edx, dl
	push	rbx
	mov	rbx, rsi
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, rbp
	lea	rsi, [rbx+1]
	mov	rdi, r12
	pop	rbx
	movzx	edx, ah
	pop	rbp
	pop	r12
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	_ZN8MEMORY_T11WRITEUSHORTEyy, .-_ZN8MEMORY_T11WRITEUSHORTEyy
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC1:
	.string	"mplayer -vo xv -fs -alang en dvd://"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC2:
	.string	" -dvd-device /dev/cd0"
	.section	.rodata.str1.8
	.align 8
.LC3:
	.string	"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/cd0"
	.section	.rodata.str1.1
.LC4:
	.string	"tmp.py"
.LC5:
	.string	"# Start of file"
	.section	.rodata.str1.8
	.align 8
.LC6:
	.string	"import bpy,mathutils,bmesh,bgl,blf"
	.section	.rodata.str1.1
.LC7:
	.string	"from math import radians"
.LC8:
	.string	"from random import randint"
	.section	.rodata.str1.8
	.align 8
.LC9:
	.string	"bpy.context.scene.render.engine = 'CYCLES'"
	.align 8
.LC10:
	.string	"bpy.context.scene.render.resolution_x = 640"
	.align 8
.LC11:
	.string	"bpy.context.scene.render.resolution_y = 480"
	.align 8
.LC12:
	.string	"bpy.context.scene.render.resolution_percentage = 100"
	.align 8
.LC13:
	.string	"bpy.context.scene.render.image_settings.file_format = 'BMP'"
	.align 8
.LC14:
	.string	"bpy.context.scene.render.tile_x = 32"
	.align 8
.LC15:
	.string	"bpy.context.scene.render.tile_y = 32"
	.align 8
.LC16:
	.string	"bpy.context.scene.cycles.preview_samples = 1"
	.align 8
.LC17:
	.string	"bpy.context.scene.render.use_persistent_data = True"
	.align 8
.LC18:
	.string	"bpy.context.scene.cycles.use_progressive_refine = True"
	.align 8
.LC19:
	.string	"bpy.context.scene.render.use_save_buffers = True"
	.align 8
.LC20:
	.string	"bpy.context.scene.render.use_border = True"
	.align 8
.LC21:
	.string	"bpy.context.scene.cycles.device = 'CPU'"
	.align 8
.LC22:
	.string	"bpy.context.scene.cycles.max_bounces = 1024"
	.align 8
.LC23:
	.string	"bpy.context.scene.cycles.min_bounces = 0"
	.align 8
.LC24:
	.string	"bpy.context.scene.cycles.diffuse_bounces = 0"
	.align 8
.LC25:
	.string	"bpy.context.scene.cycles.glossy_bounces = 0"
	.align 8
.LC26:
	.string	"bpy.context.scene.cycles.transmission_bounces = 2"
	.align 8
.LC27:
	.string	"bpy.context.scene.cycles.transparent_max_bounces = 1024"
	.align 8
.LC28:
	.string	"bpy.context.scene.cycles.transparent_min_bounces = 0"
	.align 8
.LC29:
	.string	"bpy.context.scene.cycles.caustics_reflective = False"
	.align 8
.LC30:
	.string	"bpy.context.scene.cycles.caustics_refractive = False"
	.align 8
.LC31:
	.string	"bpy.context.scene.cycles.use_square_samples = True"
	.align 8
.LC32:
	.string	"bpy.context.scene.cycles.samples = 4"
	.align 8
.LC33:
	.string	"bpy.context.scene.cycles.debug_use_spatial_splits = True"
	.align 8
.LC34:
	.string	"bpy.context.scene.world.cycles.max_bounces = 1"
	.align 8
.LC35:
	.string	"bpy.context.object.data.cycles.is_portal = True"
	.align 8
.LC36:
	.string	"bpy.context.scene.cycles.debug_use_hair_bvh = False"
	.align 8
.LC37:
	.string	"bpy.data.objects['Lamp'].select = True"
	.align 8
.LC38:
	.string	"bpy.context.scene.objects.active = bpy.data.objects['Lamp']"
	.align 8
.LC39:
	.string	"bpy.context.object.data.type = 'SUN'"
	.align 8
.LC40:
	.string	"bpy.context.object.data.energy = 1"
	.align 8
.LC41:
	.string	"bpy.context.object.data.use_shadow = True"
	.align 8
.LC42:
	.string	"bpy.data.objects['Cube'].select = True"
	.align 8
.LC43:
	.string	"bpy.context.scene.objects.active = bpy.data.objects['Cube']"
	.align 8
.LC44:
	.string	"bpy.context.scene.world.light_settings.use_environment_light = True"
	.align 8
.LC45:
	.string	"bpy.context.scene.world.light_settings.use_indirect_light = True"
	.align 8
.LC46:
	.string	"bpy.context.scene.world.light_settings.gather_method = 'APPROXIMATE'"
	.align 8
.LC47:
	.string	"bpy.context.scene.world.light_settings.indirect_bounces = 1024"
	.align 8
.LC48:
	.string	"bpy.context.scene.world.light_settings.environment_color = 'SKY_COLOR'"
	.align 8
.LC49:
	.string	"bpy.context.scene.world.use_sky_blend = True"
	.align 8
.LC50:
	.string	"bpy.context.scene.world.use_sky_real = True"
	.align 8
.LC51:
	.string	"bpy.data.scenes['Scene'].render.filepath = './"
	.section	.rodata.str1.1
.LC52:
	.string	".bmp'"
	.section	.rodata.str1.8
	.align 8
.LC53:
	.string	"bpy.ops.render.render(use_viewport = True, write_still=True)"
	.section	.rodata.str1.1
.LC54:
	.string	"# End of file"
	.section	.rodata.str1.8
	.align 8
.LC57:
	.string	"bpy.ops.mesh.primitive_plane_add()"
	.section	.rodata.str1.1
.LC58:
	.string	"Plane"
	.section	.rodata.str1.8
	.align 8
.LC60:
	.string	"bpy.ops.mesh.primitive_cube_add()"
	.section	.rodata.str1.1
.LC61:
	.string	"Cube"
	.section	.rodata.str1.8
	.align 8
.LC63:
	.string	"bpy.ops.mesh.primitive_circle_add()"
	.section	.rodata.str1.1
.LC64:
	.string	"Circle"
	.section	.rodata.str1.8
	.align 8
.LC66:
	.string	"bpy.ops.mesh.primitive_uv_sphere_add()"
	.section	.rodata.str1.1
.LC67:
	.string	"Sphere"
	.section	.rodata.str1.8
	.align 8
.LC69:
	.string	"bpy.ops.mesh.primitive_ico_sphere_add()"
	.section	.rodata.str1.1
.LC70:
	.string	"Icosphere"
	.section	.rodata.str1.8
	.align 8
.LC72:
	.string	"bpy.ops.mesh.primitive_cylinder_add()"
	.section	.rodata.str1.1
.LC73:
	.string	"Cylinder"
	.section	.rodata.str1.8
	.align 8
.LC75:
	.string	"bpy.ops.mesh.primitive_cone_add()"
	.section	.rodata.str1.1
.LC76:
	.string	"Cone"
	.section	.rodata.str1.8
	.align 8
.LC78:
	.string	"bpy.ops.mesh.primitive_torus_add()"
	.section	.rodata.str1.1
.LC79:
	.string	"Torus"
	.section	.rodata.str1.8
	.align 8
.LC81:
	.string	"bpy.ops.mesh.primitive_grid_add()"
	.section	.rodata.str1.1
.LC82:
	.string	"Grid"
	.section	.rodata.str1.8
	.align 8
.LC84:
	.string	"bpy.ops.mesh.primitive_monkey_add()"
	.section	.rodata.str1.1
.LC85:
	.string	"Suzanne"
.LC87:
	.string	"Lamp"
.LC89:
	.string	"Camera"
	.section	.rodata.str1.8
	.align 8
.LC91:
	.string	"bpy.ops.mesh.primitive_plane_add("
	.align 8
.LC93:
	.string	"bpy.ops.mesh.primitive_cube_add("
	.align 8
.LC95:
	.string	"bpy.ops.mesh.primitive_circle_add("
	.align 8
.LC97:
	.string	"bpy.ops.mesh.primitive_uv_sphere_add("
	.align 8
.LC99:
	.string	"bpy.ops.mesh.primitive_ico_sphere_add("
	.align 8
.LC101:
	.string	"bpy.ops.mesh.primitive_cylinder_add("
	.align 8
.LC103:
	.string	"bpy.ops.mesh.primitive_cone_add("
	.align 8
.LC105:
	.string	"bpy.ops.mesh.primitive_torus_add("
	.align 8
.LC107:
	.string	"bpy.ops.mesh.primitive_grid_add("
	.align 8
.LC109:
	.string	"bpy.ops.mesh.primitive_monkey_add("
	.section	.rodata.str1.1
.LC111:
	.string	"location = [ randint ( "
.LC112:
	.string	","
.LC113:
	.string	") for axis in 'xyz']"
.LC115:
	.string	"location = [0, 0, i]"
.LC117:
	.string	"location = [0, i, 0]"
.LC119:
	.string	"location = [0, i, i]"
.LC121:
	.string	"location = [i, 0, 0]"
.LC123:
	.string	"location = [i, 0, i]"
.LC125:
	.string	"location = [i, i, i]"
.LC127:
	.string	"location = [ "
.LC128:
	.string	" ]"
.LC129:
	.string	")"
	.section	.rodata.str1.8
	.align 8
.LC130:
	.string	"bpy.ops.curve.primitive_bezier_curve_add()"
	.align 8
.LC131:
	.string	"bpy.ops.curve.primitive_bezier_circle_add()"
	.align 8
.LC132:
	.string	"bpy.ops.curve.primitive_nurbs_circle_add()"
	.align 8
.LC133:
	.string	"bpy.ops.curve.primitive_nurbs_curve_add()"
	.align 8
.LC134:
	.string	"bpy.ops.curve.primitive_nurbs_path_add()"
	.align 8
.LC135:
	.string	"bpy.ops.object.lamp_add(type='POINT')"
	.align 8
.LC136:
	.string	"bpy.ops.object.lamp_add(type='SUN')"
	.align 8
.LC137:
	.string	"bpy.ops.object.lamp_add(type='SPOT')"
	.align 8
.LC138:
	.string	"bpy.ops.object.lamp_add(type='HEMI')"
	.align 8
.LC139:
	.string	"bpy.ops.object.lamp_add(type='AREA')"
	.section	.rodata.str1.1
.LC140:
	.string	"bpy.ops.object.text_add()"
.LC141:
	.string	"bpy.ops.object.armature_add()"
	.section	.rodata.str1.8
	.align 8
.LC142:
	.string	"bpy.ops.object.add(type='LATTICE')"
	.align 8
.LC143:
	.string	"bpy.ops.object.add(type='MESH')"
	.align 8
.LC144:
	.string	"bpy.ops.object.add(type='CURVE')"
	.align 8
.LC145:
	.string	"bpy.ops.object.add(type='SURFACE')"
	.section	.rodata.str1.1
.LC146:
	.string	"bpy.data.window_managers["
.LC147:
	.string	"\""
.LC148:
	.string	"WinMan"
.LC149:
	.string	"].(null) = 'META'"
	.section	.rodata.str1.8
	.align 8
.LC150:
	.string	"bpy.ops.object.add(type='META')"
	.section	.rodata.str1.1
.LC151:
	.string	"].(null) = 'FONT'"
	.section	.rodata.str1.8
	.align 8
.LC152:
	.string	"bpy.ops.object.add(type='FONT')"
	.align 8
.LC153:
	.string	"bpy.ops.object.add(type='ARMATURE')"
	.section	.rodata.str1.1
.LC154:
	.string	"].(null) = 'EMPTY'"
	.section	.rodata.str1.8
	.align 8
.LC155:
	.string	"bpy.ops.object.add(type='EMPTY')"
	.section	.rodata.str1.1
.LC156:
	.string	"].(null) = 'CAMERA'"
	.section	.rodata.str1.8
	.align 8
.LC157:
	.string	"bpy.ops.object.add(type='CAMERA')"
	.section	.rodata.str1.1
.LC158:
	.string	"].(null) = 'SPEAKER'"
	.section	.rodata.str1.8
	.align 8
.LC159:
	.string	"bpy.ops.object.add(type='SPEAKER')"
	.align 8
.LC160:
	.string	"bpy.ops.object.empty_add(type='PLAIN_AXES')"
	.align 8
.LC161:
	.string	"bpy.ops.object.empty_add(type='ARROWS')"
	.align 8
.LC162:
	.string	"bpy.ops.object.empty_add(type='SINGLE_ARROW')"
	.align 8
.LC163:
	.string	"bpy.ops.object.empty_add(type='CIRCLE')"
	.align 8
.LC164:
	.string	"bpy.ops.object.empty_add(type='SPHERE')"
	.align 8
.LC165:
	.string	"bpy.ops.object.empty_add(type='CONE')"
	.align 8
.LC166:
	.string	"bpy.ops.object.empty_add(type='IMAGE')"
	.section	.rodata.str1.1
.LC167:
	.string	"bpy.data.objects['"
.LC168:
	.string	"'].select = True"
.LC169:
	.string	".00"
.LC171:
	.string	".0"
	.section	.rodata.str1.8
	.align 8
.LC172:
	.string	"bpy.context.scene.objects.active = bpy.data.objects['"
	.section	.rodata.str1.1
.LC173:
	.string	"']"
.LC174:
	.string	"bpy.ops.group.create()"
	.section	.rodata.str1.8
	.align 8
.LC175:
	.string	"bpy.ops.object.parent_set(type='OBJECT', keep_transform=False)"
	.align 8
.LC176:
	.string	"bpy.ops.object.parent_set(type='OBJECT', keep_transform=True)"
	.align 8
.LC177:
	.string	"bpy.ops.object.parent_set(type='VERTEX')"
	.align 8
.LC178:
	.string	"bpy.ops.object.parent_set(type='VERTEX_TRI')"
	.align 8
.LC179:
	.string	"bpy.ops.object.parent_clear(type='CLEAR')"
	.align 8
.LC180:
	.string	"bpy.ops.object.parent_clear(type='CLEAR_KEEP_TRANSFORM')"
	.align 8
.LC181:
	.string	"bpy.ops.object.parent_clear(type='CLEAR_INVERSE')'"
	.align 8
.LC182:
	.string	"bpy.ops.object.make_links_data()"
	.align 8
.LC183:
	.string	"bpy.ops.object.make_single_user(type='SELECTED_OBJECTS')"
	.align 8
.LC184:
	.string	"bpy.ops.object.make_single_user(type='ALL')"
	.align 8
.LC185:
	.string	"bpy.ops.object.make_local(type='SELECT_OBJECT')"
	.align 8
.LC186:
	.string	"bpy.ops.object.make_local(type='SELECT_OBDATA')"
	.align 8
.LC187:
	.string	"bpy.ops.object.make_local(type='SELECT_OBDATA_MATERIAL')"
	.align 8
.LC188:
	.string	"bpy.ops.object.make_local(type='ALL')"
	.align 8
.LC189:
	.string	"bpy.ops.transform.translate(value=("
	.section	.rodata.str1.1
.LC190:
	.string	"."
.LC191:
	.string	"))"
	.section	.rodata.str1.8
	.align 8
.LC192:
	.string	"bpy.ops.transform.rotate(value="
	.section	.rodata.str1.1
.LC193:
	.string	", "
.LC194:
	.string	"axis=("
	.section	.rodata.str1.8
	.align 8
.LC195:
	.string	"bpy.ops.transform.resize(value=("
	.section	.rodata.str1.1
.LC196:
	.string	"bpy.ops.transform.mirror()"
.LC197:
	.string	"bpy.ops.object.join()"
	.section	.rodata.str1.8
	.align 8
.LC198:
	.string	"bpy.ops.object.origin_set(type='GEOMETRY_ORIGIN')"
	.align 8
.LC199:
	.string	"bpy.ops.object.origin_set(type='ORIGIN_GEOMETRY')"
	.align 8
.LC200:
	.string	"bpy.ops.object.origin_set(type='ORIGIN_CURSOR')"
	.align 8
.LC201:
	.string	"bpy.ops.object.origin_set(type='ORIGIN_CENTER_OF_MASS')"
	.align 8
.LC202:
	.string	"bpy.ops.object.origin_set(type='ORIGIN_CENTER_OF_VOLUME')"
	.section	.rodata.str1.1
.LC203:
	.string	"bpy.ops.object.shade_smooth()"
.LC204:
	.string	"bpy.ops.object.shade_flat()"
	.section	.rodata.str1.8
	.align 8
.LC205:
	.string	"bpy.ops.object.data_transfer(data_type='VGROUP_WEIGHTS')"
	.align 8
.LC206:
	.string	"bpy.ops.object.data_transfer(data_type='BEVEL_WEIGHT_VERT')"
	.align 8
.LC207:
	.string	"bpy.ops.object.data_transfer(data_type='SHARP_EDGE')"
	.align 8
.LC208:
	.string	"bpy.ops.object.data_transfer(data_type='SEAM')"
	.align 8
.LC209:
	.string	"bpy.ops.object.data_transfer(data_type='CREASE')"
	.align 8
.LC210:
	.string	"bpy.ops.object.data_transfer(data_type='BEVEL_WEIGHT_EDGE')"
	.align 8
.LC211:
	.string	"bpy.ops.object.data_transfer(data_type='FREESTYLE_EDGE')"
	.align 8
.LC212:
	.string	"bpy.ops.object.data_transfer(data_type='CUSTOM_NORMAL')"
	.align 8
.LC213:
	.string	"bpy.ops.object.data_transfer(data_type='VCOL')"
	.align 8
.LC214:
	.string	"bpy.ops.object.data_transfer(data_type='UV')"
	.align 8
.LC215:
	.string	"bpy.ops.object.data_transfer(data_type='SMOOTH')"
	.align 8
.LC216:
	.string	"bpy.ops.object.data_transfer(data_type='FREESTYLE_FACE')"
	.align 8
.LC217:
	.string	"bpy.ops.object.datalayout_transfer(data_type='VGROUP_WEIGHTS')"
	.align 8
.LC218:
	.string	"bpy.ops.object.datalayout_transfer(data_type='BEVEL_WEIGHT_VERT')"
	.align 8
.LC219:
	.string	"bpy.ops.object.datalayout_transfer(data_type='SHARP_EDGE')"
	.align 8
.LC220:
	.string	"bpy.ops.object.datalayout_transfer(data_type='SEAM')"
	.align 8
.LC221:
	.string	"bpy.ops.object.datalayout_transfer(data_type='CREASE')"
	.align 8
.LC223:
	.string	"bpy.ops.object.datalayout_transfer(data_type='BEVEL_WEIGHT_EDGE')"
	.align 8
.LC225:
	.string	"bpy.ops.object.datalayout_transfer(data_type='FREESTYLE_EDGE')"
	.align 8
.LC227:
	.string	"bpy.ops.object.datalayout_transfer(data_type='CUSTOM_NORMAL')"
	.align 8
.LC229:
	.string	"bpy.ops.object.datalayout_transfer(data_type='VCOL')"
	.align 8
.LC231:
	.string	"bpy.ops.object.datalayout_transfer(data_type='UV')"
	.align 8
.LC233:
	.string	"bpy.ops.object.datalayout_transfer(data_type='SMOOTH')"
	.align 8
.LC235:
	.string	"bpy.ops.object.datalayout_transfer(data_type='FREESTYLE_FACE')"
	.align 8
.LC237:
	.string	"bpy.ops.object.delete(use_global=False)"
	.align 8
.LC239:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='Available')"
	.align 8
.LC241:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='Location')"
	.align 8
.LC243:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='Rotation')"
	.align 8
.LC245:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='Scaling')"
	.align 8
.LC247:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_LocRot')"
	.align 8
.LC249:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')"
	.align 8
.LC251:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_LocScale')"
	.align 8
.LC254:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_RotScale')"
	.align 8
.LC256:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_DeltaLocation')"
	.align 8
.LC258:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_DeltaRotation')"
	.align 8
.LC260:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_DeltaScale')"
	.align 8
.LC262:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualLoc')"
	.align 8
.LC265:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualRot')"
	.align 8
.LC267:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualScaling')"
	.align 8
.LC269:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualLocRot')"
	.align 8
.LC271:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualLocRotScale')"
	.align 8
.LC273:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualLocScale')"
	.align 8
.LC275:
	.string	"bpy.ops.anim.keyframe_insert_menu(type='BUILTIN_KSI_VisualRotScale')"
	.align 8
.LC277:
	.string	"bpy.ops.anim.keyframe_delete_v3d()"
	.align 8
.LC279:
	.string	"bpy.ops.object.paths_calculate(start_frame="
	.section	.rodata.str1.1
.LC280:
	.string	", end_frame="
	.section	.rodata.str1.8
	.align 8
.LC282:
	.string	"bpy.ops.nla.bake(frame_start=1, frame_end="
	.section	.rodata.str1.1
.LC283:
	.string	", bake_types={'OBJECT'})"
	.section	.rodata.str1.8
	.align 8
.LC285:
	.string	"bpy.ops.rigidbody.objects_add(type='ACTIVE')"
	.align 8
.LC287:
	.string	"bpy.ops.rigidbody.objects_add(type='PASSIVE')"
	.align 8
.LC289:
	.string	"bpy.ops.rigidbody.objects_remove()"
	.align 8
.LC291:
	.string	"bpy.ops.object.visual_transform_apply()"
	.align 8
.LC293:
	.string	"bpy.context.scene.frame_start = "
	.align 8
.LC295:
	.string	"bpy.context.scene.frame_end = "
	.align 8
.LC297:
	.string	"bpy.context.scene.frame_current = "
	.align 8
.LC299:
	.string	"bpy.context.scene.frame_step = "
	.align 8
.LC301:
	.string	"bpy.ops.rigidbody.bake_to_keyframes(frame_start="
	.section	.rodata.str1.1
.LC303:
	.string	"bpy.ops.ptcache.bake_all()"
	.section	.rodata.str1.8
	.align 8
.LC305:
	.string	"bpy.ops.ptcache.free_bake_all()"
	.align 8
.LC307:
	.string	"bpy.context.object.rigid_body.collision_shape = 'BOX'"
	.align 8
.LC309:
	.string	"bpy.context.object.rigid_body.collision_shape = 'SPHERE'"
	.align 8
.LC311:
	.string	"bpy.context.object.rigid_body.collision_shape = 'CAPSULE'"
	.align 8
.LC313:
	.string	"bpy.context.object.rigid_body.collision_shape = 'CYLINDER'"
	.align 8
.LC315:
	.string	"bpy.context.object.rigid_body.collision_shape = 'CONE'"
	.align 8
.LC317:
	.string	"bpy.context.object.rigid_body.collision_shape = 'MESH'"
	.section	.rodata.str1.1
.LC319:
	.string	"bpy.ops.ptcache.add()"
	.section	.rodata.str1.8
	.align 8
.LC321:
	.string	"bpy.ops.object.forcefield_toggle()"
	.align 8
.LC323:
	.string	"bpy.ops.rigidbody.constraint_add()"
	.align 8
.LC325:
	.string	"bpy.ops.rigidbody.constraint_remove()"
	.align 8
.LC327:
	.string	"bpy.context.object.frame_end = "
	.align 8
.LC329:
	.string	"bpy.context.object.frame_step = "
	.align 8
.LC331:
	.string	"bpy.context.object.rigid_body.mass = "
	.align 8
.LC333:
	.string	"bpy.context.object.rigid_body.friction = "
	.align 8
.LC335:
	.string	"bpy.context.object.rigid_body.restitution = "
	.align 8
.LC337:
	.string	"bpy.context.object.rigid_body.collision_margin = "
	.align 8
.LC339:
	.string	"bpy.context.object.rigid_body.linear_damping = "
	.align 8
.LC341:
	.string	"bpy.context.object.rigid_body.angular_damping = "
	.align 8
.LC343:
	.string	"bpy.context.object.field.type = 'FORCE'"
	.align 8
.LC345:
	.string	"bpy.context.object.field.type = 'WIND'"
	.align 8
.LC347:
	.string	"bpy.context.object.field.type = 'VORTEX'"
	.align 8
.LC349:
	.string	"bpy.context.object.field.type = 'MAGNET'"
	.align 8
.LC351:
	.string	"bpy.context.object.field.type = 'HARMONIC'"
	.align 8
.LC353:
	.string	"bpy.context.object.field.type = 'CHARGE'"
	.align 8
.LC355:
	.string	"bpy.context.object.field.type = 'LENNARDJ'"
	.align 8
.LC357:
	.string	"bpy.context.object.field.type = 'TEXTURE'"
	.align 8
.LC358:
	.string	"bpy.context.object.field.type = 'GUIDE'"
	.align 8
.LC360:
	.string	"bpy.context.object.field.type = 'BOID'"
	.align 8
.LC362:
	.string	"bpy.context.object.field.type = 'TURBULENCE'"
	.align 8
.LC364:
	.string	"bpy.context.object.field.type = 'DRAG'"
	.align 8
.LC366:
	.string	"bpy.context.object.field.type = 'SMOKE_FLOW'"
	.align 8
.LC368:
	.string	"bpy.context.object.field.strength = "
	.align 8
.LC370:
	.string	"bpy.context.object.field.flow = "
	.align 8
.LC372:
	.string	"bpy.context.object.field.falloff_power = "
	.align 8
.LC374:
	.string	"bpy.context.object.field.linear_drag = "
	.align 8
.LC376:
	.string	"bpy.context.object.field.quadratic_drag = "
	.align 8
.LC378:
	.string	"bpy.context.object.field.noise = "
	.align 8
.LC380:
	.string	"bpy.context.object.field.seed = "
	.align 8
.LC383:
	.string	"bpy.context.object.field.size = "
	.align 8
.LC387:
	.string	"bpy.context.object.field.guide_minimum = "
	.align 8
.LC389:
	.string	"bpy.context.object.field.guide_free = "
	.align 8
.LC392:
	.string	"bpy.context.object.field.guide_clump_amount = "
	.align 8
.LC394:
	.string	"bpy.context.object.field.guide_clump_shape = "
	.align 8
.LC397:
	.string	"bpy.context.object.field.texture_nabla = "
	.align 8
.LC399:
	.string	"bpy.context.object.field.rest_length = "
	.align 8
.LC401:
	.string	"bpy.context.object.field.harmonic_damping = "
	.align 8
.LC403:
	.string	"bpy.context.object.field.shape = 'POINT'"
	.align 8
.LC405:
	.string	"bpy.context.object.field.shape = 'PLANE'"
	.align 8
.LC407:
	.string	"bpy.context.object.field.shape = 'SURFACE'"
	.align 8
.LC409:
	.string	"bpy.context.object.field.shape = 'POINTS'"
	.align 8
.LC411:
	.string	"bpy.context.object.collision.permeability = "
	.align 8
.LC413:
	.string	"bpy.context.object.collision.stickiness = "
	.align 8
.LC415:
	.string	"bpy.context.object.collision.thickness_inner = "
	.align 8
.LC417:
	.string	"bpy.context.object.collision.thickness_outer = "
	.align 8
.LC419:
	.string	"bpy.context.object.collision.damping = "
	.align 8
.LC421:
	.string	"bpy.context.object.collision.damping_factor = "
	.align 8
.LC423:
	.string	"bpy.context.object.collision.damping_random = "
	.align 8
.LC425:
	.string	"bpy.context.object.collision.absorption = "
	.align 8
.LC427:
	.string	"bpy.context.object.collision.friction_factor = "
	.align 8
.LC429:
	.string	"bpy.context.object.collision.friction_random = "
	.section	.rodata.str1.1
.LC431:
	.string	"bpy.ops.fluid.bake()"
	.section	.rodata.str1.8
	.align 8
.LC433:
	.string	"bpy.ops.object.modifier_add(type='"
	.section	.rodata.str1.1
.LC434:
	.string	"')"
.LC436:
	.string	"bpy.context.object.modifiers["
.LC437:
	.string	"].speed = "
.LC439:
	.string	"].width = "
.LC441:
	.string	"].height = "
.LC443:
	.string	"].narrowness = "
	.section	.rodata.str1.8
	.align 8
.LC445:
	.string	"bpy.ops.object.modifier_remove(modifier="
	.align 8
.LC447:
	.string	"bpy.ops.object.editmode_toggle()"
	.align 8
.LC449:
	.string	"bpy.ops.mesh.subdivide(smoothness="
	.align 8
.LC451:
	.string	"bpy.context.scene.render.tile_x = "
	.align 8
.LC453:
	.string	"bpy.context.scene.render.tile_y = "
	.align 8
.LC455:
	.string	"bpy.context.scene.cycles.preview_samples = "
	.align 8
.LC457:
	.string	"bpy.context.scene.cycles.max_bounces = "
	.align 8
.LC459:
	.string	"bpy.context.scene.cycles.min_bounces = "
	.align 8
.LC461:
	.string	"bpy.context.scene.cycles.diffuse_bounces = "
	.align 8
.LC463:
	.string	"bpy.context.scene.cycles.glossy_bounces = "
	.align 8
.LC465:
	.string	"bpy.context.scene.cycles.transmission_bounces = "
	.align 8
.LC467:
	.string	"bpy.context.scene.cycles.transparent_max_bounces = "
	.align 8
.LC469:
	.string	"bpy.context.scene.cycles.transparent_min_bounces = "
	.align 8
.LC471:
	.string	"bpy.context.scene.cycles.samples = "
	.align 8
.LC473:
	.string	"bpy.context.scene.world.cycles.max_bounces = "
	.align 8
.LC475:
	.string	"bpy.context.object.data.energy = "
	.align 8
.LC477:
	.string	"bpy.context.scene.world.light_settings.indirect_bounces = "
	.align 8
.LC479:
	.string	"bpy.context.scene.cycles.device = 'GPU'"
	.section	.rodata.str1.1
.LC481:
	.string	"'BLENDER_RENDER'"
.LC482:
	.string	"'BLENDER_GAME'"
.LC483:
	.string	"'CYCLES'"
.LC484:
	.string	"'LUXRENDER_RENDER'"
.LC485:
	.string	"'EEVEE'"
	.section	.rodata.str1.8
	.align 8
.LC486:
	.string	"bpy.context.scene.render.engine = "
	.align 8
.LC489:
	.string	"bpy.ops.object.select_all(action='TOGGLE')"
	.section	.rodata.str1.1
.LC490:
	.string	"'NONE'"
.LC491:
	.string	"'BLEND'"
.LC492:
	.string	"'CLOUDS'"
.LC493:
	.string	"'DISTORTED_NOISE'"
.LC494:
	.string	"'ENVIRONMENT_MAP'"
.LC495:
	.string	"'IMAGE'"
.LC496:
	.string	"'MAGIC'"
.LC497:
	.string	"'MARBLE'"
.LC498:
	.string	"'MUSGRAVE'"
.LC499:
	.string	"'NOISE'"
.LC500:
	.string	"'OCEAN'"
.LC501:
	.string	"'POINT_DENSITY'"
.LC502:
	.string	"'STUCCI'"
.LC503:
	.string	"'VORONOI'"
.LC504:
	.string	"'VOXEL_DATA'"
.LC505:
	.string	"'WOOD'"
.LC506:
	.string	"Add"
.LC507:
	.string	"ShaderNodeAddShader"
.LC508:
	.string	"Add Shader"
.LC509:
	.string	"Surface"
.LC510:
	.string	"Shader"
.LC511:
	.string	"Ambient"
.LC512:
	.string	"ShaderNodeAmbientOcclusion"
.LC513:
	.string	"Ambient Occlusion"
.LC514:
	.string	"AO"
.LC515:
	.string	"Antisotropic"
.LC516:
	.string	"ShaderNodeBsdfAnisotropic"
.LC517:
	.string	"Anisotropic BSDF"
.LC518:
	.string	"BSDF"
.LC519:
	.string	"Background"
.LC520:
	.string	"ShaderNodeBackground"
.LC521:
	.string	"Deffuse"
.LC522:
	.string	"ShaderNodeBsdfDiffuse"
.LC523:
	.string	"Diffuse BSDF"
.LC524:
	.string	"Emission"
.LC525:
	.string	"ShaderNodeEmission"
.LC526:
	.string	"Glass"
.LC527:
	.string	"ShaderNodeBsdfGlass"
.LC528:
	.string	"Glass BSDF"
.LC529:
	.string	"Glossy"
.LC530:
	.string	"ShaderNodeBsdfGlossy"
.LC531:
	.string	"Glossy BSDF"
.LC532:
	.string	"Hair"
.LC533:
	.string	"ShaderNodeBsdfHair"
.LC534:
	.string	"Hair BSDF"
.LC535:
	.string	"Holdout"
.LC536:
	.string	"ShaderNodeHoldout"
.LC537:
	.string	"Mix"
.LC538:
	.string	"ShaderNodeMixShader"
.LC539:
	.string	"Mix Shader"
.LC540:
	.string	"Principled"
.LC541:
	.string	"ShaderNodeBsdfPrincipled"
.LC542:
	.string	"Principled BSDF"
.LC543:
	.string	"Refraction"
.LC544:
	.string	"ShaderNodeBsdfRefraction"
.LC545:
	.string	"Refraction BSDF"
.LC546:
	.string	"Subsurface"
	.section	.rodata.str1.8
	.align 8
.LC547:
	.string	"ShaderNodeSubsurfaceScattering"
	.section	.rodata.str1.1
.LC548:
	.string	"Subsurface Scattering"
.LC549:
	.string	"Transparent"
.LC550:
	.string	"ShaderNodeBsdfTransparent"
.LC551:
	.string	"Transparent BSDF"
.LC552:
	.string	"Velvet"
.LC553:
	.string	"ShaderNodeBsdfVelvet"
.LC554:
	.string	"Velvet BSDF"
.LC555:
	.string	"Absorption"
.LC556:
	.string	"ShaderNodeVolumeAbsorption"
.LC557:
	.string	"Volume Absorption"
.LC558:
	.string	"Scatter"
.LC559:
	.string	"ShaderNodeVolumeScatter"
.LC560:
	.string	"Volume Scatter"
.LC561:
	.string	"ShaderNodeFresnel"
.LC562:
	.string	"Fresnel"
.LC563:
	.string	"ShaderNodeMapping"
.LC564:
	.string	"Mapping"
.LC565:
	.string	"ShaderNodeSeparateRGB"
.LC566:
	.string	"Separate RGB"
.LC567:
	.string	"ShaderNodeInvert"
.LC568:
	.string	"Invert"
.LC569:
	.string	"ShaderNodeValToRGB"
.LC570:
	.string	"ShaderNodeGeometry"
.LC571:
	.string	"ShaderNodeLightPath"
.LC572:
	.string	"ShaderNodeGroup"
.LC573:
	.string	"ShaderNodeBlackbody"
.LC574:
	.string	"Blackbody"
.LC575:
	.string	"ShaderNodeOutput"
.LC576:
	.string	"ShaderNodeCombineRGB"
.LC577:
	.string	"Combine RGB"
.LC578:
	.string	"ShaderNodeVectorMath"
.LC579:
	.string	"ShaderNodeRGB"
.LC580:
	.string	"ShaderNodeTexMagic"
.LC581:
	.string	"ShaderNodeParticleInfo"
.LC582:
	.string	"ShaderNodeTexImage"
.LC583:
	.string	"ShaderNodeLampData"
.LC584:
	.string	"ShaderNodeOutputLamp"
.LC585:
	.string	"ShaderNodeObjectInfo"
.LC586:
	.string	"ShaderNodeVectorCurve"
.LC587:
	.string	"ShaderNodeMaterial"
.LC588:
	.string	"ShaderNodeSqueeze"
.LC589:
	.string	"ShaderNodeBrightContrast"
.LC590:
	.string	"BrightContrast"
.LC591:
	.string	"ShaderNodeNormal"
.LC592:
	.string	"ShaderNodeMath"
.LC593:
	.string	"ShaderNodeScript"
.LC594:
	.string	"ShaderNodeGamma"
.LC595:
	.string	"Gamma"
.LC596:
	.string	"ShaderNodeWavelength"
.LC597:
	.string	"ShaderNodeUVAlongStroke"
.LC598:
	.string	"ShaderNodeTexBrick"
.LC599:
	.string	"ShaderNodeCameraData"
.LC600:
	.string	"ShaderNodeCombineXYZ"
.LC601:
	.string	"Combine XYZ"
.LC602:
	.string	"ShaderNodeHairInfo"
.LC603:
	.string	"Hair Info"
.LC604:
	.string	"ShaderNodeHueSaturation"
.LC605:
	.string	"Hue Saturation Value"
.LC606:
	.string	"ShaderNodeSeparateXYZ"
.LC607:
	.string	"Separate XYZ"
.LC608:
	.string	"ShaderNodeTexMusgrave"
.LC609:
	.string	"ShaderNodeTexEnvironment"
.LC610:
	.string	"ShaderNodeSeparateHSV"
.LC611:
	.string	"Separate HSV"
.LC612:
	.string	"ShaderNodeTexCoord"
.LC613:
	.string	"ShaderNodeTexGradient"
.LC614:
	.string	"ShaderNodeLayerWeight"
.LC615:
	.string	"ShaderNodeLightFalloff"
.LC616:
	.string	"Light Falloff"
.LC617:
	.string	"ShaderNodeOutputWorld"
.LC618:
	.string	"ShaderNodeTangent"
.LC619:
	.string	"ShaderNodeWireframe"
.LC620:
	.string	"ShaderNodeVectorTransform"
.LC621:
	.string	"Vector Transform"
.LC622:
	.string	"ShaderNodeTexVoronoi"
.LC623:
	.string	"ShaderNodeValue"
.LC624:
	.string	"ShaderNodeNormalMap"
.LC625:
	.string	"ShaderNodeUVMap"
.LC626:
	.string	"ShaderNodeCombineHSV"
.LC627:
	.string	"Combine HSV"
.LC628:
	.string	"ShaderNodeMixRGB"
.LC629:
	.string	"ShaderNodeRGBCurve"
.LC630:
	.string	"ShaderNodeTexNoise"
.LC631:
	.string	"ShaderNodeOutputMaterial"
.LC632:
	.string	"ShaderNodeBump"
.LC633:
	.string	"Bump"
.LC634:
	.string	"ShaderNodeExtendedMaterial"
.LC635:
	.string	"ShaderNodeRGBToBW"
.LC636:
	.string	"RGBtoBW"
.LC637:
	.string	"ShaderNodeTexWave"
.LC638:
	.string	"ShaderNodeOutputLineStyle"
.LC639:
	.string	"ShaderNodeTexSky"
.LC640:
	.string	"ShaderNodeTexChecker"
.LC641:
	.string	"ShaderNodeTexture"
.LC642:
	.string	"ShaderNodeAttribute"
.LC643:
	.string	"ShaderNodeNewGeometry"
.LC644:
	.string	"ColorRamp"
.LC645:
	.string	"Normal"
.LC646:
	.string	"Vector Curves"
.LC647:
	.string	"RGB Curves"
.LC648:
	.string	"Brick Texture"
.LC649:
	.string	"Checker Texture"
.LC650:
	.string	"Environment Texture"
.LC651:
	.string	"Gradient Texture"
.LC652:
	.string	"Image Texture"
.LC653:
	.string	"Magic Texture"
.LC654:
	.string	"Musgrave Texture"
.LC655:
	.string	"Noise Texture"
.LC656:
	.string	"Point Density"
.LC657:
	.string	"Sky Texture"
.LC658:
	.string	"Voronoi Texture"
.LC659:
	.string	"Wave Texture"
.LC660:
	.string	"Lamp Output"
.LC661:
	.string	"Materal Output"
.LC662:
	.string	"Attribute"
.LC663:
	.string	"Camera Data"
.LC664:
	.string	"Geometry"
.LC665:
	.string	"Layer Weight"
.LC666:
	.string	"Light Path"
.LC667:
	.string	"Object Info"
.LC668:
	.string	"Particle Info"
.LC669:
	.string	"RGB"
.LC670:
	.string	"Tangent"
.LC671:
	.string	"Texture Coordinate"
.LC672:
	.string	"UV Map"
.LC673:
	.string	"Value"
.LC674:
	.string	"Wireframe"
.LC675:
	.string	"Color"
.LC676:
	.string	"Roughness"
.LC677:
	.string	"Rotation"
.LC678:
	.string	"Strength"
.LC679:
	.string	"IOR"
.LC680:
	.string	"Offset"
.LC681:
	.string	"RoughtnessU"
.LC682:
	.string	"RoughtnessV"
.LC683:
	.string	"Fac"
.LC684:
	.string	"BaseColor"
.LC685:
	.string	"Subsurface Radius"
.LC686:
	.string	"Subsurface Color"
.LC687:
	.string	"Specular"
.LC688:
	.string	"Specular Tint"
.LC689:
	.string	"Anistropic Rotation"
.LC690:
	.string	"Sheen"
.LC691:
	.string	"Sheen Tint"
.LC692:
	.string	"Clearcoat"
.LC693:
	.string	"Clearcoat Roughness"
.LC694:
	.string	"Transmission"
.LC695:
	.string	"Clearcoat Normal"
.LC696:
	.string	"Scale"
.LC697:
	.string	"Radius"
.LC698:
	.string	"Texture Blur"
.LC699:
	.string	"Size"
.LC700:
	.string	"Smooth"
.LC701:
	.string	"Sigma"
.LC703:
	.string	"Density"
.LC705:
	.string	"Anistropy"
.LC707:
	.string	"POINT"
.LC709:
	.string	"SUN"
.LC711:
	.string	"SPOT"
.LC713:
	.string	"HEMI"
.LC714:
	.string	"AREA"
	.section	.rodata.str1.8
	.align 8
.LC715:
	.string	"mat = bpy.data.materials.new('"
	.align 8
.LC716:
	.string	"tex = bpy.data.textures.new('texture',"
	.align 8
.LC717:
	.string	"tex = bpy.data.textures.new('texture.00"
	.section	.rodata.str1.1
.LC718:
	.string	"',"
	.section	.rodata.str1.8
	.align 8
.LC719:
	.string	"tex = bpy.data.textures.new('texture.0"
	.align 8
.LC720:
	.string	"tex = bpy.data.textures.new('texture."
	.section	.rodata.str1.1
.LC721:
	.string	"mat.use_nodes = True"
.LC722:
	.string	"tex.use_nodes = True"
.LC723:
	.string	"nt = mat.node_tree"
.LC724:
	.string	"nodes = nt.nodes"
.LC725:
	.string	"links = nt.links"
	.section	.rodata.str1.8
	.align 8
.LC726:
	.string	"bpy.context.object.data.uv_textures.new(\"UVMap\")"
	.align 8
.LC727:
	.string	"bpy.context.object.data.uv_textures['UVMap'].active = True"
	.section	.rodata.str1.1
.LC728:
	.string	"bpy.ops.uv.smart_project()"
	.section	.rodata.str1.8
	.align 8
.LC729:
	.string	"uvmap   = nodes.new(\"ShaderNodeUVMap\")"
	.section	.rodata.str1.1
.LC730:
	.string	"uvmap.uv_map = \"UVMap\""
	.section	.rodata.str1.8
	.align 8
.LC731:
	.string	"bpy.context.object.data.uv_textures.new(\"UVMap\".00"
	.section	.rodata.str1.1
.LC732:
	.string	"uvmap.uv_map = \"UVMap\".00"
	.section	.rodata.str1.8
	.align 8
.LC733:
	.string	"bpy.context.object.data.uv_textures.new(\"UVMap\".0"
	.section	.rodata.str1.1
.LC734:
	.string	"uvmap.uv_map = \"UVMap\".0"
.LC735:
	.string	"uvmap.uv_map = \"UVMap\"."
.LC736:
	.string	"tex.use_nodes = False"
.LC737:
	.string	"mat.use_nodes = False"
	.section	.rodata.str1.8
	.align 8
.LC738:
	.string	"img.image = bpy.data.images.load(\"vram/HDRI/"
	.section	.rodata.str1.1
.LC739:
	.string	".png"
	.section	.rodata.str1.8
	.align 8
.LC740:
	.string	"img.image = bpy.data.images.load(\"vram/"
	.section	.rodata.str1.1
.LC741:
	.string	".bmp"
	.section	.rodata.str1.8
	.align 8
.LC742:
	.string	"slot = mat.texture_slots.add()"
	.section	.rodata.str1.1
.LC743:
	.string	"slot.texture = tex"
.LC744:
	.string	"inp = nodes.new(\""
	.section	.rodata.str1.8
	.align 8
.LC745:
	.string	"img  = nodes.new(\"ShaderNodeTexImage\")"
	.align 8
.LC746:
	.string	"outp = nodes.new(\"ShaderNodeOutputMaterial\")"
	.align 8
.LC747:
	.string	"links.new(outp.inputs['Surface'], inp.outputs['BSDF'])"
	.align 8
.LC748:
	.string	"links.new(inp.inputs['Color'],   img.outputs['Color'])"
	.align 8
.LC749:
	.string	"links.new(img.inputs['Vector'],    uvmap.outputs['UVMap'])"
	.section	.rodata.str1.1
.LC750:
	.string	"bpy.data.materials.new('"
.LC751:
	.string	"bpy.data.materials['"
.LC752:
	.string	"'].use_nodes = True"
.LC753:
	.string	"'].node_tree.nodes.new(type="
.LC754:
	.string	"inp = bpy.data.materials['"
.LC755:
	.string	"'].node_tree.nodes["
.LC756:
	.string	"Material Output"
.LC757:
	.string	"].inputs["
.LC758:
	.string	"]"
.LC759:
	.string	"outp = bpy.data.materials['"
.LC760:
	.string	"].outputs["
	.section	.rodata.str1.8
	.align 8
.LC761:
	.string	"'].node_tree.links.new(outp, inp)"
	.align 8
.LC762:
	.string	"'].active_material = bpy.data.materials['"
	.section	.rodata.str1.1
.LC763:
	.string	"].default_value = ("
.LC764:
	.string	"].default_value = "
	.section	.rodata.str1.8
	.align 8
.LC765:
	.string	"bpy.context.scene.world.use_nodes = True"
	.align 8
.LC766:
	.string	"bpy.context.scene.world.use_nodes = False"
	.align 8
.LC767:
	.string	"bpy.data.worlds[bpy.context.scene.world.name].node_tree"
	.align 8
.LC768:
	.string	"envNode = bpy.data.worlds[bpy.context.scene.world.name].node_tree.nodes.new(type="
	.align 8
.LC769:
	.string	"envNode.image=bpy.data.images.load("
	.section	.rodata.str1.1
.LC770:
	.string	"vram/HDRI/"
	.section	.rodata.str1.8
	.align 8
.LC771:
	.string	"backNode = bpy.data.worlds[bpy.context.scene.world.name].node_tree.nodes['Background']"
	.align 8
.LC772:
	.string	"ColOut = envNode.outputs['Color']"
	.align 8
.LC773:
	.string	"ColIn = backNode.inputs['Color']"
	.align 8
.LC774:
	.string	"bpy.data.worlds[bpy.context.scene.world.name].node_tree.links.new(ColOut, ColIn)"
	.section	.rodata.str1.1
.LC775:
	.string	"bpy.data.lamps.new('"
.LC776:
	.string	"bpy.data.lamps['"
.LC777:
	.string	"'].use_nodes = False"
.LC778:
	.string	"'].type = "
.LC779:
	.string	"'].node_tree.nodes['"
	.section	.rodata.str1.8
	.align 8
.LC780:
	.string	"Emission'].inputs['Strength'].default_value = "
	.align 8
.LC781:
	.string	"bpy.context.object.data.color = ("
	.section	.rodata.str1.1
.LC782:
	.string	"DATA_TRANSFER"
.LC783:
	.string	"MESH_CACHE"
.LC784:
	.string	"MESH_SEQUENCE_CACHE"
.LC785:
	.string	"NORMAL_EDIT"
.LC786:
	.string	"UV_PROJECT"
.LC787:
	.string	"UV_WARP"
.LC788:
	.string	"VERTEX_WEIGHT_EDIT"
.LC789:
	.string	"VERTEX_WEIGHT_MIX"
.LC790:
	.string	"VERTEX_WEIGHT_PROXIMITY"
.LC791:
	.string	"ARRAY"
.LC792:
	.string	"BEVEL"
.LC793:
	.string	"BOOLEAN"
.LC794:
	.string	"BUILD"
.LC795:
	.string	"DECIMATE"
.LC796:
	.string	"EDGE_SPLIT"
.LC797:
	.string	"MASK"
.LC798:
	.string	"MIRROR"
.LC799:
	.string	"MULTIRES"
.LC800:
	.string	"REMESH"
.LC801:
	.string	"SCREW"
.LC802:
	.string	"SKIN"
.LC803:
	.string	"SOLIDIFY"
.LC804:
	.string	"SUBSURF"
.LC805:
	.string	"TRIANGULATE"
.LC806:
	.string	"WIREFRAME"
.LC807:
	.string	"ARMATURE"
.LC808:
	.string	"CAST"
.LC809:
	.string	"CORRECTIVE_SMOOTH"
.LC810:
	.string	"CURVE"
.LC811:
	.string	"DISPLACE"
.LC812:
	.string	"HOOK"
.LC813:
	.string	"LAPLACIANSMOOTH"
.LC814:
	.string	"LAPLACIANDEFORM"
.LC815:
	.string	"LATTICE"
.LC816:
	.string	"MESH_DEFORM"
.LC817:
	.string	"SHRINKWRAP"
.LC818:
	.string	"WARP"
.LC819:
	.string	"WAVE"
.LC820:
	.string	"CLOTH"
.LC821:
	.string	"COLLISION"
.LC822:
	.string	"DYNAMIC_PAINT"
.LC823:
	.string	"EXPLODE"
.LC824:
	.string	"FLUID_SIMULATION"
.LC825:
	.string	"OCEAN"
.LC826:
	.string	"PARTICLE_INSTANCE"
.LC827:
	.string	"PARTICLE_SYSTEM"
.LC828:
	.string	"SMOKE"
.LC829:
	.string	"SOFT_BODY"
.LC830:
	.string	"DataTransfer"
.LC831:
	.string	"Mesh Cache"
.LC832:
	.string	"Mesh Sequence Cache"
.LC833:
	.string	"Set Split Normals"
.LC834:
	.string	"UVProject"
.LC835:
	.string	"UVWarp"
.LC836:
	.string	"VertexWeightEdit"
.LC837:
	.string	"VertexWeightMix"
.LC838:
	.string	"VertexWeightProximity"
.LC839:
	.string	"Array"
.LC840:
	.string	"Bevel"
.LC841:
	.string	"Boolean"
.LC842:
	.string	"Build"
.LC843:
	.string	"Decimate"
.LC844:
	.string	"EdgeSplit"
.LC845:
	.string	"Mask"
.LC846:
	.string	"Mirror"
.LC847:
	.string	"Multires"
.LC848:
	.string	"Remesh"
.LC849:
	.string	"Screw"
.LC850:
	.string	"Skin"
.LC851:
	.string	"Solidify"
.LC852:
	.string	"Subsurf"
.LC853:
	.string	"Triangulate"
.LC854:
	.string	"Armature"
.LC855:
	.string	"Cast"
.LC856:
	.string	"CorrectiveSmooth"
.LC857:
	.string	"Curve"
.LC858:
	.string	"Displace"
.LC859:
	.string	"Hook"
.LC860:
	.string	"Laplacian Smooth"
.LC861:
	.string	"LaplacianDeform"
.LC862:
	.string	"Lattice"
.LC863:
	.string	"MeshDeform"
.LC864:
	.string	"Shrinkwrap"
.LC865:
	.string	"SimpleDeform"
.LC866:
	.string	"Surface Deform"
.LC867:
	.string	"Warp"
.LC868:
	.string	"Wave"
.LC869:
	.string	"Cloth"
.LC870:
	.string	"Dynamic Paint"
.LC871:
	.string	"Softbody"
.LC872:
	.string	"Fluidsim"
.LC873:
	.string	"Smoke"
.LC874:
	.string	"].ray_radius = "
.LC875:
	.string	"].frame_start = "
.LC876:
	.string	"].frame_scale = "
.LC877:
	.string	"].frame_duration = "
.LC878:
	.string	"].offset[0] = "
.LC879:
	.string	"].offset[1] = "
.LC880:
	.string	"].offset[2] = "
.LC881:
	.string	"].projector_count = "
.LC882:
	.string	"].aspect_x = "
.LC883:
	.string	"].aspect_y = "
.LC884:
	.string	"].center[0] = "
.LC885:
	.string	"].center[1] = "
.LC886:
	.string	"].default_weight = "
.LC887:
	.string	"].mask_constant = "
.LC888:
	.string	"].falloff_type = 'LINEAR'"
.LC889:
	.string	"].falloff_type = 'CURVE'"
.LC890:
	.string	"].falloff_type = 'SHARP'"
.LC891:
	.string	"].falloff_type = 'SMOOTH'"
.LC892:
	.string	"].falloff_type = 'ROOT'"
	.section	.rodata.str1.8
	.align 8
.LC893:
	.string	"].falloff_type = 'ICON_SPHERECURVE'"
	.section	.rodata.str1.1
.LC894:
	.string	"].falloff_type = 'RANDOM'"
.LC895:
	.string	"].falloff_type = 'STEP'"
.LC896:
	.string	"].falloff_type = 'NONE'"
.LC897:
	.string	"].falloff_type = 'SPHERE'"
	.section	.rodata.str1.8
	.align 8
.LC898:
	.string	"].falloff_type = 'INVERSE_SQUARE'"
	.section	.rodata.str1.1
.LC899:
	.string	"].falloff_type = 'CONSTANT'"
.LC900:
	.string	"].falloff_radius = "
.LC901:
	.string	"].falloff = "
.LC902:
	.string	"].strength = "
.LC903:
	.string	"].default_weight_a = "
.LC904:
	.string	"].default_weight_b = "
.LC905:
	.string	"].mix_factor = "
.LC906:
	.string	"].mix_limit = "
.LC907:
	.string	"].mix_mode = 'SET'"
.LC908:
	.string	"].mix_mode = 'ADD'"
.LC909:
	.string	"].mix_mode = 'SUB'"
.LC910:
	.string	"].mix_mode = 'MUL'"
.LC911:
	.string	"].mix_mode = 'DIV'"
.LC912:
	.string	"].mix_mode = 'DIF'"
.LC913:
	.string	"].mix_mode = 'AVG'"
.LC914:
	.string	"].mix_set = 'AND'"
.LC915:
	.string	"].mix_set = 'OR'"
.LC916:
	.string	"].mix_set = 'B'"
.LC917:
	.string	"].mix_set = 'ALL'"
.LC918:
	.string	"].mix_set = 'A'"
.LC919:
	.string	"].proximity_mode = 'OBJECT'"
	.section	.rodata.str1.8
	.align 8
.LC920:
	.string	"].proximity_mode = 'GEOMETRY''"
	.section	.rodata.str1.1
.LC921:
	.string	"].min_dist = "
.LC922:
	.string	"].max_dist = "
.LC923:
	.string	"].count = "
	.section	.rodata.str1.8
	.align 8
.LC924:
	.string	"].constant_offset_displace[0] = "
	.align 8
.LC925:
	.string	"].constant_offset_displace[1] = "
	.align 8
.LC926:
	.string	"].constant_offset_displace[2] = "
	.align 8
.LC927:
	.string	"].relative_offset_displace[0] = "
	.align 8
.LC928:
	.string	"].relative_offset_displace[1] = "
	.align 8
.LC929:
	.string	"].relative_offset_displace[2] = "
	.section	.rodata.str1.1
.LC930:
	.string	"].merge_threshold = "
.LC931:
	.string	"].fit_type = 'FIXED_COUNT'"
.LC932:
	.string	"].fit_type = 'FIT_LENGTH'"
.LC933:
	.string	"].fit_type = 'FIT_CURVE'"
.LC934:
	.string	"].segments = "
.LC935:
	.string	"].profile = "
.LC936:
	.string	"].material = "
.LC937:
	.string	"].double_threshold = "
.LC938:
	.string	"].ratio = "
.LC939:
	.string	"].vertex_group_factor = "
.LC940:
	.string	"].split_angle = "
.LC941:
	.string	"].levels = "
.LC942:
	.string	"].sculpt_levels = "
.LC943:
	.string	"].render_levels = "
	.section	.rodata.str1.8
	.align 8
.LC944:
	.string	"bpy.ops.object.multires_subdivide(modifier="
	.align 8
.LC945:
	.string	"bpy.ops.object.multires_higher_levels_delete(modifier="
	.align 8
.LC946:
	.string	"bpy.ops.object.multires_base_apply(modifier="
	.section	.rodata.str1.1
.LC947:
	.string	"].octree_depth = "
.LC948:
	.string	"].scale_x = "
.LC949:
	.string	"].scale_y = "
.LC950:
	.string	"].scale = "
.LC951:
	.string	"].sharpness = "
.LC952:
	.string	"].threshold = "
.LC953:
	.string	"].mode = 'BLOCKS'"
.LC954:
	.string	"].mode = 'SMOOTH'"
.LC955:
	.string	"].mode = 'SHARP'"
.LC956:
	.string	"].mode = 'VERTEX_GROUP'"
.LC957:
	.string	"].mode = 'ARMATURE'"
.LC958:
	.string	"].angle = "
.LC959:
	.string	"].steps = "
.LC960:
	.string	"].render_steps = "
.LC961:
	.string	"].iterations = "
.LC962:
	.string	"].screw_offset = "
.LC963:
	.string	"].branch_smoothing = "
.LC964:
	.string	"].thickness = "
.LC965:
	.string	"].thickness_clamp = "
.LC966:
	.string	"].offset = "
.LC967:
	.string	"].thickness_vertex_group = "
.LC968:
	.string	"].edge_crease_inner = "
.LC969:
	.string	"].edge_crease_outer = "
.LC970:
	.string	"].edge_crease_rim = "
.LC971:
	.string	"].material_offset = "
.LC972:
	.string	"].material_offset_rim = "
.LC973:
	.string	"].subdivision_type = 'SIMPLE'"
	.section	.rodata.str1.8
	.align 8
.LC974:
	.string	"].subdivision_type = 'CATMULL_CLARK'"
	.align 8
.LC975:
	.string	"].show_only_control_edges = True"
	.align 8
.LC976:
	.string	"].show_only_control_edges = False"
	.section	.rodata.str1.1
.LC977:
	.string	"].use_subsurf_uv = False"
.LC978:
	.string	"].use_subsurf_uv = True"
.LC979:
	.string	"].quad_method = 'BEAUTY'"
.LC980:
	.string	"].quad_method = 'FIXED'"
	.section	.rodata.str1.8
	.align 8
.LC981:
	.string	"].quad_method = 'FIXED_ALTERNATE'"
	.align 8
.LC982:
	.string	"].quad_method = 'SHORTEST_DIAGONAL'"
	.section	.rodata.str1.1
.LC983:
	.string	"].ngon_method = 'BEAUTY'"
.LC984:
	.string	"].ngon_method = 'CLIP'"
.LC985:
	.string	"].vertex_group = "
.LC986:
	.string	"].crease_weight = "
.LC987:
	.string	"].cast_type = 'SPHERE'"
.LC988:
	.string	"].cast_type = 'CYLINDER'"
.LC989:
	.string	"].cast_type = 'CUBOID'"
.LC990:
	.string	"].radius = "
.LC991:
	.string	"].size = "
.LC992:
	.string	"].factor = "
.LC993:
	.string	"].smooth_type = 'SIMPLE'"
	.section	.rodata.str1.8
	.align 8
.LC994:
	.string	"].smooth_type = 'LENGTH_WEIGHTED'"
	.section	.rodata.str1.1
.LC995:
	.string	"].rest_source = 'ORCO'"
.LC996:
	.string	"].rest_source = 'BIND'"
.LC997:
	.string	"].mid_level = "
.LC998:
	.string	"].lambda_factor = "
.LC999:
	.string	"].lambda_border = "
.LC1000:
	.string	"].precision = "
	.section	.rodata.str1.8
	.align 8
.LC1001:
	.string	"].wrap_method = 'NEAREST_SURFACEPOINT'"
	.section	.rodata.str1.1
.LC1002:
	.string	"].wrap_method = 'PROJECT'"
.LC1003:
	.string	"].project_limit = "
.LC1004:
	.string	"].subsurf_levels = "
	.section	.rodata.str1.8
	.align 8
.LC1005:
	.string	"].wrap_method = 'NEAREST_VERTEX'"
	.section	.rodata.str1.1
.LC1006:
	.string	"].limits[1] = "
.LC1007:
	.string	"].limits[0] = "
.LC1008:
	.string	"].deform_method = 'BEND'"
.LC1009:
	.string	"].deform_method = 'TAPER'"
.LC1010:
	.string	"].deform_method = 'STRETCH'"
.LC1011:
	.string	"].deform_method = 'TWIST'"
.LC1012:
	.string	"].texture_coords = 'LOCAL'"
.LC1013:
	.string	"].texture_coords = 'GLOBAL'"
.LC1014:
	.string	"].texture_coords = 'OBJECT'"
.LC1015:
	.string	"].texture_coords = 'UV'"
.LC1016:
	.string	"].time_offset = "
.LC1017:
	.string	"].lifetime = "
.LC1018:
	.string	"].damping_time = "
.LC1019:
	.string	"].start_position_x = "
.LC1020:
	.string	"].start_position_y = "
.LC1027:
	.string	"].settings.quality = "
.LC1029:
	.string	"].settings.time_scale = "
.LC1031:
	.string	"].settings.mass = "
.LC1033:
	.string	"].settings.spring_damping = "
.LC1035:
	.string	"].settings.air_damping = "
.LC1037:
	.string	"].settings.vel_damping = "
	.section	.rodata.str1.8
	.align 8
.LC1039:
	.string	"].settings.bending_stiffness = "
	.align 8
.LC1041:
	.string	"].settings.structural_stiffness = "
	.section	.rodata.str1.1
.LC1043:
	.string	"].settings.friction = "
.LC1045:
	.string	"].settings.speed = "
.LC1048:
	.string	"].settings.start_time = "
.LC1050:
	.string	"].settings.end_time = "
	.section	.rodata.str1.8
	.align 8
.LC1052:
	.string	"].settings.attraction_strength = "
	.align 8
.LC1054:
	.string	"].settings.attraction_radius = "
	.section	.rodata.str1.1
.LC1056:
	.string	"].settings.velocity_radius = "
	.section	.rodata.str1.8
	.align 8
.LC1058:
	.string	"].settings.velocity_strength = "
	.align 8
.LC1060:
	.string	"].settings.particle_influence = "
	.section	.rodata.str1.1
.LC1062:
	.string	"].settings.alpha_influence = "
	.section	.rodata.str1.8
	.align 8
.LC1064:
	.string	"].settings.inflow_velocity[0] = "
	.align 8
.LC1066:
	.string	"].settings.inflow_velocity[1] = "
	.align 8
.LC1068:
	.string	"].settings.inflow_velocity[2] = "
	.align 8
.LC1070:
	.string	"].settings.partial_slip_factor = "
	.section	.rodata.str1.1
.LC1072:
	.string	"].settings.impact_factor = "
	.section	.rodata.str1.8
	.align 8
.LC1074:
	.string	"].settings.initial_velocity[0] = "
	.align 8
.LC1076:
	.string	"].settings.initial_velocity[1] = "
	.align 8
.LC1078:
	.string	"].settings.initial_velocity[2] = "
	.section	.rodata.str1.1
.LC1080:
	.string	"].settings.resolution = "
	.section	.rodata.str1.8
	.align 8
.LC1082:
	.string	"].settings.preview_resolution = "
	.section	.rodata.str1.1
.LC1084:
	.string	"].settings.simulation_rate = "
.LC1086:
	.string	"].settings.frame_offset = "
.LC1088:
	.string	"].use_constant_offset = True"
.LC1090:
	.string	"].use_object_offset = True"
.LC1092:
	.string	"].use_merge_vertices = True"
	.section	.rodata.str1.8
	.align 8
.LC1094:
	.string	"].use_merge_vertices_cap = True"
	.section	.rodata.str1.1
.LC1096:
	.string	"].use_constant_offset = False"
.LC1098:
	.string	"].use_object_offset = False"
.LC1100:
	.string	"].use_merge_vertices = False"
	.section	.rodata.str1.8
	.align 8
.LC1101:
	.string	"].use_merge_vertices_cap = False"
	.section	.rodata.str1.1
.LC1102:
	.string	"tmp.pov"
.LC1103:
	.string	"// Start of file"
.LC1104:
	.string	"// End of file"
.LC1105:
	.string	"a"
.LC1106:
	.string	"aa_level "
.LC1107:
	.string	"aa_threshold "
.LC1108:
	.string	"abs "
.LC1109:
	.string	"absorption "
.LC1110:
	.string	"accuracy "
.LC1111:
	.string	"acos "
.LC1112:
	.string	"acosh "
.LC1113:
	.string	"adaptive "
.LC1114:
	.string	"adc_bailout "
.LC1115:
	.string	"agate "
.LC1116:
	.string	"agate_turb "
.LC1117:
	.string	"all "
.LC1118:
	.string	"all_intersections "
.LC1119:
	.string	"alpha "
.LC1120:
	.string	"altitude "
.LC1121:
	.string	"always_sample "
.LC1122:
	.string	"ambient "
.LC1123:
	.string	"ambient_light "
.LC1124:
	.string	"angle "
.LC1125:
	.string	"aperture "
.LC1126:
	.string	"append "
.LC1127:
	.string	"arc_angle "
.LC1128:
	.string	"area_light "
.LC1129:
	.string	"array "
.LC1130:
	.string	"asc "
.LC1131:
	.string	"ascii "
.LC1132:
	.string	"asin "
.LC1133:
	.string	"asinh "
.LC1134:
	.string	"assumed_gamma "
.LC1135:
	.string	"atan "
.LC1136:
	.string	"atan2 "
.LC1137:
	.string	"atanh "
.LC1138:
	.string	"autostop "
.LC1139:
	.string	"average "
.LC1140:
	.string	"b"
.LC1141:
	.string	"b_spline "
.LC1142:
	.string	"background "
.LC1143:
	.string	"bezier_spline "
.LC1144:
	.string	"bicubic_patch "
.LC1145:
	.string	"black_hole "
.LC1146:
	.string	"blob "
.LC1147:
	.string	"blue "
.LC1148:
	.string	"blur_samples "
.LC1149:
	.string	"bounded_by "
.LC1150:
	.string	"box "
.LC1151:
	.string	"boxed "
.LC1152:
	.string	"bozo "
.LC1153:
	.string	"break "
.LC1154:
	.string	"brick "
.LC1155:
	.string	"brick_size "
.LC1156:
	.string	"brightness "
.LC1157:
	.string	"brilliance "
.LC1158:
	.string	"bump_map "
.LC1159:
	.string	"bump_size "
.LC1160:
	.string	"bumps "
.LC1161:
	.string	"c"
.LC1162:
	.string	"camera "
.LC1163:
	.string	"case "
.LC1164:
	.string	"caustics "
.LC1165:
	.string	"ceil "
.LC1166:
	.string	"cells "
.LC1167:
	.string	"charset "
.LC1168:
	.string	"checker "
.LC1169:
	.string	"circular "
.LC1170:
	.string	"clipped_by "
.LC1171:
	.string	"clock "
.LC1172:
	.string	"clock_delta "
.LC1173:
	.string	"clock_on "
.LC1174:
	.string	"collect "
.LC1175:
	.string	"color "
.LC1176:
	.string	"color_map "
.LC1177:
	.string	"colour "
.LC1178:
	.string	"colour_map "
.LC1179:
	.string	"component "
.LC1180:
	.string	"composite "
.LC1181:
	.string	"concat "
.LC1182:
	.string	"cone "
.LC1183:
	.string	"confidence "
.LC1184:
	.string	"conic_sweep "
.LC1185:
	.string	"conserve_energy "
.LC1186:
	.string	"contained_by "
.LC1187:
	.string	"control0 "
.LC1188:
	.string	"control1 "
.LC1189:
	.string	"coords "
.LC1190:
	.string	"cos "
.LC1191:
	.string	"cosh "
.LC1192:
	.string	"count "
.LC1193:
	.string	"crackle "
.LC1194:
	.string	"crand "
.LC1195:
	.string	"cube "
.LC1196:
	.string	"cubic "
.LC1197:
	.string	"cubic_spline "
.LC1198:
	.string	"cubic_wave "
.LC1199:
	.string	"cutaway_textures "
.LC1200:
	.string	"cylinder "
.LC1201:
	.string	"cylindrical "
.LC1202:
	.string	"d"
.LC1203:
	.string	"debug "
.LC1204:
	.string	"declare "
.LC1205:
	.string	"default "
.LC1206:
	.string	"defined "
.LC1207:
	.string	"degrees "
.LC1208:
	.string	"density "
.LC1209:
	.string	"density_file "
.LC1210:
	.string	"density_map "
.LC1211:
	.string	"dents "
.LC1212:
	.string	"df3 "
.LC1213:
	.string	"difference "
.LC1214:
	.string	"diffuse "
.LC1215:
	.string	"dimension_size "
.LC1216:
	.string	"dimensions "
.LC1217:
	.string	"direction "
.LC1218:
	.string	"disc "
.LC1219:
	.string	"dispersion "
.LC1220:
	.string	"dispersion_samples "
.LC1221:
	.string	"dist_exp "
.LC1222:
	.string	"distance "
.LC1223:
	.string	"div "
.LC1224:
	.string	"double_illuminate "
.LC1225:
	.string	"e"
.LC1226:
	.string	"eccentricity "
.LC1227:
	.string	"else "
.LC1228:
	.string	"emission "
.LC1229:
	.string	"end "
.LC1230:
	.string	"error "
.LC1231:
	.string	"error_bound "
.LC1232:
	.string	"evaluate "
.LC1233:
	.string	"exp "
.LC1234:
	.string	"expand_thresholds "
.LC1235:
	.string	"exponent "
.LC1236:
	.string	"exterior "
.LC1237:
	.string	"extinction "
.LC1238:
	.string	"f"
.LC1239:
	.string	"face_indices "
.LC1240:
	.string	"facets "
.LC1241:
	.string	"fade_color "
.LC1242:
	.string	"fade_colour "
.LC1243:
	.string	"fade_distance "
.LC1244:
	.string	"fade_power "
.LC1245:
	.string	"falloff "
.LC1246:
	.string	"falloff_angle "
.LC1247:
	.string	"false "
.LC1248:
	.string	"fclose "
.LC1249:
	.string	"file_exists "
.LC1250:
	.string	"filter "
.LC1251:
	.string	"final_clock "
.LC1252:
	.string	"final_frame "
.LC1253:
	.string	"finish "
.LC1254:
	.string	"fisheye "
.LC1255:
	.string	"flatness "
.LC1256:
	.string	"flip "
.LC1257:
	.string	"floor "
.LC1258:
	.string	"focal_point "
.LC1259:
	.string	"fog "
.LC1260:
	.string	"fog_alt "
.LC1261:
	.string	"fog_offset "
.LC1262:
	.string	"fog_type "
.LC1263:
	.string	"fopen "
.LC1264:
	.string	"form "
.LC1265:
	.string	"frame_number "
.LC1266:
	.string	"frequency "
.LC1267:
	.string	"fresnel "
.LC1268:
	.string	"function "
.LC1269:
	.string	"g"
.LC1270:
	.string	"gather "
.LC1271:
	.string	"gif "
.LC1272:
	.string	"global_lights "
.LC1273:
	.string	"global_settings "
.LC1274:
	.string	"gradient "
.LC1275:
	.string	"granite "
.LC1276:
	.string	"gray "
.LC1277:
	.string	"gray_threshold "
.LC1278:
	.string	"green "
.LC1279:
	.string	"h"
.LC1280:
	.string	"height_field "
.LC1281:
	.string	"hexagon "
.LC1282:
	.string	"hf_gray_16 "
.LC1283:
	.string	"hierarchy "
.LC1284:
	.string	"hypercomplex "
.LC1285:
	.string	"hollow "
.LC1286:
	.string	"i"
.LC1287:
	.string	"if "
.LC1288:
	.string	"ifdef "
.LC1289:
	.string	"iff "
.LC1290:
	.string	"ifndef "
.LC1291:
	.string	"image_height "
.LC1292:
	.string	"image_map "
.LC1293:
	.string	"image_pattern "
.LC1294:
	.string	"image_width "
.LC1295:
	.string	"include "
.LC1296:
	.string	"initial_clock "
.LC1297:
	.string	"initial_frame "
.LC1298:
	.string	"inside "
.LC1299:
	.string	"inside_vector "
.LC1300:
	.string	"int "
.LC1301:
	.string	"interior "
.LC1302:
	.string	"interior_texture "
.LC1303:
	.string	"internal "
.LC1304:
	.string	"interpolate "
.LC1305:
	.string	"intersection "
.LC1306:
	.string	"intervals "
.LC1307:
	.string	"inverse "
.LC1308:
	.string	"ior "
.LC1309:
	.string	"irid "
.LC1310:
	.string	"irid_wavelength "
.LC1311:
	.string	"isosurface "
.LC1312:
	.string	"j"
.LC1313:
	.string	"jitter "
.LC1314:
	.string	"jpeg "
.LC1315:
	.string	"julia "
.LC1316:
	.string	"julia_fractal "
.LC1318:
	.string	"k"
.LC1320:
	.string	"l"
.LC1322:
	.string	"lambda "
.LC1324:
	.string	"lathe "
.LC1326:
	.string	"leopard "
.LC1328:
	.string	"light_group "
.LC1330:
	.string	"light_source "
.LC1332:
	.string	"linear_spline "
.LC1334:
	.string	"linear_sweep "
.LC1336:
	.string	"ln "
.LC1338:
	.string	"load_file "
.LC1340:
	.string	"local "
.LC1342:
	.string	"location "
.LC1344:
	.string	"log "
.LC1346:
	.string	"look_at "
.LC1348:
	.string	"looks_like "
.LC1350:
	.string	"low_error_factor "
.LC1352:
	.string	"m"
.LC1354:
	.string	"macro "
.LC1356:
	.string	"magnet "
.LC1358:
	.string	"major_radius "
.LC1360:
	.string	"mandel "
.LC1362:
	.string	"map_type "
.LC1364:
	.string	"marble "
.LC1366:
	.string	"material "
.LC1368:
	.string	"material_map "
.LC1370:
	.string	"matrix "
.LC1372:
	.string	"max "
.LC1374:
	.string	"max_extent "
.LC1376:
	.string	"max_gradient "
.LC1378:
	.string	"max_intersections "
.LC1380:
	.string	"max_iteration "
.LC1382:
	.string	"max_sample "
.LC1384:
	.string	"max_trace "
.LC1386:
	.string	"max_trace_level "
.LC1388:
	.string	"media "
.LC1390:
	.string	"media_attenuation "
.LC1392:
	.string	"media_interaction "
.LC1394:
	.string	"merge "
.LC1396:
	.string	"mesh "
.LC1398:
	.string	"mesh2 "
.LC1400:
	.string	"metallic "
.LC1401:
	.string	"method "
.LC1402:
	.string	"metric "
.LC1403:
	.string	"min "
.LC1404:
	.string	"min_extentv"
.LC1405:
	.string	"minimum_reuse "
.LC1406:
	.string	"mod "
.LC1407:
	.string	"mortar "
.LC1408:
	.string	"n"
.LC1409:
	.string	"natural_spline "
.LC1410:
	.string	"nearest_count "
.LC1411:
	.string	"no "
.LC1412:
	.string	"no_bump_scale "
.LC1413:
	.string	"no_image "
.LC1414:
	.string	"no_reflection "
.LC1415:
	.string	"no_shadow "
.LC1416:
	.string	"noise_generator "
.LC1417:
	.string	"normal "
.LC1418:
	.string	"normal_indices "
.LC1419:
	.string	"normal_map "
.LC1420:
	.string	"normal_vectors "
.LC1421:
	.string	"number_of_waves "
.LC1422:
	.string	"o"
.LC1423:
	.string	"object "
.LC1424:
	.string	"octaves "
.LC1425:
	.string	"off "
.LC1426:
	.string	"offset "
.LC1427:
	.string	"omega "
.LC1428:
	.string	"omnimax "
.LC1429:
	.string	"on "
.LC1430:
	.string	"once "
.LC1431:
	.string	"onion "
.LC1432:
	.string	"open "
.LC1433:
	.string	"orient "
.LC1434:
	.string	"orientation "
.LC1435:
	.string	"orthographic "
.LC1436:
	.string	"p"
.LC1437:
	.string	"panoramic "
.LC1438:
	.string	"parallel "
.LC1439:
	.string	"parametric "
.LC1440:
	.string	"pass_through "
.LC1441:
	.string	"pattern "
.LC1442:
	.string	"perspective "
.LC1443:
	.string	"pgm "
.LC1444:
	.string	"phase "
.LC1445:
	.string	"phong "
.LC1446:
	.string	"phong_size "
.LC1447:
	.string	"photons "
.LC1448:
	.string	"pi "
.LC1449:
	.string	"pigment "
.LC1450:
	.string	"pigment_map "
.LC1451:
	.string	"pigment_pattern "
.LC1452:
	.string	"planar "
.LC1453:
	.string	"plane "
.LC1454:
	.string	"png "
.LC1455:
	.string	"point_at "
.LC1456:
	.string	"poly "
.LC1457:
	.string	"poly_wave "
.LC1458:
	.string	"polygon "
.LC1459:
	.string	"pot "
.LC1460:
	.string	"pow "
.LC1461:
	.string	"ppm "
.LC1462:
	.string	"precision "
.LC1463:
	.string	"precompute "
.LC1464:
	.string	"pretrace_end "
.LC1465:
	.string	"pretrace_start "
.LC1466:
	.string	"prism "
.LC1467:
	.string	"prod "
.LC1468:
	.string	"projected_through "
.LC1469:
	.string	"pwr "
.LC1470:
	.string	"q"
.LC1471:
	.string	"quadratic_spline "
.LC1472:
	.string	"quadric "
.LC1473:
	.string	"quartic "
.LC1474:
	.string	"quaternion "
.LC1475:
	.string	"quick_color "
.LC1476:
	.string	"quick_colour "
.LC1477:
	.string	"quilted "
.LC1478:
	.string	"r"
.LC1479:
	.string	"radial "
.LC1480:
	.string	"radians "
.LC1481:
	.string	"radiosity "
.LC1482:
	.string	"radius "
.LC1483:
	.string	"rainbow "
.LC1484:
	.string	"ramp_wave "
.LC1485:
	.string	"rand"
.LC1486:
	.string	"range "
.LC1487:
	.string	"ratio "
.LC1488:
	.string	"read "
.LC1489:
	.string	"reciprocal "
.LC1490:
	.string	"recursion_limit  "
.LC1491:
	.string	"red "
.LC1492:
	.string	"reflection "
.LC1493:
	.string	"reflection_exponent  "
.LC1494:
	.string	"refraction  "
.LC1495:
	.string	"render  "
.LC1496:
	.string	"repeat  "
.LC1497:
	.string	"rgb "
.LC1498:
	.string	"rgbf "
.LC1499:
	.string	"rgbft "
.LC1500:
	.string	"rgbt "
.LC1501:
	.string	"right "
.LC1502:
	.string	"ripples "
.LC1503:
	.string	"rotate "
.LC1504:
	.string	"roughness "
.LC1505:
	.string	"s"
.LC1506:
	.string	"samples "
.LC1507:
	.string	"save_file "
.LC1508:
	.string	"scale "
.LC1509:
	.string	"scallop_wave "
.LC1510:
	.string	"scattering "
.LC1511:
	.string	"seed"
.LC1512:
	.string	"select "
.LC1513:
	.string	"shadowless "
.LC1514:
	.string	"sin "
.LC1515:
	.string	"sine_wave "
.LC1516:
	.string	"sinh "
.LC1517:
	.string	"size "
.LC1518:
	.string	"sky "
.LC1519:
	.string	"sky_sphere "
.LC1520:
	.string	"slice "
.LC1521:
	.string	"slope "
.LC1522:
	.string	"slope_map "
.LC1523:
	.string	"smooth "
.LC1524:
	.string	"smooth_triangle "
.LC1525:
	.string	"solid "
.LC1526:
	.string	"sor "
.LC1527:
	.string	"spacing "
.LC1528:
	.string	"specular "
.LC1529:
	.string	"sphere "
.LC1530:
	.string	"sphere_sweep "
.LC1531:
	.string	"spherical "
.LC1532:
	.string	"spiral1 "
.LC1533:
	.string	"spiral2 "
.LC1534:
	.string	"spline "
.LC1535:
	.string	"split_union "
.LC1536:
	.string	"spotlight "
.LC1537:
	.string	"spotted "
.LC1538:
	.string	"sqr "
.LC1539:
	.string	"sqrt "
.LC1540:
	.string	"statistics "
.LC1541:
	.string	"str "
.LC1542:
	.string	"strcmp "
.LC1543:
	.string	"strength "
.LC1544:
	.string	"strlen "
.LC1545:
	.string	"strlwr "
.LC1546:
	.string	"strupr "
.LC1547:
	.string	"sturm "
.LC1548:
	.string	"substr "
.LC1549:
	.string	"sum "
.LC1550:
	.string	"superellipsoid "
.LC1551:
	.string	"switch "
.LC1552:
	.string	"sys "
.LC1553:
	.string	"t"
.LC1554:
	.string	"tan "
.LC1555:
	.string	"tanh "
.LC1556:
	.string	"target "
.LC1557:
	.string	"text "
.LC1558:
	.string	"texture "
.LC1559:
	.string	"texture_list "
.LC1560:
	.string	"texture_map "
.LC1561:
	.string	"tga "
.LC1562:
	.string	"thickness "
.LC1563:
	.string	"threshold "
.LC1564:
	.string	"tiff "
.LC1565:
	.string	"tightness "
.LC1566:
	.string	"tile2 "
.LC1567:
	.string	"tiles "
.LC1568:
	.string	"tolerance "
.LC1569:
	.string	"toroidal "
.LC1570:
	.string	"torus "
.LC1571:
	.string	"trace "
.LC1572:
	.string	"transform "
.LC1573:
	.string	"translate "
.LC1574:
	.string	"transmit "
.LC1575:
	.string	"triangle "
.LC1576:
	.string	"triangle_wave  "
.LC1577:
	.string	"true "
.LC1578:
	.string	"ttf "
.LC1579:
	.string	"turb_depth "
.LC1580:
	.string	"turbulence "
.LC1581:
	.string	"type "
.LC1582:
	.string	"u"
.LC1583:
	.string	"u_steps "
.LC1584:
	.string	"ultra_wide_angle "
.LC1585:
	.string	"undef "
.LC1586:
	.string	"union "
.LC1587:
	.string	"up "
.LC1588:
	.string	"use_alpha "
.LC1589:
	.string	"use_color "
.LC1590:
	.string	"use_colour "
.LC1591:
	.string	"use_index "
.LC1592:
	.string	"utf8 "
.LC1593:
	.string	"uv_indices "
.LC1594:
	.string	"uv_mapping "
.LC1595:
	.string	"uv_vectors "
.LC1596:
	.string	"v"
.LC1597:
	.string	"v_steps "
.LC1598:
	.string	"val "
.LC1599:
	.string	"variance "
.LC1600:
	.string	"vaxis_rotate "
.LC1601:
	.string	"vcross "
.LC1602:
	.string	"vdot "
.LC1603:
	.string	"version "
.LC1604:
	.string	"vertex_vectors "
.LC1605:
	.string	"vlength "
.LC1606:
	.string	"vnormalize "
.LC1607:
	.string	"vrotate "
.LC1608:
	.string	"vstr "
.LC1609:
	.string	"vturbulence "
.LC1610:
	.string	"w"
.LC1611:
	.string	"warning "
.LC1612:
	.string	"warp "
.LC1613:
	.string	"water_level "
.LC1614:
	.string	"waves "
.LC1615:
	.string	"while "
.LC1616:
	.string	"width "
.LC1617:
	.string	"wood "
.LC1618:
	.string	"wrinkles "
.LC1619:
	.string	"write "
.LC1620:
	.string	"x"
.LC1621:
	.string	"y"
.LC1622:
	.string	"yes "
.LC1623:
	.string	"z"
	.section	.rodata.str1.8
	.align 8
.LC1624:
	.string	"povray -d -H1080 -W1920 tmp.pov"
	.section	.rodata.str1.1
.LC1625:
	.string	"convert tmp.png tmp.bmp"
.LC1626:
	.string	"mv tmp.bmp vram/"
.LC1627:
	.string	"rm tmp.pov tmp.png"
.LC1628:
	.string	"vram/"
.LC1630:
	.string	""
.LC1631:
	.string	"CHARS.INC"
.LC1632:
	.string	"#include "
.LC1633:
	.string	"\r"
.LC1634:
	.string	"COLORS.INC"
.LC1635:
	.string	"CONSTS.INC"
.LC1636:
	.string	"DEBUG.INC"
.LC1637:
	.string	"FINISH.INC"
.LC1638:
	.string	"GLASS.INC"
.LC1639:
	.string	"GOLDS.INC"
.LC1640:
	.string	"METALS.INC"
.LC1641:
	.string	"RAD_DEF.INC"
.LC1642:
	.string	"SHAPES2.INC"
.LC1643:
	.string	"SHAPES.INC"
.LC1644:
	.string	"SHAPESQ.INC"
.LC1645:
	.string	"SKIES.INC"
.LC1646:
	.string	"STAGE1.INC"
.LC1647:
	.string	"STARS.INC"
.LC1648:
	.string	"STDCAM.INC"
.LC1649:
	.string	"STONEOLD.INC"
.LC1650:
	.string	"STONES1.INC"
.LC1651:
	.string	"STONES2.INC"
.LC1652:
	.string	"STONES.INC"
.LC1653:
	.string	"TEXTURES.INC"
.LC1654:
	.string	"WOODMAPS.INC"
.LC1655:
	.string	"WOODS.INC"
.LC1656:
	.string	"blender -b -a -P tmp.py"
	.section	.rodata.str1.8
	.align 8
.LC1657:
	.string	"for a in *.bmp ; do dest=${a/*(0)/} ; mv $a $dest ; done"
	.section	.rodata.str1.1
.LC1658:
	.string	"mv *.bmp ./vram/"
.LC1659:
	.string	"rm tmp.py"
.LC1660:
	.string	"blender -b -P tmp.py"
.LC1661:
	.string	"mv "
.LC1662:
	.string	".bmp vram/"
.LC1663:
	.string	"background.bmp"
.LC1664:
	.string	"tmp.r"
.LC1665:
	.string	"setwd("
.LC1666:
	.string	"bmp(filename="
	.section	.rodata.str1.8
	.align 8
.LC1667:
	.string	", height = 1080, width = 1920,"
	.section	.rodata.str1.1
.LC1668:
	.string	"dev.off()"
.LC1669:
	.string	"plot(faithful)"
.LC1670:
	.string	"head(volcano)"
.LC1671:
	.string	"levelplot(volcano)"
.LC1672:
	.string	"Rscript tmp.r"
.LC1673:
	.string	"rm tmp.r 0.bmp"
.LC1674:
	.string	"require(lattice)"
.LC1677:
	.string	"0"
.LC1678:
	.string	"00"
.LC1679:
	.string	"    "
.LC1680:
	.string	"        "
.LC1681:
	.string	"for i in range("
.LC1682:
	.string	"):"
	.text
	.p2align 4,,15
	.globl	_ZN8MEMORY_T6POKE64Eyy
	.type	_ZN8MEMORY_T6POKE64Eyy, @function
_ZN8MEMORY_T6POKE64Eyy:
.L1017:
	push	r15
	push	r14
	push	r13
	push	r12
	mov	r12, rdx
	push	rbp
	mov	rbp, rdi
	push	rbx
	mov	rbx, rsi
	sub	rsp, 1720
	test	rdx, rdx
	js	.L1018
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rdx
.L1019:
	xor	eax, eax
	cmp	rbx, 55295
	movsd	QWORD PTR [rbp+0+rbx*8], xmm0
	seta	al
	neg	eax
	mov	edx, eax
	xor	eax, eax
	cmp	rbx, 56319
	setbe	al
	neg	eax
	test	edx, eax
	je	.L1023
	movsd	QWORD PTR [rbp+229368+rbx*8], xmm0
	sub	rbx, 54272
	movsd	xmm0, QWORD PTR [rbp+0+rbx*8]
	call	nearbyint
	movsd	xmm4, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm4
	movsd	QWORD PTR [rsp+8], xmm4
	jb	.L5614
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	r12, xmm0
	btc	r12, 63
.L1020:
.L1023:
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	cmp	rbx, 53272
	je	.L1024
.L5674:
	xor	edx, edx
	cmp	rbx, 53248
	sete	dl
	mov	ecx, edx
	xor	edx, edx
	neg	ecx
	cmp	rbx, 53250
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53252
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53254
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53256
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53258
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53260
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53262
	sete	dl
	neg	edx
	or	ecx, edx
	jne	.L5615
	xor	edx, edx
	cmp	rbx, 53249
	sete	dl
	mov	ecx, edx
	xor	edx, edx
	neg	ecx
	cmp	rbx, 53251
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53253
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53255
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53257
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53259
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53261
	sete	dl
	neg	edx
	or	ecx, edx
	xor	edx, edx
	cmp	rbx, 53263
	sete	dl
	neg	edx
	or	ecx, edx
	je	.L1059
	add	rax, 204
.L5610:
	mov	rsi, rax
	mov	rdx, r12
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
.L1030:
.L1059:
	cmp	rax, rbx
	je	.L1060
	lea	rdx, [rax+1]
	cmp	rdx, rbx
	je	.L5616
	lea	rdx, [rax+2]
	cmp	rbx, rdx
	je	.L5617
	lea	rdx, [rax+3]
	cmp	rbx, rdx
	je	.L5618
	lea	rdx, [rax+4]
	cmp	rbx, rdx
	je	.L5619
	lea	rdx, [rax+5]
	cmp	rbx, rdx
	je	.L5620
	lea	rdx, [rax+6]
	cmp	rbx, rdx
	je	.L5621
	lea	rdx, [rax+7]
	cmp	rbx, rdx
	je	.L5622
	lea	rdx, [rax+8]
	cmp	rbx, rdx
	je	.L5623
	lea	rdx, [rax+9]
	cmp	rbx, rdx
	je	.L5624
	lea	rdx, [rax+10]
	cmp	rbx, rdx
	je	.L5625
	lea	rdx, [rax+16]
	cmp	rbx, rdx
	je	.L5626
	lea	rdx, [rax+22]
	cmp	rbx, rdx
	je	.L5627
	lea	rdx, [rax+28]
	cmp	rbx, rdx
	je	.L5628
	lea	rdx, [rax+34]
	cmp	rbx, rdx
	je	.L5629
	lea	rdx, [rax+40]
	cmp	rbx, rdx
	je	.L5630
	lea	rdx, [rax+46]
	cmp	rbx, rdx
	je	.L5631
	lea	rdx, [rax+52]
	cmp	rbx, rdx
	je	.L5632
	lea	rdx, [rax+58]
	cmp	rbx, rdx
	je	.L5633
	lea	rdx, [rax+64]
	cmp	rbx, rdx
	je	.L5634
	lea	rdx, [rax+70]
	cmp	rbx, rdx
	je	.L5635
	lea	rdx, [rax+76]
	cmp	rbx, rdx
	je	.L5636
	lea	rdx, [rax+82]
	cmp	rbx, rdx
	je	.L5637
	lea	rdx, [rax+88]
	cmp	rbx, rdx
	je	.L5638
	lea	rdx, [rax+94]
	cmp	rbx, rdx
	je	.L5639
	lea	rdx, [rax+100]
	cmp	rbx, rdx
	je	.L5640
	lea	rdx, [rax+106]
	cmp	rbx, rdx
	je	.L5641
	lea	rdx, [rax+112]
	cmp	rbx, rdx
	je	.L5642
	lea	rdx, [rax+118]
	cmp	rbx, rdx
	je	.L5643
	lea	rdx, [rax+124]
	cmp	rbx, rdx
	je	.L5644
	lea	rdx, [rax+130]
	cmp	rbx, rdx
	je	.L5645
	lea	rdx, [rax+136]
	cmp	rbx, rdx
	je	.L5646
	lea	rdx, [rax+142]
	cmp	rbx, rdx
	je	.L5647
	lea	rdx, [rax+148]
	cmp	rbx, rdx
	je	.L5648
	lea	rdx, [rax+154]
	cmp	rbx, rdx
	je	.L5649
	lea	rdx, [rax+160]
	cmp	rbx, rdx
	je	.L5650
	lea	rdx, [rax+166]
	cmp	rbx, rdx
	je	.L5651
	lea	rdx, [rax+167]
	cmp	rbx, rdx
	je	.L5652
	lea	rdx, [rax+168]
	cmp	rbx, rdx
	je	.L5653
	lea	rcx, [rax+171]
	cmp	rbx, rcx
	je	.L5654
	lea	rdx, [rax+172]
	cmp	rbx, rdx
	je	.L5655
	lea	rdx, [rax+173]
	cmp	rbx, rdx
	je	.L5656
	lea	rdx, [rax+174]
	cmp	rbx, rdx
	je	.L5657
	lea	rdx, [rax+175]
	cmp	rbx, rdx
	je	.L5658
	lea	rdx, [rax+176]
	cmp	rbx, rdx
	je	.L5659
	lea	rdx, [rax+178]
	cmp	rbx, rdx
	je	.L5660
	lea	rdx, [rax+179]
	cmp	rbx, rdx
	je	.L5661
	lea	rdx, [rax+181]
	cmp	rbx, rdx
	je	.L5662
	lea	rdx, [rax+184]
	cmp	rbx, rdx
	je	.L5663
	lea	rdx, [rax+188]
	cmp	rbx, rdx
	je	.L5664
	lea	rdx, [rax+189]
	cmp	rbx, rdx
	je	.L5665
	lea	rdx, [rax+190]
	cmp	rbx, rdx
	je	.L1016
	lea	rdx, [rax+191]
	cmp	rbx, rdx
	je	.L3870
	lea	rdx, [rax+229]
	cmp	rbx, rdx
	je	.L5666
	lea	rdx, [rax+230]
	cmp	rbx, rdx
	je	.L5667
	lea	rdx, [rax+233]
	cmp	rbx, rdx
	je	.L5668
	lea	rdx, [rax+234]
	cmp	rbx, rdx
	je	.L5669
	lea	rdx, [rax+235]
	cmp	rbx, rdx
	je	.L5670
	lea	rdx, [rax+255]
	cmp	rbx, rdx
	je	.L5671
	test	rbx, rbx
	js	.L4071
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rbx
.L4072:
	movsd	xmm1, QWORD PTR [rbp+2392+rax*8]
	comisd	xmm1, xmm0
	ja	.L1016
	movsd	xmm2, QWORD PTR .LC1683[rip]
	addsd	xmm2, xmm1
	comisd	xmm0, xmm2
	ja	.L1016
.L4074:
	subsd	xmm0, xmm1
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L4075
	cvttsd2si	rax, xmm0
.L4076:
	mov	ecx, 40
	xor	edx, edx
	xor	ebx, ebx
	div	rcx
	lea	r15, [0+rdx*8]
	lea	r13, [32+rax*8]
	call	fb_GfxLock
	mov	rax, r12
	pxor	xmm5, xmm5
	add	r15, 32
	movsd	xmm6, QWORD PTR .LC59[rip]
	sal	rax, 6
	movsd	QWORD PTR [rsp+8], xmm5
	lea	r14, [rbp+0+rax]
	movsd	QWORD PTR [rsp+16], xmm6
.L4077:
	lea	rax, [r13+0+rbx]
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	xor	r12d, r12d
	cvtsi2sdq	xmm0, rax
	movsd	xmm1, QWORD PTR [rsp+16]
	pxor	xmm3, xmm3
	mulsd	xmm0, QWORD PTR .LC1684[rip]
	addsd	xmm1, xmm0
	subsd	xmm0, QWORD PTR [rsp+8]
	cvtsd2ss	xmm2, xmm1
	cvtsd2ss	xmm3, xmm0
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+40], xmm3
	jmp	.L4078
.L5673:
	movsd	xmm0, QWORD PTR [rbp+1616+rax]
.L5613:
.L4080:
.L4081:
	call	nearbyint
	movss	xmm3, DWORD PTR [rsp+24]
	xor	r8d, r8d
	xor	edi, edi
	cvttsd2si	rax, xmm0
	movss	xmm2, DWORD PTR [rsp+32]
	movss	xmm1, DWORD PTR [rsp+40]
	mov	ecx, 65535
	movss	xmm0, DWORD PTR [rsp+44]
	mov	edx, 2
	add	r12, 1
	mov	esi, eax
	call	fb_GfxLine
	cmp	r12, 8
	je	.L5672
.L4078:
	movsd	xmm0, QWORD PTR [r14+655352+rbx*8]
	call	nearbyint
	lea	rdx, [r15+r12]
	mov	ecx, r12d
	pxor	xmm5, xmm5
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	movsd	xmm2, QWORD PTR [rsp+16]
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	cvtsi2sdq	xmm0, rdx
	mov	esi, 128
	pxor	xmm6, xmm6
	mulsd	xmm0, QWORD PTR .LC1684[rip]
	cvttsd2si	rdx, xmm1
	sar	rsi, cl
	sal	rax, 3
	addsd	xmm2, xmm0
	subsd	xmm0, QWORD PTR [rsp+8]
	cvtsd2ss	xmm5, xmm2
	cvtsd2ss	xmm6, xmm0
	movss	DWORD PTR [rsp+32], xmm5
	movss	DWORD PTR [rsp+44], xmm6
	test	rdx, rsi
	je	.L5673
	movsd	xmm0, QWORD PTR [rbp+1608+rax]
	jmp	.L5613
	.p2align 4,,10
	.p2align 3
.L5614:
	cvttsd2si	r12, xmm0
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	cmp	rbx, 53272
	jne	.L5674
.L1024:
	cmp	r12, 15
	je	.L1027
	cmp	r12, 31
	je	.L5675
	cmp	r12, 47
	je	.L5676
	cmp	r12, 63
	je	.L5677
	cmp	r12, 79
	je	.L5678
	cmp	r12, 95
	je	.L5679
	cmp	r12, 111
	je	.L5680
	cmp	r12, 127
	je	.L5681
	cmp	r12, 143
	je	.L5682
	cmp	r12, 159
	je	.L5683
	cmp	r12, 175
	je	.L5684
	cmp	r12, 191
	je	.L5685
	cmp	r12, 207
	je	.L5686
	cmp	r12, 223
	je	.L5687
	cmp	r12, 239
	je	.L5688
	cmp	r12, 255
	jne	.L1059
.L1057:
	add	rax, 299
	mov	edx, 15360
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 60
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L5615:
	add	rax, 203
	jmp	.L5610
	.p2align 4,,10
	.p2align 3
.L1018:
	mov	rax, rdx
	and	edx, 1
	pxor	xmm0, xmm0
	shr	rax
	or	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, xmm0
	jmp	.L1019
	.p2align 4,,10
	.p2align 3
.L5617:
.L1065:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+16+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+24+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+32+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+40+rbx]
	call	nearbyint
	movsd	xmm5, QWORD PTR .LC0[rip]
	movsd	xmm6, QWORD PTR [rsp+16]
	comisd	xmm6, xmm5
	movsd	QWORD PTR [rsp+8], xmm5
	jnb	.L1068
	cvttsd2si	rax, xmm6
.L1069:
	sal	rax, 16
	movsd	xmm7, QWORD PTR [rsp+24]
	comisd	xmm7, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1070
	cvttsd2si	rax, xmm7
.L1071:
	sal	rax, 8
	movsd	xmm3, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm3, QWORD PTR [rsp+8]
	jnb	.L1072
	cvttsd2si	rax, xmm3
.L1073:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1074
	cvttsd2si	rax, xmm0
.L1075:
	sal	rax, 24
	or	rax, rdx
	js	.L1076
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1077:
	movsd	QWORD PTR [rbp+1608+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1060:
	mov	rdi, r12
	call	fb_ULongintToStr
	pxor	xmm2, xmm2
	mov	edx, 36
	mov	r8, -1
	mov	rcx, rax
	mov	esi, OFFSET FLAT:.LC1
	lea	rdi, [rsp+1648]
	movaps	XMMWORD PTR [rsp+1648], xmm2
	mov	QWORD PTR [rsp+1664], 0
	call	fb_StrConcat
	pxor	xmm5, xmm5
	mov	r8d, 22
	lea	rdi, [rsp+1680]
	mov	ecx, OFFSET FLAT:.LC2
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+1680], xmm5
	mov	QWORD PTR [rsp+1696], 0
	call	fb_StrConcat
	mov	rdi, rax
	call	fb_Shell
.L1063:
.L4084:
.L4085:
.L4086:
.L4087:
.L4088:
.L1016:
	add	rsp, 1720
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L1068:
	movapd	xmm1, xmm6
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1069
	.p2align 4,,10
	.p2align 3
.L5619:
.L1079:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+16+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+24+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+32+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+40+rbx]
	call	nearbyint
	movsd	xmm6, QWORD PTR .LC0[rip]
	movsd	xmm7, QWORD PTR [rsp+16]
	comisd	xmm7, xmm6
	movsd	QWORD PTR [rsp+8], xmm6
	jnb	.L1092
	cvttsd2si	rax, xmm7
.L1093:
	sal	rax, 16
	movsd	xmm3, QWORD PTR [rsp+24]
	comisd	xmm3, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1094
	cvttsd2si	rax, xmm3
.L1095:
	sal	rax, 8
	movsd	xmm2, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm2, QWORD PTR [rsp+8]
	jnb	.L1096
	cvttsd2si	rax, xmm2
.L1097:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1098
	cvttsd2si	rax, xmm0
.L1099:
	sal	rax, 24
	or	rax, rdx
	js	.L1100
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1101:
	movsd	QWORD PTR [rbp+1608+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L5616:
.L1062:
	mov	esi, 66
	mov	edi, OFFSET FLAT:.LC3
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L5618:
.L1067:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+16+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+24+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+32+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+40+rbx]
	call	nearbyint
	movsd	xmm6, QWORD PTR .LC0[rip]
	movsd	xmm7, QWORD PTR [rsp+16]
	comisd	xmm7, xmm6
	movsd	QWORD PTR [rsp+8], xmm6
	jnb	.L1080
	cvttsd2si	rax, xmm7
.L1081:
	sal	rax, 16
	movsd	xmm3, QWORD PTR [rsp+24]
	comisd	xmm3, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1082
	cvttsd2si	rax, xmm3
.L1083:
	sal	rax, 8
	movsd	xmm2, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm2, QWORD PTR [rsp+8]
	jnb	.L1084
	cvttsd2si	rax, xmm2
.L1085:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1086
	cvttsd2si	rax, xmm0
.L1087:
	sal	rax, 24
	or	rax, rdx
	js	.L1088
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1089:
	movsd	QWORD PTR [rbp+1608+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1074:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1075
	.p2align 4,,10
	.p2align 3
.L1072:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1073
	.p2align 4,,10
	.p2align 3
.L1070:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1071
	.p2align 4,,10
	.p2align 3
.L1076:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1077
	.p2align 4,,10
	.p2align 3
.L1086:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1087
	.p2align 4,,10
	.p2align 3
.L1084:
	movapd	xmm1, xmm2
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1085
	.p2align 4,,10
	.p2align 3
.L1082:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1083
	.p2align 4,,10
	.p2align 3
.L1080:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1081
	.p2align 4,,10
	.p2align 3
.L1027:
	add	rax, 299
	xor	edx, edx
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	xor	edx, edx
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L5620:
.L1091:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+16+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+24+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+32+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+40+rbx]
	call	nearbyint
	movsd	xmm5, QWORD PTR .LC0[rip]
	movsd	xmm6, QWORD PTR [rsp+16]
	comisd	xmm6, xmm5
	movsd	QWORD PTR [rsp+8], xmm5
	jb	.L5689
	movapd	xmm1, xmm6
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
.L1105:
	sal	rax, 16
	movsd	xmm7, QWORD PTR [rsp+24]
	comisd	xmm7, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1106
	cvttsd2si	rax, xmm7
.L1107:
	sal	rax, 8
	movsd	xmm3, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm3, QWORD PTR [rsp+8]
	jnb	.L1108
	cvttsd2si	rax, xmm3
.L1109:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1110
	cvttsd2si	rax, xmm0
.L1111:
	sal	rax, 24
	or	rax, rdx
	js	.L1112
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1113:
	movsd	QWORD PTR [rbp+1608+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1088:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1089
	.p2align 4,,10
	.p2align 3
.L5675:
.L1029:
	add	rax, 299
	mov	edx, 1024
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 4
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1092:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1093
	.p2align 4,,10
	.p2align 3
.L5676:
.L1032:
	add	rax, 299
	mov	edx, 2048
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 8
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L5689:
	cvttsd2si	rax, xmm6
	jmp	.L1105
	.p2align 4,,10
	.p2align 3
.L5623:
.L1127:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+48+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+56+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+64+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+72+rbx]
	call	nearbyint
	movsd	xmm2, QWORD PTR .LC0[rip]
	movsd	xmm3, QWORD PTR [rsp+16]
	comisd	xmm3, xmm2
	movsd	QWORD PTR [rsp+8], xmm2
	jnb	.L1140
	cvttsd2si	rax, xmm3
.L1141:
	sal	rax, 16
	movsd	xmm5, QWORD PTR [rsp+24]
	comisd	xmm5, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1142
	cvttsd2si	rax, xmm5
.L1143:
	sal	rax, 8
	movsd	xmm6, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm6, QWORD PTR [rsp+8]
	jnb	.L1144
	cvttsd2si	rax, xmm6
.L1145:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1146
	cvttsd2si	rax, xmm0
.L1147:
	sal	rax, 24
	or	rax, rdx
	js	.L1148
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1149:
	movsd	QWORD PTR [rbp+1616+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L5682:
.L1044:
	add	rax, 299
	mov	edx, 8192
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 32
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1098:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1099
	.p2align 4,,10
	.p2align 3
.L1096:
	movapd	xmm1, xmm2
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1097
	.p2align 4,,10
	.p2align 3
.L1094:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1095
	.p2align 4,,10
	.p2align 3
.L5621:
.L1103:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+48+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+56+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+64+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+72+rbx]
	call	nearbyint
	movsd	xmm2, QWORD PTR .LC0[rip]
	movsd	xmm5, QWORD PTR [rsp+16]
	comisd	xmm5, xmm2
	movsd	QWORD PTR [rsp+8], xmm2
	jnb	.L1116
	cvttsd2si	rax, xmm5
.L1117:
	sal	rax, 16
	movsd	xmm2, QWORD PTR [rsp+24]
	comisd	xmm2, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1118
	cvttsd2si	rax, xmm2
.L1119:
	sal	rax, 8
	movsd	xmm6, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm6, QWORD PTR [rsp+8]
	jnb	.L1120
	cvttsd2si	rax, xmm6
.L1121:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1122
	cvttsd2si	rax, xmm0
.L1123:
	sal	rax, 24
	or	rax, rdx
	js	.L1124
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1125:
	movsd	QWORD PTR [rbp+1616+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1100:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1101
	.p2align 4,,10
	.p2align 3
.L5677:
.L1034:
	add	rax, 299
	mov	edx, 3072
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 12
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1110:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1111
	.p2align 4,,10
	.p2align 3
.L1108:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1109
	.p2align 4,,10
	.p2align 3
.L1106:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1107
	.p2align 4,,10
	.p2align 3
.L5678:
.L1036:
	add	rax, 299
	mov	edx, 4096
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 16
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L5622:
.L1115:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+48+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+56+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+64+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+72+rbx]
	call	nearbyint
	movsd	xmm7, QWORD PTR .LC0[rip]
	movsd	xmm3, QWORD PTR [rsp+16]
	comisd	xmm3, xmm7
	movsd	QWORD PTR [rsp+8], xmm7
	jnb	.L1128
	cvttsd2si	rax, xmm3
.L1129:
	sal	rax, 16
	movsd	xmm5, QWORD PTR [rsp+24]
	comisd	xmm5, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1130
	cvttsd2si	rax, xmm5
.L1131:
	sal	rax, 8
	movsd	xmm7, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm7, QWORD PTR [rsp+8]
	jnb	.L1132
	cvttsd2si	rax, xmm7
.L1133:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1134
	cvttsd2si	rax, xmm0
.L1135:
	sal	rax, 24
	or	rax, rdx
	js	.L1136
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1137:
	movsd	QWORD PTR [rbp+1616+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1112:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1113
	.p2align 4,,10
	.p2align 3
.L5679:
.L1038:
	add	rax, 299
	mov	edx, 5120
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 20
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1122:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1123
	.p2align 4,,10
	.p2align 3
.L1120:
	movapd	xmm1, xmm6
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1121
	.p2align 4,,10
	.p2align 3
.L1118:
	movapd	xmm1, xmm2
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1119
	.p2align 4,,10
	.p2align 3
.L1116:
	movapd	xmm1, xmm5
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1117
	.p2align 4,,10
	.p2align 3
.L5680:
.L1040:
	add	rax, 299
	mov	edx, 6144
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 24
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1124:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1125
	.p2align 4,,10
	.p2align 3
.L5681:
.L1042:
	add	rax, 299
	mov	edx, 7168
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 28
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
	.p2align 4,,10
	.p2align 3
.L1134:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1135
	.p2align 4,,10
	.p2align 3
.L1132:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1133
	.p2align 4,,10
	.p2align 3
.L1130:
	movapd	xmm1, xmm5
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1131
	.p2align 4,,10
	.p2align 3
.L1128:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1129
	.p2align 4,,10
	.p2align 3
.L5624:
.L1139:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+48+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+56+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+64+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR [rbp+72+rbx]
	call	nearbyint
	movsd	xmm2, QWORD PTR .LC0[rip]
	movsd	xmm3, QWORD PTR [rsp+16]
	comisd	xmm3, xmm2
	movsd	QWORD PTR [rsp+8], xmm2
	jnb	.L1152
	cvttsd2si	rax, xmm3
.L1153:
	sal	rax, 16
	movsd	xmm5, QWORD PTR [rsp+24]
	comisd	xmm5, QWORD PTR [rsp+8]
	mov	rdx, rax
	jnb	.L1154
	cvttsd2si	rax, xmm5
.L1155:
	sal	rax, 8
	movsd	xmm7, QWORD PTR [rsp+32]
	or	rdx, rax
	comisd	xmm7, QWORD PTR [rsp+8]
	jnb	.L1156
	cvttsd2si	rax, xmm7
.L1157:
	or	rdx, rax
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L1158
	cvttsd2si	rax, xmm0
.L1159:
	sal	rax, 24
	or	rax, rdx
	js	.L1160
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rax
.L1161:
	movsd	QWORD PTR [rbp+1616+rbx], xmm0
	jmp	.L1016
	.p2align 4,,10
	.p2align 3
.L1136:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1137
.L5683:
.L1046:
	add	rax, 299
	mov	edx, 9216
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 36
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L1146:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1147
.L1144:
	movapd	xmm1, xmm6
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1145
.L1142:
	movapd	xmm1, xmm5
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1143
.L1140:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1141
.L5625:
.L1151:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+88+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+96+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+104+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+112+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+120+rbx]
	movsd	QWORD PTR [rbp+1624+rbx], xmm0
	jmp	.L1016
.L1148:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1149
.L5684:
.L1048:
	add	rax, 299
	mov	edx, 10240
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 40
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L1158:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1159
.L1156:
	movapd	xmm1, xmm7
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1157
.L1154:
	movapd	xmm1, xmm5
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1155
.L1152:
	movapd	xmm1, xmm3
	subsd	xmm1, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm1
	btc	rax, 63
	jmp	.L1153
.L5685:
.L1050:
	add	rax, 299
	mov	edx, 11264
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 44
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L5626:
.L1163:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+136+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+144+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+152+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+160+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+168+rbx]
	movsd	QWORD PTR [rbp+1632+rbx], xmm0
	jmp	.L1016
.L1160:
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L1161
.L5686:
.L1052:
	add	rax, 299
	mov	edx, 12288
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 48
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L5687:
.L1054:
	add	rax, 299
	mov	edx, 13312
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 52
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L5627:
.L1165:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+184+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+192+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+200+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+208+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+216+rbx]
	movsd	QWORD PTR [rbp+1640+rbx], xmm0
	jmp	.L1016
.L5688:
.L1056:
	add	rax, 299
	mov	edx, 14336
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 56
	mov	esi, 648
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	jmp	.L1059
.L5628:
.L1167:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+232+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+240+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+248+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+256+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+264+rbx]
	movsd	QWORD PTR [rbp+1648+rbx], xmm0
	jmp	.L1016
.L5629:
.L1169:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+280+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+288+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+296+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+304+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+312+rbx]
	movsd	QWORD PTR [rbp+1656+rbx], xmm0
	jmp	.L1016
.L5630:
.L1171:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+320+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+328+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+336+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+352+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+360+rbx]
	movsd	QWORD PTR [rbp+1408+rbx], xmm0
	jmp	.L1016
.L5631:
.L1173:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+376+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+384+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+392+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+400+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+408+rbx]
	movsd	QWORD PTR [rbp+1416+rbx], xmm0
	jmp	.L1016
.L5632:
.L1175:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+424+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+432+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+440+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+448+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+456+rbx]
	movsd	QWORD PTR [rbp+1424+rbx], xmm0
	jmp	.L1016
.L5633:
.L1177:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+472+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+480+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+488+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+496+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+504+rbx]
	movsd	QWORD PTR [rbp+1432+rbx], xmm0
	jmp	.L1016
.L5634:
.L1179:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+520+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+528+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+536+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+544+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+552+rbx]
	movsd	QWORD PTR [rbp+1440+rbx], xmm0
	jmp	.L1016
.L5635:
.L1181:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+568+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+576+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+584+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+592+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+600+rbx]
	movsd	QWORD PTR [rbp+1448+rbx], xmm0
	jmp	.L1016
.L5637:
.L1185:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+664+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+672+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+680+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+688+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+696+rbx]
	movsd	QWORD PTR [rbp+1464+rbx], xmm0
	jmp	.L1016
.L5636:
.L1183:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+616+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+624+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+632+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+640+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+648+rbx]
	movsd	QWORD PTR [rbp+1456+rbx], xmm0
	jmp	.L1016
.L5672:
.L4082:
	add	rbx, 1
	cmp	rbx, 8
	jne	.L4077
.L4083:
	lea	eax, [r13+8]
	mov	edi, r13d
	mov	esi, eax
	call	fb_GfxUnlock
	jmp	.L1016
.L5639:
.L1189:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+760+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+768+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+776+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+784+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+792+rbx]
	movsd	QWORD PTR [rbp+1480+rbx], xmm0
	jmp	.L1016
.L5638:
.L1187:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+712+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+720+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+728+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+736+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+744+rbx]
	movsd	QWORD PTR [rbp+1472+rbx], xmm0
	jmp	.L1016
.L4075:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L4076
.L4071:
	mov	rdx, rbx
	and	ebx, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rbx
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, xmm0
	jmp	.L4072
.L5671:
.L3883:
	xor	edi, edi
	call	fb_End
	jmp	.L1016
.L5670:
.L3881:
	test	r12, r12
	je	.L3884
	cmp	r12, 1
	je	.L5690
	cmp	r12, 2
	je	.L5691
	cmp	r12, 3
	je	.L5692
	cmp	r12, 4
	je	.L5693
	cmp	r12, 5
	je	.L5694
	cmp	r12, 6
	je	.L5695
	cmp	r12, 7
	je	.L5696
	cmp	r12, 8
	je	.L5697
	cmp	r12, 9
	je	.L5698
	cmp	r12, 10
	je	.L5699
	cmp	r12, 11
	je	.L5700
	cmp	r12, 12
	je	.L5701
	cmp	r12, 13
	je	.L5702
	cmp	r12, 14
	je	.L5703
	cmp	r12, 15
	je	.L5704
	cmp	r12, 16
	je	.L5705
	cmp	r12, 17
	je	.L5706
	cmp	r12, 18
	je	.L5707
	cmp	r12, 19
	je	.L5708
	cmp	r12, 20
	je	.L5709
	cmp	r12, 21
	je	.L5710
	cmp	r12, 22
	je	.L5711
	cmp	r12, 23
	je	.L5712
	cmp	r12, 24
	je	.L5713
	cmp	r12, 25
	je	.L5714
	cmp	r12, 26
	je	.L5715
	cmp	r12, 27
	je	.L5716
	cmp	r12, 28
	je	.L5717
	cmp	r12, 29
	je	.L5718
	cmp	r12, 30
	je	.L5719
	cmp	r12, 31
	je	.L5720
	cmp	r12, 32
	je	.L5721
	cmp	r12, 33
	je	.L5722
	cmp	r12, 34
	je	.L5723
	cmp	r12, 35
	je	.L5724
	cmp	r12, 36
	je	.L5725
	cmp	r12, 37
	je	.L5726
	cmp	r12, 38
	je	.L5727
	cmp	r12, 39
	je	.L5728
	cmp	r12, 40
	je	.L5729
	cmp	r12, 41
	je	.L5730
	cmp	r12, 42
	je	.L5731
	cmp	r12, 43
	je	.L5732
	cmp	r12, 44
	je	.L5733
	cmp	r12, 45
	je	.L5734
	cmp	r12, 46
	je	.L5735
	cmp	r12, 47
	je	.L5736
	cmp	r12, 48
	je	.L5737
	cmp	r12, 49
	je	.L5738
	cmp	r12, 50
	je	.L5739
	cmp	r12, 51
	je	.L5740
	cmp	r12, 52
	je	.L5741
	cmp	r12, 53
	je	.L5742
	cmp	r12, 54
	je	.L5743
	cmp	r12, 55
	je	.L5744
	cmp	r12, 56
	je	.L5745
	cmp	r12, 57
	je	.L5746
	cmp	r12, 58
	je	.L5747
	cmp	r12, 59
	je	.L5748
	cmp	r12, 60
	je	.L5749
	cmp	r12, 61
	je	.L5750
	cmp	r12, 62
	je	.L5751
	cmp	r12, 63
	je	.L5752
	cmp	r12, 64
	je	.L5753
	cmp	r12, 65
	je	.L5754
	cmp	r12, 66
	je	.L5755
	cmp	r12, 67
	je	.L5756
	cmp	r12, 68
	je	.L5757
	cmp	r12, 69
	je	.L5758
	cmp	r12, 70
	je	.L5759
	cmp	r12, 71
	je	.L5760
	cmp	r12, 72
	je	.L5761
	cmp	r12, 73
	je	.L5762
	cmp	r12, 74
	je	.L5763
	cmp	r12, 75
	je	.L5764
	cmp	r12, 76
	je	.L5765
	cmp	r12, 77
	je	.L5766
	cmp	r12, 78
	je	.L5767
	cmp	r12, 79
	jne	.L1016
.L4070:
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 16
	lea	r9, [rsp+1552]
	mov	r13, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1681
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1682
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 13
	add	rax, 203
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 77
	mov	rdi, rbp
	add	rax, 235
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	jmp	.L1016
.L5669:
.L3879:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5767:
.L4040:
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 16
	lea	r9, [rsp+1616]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1681
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1682
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 13
	add	rax, 203
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 77
	mov	rdi, rbp
	add	rax, 235
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	jmp	.L1016
.L5766:
.L4038:
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4121
	je	.L5592
.L4121:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L4043
	je	.L5768
.L4043:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L4045
	je	.L5769
.L4045:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L4047
	je	.L5770
.L4047:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L4049
	je	.L5771
.L4049:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L4051
	je	.L5772
.L4051:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L4053
	je	.L5773
.L4053:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L4055
	je	.L5774
.L4055:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L4057
	je	.L5775
.L4057:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L4059
	je	.L5776
.L4059:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L4061
	je	.L5777
.L4061:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L4063
	je	.L5778
.L4063:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L4065
	je	.L5779
.L4065:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L4067
	je	.L5780
.L4067:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1016
	jne	.L1016
.L4069:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC1680
	or	rsi, -1
	mov	edi, OFFSET FLAT:TB$
	call	fb_StrAssign
	jmp	.L1016
.L5780:
.L4068:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC1679
	or	rsi, -1
	mov	edi, OFFSET FLAT:TB$
	call	fb_StrAssign
	jmp	.L1016
.L5772:
.L4052:
	xor	r8d, r8d
	mov	ecx, 3
	mov	edx, OFFSET FLAT:.LC1678
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD1$
	call	fb_StrAssign
	jmp	.L1016
.L5773:
.L4054:
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD2$
	call	fb_StrAssign
	jmp	.L1016
.L5774:
.L4056:
	xor	r8d, r8d
	mov	ecx, 2
	mov	edx, OFFSET FLAT:.LC1677
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD2$
	call	fb_StrAssign
	jmp	.L1016
.L5775:
.L4058:
	xor	r8d, r8d
	mov	ecx, 3
	mov	edx, OFFSET FLAT:.LC1678
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD2$
	call	fb_StrAssign
	jmp	.L1016
.L5776:
.L4060:
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD3$
	call	fb_StrAssign
	jmp	.L1016
.L5777:
.L4062:
	xor	r8d, r8d
	mov	ecx, 2
	mov	edx, OFFSET FLAT:.LC1677
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD3$
	call	fb_StrAssign
	jmp	.L1016
.L5778:
.L4064:
	xor	r8d, r8d
	mov	ecx, 3
	mov	edx, OFFSET FLAT:.LC1678
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD3$
	call	fb_StrAssign
	jmp	.L1016
.L5779:
.L4066:
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:TB$
	call	fb_StrAssign
	jmp	.L1016
.L5762:
.L4030:
	lea	rax, [rbp+1816+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5761:
.L4028:
	lea	rax, [rbp+1808+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5760:
.L4026:
	lea	rax, [rbp+1808+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5759:
.L4024:
	lea	rax, [rbp+1800+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5758:
.L4022:
	lea	rax, [rbp+1800+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5757:
.L4020:
	lea	rax, [rbp+1792+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5756:
.L4018:
	lea	rax, [rbp+1784+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5755:
.L4016:
	lea	rax, [rbp+1784+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5764:
.L4034:
	lea	rax, [rbp+1824+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5763:
.L4032:
	lea	rax, [rbp+1816+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5765:
.L4036:
	lea	rax, [rbp+1824+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5592:
.L4041:
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD0$
	call	fb_StrAssign
	jmp	.L1016
.L5768:
.L4044:
	xor	r8d, r8d
	mov	ecx, 2
	mov	edx, OFFSET FLAT:.LC1677
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD0$
	call	fb_StrAssign
	jmp	.L1016
.L5769:
.L4046:
	xor	r8d, r8d
	mov	ecx, 3
	mov	edx, OFFSET FLAT:.LC1678
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD0$
	call	fb_StrAssign
	jmp	.L1016
.L5770:
.L4048:
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD1$
	call	fb_StrAssign
	jmp	.L1016
.L5771:
.L4050:
	xor	r8d, r8d
	mov	ecx, 2
	mov	edx, OFFSET FLAT:.LC1677
	or	rsi, -1
	mov	edi, OFFSET FLAT:PAD1$
	call	fb_StrAssign
	jmp	.L1016
.L5754:
.L4014:
	lea	rax, [rbp+1776+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5753:
.L4012:
	lea	rax, [rbp+1776+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5752:
.L4010:
	lea	rax, [rbp+1768+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5751:
.L4008:
	lea	rax, [rbp+1768+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5750:
.L4006:
	lea	rax, [rbp+1760+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5749:
.L4004:
	lea	rax, [rbp+1760+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5748:
.L4002:
	lea	rax, [rbp+1752+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5747:
.L4000:
	lea	rax, [rbp+1752+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5746:
.L3998:
	lea	rax, [rbp+1744+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5745:
.L3996:
	lea	rax, [rbp+1744+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5744:
.L3994:
	lea	rax, [rbp+1736+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5743:
.L3992:
	lea	rax, [rbp+1736+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5742:
.L3990:
	lea	rax, [rbp+1728+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5741:
.L3988:
	lea	rax, [rbp+1728+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5740:
.L3986:
	lea	rax, [rbp+1720+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5739:
.L3984:
	lea	rax, [rbp+1720+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5738:
.L3982:
	lea	rax, [rbp+1712+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5737:
.L3980:
	lea	rax, [rbp+1712+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5736:
.L3978:
	lea	rax, [rbp+1704+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5735:
.L3976:
	lea	rax, [rbp+1704+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5734:
.L3974:
	lea	rax, [rbp+1696+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5733:
.L3972:
	lea	rax, [rbp+1696+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5732:
.L3970:
	lea	rax, [rbp+1688+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5731:
.L3968:
	lea	rax, [rbp+1688+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5730:
.L3966:
	lea	rax, [rbp+1680+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5729:
.L3964:
	lea	rax, [rbp+1680+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5728:
.L3962:
	lea	rax, [rbp+1672+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5727:
.L3960:
	lea	rax, [rbp+1672+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5726:
.L3958:
	lea	rax, [rbp+1664+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5725:
.L3956:
	lea	rax, [rbp+1664+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5724:
.L3954:
	lea	rax, [rbp+1656+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5723:
.L3952:
	lea	rax, [rbp+1656+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5722:
.L3950:
	lea	rax, [rbp+1648+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5721:
.L3948:
	lea	rax, [rbp+1648+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5720:
.L3946:
	lea	rax, [rbp+1640+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5719:
.L3944:
	lea	rax, [rbp+1640+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5718:
.L3942:
	lea	rax, [rbp+1632+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5717:
.L3940:
	lea	rax, [rbp+1632+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5716:
.L3938:
	lea	rax, [rbp+1624+rax*8]
	movsd	xmm0, QWORD PTR .LC1676[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5715:
.L3936:
	lea	rax, [rbp+1624+rax*8]
	movsd	xmm0, QWORD PTR .LC1675[rip]
	mulsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5714:
.L3934:
	lea	rax, [rbp+1824+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5713:
.L3932:
	lea	rax, [rbp+1816+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5712:
.L3930:
	lea	rax, [rbp+1808+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5711:
.L3928:
	lea	rax, [rbp+1800+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5710:
.L3926:
	lea	rax, [rbp+1792+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5709:
.L3924:
	lea	rax, [rbp+1784+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5708:
.L3922:
	lea	rax, [rbp+1776+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5707:
.L3920:
	lea	rax, [rbp+1768+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5706:
.L3918:
	lea	rax, [rbp+1760+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5705:
.L3916:
	lea	rax, [rbp+1752+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5704:
.L3914:
	lea	rax, [rbp+1744+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5703:
.L3912:
	lea	rax, [rbp+1736+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5702:
.L3910:
	lea	rax, [rbp+1728+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5701:
.L3908:
	lea	rax, [rbp+1720+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5700:
.L3906:
	lea	rax, [rbp+1712+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5699:
.L3904:
	lea	rax, [rbp+1704+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5698:
.L3902:
	lea	rax, [rbp+1696+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5697:
.L3900:
	lea	rax, [rbp+1688+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5696:
.L3898:
	lea	rax, [rbp+1680+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5695:
.L3896:
	lea	rax, [rbp+1672+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5694:
.L3894:
	lea	rax, [rbp+1664+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5693:
.L3892:
	lea	rax, [rbp+1656+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5692:
.L3890:
	lea	rax, [rbp+1648+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5691:
.L3888:
	lea	rax, [rbp+1640+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5690:
.L3886:
	lea	rax, [rbp+1632+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L3884:
	lea	rax, [rbp+1624+rax*8]
	pxor	xmm0, xmm0
	subsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rax], xmm0
	jmp	.L1016
.L5668:
.L3877:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5667:
.L3874:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	xor	r9d, r9d
	xor	r8d, r8d
	xor	ecx, ecx
	mov	rdx, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	esi, -2147483644
	xor	edi, edi
	movsd	xmm0, QWORD PTR .LC77[rip]
	sal	rax, 3
	movsd	xmm1, QWORD PTR [rbp+1856+rax]
	mulsd	xmm1, xmm0
	mulsd	xmm0, QWORD PTR [rbp+1848+rax]
	push	rax
	push	0
	push	0
	push	0
	cvtsd2ss	xmm1, xmm1
	cvtsd2ss	xmm0, xmm0
	call	fb_GfxDrawString
	add	rsp, 32
	jmp	.L1016
.L5666:
.L3872:
	test	r12, r12
	jne	.L1016
.L3875:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1674
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L3870:
	mov	esi, 13
	mov	edi, OFFSET FLAT:.LC1672
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 4
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1661
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1662
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	xor	edx, edx
	mov	rdi, rbp
	add	rax, 171
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1628
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rsi, QWORD PTR IMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload
	push	0
	mov	r9d, -65536
	xor	edi, edi
	push	0
	mov	rsi, QWORD PTR IMAGE$[rip]
	mov	r8d, r9d
	mov	ecx, r9d
	push	-1
	mov	edx, r9d
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	OFFSET FLAT:fb_hPutAlpha
	push	6
	push	0
	call	fb_GfxPut
	add	rsp, 48
	mov	esi, 14
	mov	edi, OFFSET FLAT:.LC1673
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	jmp	.L1016
.L5665:
.L3857:
	test	r12, r12
	je	.L3862
	cmp	r12, 1
	je	.L5781
	cmp	r12, 2
	je	.L5782
	cmp	r12, 3
	je	.L5783
	cmp	r12, 4
	jne	.L1016
.L3869:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1671
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5664:
.L3855:
	mov	edi, -65536
	mov	ebx, 1
	call	fb_Cls
	mov	esi, 14
	mov	edi, OFFSET FLAT:.LC1663
	sal	rbx, 63
	call	fb_StrAllocTempDescZEx
	xor	edx, edx
	xor	esi, esi
	mov	rdi, rax
	call	fb_GfxBload
	movsd	xmm2, QWORD PTR .LC0[rip]
	mov	DWORD PTR OFFSET$[rip], 0
	movsd	QWORD PTR [rsp+8], xmm2
.L3858:
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, DWORD PTR OFFSET$[rip]
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, rdx
	addsd	xmm0, QWORD PTR [rbp+2392+rax*8]
	call	nearbyint
	comisd	xmm0, QWORD PTR [rsp+8]
	jnb	.L3859
	cvttsd2si	rax, xmm0
.L3860:
	mov	rsi, rax
	mov	edx, 32
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR OFFSET$[rip]
	add	eax, 1
	mov	DWORD PTR OFFSET$[rip], eax
	cmp	eax, 1024
	jbe	.L3858
	jmp	.L1016
.L5783:
.L3868:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1670
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5781:
.L3864:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1668
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edi, 1
	call	fb_FileClose
	jmp	.L1016
.L3862:
	mov	esi, 5
	mov	edi, OFFSET FLAT:.LC1664
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 3
	mov	rdi, rax
	call	fb_FileOpen
	lea	r9, [rsp+1328]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 7
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1665
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1392]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1456]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 14
	lea	r9, [rsp+1488]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1666
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 5
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 31
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1667
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5782:
.L3866:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1669
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L3859:
	subsd	xmm0, QWORD PTR [rsp+8]
	cvttsd2si	rax, xmm0
	xor	rax, rbx
	jmp	.L3860
.L5663:
.L3852:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1480+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1488+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 16
	mov	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1496+rbx]
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	DWORD PTR SYS_OFFSET$[rip], eax
	jmp	.L1016
.L5662:
.L3848:
	mov	rdi, rbp
	xor	edx, edx
	mov	rsi, rcx
	xor	r13d, r13d
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	lea	r12, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1456+r12]
	call	nearbyint
	cvttsd2si	ebx, xmm0
	movsd	xmm0, QWORD PTR [rbp+1464+r12]
	lea	r12, [rsp+1648]
	lea	rbp, [rsp+1680]
	call	nearbyint
	cvttsd2si	r14d, xmm0
	jmp	.L3853
.L5784:
	movzx	eax, bl
	add	ebx, 1
	mov	edi, eax
	call	fb_UIntToStr
	mov	edx, 6
	mov	rdi, r12
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r13d
	rep stosd
	mov	rcx, rsi
	mov	rdi, r12
	mov	esi, OFFSET FLAT:.LC1628
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, rbp
	mov	r8d, 5
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r13d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC741
	mov	rdi, rbp
	call	fb_StrConcat
	mov	rsi, QWORD PTR IMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload
	mov	esi, 1
	mov	edi, 10
	call	fb_SleepEx
	push	0
	mov	r9d, -65536
	xor	edi, edi
	push	0
	mov	rsi, QWORD PTR IMAGE$[rip]
	mov	r8d, r9d
	mov	ecx, r9d
	push	-1
	mov	edx, r9d
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	OFFSET FLAT:fb_hPutPSet
	push	1
	push	0
	call	fb_GfxPut
	add	rsp, 48
.L3853:
	cmp	bl, r14b
	jbe	.L5784
	jmp	.L1016
.L5661:
.L3846:
	lea	rdx, [0+rax*8]
	test	r12, r12
	js	.L3849
	pxor	xmm0, xmm0
	cvtsi2sdq	xmm0, r12
.L3850:
	movsd	QWORD PTR [rbp+1440+rdx], xmm0
	jmp	.L1016
.L5660:
.L3844:
	mov	esi, 20
	mov	edi, OFFSET FLAT:.LC1660
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	edx, 4
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1661
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1662
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	xor	edx, edx
	mov	rdi, rbp
	add	rax, 171
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1628
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rsi, QWORD PTR IMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload
	push	0
	mov	r9d, -65536
	xor	edi, edi
	push	0
	mov	rsi, QWORD PTR IMAGE$[rip]
	mov	r8d, r9d
	mov	ecx, r9d
	push	-1
	mov	edx, r9d
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	OFFSET FLAT:fb_hPutAlpha
	push	6
	push	0
	call	fb_GfxPut
	add	rsp, 48
	jmp	.L1016
.L3849:
	mov	rax, r12
	mov	rcx, r12
	pxor	xmm0, xmm0
	shr	rax
	and	ecx, 1
	or	rax, rcx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, xmm0
	jmp	.L3850
.L5659:
.L2811:
	mov	esi, 23
	mov	edi, OFFSET FLAT:.LC1656
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	esi, 56
	mov	edi, OFFSET FLAT:.LC1657
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	esi, 16
	mov	edi, OFFSET FLAT:.LC1658
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1659
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	jmp	.L1016
.L5658:
.L1230:
	lea	rdx, [0+rax*8]
	movsd	xmm1, QWORD PTR .LC56[rip]
	movsd	xmm0, QWORD PTR [rbp+1600+rdx]
	ucomisd	xmm0, xmm1
	jp	.L4116
	je	.L4980
.L4116:
	movsd	xmm6, QWORD PTR .LC59[rip]
	ucomisd	xmm0, xmm6
	movsd	QWORD PTR [rsp+16], xmm6
	jp	.L2814
	je	.L5785
.L2814:
	movsd	xmm2, QWORD PTR .LC62[rip]
	ucomisd	xmm0, xmm2
	jp	.L2816
	je	.L4982
.L2816:
	movsd	xmm3, QWORD PTR .LC65[rip]
	ucomisd	xmm0, xmm3
	jp	.L2818
	je	.L4983
.L2818:
	movsd	xmm13, QWORD PTR .LC68[rip]
	ucomisd	xmm0, xmm13
	jp	.L3329
	je	.L5239
.L3329:
	movsd	xmm12, QWORD PTR .LC71[rip]
	ucomisd	xmm0, xmm12
	jp	.L3774
	je	.L5786
.L3774:
	movsd	xmm11, QWORD PTR .LC74[rip]
	ucomisd	xmm0, xmm11
	jp	.L3783
	je	.L5787
.L3783:
	movsd	xmm10, QWORD PTR .LC77[rip]
	ucomisd	xmm0, xmm10
	jp	.L3785
	je	.L5788
.L3785:
	movsd	xmm9, QWORD PTR .LC80[rip]
	ucomisd	xmm0, xmm9
	jp	.L3787
	je	.L5789
.L3787:
	movsd	xmm8, QWORD PTR .LC83[rip]
	ucomisd	xmm0, xmm8
	jp	.L3789
	je	.L5790
.L3789:
	movsd	xmm7, QWORD PTR .LC86[rip]
	ucomisd	xmm0, xmm7
	jp	.L3791
	je	.L5791
.L3791:
	movsd	xmm6, QWORD PTR .LC88[rip]
	ucomisd	xmm0, xmm6
	jp	.L3793
	je	.L5792
.L3793:
	movsd	xmm5, QWORD PTR .LC90[rip]
	ucomisd	xmm0, xmm5
	jp	.L3795
	je	.L5793
.L3795:
	movsd	xmm4, QWORD PTR .LC92[rip]
	ucomisd	xmm0, xmm4
	jp	.L1016
	jne	.L1016
.L3797:
	movsd	xmm0, QWORD PTR [rbp+1608+rdx]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4120
	je	.L5475
.L4120:
	ucomisd	xmm0, xmm1
	jp	.L3800
	je	.L5794
.L3800:
	ucomisd	xmm0, QWORD PTR [rsp+16]
	jp	.L3802
	je	.L5795
.L3802:
	ucomisd	xmm0, xmm2
	jp	.L3804
	je	.L5796
.L3804:
	ucomisd	xmm0, xmm3
	jp	.L3806
	je	.L5797
.L3806:
	ucomisd	xmm0, xmm13
	jp	.L3808
	je	.L5798
.L3808:
	ucomisd	xmm0, xmm12
	jp	.L3810
	je	.L5799
.L3810:
	ucomisd	xmm0, xmm11
	jp	.L3812
	je	.L5800
.L3812:
	ucomisd	xmm0, xmm10
	jp	.L3814
	je	.L5801
.L3814:
	ucomisd	xmm0, xmm9
	jp	.L3816
	je	.L5802
.L3816:
	ucomisd	xmm0, xmm8
	jp	.L3818
	je	.L5803
.L3818:
	ucomisd	xmm0, xmm7
	jp	.L3820
	je	.L5804
.L3820:
	ucomisd	xmm0, xmm6
	jp	.L3822
	je	.L5805
.L3822:
	ucomisd	xmm0, xmm5
	jp	.L3824
	je	.L5806
.L3824:
	ucomisd	xmm0, xmm4
	jp	.L3826
	je	.L5807
.L3826:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L3828
	je	.L5808
.L3828:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L3830
	je	.L5809
.L3830:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L3832
	je	.L5810
.L3832:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L3834
	je	.L5811
.L3834:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L3836
	je	.L5812
.L3836:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L3838
	je	.L5813
.L3838:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L3840
	je	.L5814
.L3840:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L1016
	jne	.L1016
.L3842:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1655
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5814:
.L3841:
	mov	esi, 12
	mov	edi, OFFSET FLAT:.LC1654
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5810:
.L3833:
	mov	esi, 11
	mov	edi, OFFSET FLAT:.LC1650
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5811:
.L3835:
	mov	esi, 11
	mov	edi, OFFSET FLAT:.LC1651
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5812:
.L3837:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1652
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5813:
.L3839:
	mov	esi, 12
	mov	edi, OFFSET FLAT:.LC1653
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5794:
.L3801:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1634
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5795:
.L3803:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1635
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5796:
.L3805:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1636
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5797:
.L3807:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1637
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5798:
.L3809:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1638
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5799:
.L3811:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1639
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5800:
.L3813:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1640
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5801:
.L3815:
	mov	esi, 11
	mov	edi, OFFSET FLAT:.LC1641
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5802:
.L3817:
	mov	esi, 11
	mov	edi, OFFSET FLAT:.LC1642
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5803:
.L3819:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1643
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5804:
.L3821:
	mov	esi, 11
	mov	edi, OFFSET FLAT:.LC1644
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5805:
.L3823:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1645
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5806:
.L3825:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1646
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5807:
.L3827:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1647
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5808:
.L3829:
	mov	esi, 10
	mov	edi, OFFSET FLAT:.LC1648
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5809:
.L3831:
	mov	esi, 12
	mov	edi, OFFSET FLAT:.LC1649
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5655:
.L1224:
	mov	esi, 6
	mov	edi, OFFSET FLAT:.LC4
	call	fb_StrAllocTempDescZEx
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 3
	mov	rdi, rax
	call	fb_FileOpen
	mov	esi, 15
	mov	edi, OFFSET FLAT:.LC5
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 34
	mov	edi, OFFSET FLAT:.LC6
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 24
	mov	edi, OFFSET FLAT:.LC7
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 26
	mov	edi, OFFSET FLAT:.LC8
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 42
	mov	edi, OFFSET FLAT:.LC9
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC10
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC11
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 52
	mov	edi, OFFSET FLAT:.LC12
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 59
	mov	edi, OFFSET FLAT:.LC13
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 36
	mov	edi, OFFSET FLAT:.LC14
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 36
	mov	edi, OFFSET FLAT:.LC15
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 44
	mov	edi, OFFSET FLAT:.LC16
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 51
	mov	edi, OFFSET FLAT:.LC17
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 54
	mov	edi, OFFSET FLAT:.LC18
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 48
	mov	edi, OFFSET FLAT:.LC19
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 42
	mov	edi, OFFSET FLAT:.LC20
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 39
	mov	edi, OFFSET FLAT:.LC21
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC22
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 40
	mov	edi, OFFSET FLAT:.LC23
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 44
	mov	edi, OFFSET FLAT:.LC24
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC25
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 49
	mov	edi, OFFSET FLAT:.LC26
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 55
	mov	edi, OFFSET FLAT:.LC27
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 52
	mov	edi, OFFSET FLAT:.LC28
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 52
	mov	edi, OFFSET FLAT:.LC29
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 52
	mov	edi, OFFSET FLAT:.LC30
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 50
	mov	edi, OFFSET FLAT:.LC31
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 36
	mov	edi, OFFSET FLAT:.LC32
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 56
	mov	edi, OFFSET FLAT:.LC33
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 46
	mov	edi, OFFSET FLAT:.LC34
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 47
	mov	edi, OFFSET FLAT:.LC35
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 51
	mov	edi, OFFSET FLAT:.LC36
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC37
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 59
	mov	edi, OFFSET FLAT:.LC38
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 36
	mov	edi, OFFSET FLAT:.LC39
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 34
	mov	edi, OFFSET FLAT:.LC40
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 41
	mov	edi, OFFSET FLAT:.LC41
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC42
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 59
	mov	edi, OFFSET FLAT:.LC43
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 67
	mov	edi, OFFSET FLAT:.LC44
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 64
	mov	edi, OFFSET FLAT:.LC45
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 68
	mov	edi, OFFSET FLAT:.LC46
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 62
	mov	edi, OFFSET FLAT:.LC47
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 70
	mov	edi, OFFSET FLAT:.LC48
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 44
	mov	edi, OFFSET FLAT:.LC49
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC50
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	xor	ebx, ebx
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 47
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC51
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 6
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC52
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5654:
.L1219:
	mov	edi, -65536
	call	fb_Cls
	jmp	.L1016
.L5653:
.L1217:
	mov	ecx, OFFSET FLAT:MB$
	mov	esi, OFFSET FLAT:MY$
	mov	edi, OFFSET FLAT:MX$
	mov	QWORD PTR [rsp+1680], 0
	lea	r8, [rsp+1680]
	lea	rdx, [rsp+1648]
	mov	QWORD PTR [rsp+1648], 0
	call	fb_GetMouse64
	mov	rax, QWORD PTR MB$[rip]
	test	al, 1
	je	.L1220
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 1
	mov	rdi, rbp
	add	rax, 168
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR MB$[rip]
.L1220:
	test	al, 2
	je	.L1221
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 2
	mov	rdi, rbp
	add	rax, 168
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR MB$[rip]
.L1221:
	test	al, 3
	je	.L1222
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 3
	mov	rdi, rbp
	add	rax, 168
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
.L1222:
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	rdx, QWORD PTR MX$[rip]
	mov	rdi, rbp
	add	rax, 169
	mov	rsi, rax
	call	_ZN8MEMORY_T11WRITEUSHORTEyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	mov	rdx, QWORD PTR MY$[rip]
	mov	rdi, rbp
	add	rax, 170
	mov	rsi, rax
	call	_ZN8MEMORY_T11WRITEUSHORTEyy
	jmp	.L1016
.L5652:
.L1215:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1608+rbx]
	call	nearbyint
	xor	r8d, r8d
	mov	ecx, 65535
	xor	edx, edx
	cvttsd2si	rax, xmm0
	pxor	xmm3, xmm3
	pxor	xmm0, xmm0
	xor	edi, edi
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR [rbp+1624+rbx]
	cvtsd2ss	xmm3, QWORD PTR [rbp+1656+rbx]
	cvtsd2ss	xmm2, QWORD PTR [rbp+1648+rbx]
	cvtsd2ss	xmm1, QWORD PTR [rbp+1632+rbx]
	mov	esi, eax
	call	fb_GfxLine
	jmp	.L1016
.L5651:
.L1213:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1608+rbx]
	call	nearbyint
	xor	ecx, ecx
	mov	edx, 4
	pxor	xmm1, xmm1
	cvtsd2ss	xmm1, QWORD PTR [rbp+1632+rbx]
	cvttsd2si	rax, xmm0
	xor	edi, edi
	pxor	xmm0, xmm0
	cvtsd2ss	xmm0, QWORD PTR [rbp+1624+rbx]
	mov	esi, eax
	call	fb_GfxPset
	jmp	.L1016
.L5650:
.L1211:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1288+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1296+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1304+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1312+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1320+rbx]
	movsd	QWORD PTR [rbp+1696+rbx], xmm0
	jmp	.L1016
.L5649:
.L1209:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1240+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1248+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1256+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1264+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1272+rbx]
	movsd	QWORD PTR [rbp+1688+rbx], xmm0
	jmp	.L1016
.L5648:
.L1207:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1192+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1200+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1208+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1216+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1224+rbx]
	movsd	QWORD PTR [rbp+1680+rbx], xmm0
	jmp	.L1016
.L5647:
.L1205:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1144+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1152+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1160+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1168+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1176+rbx]
	movsd	QWORD PTR [rbp+1672+rbx], xmm0
	jmp	.L1016
.L5646:
.L1203:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1096+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1104+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1112+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1120+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1128+rbx]
	movsd	QWORD PTR [rbp+1664+rbx], xmm0
	jmp	.L1016
.L5645:
.L1201:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1048+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1056+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1064+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1072+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1080+rbx]
	movsd	QWORD PTR [rbp+1528+rbx], xmm0
	jmp	.L1016
.L5644:
.L1199:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+1000+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+1008+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+1016+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+1024+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+1032+rbx]
	movsd	QWORD PTR [rbp+1520+rbx], xmm0
	jmp	.L1016
.L5643:
.L1197:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+952+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+960+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+968+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+976+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+984+rbx]
	movsd	QWORD PTR [rbp+1512+rbx], xmm0
	jmp	.L1016
.L5642:
.L1195:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+904+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+912+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+920+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+928+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+936+rbx]
	movsd	QWORD PTR [rbp+1504+rbx], xmm0
	jmp	.L1016
.L5641:
.L1193:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+856+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+864+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+872+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+880+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+888+rbx]
	movsd	QWORD PTR [rbp+1496+rbx], xmm0
	jmp	.L1016
.L5640:
.L1191:
	lea	rbx, [0+rax*8]
	movsd	xmm0, QWORD PTR [rbp+808+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+816+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+16], xmm0
	movsd	xmm0, QWORD PTR [rbp+824+rbx]
	call	nearbyint
	movsd	QWORD PTR [rsp+24], xmm0
	movsd	xmm0, QWORD PTR [rbp+832+rbx]
	call	nearbyint
	cvttsd2si	rax, QWORD PTR [rsp+8]
	sal	rax, 32
	mov	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+16]
	sal	rax, 24
	add	rdx, rax
	cvttsd2si	rax, QWORD PTR [rsp+24]
	sal	rax, 16
	add	rdx, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sdq	xmm0, rax
	addsd	xmm0, QWORD PTR [rbp+840+rbx]
	movsd	QWORD PTR [rbp+1488+rbx], xmm0
	jmp	.L1016
.L5657:
.L1228:
	test	r12, r12
	je	.L1231
	cmp	r12, 1
	je	.L5815
	cmp	r12, 2
	je	.L5816
	cmp	r12, 3
	je	.L5817
	cmp	r12, 6
	je	.L1016
	cmp	r12, 10
	je	.L1359
	cmp	r12, 11
	je	.L5818
	cmp	r12, 4
	je	.L5819
	cmp	r12, 5
	je	.L5820
	cmp	r12, 7
	je	.L5821
	cmp	r12, 13
	je	.L5822
	cmp	r12, 14
	je	.L5823
	cmp	r12, 15
	je	.L5824
	cmp	r12, 16
	je	.L5825
	cmp	r12, 17
	je	.L5826
	cmp	r12, 18
	je	.L5827
	cmp	r12, 27
	je	.L5828
	cmp	r12, 20
	je	.L5829
	cmp	r12, 21
	je	.L5830
	cmp	r12, 22
	je	.L5831
	cmp	r12, 23
	je	.L5832
	cmp	r12, 24
	je	.L5833
	cmp	r12, 25
	je	.L5834
	cmp	r12, 28
	je	.L5835
	cmp	r12, 29
	je	.L5836
	cmp	r12, 30
	je	.L5837
	cmp	r12, 31
	jne	.L1016
.L2378:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	movsd	xmm1, QWORD PTR .LC56[rip]
	comisd	xmm1, xmm0
	ja	.L2806
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L5838
.L2806:
	movsd	xmm1, QWORD PTR .LC83[rip]
	comisd	xmm1, xmm0
	ja	.L2808
	comisd	xmm0, QWORD PTR .LC359[rip]
	jbe	.L5839
.L2808:
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	xor	eax, eax
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MODTYPE$
	mov	rdx, rax
	mov	rsi, rcx
	call	fb_StrAssign
	jmp	.L1016
.L5837:
.L2286:
	sal	rax, 3
	pxor	xmm3, xmm3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm3
	ucomisd	xmm0, xmm3
	jp	.L4115
	je	.L4765
.L4115:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L2381
	je	.L5840
.L2381:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L2383
	je	.L5841
.L2383:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L2385
	je	.L5842
.L2385:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L2387
	je	.L5843
.L2387:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L2389
	je	.L5844
.L2389:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L2391
	je	.L5845
.L2391:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L2393
	je	.L5846
.L2393:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L2395
	je	.L5847
.L2395:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L2397
	je	.L5848
.L2397:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L2399
	je	.L5849
.L2399:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L2401
	je	.L5850
.L2401:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L2403
	je	.L5851
.L2403:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L2405
	je	.L5852
.L2405:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L2407
	je	.L5853
.L2407:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L2409
	je	.L5854
.L2409:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L2411
	je	.L5855
.L2411:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L2413
	je	.L5856
.L2413:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L2415
	je	.L5857
.L2415:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L2417
	je	.L5858
.L2417:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L2419
	je	.L5859
.L2419:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L2421
	je	.L5860
.L2421:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L2423
	je	.L5861
.L2423:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L2425
	je	.L5862
.L2425:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L2427
	je	.L5863
.L2427:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L2429
	je	.L5864
.L2429:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L2431
	je	.L5865
.L2431:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L2433
	je	.L5866
.L2433:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L2435
	je	.L5867
.L2435:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L2437
	je	.L5868
.L2437:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L2439
	je	.L5869
.L2439:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L2441
	je	.L5870
.L2441:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L2443
	je	.L5871
.L2443:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L2445
	je	.L5872
.L2445:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L2447
	je	.L5873
.L2447:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L2449
	je	.L5874
.L2449:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L2451
	je	.L5875
.L2451:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L2453
	je	.L5876
.L2453:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L2455
	je	.L5877
.L2455:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L2457
	je	.L5878
.L2457:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L2459
	je	.L5879
.L2459:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L2461
	je	.L5880
.L2461:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L2463
	je	.L5881
.L2463:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L2465
	je	.L5882
.L2465:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L2467
	je	.L5883
.L2467:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L2469
	je	.L5884
.L2469:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L2471
	je	.L5885
.L2471:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L2473
	je	.L5886
.L2473:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L2475
	je	.L5887
.L2475:
	ucomisd	xmm0, QWORD PTR .LC257[rip]
	jp	.L2477
	je	.L5888
.L2477:
	ucomisd	xmm0, QWORD PTR .LC259[rip]
	jp	.L2479
	je	.L5889
.L2479:
	ucomisd	xmm0, QWORD PTR .LC261[rip]
	jp	.L2481
	je	.L5890
.L2481:
	ucomisd	xmm0, QWORD PTR .LC263[rip]
	jp	.L2483
	je	.L5891
.L2483:
	ucomisd	xmm0, QWORD PTR .LC264[rip]
	jp	.L2485
	je	.L5892
.L2485:
	ucomisd	xmm0, QWORD PTR .LC266[rip]
	jp	.L2487
	je	.L5893
.L2487:
	ucomisd	xmm0, QWORD PTR .LC268[rip]
	jp	.L2489
	je	.L5894
.L2489:
	ucomisd	xmm0, QWORD PTR .LC270[rip]
	jp	.L2491
	je	.L5895
.L2491:
	ucomisd	xmm0, QWORD PTR .LC272[rip]
	jp	.L2493
	je	.L5896
.L2493:
	ucomisd	xmm0, QWORD PTR .LC274[rip]
	jp	.L2495
	je	.L5897
.L2495:
	ucomisd	xmm0, QWORD PTR .LC276[rip]
	jp	.L2497
	je	.L5898
.L2497:
	ucomisd	xmm0, QWORD PTR .LC278[rip]
	jp	.L2499
	je	.L5899
.L2499:
	ucomisd	xmm0, QWORD PTR .LC281[rip]
	jp	.L2501
	je	.L5900
.L2501:
	ucomisd	xmm0, QWORD PTR .LC284[rip]
	jp	.L2503
	je	.L5901
.L2503:
	ucomisd	xmm0, QWORD PTR .LC286[rip]
	jp	.L2505
	je	.L5902
.L2505:
	ucomisd	xmm0, QWORD PTR .LC288[rip]
	jp	.L2507
	je	.L5903
.L2507:
	ucomisd	xmm0, QWORD PTR .LC290[rip]
	jp	.L2509
	je	.L5904
.L2509:
	ucomisd	xmm0, QWORD PTR .LC292[rip]
	jp	.L2511
	je	.L5905
.L2511:
	ucomisd	xmm0, QWORD PTR .LC294[rip]
	jp	.L2513
	je	.L5906
.L2513:
	ucomisd	xmm0, QWORD PTR .LC296[rip]
	jp	.L2515
	je	.L5907
.L2515:
	ucomisd	xmm0, QWORD PTR .LC298[rip]
	jp	.L2517
	je	.L5908
.L2517:
	ucomisd	xmm0, QWORD PTR .LC300[rip]
	jp	.L2519
	je	.L5909
.L2519:
	ucomisd	xmm0, QWORD PTR .LC302[rip]
	jp	.L2521
	je	.L5910
.L2521:
	ucomisd	xmm0, QWORD PTR .LC304[rip]
	jp	.L2523
	je	.L5911
.L2523:
	ucomisd	xmm0, QWORD PTR .LC306[rip]
	jp	.L2525
	je	.L5912
.L2525:
	ucomisd	xmm0, QWORD PTR .LC308[rip]
	jp	.L2527
	je	.L5913
.L2527:
	ucomisd	xmm0, QWORD PTR .LC310[rip]
	jp	.L2529
	je	.L5914
.L2529:
	ucomisd	xmm0, QWORD PTR .LC312[rip]
	jp	.L2531
	je	.L5915
.L2531:
	ucomisd	xmm0, QWORD PTR .LC314[rip]
	jp	.L2533
	je	.L5916
.L2533:
	ucomisd	xmm0, QWORD PTR .LC316[rip]
	jp	.L2535
	je	.L5917
.L2535:
	ucomisd	xmm0, QWORD PTR .LC318[rip]
	jp	.L2537
	je	.L5918
.L2537:
	ucomisd	xmm0, QWORD PTR .LC320[rip]
	jp	.L2539
	je	.L5919
.L2539:
	ucomisd	xmm0, QWORD PTR .LC322[rip]
	jp	.L2541
	je	.L5920
.L2541:
	ucomisd	xmm0, QWORD PTR .LC324[rip]
	jp	.L2543
	je	.L5921
.L2543:
	ucomisd	xmm0, QWORD PTR .LC326[rip]
	jp	.L2545
	je	.L5922
.L2545:
	ucomisd	xmm0, QWORD PTR .LC328[rip]
	jp	.L2547
	je	.L5923
.L2547:
	ucomisd	xmm0, QWORD PTR .LC330[rip]
	jp	.L2549
	je	.L5924
.L2549:
	ucomisd	xmm0, QWORD PTR .LC332[rip]
	jp	.L2551
	je	.L5925
.L2551:
	ucomisd	xmm0, QWORD PTR .LC334[rip]
	jp	.L2553
	je	.L5926
.L2553:
	ucomisd	xmm0, QWORD PTR .LC336[rip]
	jp	.L2555
	je	.L5927
.L2555:
	ucomisd	xmm0, QWORD PTR .LC338[rip]
	jp	.L2557
	je	.L5928
.L2557:
	ucomisd	xmm0, QWORD PTR .LC340[rip]
	jp	.L2559
	je	.L5929
.L2559:
	ucomisd	xmm0, QWORD PTR .LC342[rip]
	jp	.L2561
	je	.L5930
.L2561:
	ucomisd	xmm0, QWORD PTR .LC344[rip]
	jp	.L2563
	je	.L5931
.L2563:
	ucomisd	xmm0, QWORD PTR .LC346[rip]
	jp	.L2565
	je	.L5932
.L2565:
	ucomisd	xmm0, QWORD PTR .LC348[rip]
	jp	.L2567
	je	.L5933
.L2567:
	ucomisd	xmm0, QWORD PTR .LC350[rip]
	jp	.L2569
	je	.L5934
.L2569:
	ucomisd	xmm0, QWORD PTR .LC352[rip]
	jp	.L2571
	je	.L5935
.L2571:
	ucomisd	xmm0, QWORD PTR .LC354[rip]
	jp	.L2573
	je	.L5936
.L2573:
	ucomisd	xmm0, QWORD PTR .LC356[rip]
	jp	.L2575
	je	.L5937
.L2575:
	ucomisd	xmm0, QWORD PTR .LC170[rip]
	jp	.L2577
	je	.L5938
.L2577:
	ucomisd	xmm0, QWORD PTR .LC359[rip]
	jp	.L2579
	je	.L5939
.L2579:
	ucomisd	xmm0, QWORD PTR .LC361[rip]
	jp	.L2581
	je	.L5940
.L2581:
	ucomisd	xmm0, QWORD PTR .LC363[rip]
	jp	.L2583
	je	.L5941
.L2583:
	ucomisd	xmm0, QWORD PTR .LC365[rip]
	jp	.L2585
	je	.L5942
.L2585:
	ucomisd	xmm0, QWORD PTR .LC367[rip]
	jp	.L2587
	je	.L5943
.L2587:
	ucomisd	xmm0, QWORD PTR .LC369[rip]
	jp	.L2589
	je	.L5944
.L2589:
	ucomisd	xmm0, QWORD PTR .LC371[rip]
	jp	.L2591
	je	.L5945
.L2591:
	ucomisd	xmm0, QWORD PTR .LC373[rip]
	jp	.L2593
	je	.L5946
.L2593:
	ucomisd	xmm0, QWORD PTR .LC375[rip]
	jp	.L2595
	je	.L5947
.L2595:
	ucomisd	xmm0, QWORD PTR .LC377[rip]
	jp	.L2597
	je	.L5948
.L2597:
	ucomisd	xmm0, QWORD PTR .LC379[rip]
	jp	.L2599
	je	.L5949
.L2599:
	ucomisd	xmm0, QWORD PTR .LC381[rip]
	jp	.L2601
	je	.L5950
.L2601:
	ucomisd	xmm0, QWORD PTR .LC382[rip]
	jp	.L2603
	je	.L5951
.L2603:
	ucomisd	xmm0, QWORD PTR .LC384[rip]
	jp	.L2605
	je	.L5952
.L2605:
	ucomisd	xmm0, QWORD PTR .LC385[rip]
	jp	.L2607
	je	.L5953
.L2607:
	ucomisd	xmm0, QWORD PTR .LC386[rip]
	jp	.L2609
	je	.L5954
.L2609:
	ucomisd	xmm0, QWORD PTR .LC388[rip]
	jp	.L2611
	je	.L5955
.L2611:
	ucomisd	xmm0, QWORD PTR .LC390[rip]
	jp	.L2613
	je	.L5956
.L2613:
	ucomisd	xmm0, QWORD PTR .LC391[rip]
	jp	.L2615
	je	.L5957
.L2615:
	ucomisd	xmm0, QWORD PTR .LC393[rip]
	jp	.L2617
	je	.L5958
.L2617:
	ucomisd	xmm0, QWORD PTR .LC395[rip]
	jp	.L2619
	je	.L5959
.L2619:
	ucomisd	xmm0, QWORD PTR .LC396[rip]
	jp	.L2621
	je	.L5960
.L2621:
	ucomisd	xmm0, QWORD PTR .LC398[rip]
	jp	.L2623
	je	.L5961
.L2623:
	ucomisd	xmm0, QWORD PTR .LC400[rip]
	jp	.L2625
	je	.L5962
.L2625:
	ucomisd	xmm0, QWORD PTR .LC402[rip]
	jp	.L2627
	je	.L5963
.L2627:
	ucomisd	xmm0, QWORD PTR .LC404[rip]
	jp	.L2629
	je	.L5964
.L2629:
	ucomisd	xmm0, QWORD PTR .LC406[rip]
	jp	.L2631
	je	.L5965
.L2631:
	ucomisd	xmm0, QWORD PTR .LC408[rip]
	jp	.L2633
	je	.L5966
.L2633:
	ucomisd	xmm0, QWORD PTR .LC410[rip]
	jp	.L2635
	je	.L5967
.L2635:
	ucomisd	xmm0, QWORD PTR .LC412[rip]
	jp	.L2637
	je	.L5968
.L2637:
	ucomisd	xmm0, QWORD PTR .LC414[rip]
	jp	.L2639
	je	.L5969
.L2639:
	ucomisd	xmm0, QWORD PTR .LC416[rip]
	jp	.L2641
	je	.L5970
.L2641:
	ucomisd	xmm0, QWORD PTR .LC418[rip]
	jp	.L2643
	je	.L5971
.L2643:
	ucomisd	xmm0, QWORD PTR .LC420[rip]
	jp	.L2645
	je	.L5972
.L2645:
	ucomisd	xmm0, QWORD PTR .LC422[rip]
	jp	.L2647
	je	.L5973
.L2647:
	ucomisd	xmm0, QWORD PTR .LC424[rip]
	jp	.L2649
	je	.L5974
.L2649:
	ucomisd	xmm0, QWORD PTR .LC426[rip]
	jp	.L2651
	je	.L5975
.L2651:
	ucomisd	xmm0, QWORD PTR .LC428[rip]
	jp	.L2653
	je	.L5976
.L2653:
	ucomisd	xmm0, QWORD PTR .LC430[rip]
	jp	.L2655
	je	.L5977
.L2655:
	ucomisd	xmm0, QWORD PTR .LC432[rip]
	jp	.L2657
	je	.L5978
.L2657:
	ucomisd	xmm0, QWORD PTR .LC435[rip]
	jp	.L2659
	je	.L5979
.L2659:
	ucomisd	xmm0, QWORD PTR .LC438[rip]
	jp	.L2661
	je	.L5980
.L2661:
	ucomisd	xmm0, QWORD PTR .LC440[rip]
	jp	.L2663
	je	.L5981
.L2663:
	ucomisd	xmm0, QWORD PTR .LC442[rip]
	jp	.L2665
	je	.L5982
.L2665:
	ucomisd	xmm0, QWORD PTR .LC444[rip]
	jp	.L2667
	je	.L5983
.L2667:
	ucomisd	xmm0, QWORD PTR .LC446[rip]
	jp	.L2669
	je	.L5984
.L2669:
	ucomisd	xmm0, QWORD PTR .LC448[rip]
	jp	.L2671
	je	.L5985
.L2671:
	ucomisd	xmm0, QWORD PTR .LC450[rip]
	jp	.L2673
	je	.L5986
.L2673:
	ucomisd	xmm0, QWORD PTR .LC452[rip]
	jp	.L2675
	je	.L5987
.L2675:
	ucomisd	xmm0, QWORD PTR .LC454[rip]
	jp	.L2677
	je	.L5988
.L2677:
	ucomisd	xmm0, QWORD PTR .LC456[rip]
	jp	.L2679
	je	.L5989
.L2679:
	ucomisd	xmm0, QWORD PTR .LC458[rip]
	jp	.L2681
	je	.L5990
.L2681:
	ucomisd	xmm0, QWORD PTR .LC460[rip]
	jp	.L2683
	je	.L5991
.L2683:
	ucomisd	xmm0, QWORD PTR .LC462[rip]
	jp	.L2685
	je	.L5992
.L2685:
	ucomisd	xmm0, QWORD PTR .LC464[rip]
	jp	.L2687
	je	.L5993
.L2687:
	ucomisd	xmm0, QWORD PTR .LC466[rip]
	jp	.L2689
	je	.L5994
.L2689:
	ucomisd	xmm0, QWORD PTR .LC468[rip]
	jp	.L2691
	je	.L5995
.L2691:
	ucomisd	xmm0, QWORD PTR .LC470[rip]
	jp	.L2693
	je	.L5996
.L2693:
	ucomisd	xmm0, QWORD PTR .LC472[rip]
	jp	.L2695
	je	.L5997
.L2695:
	ucomisd	xmm0, QWORD PTR .LC474[rip]
	jp	.L2697
	je	.L5998
.L2697:
	ucomisd	xmm0, QWORD PTR .LC476[rip]
	jp	.L2699
	je	.L5999
.L2699:
	ucomisd	xmm0, QWORD PTR .LC478[rip]
	jp	.L2701
	je	.L6000
.L2701:
	ucomisd	xmm0, QWORD PTR .LC480[rip]
	jp	.L2703
	je	.L6001
.L2703:
	ucomisd	xmm0, QWORD PTR .LC487[rip]
	jp	.L2705
	je	.L6002
.L2705:
	ucomisd	xmm0, QWORD PTR .LC488[rip]
	jp	.L2707
	je	.L6003
.L2707:
	ucomisd	xmm0, QWORD PTR .LC702[rip]
	jp	.L2709
	je	.L6004
.L2709:
	ucomisd	xmm0, QWORD PTR .LC704[rip]
	jp	.L2711
	je	.L6005
.L2711:
	ucomisd	xmm0, QWORD PTR .LC706[rip]
	jp	.L2713
	je	.L6006
.L2713:
	ucomisd	xmm0, QWORD PTR .LC708[rip]
	jp	.L2715
	je	.L6007
.L2715:
	ucomisd	xmm0, QWORD PTR .LC710[rip]
	jp	.L2717
	je	.L6008
.L2717:
	ucomisd	xmm0, QWORD PTR .LC712[rip]
	jp	.L2719
	je	.L6009
.L2719:
	ucomisd	xmm0, QWORD PTR .LC1021[rip]
	jp	.L2721
	je	.L6010
.L2721:
	ucomisd	xmm0, QWORD PTR .LC1022[rip]
	jp	.L2723
	je	.L6011
.L2723:
	ucomisd	xmm0, QWORD PTR .LC1023[rip]
	jp	.L2725
	je	.L6012
.L2725:
	ucomisd	xmm0, QWORD PTR .LC1024[rip]
	jp	.L2727
	je	.L6013
.L2727:
	ucomisd	xmm0, QWORD PTR .LC1025[rip]
	jp	.L2729
	je	.L6014
.L2729:
	ucomisd	xmm0, QWORD PTR .LC1026[rip]
	jp	.L2731
	je	.L6015
.L2731:
	ucomisd	xmm0, QWORD PTR .LC1028[rip]
	jp	.L2733
	je	.L6016
.L2733:
	ucomisd	xmm0, QWORD PTR .LC1030[rip]
	jp	.L2735
	je	.L6017
.L2735:
	ucomisd	xmm0, QWORD PTR .LC1032[rip]
	jp	.L2737
	je	.L6018
.L2737:
	ucomisd	xmm0, QWORD PTR .LC1034[rip]
	jp	.L2739
	je	.L6019
.L2739:
	ucomisd	xmm0, QWORD PTR .LC1036[rip]
	jp	.L2741
	je	.L6020
.L2741:
	ucomisd	xmm0, QWORD PTR .LC1038[rip]
	jp	.L2743
	je	.L6021
.L2743:
	ucomisd	xmm0, QWORD PTR .LC1040[rip]
	jp	.L2745
	je	.L6022
.L2745:
	ucomisd	xmm0, QWORD PTR .LC1042[rip]
	jp	.L2747
	je	.L6023
.L2747:
	ucomisd	xmm0, QWORD PTR .LC1044[rip]
	jp	.L2749
	je	.L6024
.L2749:
	ucomisd	xmm0, QWORD PTR .LC1046[rip]
	jp	.L2751
	je	.L6025
.L2751:
	ucomisd	xmm0, QWORD PTR .LC1047[rip]
	jp	.L2753
	je	.L6026
.L2753:
	ucomisd	xmm0, QWORD PTR .LC1049[rip]
	jp	.L2755
	je	.L6027
.L2755:
	ucomisd	xmm0, QWORD PTR .LC1051[rip]
	jp	.L2757
	je	.L6028
.L2757:
	ucomisd	xmm0, QWORD PTR .LC1053[rip]
	jp	.L2759
	je	.L6029
.L2759:
	ucomisd	xmm0, QWORD PTR .LC1055[rip]
	jp	.L2761
	je	.L6030
.L2761:
	ucomisd	xmm0, QWORD PTR .LC1057[rip]
	jp	.L2763
	je	.L6031
.L2763:
	ucomisd	xmm0, QWORD PTR .LC1059[rip]
	jp	.L2765
	je	.L6032
.L2765:
	ucomisd	xmm0, QWORD PTR .LC1061[rip]
	jp	.L2767
	je	.L6033
.L2767:
	ucomisd	xmm0, QWORD PTR .LC1063[rip]
	jp	.L2769
	je	.L6034
.L2769:
	ucomisd	xmm0, QWORD PTR .LC1065[rip]
	jp	.L2771
	je	.L6035
.L2771:
	ucomisd	xmm0, QWORD PTR .LC1067[rip]
	jp	.L2773
	je	.L6036
.L2773:
	ucomisd	xmm0, QWORD PTR .LC1069[rip]
	jp	.L2775
	je	.L6037
.L2775:
	ucomisd	xmm0, QWORD PTR .LC1071[rip]
	jp	.L2777
	je	.L6038
.L2777:
	ucomisd	xmm0, QWORD PTR .LC1073[rip]
	jp	.L2779
	je	.L6039
.L2779:
	ucomisd	xmm0, QWORD PTR .LC1075[rip]
	jp	.L2781
	je	.L6040
.L2781:
	ucomisd	xmm0, QWORD PTR .LC1077[rip]
	jp	.L2783
	je	.L6041
.L2783:
	ucomisd	xmm0, QWORD PTR .LC1079[rip]
	jp	.L2785
	je	.L6042
.L2785:
	ucomisd	xmm0, QWORD PTR .LC1081[rip]
	jp	.L2787
	je	.L6043
.L2787:
	ucomisd	xmm0, QWORD PTR .LC1083[rip]
	jp	.L2789
	je	.L6044
.L2789:
	ucomisd	xmm0, QWORD PTR .LC1085[rip]
	jp	.L2791
	je	.L6045
.L2791:
	ucomisd	xmm0, QWORD PTR .LC1087[rip]
	jp	.L2793
	je	.L6046
.L2793:
	ucomisd	xmm0, QWORD PTR .LC1089[rip]
	jp	.L2795
	je	.L6047
.L2795:
	ucomisd	xmm0, QWORD PTR .LC1091[rip]
	jp	.L2797
	je	.L6048
.L2797:
	ucomisd	xmm0, QWORD PTR .LC1093[rip]
	jp	.L2799
	je	.L6049
.L2799:
	ucomisd	xmm0, QWORD PTR .LC1095[rip]
	jp	.L2801
	je	.L6050
.L2801:
	ucomisd	xmm0, QWORD PTR .LC1097[rip]
	jp	.L2803
	je	.L6051
.L2803:
	ucomisd	xmm0, QWORD PTR .LC1099[rip]
	jp	.L1016
	jne	.L1016
.L2805:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1101
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6050:
.L2802:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1098
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6051:
.L2804:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1100
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6046:
.L2794:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 27
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1090
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6047:
.L2796:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1092
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6048:
.L2798:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 32
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1094
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6049:
.L2800:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 30
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1096
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6038:
.L2778:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1074
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6039:
.L2780:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1076
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6040:
.L2782:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1078
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6041:
.L2784:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1080
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6042:
.L2786:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1082
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6043:
.L2788:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 30
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1084
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6044:
.L2790:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 27
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1086
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6045:
.L2792:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1088
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6022:
.L2746:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1043
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6023:
.L2748:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1045
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6024:
.L2750:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1027
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6025:
.L2752:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1048
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6026:
.L2754:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1050
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6027:
.L2756:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1052
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6028:
.L2758:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 32
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1054
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6029:
.L2760:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 30
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1056
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6030:
.L2762:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 32
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1058
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6031:
.L2764:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1060
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6032:
.L2766:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 30
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1062
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6033:
.L2768:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1064
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6034:
.L2770:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1066
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6035:
.L2772:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1068
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6036:
.L2774:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1070
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6037:
.L2776:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1072
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5990:
.L2682:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1005
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5991:
.L2684:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC958
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5992:
.L2686:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1006
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5993:
.L2688:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1007
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5994:
.L2690:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1008
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5995:
.L2692:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1009
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5996:
.L2694:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1010
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5997:
.L2696:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1011
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5998:
.L2698:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC992
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5999:
.L2700:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC961
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6000:
.L2702:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 27
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1012
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6001:
.L2704:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1013
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6002:
.L2706:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1014
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6003:
.L2708:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1015
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6004:
.L2710:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1016
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6005:
.L2712:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1017
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6006:
.L2714:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1018
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6007:
.L2716:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1019
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6008:
.L2718:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1020
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6009:
.L2720:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC900
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6010:
.L2722:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC437
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6011:
.L2724:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC441
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6012:
.L2726:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC439
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6013:
.L2728:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC443
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6014:
.L2730:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1027
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6015:
.L2732:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1029
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6016:
.L2734:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1031
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6017:
.L2736:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1033
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6018:
.L2738:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1035
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6019:
.L2740:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1037
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6020:
.L2742:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 32
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1039
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6021:
.L2744:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 35
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1041
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5926:
.L2554:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC955
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5927:
.L2556:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC956
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5928:
.L2558:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC957
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5929:
.L2560:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC947
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5930:
.L2562:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC951
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5931:
.L2564:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC952
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5932:
.L2566:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC958
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5933:
.L2568:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC959
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5934:
.L2570:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC960
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5935:
.L2572:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC961
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5936:
.L2574:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC962
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5937:
.L2576:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC930
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5938:
.L2578:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC963
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5939:
.L2580:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC964
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5940:
.L2582:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC965
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5941:
.L2584:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC966
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5942:
.L2586:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC967
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5943:
.L2588:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC968
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5944:
.L2590:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC969
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5945:
.L2592:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC970
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5946:
.L2594:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC971
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5947:
.L2596:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC972
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5948:
.L2598:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC941
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5949:
.L2600:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC943
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5950:
.L2602:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 30
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC973
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5951:
.L2604:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 37
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC974
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5952:
.L2606:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC975
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5953:
.L2608:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC976
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5954:
.L2610:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC977
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5955:
.L2612:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC978
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5956:
.L2614:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC979
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5957:
.L2616:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC980
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5958:
.L2618:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC981
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5959:
.L2620:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 36
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC982
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5960:
.L2622:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC983
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5961:
.L2624:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC984
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5962:
.L2626:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC964
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5963:
.L2628:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC966
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5964:
.L2630:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC985
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5965:
.L2632:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC986
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5966:
.L2634:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC971
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5967:
.L2636:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC987
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5968:
.L2638:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC988
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5969:
.L2640:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC989
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5970:
.L2642:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC990
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5971:
.L2644:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC991
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5972:
.L2646:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC992
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5973:
.L2648:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC993
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5974:
.L2650:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC994
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5975:
.L2652:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC995
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5976:
.L2654:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 23
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC996
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5977:
.L2656:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC997
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5978:
.L2658:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC902
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5979:
.L2660:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC961
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5980:
.L2662:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC998
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5981:
.L2664:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC999
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5982:
.L2666:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC961
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5983:
.L2668:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC902
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5984:
.L2670:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1000
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5985:
.L2672:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC966
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5986:
.L2674:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 39
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1001
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5987:
.L2676:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1002
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5988:
.L2678:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1003
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5989:
.L2680:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1004
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5828:
.L2137:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4108
	je	.L4652
.L4108:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1632+rax]
	comisd	xmm2, xmm0
	ja	.L2147
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6052
.L2147:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2150
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6053
.L2150:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1616]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC751
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6052:
.L2149:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC751
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6053:
.L2151:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC751
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5862:
.L2426:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC897
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5863:
.L2428:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 34
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC898
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5864:
.L2430:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC899
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5865:
.L2432:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC900
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5866:
.L2434:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC901
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5867:
.L2436:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC902
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5868:
.L2438:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC900
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5869:
.L2440:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC903
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5870:
.L2442:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC904
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5871:
.L2444:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC887
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5872:
.L2446:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC905
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5873:
.L2448:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC906
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5874:
.L2450:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC907
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5875:
.L2452:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC908
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5876:
.L2454:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC909
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5877:
.L2456:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC910
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5878:
.L2458:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC911
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5879:
.L2460:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC912
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5880:
.L2462:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC913
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5881:
.L2464:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC914
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5882:
.L2466:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC915
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5883:
.L2468:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC916
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5884:
.L2470:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC917
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5885:
.L2472:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC918
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5886:
.L2474:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 28
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC919
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5887:
.L2476:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 31
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC920
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5888:
.L2478:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC887
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5889:
.L2480:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC921
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5890:
.L2482:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC922
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5891:
.L2484:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC923
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5892:
.L2486:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC924
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5893:
.L2488:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC925
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5894:
.L2490:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC926
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5895:
.L2492:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC927
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5896:
.L2494:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC928
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5897:
.L2496:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 33
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC929
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5898:
.L2498:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC930
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5899:
.L2500:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 27
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC931
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5900:
.L2502:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC932
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5901:
.L2504:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC933
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5902:
.L2506:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC439
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5903:
.L2508:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC934
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5904:
.L2510:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC935
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5905:
.L2512:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC936
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5906:
.L2514:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 22
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC937
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5907:
.L2516:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC938
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5908:
.L2518:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC939
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5909:
.L2520:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC940
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5910:
.L2522:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC930
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5911:
.L2524:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC941
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5912:
.L2526:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC942
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5913:
.L2528:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC943
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5914:
.L2530:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 44
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC944
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5915:
.L2532:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 55
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC945
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5916:
.L2534:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 45
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC946
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5917:
.L2536:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC930
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5918:
.L2538:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC947
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5919:
.L2540:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC948
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5920:
.L2542:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC949
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5921:
.L2544:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC950
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5922:
.L2546:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC951
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5923:
.L2548:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC952
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5924:
.L2550:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC953
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5925:
.L2552:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 18
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC954
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5836:
.L2189:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4114
	je	.L4718
.L4114:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L2289
	je	.L6054
.L2289:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L2291
	je	.L6055
.L2291:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L2293
	je	.L6056
.L2293:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L2295
	je	.L6057
.L2295:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L2297
	je	.L6058
.L2297:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L2299
	je	.L6059
.L2299:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L2301
	je	.L6060
.L2301:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L2303
	je	.L6061
.L2303:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L2305
	je	.L6062
.L2305:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L2307
	je	.L6063
.L2307:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L2309
	je	.L6064
.L2309:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L2311
	je	.L6065
.L2311:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L2313
	je	.L6066
.L2313:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L2315
	je	.L6067
.L2315:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L2317
	je	.L6068
.L2317:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L2319
	je	.L6069
.L2319:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L2321
	je	.L6070
.L2321:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L2323
	je	.L6071
.L2323:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L2325
	je	.L6072
.L2325:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L2327
	je	.L6073
.L2327:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L2329
	je	.L6074
.L2329:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L2331
	je	.L6075
.L2331:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L2333
	je	.L6076
.L2333:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L2335
	je	.L6077
.L2335:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L2337
	je	.L6078
.L2337:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L2339
	je	.L6079
.L2339:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L2341
	je	.L6080
.L2341:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L2343
	je	.L6081
.L2343:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L2345
	je	.L6082
.L2345:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L2347
	je	.L6083
.L2347:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L2349
	je	.L6084
.L2349:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L2351
	je	.L6085
.L2351:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L2353
	je	.L6086
.L2353:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L2355
	je	.L6087
.L2355:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L2357
	je	.L6088
.L2357:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L2359
	je	.L6089
.L2359:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L2361
	je	.L6090
.L2361:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L2363
	je	.L6091
.L2363:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L2365
	je	.L6092
.L2365:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L2367
	je	.L6093
.L2367:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L2369
	je	.L6094
.L2369:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L2371
	je	.L6095
.L2371:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L2373
	je	.L6096
.L2373:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L2375
	je	.L6097
.L2375:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L1016
	jne	.L1016
.L2377:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC873
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6094:
.L2370:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC869
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6095:
.L2372:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC870
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6096:
.L2374:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC871
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6097:
.L2376:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC872
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6086:
.L2354:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC862
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6087:
.L2356:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC863
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6088:
.L2358:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC864
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6089:
.L2360:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC865
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6090:
.L2362:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC700
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6091:
.L2364:
	xor	r8d, r8d
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC866
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6092:
.L2366:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC867
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6093:
.L2368:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC868
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6054:
.L2290:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC831
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6055:
.L2292:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC832
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6056:
.L2294:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC833
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6057:
.L2296:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC834
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6058:
.L2298:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC835
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6059:
.L2300:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC836
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6060:
.L2302:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC837
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6061:
.L2304:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC838
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6062:
.L2306:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC839
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6063:
.L2308:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC840
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6064:
.L2310:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC841
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6065:
.L2312:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC842
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6066:
.L2314:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC843
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6067:
.L2316:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC844
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6068:
.L2318:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC845
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6069:
.L2320:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC846
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6070:
.L2322:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC847
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6071:
.L2324:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC848
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6072:
.L2326:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC849
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6073:
.L2328:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC850
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6074:
.L2330:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC851
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6075:
.L2332:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC852
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6076:
.L2334:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC853
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6077:
.L2336:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC674
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6078:
.L2338:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC854
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6079:
.L2340:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC855
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6080:
.L2342:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC856
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6081:
.L2344:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC857
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6082:
.L2346:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC858
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6083:
.L2348:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC859
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6084:
.L2350:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC860
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6085:
.L2352:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC861
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L5787:
.L3784:
	add	rax, 193
	xor	edx, edx
	mov	rdi, rbp
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	jmp	.L1016
.L5788:
.L3786:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5789:
.L3788:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5790:
.L3790:
	mov	rdi, r12
	call	fb_ULongintToStr
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5791:
.L3792:
	mov	rdi, r12
	call	fb_ULongintToStr
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5792:
.L3794:
	mov	rdi, r12
	call	fb_HEX_l
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5793:
.L3796:
	mov	rdi, r12
	call	fb_HEX_l
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MSG$
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrAssign
	mov	edx, 6
	xor	eax, eax
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	mov	rdx, r8
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MSG$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 1
	mov	edx, OFFSET FLAT:.LC1630
	or	rsi, -1
	mov	edi, OFFSET FLAT:MSG$
	call	fb_StrAssign
	jmp	.L1016
.L5475:
.L3798:
	mov	esi, 9
	mov	edi, OFFSET FLAT:.LC1631
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2
	mov	edx, 6
	mov	r8d, 10
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1632
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1633
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4982:
.L2817:
	movsd	xmm0, QWORD PTR [rbp+1608+rdx]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4117
	je	.L4984
.L4117:
	ucomisd	xmm0, xmm1
	jp	.L2822
	je	.L6098
.L2822:
	ucomisd	xmm0, QWORD PTR [rsp+16]
	jp	.L2824
	je	.L6099
.L2824:
	ucomisd	xmm0, xmm2
	jp	.L2826
	je	.L6100
.L2826:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L2828
	je	.L6101
.L2828:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L2830
	je	.L6102
.L2830:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L2832
	je	.L6103
.L2832:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L2834
	je	.L6104
.L2834:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L2836
	je	.L6105
.L2836:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L2838
	je	.L6106
.L2838:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L2840
	je	.L6107
.L2840:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L2842
	je	.L6108
.L2842:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L2844
	je	.L6109
.L2844:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L2846
	je	.L6110
.L2846:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L2848
	je	.L6111
.L2848:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L2850
	je	.L6112
.L2850:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L2852
	je	.L6113
.L2852:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L2854
	je	.L6114
.L2854:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L2856
	je	.L6115
.L2856:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L2858
	je	.L6116
.L2858:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L2860
	je	.L6117
.L2860:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L2862
	je	.L6118
.L2862:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L2864
	je	.L6119
.L2864:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L2866
	je	.L6120
.L2866:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L2868
	je	.L6121
.L2868:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L2870
	je	.L6122
.L2870:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L2872
	je	.L6123
.L2872:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L2874
	je	.L6124
.L2874:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L2876
	je	.L6125
.L2876:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L2878
	je	.L6126
.L2878:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L2880
	je	.L6127
.L2880:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L2882
	je	.L6128
.L2882:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L2884
	je	.L6129
.L2884:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L2886
	je	.L6130
.L2886:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L2888
	je	.L6131
.L2888:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L2890
	je	.L6132
.L2890:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L2892
	je	.L6133
.L2892:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L2894
	je	.L6134
.L2894:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L2896
	je	.L6135
.L2896:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L2898
	je	.L6136
.L2898:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L2900
	je	.L6137
.L2900:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L2902
	je	.L6138
.L2902:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L2904
	je	.L6139
.L2904:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L2906
	je	.L6140
.L2906:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L2908
	je	.L6141
.L2908:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L2910
	je	.L6142
.L2910:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L2912
	je	.L6143
.L2912:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L2914
	je	.L6144
.L2914:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L2916
	je	.L6145
.L2916:
	ucomisd	xmm0, QWORD PTR .LC257[rip]
	jp	.L2918
	je	.L6146
.L2918:
	ucomisd	xmm0, QWORD PTR .LC259[rip]
	jp	.L2920
	je	.L6147
.L2920:
	ucomisd	xmm0, QWORD PTR .LC261[rip]
	jp	.L2922
	je	.L6148
.L2922:
	ucomisd	xmm0, QWORD PTR .LC263[rip]
	jp	.L2924
	je	.L6149
.L2924:
	ucomisd	xmm0, QWORD PTR .LC264[rip]
	jp	.L2926
	je	.L6150
.L2926:
	ucomisd	xmm0, QWORD PTR .LC266[rip]
	jp	.L2928
	je	.L6151
.L2928:
	ucomisd	xmm0, QWORD PTR .LC268[rip]
	jp	.L2930
	je	.L6152
.L2930:
	ucomisd	xmm0, QWORD PTR .LC270[rip]
	jp	.L2932
	je	.L6153
.L2932:
	ucomisd	xmm0, QWORD PTR .LC272[rip]
	jp	.L2934
	je	.L6154
.L2934:
	ucomisd	xmm0, QWORD PTR .LC274[rip]
	jp	.L2936
	je	.L6155
.L2936:
	ucomisd	xmm0, QWORD PTR .LC276[rip]
	jp	.L2938
	je	.L6156
.L2938:
	ucomisd	xmm0, QWORD PTR .LC278[rip]
	jp	.L2940
	je	.L6157
.L2940:
	ucomisd	xmm0, QWORD PTR .LC281[rip]
	jp	.L2942
	je	.L6158
.L2942:
	ucomisd	xmm0, QWORD PTR .LC284[rip]
	jp	.L2944
	je	.L6159
.L2944:
	ucomisd	xmm0, QWORD PTR .LC286[rip]
	jp	.L2946
	je	.L6160
.L2946:
	ucomisd	xmm0, QWORD PTR .LC290[rip]
	jp	.L2948
	je	.L6161
.L2948:
	ucomisd	xmm0, QWORD PTR .LC292[rip]
	jp	.L2950
	je	.L6162
.L2950:
	ucomisd	xmm0, QWORD PTR .LC294[rip]
	jp	.L2952
	je	.L6163
.L2952:
	ucomisd	xmm0, QWORD PTR .LC296[rip]
	jp	.L2954
	je	.L6164
.L2954:
	ucomisd	xmm0, QWORD PTR .LC298[rip]
	jp	.L2956
	je	.L6165
.L2956:
	ucomisd	xmm0, QWORD PTR .LC300[rip]
	jp	.L2958
	je	.L6166
.L2958:
	ucomisd	xmm0, QWORD PTR .LC302[rip]
	jp	.L2960
	je	.L6167
.L2960:
	ucomisd	xmm0, QWORD PTR .LC304[rip]
	jp	.L2962
	je	.L6168
.L2962:
	ucomisd	xmm0, QWORD PTR .LC306[rip]
	jp	.L2964
	je	.L6169
.L2964:
	ucomisd	xmm0, QWORD PTR .LC308[rip]
	jp	.L2966
	je	.L6170
.L2966:
	ucomisd	xmm0, QWORD PTR .LC310[rip]
	jp	.L2968
	je	.L6171
.L2968:
	ucomisd	xmm0, QWORD PTR .LC312[rip]
	jp	.L2970
	je	.L6172
.L2970:
	ucomisd	xmm0, QWORD PTR .LC314[rip]
	jp	.L2972
	je	.L6173
.L2972:
	ucomisd	xmm0, QWORD PTR .LC316[rip]
	jp	.L2974
	je	.L6174
.L2974:
	ucomisd	xmm0, QWORD PTR .LC318[rip]
	jp	.L2976
	je	.L6175
.L2976:
	ucomisd	xmm0, QWORD PTR .LC320[rip]
	jp	.L2978
	je	.L6176
.L2978:
	ucomisd	xmm0, QWORD PTR .LC322[rip]
	jp	.L2980
	je	.L6177
.L2980:
	ucomisd	xmm0, QWORD PTR .LC324[rip]
	jp	.L2982
	je	.L6178
.L2982:
	ucomisd	xmm0, QWORD PTR .LC326[rip]
	jp	.L2984
	je	.L6179
.L2984:
	ucomisd	xmm0, QWORD PTR .LC328[rip]
	jp	.L2986
	je	.L6180
.L2986:
	ucomisd	xmm0, QWORD PTR .LC330[rip]
	jp	.L2988
	je	.L6181
.L2988:
	ucomisd	xmm0, QWORD PTR .LC332[rip]
	jp	.L2990
	je	.L6182
.L2990:
	ucomisd	xmm0, QWORD PTR .LC334[rip]
	jp	.L2992
	je	.L6183
.L2992:
	ucomisd	xmm0, QWORD PTR .LC336[rip]
	jp	.L2994
	je	.L6184
.L2994:
	ucomisd	xmm0, QWORD PTR .LC338[rip]
	jp	.L2996
	je	.L6185
.L2996:
	ucomisd	xmm0, QWORD PTR .LC340[rip]
	jp	.L2998
	je	.L6186
.L2998:
	ucomisd	xmm0, QWORD PTR .LC342[rip]
	jp	.L3000
	je	.L6187
.L3000:
	ucomisd	xmm0, QWORD PTR .LC344[rip]
	jp	.L3002
	je	.L6188
.L3002:
	ucomisd	xmm0, QWORD PTR .LC346[rip]
	jp	.L3004
	je	.L6189
.L3004:
	ucomisd	xmm0, QWORD PTR .LC348[rip]
	jp	.L3006
	je	.L6190
.L3006:
	ucomisd	xmm0, QWORD PTR .LC350[rip]
	jp	.L3008
	je	.L6191
.L3008:
	ucomisd	xmm0, QWORD PTR .LC352[rip]
	jp	.L3010
	je	.L6192
.L3010:
	ucomisd	xmm0, QWORD PTR .LC354[rip]
	jp	.L3012
	je	.L6193
.L3012:
	ucomisd	xmm0, QWORD PTR .LC356[rip]
	jp	.L3014
	je	.L6194
.L3014:
	ucomisd	xmm0, QWORD PTR .LC170[rip]
	jp	.L3016
	je	.L6195
.L3016:
	ucomisd	xmm0, QWORD PTR .LC359[rip]
	jp	.L3018
	je	.L6196
.L3018:
	ucomisd	xmm0, QWORD PTR .LC361[rip]
	jp	.L3020
	je	.L6197
.L3020:
	ucomisd	xmm0, QWORD PTR .LC363[rip]
	jp	.L3022
	je	.L6198
.L3022:
	ucomisd	xmm0, QWORD PTR .LC365[rip]
	jp	.L3024
	je	.L6199
.L3024:
	ucomisd	xmm0, QWORD PTR .LC367[rip]
	jp	.L3026
	je	.L6200
.L3026:
	ucomisd	xmm0, QWORD PTR .LC369[rip]
	jp	.L3028
	je	.L6201
.L3028:
	ucomisd	xmm0, QWORD PTR .LC371[rip]
	jp	.L3030
	je	.L6202
.L3030:
	ucomisd	xmm0, QWORD PTR .LC373[rip]
	jp	.L3032
	je	.L6203
.L3032:
	ucomisd	xmm0, QWORD PTR .LC375[rip]
	jp	.L3034
	je	.L6204
.L3034:
	ucomisd	xmm0, QWORD PTR .LC377[rip]
	jp	.L3036
	je	.L6205
.L3036:
	ucomisd	xmm0, QWORD PTR .LC379[rip]
	jp	.L3038
	je	.L6206
.L3038:
	ucomisd	xmm0, QWORD PTR .LC381[rip]
	jp	.L3040
	je	.L6207
.L3040:
	ucomisd	xmm0, QWORD PTR .LC382[rip]
	jp	.L3042
	je	.L6208
.L3042:
	ucomisd	xmm0, QWORD PTR .LC384[rip]
	jp	.L3044
	je	.L6209
.L3044:
	ucomisd	xmm0, QWORD PTR .LC385[rip]
	jp	.L3046
	je	.L6210
.L3046:
	ucomisd	xmm0, QWORD PTR .LC386[rip]
	jp	.L3048
	je	.L6211
.L3048:
	ucomisd	xmm0, QWORD PTR .LC388[rip]
	jp	.L3050
	je	.L6212
.L3050:
	ucomisd	xmm0, QWORD PTR .LC390[rip]
	jp	.L3052
	je	.L6213
.L3052:
	ucomisd	xmm0, QWORD PTR .LC391[rip]
	jp	.L3054
	je	.L6214
.L3054:
	ucomisd	xmm0, QWORD PTR .LC393[rip]
	jp	.L3056
	je	.L6215
.L3056:
	ucomisd	xmm0, QWORD PTR .LC395[rip]
	jp	.L3058
	je	.L6216
.L3058:
	ucomisd	xmm0, QWORD PTR .LC396[rip]
	jp	.L3060
	je	.L6217
.L3060:
	ucomisd	xmm0, QWORD PTR .LC398[rip]
	jp	.L3062
	je	.L6218
.L3062:
	ucomisd	xmm0, QWORD PTR .LC400[rip]
	jp	.L3064
	je	.L6219
.L3064:
	ucomisd	xmm0, QWORD PTR .LC402[rip]
	jp	.L3066
	je	.L6220
.L3066:
	ucomisd	xmm0, QWORD PTR .LC404[rip]
	jp	.L3068
	je	.L6221
.L3068:
	ucomisd	xmm0, QWORD PTR .LC406[rip]
	jp	.L3070
	je	.L6222
.L3070:
	ucomisd	xmm0, QWORD PTR .LC408[rip]
	jp	.L3072
	je	.L6223
.L3072:
	ucomisd	xmm0, QWORD PTR .LC410[rip]
	jp	.L3074
	je	.L6224
.L3074:
	ucomisd	xmm0, QWORD PTR .LC412[rip]
	jp	.L3076
	je	.L6225
.L3076:
	ucomisd	xmm0, QWORD PTR .LC414[rip]
	jp	.L3078
	je	.L6226
.L3078:
	ucomisd	xmm0, QWORD PTR .LC416[rip]
	jp	.L3080
	je	.L6227
.L3080:
	ucomisd	xmm0, QWORD PTR .LC418[rip]
	jp	.L3082
	je	.L6228
.L3082:
	ucomisd	xmm0, QWORD PTR .LC420[rip]
	jp	.L3084
	je	.L6229
.L3084:
	ucomisd	xmm0, QWORD PTR .LC422[rip]
	jp	.L3086
	je	.L6230
.L3086:
	ucomisd	xmm0, QWORD PTR .LC424[rip]
	jp	.L3088
	je	.L6231
.L3088:
	ucomisd	xmm0, QWORD PTR .LC426[rip]
	jp	.L3090
	je	.L6232
.L3090:
	ucomisd	xmm0, QWORD PTR .LC428[rip]
	jp	.L3092
	je	.L6233
.L3092:
	ucomisd	xmm0, QWORD PTR .LC430[rip]
	jp	.L3094
	je	.L6234
.L3094:
	ucomisd	xmm0, QWORD PTR .LC432[rip]
	jp	.L3096
	je	.L6235
.L3096:
	ucomisd	xmm0, QWORD PTR .LC435[rip]
	jp	.L3098
	je	.L6236
.L3098:
	ucomisd	xmm0, QWORD PTR .LC438[rip]
	jp	.L3100
	je	.L6237
.L3100:
	ucomisd	xmm0, QWORD PTR .LC440[rip]
	jp	.L3102
	je	.L6238
.L3102:
	ucomisd	xmm0, QWORD PTR .LC442[rip]
	jp	.L3104
	je	.L6239
.L3104:
	ucomisd	xmm0, QWORD PTR .LC444[rip]
	jp	.L3106
	je	.L6240
.L3106:
	ucomisd	xmm0, QWORD PTR .LC446[rip]
	jp	.L3108
	je	.L6241
.L3108:
	ucomisd	xmm0, QWORD PTR .LC448[rip]
	jp	.L3110
	je	.L6242
.L3110:
	ucomisd	xmm0, QWORD PTR .LC450[rip]
	jp	.L3112
	je	.L6243
.L3112:
	ucomisd	xmm0, QWORD PTR .LC452[rip]
	jp	.L3114
	je	.L6244
.L3114:
	ucomisd	xmm0, QWORD PTR .LC454[rip]
	jp	.L3116
	je	.L6245
.L3116:
	ucomisd	xmm0, QWORD PTR .LC456[rip]
	jp	.L3118
	je	.L6246
.L3118:
	ucomisd	xmm0, QWORD PTR .LC458[rip]
	jp	.L3120
	je	.L6247
.L3120:
	ucomisd	xmm0, QWORD PTR .LC460[rip]
	jp	.L3122
	je	.L6248
.L3122:
	ucomisd	xmm0, QWORD PTR .LC462[rip]
	jp	.L3124
	je	.L6249
.L3124:
	ucomisd	xmm0, QWORD PTR .LC464[rip]
	jp	.L3126
	je	.L6250
.L3126:
	ucomisd	xmm0, QWORD PTR .LC466[rip]
	jp	.L3128
	je	.L6251
.L3128:
	ucomisd	xmm0, QWORD PTR .LC468[rip]
	jp	.L3130
	je	.L6252
.L3130:
	ucomisd	xmm0, QWORD PTR .LC470[rip]
	jp	.L3132
	je	.L6253
.L3132:
	ucomisd	xmm0, QWORD PTR .LC472[rip]
	jp	.L3134
	je	.L6254
.L3134:
	ucomisd	xmm0, QWORD PTR .LC474[rip]
	jp	.L3136
	je	.L6255
.L3136:
	ucomisd	xmm0, QWORD PTR .LC476[rip]
	jp	.L3138
	je	.L6256
.L3138:
	ucomisd	xmm0, QWORD PTR .LC478[rip]
	jp	.L3140
	je	.L6257
.L3140:
	ucomisd	xmm0, QWORD PTR .LC480[rip]
	jp	.L3142
	je	.L6258
.L3142:
	ucomisd	xmm0, QWORD PTR .LC487[rip]
	jp	.L3144
	je	.L6259
.L3144:
	ucomisd	xmm0, QWORD PTR .LC488[rip]
	jp	.L3146
	je	.L6260
.L3146:
	ucomisd	xmm0, QWORD PTR .LC702[rip]
	jp	.L3148
	je	.L6261
.L3148:
	ucomisd	xmm0, QWORD PTR .LC704[rip]
	jp	.L3150
	je	.L6262
.L3150:
	ucomisd	xmm0, QWORD PTR .LC706[rip]
	jp	.L3152
	je	.L6263
.L3152:
	ucomisd	xmm0, QWORD PTR .LC708[rip]
	jp	.L3154
	je	.L6264
.L3154:
	ucomisd	xmm0, QWORD PTR .LC710[rip]
	jp	.L3156
	je	.L6265
.L3156:
	ucomisd	xmm0, QWORD PTR .LC712[rip]
	jp	.L3158
	je	.L6266
.L3158:
	ucomisd	xmm0, QWORD PTR .LC1021[rip]
	jp	.L3160
	je	.L6267
.L3160:
	ucomisd	xmm0, QWORD PTR .LC1022[rip]
	jp	.L3162
	je	.L6268
.L3162:
	ucomisd	xmm0, QWORD PTR .LC1023[rip]
	jp	.L3164
	je	.L6269
.L3164:
	ucomisd	xmm0, QWORD PTR .LC1024[rip]
	jp	.L3166
	je	.L6270
.L3166:
	ucomisd	xmm0, QWORD PTR .LC1025[rip]
	jp	.L3168
	je	.L6271
.L3168:
	ucomisd	xmm0, QWORD PTR .LC1026[rip]
	jp	.L3170
	je	.L6272
.L3170:
	ucomisd	xmm0, QWORD PTR .LC1028[rip]
	jp	.L3172
	je	.L6273
.L3172:
	ucomisd	xmm0, QWORD PTR .LC1030[rip]
	jp	.L3174
	je	.L6274
.L3174:
	ucomisd	xmm0, QWORD PTR .LC1032[rip]
	jp	.L3176
	je	.L6275
.L3176:
	ucomisd	xmm0, QWORD PTR .LC1034[rip]
	jp	.L3178
	je	.L6276
.L3178:
	ucomisd	xmm0, QWORD PTR .LC1036[rip]
	jp	.L3180
	je	.L6277
.L3180:
	ucomisd	xmm0, QWORD PTR .LC1038[rip]
	jp	.L3182
	je	.L6278
.L3182:
	ucomisd	xmm0, QWORD PTR .LC1040[rip]
	jp	.L3184
	je	.L6279
.L3184:
	ucomisd	xmm0, QWORD PTR .LC1042[rip]
	jp	.L3186
	je	.L6280
.L3186:
	ucomisd	xmm0, QWORD PTR .LC1044[rip]
	jp	.L3188
	je	.L6281
.L3188:
	ucomisd	xmm0, QWORD PTR .LC1046[rip]
	jp	.L3190
	je	.L6282
.L3190:
	ucomisd	xmm0, QWORD PTR .LC1047[rip]
	jp	.L3192
	je	.L6283
.L3192:
	ucomisd	xmm0, QWORD PTR .LC1049[rip]
	jp	.L3194
	je	.L6284
.L3194:
	ucomisd	xmm0, QWORD PTR .LC1051[rip]
	jp	.L3196
	je	.L6285
.L3196:
	ucomisd	xmm0, QWORD PTR .LC1053[rip]
	jp	.L3198
	je	.L6286
.L3198:
	ucomisd	xmm0, QWORD PTR .LC1055[rip]
	jp	.L3200
	je	.L6287
.L3200:
	ucomisd	xmm0, QWORD PTR .LC1057[rip]
	jp	.L3202
	je	.L6288
.L3202:
	ucomisd	xmm0, QWORD PTR .LC1059[rip]
	jp	.L3204
	je	.L6289
.L3204:
	ucomisd	xmm0, QWORD PTR .LC1061[rip]
	jp	.L3206
	je	.L6290
.L3206:
	ucomisd	xmm0, QWORD PTR .LC1063[rip]
	jp	.L3208
	je	.L6291
.L3208:
	ucomisd	xmm0, QWORD PTR .LC1065[rip]
	jp	.L3210
	je	.L6292
.L3210:
	ucomisd	xmm0, QWORD PTR .LC1067[rip]
	jp	.L3212
	je	.L6293
.L3212:
	ucomisd	xmm0, QWORD PTR .LC1069[rip]
	jp	.L3214
	je	.L6294
.L3214:
	ucomisd	xmm0, QWORD PTR .LC1071[rip]
	jp	.L3216
	je	.L6295
.L3216:
	ucomisd	xmm0, QWORD PTR .LC1073[rip]
	jp	.L3218
	je	.L6296
.L3218:
	ucomisd	xmm0, QWORD PTR .LC1075[rip]
	jp	.L3220
	je	.L6297
.L3220:
	ucomisd	xmm0, QWORD PTR .LC1077[rip]
	jp	.L3222
	je	.L6298
.L3222:
	ucomisd	xmm0, QWORD PTR .LC1079[rip]
	jp	.L3224
	je	.L6299
.L3224:
	ucomisd	xmm0, QWORD PTR .LC1081[rip]
	jp	.L3226
	je	.L6300
.L3226:
	ucomisd	xmm0, QWORD PTR .LC1083[rip]
	jp	.L3228
	je	.L6301
.L3228:
	ucomisd	xmm0, QWORD PTR .LC1085[rip]
	jp	.L3230
	je	.L6302
.L3230:
	ucomisd	xmm0, QWORD PTR .LC1087[rip]
	jp	.L3232
	je	.L6303
.L3232:
	ucomisd	xmm0, QWORD PTR .LC1089[rip]
	jp	.L3234
	je	.L6304
.L3234:
	ucomisd	xmm0, QWORD PTR .LC1091[rip]
	jp	.L3236
	je	.L6305
.L3236:
	ucomisd	xmm0, QWORD PTR .LC1093[rip]
	jp	.L3238
	je	.L6306
.L3238:
	ucomisd	xmm0, QWORD PTR .LC1095[rip]
	jp	.L3240
	je	.L6307
.L3240:
	ucomisd	xmm0, QWORD PTR .LC1097[rip]
	jp	.L3242
	je	.L6308
.L3242:
	ucomisd	xmm0, QWORD PTR .LC1099[rip]
	jp	.L3244
	je	.L6309
.L3244:
	ucomisd	xmm0, QWORD PTR .LC1317[rip]
	jp	.L3246
	je	.L6310
.L3246:
	ucomisd	xmm0, QWORD PTR .LC1319[rip]
	jp	.L3248
	je	.L6311
.L3248:
	ucomisd	xmm0, QWORD PTR .LC1321[rip]
	jp	.L3250
	je	.L6312
.L3250:
	ucomisd	xmm0, QWORD PTR .LC1323[rip]
	jp	.L3252
	je	.L6313
.L3252:
	ucomisd	xmm0, QWORD PTR .LC1325[rip]
	jp	.L3254
	je	.L6314
.L3254:
	ucomisd	xmm0, QWORD PTR .LC1327[rip]
	jp	.L3256
	je	.L6315
.L3256:
	ucomisd	xmm0, QWORD PTR .LC1329[rip]
	jp	.L3258
	je	.L6316
.L3258:
	ucomisd	xmm0, QWORD PTR .LC1331[rip]
	jp	.L3260
	je	.L6317
.L3260:
	ucomisd	xmm0, QWORD PTR .LC1333[rip]
	jp	.L3262
	je	.L6318
.L3262:
	ucomisd	xmm0, QWORD PTR .LC1335[rip]
	jp	.L3264
	je	.L6319
.L3264:
	ucomisd	xmm0, QWORD PTR .LC1337[rip]
	jp	.L3266
	je	.L6320
.L3266:
	ucomisd	xmm0, QWORD PTR .LC1339[rip]
	jp	.L3268
	je	.L6321
.L3268:
	ucomisd	xmm0, QWORD PTR .LC1341[rip]
	jp	.L3270
	je	.L6322
.L3270:
	ucomisd	xmm0, QWORD PTR .LC1343[rip]
	jp	.L3272
	je	.L6323
.L3272:
	ucomisd	xmm0, QWORD PTR .LC1345[rip]
	jp	.L3274
	je	.L6324
.L3274:
	ucomisd	xmm0, QWORD PTR .LC1347[rip]
	jp	.L3276
	je	.L6325
.L3276:
	ucomisd	xmm0, QWORD PTR .LC1349[rip]
	jp	.L3278
	je	.L6326
.L3278:
	ucomisd	xmm0, QWORD PTR .LC1351[rip]
	jp	.L3280
	je	.L6327
.L3280:
	ucomisd	xmm0, QWORD PTR .LC1353[rip]
	jp	.L3282
	je	.L6328
.L3282:
	ucomisd	xmm0, QWORD PTR .LC1355[rip]
	jp	.L3284
	je	.L6329
.L3284:
	ucomisd	xmm0, QWORD PTR .LC1357[rip]
	jp	.L3286
	je	.L6330
.L3286:
	ucomisd	xmm0, QWORD PTR .LC1359[rip]
	jp	.L3288
	je	.L6331
.L3288:
	ucomisd	xmm0, QWORD PTR .LC1361[rip]
	jp	.L3290
	je	.L6332
.L3290:
	ucomisd	xmm0, QWORD PTR .LC1363[rip]
	jp	.L3292
	je	.L6333
.L3292:
	ucomisd	xmm0, QWORD PTR .LC1365[rip]
	jp	.L3294
	je	.L6334
.L3294:
	ucomisd	xmm0, QWORD PTR .LC1367[rip]
	jp	.L3296
	je	.L6335
.L3296:
	ucomisd	xmm0, QWORD PTR .LC1369[rip]
	jp	.L3298
	je	.L6336
.L3298:
	ucomisd	xmm0, QWORD PTR .LC1371[rip]
	jp	.L3300
	je	.L6337
.L3300:
	ucomisd	xmm0, QWORD PTR .LC1373[rip]
	jp	.L3302
	je	.L6338
.L3302:
	ucomisd	xmm0, QWORD PTR .LC1375[rip]
	jp	.L3304
	je	.L6339
.L3304:
	ucomisd	xmm0, QWORD PTR .LC1377[rip]
	jp	.L3306
	je	.L6340
.L3306:
	ucomisd	xmm0, QWORD PTR .LC1379[rip]
	jp	.L3308
	je	.L6341
.L3308:
	ucomisd	xmm0, QWORD PTR .LC1381[rip]
	jp	.L3310
	je	.L6342
.L3310:
	ucomisd	xmm0, QWORD PTR .LC1383[rip]
	jp	.L3312
	je	.L6343
.L3312:
	ucomisd	xmm0, QWORD PTR .LC1385[rip]
	jp	.L3314
	je	.L6344
.L3314:
	ucomisd	xmm0, QWORD PTR .LC1387[rip]
	jp	.L3316
	je	.L6345
.L3316:
	ucomisd	xmm0, QWORD PTR .LC1389[rip]
	jp	.L3318
	je	.L6346
.L3318:
	ucomisd	xmm0, QWORD PTR .LC1391[rip]
	jp	.L3320
	je	.L6347
.L3320:
	ucomisd	xmm0, QWORD PTR .LC1393[rip]
	jp	.L3322
	je	.L6348
.L3322:
	ucomisd	xmm0, QWORD PTR .LC1395[rip]
	jp	.L3324
	je	.L6349
.L3324:
	ucomisd	xmm0, QWORD PTR .LC1397[rip]
	jp	.L3326
	je	.L6350
.L3326:
	ucomisd	xmm0, QWORD PTR .LC1399[rip]
	jp	.L1016
	jne	.L1016
.L3328:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1401
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6350:
.L3327:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1400
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6346:
.L3319:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1392
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6347:
.L3321:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1394
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6348:
.L3323:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1396
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6349:
.L3325:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1398
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6330:
.L3287:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1360
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6331:
.L3289:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1362
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6332:
.L3291:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1364
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6333:
.L3293:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1366
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6334:
.L3295:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1368
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6335:
.L3297:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1370
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6336:
.L3299:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1372
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6337:
.L3301:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1374
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6338:
.L3303:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1376
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6339:
.L3305:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1378
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6340:
.L3307:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1380
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6341:
.L3309:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1382
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6342:
.L3311:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1384
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6343:
.L3313:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1386
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6344:
.L3315:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1388
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6345:
.L3317:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1390
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6298:
.L3223:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1306
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6299:
.L3225:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1307
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6300:
.L3227:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1308
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6301:
.L3229:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1309
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6302:
.L3231:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1310
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6303:
.L3233:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1311
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6304:
.L3235:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1312
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6305:
.L3237:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1313
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6306:
.L3239:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1314
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6307:
.L3241:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1315
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6308:
.L3243:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1316
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6309:
.L3245:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1318
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6310:
.L3247:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1320
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6311:
.L3249:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1322
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6312:
.L3251:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1324
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6313:
.L3253:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1326
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6314:
.L3255:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1328
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6315:
.L3257:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1330
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6316:
.L3259:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1332
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6317:
.L3261:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1334
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6318:
.L3263:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1336
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6319:
.L3265:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1338
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6320:
.L3267:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1340
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6321:
.L3269:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1342
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6322:
.L3271:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1344
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6323:
.L3273:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1346
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6324:
.L3275:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1348
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6325:
.L3277:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1350
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6326:
.L3279:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1352
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6327:
.L3281:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1354
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6328:
.L3283:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1356
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6329:
.L3285:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1358
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5846:
.L2394:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC881
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5847:
.L2396:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC882
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5848:
.L2398:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 14
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC883
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5849:
.L2400:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC884
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5850:
.L2402:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC885
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5851:
.L2404:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC886
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5852:
.L2406:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC887
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5853:
.L2408:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC888
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5854:
.L2410:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC889
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5855:
.L2412:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC890
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5856:
.L2414:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC891
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5857:
.L2416:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC892
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5858:
.L2418:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 36
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC893
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5859:
.L2420:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 26
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC894
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5860:
.L2422:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC895
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5861:
.L2424:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 30
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 24
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC896
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5839:
.L2809:
	call	fb_DoubleToStr
	xor	ebx, ebx
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	mov	r8d, 3
	mov	esi, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MODTYPE$
	mov	rdx, rax
	mov	rsi, rcx
	call	fb_StrAssign
	jmp	.L1016
.L4765:
.L2379:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC874
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5840:
.L2382:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC875
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5841:
.L2384:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC876
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5842:
.L2386:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC877
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5843:
.L2388:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC878
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5844:
.L2390:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC879
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5845:
.L2392:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 15
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC880
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5832:
.L2171:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 17
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC778
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:LAMP$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5831:
.L2162:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4111
	je	.L4661
.L4111:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L2174
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6351
.L2174:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2177
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6352
.L2177:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6352:
.L2178:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5834:
.L2182:
	movsd	xmm0, QWORD PTR [rbp+1664+rax*8]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1656+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 34
	lea	r9, [rsp+1296]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC781
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5833:
.L2180:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4112
	je	.L4665
.L4112:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1016
	jne	.L1016
.L2185:
	movsd	xmm0, QWORD PTR [rbp+1696+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1688+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1680+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1672+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1664+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+16], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+24], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+720]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+752]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+784]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+848]
	mov	r8d, 9
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC524
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+880]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+944]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 6
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC675
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1008]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC763
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1072]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1104]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1136]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1168]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+24]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+16]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD3$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4665:
.L2183:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC779
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 47
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC780
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5835:
.L2187:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4113
	je	.L4669
.L4113:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L2192
	je	.L6353
.L2192:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L2194
	je	.L6354
.L2194:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L2196
	je	.L6355
.L2196:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L2198
	je	.L6356
.L2198:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L2200
	je	.L6357
.L2200:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L2202
	je	.L6358
.L2202:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L2204
	je	.L6359
.L2204:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L2206
	je	.L6360
.L2206:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L2208
	je	.L6361
.L2208:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L2210
	je	.L6362
.L2210:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L2212
	je	.L6363
.L2212:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L2214
	je	.L6364
.L2214:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L2216
	je	.L6365
.L2216:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L2218
	je	.L6366
.L2218:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L2220
	je	.L6367
.L2220:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L2222
	je	.L6368
.L2222:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L2224
	je	.L6369
.L2224:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L2226
	je	.L6370
.L2226:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L2228
	je	.L6371
.L2228:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L2230
	je	.L6372
.L2230:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L2232
	je	.L6373
.L2232:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L2234
	je	.L6374
.L2234:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L2236
	je	.L6375
.L2236:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L2238
	je	.L6376
.L2238:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L2240
	je	.L6377
.L2240:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L2242
	je	.L6378
.L2242:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L2244
	je	.L6379
.L2244:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L2246
	je	.L6380
.L2246:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L2248
	je	.L6381
.L2248:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L2250
	je	.L6382
.L2250:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L2252
	je	.L6383
.L2252:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L2254
	je	.L6384
.L2254:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L2256
	je	.L6385
.L2256:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L2258
	je	.L6386
.L2258:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L2260
	je	.L6387
.L2260:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L2262
	je	.L6388
.L2262:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L2264
	je	.L6389
.L2264:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L2266
	je	.L6390
.L2266:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L2268
	je	.L6391
.L2268:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L2270
	je	.L6392
.L2270:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L2272
	je	.L6393
.L2272:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L2274
	je	.L6394
.L2274:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L2276
	je	.L6395
.L2276:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L2278
	je	.L6396
.L2278:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L2280
	je	.L6397
.L2280:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L2282
	je	.L6398
.L2282:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L1016
	jne	.L1016
.L2284:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC829
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6395:
.L2277:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC825
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6396:
.L2279:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC826
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6397:
.L2281:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC827
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6398:
.L2283:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC828
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6379:
.L2245:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC809
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6380:
.L2247:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC810
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6381:
.L2249:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC811
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6382:
.L2251:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC812
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6383:
.L2253:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC813
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6384:
.L2255:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC814
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6385:
.L2257:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC815
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6386:
.L2259:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC816
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6387:
.L2261:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC817
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6388:
.L2263:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC818
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6389:
.L2265:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC819
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6390:
.L2267:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC820
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6391:
.L2269:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC821
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6392:
.L2271:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC822
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6393:
.L2273:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC823
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6394:
.L2275:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC824
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6170:
.L2967:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1178
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6171:
.L2969:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1179
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6172:
.L2971:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1180
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6173:
.L2973:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1181
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6174:
.L2975:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1182
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6175:
.L2977:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1183
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6176:
.L2979:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1184
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6177:
.L2981:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1185
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6178:
.L2983:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1186
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6179:
.L2985:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1187
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6180:
.L2987:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1188
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6181:
.L2989:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1189
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6182:
.L2991:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1190
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6183:
.L2993:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1191
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6184:
.L2995:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1192
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6185:
.L2997:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1193
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6186:
.L2999:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1194
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6187:
.L3001:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1195
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6188:
.L3003:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1196
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6189:
.L3005:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1197
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6190:
.L3007:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1198
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6191:
.L3009:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1199
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6192:
.L3011:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1200
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6193:
.L3013:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1201
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6194:
.L3015:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1202
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6195:
.L3017:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1203
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6196:
.L3019:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1204
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6197:
.L3021:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1205
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6198:
.L3023:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1206
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6199:
.L3025:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1207
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6200:
.L3027:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1208
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6201:
.L3029:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1209
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6202:
.L3031:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1210
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6203:
.L3033:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1211
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6204:
.L3035:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1212
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6205:
.L3037:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1213
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6206:
.L3039:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1214
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6207:
.L3041:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1215
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6208:
.L3043:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1216
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6209:
.L3045:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1217
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6210:
.L3047:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1218
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6211:
.L3049:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1219
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6212:
.L3051:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 20
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1220
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6213:
.L3053:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1221
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6214:
.L3055:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1222
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6215:
.L3057:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1223
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6216:
.L3059:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1224
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6217:
.L3061:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1225
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6218:
.L3063:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1226
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6219:
.L3065:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1227
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6220:
.L3067:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1228
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6221:
.L3069:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1229
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6222:
.L3071:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1230
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6223:
.L3073:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1231
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6224:
.L3075:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1232
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6225:
.L3077:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1233
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6226:
.L3079:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1234
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6227:
.L3081:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1235
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6228:
.L3083:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1236
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6229:
.L3085:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1237
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6230:
.L3087:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1238
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6231:
.L3089:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1239
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6232:
.L3091:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1240
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6233:
.L3093:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1241
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6234:
.L3095:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1242
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6235:
.L3097:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1243
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6236:
.L3099:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1244
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6237:
.L3101:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1245
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6238:
.L3103:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1246
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6239:
.L3105:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1247
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6240:
.L3107:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1248
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6241:
.L3109:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1249
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6242:
.L3111:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1250
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6243:
.L3113:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1251
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6244:
.L3115:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1252
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6245:
.L3117:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1253
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6246:
.L3119:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1254
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6247:
.L3121:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1255
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6248:
.L3123:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1256
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6249:
.L3125:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1257
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6250:
.L3127:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1258
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6251:
.L3129:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1259
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6252:
.L3131:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1260
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6253:
.L3133:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1261
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6254:
.L3135:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1262
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6255:
.L3137:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1263
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6256:
.L3139:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1264
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6257:
.L3141:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1265
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6258:
.L3143:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1266
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6259:
.L3145:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1267
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6260:
.L3147:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1268
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6261:
.L3149:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1269
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6262:
.L3151:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1270
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6263:
.L3153:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1271
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6264:
.L3155:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1272
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6265:
.L3157:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1273
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6266:
.L3159:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1274
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6267:
.L3161:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1275
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6268:
.L3163:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1276
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6269:
.L3165:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1277
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6270:
.L3167:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1278
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6271:
.L3169:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1279
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6272:
.L3171:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1280
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6273:
.L3173:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1281
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6274:
.L3175:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1282
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6275:
.L3177:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1283
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6276:
.L3179:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1284
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6277:
.L3181:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1285
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6278:
.L3183:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1286
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6279:
.L3185:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1287
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6280:
.L3187:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1288
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6281:
.L3189:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1289
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6282:
.L3191:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1290
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6283:
.L3193:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1291
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6284:
.L3195:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1292
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6285:
.L3197:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1293
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6286:
.L3199:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1294
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6287:
.L3201:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1295
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6288:
.L3203:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1296
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6289:
.L3205:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1297
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6290:
.L3207:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1298
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6291:
.L3209:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1299
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6292:
.L3211:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1300
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6293:
.L3213:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1301
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6294:
.L3215:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1302
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6295:
.L3217:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1303
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6296:
.L3219:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1304
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6297:
.L3221:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1305
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6106:
.L2839:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1114
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6107:
.L2841:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1115
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6108:
.L2843:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1116
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6109:
.L2845:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1117
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6110:
.L2847:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1118
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6111:
.L2849:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1119
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6112:
.L2851:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1120
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6113:
.L2853:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1121
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6114:
.L2855:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1122
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6115:
.L2857:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1123
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6116:
.L2859:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1124
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6117:
.L2861:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1125
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6118:
.L2863:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1126
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6119:
.L2865:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1127
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6120:
.L2867:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1128
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6121:
.L2869:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1129
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6122:
.L2871:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1130
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6123:
.L2873:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1131
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6124:
.L2875:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1132
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6125:
.L2877:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1133
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6126:
.L2879:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1134
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6127:
.L2881:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1135
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6128:
.L2883:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1136
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6129:
.L2885:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1137
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6130:
.L2887:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1138
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6131:
.L2889:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1139
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6132:
.L2891:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1140
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6133:
.L2893:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1141
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6134:
.L2895:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1142
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6135:
.L2897:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1143
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6136:
.L2899:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1144
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6137:
.L2901:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1145
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6138:
.L2903:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1146
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6139:
.L2905:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1147
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6140:
.L2907:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1148
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6141:
.L2909:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1149
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6142:
.L2911:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1150
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6143:
.L2913:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1151
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6144:
.L2915:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1152
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6145:
.L2917:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1153
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6146:
.L2919:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1154
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6147:
.L2921:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1155
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6148:
.L2923:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1156
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6149:
.L2925:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1157
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6150:
.L2927:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1158
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6151:
.L2929:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1159
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6152:
.L2931:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1160
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6153:
.L2933:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1161
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6154:
.L2935:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1162
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6155:
.L2937:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1163
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6156:
.L2939:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1164
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6157:
.L2941:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1165
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6158:
.L2943:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1166
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6159:
.L2945:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1167
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6160:
.L2947:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1168
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6161:
.L2949:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1169
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6162:
.L2951:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1170
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6163:
.L2953:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1171
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6164:
.L2955:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1172
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6165:
.L2957:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1173
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6166:
.L2959:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1174
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6167:
.L2961:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1175
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6168:
.L2963:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1176
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6169:
.L2965:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1177
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5820:
.L1379:
	sal	rax, 3
	pxor	xmm2, xmm2
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm2
	ucomisd	xmm0, xmm2
	jp	.L4096
	je	.L4287
.L4096:
	movsd	xmm1, QWORD PTR .LC56[rip]
	ucomisd	xmm0, xmm1
	jp	.L1413
	je	.L6399
.L1413:
	movsd	xmm3, QWORD PTR .LC59[rip]
	ucomisd	xmm0, xmm3
	movsd	QWORD PTR [rsp+16], xmm3
	jp	.L1415
	je	.L6400
.L1415:
	movsd	xmm2, QWORD PTR .LC62[rip]
	ucomisd	xmm0, xmm2
	jp	.L1417
	je	.L6401
.L1417:
	movsd	xmm3, QWORD PTR .LC65[rip]
	ucomisd	xmm0, xmm3
	jp	.L1419
	je	.L6402
.L1419:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L1421
	je	.L6403
.L1421:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L1423
	je	.L6404
.L1423:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L1425
	je	.L6405
.L1425:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L1427
	je	.L6406
.L1427:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L1429
	je	.L6407
.L1429:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L1431
	je	.L6408
.L1431:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L1433
	je	.L6409
.L1433:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L1435
	je	.L6410
.L1435:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L1437
	je	.L6411
.L1437:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1439
	je	.L6412
.L1439:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L1441
	je	.L6413
.L1441:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L1443
	je	.L6414
.L1443:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L1445
	je	.L6415
.L1445:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L1447
	je	.L6416
.L1447:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L1449
	je	.L6417
.L1449:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L1451
	je	.L6418
.L1451:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L1453
	je	.L6419
.L1453:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L1455
	je	.L6420
.L1455:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L1457
	je	.L6421
.L1457:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L1459
	je	.L6422
.L1459:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L1461
	je	.L6423
.L1461:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L1463
	je	.L6424
.L1463:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L1465
	je	.L6425
.L1465:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L1467
	je	.L6426
.L1467:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L1469
	je	.L6427
.L1469:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L1471
	je	.L6428
.L1471:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L1473
	je	.L6429
.L1473:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L1475
	je	.L6430
.L1475:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L1477
	je	.L6431
.L1477:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L1479
	je	.L6432
.L1479:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L1481
	je	.L6433
.L1481:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L1483
	je	.L6434
.L1483:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L1485
	je	.L6435
.L1485:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L1487
	je	.L6436
.L1487:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L1489
	je	.L6437
.L1489:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L1491
	je	.L6438
.L1491:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L1493
	je	.L6439
.L1493:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L1495
	je	.L6440
.L1495:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L1497
	je	.L6441
.L1497:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L1499
	je	.L6442
.L1499:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L1501
	je	.L6443
.L1501:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L1503
	je	.L6444
.L1503:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L1505
	je	.L6445
.L1505:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L1507
	je	.L6446
.L1507:
	ucomisd	xmm0, QWORD PTR .LC257[rip]
	jp	.L1509
	je	.L6447
.L1509:
	ucomisd	xmm0, QWORD PTR .LC259[rip]
	jp	.L1511
	je	.L6448
.L1511:
	ucomisd	xmm0, QWORD PTR .LC261[rip]
	jp	.L1513
	je	.L6449
.L1513:
	ucomisd	xmm0, QWORD PTR .LC263[rip]
	jp	.L1515
	je	.L6450
.L1515:
	ucomisd	xmm0, QWORD PTR .LC264[rip]
	jp	.L1517
	je	.L6451
.L1517:
	ucomisd	xmm0, QWORD PTR .LC266[rip]
	jp	.L1519
	je	.L6452
.L1519:
	ucomisd	xmm0, QWORD PTR .LC268[rip]
	jp	.L1521
	je	.L6453
.L1521:
	ucomisd	xmm0, QWORD PTR .LC270[rip]
	jp	.L1523
	je	.L6454
.L1523:
	ucomisd	xmm0, QWORD PTR .LC272[rip]
	jp	.L1525
	je	.L6455
.L1525:
	ucomisd	xmm0, QWORD PTR .LC274[rip]
	jp	.L1527
	je	.L6456
.L1527:
	ucomisd	xmm0, QWORD PTR .LC276[rip]
	jp	.L1529
	je	.L6457
.L1529:
	ucomisd	xmm0, QWORD PTR .LC278[rip]
	jp	.L1531
	je	.L6458
.L1531:
	ucomisd	xmm0, QWORD PTR .LC281[rip]
	jp	.L1533
	je	.L6459
.L1533:
	ucomisd	xmm0, QWORD PTR .LC284[rip]
	jp	.L1535
	je	.L6460
.L1535:
	ucomisd	xmm0, QWORD PTR .LC286[rip]
	jp	.L1537
	je	.L6461
.L1537:
	ucomisd	xmm0, QWORD PTR .LC288[rip]
	jp	.L1539
	je	.L6462
.L1539:
	ucomisd	xmm0, QWORD PTR .LC290[rip]
	jp	.L1541
	je	.L6463
.L1541:
	ucomisd	xmm0, QWORD PTR .LC292[rip]
	jp	.L1543
	je	.L6464
.L1543:
	ucomisd	xmm0, QWORD PTR .LC294[rip]
	jp	.L1545
	je	.L6465
.L1545:
	ucomisd	xmm0, QWORD PTR .LC296[rip]
	jp	.L1547
	je	.L6466
.L1547:
	ucomisd	xmm0, QWORD PTR .LC298[rip]
	jp	.L1549
	je	.L6467
.L1549:
	ucomisd	xmm0, QWORD PTR .LC300[rip]
	jp	.L1551
	je	.L6468
.L1551:
	ucomisd	xmm0, QWORD PTR .LC302[rip]
	jp	.L1553
	je	.L6469
.L1553:
	ucomisd	xmm0, QWORD PTR .LC304[rip]
	jp	.L1555
	je	.L6470
.L1555:
	ucomisd	xmm0, QWORD PTR .LC306[rip]
	jp	.L1557
	je	.L6471
.L1557:
	ucomisd	xmm0, QWORD PTR .LC308[rip]
	jp	.L1559
	je	.L6472
.L1559:
	ucomisd	xmm0, QWORD PTR .LC310[rip]
	jp	.L1561
	je	.L6473
.L1561:
	ucomisd	xmm0, QWORD PTR .LC312[rip]
	jp	.L1563
	je	.L6474
.L1563:
	ucomisd	xmm0, QWORD PTR .LC314[rip]
	jp	.L1565
	je	.L6475
.L1565:
	ucomisd	xmm0, QWORD PTR .LC316[rip]
	jp	.L1567
	je	.L6476
.L1567:
	ucomisd	xmm0, QWORD PTR .LC318[rip]
	jp	.L1569
	je	.L6477
.L1569:
	ucomisd	xmm0, QWORD PTR .LC320[rip]
	jp	.L1571
	je	.L6478
.L1571:
	ucomisd	xmm0, QWORD PTR .LC322[rip]
	jp	.L1573
	je	.L6479
.L1573:
	ucomisd	xmm0, QWORD PTR .LC324[rip]
	jp	.L1575
	je	.L6480
.L1575:
	ucomisd	xmm0, QWORD PTR .LC326[rip]
	jp	.L1577
	je	.L6481
.L1577:
	ucomisd	xmm0, QWORD PTR .LC328[rip]
	jp	.L1579
	je	.L6482
.L1579:
	ucomisd	xmm0, QWORD PTR .LC330[rip]
	jp	.L1581
	je	.L6483
.L1581:
	ucomisd	xmm0, QWORD PTR .LC332[rip]
	jp	.L1583
	je	.L6484
.L1583:
	ucomisd	xmm0, QWORD PTR .LC334[rip]
	jp	.L1585
	je	.L6485
.L1585:
	ucomisd	xmm0, QWORD PTR .LC336[rip]
	jp	.L1587
	je	.L6486
.L1587:
	ucomisd	xmm0, QWORD PTR .LC338[rip]
	jp	.L1589
	je	.L6487
.L1589:
	ucomisd	xmm0, QWORD PTR .LC340[rip]
	jp	.L1591
	je	.L6488
.L1591:
	ucomisd	xmm0, QWORD PTR .LC342[rip]
	jp	.L1593
	je	.L6489
.L1593:
	ucomisd	xmm0, QWORD PTR .LC344[rip]
	jp	.L1595
	je	.L6490
.L1595:
	ucomisd	xmm0, QWORD PTR .LC346[rip]
	jp	.L1597
	je	.L6491
.L1597:
	ucomisd	xmm0, QWORD PTR .LC348[rip]
	jp	.L1599
	je	.L6492
.L1599:
	ucomisd	xmm0, QWORD PTR .LC350[rip]
	jp	.L1601
	je	.L6493
.L1601:
	ucomisd	xmm0, QWORD PTR .LC352[rip]
	jp	.L1603
	je	.L6494
.L1603:
	ucomisd	xmm0, QWORD PTR .LC354[rip]
	jp	.L1605
	je	.L6495
.L1605:
	ucomisd	xmm0, QWORD PTR .LC356[rip]
	jp	.L1607
	je	.L6496
.L1607:
	ucomisd	xmm0, QWORD PTR .LC170[rip]
	jp	.L1609
	je	.L6497
.L1609:
	ucomisd	xmm0, QWORD PTR .LC359[rip]
	jp	.L1611
	je	.L6498
.L1611:
	ucomisd	xmm0, QWORD PTR .LC361[rip]
	jp	.L1613
	je	.L6499
.L1613:
	ucomisd	xmm0, QWORD PTR .LC363[rip]
	jp	.L1615
	je	.L6500
.L1615:
	ucomisd	xmm0, QWORD PTR .LC365[rip]
	jp	.L1617
	je	.L6501
.L1617:
	ucomisd	xmm0, QWORD PTR .LC367[rip]
	jp	.L1619
	je	.L6502
.L1619:
	ucomisd	xmm0, QWORD PTR .LC369[rip]
	jp	.L1621
	je	.L6503
.L1621:
	ucomisd	xmm0, QWORD PTR .LC371[rip]
	jp	.L1623
	je	.L6504
.L1623:
	ucomisd	xmm0, QWORD PTR .LC373[rip]
	jp	.L1625
	je	.L6505
.L1625:
	ucomisd	xmm0, QWORD PTR .LC375[rip]
	jp	.L1627
	je	.L6506
.L1627:
	ucomisd	xmm0, QWORD PTR .LC377[rip]
	jp	.L1629
	je	.L6507
.L1629:
	ucomisd	xmm0, QWORD PTR .LC379[rip]
	jp	.L1631
	je	.L6508
.L1631:
	ucomisd	xmm0, QWORD PTR .LC381[rip]
	jp	.L1633
	je	.L6509
.L1633:
	ucomisd	xmm0, QWORD PTR .LC382[rip]
	jp	.L1635
	je	.L6510
.L1635:
	ucomisd	xmm0, QWORD PTR .LC384[rip]
	jp	.L1637
	je	.L6511
.L1637:
	ucomisd	xmm0, QWORD PTR .LC385[rip]
	jp	.L1639
	je	.L6512
.L1639:
	ucomisd	xmm0, QWORD PTR .LC386[rip]
	jp	.L1641
	je	.L6513
.L1641:
	ucomisd	xmm0, QWORD PTR .LC388[rip]
	jp	.L1643
	je	.L6514
.L1643:
	ucomisd	xmm0, QWORD PTR .LC390[rip]
	jp	.L1645
	je	.L6515
.L1645:
	ucomisd	xmm0, QWORD PTR .LC391[rip]
	jp	.L1647
	je	.L6516
.L1647:
	ucomisd	xmm0, QWORD PTR .LC393[rip]
	jp	.L1649
	je	.L6517
.L1649:
	ucomisd	xmm0, QWORD PTR .LC395[rip]
	jp	.L1651
	je	.L6518
.L1651:
	ucomisd	xmm0, QWORD PTR .LC396[rip]
	jp	.L1653
	je	.L6519
.L1653:
	ucomisd	xmm0, QWORD PTR .LC398[rip]
	jp	.L1655
	je	.L6520
.L1655:
	ucomisd	xmm0, QWORD PTR .LC400[rip]
	jp	.L1657
	je	.L6521
.L1657:
	ucomisd	xmm0, QWORD PTR .LC402[rip]
	jp	.L1659
	je	.L6522
.L1659:
	ucomisd	xmm0, QWORD PTR .LC404[rip]
	jp	.L1661
	je	.L6523
.L1661:
	ucomisd	xmm0, QWORD PTR .LC406[rip]
	jp	.L1663
	je	.L6524
.L1663:
	ucomisd	xmm0, QWORD PTR .LC408[rip]
	jp	.L1665
	je	.L6525
.L1665:
	ucomisd	xmm0, QWORD PTR .LC410[rip]
	jp	.L1667
	je	.L6526
.L1667:
	ucomisd	xmm0, QWORD PTR .LC412[rip]
	jp	.L1669
	je	.L6527
.L1669:
	ucomisd	xmm0, QWORD PTR .LC414[rip]
	jp	.L1671
	je	.L6528
.L1671:
	ucomisd	xmm0, QWORD PTR .LC416[rip]
	jp	.L1673
	je	.L6529
.L1673:
	ucomisd	xmm0, QWORD PTR .LC418[rip]
	jp	.L1675
	je	.L6530
.L1675:
	ucomisd	xmm0, QWORD PTR .LC420[rip]
	jp	.L1677
	je	.L6531
.L1677:
	ucomisd	xmm0, QWORD PTR .LC422[rip]
	jp	.L1679
	je	.L6532
.L1679:
	ucomisd	xmm0, QWORD PTR .LC424[rip]
	jp	.L1681
	je	.L6533
.L1681:
	ucomisd	xmm0, QWORD PTR .LC426[rip]
	jp	.L1683
	je	.L6534
.L1683:
	ucomisd	xmm0, QWORD PTR .LC428[rip]
	jp	.L1685
	je	.L6535
.L1685:
	ucomisd	xmm0, QWORD PTR .LC430[rip]
	jp	.L1687
	je	.L6536
.L1687:
	ucomisd	xmm0, QWORD PTR .LC432[rip]
	jp	.L1689
	je	.L6537
.L1689:
	ucomisd	xmm0, QWORD PTR .LC435[rip]
	jp	.L1691
	je	.L6538
.L1691:
	ucomisd	xmm0, QWORD PTR .LC438[rip]
	jp	.L1693
	je	.L6539
.L1693:
	ucomisd	xmm0, QWORD PTR .LC440[rip]
	jp	.L1695
	je	.L6540
.L1695:
	ucomisd	xmm0, QWORD PTR .LC442[rip]
	jp	.L1697
	je	.L6541
.L1697:
	ucomisd	xmm0, QWORD PTR .LC444[rip]
	jp	.L1699
	je	.L6542
.L1699:
	ucomisd	xmm0, QWORD PTR .LC446[rip]
	jp	.L1701
	je	.L6543
.L1701:
	ucomisd	xmm0, QWORD PTR .LC448[rip]
	jp	.L1703
	je	.L6544
.L1703:
	ucomisd	xmm0, QWORD PTR .LC450[rip]
	jp	.L1705
	je	.L6545
.L1705:
	ucomisd	xmm0, QWORD PTR .LC452[rip]
	jp	.L1707
	je	.L6546
.L1707:
	ucomisd	xmm0, QWORD PTR .LC454[rip]
	jp	.L1709
	je	.L6547
.L1709:
	ucomisd	xmm0, QWORD PTR .LC456[rip]
	jp	.L1711
	je	.L6548
.L1711:
	ucomisd	xmm0, QWORD PTR .LC458[rip]
	jp	.L1713
	je	.L6549
.L1713:
	ucomisd	xmm0, QWORD PTR .LC460[rip]
	jp	.L1715
	je	.L6550
.L1715:
	ucomisd	xmm0, QWORD PTR .LC462[rip]
	jp	.L1717
	je	.L6551
.L1717:
	ucomisd	xmm0, QWORD PTR .LC464[rip]
	jp	.L1719
	je	.L6552
.L1719:
	ucomisd	xmm0, QWORD PTR .LC466[rip]
	jp	.L1721
	je	.L6553
.L1721:
	ucomisd	xmm0, QWORD PTR .LC468[rip]
	jp	.L1723
	je	.L6554
.L1723:
	ucomisd	xmm0, QWORD PTR .LC470[rip]
	jp	.L1725
	je	.L6555
.L1725:
	ucomisd	xmm0, QWORD PTR .LC472[rip]
	jp	.L1727
	je	.L6556
.L1727:
	ucomisd	xmm0, QWORD PTR .LC474[rip]
	jp	.L1729
	je	.L6557
.L1729:
	ucomisd	xmm0, QWORD PTR .LC476[rip]
	jp	.L1731
	je	.L4447
.L1731:
	ucomisd	xmm0, QWORD PTR .LC478[rip]
	jp	.L1733
	je	.L4448
.L1733:
	ucomisd	xmm0, QWORD PTR .LC480[rip]
	jp	.L1738
	je	.L6558
.L1738:
	ucomisd	xmm0, QWORD PTR .LC487[rip]
	mov	eax, 0
	setnp	dl
	cmove	eax, edx
	test	al, al
	jne	.L1016
	ucomisd	xmm0, QWORD PTR .LC488[rip]
	mov	eax, 1
	setp	dl
	cmove	eax, edx
	test	al, al
	jne	.L1016
.L1749:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC489
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4448:
.L1734:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	ucomisd	xmm0, QWORD PTR [rsp+8]
	jp	.L4098
	je	.L4452
.L4098:
	ucomisd	xmm0, xmm1
	jp	.L1742
	je	.L6559
.L1742:
	ucomisd	xmm0, QWORD PTR [rsp+16]
	jp	.L1744
	je	.L6560
.L1744:
	ucomisd	xmm0, xmm2
	jp	.L1746
	je	.L6561
.L1746:
	ucomisd	xmm0, xmm3
	jp	.L1016
	jne	.L1016
.L1748:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC485
	or	rsi, -1
	mov	edi, OFFSET FLAT:ENGINE$
	call	fb_StrAssign
	jmp	.L1016
.L6561:
.L1747:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC484
	or	rsi, -1
	mov	edi, OFFSET FLAT:ENGINE$
	call	fb_StrAssign
	jmp	.L1016
.L6558:
.L1739:
	lea	r9, [rsp+1648]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 35
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC486
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:ENGINE$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4452:
.L1740:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC481
	or	rsi, -1
	mov	edi, OFFSET FLAT:ENGINE$
	call	fb_StrAssign
	jmp	.L1016
.L6559:
.L1743:
	xor	r8d, r8d
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC482
	or	rsi, -1
	mov	edi, OFFSET FLAT:ENGINE$
	call	fb_StrAssign
	jmp	.L1016
.L6560:
.L1745:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC483
	or	rsi, -1
	mov	edi, OFFSET FLAT:ENGINE$
	call	fb_StrAssign
	jmp	.L1016
.L6527:
.L1670:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 48
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC415
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6528:
.L1672:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 48
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC417
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6529:
.L1674:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 40
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC419
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6530:
.L1676:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 47
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC421
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6531:
.L1678:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 47
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC423
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6532:
.L1680:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 43
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC425
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6533:
.L1682:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 48
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC427
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6534:
.L1684:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 48
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC429
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6535:
.L1686:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC431
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6536:
.L1688:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 35
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC433
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODIFIER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6537:
.L1690:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC437
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6538:
.L1692:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1392]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC439
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC437
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6539:
.L1694:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1392]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 12
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC441
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC437
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6540:
.L1696:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 30
	lea	r9, [rsp+1392]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC436
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC443
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC437
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6541:
.L1698:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 41
	lea	r9, [rsp+1552]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC445
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6542:
.L1700:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 33
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC447
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6543:
.L1702:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 35
	lea	r9, [rsp+1616]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC449
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6544:
.L1704:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 35
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC451
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6545:
.L1706:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 35
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC453
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6546:
.L1708:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 44
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC455
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6547:
.L1710:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 40
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC457
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6548:
.L1712:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 40
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC459
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6549:
.L1714:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 44
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC461
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6550:
.L1716:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 43
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC463
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6551:
.L1718:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 49
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC465
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6552:
.L1720:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 52
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC467
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6553:
.L1722:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 52
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC469
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6554:
.L1724:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 36
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC471
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6555:
.L1726:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 46
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC473
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6556:
.L1728:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 34
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC475
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6557:
.L1730:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 59
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC477
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4447:
.L1732:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	ucomisd	xmm0, QWORD PTR [rsp+8]
	jp	.L4097
	je	.L4449
.L4097:
	ucomisd	xmm0, xmm1
	jp	.L1016
	jne	.L1016
.L1737:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC479
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4449:
.L1735:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC21
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6463:
.L1542:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC293
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6464:
.L1544:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 31
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC295
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6465:
.L1546:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 35
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC297
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6466:
.L1548:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 32
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC299
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbp
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6467:
.L1550:
	movsd	xmm0, QWORD PTR [rbp+1632+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 49
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC301
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC280
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6468:
.L1552:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 27
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC303
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6469:
.L1554:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 32
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC305
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6470:
.L1556:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 54
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC307
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6471:
.L1558:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 57
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC309
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6472:
.L1560:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 58
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC311
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6473:
.L1562:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 59
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC313
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6474:
.L1564:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 55
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC315
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6475:
.L1566:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 55
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC317
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6476:
.L1568:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 22
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC319
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6477:
.L1570:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC321
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6478:
.L1572:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC323
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6479:
.L1574:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 38
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC325
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6480:
.L1576:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 32
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC327
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6481:
.L1578:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC329
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6482:
.L1580:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 38
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC331
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6483:
.L1582:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 42
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC333
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6484:
.L1584:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 45
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC335
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6485:
.L1586:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 50
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC337
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6486:
.L1588:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 48
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC339
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6487:
.L1590:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 49
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC341
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6488:
.L1592:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC343
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6489:
.L1594:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC345
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6490:
.L1596:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC347
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6491:
.L1598:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC349
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6492:
.L1600:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC351
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6493:
.L1602:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC353
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6494:
.L1604:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC355
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6495:
.L1606:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 42
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC357
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6496:
.L1608:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC358
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6497:
.L1610:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC360
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6498:
.L1612:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 45
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC362
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6499:
.L1614:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC364
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6500:
.L1616:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 45
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC366
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6501:
.L1618:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 37
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC368
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6502:
.L1620:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC370
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6503:
.L1622:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 42
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC372
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6504:
.L1624:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 40
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC374
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6505:
.L1626:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 43
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC376
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6506:
.L1628:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 34
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC378
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6507:
.L1630:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC380
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6508:
.L1632:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 37
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC368
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6509:
.L1634:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC383
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6510:
.L1636:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC370
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6511:
.L1638:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 34
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC378
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6512:
.L1640:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 42
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC387
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6513:
.L1642:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 39
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC389
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6514:
.L1644:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 42
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC372
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6515:
.L1646:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 47
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC392
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6516:
.L1648:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 46
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC394
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6517:
.L1650:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 37
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC368
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6518:
.L1652:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 42
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC397
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6519:
.L1654:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 40
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC399
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6520:
.L1656:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 45
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC401
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6521:
.L1658:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC403
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6522:
.L1660:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC405
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6523:
.L1662:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC407
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6524:
.L1664:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 42
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC409
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6525:
.L1666:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 45
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC411
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6526:
.L1668:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 43
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC413
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5830:
.L2153:
	sal	rax, 3
	pxor	xmm6, xmm6
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm6
	ucomisd	xmm0, xmm6
	jp	.L4110
	je	.L4658
.L4110:
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	movsd	xmm2, QWORD PTR [rsp+8]
	comisd	xmm2, xmm0
	ja	.L2165
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6562
.L2165:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2168
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6563
.L2168:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC777
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6562:
.L2167:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC777
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6563:
.L2169:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC777
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6399:
.L1414:
	movsd	xmm0, QWORD PTR [rbp+1664+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1656+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+16], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1680+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+24], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1672+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 32
	lea	r9, [rsp+976]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC192
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1008]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1072]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD3$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1104]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+24]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1136]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC193
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC194
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1200]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+16]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1232]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1264]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1328]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1360]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD3$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC191
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6400:
.L1416:
	movsd	xmm0, QWORD PTR [rbp+1664+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1656+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 33
	lea	r9, [rsp+1200]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC195
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC191
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6401:
.L1418:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 27
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC196
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6402:
.L1420:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 22
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC197
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6403:
.L1422:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 50
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC198
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6404:
.L1424:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 50
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC199
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6405:
.L1426:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 48
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC200
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6406:
.L1428:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 56
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC201
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6407:
.L1430:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 58
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC202
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6408:
.L1432:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 30
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC203
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6409:
.L1434:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 28
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC204
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6410:
.L1436:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 57
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC205
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6411:
.L1438:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 57
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC205
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6412:
.L1440:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 60
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC206
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6413:
.L1442:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 53
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC207
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6414:
.L1444:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 47
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC208
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6415:
.L1446:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 49
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC209
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6416:
.L1448:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 60
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC210
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6417:
.L1450:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 57
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC211
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6418:
.L1452:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 56
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC212
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6419:
.L1454:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 47
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC213
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6420:
.L1456:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 45
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC214
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6421:
.L1458:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 49
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC215
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6422:
.L1460:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 57
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC216
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6423:
.L1462:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC217
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6424:
.L1464:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 66
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC218
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6425:
.L1466:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 59
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC219
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6426:
.L1468:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 53
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC220
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6427:
.L1470:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 55
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC221
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6428:
.L1472:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 66
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC223
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6429:
.L1474:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC225
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6430:
.L1476:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 62
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC227
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6431:
.L1478:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 53
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC229
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6432:
.L1480:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 51
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC231
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6433:
.L1482:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 55
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC233
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6434:
.L1484:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC235
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6435:
.L1486:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC237
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6436:
.L1488:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 52
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC239
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6437:
.L1490:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 51
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC241
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6438:
.L1492:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 51
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC243
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6439:
.L1494:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 50
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC245
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6440:
.L1496:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 61
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC247
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6441:
.L1498:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 54
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC249
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6442:
.L1500:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC251
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6443:
.L1502:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC251
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6444:
.L1504:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 63
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC254
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6445:
.L1506:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 68
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC256
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6446:
.L1508:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 68
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC258
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6447:
.L1510:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 65
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC260
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6448:
.L1512:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 64
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC262
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6449:
.L1514:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 64
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC262
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6450:
.L1516:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 64
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC265
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6451:
.L1518:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 68
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC267
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6452:
.L1520:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 67
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC269
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6453:
.L1522:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 72
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC271
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6454:
.L1524:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 69
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC273
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6455:
.L1526:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 69
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC275
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6456:
.L1528:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC277
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6457:
.L1530:
	movsd	xmm0, QWORD PTR [rbp+1632+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 44
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC279
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 13
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC280
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6458:
.L1532:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 43
	lea	r9, [rsp+1616]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC282
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC283
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6459:
.L1534:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 45
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC285
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6460:
.L1536:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 46
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC287
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6461:
.L1538:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC289
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6462:
.L1540:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC291
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4980:
.L2812:
	mov	esi, 7
	mov	edi, OFFSET FLAT:.LC1102
	call	fb_StrAllocTempDescZEx
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	mov	r8d, 1
	mov	esi, 3
	mov	rdi, rax
	call	fb_FileOpen
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 17
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1103
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5785:
.L2815:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1104
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edi, 1
	call	fb_FileClose
	jmp	.L1016
.L5656:
.L1226:
	mov	esi, 60
	mov	edi, OFFSET FLAT:.LC53
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 13
	mov	edi, OFFSET FLAT:.LC54
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edi, 1
	call	fb_FileClose
	jmp	.L1016
.L5838:
.L2807:
	call	fb_DoubleToStr
	xor	ebx, ebx
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	mov	r8d, 4
	mov	esi, OFFSET FLAT:MODTYPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	or	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:MODTYPE$
	mov	rdx, rax
	mov	rsi, rcx
	call	fb_StrAssign
	jmp	.L1016
.L5239:
.L3330:
	movsd	xmm0, QWORD PTR [rbp+1608+rdx]
	pxor	xmm3, xmm3
	movsd	QWORD PTR [rsp+8], xmm3
	ucomisd	xmm0, xmm3
	jp	.L4119
	je	.L5463
.L4119:
	ucomisd	xmm0, xmm1
	jp	.L3778
	je	.L6564
.L3778:
	ucomisd	xmm0, QWORD PTR [rsp+16]
	jp	.L3780
	je	.L6565
.L3780:
	ucomisd	xmm0, xmm2
	jp	.L1016
	jne	.L1016
.L3782:
	movsd	xmm0, QWORD PTR [rsp+8]
	subsd	xmm0, QWORD PTR [rbp+464+rdx]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	xor	eax, eax
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6564:
.L3779:
	movsd	xmm0, QWORD PTR [rbp+464+rdx]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	xor	eax, eax
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6565:
.L3781:
	movsd	xmm0, QWORD PTR [rsp+8]
	subsd	xmm0, QWORD PTR [rbp+464+rdx]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	xor	eax, eax
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4983:
.L2819:
	movsd	xmm0, QWORD PTR [rbp+1608+rdx]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4118
	je	.L5240
.L4118:
	ucomisd	xmm0, xmm1
	jp	.L3333
	je	.L6566
.L3333:
	ucomisd	xmm0, QWORD PTR [rsp+16]
	jp	.L3335
	je	.L6567
.L3335:
	ucomisd	xmm0, xmm2
	jp	.L3337
	je	.L6568
.L3337:
	ucomisd	xmm0, xmm3
	jp	.L3339
	je	.L6569
.L3339:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L3341
	je	.L6570
.L3341:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L3343
	je	.L6571
.L3343:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L3345
	je	.L6572
.L3345:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L3347
	je	.L6573
.L3347:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L3349
	je	.L6574
.L3349:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L3351
	je	.L6575
.L3351:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L3353
	je	.L6576
.L3353:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L3355
	je	.L6577
.L3355:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L3357
	je	.L6578
.L3357:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L3359
	je	.L6579
.L3359:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L3361
	je	.L6580
.L3361:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L3363
	je	.L6581
.L3363:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L3365
	je	.L6582
.L3365:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L3367
	je	.L6583
.L3367:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L3369
	je	.L6584
.L3369:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L3371
	je	.L6585
.L3371:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L3373
	je	.L6586
.L3373:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L3375
	je	.L6587
.L3375:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L3377
	je	.L6588
.L3377:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L3379
	je	.L6589
.L3379:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L3381
	je	.L6590
.L3381:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L3383
	je	.L6591
.L3383:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L3385
	je	.L6592
.L3385:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L3387
	je	.L6593
.L3387:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L3389
	je	.L6594
.L3389:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L3391
	je	.L6595
.L3391:
	ucomisd	xmm0, QWORD PTR .LC222[rip]
	jp	.L3393
	je	.L6596
.L3393:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L3395
	je	.L6597
.L3395:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L3397
	je	.L6598
.L3397:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L3399
	je	.L6599
.L3399:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L3401
	je	.L6600
.L3401:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L3403
	je	.L6601
.L3403:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L3405
	je	.L6602
.L3405:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L3407
	je	.L6603
.L3407:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L3409
	je	.L6604
.L3409:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L3411
	je	.L6605
.L3411:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L3413
	je	.L6606
.L3413:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L3415
	je	.L6607
.L3415:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L3417
	je	.L6608
.L3417:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L3419
	je	.L6609
.L3419:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L3421
	je	.L6610
.L3421:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L3423
	je	.L6611
.L3423:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L3425
	je	.L6612
.L3425:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L3427
	je	.L6613
.L3427:
	ucomisd	xmm0, QWORD PTR .LC257[rip]
	jp	.L3429
	je	.L6614
.L3429:
	ucomisd	xmm0, QWORD PTR .LC259[rip]
	jp	.L3431
	je	.L6615
.L3431:
	ucomisd	xmm0, QWORD PTR .LC261[rip]
	jp	.L3433
	je	.L6616
.L3433:
	ucomisd	xmm0, QWORD PTR .LC263[rip]
	jp	.L3435
	je	.L6617
.L3435:
	ucomisd	xmm0, QWORD PTR .LC264[rip]
	jp	.L3437
	je	.L6618
.L3437:
	ucomisd	xmm0, QWORD PTR .LC266[rip]
	jp	.L3439
	je	.L6619
.L3439:
	ucomisd	xmm0, QWORD PTR .LC268[rip]
	jp	.L3441
	je	.L6620
.L3441:
	ucomisd	xmm0, QWORD PTR .LC270[rip]
	jp	.L3443
	je	.L6621
.L3443:
	ucomisd	xmm0, QWORD PTR .LC272[rip]
	jp	.L3445
	je	.L6622
.L3445:
	ucomisd	xmm0, QWORD PTR .LC274[rip]
	jp	.L3447
	je	.L6623
.L3447:
	ucomisd	xmm0, QWORD PTR .LC276[rip]
	jp	.L3449
	je	.L6624
.L3449:
	ucomisd	xmm0, QWORD PTR .LC278[rip]
	jp	.L3451
	je	.L6625
.L3451:
	ucomisd	xmm0, QWORD PTR .LC281[rip]
	jp	.L3453
	je	.L6626
.L3453:
	ucomisd	xmm0, QWORD PTR .LC284[rip]
	jp	.L3455
	je	.L6627
.L3455:
	ucomisd	xmm0, QWORD PTR .LC286[rip]
	jp	.L3457
	je	.L6628
.L3457:
	ucomisd	xmm0, QWORD PTR .LC288[rip]
	jp	.L3459
	je	.L6629
.L3459:
	ucomisd	xmm0, QWORD PTR .LC290[rip]
	jp	.L3461
	je	.L6630
.L3461:
	ucomisd	xmm0, QWORD PTR .LC292[rip]
	jp	.L3463
	je	.L6631
.L3463:
	ucomisd	xmm0, QWORD PTR .LC294[rip]
	jp	.L3465
	je	.L6632
.L3465:
	ucomisd	xmm0, QWORD PTR .LC296[rip]
	jp	.L3467
	je	.L6633
.L3467:
	ucomisd	xmm0, QWORD PTR .LC298[rip]
	jp	.L3469
	je	.L6634
.L3469:
	ucomisd	xmm0, QWORD PTR .LC300[rip]
	jp	.L3471
	je	.L6635
.L3471:
	ucomisd	xmm0, QWORD PTR .LC302[rip]
	jp	.L3473
	je	.L6636
.L3473:
	ucomisd	xmm0, QWORD PTR .LC304[rip]
	jp	.L3475
	je	.L6637
.L3475:
	ucomisd	xmm0, QWORD PTR .LC306[rip]
	jp	.L3477
	je	.L6638
.L3477:
	ucomisd	xmm0, QWORD PTR .LC308[rip]
	jp	.L3479
	je	.L6639
.L3479:
	ucomisd	xmm0, QWORD PTR .LC310[rip]
	jp	.L3481
	je	.L6640
.L3481:
	ucomisd	xmm0, QWORD PTR .LC312[rip]
	jp	.L3483
	je	.L6641
.L3483:
	ucomisd	xmm0, QWORD PTR .LC314[rip]
	jp	.L3485
	je	.L6642
.L3485:
	ucomisd	xmm0, QWORD PTR .LC316[rip]
	jp	.L3487
	je	.L6643
.L3487:
	ucomisd	xmm0, QWORD PTR .LC318[rip]
	jp	.L3489
	je	.L6644
.L3489:
	ucomisd	xmm0, QWORD PTR .LC320[rip]
	jp	.L3491
	je	.L6645
.L3491:
	ucomisd	xmm0, QWORD PTR .LC322[rip]
	jp	.L3493
	je	.L6646
.L3493:
	ucomisd	xmm0, QWORD PTR .LC324[rip]
	jp	.L3495
	je	.L6647
.L3495:
	ucomisd	xmm0, QWORD PTR .LC326[rip]
	jp	.L3497
	je	.L6648
.L3497:
	ucomisd	xmm0, QWORD PTR .LC328[rip]
	jp	.L3499
	je	.L6649
.L3499:
	ucomisd	xmm0, QWORD PTR .LC330[rip]
	jp	.L3501
	je	.L6650
.L3501:
	ucomisd	xmm0, QWORD PTR .LC332[rip]
	jp	.L3503
	je	.L6651
.L3503:
	ucomisd	xmm0, QWORD PTR .LC334[rip]
	jp	.L3505
	je	.L6652
.L3505:
	ucomisd	xmm0, QWORD PTR .LC336[rip]
	jp	.L3507
	je	.L6653
.L3507:
	ucomisd	xmm0, QWORD PTR .LC338[rip]
	jp	.L3509
	je	.L6654
.L3509:
	ucomisd	xmm0, QWORD PTR .LC340[rip]
	jp	.L3511
	je	.L6655
.L3511:
	ucomisd	xmm0, QWORD PTR .LC342[rip]
	jp	.L3513
	je	.L6656
.L3513:
	ucomisd	xmm0, QWORD PTR .LC344[rip]
	jp	.L3515
	je	.L6657
.L3515:
	ucomisd	xmm0, QWORD PTR .LC346[rip]
	jp	.L3517
	je	.L6658
.L3517:
	ucomisd	xmm0, QWORD PTR .LC348[rip]
	jp	.L3519
	je	.L6659
.L3519:
	ucomisd	xmm0, QWORD PTR .LC350[rip]
	jp	.L3521
	je	.L6660
.L3521:
	ucomisd	xmm0, QWORD PTR .LC352[rip]
	jp	.L3523
	je	.L6661
.L3523:
	ucomisd	xmm0, QWORD PTR .LC354[rip]
	jp	.L3525
	je	.L6662
.L3525:
	ucomisd	xmm0, QWORD PTR .LC356[rip]
	jp	.L3527
	je	.L6663
.L3527:
	ucomisd	xmm0, QWORD PTR .LC170[rip]
	jp	.L3529
	je	.L6664
.L3529:
	ucomisd	xmm0, QWORD PTR .LC359[rip]
	jp	.L3531
	je	.L6665
.L3531:
	ucomisd	xmm0, QWORD PTR .LC361[rip]
	jp	.L3533
	je	.L6666
.L3533:
	ucomisd	xmm0, QWORD PTR .LC363[rip]
	jp	.L3535
	je	.L6667
.L3535:
	ucomisd	xmm0, QWORD PTR .LC365[rip]
	jp	.L3537
	je	.L6668
.L3537:
	ucomisd	xmm0, QWORD PTR .LC367[rip]
	jp	.L3539
	je	.L6669
.L3539:
	ucomisd	xmm0, QWORD PTR .LC369[rip]
	jp	.L3541
	je	.L6670
.L3541:
	ucomisd	xmm0, QWORD PTR .LC371[rip]
	jp	.L3543
	je	.L6671
.L3543:
	ucomisd	xmm0, QWORD PTR .LC373[rip]
	jp	.L3545
	je	.L6672
.L3545:
	ucomisd	xmm0, QWORD PTR .LC375[rip]
	jp	.L3547
	je	.L6673
.L3547:
	ucomisd	xmm0, QWORD PTR .LC377[rip]
	jp	.L3549
	je	.L6674
.L3549:
	ucomisd	xmm0, QWORD PTR .LC379[rip]
	jp	.L3551
	je	.L6675
.L3551:
	ucomisd	xmm0, QWORD PTR .LC381[rip]
	jp	.L3553
	je	.L6676
.L3553:
	ucomisd	xmm0, QWORD PTR .LC382[rip]
	jp	.L3555
	je	.L6677
.L3555:
	ucomisd	xmm0, QWORD PTR .LC384[rip]
	jp	.L3557
	je	.L6678
.L3557:
	ucomisd	xmm0, QWORD PTR .LC385[rip]
	jp	.L3559
	je	.L6679
.L3559:
	ucomisd	xmm0, QWORD PTR .LC386[rip]
	jp	.L3561
	je	.L6680
.L3561:
	ucomisd	xmm0, QWORD PTR .LC388[rip]
	jp	.L3563
	je	.L6681
.L3563:
	ucomisd	xmm0, QWORD PTR .LC390[rip]
	jp	.L3565
	je	.L6682
.L3565:
	ucomisd	xmm0, QWORD PTR .LC391[rip]
	jp	.L3567
	je	.L6683
.L3567:
	ucomisd	xmm0, QWORD PTR .LC393[rip]
	jp	.L3569
	je	.L6684
.L3569:
	ucomisd	xmm0, QWORD PTR .LC395[rip]
	jp	.L3571
	je	.L6685
.L3571:
	ucomisd	xmm0, QWORD PTR .LC396[rip]
	jp	.L3573
	je	.L6686
.L3573:
	ucomisd	xmm0, QWORD PTR .LC398[rip]
	jp	.L3575
	je	.L6687
.L3575:
	ucomisd	xmm0, QWORD PTR .LC400[rip]
	jp	.L3577
	je	.L6688
.L3577:
	ucomisd	xmm0, QWORD PTR .LC402[rip]
	jp	.L3579
	je	.L6689
.L3579:
	ucomisd	xmm0, QWORD PTR .LC404[rip]
	jp	.L3581
	je	.L6690
.L3581:
	ucomisd	xmm0, QWORD PTR .LC406[rip]
	jp	.L3583
	je	.L6691
.L3583:
	ucomisd	xmm0, QWORD PTR .LC408[rip]
	jp	.L3585
	je	.L6692
.L3585:
	ucomisd	xmm0, QWORD PTR .LC410[rip]
	jp	.L3587
	je	.L6693
.L3587:
	ucomisd	xmm0, QWORD PTR .LC412[rip]
	jp	.L3589
	je	.L6694
.L3589:
	ucomisd	xmm0, QWORD PTR .LC414[rip]
	jp	.L3591
	je	.L6695
.L3591:
	ucomisd	xmm0, QWORD PTR .LC416[rip]
	jp	.L3593
	je	.L6696
.L3593:
	ucomisd	xmm0, QWORD PTR .LC418[rip]
	jp	.L3595
	je	.L6697
.L3595:
	ucomisd	xmm0, QWORD PTR .LC420[rip]
	jp	.L3597
	je	.L6698
.L3597:
	ucomisd	xmm0, QWORD PTR .LC422[rip]
	jp	.L3599
	je	.L6699
.L3599:
	ucomisd	xmm0, QWORD PTR .LC424[rip]
	jp	.L3601
	je	.L6700
.L3601:
	ucomisd	xmm0, QWORD PTR .LC426[rip]
	jp	.L3603
	je	.L6701
.L3603:
	ucomisd	xmm0, QWORD PTR .LC428[rip]
	jp	.L3605
	je	.L6702
.L3605:
	ucomisd	xmm0, QWORD PTR .LC430[rip]
	jp	.L3607
	je	.L6703
.L3607:
	ucomisd	xmm0, QWORD PTR .LC432[rip]
	jp	.L3609
	je	.L6704
.L3609:
	ucomisd	xmm0, QWORD PTR .LC435[rip]
	jp	.L3611
	je	.L6705
.L3611:
	ucomisd	xmm0, QWORD PTR .LC438[rip]
	jp	.L3613
	je	.L6706
.L3613:
	ucomisd	xmm0, QWORD PTR .LC440[rip]
	jp	.L3615
	je	.L6707
.L3615:
	ucomisd	xmm0, QWORD PTR .LC442[rip]
	jp	.L3617
	je	.L6708
.L3617:
	ucomisd	xmm0, QWORD PTR .LC444[rip]
	jp	.L3619
	je	.L6709
.L3619:
	ucomisd	xmm0, QWORD PTR .LC446[rip]
	jp	.L3621
	je	.L6710
.L3621:
	ucomisd	xmm0, QWORD PTR .LC448[rip]
	jp	.L3623
	je	.L6711
.L3623:
	ucomisd	xmm0, QWORD PTR .LC450[rip]
	jp	.L3625
	je	.L6712
.L3625:
	ucomisd	xmm0, QWORD PTR .LC452[rip]
	jp	.L3627
	je	.L6713
.L3627:
	ucomisd	xmm0, QWORD PTR .LC454[rip]
	jp	.L3629
	je	.L6714
.L3629:
	ucomisd	xmm0, QWORD PTR .LC456[rip]
	jp	.L3631
	je	.L6715
.L3631:
	ucomisd	xmm0, QWORD PTR .LC462[rip]
	jp	.L3633
	je	.L6716
.L3633:
	ucomisd	xmm0, QWORD PTR .LC464[rip]
	jp	.L3635
	je	.L6717
.L3635:
	ucomisd	xmm0, QWORD PTR .LC466[rip]
	jp	.L3637
	je	.L6718
.L3637:
	ucomisd	xmm0, QWORD PTR .LC468[rip]
	jp	.L3639
	je	.L6719
.L3639:
	ucomisd	xmm0, QWORD PTR .LC470[rip]
	jp	.L3641
	je	.L6720
.L3641:
	ucomisd	xmm0, QWORD PTR .LC472[rip]
	jp	.L3643
	je	.L6721
.L3643:
	ucomisd	xmm0, QWORD PTR .LC474[rip]
	jp	.L3645
	je	.L6722
.L3645:
	ucomisd	xmm0, QWORD PTR .LC476[rip]
	jp	.L3647
	je	.L6723
.L3647:
	ucomisd	xmm0, QWORD PTR .LC478[rip]
	jp	.L3649
	je	.L6724
.L3649:
	ucomisd	xmm0, QWORD PTR .LC480[rip]
	jp	.L3651
	je	.L6725
.L3651:
	ucomisd	xmm0, QWORD PTR .LC487[rip]
	jp	.L3653
	je	.L6726
.L3653:
	ucomisd	xmm0, QWORD PTR .LC488[rip]
	jp	.L3655
	je	.L6727
.L3655:
	ucomisd	xmm0, QWORD PTR .LC702[rip]
	jp	.L3657
	je	.L6728
.L3657:
	ucomisd	xmm0, QWORD PTR .LC704[rip]
	jp	.L3659
	je	.L6729
.L3659:
	ucomisd	xmm0, QWORD PTR .LC706[rip]
	jp	.L3661
	je	.L6730
.L3661:
	ucomisd	xmm0, QWORD PTR .LC708[rip]
	jp	.L3663
	je	.L6731
.L3663:
	ucomisd	xmm0, QWORD PTR .LC710[rip]
	jp	.L3665
	je	.L6732
.L3665:
	ucomisd	xmm0, QWORD PTR .LC712[rip]
	jp	.L3667
	je	.L6733
.L3667:
	ucomisd	xmm0, QWORD PTR .LC1021[rip]
	jp	.L3669
	je	.L6734
.L3669:
	ucomisd	xmm0, QWORD PTR .LC1022[rip]
	jp	.L3671
	je	.L6735
.L3671:
	ucomisd	xmm0, QWORD PTR .LC1023[rip]
	jp	.L3673
	je	.L6736
.L3673:
	ucomisd	xmm0, QWORD PTR .LC1024[rip]
	jp	.L3675
	je	.L6737
.L3675:
	ucomisd	xmm0, QWORD PTR .LC1025[rip]
	jp	.L3677
	je	.L6738
.L3677:
	ucomisd	xmm0, QWORD PTR .LC1026[rip]
	jp	.L3679
	je	.L6739
.L3679:
	ucomisd	xmm0, QWORD PTR .LC1028[rip]
	jp	.L3681
	je	.L6740
.L3681:
	ucomisd	xmm0, QWORD PTR .LC1030[rip]
	jp	.L3683
	je	.L6741
.L3683:
	ucomisd	xmm0, QWORD PTR .LC1032[rip]
	jp	.L3685
	je	.L6742
.L3685:
	ucomisd	xmm0, QWORD PTR .LC1034[rip]
	jp	.L3687
	je	.L6743
.L3687:
	ucomisd	xmm0, QWORD PTR .LC1036[rip]
	jp	.L3689
	je	.L6744
.L3689:
	ucomisd	xmm0, QWORD PTR .LC1038[rip]
	jp	.L3691
	je	.L6745
.L3691:
	ucomisd	xmm0, QWORD PTR .LC1040[rip]
	jp	.L3693
	je	.L6746
.L3693:
	ucomisd	xmm0, QWORD PTR .LC1042[rip]
	jp	.L3695
	je	.L6747
.L3695:
	ucomisd	xmm0, QWORD PTR .LC1044[rip]
	jp	.L3697
	je	.L6748
.L3697:
	ucomisd	xmm0, QWORD PTR .LC1046[rip]
	jp	.L3699
	je	.L6749
.L3699:
	ucomisd	xmm0, QWORD PTR .LC1047[rip]
	jp	.L3701
	je	.L6750
.L3701:
	ucomisd	xmm0, QWORD PTR .LC1049[rip]
	jp	.L3703
	je	.L6751
.L3703:
	ucomisd	xmm0, QWORD PTR .LC1051[rip]
	jp	.L3705
	je	.L6752
.L3705:
	ucomisd	xmm0, QWORD PTR .LC1053[rip]
	jp	.L3707
	je	.L6753
.L3707:
	ucomisd	xmm0, QWORD PTR .LC1055[rip]
	jp	.L3709
	je	.L6754
.L3709:
	ucomisd	xmm0, QWORD PTR .LC1057[rip]
	jp	.L3711
	je	.L6755
.L3711:
	ucomisd	xmm0, QWORD PTR .LC1059[rip]
	jp	.L3713
	je	.L6756
.L3713:
	ucomisd	xmm0, QWORD PTR .LC1061[rip]
	jp	.L3715
	je	.L6757
.L3715:
	ucomisd	xmm0, QWORD PTR .LC1063[rip]
	jp	.L3717
	je	.L6758
.L3717:
	ucomisd	xmm0, QWORD PTR .LC1065[rip]
	jp	.L3719
	je	.L6759
.L3719:
	ucomisd	xmm0, QWORD PTR .LC1067[rip]
	jp	.L3721
	je	.L6760
.L3721:
	ucomisd	xmm0, QWORD PTR .LC1069[rip]
	jp	.L3723
	je	.L6761
.L3723:
	ucomisd	xmm0, QWORD PTR .LC1071[rip]
	jp	.L3725
	je	.L6762
.L3725:
	ucomisd	xmm0, QWORD PTR .LC1073[rip]
	jp	.L3727
	je	.L6763
.L3727:
	ucomisd	xmm0, QWORD PTR .LC1075[rip]
	jp	.L3729
	je	.L6764
.L3729:
	ucomisd	xmm0, QWORD PTR .LC1077[rip]
	jp	.L3731
	je	.L6765
.L3731:
	ucomisd	xmm0, QWORD PTR .LC1079[rip]
	jp	.L3733
	je	.L6766
.L3733:
	ucomisd	xmm0, QWORD PTR .LC1081[rip]
	jp	.L3735
	je	.L6767
.L3735:
	ucomisd	xmm0, QWORD PTR .LC1083[rip]
	jp	.L3737
	je	.L6768
.L3737:
	ucomisd	xmm0, QWORD PTR .LC1085[rip]
	jp	.L3739
	je	.L6769
.L3739:
	ucomisd	xmm0, QWORD PTR .LC1087[rip]
	jp	.L3741
	je	.L6770
.L3741:
	ucomisd	xmm0, QWORD PTR .LC1089[rip]
	jp	.L3743
	je	.L6771
.L3743:
	ucomisd	xmm0, QWORD PTR .LC1091[rip]
	jp	.L3745
	je	.L6772
.L3745:
	ucomisd	xmm0, QWORD PTR .LC1093[rip]
	jp	.L3747
	je	.L6773
.L3747:
	ucomisd	xmm0, QWORD PTR .LC1095[rip]
	jp	.L3749
	je	.L6774
.L3749:
	ucomisd	xmm0, QWORD PTR .LC1097[rip]
	jp	.L3751
	je	.L6775
.L3751:
	ucomisd	xmm0, QWORD PTR .LC1099[rip]
	jp	.L3753
	je	.L6776
.L3753:
	ucomisd	xmm0, QWORD PTR .LC1317[rip]
	jp	.L3755
	je	.L6777
.L3755:
	ucomisd	xmm0, QWORD PTR .LC1319[rip]
	jp	.L3757
	je	.L6778
.L3757:
	ucomisd	xmm0, QWORD PTR .LC1321[rip]
	jp	.L3759
	je	.L6779
.L3759:
	ucomisd	xmm0, QWORD PTR .LC1323[rip]
	jp	.L3761
	je	.L6780
.L3761:
	ucomisd	xmm0, QWORD PTR .LC1325[rip]
	jp	.L3763
	je	.L6781
.L3763:
	ucomisd	xmm0, QWORD PTR .LC1327[rip]
	jp	.L3765
	je	.L6782
.L3765:
	ucomisd	xmm0, QWORD PTR .LC1329[rip]
	jp	.L3767
	je	.L6783
.L3767:
	ucomisd	xmm0, QWORD PTR .LC1331[rip]
	jp	.L3769
	je	.L6784
.L3769:
	ucomisd	xmm0, QWORD PTR .LC1333[rip]
	jp	.L3771
	je	.L6785
.L3771:
	ucomisd	xmm0, QWORD PTR .LC1335[rip]
	jp	.L1016
	jne	.L1016
.L3773:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1623
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6778:
.L3758:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1615
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6779:
.L3760:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1616
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6780:
.L3762:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1617
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6781:
.L3764:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1618
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6782:
.L3766:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1619
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6783:
.L3768:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1620
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6784:
.L3770:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1621
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6785:
.L3772:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1622
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6762:
.L3726:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1599
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6763:
.L3728:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1600
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6764:
.L3730:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1601
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6765:
.L3732:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1602
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6766:
.L3734:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1603
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6767:
.L3736:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1604
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6768:
.L3738:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1605
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6769:
.L3740:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1606
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6770:
.L3742:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1607
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6771:
.L3744:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1608
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6772:
.L3746:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1609
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6773:
.L3748:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1610
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6774:
.L3750:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1611
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6775:
.L3752:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1612
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6776:
.L3754:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1613
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6777:
.L3756:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1614
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6363:
.L2213:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC793
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6364:
.L2215:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC794
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6365:
.L2217:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC795
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6366:
.L2219:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC796
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6367:
.L2221:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC797
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6368:
.L2223:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC798
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6369:
.L2225:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC799
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6370:
.L2227:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC800
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6371:
.L2229:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC801
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6372:
.L2231:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC802
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6373:
.L2233:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC803
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6374:
.L2235:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC804
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6375:
.L2237:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC805
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6376:
.L2239:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC806
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6377:
.L2241:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC807
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6378:
.L2243:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC808
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6355:
.L2197:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC785
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6356:
.L2199:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC786
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6357:
.L2201:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC787
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6358:
.L2203:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC788
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6359:
.L2205:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC789
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6360:
.L2207:
	xor	r8d, r8d
	mov	ecx, 24
	mov	edx, OFFSET FLAT:.LC790
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6361:
.L2209:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC791
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6362:
.L2211:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC792
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L4718:
.L2287:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC830
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L4669:
.L2190:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC782
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6353:
.L2193:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC783
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L6354:
.L2195:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC784
	or	rsi, -1
	mov	edi, OFFSET FLAT:MODIFIER$
	call	fb_StrAssign
	jmp	.L1016
.L4661:
.L2172:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 17
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6351:
.L2176:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 17
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5829:
.L2144:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4109
	je	.L4655
.L4109:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L2156
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6786
.L2156:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2159
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6787
.L2159:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC775
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4658:
.L2163:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 17
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC776
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC777
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4655:
.L2154:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 21
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC775
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6786:
.L2158:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC775
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6787:
.L2160:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 21
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC775
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5824:
.L2108:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4103
	je	.L4636
.L4103:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1016
	jne	.L1016
.L2116:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 40
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC740
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 5
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6098:
.L2823:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1106
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6099:
.L2825:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1107
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6100:
.L2827:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1108
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6101:
.L2829:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1109
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6102:
.L2831:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1110
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6103:
.L2833:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1111
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6104:
.L2835:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1112
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6105:
.L2837:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1113
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5786:
.L3775:
	mov	esi, 31
	mov	edi, OFFSET FLAT:.LC1624
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	esi, 23
	mov	edi, OFFSET FLAT:.LC1625
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	edx, 17
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1626
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rdi, rax
	call	fb_Shell
	mov	esi, 18
	mov	edi, OFFSET FLAT:.LC1627
	call	fb_StrAllocTempDescZEx
	mov	rdi, rax
	call	fb_Shell
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	xor	edx, edx
	mov	rdi, rbp
	add	rax, 171
	mov	rsi, rax
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1440+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC1628
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 5
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC741
	call	fb_StrConcat
	mov	rsi, QWORD PTR IMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload
	push	0
	mov	r9d, -65536
	xor	edi, edi
	push	0
	mov	rsi, QWORD PTR IMAGE$[rip]
	mov	r8d, r9d
	mov	ecx, r9d
	push	-1
	mov	edx, r9d
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	OFFSET FLAT:fb_hPutAlpha
	push	6
	push	0
	call	fb_GfxPut
	add	rsp, 48
	jmp	.L1016
.L5463:
.L3776:
	movsd	xmm0, QWORD PTR [rbp+464+rdx]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	xor	eax, eax
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4984:
.L2820:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1105
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5240:
.L3331:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1402
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6566:
.L3334:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1403
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6567:
.L3336:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1404
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6568:
.L3338:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1405
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6569:
.L3340:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1406
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5817:
.L1309:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4092
	je	.L4244
.L4092:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1322
	je	.L6788
.L1322:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1324
	je	.L6789
.L1324:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1326
	je	.L6790
.L1326:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1328
	je	.L6791
.L1328:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L1330
	je	.L6792
.L1330:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L1332
	je	.L6793
.L1332:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L1334
	je	.L6794
.L1334:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L1336
	je	.L6795
.L1336:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L1338
	je	.L6796
.L1338:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L1340
	je	.L6797
.L1340:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L1342
	je	.L6798
.L1342:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L1344
	je	.L6799
.L1344:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L1346
	je	.L6800
.L1346:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1348
	je	.L6801
.L1348:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L1350
	je	.L6802
.L1350:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L1352
	je	.L6803
.L1352:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L1354
	je	.L6804
.L1354:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L1356
	je	.L6805
.L1356:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L1016
	jne	.L1016
.L1358:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC166
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6804:
.L1355:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC164
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6805:
.L1357:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 38
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC165
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5826:
.L2118:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4106
	je	.L4644
.L4106:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L2133
	je	.L6806
.L2133:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1016
	jne	.L1016
.L2135:
	movsd	xmm0, QWORD PTR [rbp+1696+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1688+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1680+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1672+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1664+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+16], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+24], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 20
	lea	r9, [rsp+784]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+848]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+880]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+944]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+976]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1008]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC763
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1072]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1104]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1136]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1168]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+24]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+16]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD3$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6806:
.L2134:
	movsd	xmm0, QWORD PTR [rbp+1648+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 20
	lea	r9, [rsp+1296]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1328]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1360]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1392]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1456]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 19
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC764
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, r12
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6788:
.L1323:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 30
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC141
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6789:
.L1325:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC142
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6790:
.L1327:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 32
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC143
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6791:
.L1329:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 33
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC144
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6792:
.L1331:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC145
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6793:
.L1333:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC142
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6794:
.L1335:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 26
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC146
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC148
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 18
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC149
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 32
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC150
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6795:
.L1337:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 26
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC146
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC148
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 18
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC151
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 32
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC152
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6796:
.L1339:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 36
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC153
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6797:
.L1341:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 26
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC146
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC148
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 19
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC154
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 33
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC155
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6798:
.L1343:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 26
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC146
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC148
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 20
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC156
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 34
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC157
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6799:
.L1345:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 26
	lea	r9, [rsp+1520]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC146
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 7
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC148
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 21
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC158
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 35
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC159
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6800:
.L1347:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 44
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC160
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6801:
.L1349:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC161
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6802:
.L1351:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 46
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC162
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6803:
.L1353:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC163
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5818:
.L1361:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4094
	je	.L4268
.L4094:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L1373
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6807
.L1373:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L1376
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6808
.L1376:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 54
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC172
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6807:
.L1375:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 54
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC172
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6808:
.L1377:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 54
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC172
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5822:
.L1751:
	sal	rax, 3
	pxor	xmm6, xmm6
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm6
	ucomisd	xmm0, xmm6
	jp	.L4100
	je	.L4628
.L4100:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L2093
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6809
.L2093:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2097
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6810
.L2097:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	lea	r14, [rsp+1584]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rdi, r9
	mov	rbx, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 31
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC715
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbx
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	ecx, OFFSET FLAT:.LC434
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r14
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 38
	rep stosd
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC720
.L5611:
	mov	rdi, r14
	lea	r13, [rsp+1616]
	lea	r12, [rsp+1648]
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r13
	mov	r8d, 3
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC718
	mov	rdi, r13
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r12
	or	r8, -1
	mov	rcx, rdx
	mov	rsi, rax
	mov	eax, r15d
	mov	rdx, r8
	rep stosd
	mov	ecx, OFFSET FLAT:TEXTYPE$
.L5612:
.L2095:
.L2099:
	mov	rdi, r12
	lea	rbx, [rsp+1680]
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, rbx
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC129
	mov	rdi, rbx
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 20
	mov	edi, OFFSET FLAT:.LC721
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 20
	mov	edi, OFFSET FLAT:.LC722
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 18
	mov	edi, OFFSET FLAT:.LC723
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 16
	mov	edi, OFFSET FLAT:.LC724
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 16
	mov	edi, OFFSET FLAT:.LC725
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR [rsp+8]
	jp	.L4101
	je	.L4630
.L4101:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L2102
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6811
.L2102:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L2105
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6812
.L2105:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 51
	mov	rdi, r9
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC731
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r14
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, r14
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r13
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC129
	mov	rdi, r13
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 58
	mov	edi, OFFSET FLAT:.LC727
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 26
	mov	edi, OFFSET FLAT:.LC728
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC729
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r12
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 24
	rep stosd
	mov	rcx, rsi
	mov	rdi, r12
	mov	esi, OFFSET FLAT:.LC735
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, rbx
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, rbx
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6812:
.L2106:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 50
	mov	rdi, r9
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC733
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r14
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, r14
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r13
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC129
	mov	rdi, r13
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 58
	mov	edi, OFFSET FLAT:.LC727
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 26
	mov	edi, OFFSET FLAT:.LC728
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC729
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r12
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 25
	rep stosd
	mov	rcx, rsi
	mov	rdi, r12
	mov	esi, OFFSET FLAT:.LC734
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, rbx
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, rbx
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6809:
.L2096:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	lea	r14, [rsp+1584]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rdi, r9
	mov	rbx, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 31
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC715
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbx
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	ecx, OFFSET FLAT:.LC434
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r14
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 40
	rep stosd
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC717
	jmp	.L5611
.L6810:
.L2098:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	lea	r14, [rsp+1584]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rdi, r9
	mov	rbx, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 31
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC715
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	rcx, rbx
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	or	rdx, -1
	mov	ecx, OFFSET FLAT:.LC434
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r14
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 39
	rep stosd
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC719
	jmp	.L5611
.L4630:
.L2100:
	mov	esi, 48
	mov	edi, OFFSET FLAT:.LC726
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 58
	mov	edi, OFFSET FLAT:.LC727
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 26
	mov	edi, OFFSET FLAT:.LC728
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC729
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 22
	mov	edi, OFFSET FLAT:.LC730
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6811:
.L2104:
	movapd	xmm0, xmm1
	xor	r15d, r15d
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	rep stosd
	mov	edx, 51
	mov	rdi, r9
	mov	rcx, rsi
	mov	esi, OFFSET FLAT:.LC731
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r14
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, r14
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r13
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC129
	mov	rdi, r13
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 58
	mov	edi, OFFSET FLAT:.LC727
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 26
	mov	edi, OFFSET FLAT:.LC728
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC447
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC729
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	rdi, r12
	or	r8, -1
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	mov	edx, 26
	rep stosd
	mov	rcx, rsi
	mov	rdi, r12
	mov	esi, OFFSET FLAT:.LC732
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, rbx
	mov	r8d, 2
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, rbx
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5815:
.L1233:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4090
	je	.L4233
.L4090:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1300
	je	.L6813
.L1300:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1302
	je	.L6814
.L1302:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1304
	je	.L6815
.L1304:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1016
	jne	.L1016
.L1307:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC134
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6815:
.L1305:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 42
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC133
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6813:
.L1301:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 44
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC131
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6814:
.L1303:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC132
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5827:
.L2130:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	pxor	xmm3, xmm3
	movsd	QWORD PTR [rsp+8], xmm3
	ucomisd	xmm0, xmm3
	jp	.L4107
	je	.L4648
.L4107:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L2140
	je	.L6816
.L2140:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1016
	jne	.L1016
.L2142:
	xor	ebx, ebx
	mov	edx, 6
	mov	esi, OFFSET FLAT:TB$
	mov	r8d, 56
	lea	r9, [rsp+1168]
	mov	eax, ebx
	mov	rcx, rdx
	or	rdx, -1
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC767
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1200]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 82
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC768
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1232]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 25
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC609
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1296]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1328]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 36
	lea	r9, [rsp+1360]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC769
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1392]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC770
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 5
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC739
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1584]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 87
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC771
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1616]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 34
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC772
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1648]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 33
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC773
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	lea	r9, [rsp+1680]
	mov	edx, 6
	mov	eax, ebx
	mov	rdi, r9
	mov	rcx, rdx
	mov	r8d, 81
	or	rdx, -1
	rep stosd
	mov	esi, OFFSET FLAT:TB$
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC774
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6816:
.L2141:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 42
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC766
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5819:
.L1370:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4095
	je	.L4271
.L4095:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1382
	je	.L6817
.L1382:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1384
	je	.L6818
.L1384:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1386
	je	.L6819
.L1386:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1388
	je	.L6820
.L1388:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L1390
	je	.L6821
.L1390:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L1392
	je	.L6822
.L1392:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L1394
	je	.L6823
.L1394:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L1396
	je	.L6824
.L1396:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L1398
	je	.L6825
.L1398:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L1400
	je	.L6826
.L1400:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L1402
	je	.L6827
.L1402:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L1404
	je	.L6828
.L1404:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1406
	je	.L6829
.L1406:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L1016
	jne	.L1016
.L1408:
	mov	esi, 37
	mov	edi, OFFSET FLAT:.LC188
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6829:
.L1407:
	mov	esi, 56
	mov	edi, OFFSET FLAT:.LC187
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6825:
.L1399:
	mov	esi, 56
	mov	edi, OFFSET FLAT:.LC183
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6826:
.L1401:
	mov	esi, 43
	mov	edi, OFFSET FLAT:.LC184
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6827:
.L1403:
	mov	esi, 47
	mov	edi, OFFSET FLAT:.LC185
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6828:
.L1405:
	mov	esi, 47
	mov	edi, OFFSET FLAT:.LC186
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6817:
.L1383:
	mov	esi, 62
	mov	edi, OFFSET FLAT:.LC175
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6818:
.L1385:
	mov	esi, 61
	mov	edi, OFFSET FLAT:.LC176
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6819:
.L1387:
	mov	esi, 40
	mov	edi, OFFSET FLAT:.LC177
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6820:
.L1389:
	mov	esi, 44
	mov	edi, OFFSET FLAT:.LC178
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6821:
.L1391:
	mov	esi, 41
	mov	edi, OFFSET FLAT:.LC179
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6822:
.L1393:
	mov	esi, 56
	mov	edi, OFFSET FLAT:.LC180
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6823:
.L1395:
	mov	esi, 50
	mov	edi, OFFSET FLAT:.LC181
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6824:
.L1397:
	mov	esi, 32
	mov	edi, OFFSET FLAT:.LC182
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5823:
.L2090:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4102
	je	.L4633
.L4102:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1016
	jne	.L1016
.L2111:
	mov	esi, 21
	mov	edi, OFFSET FLAT:.LC736
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 21
	mov	edi, OFFSET FLAT:.LC737
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5816:
.L1297:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4091
	je	.L4239
.L4091:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1312
	je	.L6830
.L1312:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1314
	je	.L6831
.L1314:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1316
	je	.L6832
.L1316:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1016
	jne	.L1016
.L1318:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 37
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC139
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6832:
.L1317:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 37
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC138
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6830:
.L1313:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 36
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC136
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6831:
.L1315:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 37
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC137
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5825:
.L2113:
	sal	rax, 3
	pxor	xmm2, xmm2
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm2
	ucomisd	xmm0, xmm2
	jp	.L4104
	je	.L4639
.L4104:
	movsd	xmm1, QWORD PTR .LC56[rip]
	ucomisd	xmm0, xmm1
	jp	.L1016
	jne	.L1016
.L2121:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	ucomisd	xmm0, QWORD PTR [rsp+8]
	jp	.L4105
	je	.L4641
.L4105:
	comisd	xmm1, xmm0
	ja	.L2124
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6833
.L2124:
	movsd	xmm1, QWORD PTR .LC83[rip]
	comisd	xmm1, xmm0
	ja	.L2127
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6834
.L2127:
	call	fb_DoubleToStr
	xor	ebx, ebx
	lea	r9, [rsp+48]
	or	r8, -1
	mov	edx, 6
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC750
	mov	edx, 25
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	lea	r9, [rsp+80]
	mov	edx, 6
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	lea	r9, [rsp+112]
	mov	edx, 6
	or	r8, -1
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+144]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+176]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+208]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+240]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+272]
	mov	r8d, 20
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+304]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+336]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+368]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+400]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC753
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+432]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+464]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHADER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+496]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+528]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+560]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 27
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC754
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+592]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+624]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+656]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+688]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+720]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC756
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+752]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+784]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+848]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+880]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+944]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 28
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC759
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1008]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1072]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1104]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1136]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC760
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NOUTPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1296]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 34
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC761
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 19
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	mov	esi, OFFSET FLAT:.LC167
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 42
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC762
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6834:
.L2128:
	call	fb_DoubleToStr
	xor	ebx, ebx
	lea	r9, [rsp+48]
	or	r8, -1
	mov	edx, 6
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC750
	mov	edx, 25
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	lea	r9, [rsp+80]
	mov	edx, 6
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	lea	r9, [rsp+112]
	mov	edx, 6
	or	r8, -1
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+144]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+176]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+208]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+240]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+272]
	mov	r8d, 20
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+304]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+336]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+368]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+400]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC753
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+432]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+464]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHADER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+496]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+528]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+560]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 27
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC754
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+592]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+624]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+656]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+688]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+720]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC756
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+752]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+784]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+848]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+880]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+944]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 28
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC759
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1008]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1072]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1104]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1136]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC760
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NOUTPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1296]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 34
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC761
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 19
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	mov	esi, OFFSET FLAT:.LC167
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 42
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC762
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4641:
.L2122:
	xor	ebx, ebx
	mov	edx, 6
	or	r8, -1
	mov	esi, OFFSET FLAT:.LC750
	lea	r9, [rsp+560]
	mov	eax, ebx
	mov	rcx, rdx
	mov	edx, 25
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+592]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+624]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC751
	mov	edx, 21
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+656]
	mov	r8d, 20
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+688]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC751
	mov	edx, 21
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+720]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC753
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+752]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+784]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHADER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+848]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+880]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC754
	mov	edx, 27
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+944]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC756
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1008]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1072]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1104]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1136]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+1200]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC759
	mov	edx, 28
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1232]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1328]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC760
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1392]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1424]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NOUTPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1456]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC751
	mov	edx, 21
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 34
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC761
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC167
	mov	edx, 19
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 42
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC762
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6833:
.L2126:
	call	fb_DoubleToStr
	xor	ebx, ebx
	lea	r9, [rsp+48]
	or	r8, -1
	mov	edx, 6
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC750
	mov	edx, 25
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	lea	r9, [rsp+80]
	mov	edx, 6
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	lea	r9, [rsp+112]
	mov	edx, 6
	or	r8, -1
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+144]
	mov	r8d, 3
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC434
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+176]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+208]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+240]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+272]
	mov	r8d, 20
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC752
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+304]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+336]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+368]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+400]
	mov	r8d, 29
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC753
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+432]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+464]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHADER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+496]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+528]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+560]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 27
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC754
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+592]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+624]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+656]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+688]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+720]
	mov	r8d, 16
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC756
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+752]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+784]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+816]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+848]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+880]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+912]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+944]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 28
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC759
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1008]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1072]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1104]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1136]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 11
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC760
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NOUTPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1296]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC758
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	r12, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 21
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	esi, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 34
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC761
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 19
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	mov	esi, OFFSET FLAT:.LC167
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1488]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 42
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC762
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L1359:
	sal	rax, 3
	pxor	xmm6, xmm6
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	movsd	QWORD PTR [rsp+8], xmm6
	ucomisd	xmm0, xmm6
	jp	.L4093
	je	.L4265
.L4093:
	movsd	xmm2, QWORD PTR .LC56[rip]
	movsd	xmm1, QWORD PTR [rbp+1624+rax]
	comisd	xmm2, xmm0
	ja	.L1364
	comisd	xmm0, QWORD PTR .LC80[rip]
	jbe	.L6835
.L1364:
	movsd	xmm2, QWORD PTR .LC83[rip]
	comisd	xmm2, xmm0
	ja	.L1367
	comisd	xmm0, QWORD PTR .LC170[rip]
	jbe	.L6836
.L1367:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 19
	lea	r9, [rsp+1584]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC167
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC168
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6835:
.L1366:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 19
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC167
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 4
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC169
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC168
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6836:
.L1368:
	movapd	xmm0, xmm1
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 19
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC167
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC171
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC168
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L5821:
.L1410:
	movsd	xmm0, QWORD PTR [rbp+1600+rax*8]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4099
	je	.L4458
.L4099:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1754
	je	.L6837
.L1754:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1756
	je	.L6838
.L1756:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1758
	je	.L6839
.L1758:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1760
	je	.L6840
.L1760:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L1762
	je	.L6841
.L1762:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L1764
	je	.L6842
.L1764:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L1766
	je	.L6843
.L1766:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L1768
	je	.L6844
.L1768:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L1770
	je	.L6845
.L1770:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L1772
	je	.L6846
.L1772:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L1774
	je	.L6847
.L1774:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L1776
	je	.L6848
.L1776:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L1778
	je	.L6849
.L1778:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1780
	je	.L6850
.L1780:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L1782
	je	.L6851
.L1782:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L1784
	je	.L6852
.L1784:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L1786
	je	.L6853
.L1786:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L1788
	je	.L6854
.L1788:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L1790
	je	.L6855
.L1790:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L1792
	je	.L6856
.L1792:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L1794
	je	.L6857
.L1794:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L1796
	je	.L6858
.L1796:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L1798
	je	.L6859
.L1798:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L1800
	je	.L6860
.L1800:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L1802
	je	.L6861
.L1802:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L1804
	je	.L6862
.L1804:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L1806
	je	.L6863
.L1806:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L1808
	je	.L6864
.L1808:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L1810
	je	.L6865
.L1810:
	ucomisd	xmm0, QWORD PTR .LC224[rip]
	jp	.L1812
	je	.L6866
.L1812:
	ucomisd	xmm0, QWORD PTR .LC226[rip]
	jp	.L1814
	je	.L6867
.L1814:
	ucomisd	xmm0, QWORD PTR .LC228[rip]
	jp	.L1816
	je	.L6868
.L1816:
	ucomisd	xmm0, QWORD PTR .LC230[rip]
	jp	.L1818
	je	.L6869
.L1818:
	ucomisd	xmm0, QWORD PTR .LC232[rip]
	jp	.L1820
	je	.L6870
.L1820:
	ucomisd	xmm0, QWORD PTR .LC234[rip]
	jp	.L1822
	je	.L6871
.L1822:
	ucomisd	xmm0, QWORD PTR .LC236[rip]
	jp	.L1824
	je	.L6872
.L1824:
	ucomisd	xmm0, QWORD PTR .LC238[rip]
	jp	.L1826
	je	.L6873
.L1826:
	ucomisd	xmm0, QWORD PTR .LC240[rip]
	jp	.L1828
	je	.L6874
.L1828:
	ucomisd	xmm0, QWORD PTR .LC242[rip]
	jp	.L1830
	je	.L6875
.L1830:
	ucomisd	xmm0, QWORD PTR .LC244[rip]
	jp	.L1832
	je	.L6876
.L1832:
	ucomisd	xmm0, QWORD PTR .LC246[rip]
	jp	.L1834
	je	.L6877
.L1834:
	ucomisd	xmm0, QWORD PTR .LC248[rip]
	jp	.L1836
	je	.L6878
.L1836:
	ucomisd	xmm0, QWORD PTR .LC250[rip]
	jp	.L1838
	je	.L6879
.L1838:
	ucomisd	xmm0, QWORD PTR .LC252[rip]
	jp	.L1840
	je	.L6880
.L1840:
	ucomisd	xmm0, QWORD PTR .LC253[rip]
	jp	.L1842
	je	.L6881
.L1842:
	ucomisd	xmm0, QWORD PTR .LC255[rip]
	jp	.L1844
	je	.L6882
.L1844:
	ucomisd	xmm0, QWORD PTR .LC257[rip]
	jp	.L1846
	je	.L6883
.L1846:
	ucomisd	xmm0, QWORD PTR .LC259[rip]
	jp	.L1848
	je	.L6884
.L1848:
	ucomisd	xmm0, QWORD PTR .LC261[rip]
	jp	.L1850
	je	.L6885
.L1850:
	ucomisd	xmm0, QWORD PTR .LC263[rip]
	jp	.L1852
	je	.L6886
.L1852:
	ucomisd	xmm0, QWORD PTR .LC264[rip]
	jp	.L1854
	je	.L6887
.L1854:
	ucomisd	xmm0, QWORD PTR .LC266[rip]
	jp	.L1856
	je	.L6888
.L1856:
	ucomisd	xmm0, QWORD PTR .LC268[rip]
	jp	.L1858
	je	.L6889
.L1858:
	ucomisd	xmm0, QWORD PTR .LC270[rip]
	jp	.L1860
	je	.L6890
.L1860:
	ucomisd	xmm0, QWORD PTR .LC272[rip]
	jp	.L1862
	je	.L6891
.L1862:
	ucomisd	xmm0, QWORD PTR .LC274[rip]
	jp	.L1864
	je	.L6892
.L1864:
	ucomisd	xmm0, QWORD PTR .LC276[rip]
	jp	.L1866
	je	.L6893
.L1866:
	ucomisd	xmm0, QWORD PTR .LC278[rip]
	jp	.L1868
	je	.L6894
.L1868:
	ucomisd	xmm0, QWORD PTR .LC281[rip]
	jp	.L1870
	je	.L6895
.L1870:
	ucomisd	xmm0, QWORD PTR .LC284[rip]
	jp	.L1872
	je	.L6896
.L1872:
	ucomisd	xmm0, QWORD PTR .LC286[rip]
	jp	.L1874
	je	.L6897
.L1874:
	ucomisd	xmm0, QWORD PTR .LC288[rip]
	jp	.L1876
	je	.L6898
.L1876:
	ucomisd	xmm0, QWORD PTR .LC290[rip]
	jp	.L1878
	je	.L6899
.L1878:
	ucomisd	xmm0, QWORD PTR .LC292[rip]
	jp	.L1880
	je	.L6900
.L1880:
	ucomisd	xmm0, QWORD PTR .LC294[rip]
	jp	.L1882
	je	.L6901
.L1882:
	ucomisd	xmm0, QWORD PTR .LC296[rip]
	jp	.L1884
	je	.L6902
.L1884:
	ucomisd	xmm0, QWORD PTR .LC298[rip]
	jp	.L1886
	je	.L6903
.L1886:
	ucomisd	xmm0, QWORD PTR .LC300[rip]
	jp	.L1888
	je	.L6904
.L1888:
	ucomisd	xmm0, QWORD PTR .LC302[rip]
	jp	.L1890
	je	.L6905
.L1890:
	ucomisd	xmm0, QWORD PTR .LC304[rip]
	jp	.L1892
	je	.L6906
.L1892:
	ucomisd	xmm0, QWORD PTR .LC306[rip]
	jp	.L1894
	je	.L6907
.L1894:
	ucomisd	xmm0, QWORD PTR .LC308[rip]
	jp	.L1896
	je	.L6908
.L1896:
	ucomisd	xmm0, QWORD PTR .LC310[rip]
	jp	.L1898
	je	.L6909
.L1898:
	ucomisd	xmm0, QWORD PTR .LC312[rip]
	jp	.L1900
	je	.L6910
.L1900:
	ucomisd	xmm0, QWORD PTR .LC314[rip]
	jp	.L1902
	je	.L6911
.L1902:
	ucomisd	xmm0, QWORD PTR .LC316[rip]
	jp	.L1904
	je	.L6912
.L1904:
	ucomisd	xmm0, QWORD PTR .LC318[rip]
	jp	.L1906
	je	.L6913
.L1906:
	ucomisd	xmm0, QWORD PTR .LC320[rip]
	jp	.L1908
	je	.L6914
.L1908:
	ucomisd	xmm0, QWORD PTR .LC322[rip]
	jp	.L1910
	je	.L6915
.L1910:
	ucomisd	xmm0, QWORD PTR .LC324[rip]
	jp	.L1912
	je	.L6916
.L1912:
	ucomisd	xmm0, QWORD PTR .LC326[rip]
	jp	.L1914
	je	.L6917
.L1914:
	ucomisd	xmm0, QWORD PTR .LC328[rip]
	jp	.L1916
	je	.L6918
.L1916:
	ucomisd	xmm0, QWORD PTR .LC330[rip]
	jp	.L1918
	je	.L6919
.L1918:
	ucomisd	xmm0, QWORD PTR .LC332[rip]
	jp	.L1920
	je	.L6920
.L1920:
	ucomisd	xmm0, QWORD PTR .LC334[rip]
	jp	.L1922
	je	.L6921
.L1922:
	ucomisd	xmm0, QWORD PTR .LC336[rip]
	jp	.L1924
	je	.L6922
.L1924:
	ucomisd	xmm0, QWORD PTR .LC338[rip]
	jp	.L1926
	je	.L6923
.L1926:
	ucomisd	xmm0, QWORD PTR .LC340[rip]
	jp	.L1928
	je	.L6924
.L1928:
	ucomisd	xmm0, QWORD PTR .LC342[rip]
	jp	.L1930
	je	.L6925
.L1930:
	ucomisd	xmm0, QWORD PTR .LC344[rip]
	jp	.L1932
	je	.L6926
.L1932:
	ucomisd	xmm0, QWORD PTR .LC346[rip]
	jp	.L1934
	je	.L6927
.L1934:
	ucomisd	xmm0, QWORD PTR .LC348[rip]
	jp	.L1936
	je	.L6928
.L1936:
	ucomisd	xmm0, QWORD PTR .LC350[rip]
	jp	.L1938
	je	.L6929
.L1938:
	ucomisd	xmm0, QWORD PTR .LC352[rip]
	jp	.L1940
	je	.L6930
.L1940:
	ucomisd	xmm0, QWORD PTR .LC354[rip]
	jp	.L1942
	je	.L6931
.L1942:
	ucomisd	xmm0, QWORD PTR .LC356[rip]
	jp	.L1944
	je	.L6932
.L1944:
	ucomisd	xmm0, QWORD PTR .LC170[rip]
	jp	.L1946
	je	.L6933
.L1946:
	ucomisd	xmm0, QWORD PTR .LC359[rip]
	jp	.L1948
	je	.L6934
.L1948:
	ucomisd	xmm0, QWORD PTR .LC361[rip]
	jp	.L1950
	je	.L6935
.L1950:
	ucomisd	xmm0, QWORD PTR .LC363[rip]
	jp	.L1952
	je	.L6936
.L1952:
	ucomisd	xmm0, QWORD PTR .LC365[rip]
	jp	.L1954
	je	.L6937
.L1954:
	ucomisd	xmm0, QWORD PTR .LC367[rip]
	jp	.L1956
	je	.L6938
.L1956:
	ucomisd	xmm0, QWORD PTR .LC369[rip]
	jp	.L1958
	je	.L6939
.L1958:
	ucomisd	xmm0, QWORD PTR .LC371[rip]
	jp	.L1960
	je	.L6940
.L1960:
	ucomisd	xmm0, QWORD PTR .LC373[rip]
	jp	.L1962
	je	.L6941
.L1962:
	ucomisd	xmm0, QWORD PTR .LC375[rip]
	jp	.L1964
	je	.L6942
.L1964:
	ucomisd	xmm0, QWORD PTR .LC377[rip]
	jp	.L1966
	je	.L6943
.L1966:
	ucomisd	xmm0, QWORD PTR .LC379[rip]
	jp	.L1968
	je	.L6944
.L1968:
	ucomisd	xmm0, QWORD PTR .LC381[rip]
	jp	.L1970
	je	.L6945
.L1970:
	ucomisd	xmm0, QWORD PTR .LC382[rip]
	jp	.L1972
	je	.L6946
.L1972:
	ucomisd	xmm0, QWORD PTR .LC384[rip]
	jp	.L1974
	je	.L6947
.L1974:
	ucomisd	xmm0, QWORD PTR .LC385[rip]
	jp	.L1976
	je	.L6948
.L1976:
	ucomisd	xmm0, QWORD PTR .LC386[rip]
	jp	.L1978
	je	.L6949
.L1978:
	ucomisd	xmm0, QWORD PTR .LC388[rip]
	jp	.L1980
	je	.L6950
.L1980:
	ucomisd	xmm0, QWORD PTR .LC390[rip]
	jp	.L1982
	je	.L6951
.L1982:
	ucomisd	xmm0, QWORD PTR .LC391[rip]
	jp	.L1984
	je	.L6952
.L1984:
	ucomisd	xmm0, QWORD PTR .LC393[rip]
	jp	.L1986
	je	.L6953
.L1986:
	ucomisd	xmm0, QWORD PTR .LC395[rip]
	jp	.L1988
	je	.L6954
.L1988:
	ucomisd	xmm0, QWORD PTR .LC396[rip]
	jp	.L1990
	je	.L6955
.L1990:
	ucomisd	xmm0, QWORD PTR .LC398[rip]
	jp	.L1992
	je	.L6956
.L1992:
	ucomisd	xmm0, QWORD PTR .LC400[rip]
	jp	.L1994
	je	.L6957
.L1994:
	ucomisd	xmm0, QWORD PTR .LC402[rip]
	jp	.L1996
	je	.L6958
.L1996:
	ucomisd	xmm0, QWORD PTR .LC404[rip]
	jp	.L1998
	je	.L6959
.L1998:
	ucomisd	xmm0, QWORD PTR .LC406[rip]
	jp	.L2000
	je	.L6960
.L2000:
	ucomisd	xmm0, QWORD PTR .LC408[rip]
	jp	.L2002
	je	.L6961
.L2002:
	ucomisd	xmm0, QWORD PTR .LC410[rip]
	jp	.L2004
	je	.L6962
.L2004:
	ucomisd	xmm0, QWORD PTR .LC412[rip]
	jp	.L2006
	je	.L6963
.L2006:
	ucomisd	xmm0, QWORD PTR .LC414[rip]
	jp	.L2008
	je	.L6964
.L2008:
	ucomisd	xmm0, QWORD PTR .LC416[rip]
	jp	.L2010
	je	.L6965
.L2010:
	ucomisd	xmm0, QWORD PTR .LC418[rip]
	jp	.L2012
	je	.L6966
.L2012:
	ucomisd	xmm0, QWORD PTR .LC420[rip]
	jp	.L2014
	je	.L6967
.L2014:
	ucomisd	xmm0, QWORD PTR .LC422[rip]
	jp	.L2016
	je	.L6968
.L2016:
	ucomisd	xmm0, QWORD PTR .LC424[rip]
	jp	.L2018
	je	.L6969
.L2018:
	ucomisd	xmm0, QWORD PTR .LC426[rip]
	jp	.L2020
	je	.L6970
.L2020:
	ucomisd	xmm0, QWORD PTR .LC428[rip]
	jp	.L2022
	je	.L6971
.L2022:
	ucomisd	xmm0, QWORD PTR .LC430[rip]
	jp	.L2024
	je	.L6972
.L2024:
	ucomisd	xmm0, QWORD PTR .LC432[rip]
	jp	.L2026
	je	.L6973
.L2026:
	ucomisd	xmm0, QWORD PTR .LC435[rip]
	jp	.L2028
	je	.L6974
.L2028:
	ucomisd	xmm0, QWORD PTR .LC438[rip]
	jp	.L2030
	je	.L6975
.L2030:
	ucomisd	xmm0, QWORD PTR .LC440[rip]
	jp	.L2032
	je	.L6976
.L2032:
	ucomisd	xmm0, QWORD PTR .LC442[rip]
	jp	.L2034
	je	.L6977
.L2034:
	ucomisd	xmm0, QWORD PTR .LC444[rip]
	jp	.L2036
	je	.L6978
.L2036:
	ucomisd	xmm0, QWORD PTR .LC446[rip]
	jp	.L2038
	je	.L6979
.L2038:
	ucomisd	xmm0, QWORD PTR .LC448[rip]
	jp	.L2040
	je	.L6980
.L2040:
	ucomisd	xmm0, QWORD PTR .LC450[rip]
	jp	.L2042
	je	.L6981
.L2042:
	ucomisd	xmm0, QWORD PTR .LC452[rip]
	jp	.L2044
	je	.L6982
.L2044:
	ucomisd	xmm0, QWORD PTR .LC454[rip]
	jp	.L2046
	je	.L6983
.L2046:
	ucomisd	xmm0, QWORD PTR .LC456[rip]
	jp	.L2048
	je	.L6984
.L2048:
	ucomisd	xmm0, QWORD PTR .LC458[rip]
	jp	.L2050
	je	.L6985
.L2050:
	ucomisd	xmm0, QWORD PTR .LC460[rip]
	jp	.L2052
	je	.L6986
.L2052:
	ucomisd	xmm0, QWORD PTR .LC462[rip]
	jp	.L2054
	je	.L6987
.L2054:
	ucomisd	xmm0, QWORD PTR .LC464[rip]
	jp	.L2056
	je	.L6988
.L2056:
	ucomisd	xmm0, QWORD PTR .LC466[rip]
	jp	.L2058
	je	.L6989
.L2058:
	ucomisd	xmm0, QWORD PTR .LC468[rip]
	jp	.L2060
	je	.L6990
.L2060:
	ucomisd	xmm0, QWORD PTR .LC470[rip]
	jp	.L2062
	je	.L6991
.L2062:
	ucomisd	xmm0, QWORD PTR .LC472[rip]
	jp	.L2064
	je	.L6992
.L2064:
	ucomisd	xmm0, QWORD PTR .LC474[rip]
	jp	.L2066
	je	.L6993
.L2066:
	ucomisd	xmm0, QWORD PTR .LC476[rip]
	jp	.L2068
	je	.L6994
.L2068:
	ucomisd	xmm0, QWORD PTR .LC478[rip]
	jp	.L2070
	je	.L6995
.L2070:
	ucomisd	xmm0, QWORD PTR .LC480[rip]
	jp	.L2072
	je	.L6996
.L2072:
	ucomisd	xmm0, QWORD PTR .LC487[rip]
	jp	.L2074
	je	.L6997
.L2074:
	ucomisd	xmm0, QWORD PTR .LC488[rip]
	jp	.L2076
	je	.L6998
.L2076:
	ucomisd	xmm0, QWORD PTR .LC702[rip]
	jp	.L2078
	je	.L6999
.L2078:
	ucomisd	xmm0, QWORD PTR .LC704[rip]
	jp	.L2080
	je	.L7000
.L2080:
	ucomisd	xmm0, QWORD PTR .LC706[rip]
	jp	.L2082
	je	.L7001
.L2082:
	ucomisd	xmm0, QWORD PTR .LC708[rip]
	jp	.L2084
	je	.L7002
.L2084:
	ucomisd	xmm0, QWORD PTR .LC710[rip]
	jp	.L2086
	je	.L7003
.L2086:
	ucomisd	xmm0, QWORD PTR .LC712[rip]
	jp	.L1016
	jne	.L1016
.L2088:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC714
	or	rsi, -1
	mov	edi, OFFSET FLAT:LAMP$
	call	fb_StrAssign
	jmp	.L1016
.L7003:
.L2087:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC713
	or	rsi, -1
	mov	edi, OFFSET FLAT:LAMP$
	call	fb_StrAssign
	jmp	.L1016
.L7001:
.L2083:
	xor	r8d, r8d
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC709
	or	rsi, -1
	mov	edi, OFFSET FLAT:LAMP$
	call	fb_StrAssign
	jmp	.L1016
.L7002:
.L2085:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC711
	or	rsi, -1
	mov	edi, OFFSET FLAT:LAMP$
	call	fb_StrAssign
	jmp	.L1016
.L6997:
.L2075:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC701
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6998:
.L2077:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC703
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6999:
.L2079:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC705
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L7000:
.L2081:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC707
	or	rsi, -1
	mov	edi, OFFSET FLAT:LAMP$
	call	fb_StrAssign
	jmp	.L1016
.L6981:
.L2043:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC685
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6982:
.L2045:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC686
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6983:
.L2047:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC687
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6984:
.L2049:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC688
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6985:
.L2051:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC689
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6986:
.L2053:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC690
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6987:
.L2055:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC691
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6988:
.L2057:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC692
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6989:
.L2059:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC693
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6990:
.L2061:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC694
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6991:
.L2063:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC695
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6992:
.L2065:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC696
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6993:
.L2067:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC697
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6994:
.L2069:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC698
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6995:
.L2071:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC699
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6996:
.L2073:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC700
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6949:
.L1979:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC657
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6950:
.L1981:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC658
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6951:
.L1983:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC659
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6952:
.L1985:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC660
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6953:
.L1987:
	xor	r8d, r8d
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC661
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6954:
.L1989:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC662
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6955:
.L1991:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC663
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6956:
.L1993:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC664
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6957:
.L1995:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC665
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6958:
.L1997:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC666
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6959:
.L1999:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC667
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6960:
.L2001:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC668
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6961:
.L2003:
	xor	r8d, r8d
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC669
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6962:
.L2005:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC670
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6963:
.L2007:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC671
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6964:
.L2009:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC672
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6965:
.L2011:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC673
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6966:
.L2013:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC674
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6967:
.L2015:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6968:
.L2017:
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC675
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6969:
.L2019:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC676
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6970:
.L2021:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC677
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6971:
.L2023:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC645
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6972:
.L2025:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC670
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6973:
.L2027:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC678
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6974:
.L2029:
	xor	r8d, r8d
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC679
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6975:
.L2031:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC680
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6976:
.L2033:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC681
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6977:
.L2035:
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC682
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6978:
.L2037:
	xor	r8d, r8d
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC683
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6979:
.L2039:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC684
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6980:
.L2041:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC546
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6885:
.L1851:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC582
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6886:
.L1853:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC583
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6887:
.L1855:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC584
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6888:
.L1857:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC585
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6889:
.L1859:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC586
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6890:
.L1861:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC587
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6891:
.L1863:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC588
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6892:
.L1865:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 25
	mov	edx, OFFSET FLAT:.LC589
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC590
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6893:
.L1867:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC591
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6894:
.L1869:
	xor	r8d, r8d
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC592
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6895:
.L1871:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC593
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6896:
.L1873:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC594
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC595
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6897:
.L1875:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC596
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6898:
.L1877:
	xor	r8d, r8d
	mov	ecx, 24
	mov	edx, OFFSET FLAT:.LC597
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6899:
.L1879:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC598
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6900:
.L1881:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC599
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6901:
.L1883:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC600
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC601
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6902:
.L1885:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC602
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC603
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6903:
.L1887:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 24
	mov	edx, OFFSET FLAT:.LC604
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC605
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6904:
.L1889:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC606
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC607
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6905:
.L1891:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC608
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6906:
.L1893:
	xor	r8d, r8d
	mov	ecx, 25
	mov	edx, OFFSET FLAT:.LC609
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6907:
.L1895:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC610
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC611
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6908:
.L1897:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC612
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6909:
.L1899:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC613
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6910:
.L1901:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC614
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6911:
.L1903:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 23
	mov	edx, OFFSET FLAT:.LC615
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC616
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6912:
.L1905:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC617
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6913:
.L1907:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC618
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6914:
.L1909:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC619
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6915:
.L1911:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 26
	mov	edx, OFFSET FLAT:.LC620
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC621
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6916:
.L1913:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC622
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6917:
.L1915:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC623
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6918:
.L1917:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC624
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6919:
.L1919:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC625
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6920:
.L1921:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC626
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC627
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6921:
.L1923:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC628
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6922:
.L1925:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC629
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6923:
.L1927:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC630
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6924:
.L1929:
	xor	r8d, r8d
	mov	ecx, 25
	mov	edx, OFFSET FLAT:.LC631
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6925:
.L1931:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC632
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC633
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6926:
.L1933:
	xor	r8d, r8d
	mov	ecx, 27
	mov	edx, OFFSET FLAT:.LC634
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6927:
.L1935:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC635
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC636
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6928:
.L1937:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC637
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6929:
.L1939:
	xor	r8d, r8d
	mov	ecx, 26
	mov	edx, OFFSET FLAT:.LC638
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6930:
.L1941:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC639
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6931:
.L1943:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC640
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6932:
.L1945:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC641
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6933:
.L1947:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC642
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6934:
.L1949:
	xor	r8d, r8d
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC643
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6935:
.L1951:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC644
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6936:
.L1953:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC645
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6937:
.L1955:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC646
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6938:
.L1957:
	xor	r8d, r8d
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC537
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6939:
.L1959:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC647
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6940:
.L1961:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC648
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6941:
.L1963:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC649
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6942:
.L1965:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC650
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6943:
.L1967:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC651
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6944:
.L1969:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC652
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6945:
.L1971:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC653
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6946:
.L1973:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC654
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6947:
.L1975:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC655
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6948:
.L1977:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC656
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6634:
.L3470:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1471
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6635:
.L3472:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1472
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6636:
.L3474:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1473
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6637:
.L3476:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1474
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6638:
.L3478:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1475
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6639:
.L3480:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1476
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6640:
.L3482:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1477
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6641:
.L3484:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1478
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6642:
.L3486:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1479
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6643:
.L3488:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1480
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6644:
.L3490:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1481
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6645:
.L3492:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1482
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6646:
.L3494:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1483
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6647:
.L3496:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1484
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6648:
.L3498:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1485
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6649:
.L3500:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1486
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6650:
.L3502:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1487
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6651:
.L3504:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1488
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6652:
.L3506:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1489
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6653:
.L3508:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1490
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6654:
.L3510:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1491
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6655:
.L3512:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1492
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6656:
.L3514:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 22
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1493
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6657:
.L3516:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1494
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6658:
.L3518:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1495
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6659:
.L3520:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1496
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6660:
.L3522:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1497
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6661:
.L3524:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1498
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6662:
.L3526:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1499
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6663:
.L3528:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1500
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6664:
.L3530:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1501
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6665:
.L3532:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1502
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6666:
.L3534:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1503
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6667:
.L3536:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1504
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6668:
.L3538:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1505
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6669:
.L3540:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1506
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6670:
.L3542:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1507
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6671:
.L3544:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1508
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6672:
.L3546:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1509
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6673:
.L3548:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1510
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6674:
.L3550:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1511
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6675:
.L3552:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1512
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6676:
.L3554:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1513
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6677:
.L3556:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1514
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6678:
.L3558:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1515
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6679:
.L3560:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1516
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6680:
.L3562:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1517
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6681:
.L3564:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1518
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6682:
.L3566:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1519
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6683:
.L3568:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1520
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6684:
.L3570:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1521
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6685:
.L3572:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1522
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6686:
.L3574:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1523
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6687:
.L3576:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1524
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6688:
.L3578:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1525
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6689:
.L3580:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1526
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6690:
.L3582:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1527
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6691:
.L3584:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1528
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6692:
.L3586:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1529
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6693:
.L3588:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1530
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6694:
.L3590:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1531
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6695:
.L3592:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1532
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6696:
.L3594:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1533
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6697:
.L3596:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1534
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6698:
.L3598:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1535
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6699:
.L3600:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1536
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6700:
.L3602:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1537
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6701:
.L3604:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1538
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6702:
.L3606:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1539
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6703:
.L3608:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1540
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6704:
.L3610:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1541
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6705:
.L3612:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1542
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6706:
.L3614:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1543
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6707:
.L3616:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1544
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6708:
.L3618:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1545
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6709:
.L3620:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1546
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6710:
.L3622:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1547
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6711:
.L3624:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1548
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6712:
.L3626:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1549
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6713:
.L3628:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1550
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6714:
.L3630:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1551
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6715:
.L3632:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1552
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6716:
.L3634:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1553
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6717:
.L3636:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1554
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6718:
.L3638:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1555
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6719:
.L3640:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1556
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6720:
.L3642:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1557
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6721:
.L3644:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1558
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6722:
.L3646:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1559
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6723:
.L3648:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1560
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6724:
.L3650:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1561
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6725:
.L3652:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1562
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6726:
.L3654:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1563
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6727:
.L3656:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1564
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6728:
.L3658:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1565
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6729:
.L3660:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1566
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6730:
.L3662:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1567
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6731:
.L3664:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1568
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6732:
.L3666:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1569
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6733:
.L3668:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1570
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6734:
.L3670:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1571
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6735:
.L3672:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1572
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6736:
.L3674:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1573
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6737:
.L3676:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1574
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6738:
.L3678:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1575
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6739:
.L3680:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1576
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6740:
.L3682:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1577
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6741:
.L3684:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1578
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6742:
.L3686:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1579
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6743:
.L3688:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1580
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6744:
.L3690:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1581
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6745:
.L3692:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1582
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6746:
.L3694:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1583
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6747:
.L3696:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 18
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1584
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6748:
.L3698:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1585
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6749:
.L3700:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1586
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6750:
.L3702:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1587
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6751:
.L3704:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1588
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6752:
.L3706:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1589
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6753:
.L3708:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1590
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6754:
.L3710:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1591
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6755:
.L3712:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1592
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6756:
.L3714:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1593
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6757:
.L3716:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1594
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6758:
.L3718:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1595
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6759:
.L3720:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1596
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6760:
.L3722:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1597
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6761:
.L3724:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1598
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6570:
.L3342:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1407
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6571:
.L3344:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1408
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6572:
.L3346:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1409
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6573:
.L3348:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1410
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6574:
.L3350:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1411
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6575:
.L3352:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1412
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6576:
.L3354:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1413
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6577:
.L3356:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 15
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1414
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6578:
.L3358:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1415
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6579:
.L3360:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1416
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6580:
.L3362:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1417
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6581:
.L3364:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1418
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6582:
.L3366:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1419
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6583:
.L3368:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1420
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6584:
.L3370:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1421
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6585:
.L3372:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1422
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6586:
.L3374:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1423
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6587:
.L3376:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1424
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6588:
.L3378:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1425
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6589:
.L3380:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1426
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6590:
.L3382:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1427
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6591:
.L3384:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1428
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6592:
.L3386:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1429
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6593:
.L3388:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1430
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6594:
.L3390:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1431
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6595:
.L3392:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1432
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6596:
.L3394:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1433
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6597:
.L3396:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1434
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6598:
.L3398:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1435
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6599:
.L3400:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1436
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6600:
.L3402:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1437
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6601:
.L3404:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1438
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6602:
.L3406:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1439
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6603:
.L3408:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1440
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6604:
.L3410:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1441
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6605:
.L3412:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1442
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6606:
.L3414:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1443
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6607:
.L3416:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1444
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6608:
.L3418:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1445
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6609:
.L3420:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1446
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6610:
.L3422:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1447
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6611:
.L3424:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 4
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1448
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6612:
.L3426:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1449
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6613:
.L3428:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 13
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1450
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6614:
.L3430:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 17
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1451
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6615:
.L3432:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 8
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1452
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6616:
.L3434:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1453
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6617:
.L3436:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1454
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6618:
.L3438:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 10
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1455
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6619:
.L3440:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1456
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6620:
.L3442:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1457
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6621:
.L3444:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 9
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1458
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6622:
.L3446:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1459
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6623:
.L3448:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1460
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6624:
.L3450:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1461
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6625:
.L3452:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 11
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1462
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6626:
.L3454:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 12
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1463
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6627:
.L3456:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 14
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1464
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6628:
.L3458:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 16
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1465
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6629:
.L3460:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 7
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1466
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6630:
.L3462:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 6
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1467
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6631:
.L3464:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 19
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1468
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6632:
.L3466:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 5
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1469
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L6633:
.L3468:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC1470
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L1231:
	sal	rax, 3
	movsd	xmm0, QWORD PTR [rbp+1600+rax]
	ucomisd	xmm0, QWORD PTR .LC55[rip]
	jp	.L4089
	je	.L4201
.L4089:
	ucomisd	xmm0, QWORD PTR .LC56[rip]
	jp	.L1236
	je	.L7004
.L1236:
	ucomisd	xmm0, QWORD PTR .LC59[rip]
	jp	.L1238
	je	.L7005
.L1238:
	ucomisd	xmm0, QWORD PTR .LC62[rip]
	jp	.L1240
	je	.L7006
.L1240:
	ucomisd	xmm0, QWORD PTR .LC65[rip]
	jp	.L1242
	je	.L7007
.L1242:
	ucomisd	xmm0, QWORD PTR .LC68[rip]
	jp	.L1244
	je	.L7008
.L1244:
	ucomisd	xmm0, QWORD PTR .LC71[rip]
	jp	.L1246
	je	.L7009
.L1246:
	ucomisd	xmm0, QWORD PTR .LC74[rip]
	jp	.L1248
	je	.L7010
.L1248:
	ucomisd	xmm0, QWORD PTR .LC77[rip]
	jp	.L1250
	je	.L7011
.L1250:
	ucomisd	xmm0, QWORD PTR .LC80[rip]
	jp	.L1252
	je	.L7012
.L1252:
	ucomisd	xmm0, QWORD PTR .LC83[rip]
	jp	.L1254
	je	.L7013
.L1254:
	ucomisd	xmm0, QWORD PTR .LC86[rip]
	jp	.L1256
	je	.L7014
.L1256:
	ucomisd	xmm0, QWORD PTR .LC88[rip]
	jp	.L1258
	je	.L7015
.L1258:
	ucomisd	xmm0, QWORD PTR .LC90[rip]
	jp	.L1260
	je	.L7016
.L1260:
	ucomisd	xmm0, QWORD PTR .LC92[rip]
	jp	.L1262
	je	.L7017
.L1262:
	ucomisd	xmm0, QWORD PTR .LC94[rip]
	jp	.L1264
	je	.L7018
.L1264:
	ucomisd	xmm0, QWORD PTR .LC96[rip]
	jp	.L1266
	je	.L7019
.L1266:
	ucomisd	xmm0, QWORD PTR .LC98[rip]
	jp	.L1268
	je	.L7020
.L1268:
	ucomisd	xmm0, QWORD PTR .LC100[rip]
	jp	.L1270
	je	.L7021
.L1270:
	ucomisd	xmm0, QWORD PTR .LC102[rip]
	jp	.L1272
	je	.L7022
.L1272:
	ucomisd	xmm0, QWORD PTR .LC104[rip]
	jp	.L1274
	je	.L7023
.L1274:
	ucomisd	xmm0, QWORD PTR .LC106[rip]
	jp	.L1276
	je	.L7024
.L1276:
	ucomisd	xmm0, QWORD PTR .LC108[rip]
	jp	.L1278
	je	.L7025
.L1278:
	ucomisd	xmm0, QWORD PTR .LC110[rip]
	jp	.L1280
	je	.L7026
.L1280:
	ucomisd	xmm0, QWORD PTR .LC114[rip]
	jp	.L1282
	je	.L7027
.L1282:
	ucomisd	xmm0, QWORD PTR .LC116[rip]
	jp	.L1284
	je	.L7028
.L1284:
	ucomisd	xmm0, QWORD PTR .LC118[rip]
	jp	.L1286
	je	.L7029
.L1286:
	ucomisd	xmm0, QWORD PTR .LC120[rip]
	jp	.L1288
	je	.L7030
.L1288:
	ucomisd	xmm0, QWORD PTR .LC122[rip]
	jp	.L1290
	je	.L7031
.L1290:
	ucomisd	xmm0, QWORD PTR .LC124[rip]
	jp	.L1292
	je	.L7032
.L1292:
	ucomisd	xmm0, QWORD PTR .LC126[rip]
	jp	.L1016
	jne	.L1016
.L1294:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 2
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7032:
.L1293:
	movsd	xmm0, QWORD PTR [rbp+1640+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 14
	lea	r9, [rsp+1488]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC127
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1520]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1552]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC128
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7028:
.L1285:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC119
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7029:
.L1287:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC121
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7030:
.L1289:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC123
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7031:
.L1291:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC125
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7020:
.L1269:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 37
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC101
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC73
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7021:
.L1271:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 33
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC103
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC76
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7022:
.L1273:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 34
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC105
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC79
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7023:
.L1275:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 33
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC107
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC82
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7024:
.L1277:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC109
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC85
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7025:
.L1279:
	movsd	xmm0, QWORD PTR [rbp+1632+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 24
	lea	r9, [rsp+1552]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC111
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 21
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC113
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7026:
.L1281:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC115
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7027:
.L1283:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 21
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC117
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L7004:
.L1237:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 34
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC60
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC61
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7005:
.L1239:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 36
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC63
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC64
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7006:
.L1241:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC66
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC67
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7007:
.L1243:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 40
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC69
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC70
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7008:
.L1245:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 38
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC72
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC73
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7009:
.L1247:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 34
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC75
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC76
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7010:
.L1249:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC78
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC79
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7011:
.L1251:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 34
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC81
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC82
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7012:
.L1253:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 36
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC84
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC85
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7013:
.L1255:
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC87
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7014:
.L1257:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC89
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7015:
.L1259:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 34
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC91
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC58
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7016:
.L1261:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 33
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC93
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC61
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7017:
.L1263:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC95
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC64
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7018:
.L1265:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 38
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC97
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC67
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L7019:
.L1267:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 39
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC99
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC70
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
.L6853:
.L1787:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC511
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 27
	mov	edx, OFFSET FLAT:.LC512
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC513
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 3
	mov	edx, OFFSET FLAT:.LC514
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6854:
.L1789:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC515
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 26
	mov	edx, OFFSET FLAT:.LC516
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC517
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6855:
.L1791:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC519
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC520
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6856:
.L1793:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC521
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC522
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC523
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6857:
.L1795:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC524
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC525
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC524
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC524
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6858:
.L1797:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC526
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC527
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC528
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6859:
.L1799:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC529
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC530
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC531
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6860:
.L1801:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC532
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC533
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC534
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6861:
.L1803:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC535
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC536
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC535
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC535
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6862:
.L1805:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC537
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC538
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC539
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC510
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC510
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6863:
.L1807:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC540
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 25
	mov	edx, OFFSET FLAT:.LC541
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC542
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6864:
.L1809:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC543
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 25
	mov	edx, OFFSET FLAT:.LC544
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC545
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	or	rsi, -1
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6865:
.L1811:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC546
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 31
	mov	edx, OFFSET FLAT:.LC547
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC548
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6866:
.L1813:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC549
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 26
	mov	edx, OFFSET FLAT:.LC550
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC551
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6867:
.L1815:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC552
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC553
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC554
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6868:
.L1817:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC555
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 27
	mov	edx, OFFSET FLAT:.LC556
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC557
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6869:
.L1819:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC558
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 24
	mov	edx, OFFSET FLAT:.LC559
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 15
	mov	edx, OFFSET FLAT:.LC560
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 5
	mov	edx, OFFSET FLAT:.LC518
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L6870:
.L1821:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC561
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC562
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6871:
.L1823:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC563
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC564
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6872:
.L1825:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 22
	mov	edx, OFFSET FLAT:.LC565
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC566
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6873:
.L1827:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC567
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC568
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6874:
.L1829:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC569
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6875:
.L1831:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC570
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6876:
.L1833:
	xor	r8d, r8d
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC571
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6877:
.L1835:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC572
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6878:
.L1837:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC573
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC574
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6879:
.L1839:
	xor	r8d, r8d
	mov	ecx, 17
	mov	edx, OFFSET FLAT:.LC575
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6880:
.L1841:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC576
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 12
	mov	edx, OFFSET FLAT:.LC577
	or	rsi, -1
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	jmp	.L1016
.L6881:
.L1843:
	xor	r8d, r8d
	mov	ecx, 21
	mov	edx, OFFSET FLAT:.LC578
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6882:
.L1845:
	xor	r8d, r8d
	mov	ecx, 14
	mov	edx, OFFSET FLAT:.LC579
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6883:
.L1847:
	xor	r8d, r8d
	mov	ecx, 19
	mov	edx, OFFSET FLAT:.LC580
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6884:
.L1849:
	xor	r8d, r8d
	mov	ecx, 23
	mov	edx, OFFSET FLAT:.LC581
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	jmp	.L1016
.L6837:
.L1755:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC491
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6838:
.L1757:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC492
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6839:
.L1759:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC493
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6840:
.L1761:
	xor	r8d, r8d
	mov	ecx, 18
	mov	edx, OFFSET FLAT:.LC494
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6841:
.L1763:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC495
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6842:
.L1765:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC496
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6843:
.L1767:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC497
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6844:
.L1769:
	xor	r8d, r8d
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC498
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6845:
.L1771:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC499
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6846:
.L1773:
	xor	r8d, r8d
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC500
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6847:
.L1775:
	xor	r8d, r8d
	mov	ecx, 16
	mov	edx, OFFSET FLAT:.LC501
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6848:
.L1777:
	xor	r8d, r8d
	mov	ecx, 9
	mov	edx, OFFSET FLAT:.LC502
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6849:
.L1779:
	xor	r8d, r8d
	mov	ecx, 10
	mov	edx, OFFSET FLAT:.LC503
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6850:
.L1781:
	xor	r8d, r8d
	mov	ecx, 13
	mov	edx, OFFSET FLAT:.LC504
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6851:
.L1783:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC505
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L6852:
.L1785:
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 4
	mov	edx, OFFSET FLAT:.LC506
	mov	edi, OFFSET FLAT:MATERIAL$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 20
	mov	edx, OFFSET FLAT:.LC507
	mov	edi, OFFSET FLAT:SHADER$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 11
	mov	edx, OFFSET FLAT:.LC508
	mov	edi, OFFSET FLAT:NODE$
	call	fb_StrAssign
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 8
	mov	edx, OFFSET FLAT:.LC509
	mov	edi, OFFSET FLAT:NINPUT$
	call	fb_StrAssign
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC510
	or	rsi, -1
	mov	edi, OFFSET FLAT:NOUTPUT$
	call	fb_StrAssign
	jmp	.L1016
.L4652:
.L2145:
	lea	r9, [rsp+1648]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 21
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC751
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1680]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:MATERIAL$
	call	fb_StrConcat
	xor	edx, edx
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4648:
.L2138:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 41
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC765
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4644:
.L2131:
	movsd	xmm0, QWORD PTR [rbp+1680+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1672+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1664+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 20
	lea	r9, [rsp+944]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC755
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+976]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1008]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NODE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1040]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1072]
	mov	r8d, 10
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC757
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1104]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1136]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:NINPUT$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1168]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1200]
	mov	r8d, 20
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC763
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4639:
.L2119:
	mov	esi, 30
	mov	edi, OFFSET FLAT:.LC742
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 18
	mov	edi, OFFSET FLAT:.LC743
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	eax, ebx
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:.LC744
	mov	edx, 18
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHADER$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rdi, r9
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, ebx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 38
	mov	edi, OFFSET FLAT:.LC745
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 44
	mov	edi, OFFSET FLAT:.LC746
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 54
	mov	edi, OFFSET FLAT:.LC747
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 54
	mov	edi, OFFSET FLAT:.LC748
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 58
	mov	edi, OFFSET FLAT:.LC749
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4636:
.L2114:
	movsd	xmm0, QWORD PTR [rbp+1624+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1584]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	edx, 45
	mov	rcx, rsi
	mov	rdi, r9
	mov	esi, OFFSET FLAT:.LC738
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1616]
	mov	r8d, 5
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC739
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1648]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC147
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC129
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4633:
.L2109:
	mov	esi, 20
	mov	edi, OFFSET FLAT:.LC721
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	esi, 20
	mov	edi, OFFSET FLAT:.LC722
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4628:
.L2091:
	xor	r15d, r15d
	lea	r14, [rsp+1584]
	mov	edx, 6
	or	r8, -1
	mov	rcx, rdx
	mov	eax, r15d
	mov	rdi, r14
	mov	edx, 31
	rep stosd
	mov	esi, OFFSET FLAT:.LC715
	mov	ecx, OFFSET FLAT:MATERIAL$
	mov	rdi, r14
	lea	r13, [rsp+1616]
	lea	r12, [rsp+1648]
	call	fb_StrConcat
	mov	edx, 6
	mov	rdi, r13
	mov	r8d, 3
	mov	rsi, rax
	mov	rcx, rdx
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	ecx, OFFSET FLAT:.LC434
	mov	rdi, r13
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	mov	edx, 6
	mov	rdi, r12
	mov	eax, r15d
	mov	rcx, rdx
	or	r8, -1
	mov	edx, 39
	mov	esi, OFFSET FLAT:.LC716
	rep stosd
	mov	ecx, OFFSET FLAT:TEXTYPE$
	jmp	.L5612
.L4458:
.L1752:
	xor	r8d, r8d
	mov	ecx, 7
	mov	edx, OFFSET FLAT:.LC490
	or	rsi, -1
	mov	edi, OFFSET FLAT:TEXTYPE$
	call	fb_StrAssign
	jmp	.L1016
.L4287:
.L1411:
	movsd	xmm0, QWORD PTR [rbp+1664+rax]
	xor	ebx, ebx
	call	fb_DoubleToStr
	mov	r12, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1640+rax*8]
	call	fb_DoubleToStr
	mov	r13, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1656+rax*8]
	call	fb_DoubleToStr
	mov	r14, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1632+rax*8]
	call	fb_DoubleToStr
	mov	r15, rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1648+rax*8]
	call	fb_DoubleToStr
	mov	QWORD PTR [rsp+8], rax
	mov	eax, DWORD PTR SYS_OFFSET$[rip]
	movsd	xmm0, QWORD PTR [rbp+1624+rax*8]
	call	fb_DoubleToStr
	mov	edx, 6
	mov	r8d, 36
	lea	r9, [rsp+1200]
	mov	rbp, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC189
	mov	esi, OFFSET FLAT:TB$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1232]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, rbp
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1264]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1296]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD0$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1328]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rcx, QWORD PTR [rsp+8]
	mov	rdx, r8
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1360]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1392]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r15
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1424]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1456]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD1$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1488]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r14
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1520]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC112
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1552]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r13
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1584]
	mov	r8d, 2
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC190
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1616]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:PAD2$
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rcx, r12
	mov	rdi, r9
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC191
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4271:
.L1380:
	mov	esi, 22
	mov	edi, OFFSET FLAT:.LC174
	call	fb_StrAllocTempDescZEx
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4268:
.L1371:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 54
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC172
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 3
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC173
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4265:
.L1362:
	lea	r9, [rsp+1616]
	xor	ebx, ebx
	mov	edx, 6
	mov	r8d, 19
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC167
	call	fb_StrConcat
	mov	edx, 6
	or	r8, -1
	lea	r9, [rsp+1648]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	mov	rdx, r8
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:SHAPE$
	call	fb_StrConcat
	mov	edx, 6
	lea	r9, [rsp+1680]
	mov	r8d, 17
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	rcx, rdx
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC168
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4244:
.L1320:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 26
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC140
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4239:
.L1310:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 38
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC135
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4233:
.L1298:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 43
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC130
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	jmp	.L1016
.L4201:
.L1234:
	lea	r9, [rsp+1680]
	mov	edx, 6
	xor	eax, eax
	mov	r8d, 35
	mov	rdi, r9
	mov	rcx, rdx
	mov	esi, OFFSET FLAT:TB$
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	mov	ecx, OFFSET FLAT:.LC57
	call	fb_StrConcat
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	mov	ecx, 6
	mov	edx, OFFSET FLAT:.LC58
	or	rsi, -1
	mov	edi, OFFSET FLAT:SHAPE$
	call	fb_StrAssign
	jmp	.L1016
	.size	_ZN8MEMORY_T6POKE64Eyy, .-_ZN8MEMORY_T6POKE64Eyy
	.p2align 4,,15
	.globl	_ZN8MEMORY_TC1Ev
	.type	_ZN8MEMORY_TC1Ev, @function
_ZN8MEMORY_TC1Ev:
.L7034:
	push	rbp
	mov	edx, 524280
	mov	rbp, rdi
	xor	esi, esi
	push	rbx
	mov	ebx, 20
	sub	rsp, 24
	call	memset
	lea	rdi, [rbp+524280]
	mov	edx, 65536
	xor	esi, esi
	call	memset
	lea	rdi, [rbp+589816]
	mov	edx, 65536
	xor	esi, esi
	call	memset
	lea	rdi, [rbp+655352]
	mov	edx, 16384
	xor	esi, esi
	call	memset
	lea	rdi, [rbp+671744]
	mov	eax, ebp
	mov	QWORD PTR [rbp+671736], 0
	and	rdi, -8
	mov	edx, 255
	mov	QWORD PTR [rbp+679728], 0
	sub	eax, edi
	lea	ecx, [rax+679736]
	xor	eax, eax
	shr	ecx, 3
	rep stosq
	mov	rdi, rbp
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	add	rsi, 2
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 255
	mov	rdi, rbp
	add	rsi, 3
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 255
	mov	rdi, rbp
	add	rsi, 4
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	edx, 255
	mov	rdi, rbp
	add	rsi, 5
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edx, 31
	mov	esi, 53272
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	edi, OFFSET FLAT:label$31
	mov	QWORD PTR [rsp], 0
	mov	QWORD PTR [rsp+8], 0
	call	fb_DataRestore
	.p2align 4,,10
	.p2align 3
.L7035:
	mov	rdi, rsp
	call	fb_DataReadLongint
	lea	rdi, [rsp+8]
	call	fb_DataReadLongint
	mov	rdx, QWORD PTR [rsp+8]
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	add	rsi, QWORD PTR [rsp]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	rbx, 1
	jne	.L7035
.L7036:
	mov	edi, -1
	call	fb_Sleep
	xor	edi, edi
	call	fb_End
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 255
	add	rsi, 2
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 255
	add	rsi, 3
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 255
	add	rsi, 4
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 255
	add	rsi, 5
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	esi, DWORD PTR SYS_OFFSET$[rip]
	mov	rdi, rbp
	mov	edx, 128
	add	rsi, 9
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rdi, rbp
	mov	edx, 31
	mov	esi, 53272
	call	_ZN8MEMORY_T6POKE64Eyy
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.size	_ZN8MEMORY_TC1Ev, .-_ZN8MEMORY_TC1Ev
	.p2align 4,,15
	.globl	_ZN8MEMORY_T9WRITEBYTEEyy
	.type	_ZN8MEMORY_T9WRITEBYTEEyy, @function
_ZN8MEMORY_T9WRITEBYTEEyy:
.L7040:
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	_ZN8MEMORY_T9WRITEBYTEEyy, .-_ZN8MEMORY_T9WRITEBYTEEyy
	.p2align 4,,15
	.globl	INS_INC
	.type	INS_INC, @function
INS_INC:
.L7042:
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 16
	movzx	r12d, WORD PTR [rdi+64]
	mov	r14, QWORD PTR [rdi+16]
	mov	QWORD PTR [rsp+8], 0
	cmp	r12, 57343
	jbe	.L7043
.L7044:
	movsd	xmm0, QWORD PTR [r14+65528+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7059
.L7064:
	cvttsd2si	rax, xmm0
.L7047:
.L7061:
.L7062:
	mov	BYTE PTR [rsp+8], al
	movzx	eax, WORD PTR [rsp+8]
	mov	rsi, r12
	mov	rdi, r14
	lea	ebx, [rax+1]
	movzx	edx, bl
	mov	r13, rdx
	call	_ZN8MEMORY_T6POKE64Eyy
	xor	eax, eax
	test	r13b, r13b
	sete	al
	and	ebx, 128
	lea	rdx, [rax+rax]
	mov	rax, QWORD PTR [rbp+0]
	and	al, 125
	or	rax, rdx
	or	rax, rbx
	mov	QWORD PTR [rbp+0], rax
	add	rsp, 16
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7043:
	mov	rax, r12
	cmp	r12, 40959
	jbe	.L7048
	cmp	r12, 49151
	ja	.L7053
.L7050:
	movsd	xmm0, QWORD PTR [r14+262136+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7064
.L7059:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7062
.L7049:
	.p2align 4,,10
	.p2align 3
.L7053:
	cmp	r12, 55295
	jbe	.L7048
	cmp	r12, 56319
	ja	.L7054
.L7055:
	movsd	xmm0, QWORD PTR [r14+212984+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7059
	jmp	.L7064
	.p2align 4,,10
	.p2align 3
.L7048:
	lea	edx, [rax+12288]
	cmp	dx, 1023
	jbe	.L7065
.L7054:
	movsd	xmm0, QWORD PTR [r14+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7059
	jmp	.L7064
	.p2align 4,,10
	.p2align 3
.L7065:
.L7058:
	and	eax, 63
	cmp	ax, 18
	setne	al
	neg	eax
	jmp	.L7062
	.size	INS_INC, .-INS_INC
	.p2align 4,,15
	.globl	INS_ASL
	.type	INS_ASL, @function
INS_ASL:
.L7067:
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	movzx	r13d, WORD PTR [rdi+64]
	mov	r14, QWORD PTR [rdi+16]
	cmp	r13, 57343
	jbe	.L7068
.L7069:
	movsd	xmm0, QWORD PTR [r14+65528+r13*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7085
.L7092:
	cvttsd2si	rax, xmm0
.L7072:
.L7087:
.L7088:
	movsx	rcx, al
	add	eax, eax
	xor	r12d, r12d
	mov	rsi, rcx
	mov	rbx, rax
	movzx	edx, al
	shr	rsi, 63
	test	al, al
	sete	r12b
	and	ebx, 128
	add	r12, r12
.L7084:
	mov	rcx, QWORD PTR [rbp+0]
	mov	rdi, r14
	and	rcx, -2
	or	rcx, rsi
	mov	rsi, r13
	mov	QWORD PTR [rbp+0], rcx
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR [rbp+0]
	and	al, 125
	or	rax, r12
	or	rax, rbx
	pop	rbx
	mov	QWORD PTR [rbp+0], rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7068:
	mov	rax, r13
	cmp	r13, 40959
	jbe	.L7073
	cmp	r13, 49151
	ja	.L7078
.L7075:
	movsd	xmm0, QWORD PTR [r14+262136+r13*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7092
.L7085:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7088
.L7074:
	.p2align 4,,10
	.p2align 3
.L7078:
	cmp	r13, 55295
	jbe	.L7073
	cmp	r13, 56319
	ja	.L7079
.L7080:
	movsd	xmm0, QWORD PTR [r14+212984+r13*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7085
	jmp	.L7092
	.p2align 4,,10
	.p2align 3
.L7073:
	lea	edx, [rax+12288]
	cmp	dx, 1023
	jbe	.L7093
.L7079:
	movsd	xmm0, QWORD PTR [r14+r13*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7085
	jmp	.L7092
	.p2align 4,,10
	.p2align 3
.L7093:
.L7083:
	and	eax, 63
	xor	edx, edx
	mov	ebx, 128
	mov	ecx, 254
	cmp	ax, 18
	sete	r12b
	cmove	rbx, rdx
	movzx	r12d, r12b
	add	r12, r12
	cmp	ax, 18
	setne	sil
	cmovne	rdx, rcx
	movzx	esi, sil
	jmp	.L7084
	.size	INS_ASL, .-INS_ASL
	.p2align 4,,15
	.globl	INS_DEC
	.type	INS_DEC, @function
INS_DEC:
.L7095:
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	movzx	ebx, WORD PTR [rdi+64]
	mov	r12, QWORD PTR [rdi+16]
	cmp	rbx, 57343
	jbe	.L7096
.L7097:
	movsd	xmm0, QWORD PTR [r12+65528+rbx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7113
.L7123:
.L7116:
	cvttsd2si	rdx, xmm0
	mov	rax, QWORD PTR [rbp+0]
	and	rax, -3
	sub	dl, 1
	jne	.L7124
.L7100:
.L7115:
.L7117:
	or	rax, 2
	xor	edx, edx
	xor	ecx, ecx
.L7118:
.L7119:
	and	al, 127
	mov	rsi, rbx
	mov	rdi, r12
	pop	rbx
	or	rax, rcx
	mov	QWORD PTR [rbp+0], rax
	pop	rbp
	pop	r12
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.p2align 4,,10
	.p2align 3
.L7096:
	mov	rax, rbx
	cmp	rbx, 40959
	jbe	.L7101
	cmp	rbx, 49151
	ja	.L7106
.L7103:
	movsd	xmm0, QWORD PTR [r12+262136+rbx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7123
.L7113:
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR [rbp+0]
	and	rax, -3
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	sub	dl, 1
	je	.L7117
.L7124:
	mov	rcx, rdx
	movzx	edx, dl
	and	ecx, 128
	jmp	.L7119
.L7102:
	.p2align 4,,10
	.p2align 3
.L7106:
	cmp	rbx, 55295
	jbe	.L7101
	cmp	rbx, 56319
	ja	.L7107
.L7108:
	movsd	xmm0, QWORD PTR [r12+212984+rbx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7113
	jmp	.L7123
	.p2align 4,,10
	.p2align 3
.L7101:
	lea	edx, [rax+12288]
	cmp	dx, 1023
	jbe	.L7125
.L7107:
	movsd	xmm0, QWORD PTR [r12+rbx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7113
	jmp	.L7123
	.p2align 4,,10
	.p2align 3
.L7125:
.L7111:
	and	eax, 63
	xor	edx, edx
	mov	ecx, 128
	cmp	ax, 18
	mov	rax, QWORD PTR [rbp+0]
	sete	dl
	add	rdx, 254
	and	rax, -3
	jmp	.L7119
	.size	INS_DEC, .-INS_DEC
	.p2align 4,,15
	.globl	INS_LSR
	.type	INS_LSR, @function
INS_LSR:
.L7127:
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	movzx	r12d, WORD PTR [rdi+64]
	mov	rbx, rdi
	mov	r13, QWORD PTR [rdi+16]
	cmp	r12, 57343
	jbe	.L7128
.L7129:
	movsd	xmm0, QWORD PTR [r13+65528+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7145
.L7152:
	cvttsd2si	rax, xmm0
.L7132:
.L7147:
.L7148:
	mov	rsi, rax
	and	esi, 1
	shr	al
	sete	bpl
	movzx	edx, al
	movzx	ebp, bpl
	lea	r14, [rbp+rbp]
	sal	rbp, 7
.L7144:
	mov	rcx, QWORD PTR [rbx]
	mov	rdi, r13
	and	rcx, -2
	or	rcx, rsi
	mov	rsi, r12
	mov	QWORD PTR [rbx], rcx
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR [rbx]
	and	al, 125
	or	rax, r14
	or	rax, rbp
	mov	QWORD PTR [rbx], rax
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7128:
	mov	rax, r12
	cmp	r12, 40959
	jbe	.L7133
	cmp	r12, 49151
	ja	.L7138
.L7135:
	movsd	xmm0, QWORD PTR [r13+262136+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7152
.L7145:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7148
.L7134:
	.p2align 4,,10
	.p2align 3
.L7138:
	cmp	r12, 55295
	jbe	.L7133
	cmp	r12, 56319
	ja	.L7139
.L7140:
	movsd	xmm0, QWORD PTR [r13+212984+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7145
	jmp	.L7152
	.p2align 4,,10
	.p2align 3
.L7133:
	lea	edx, [rax+12288]
	cmp	dx, 1023
	jbe	.L7153
.L7139:
	movsd	xmm0, QWORD PTR [r13+0+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7145
	jmp	.L7152
	.p2align 4,,10
	.p2align 3
.L7153:
.L7143:
	and	eax, 63
	xor	edx, edx
	cmp	ax, 18
	mov	ecx, eax
	mov	eax, 128
	sete	r14b
	cmovne	rax, rdx
	movzx	r14d, r14b
	add	r14, r14
	cmp	cx, 18
	mov	rbp, rax
	mov	eax, 127
	setne	sil
	cmovne	rdx, rax
	movzx	esi, sil
	jmp	.L7144
	.size	INS_LSR, .-INS_LSR
	.p2align 4,,15
	.globl	INS_ROL
	.type	INS_ROL, @function
INS_ROL:
.L7155:
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 16
	movzx	r13d, WORD PTR [rdi+64]
	mov	r14, QWORD PTR [rdi+16]
	mov	QWORD PTR [rsp+8], 0
	mov	rsi, r13
	mov	rdi, r14
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rcx, QWORD PTR [rbx]
	lea	ebp, [rax+rax]
	mov	rdx, rcx
	and	rdx, -2
	and	ecx, 1
	jne	.L7167
	xor	r12d, r12d
	test	bpl, bpl
	mov	rcx, rdx
	sete	r12b
	or	rcx, 1
	add	r12, r12
	test	al, al
	cmovs	rdx, rcx
	mov	QWORD PTR [rbx], rdx
.L7159:
	movzx	edx, bpl
	mov	rsi, r13
	mov	rdi, r14
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR [rbx]
	xor	edx, edx
	and	al, 125
	or	rax, r12
	test	bpl, bpl
	setle	dl
	sal	rdx, 7
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	add	rsp, 16
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7167:
	mov	rcx, rdx
	or	rcx, 1
	test	al, al
	cmovs	rdx, rcx
	or	ebp, 1
	xor	r12d, r12d
	mov	QWORD PTR [rbx], rdx
	jmp	.L7159
	.size	INS_ROL, .-INS_ROL
	.p2align 4,,15
	.globl	INS_ROR
	.type	INS_ROR, @function
INS_ROR:
.L7169:
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 16
	movzx	r13d, WORD PTR [rdi+64]
	mov	r12, QWORD PTR [rdi+16]
	mov	QWORD PTR [rsp+8], 0
	mov	r14, QWORD PTR [rdi]
	mov	rsi, r13
	mov	rdi, r12
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rdx, r14
	mov	rcx, rax
	and	rdx, -2
	mov	ebx, eax
	and	ecx, 1
	shr	bl
	or	rdx, rcx
	and	r14d, 1
	mov	QWORD PTR [rbp+0], rdx
	je	.L7173
	or	ebx, -128
	xor	r14d, r14d
.L7171:
	movzx	edx, bl
	mov	rsi, r13
	mov	rdi, r12
	and	ebx, 128
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, QWORD PTR [rbp+0]
	and	al, 125
	or	rax, r14
	or	rbx, rax
	mov	QWORD PTR [rbp+0], rbx
	add	rsp, 16
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7173:
	xor	eax, eax
	test	bl, bl
	sete	al
	lea	r14, [rax+rax]
	jmp	.L7171
	.size	INS_ROR, .-INS_ROR
	.p2align 4,,15
	.globl	INS_STA
	.type	INS_STA, @function
INS_STA:
.L7175:
	movzx	edx, BYTE PTR [rdi+8]
	movzx	esi, WORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	INS_STA, .-INS_STA
	.p2align 4,,15
	.globl	INS_STX
	.type	INS_STX, @function
INS_STX:
.L7177:
	movzx	edx, BYTE PTR [rdi+9]
	movzx	esi, WORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	INS_STX, .-INS_STX
	.p2align 4,,15
	.globl	INS_STY
	.type	INS_STY, @function
INS_STY:
.L7179:
	movzx	edx, BYTE PTR [rdi+10]
	movzx	esi, WORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	INS_STY, .-INS_STY
	.p2align 4,,15
	.globl	INS_W32
	.type	INS_W32, @function
INS_W32:
.L7181:
	movzx	edx, BYTE PTR [rdi+8]
	mov	esi, DWORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	INS_W32, .-INS_W32
	.p2align 4,,15
	.globl	INS_W64
	.type	INS_W64, @function
INS_W64:
.L7183:
	movzx	edx, BYTE PTR [rdi+8]
	mov	rsi, QWORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rdi+16]
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	INS_W64, .-INS_W64
	.p2align 4,,15
	.globl	INS_BRK
	.type	INS_BRK, @function
INS_BRK:
.L7185:
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 24
	add	WORD PTR [rdi+12], 1
	movzx	esi, WORD PTR [rdi+14]
	movzx	edx, BYTE PTR [rdi+13]
	mov	rdi, QWORD PTR [rdi+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	movzx	edx, BYTE PTR [rbx+12]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, QWORD PTR [rbx+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	movzx	edx, BYTE PTR [rbx]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, QWORD PTR [rbx+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	mov	rbp, QWORD PTR [rbx+16]
	or	QWORD PTR [rbx], 20
	movsd	xmm0, QWORD PTR [rbp+589800]
	call	nearbyint
	movsd	QWORD PTR [rsp+8], xmm0
	movsd	xmm0, QWORD PTR [rbp+589808]
	call	nearbyint
	movsd	xmm2, QWORD PTR .LC0[rip]
	movsd	xmm1, QWORD PTR [rsp+8]
	comisd	xmm0, xmm2
	jnb	.L7186
	cvttsd2si	rax, xmm0
	sal	eax, 8
	comisd	xmm1, xmm2
	jnb	.L7188
.L7191:
	cvttsd2si	rdx, xmm1
	or	eax, edx
	mov	WORD PTR [rbx+12], ax
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L7186:
	subsd	xmm0, xmm2
	cvttsd2si	rax, xmm0
	btc	rax, 63
	sal	eax, 8
	comisd	xmm1, xmm2
	jb	.L7191
.L7188:
	subsd	xmm1, xmm2
	cvttsd2si	rdx, xmm1
	btc	rdx, 63
	or	eax, edx
	mov	WORD PTR [rbx+12], ax
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.size	INS_BRK, .-INS_BRK
	.p2align 4,,15
	.globl	INS_JSR
	.type	INS_JSR, @function
INS_JSR:
.L7193:
	push	rbx
	mov	rbx, rdi
	movzx	esi, WORD PTR [rdi+14]
	sub	WORD PTR [rdi+12], 1
	movzx	edx, BYTE PTR [rdi+13]
	mov	rdi, QWORD PTR [rdi+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	movzx	edx, BYTE PTR [rbx+12]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, QWORD PTR [rbx+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	movzx	eax, WORD PTR [rbx+64]
	sub	BYTE PTR [rbx+14], 1
	mov	WORD PTR [rbx+12], ax
	pop	rbx
	ret
	.size	INS_JSR, .-INS_JSR
	.p2align 4,,15
	.globl	INS_PHA
	.type	INS_PHA, @function
INS_PHA:
.L7196:
	push	rbx
	mov	rbx, rdi
	movzx	edx, BYTE PTR [rdi+8]
	movzx	esi, WORD PTR [rdi+14]
	mov	rdi, QWORD PTR [rdi+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	pop	rbx
	ret
	.size	INS_PHA, .-INS_PHA
	.p2align 4,,15
	.globl	INS_PHP
	.type	INS_PHP, @function
INS_PHP:
.L7199:
	push	rbx
	mov	rbx, rdi
	movzx	edx, BYTE PTR [rdi]
	movzx	esi, WORD PTR [rdi+14]
	mov	rdi, QWORD PTR [rdi+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	pop	rbx
	ret
	.size	INS_PHP, .-INS_PHP
	.p2align 4,,15
	.globl	_ZN8MEMORY_T10WRITEUBYTEEyy
	.type	_ZN8MEMORY_T10WRITEUBYTEEyy, @function
_ZN8MEMORY_T10WRITEUBYTEEyy:
	jmp	_ZN8MEMORY_T6POKE64Eyy
	.size	_ZN8MEMORY_T10WRITEUBYTEEyy, .-_ZN8MEMORY_T10WRITEUBYTEEyy
	.p2align 4,,15
	.globl	_ZN7CPU6510C1EP8MEMORY_T
	.type	_ZN7CPU6510C1EP8MEMORY_T, @function
_ZN7CPU6510C1EP8MEMORY_T:
.L7203:
	push	r13
	xor	ecx, ecx
	xor	edx, edx
	pxor	xmm0, xmm0
	push	r12
	mov	r13, rsi
	xor	esi, esi
	push	rbp
	mov	rbp, rdi
	push	rbx
	lea	rbx, [rdi+80]
	lea	r12, [rbp+14416]
	sub	rsp, 8
	mov	WORD PTR [rdi+12], dx
	mov	edx, 14336
	mov	WORD PTR [rdi+14], cx
	mov	QWORD PTR [rdi], 0
	mov	BYTE PTR [rdi+8], 0
	mov	BYTE PTR [rdi+9], 0
	mov	BYTE PTR [rdi+10], 0
	mov	QWORD PTR [rdi+72], 0
	movups	XMMWORD PTR [rdi+24], xmm0
	movups	XMMWORD PTR [rdi+40], xmm0
	movups	XMMWORD PTR [rdi+56], xmm0
	mov	rdi, rbx
	call	memset
	lea	rdi, [rbp+14424]
	mov	rcx, r12
	xor	eax, eax
	mov	QWORD PTR [rbp+14416], 0
	and	rdi, -8
	mov	QWORD PTR [rbp+14720], 0
	sub	rcx, rdi
	add	ecx, 312
	shr	ecx, 3
	rep stosq
	mov	QWORD PTR [rbp+16], r13
	mov	edi, OFFSET FLAT:label$3145
	call	fb_DataRestore
	.p2align 4,,10
	.p2align 3
.L7204:
	mov	rdi, rbx
	call	fb_DataReadULongint
	xor	edx, edx
	mov	esi, 4
	lea	rdi, [rbx+8]
	call	fb_DataReadStr
	lea	rdi, [rbx+16]
	call	fb_DataReadLongint
	lea	rdi, [rbx+24]
	call	fb_DataReadLongint
	lea	rdi, [rbx+32]
	call	fb_DataReadLongint
	lea	rdi, [rbx+48]
	add	rbx, 56
	call	fb_DataReadLongint
	cmp	rbx, r12
	jne	.L7204
.L7205:
	mov	edi, OFFSET FLAT:label$3151
	lea	r13, [rbp+14728]
	mov	r12, -1
	call	fb_DataRestore
	.p2align 4,,10
	.p2align 3
.L7206:
	mov	rdi, rbx
	xor	edx, edx
	mov	rsi, r12
	add	rbx, 24
	call	fb_DataReadStr
	cmp	r13, rbx
	jne	.L7206
.L7207:
	mov	eax, -798
	mov	BYTE PTR [rbp+15], 1
	mov	WORD PTR [rbp+12], ax
	add	rsp, 8
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.size	_ZN7CPU6510C1EP8MEMORY_T, .-_ZN7CPU6510C1EP8MEMORY_T
	.p2align 4,,15
	.globl	_ZN5C64_TC1Ev
	.type	_ZN5C64_TC1Ev, @function
_ZN5C64_TC1Ev:
.L7212:
	push	r12
	xor	r9d, r9d
	xor	r8d, r8d
	mov	ecx, 1
	push	rbp
	mov	edx, 32
	mov	esi, 480
	mov	r12, rdi
	push	rbx
	mov	ebp, -1
	xor	ebx, ebx
	sub	rsp, 16
	mov	QWORD PTR [rdi], 0
	mov	QWORD PTR [rdi+8], 0
	mov	edi, 640
	mov	QWORD PTR [rsp+8], 0
	call	fb_GfxScreenRes
	xor	r8d, r8d
	mov	ecx, 32
	xor	edx, edx
	mov	esi, 480
	mov	edi, 640
	call	fb_GfxImageCreate
	mov	QWORD PTR IMAGE$[rip], rax
	.p2align 4,,10
	.p2align 3
.L7213:
	lea	rdi, [rsp+8]
	call	fb_DataReadLongint
	mov	esi, DWORD PTR [rsp+8]
	mov	edi, ebx
	mov	ecx, ebp
	mov	edx, ebp
	add	rbx, 1
	call	fb_GfxPalette
	cmp	rbx, 16
	jne	.L7213
.L7214:
	mov	esi, 14
	mov	edi, OFFSET FLAT:.LC1663
	call	fb_StrAllocTempDescZEx
	xor	edx, edx
	xor	esi, esi
	mov	rdi, rax
	call	fb_GfxBload
	mov	edi, 679736
	call	malloc
	mov	rbx, rax
	test	rax, rax
	je	.L7215
	mov	rdi, rax
	call	_ZN8MEMORY_TC1Ev
.L7215:
	mov	QWORD PTR [r12], rbx
	mov	edi, 14728
	call	malloc
	mov	rbp, rax
	test	rax, rax
	je	.L7216
	mov	rsi, rbx
	mov	rdi, rax
	call	_ZN7CPU6510C1EP8MEMORY_T
.L7216:
	mov	QWORD PTR [r12+8], rbp
	add	rsp, 16
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.size	_ZN5C64_TC1Ev, .-_ZN5C64_TC1Ev
	.p2align 4,,15
	.globl	_ZN7CPU6510D1Ev
	.type	_ZN7CPU6510D1Ev, @function
_ZN7CPU6510D1Ev:
.L7226:
.L7227:
	sub	rsp, 72
	add	rdi, 14416
	mov	QWORD PTR [rsp], rdi
	mov	QWORD PTR [rsp+8], rdi
	mov	rdi, rsp
	mov	QWORD PTR [rsp+16], 312
	mov	QWORD PTR [rsp+24], 24
	mov	QWORD PTR [rsp+32], 1
	mov	QWORD PTR [rsp+40], 13
	mov	QWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+56], 12
	call	fb_ArrayDestructStr
	add	rsp, 72
	ret
	.size	_ZN7CPU6510D1Ev, .-_ZN7CPU6510D1Ev
	.section	.rodata.str1.1
.LC1685:
	.string	"PC:"
.LC1686:
	.string	" A:"
.LC1687:
	.string	" X:"
.LC1688:
	.string	" Y:"
.LC1689:
	.string	" S:"
.LC1690:
	.string	" N:"
.LC1691:
	.string	" V:"
.LC1692:
	.string	" -"
.LC1693:
	.string	" B:"
.LC1694:
	.string	" D:"
.LC1695:
	.string	" I:"
.LC1696:
	.string	" Z:"
.LC1697:
	.string	" C:"
	.text
	.p2align 4,,15
	.globl	_ZN7CPU6510cv8FBSTRINGEv
	.type	_ZN7CPU6510cv8FBSTRINGEv, @function
_ZN7CPU6510cv8FBSTRINGEv:
	push	r15
	pxor	xmm0, xmm0
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 856
	mov	rdi, QWORD PTR [rdi]
	movaps	XMMWORD PTR [rsp+816], xmm0
	mov	QWORD PTR [rsp+832], 0
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp], rax
	shr	rdi
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+8], rax
	shr	rdi, 2
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+16], rax
	shr	rdi, 3
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+24], rax
	shr	rdi, 4
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+32], rax
	shr	rdi, 6
	and	edi, 1
	call	fb_ULongintToStr
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+40], rax
	shr	rdi, 7
	and	edi, 1
	call	fb_ULongintToStr
	movzx	edi, BYTE PTR [rbx+14]
	mov	esi, 2
	mov	rbp, rax
	call	fb_HEXEx_b
	movzx	edi, BYTE PTR [rbx+10]
	mov	esi, 2
	mov	r12, rax
	call	fb_HEXEx_b
	movzx	edi, BYTE PTR [rbx+9]
	mov	esi, 2
	mov	r13, rax
	call	fb_HEXEx_b
	movzx	edi, BYTE PTR [rbx+8]
	mov	esi, 2
	mov	r14, rax
	call	fb_HEXEx_b
	movzx	edi, WORD PTR [rbx+12]
	mov	esi, 4
	mov	r15, rax
	call	fb_HEXEx_s
	pxor	xmm0, xmm0
	lea	rdi, [rsp+48]
	mov	r8, -1
	mov	rcx, rax
	mov	edx, 4
	mov	esi, OFFSET FLAT:.LC1685
	movaps	XMMWORD PTR [rsp+48], xmm0
	mov	QWORD PTR [rsp+64], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	lea	rdi, [rsp+80]
	mov	r8d, 4
	mov	ecx, OFFSET FLAT:.LC1686
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+80], xmm0
	mov	QWORD PTR [rsp+96], 0
	call	fb_StrConcat
	mov	r8, -1
	pxor	xmm0, xmm0
	mov	rcx, r15
	mov	rdx, r8
	lea	rdi, [rsp+112]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+112], xmm0
	mov	QWORD PTR [rsp+128], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+144]
	mov	ecx, OFFSET FLAT:.LC1687
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+144], xmm0
	mov	QWORD PTR [rsp+160], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, r14
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+176]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+176], xmm0
	mov	QWORD PTR [rsp+192], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+208]
	mov	ecx, OFFSET FLAT:.LC1688
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+208], xmm0
	mov	QWORD PTR [rsp+224], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, r13
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+240]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+240], xmm0
	mov	QWORD PTR [rsp+256], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+272]
	mov	ecx, OFFSET FLAT:.LC1689
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+272], xmm0
	mov	QWORD PTR [rsp+288], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, r12
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+304]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+304], xmm0
	mov	QWORD PTR [rsp+320], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+336]
	mov	ecx, OFFSET FLAT:.LC1690
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+336], xmm0
	mov	QWORD PTR [rsp+352], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, rbp
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+368]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+368], xmm0
	mov	QWORD PTR [rsp+384], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+400]
	mov	ecx, OFFSET FLAT:.LC1691
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+400], xmm0
	mov	QWORD PTR [rsp+416], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp+40]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+432]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+432], xmm0
	mov	QWORD PTR [rsp+448], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 3
	lea	rdi, [rsp+464]
	mov	ecx, OFFSET FLAT:.LC1692
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+464], xmm0
	mov	QWORD PTR [rsp+480], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+496]
	mov	ecx, OFFSET FLAT:.LC1693
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+496], xmm0
	mov	QWORD PTR [rsp+512], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp+32]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+528]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+528], xmm0
	mov	QWORD PTR [rsp+544], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+560]
	mov	ecx, OFFSET FLAT:.LC1694
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+560], xmm0
	mov	QWORD PTR [rsp+576], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp+24]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+592]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+592], xmm0
	mov	QWORD PTR [rsp+608], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+624]
	mov	ecx, OFFSET FLAT:.LC1695
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+624], xmm0
	mov	QWORD PTR [rsp+640], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp+16]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+656]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+656], xmm0
	mov	QWORD PTR [rsp+672], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+688]
	mov	ecx, OFFSET FLAT:.LC1696
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+688], xmm0
	mov	QWORD PTR [rsp+704], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp+8]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+720]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+720], xmm0
	mov	QWORD PTR [rsp+736], 0
	call	fb_StrConcat
	pxor	xmm0, xmm0
	mov	r8d, 4
	lea	rdi, [rsp+752]
	mov	ecx, OFFSET FLAT:.LC1697
	mov	rdx, -1
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+752], xmm0
	mov	QWORD PTR [rsp+768], 0
	call	fb_StrConcat
	mov	r8, -1
	mov	rcx, QWORD PTR [rsp]
	pxor	xmm0, xmm0
	mov	rdx, r8
	lea	rdi, [rsp+784]
	mov	rsi, rax
	movaps	XMMWORD PTR [rsp+784], xmm0
	mov	QWORD PTR [rsp+800], 0
	call	fb_StrConcat
	mov	rcx, -1
	lea	rdi, [rsp+816]
	xor	r8d, r8d
	mov	rdx, rax
	mov	rsi, rcx
	call	fb_StrInit
	lea	rdi, [rsp+816]
	call	fb_StrAllocTempResult
	add	rsp, 856
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.size	_ZN7CPU6510cv8FBSTRINGEv, .-_ZN7CPU6510cv8FBSTRINGEv
	.p2align 4,,15
	.globl	_ZN7CPU65104TICKEy
	.type	_ZN7CPU65104TICKEy, @function
_ZN7CPU65104TICKEy:
	push	r14
	pxor	xmm0, xmm0
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 48
	mov	r12, QWORD PTR [rdi+16]
	movzx	esi, WORD PTR [rdi+12]
	movaps	XMMWORD PTR [rsp+16], xmm0
	mov	QWORD PTR [rsp+32], 0
	mov	rdi, r12
	mov	rbp, rsi
	mov	QWORD PTR [rsp+8], 0
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	esi, [rbp+1]
	add	QWORD PTR TICKS$1.14346[rip], 1
	movzx	eax, al
	lea	rcx, [0+rax*8]
	sub	rcx, rax
	lea	rax, [rbx+80+rcx*8]
	movdqu	xmm1, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rbx+24], xmm1
	movdqu	xmm2, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rbx+40], xmm2
	movdqu	xmm3, XMMWORD PTR [rax+32]
	movups	XMMWORD PTR [rbx+56], xmm3
	mov	rax, QWORD PTR [rax+48]
	mov	WORD PTR [rbx+12], si
	mov	QWORD PTR [rbx+72], rax
	xor	eax, eax
	mov	WORD PTR [rbx+64], ax
	mov	rax, QWORD PTR [rbx+40]
	cmp	rax, 12
	ja	.L7232
	jmp	[QWORD PTR tmp$4698.14377[0+rax*8]]
	.p2align 4,,10
	.p2align 3
.L7246:
	movzx	r13d, si
	mov	rdi, r12
	mov	rsi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r13+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	sal	eax, 8
	or	eax, r14d
	movzx	r13d, ax
.L7250:
	mov	rsi, r13
	mov	rdi, r12
	add	ebp, 3
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r13+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
.L7252:
	sal	eax, 8
	mov	WORD PTR [rbx+12], bp
	or	eax, r14d
	mov	WORD PTR [rbx+64], ax
.L7251:
	mov	rdi, rbx
	call	[QWORD PTR [rbx+72]]
.L7232:
	lea	rdi, [rsp+16]
	call	fb_StrDelete
	add	rsp, 48
	xor	eax, eax
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7234:
	jmp	.L7232
	.p2align 4,,10
	.p2align 3
.L7235:
	jmp	.L7251
	.p2align 4,,10
	.p2align 3
.L7236:
	add	ebp, 2
	mov	WORD PTR [rbx+64], si
	mov	WORD PTR [rbx+12], bp
	jmp	.L7251
	.p2align 4,,10
	.p2align 3
.L7237:
	movzx	r13d, si
	jmp	.L7250
	.p2align 4,,10
	.p2align 3
.L7238:
	mov	rdi, r12
	movzx	esi, si
	add	ebp, 2
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	WORD PTR [rbx+12], bp
	mov	rdi, rbx
	movzx	eax, al
	mov	WORD PTR [rbx+64], ax
	call	[QWORD PTR [rbx+72]]
	jmp	.L7232
	.p2align 4,,10
	.p2align 3
.L7239:
	movzx	esi, si
	mov	rdi, r12
	call	_ZN8MEMORY_T6PEEK64Ey
	add	al, BYTE PTR [rbx+9]
	movzx	eax, al
.L7253:
	add	ebp, 2
	mov	WORD PTR [rbx+64], ax
	mov	rdi, rbx
	mov	WORD PTR [rbx+12], bp
	call	[QWORD PTR [rbx+72]]
	jmp	.L7232
	.p2align 4,,10
	.p2align 3
.L7240:
	movzx	esi, si
	mov	rdi, r12
	call	_ZN8MEMORY_T6PEEK64Ey
	add	al, BYTE PTR [rbx+10]
	movzx	eax, al
	jmp	.L7253
	.p2align 4,,10
	.p2align 3
.L7241:
	movzx	r13d, si
	mov	rdi, r12
	mov	rsi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r13+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	edx, BYTE PTR [rbx+9]
	sal	eax, 8
	or	eax, r14d
	movzx	eax, ax
.L7254:
	add	rax, rdx
	add	ebp, 3
	mov	rdi, rbx
	mov	WORD PTR [rbx+12], bp
	mov	WORD PTR [rbx+64], ax
	call	[QWORD PTR [rbx+72]]
	jmp	.L7232
	.p2align 4,,10
	.p2align 3
.L7242:
	movzx	r13d, si
	mov	rdi, r12
	mov	rsi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r13+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	edx, BYTE PTR [rbx+10]
	sal	eax, 8
	or	eax, r14d
	movzx	eax, ax
	jmp	.L7254
	.p2align 4,,10
	.p2align 3
.L7243:
	add	ebp, 2
	mov	WORD PTR [rbx+64], si
	mov	rdi, rbx
	mov	WORD PTR [rbx+12], bp
	call	[QWORD PTR [rbx+72]]
	jmp	.L7232
	.p2align 4,,10
	.p2align 3
.L7244:
	movzx	esi, si
	mov	rdi, r12
	add	ebp, 2
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	r13d, BYTE PTR [rbx+9]
	mov	rdi, r12
	add	r13d, eax
	movzx	r13d, r13b
	mov	rsi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r13+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	jmp	.L7252
	.p2align 4,,10
	.p2align 3
.L7245:
	movzx	esi, si
	mov	rdi, r12
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rdi, r12
	movzx	r14d, al
	mov	rsi, r14
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r14+1]
	mov	rdi, r12
	mov	r13, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	edx, BYTE PTR [rbx+10]
	sal	eax, 8
	or	eax, r13d
	add	eax, edx
	jmp	.L7253
	.size	_ZN7CPU65104TICKEy, .-_ZN7CPU65104TICKEy
	.section	.rodata.str1.1
.LC1698:
	.string	"save filename:"
.LC1699:
	.string	"can't create: "
.LC1702:
	.string	"load filename:"
.LC1703:
	.string	"can't open: "
	.text
	.p2align 4,,15
	.type	INTERRUPTSERVICE.part.9, @function
INTERRUPTSERVICE.part.9:
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 104
	mov	r12, QWORD PTR [rdi+16]
	movsd	xmm0, QWORD PTR [r12+1584]
	call	nearbyint
	comisd	xmm0, QWORD PTR .LC0[rip]
	jnb	.L7256
	cvttsd2si	rdx, xmm0
.L7257:
	mov	QWORD PTR [rsp+8], 0
	movzx	ebp, dl
	cmp	rbp, 9
	jbe	.L7331
.L7258:
.L7297:
	movzx	edx, BYTE PTR [rbx+13]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, r12
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	movzx	edx, BYTE PTR [rbx+12]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, QWORD PTR [rbx+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	movzx	edx, BYTE PTR [rbx]
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, QWORD PTR [rbx+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	movzx	r13d, BYTE PTR [rbx+14]
	mov	r14, QWORD PTR [rbx+16]
	lea	r12d, [r13-1]
	mov	BYTE PTR [rbx+14], r12b
	movsd	xmm0, QWORD PTR [r14+589800]
	call	nearbyint
	comisd	xmm0, QWORD PTR .LC0[rip]
	jnb	.L7298
	cvttsd2si	rax, xmm0
.L7299:
	mov	BYTE PTR [rbx+13], al
	movsd	xmm0, QWORD PTR [r14+589808]
	call	nearbyint
	comisd	xmm0, QWORD PTR .LC0[rip]
	jnb	.L7300
	cvttsd2si	rax, xmm0
.L7301:
	mov	BYTE PTR [rbx+12], al
	mov	rax, QWORD PTR [rbx]
	xor	ebp, ebp
	mov	r15, -1
	and	rax, -17
	or	rax, 4
	cmp	QWORD PTR [rbx+24], 64
	mov	QWORD PTR [rbx], rax
	je	.L7303
	.p2align 4,,10
	.p2align 3
.L7302:
	mov	rsi, r15
	mov	rdi, rbx
	add	rbp, 1
	call	_ZN7CPU65104TICKEy
	cmp	QWORD PTR [rbx+24], 64
	jne	.L7302
	movzx	r12d, BYTE PTR [rbx+14]
	mov	r14, QWORD PTR [rbx+16]
	lea	r13d, [r12+1]
.L7303:
	mov	BYTE PTR [rbx+14], r13b
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, r14
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rdi, r14
	mov	BYTE PTR [rbx], al
	lea	eax, [r12+2]
	add	r12d, 3
	mov	BYTE PTR [rbx+14], al
	movzx	esi, WORD PTR [rbx+14]
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	BYTE PTR [rbx+14], r12b
	movzx	esi, WORD PTR [rbx+14]
	mov	rdi, r14
	mov	BYTE PTR [rbx+12], al
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	BYTE PTR [rbx+13], al
	mov	rax, QWORD PTR [rsp+8]
	mov	QWORD PTR FLAG$[rip], rax
	add	rsp, 104
	mov	rax, rbp
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L7300:
	subsd	xmm0, QWORD PTR .LC0[rip]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7301
	.p2align 4,,10
	.p2align 3
.L7298:
	subsd	xmm0, QWORD PTR .LC0[rip]
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7299
	.p2align 4,,10
	.p2align 3
.L7256:
	subsd	xmm0, QWORD PTR .LC0[rip]
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7257
	.p2align 4,,10
	.p2align 3
.L7331:
	call	fb_Inkey
	mov	rcx, -1
	xor	r8d, r8d
	lea	rdi, [rsp+32]
	mov	rsi, rcx
	mov	rdx, rax
	call	fb_StrInit
	mov	rsi, -1
	lea	rdi, [rsp+32]
	call	fb_StrLen
	test	rax, rax
	je	.L7330
	mov	rdx, QWORD PTR [rsp+32]
	movzx	edx, BYTE PTR [rdx-1+rax]
	sal	rax, 8
	add	rax, rdx
	lea	r12, [rax-256]
	cmp	r12, 27
	je	.L7332
	lea	rdx, [rax-321]
	cmp	rdx, 25
	jbe	.L7333
.L7264:
	lea	rdx, [rax-353]
	cmp	rdx, 25
	jbe	.L7334
.L7267:
	cmp	r12, 316
	je	.L7269
	cmp	r12, 317
	je	.L7335
	mov	edx, 19
	cmp	r12, 327
	je	.L7293
	cmp	r12, 8
	je	.L7307
	cmp	r12, 331
	je	.L7308
	cmp	r12, 328
	je	.L7309
	cmp	r12, 333
	je	.L7310
	cmp	r12, 336
	jne	.L7288
	mov	QWORD PTR [rsp+8], 0
	mov	edx, 17
.L7263:
.L7290:
.L7291:
.L7292:
	.p2align 4,,10
	.p2align 3
.L7293:
	mov	rdi, QWORD PTR [rbx+16]
	lea	rsi, [rbp+631]
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rdi, QWORD PTR [rbx+16]
	lea	rdx, [rbp+1]
	mov	esi, 198
	call	_ZN8MEMORY_T6POKE64Eyy
	jmp	.L7296
.L7269:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	edi, 48
	call	fb_SPACE
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	esi, 14
	mov	edi, OFFSET FLAT:.LC1698
	call	fb_StrAllocTempDescZEx
	mov	edx, -1
	mov	esi, edx
	mov	rdi, rax
	call	fb_ConsoleInput
	xor	edx, edx
	lea	rdi, [rsp+32]
	mov	rsi, -1
	call	fb_InputString
	mov	rsi, -1
	lea	rdi, [rsp+32]
	call	fb_StrLen
	test	rax, rax
	je	.L7281
	call	fb_FileFree
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 2
	lea	rdi, [rsp+32]
	mov	r13d, eax
	call	fb_FileOpen
	test	eax, eax
	je	.L7274
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	edi, 48
	call	fb_SPACE
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	pxor	xmm0, xmm0
	lea	rcx, [rsp+32]
	mov	QWORD PTR [rsp+80], 0
	movaps	XMMWORD PTR [rsp+64], xmm0
	mov	edx, 15
	mov	esi, OFFSET FLAT:.LC1699
	mov	r8, -1
.L7328:
	lea	rdi, [rsp+64]
	call	fb_StrConcat
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString
	call	fb_Beep
	mov	edi, -1
	call	fb_Sleep
.L7273:
.L7277:
.L7278:
.L7279:
.L7280:
.L7281:
	xor	r8d, r8d
	mov	ecx, 65535
	mov	edx, 2
	xor	edi, edi
	movss	xmm3, DWORD PTR .LC1700[rip]
	movss	xmm2, DWORD PTR .LC1701[rip]
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	mov	esi, 3
	call	fb_GfxLine
	.p2align 4,,10
	.p2align 3
.L7330:
	mov	QWORD PTR [rsp+8], 0
.L7260:
.L7294:
.L7295:
.L7296:
	lea	rdi, [rsp+32]
	call	fb_StrDelete
	mov	r12, QWORD PTR [rbx+16]
	jmp	.L7297
.L7332:
.L7262:
	xor	edi, edi
	call	fb_End
	mov	edx, 27
	jmp	.L7293
.L7333:
.L7265:
	lea	r12, [rax-224]
.L7329:
	mov	rsi, r12
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR
	mov	rcx, -1
	xor	r8d, r8d
	mov	edi, OFFSET FLAT:S$1.15149
	mov	rdx, rax
	mov	rsi, rcx
	call	fb_StrConcatAssign
.L7266:
.L7287:
.L7288:
	test	r12, r12
	je	.L7330
	xor	eax, eax
	cmp	r12, 13
	mov	rdx, r12
	sete	al
	mov	QWORD PTR [rsp+8], rax
	jmp	.L7293
.L7334:
.L7268:
	lea	r12, [rax-288]
	jmp	.L7329
.L7307:
	mov	edx, 20
	jmp	.L7293
.L7335:
.L7271:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	edi, 48
	call	fb_SPACE
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	esi, 14
	mov	edi, OFFSET FLAT:.LC1702
	call	fb_StrAllocTempDescZEx
	mov	edx, -1
	mov	esi, edx
	mov	rdi, rax
	call	fb_ConsoleInput
	xor	edx, edx
	lea	rdi, [rsp+32]
	mov	rsi, -1
	call	fb_InputString
	mov	rsi, -1
	lea	rdi, [rsp+32]
	call	fb_StrLen
	test	rax, rax
	je	.L7281
	call	fb_FileFree
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 1
	lea	rdi, [rsp+32]
	mov	r13d, eax
	call	fb_FileOpen
	test	eax, eax
	je	.L7284
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	mov	edi, 48
	call	fb_SPACE
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate
	pxor	xmm0, xmm0
	lea	rcx, [rsp+32]
	mov	QWORD PTR [rsp+80], 0
	movaps	XMMWORD PTR [rsp+64], xmm0
	mov	edx, 13
	mov	esi, OFFSET FLAT:.LC1703
	mov	r8, -1
	jmp	.L7328
.L7308:
	mov	QWORD PTR [rsp+8], 0
	mov	edx, 157
	jmp	.L7293
.L7309:
	mov	QWORD PTR [rsp+8], 0
	mov	edx, 145
	jmp	.L7293
.L7274:
	mov	rdi, QWORD PTR [rbx+16]
	mov	esi, 45
	mov	BYTE PTR [rsp+31], 0
	xor	ebp, ebp
	lea	r12, [rsp+31]
	call	_ZN8MEMORY_T10READUSHORTEy
	mov	ecx, 8
	xor	esi, esi
	mov	edi, r13d
	movzx	eax, ax
	lea	rdx, [rsp+64]
	sub	rax, 2048
	mov	QWORD PTR [rsp+64], rax
	call	fb_FilePutLarge
	mov	r14, QWORD PTR [rsp+64]
	sub	r14, 1
	js	.L7276
.L7275:
	mov	rdi, QWORD PTR [rbx+16]
	lea	rsi, [rbp+2048]
	add	rbp, 1
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	ecx, 1
	mov	rdx, r12
	xor	esi, esi
	mov	edi, r13d
	mov	BYTE PTR [rsp+31], al
	call	fb_FilePutLarge
	cmp	r14, rbp
	jge	.L7275
.L7276:
	mov	edi, r13d
	call	fb_FileClose
	jmp	.L7281
.L7284:
	mov	ecx, 8
	lea	rdx, [rsp+64]
	xor	esi, esi
	mov	edi, r13d
	mov	BYTE PTR [rsp+31], 0
	xor	ebp, ebp
	lea	r12, [rsp+31]
	mov	QWORD PTR [rsp+64], 0
	call	fb_FileGetLarge
	mov	r14, QWORD PTR [rsp+64]
	sub	r14, 1
	js	.L7286
.L7285:
	mov	ecx, 1
	mov	rdx, r12
	xor	esi, esi
	mov	edi, r13d
	call	fb_FileGetLarge
	movzx	edx, BYTE PTR [rsp+31]
	mov	rdi, QWORD PTR [rbx+16]
	lea	rsi, [rbp+2048]
	add	rbp, 1
	call	_ZN8MEMORY_T6POKE64Eyy
	cmp	r14, rbp
	jge	.L7285
.L7286:
	mov	edi, r13d
	call	fb_FileClose
	mov	rax, QWORD PTR [rsp+64]
	mov	r12, QWORD PTR [rbx+16]
	mov	esi, 45
	lea	rbp, [rax+2048]
	mov	rdi, r12
	movzx	edx, bpl
	mov	QWORD PTR [rsp+64], rbp
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	rax, rbp
	mov	esi, 46
	mov	rdi, r12
	movzx	edx, ah
	call	_ZN8MEMORY_T6POKE64Eyy
	mov	eax, -23254
	mov	WORD PTR [rbx+12], ax
	jmp	.L7281
.L7310:
	mov	QWORD PTR [rsp+8], 0
	mov	edx, 29
	jmp	.L7293
	.size	INTERRUPTSERVICE.part.9, .-INTERRUPTSERVICE.part.9
	.p2align 4,,15
	.globl	_ZN7CPU65107ADR_UNKEv
	.type	_ZN7CPU65107ADR_UNKEv, @function
_ZN7CPU65107ADR_UNKEv:
	sub	rsp, 8
	mov	edi, -1
	call	fb_Sleep
	xor	eax, eax
	add	rsp, 8
	ret
	.size	_ZN7CPU65107ADR_UNKEv, .-_ZN7CPU65107ADR_UNKEv
	.p2align 4,,15
	.globl	_ZN7CPU65107ADR_IMMEv
	.type	_ZN7CPU65107ADR_IMMEv, @function
_ZN7CPU65107ADR_IMMEv:
	movzx	eax, WORD PTR [rdi+12]
	lea	edx, [rax+1]
	mov	WORD PTR [rdi+12], dx
	ret
	.size	_ZN7CPU65107ADR_IMMEv, .-_ZN7CPU65107ADR_IMMEv
	.p2align 4,,15
	.globl	_ZN7CPU65107ADR_RELEv
	.type	_ZN7CPU65107ADR_RELEv, @function
_ZN7CPU65107ADR_RELEv:
	movzx	eax, WORD PTR [rdi+12]
	lea	edx, [rax+1]
	mov	WORD PTR [rdi+12], dx
	ret
	.size	_ZN7CPU65107ADR_RELEv, .-_ZN7CPU65107ADR_RELEv
	.p2align 4,,15
	.globl	_ZN7CPU65107ADR_ABSEv
	.type	_ZN7CPU65107ADR_ABSEv, @function
_ZN7CPU65107ADR_ABSEv:
	push	r14
	push	r13
	push	r12
	mov	r12, rdi
	push	rbp
	push	rbx
	movzx	ebp, WORD PTR [rdi+12]
	mov	r13, QWORD PTR [rdi+16]
	mov	rsi, rbp
	mov	rbx, rbp
	mov	rdi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rdx, [rbp+1]
	mov	r14, rax
	cmp	rdx, 57343
	jbe	.L7341
	cmp	rdx, 65536
	jne	.L7369
.L7356:
	movsd	xmm0, QWORD PTR [r13+0+rdx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7358
	.p2align 4,,10
	.p2align 3
.L7367:
	cvttsd2si	rdx, xmm0
.L7359:
	sal	edx, 8
.L7346:
.L7360:
.L7361:
	mov	eax, edx
	add	ebx, 2
	or	eax, r14d
	mov	WORD PTR [r12+12], bx
	pop	rbx
	movzx	eax, ax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7369:
.L7343:
	movsd	xmm0, QWORD PTR [r13+65536+rbp*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7367
.L7358:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7359
	.p2align 4,,10
	.p2align 3
.L7341:
	cmp	rdx, 40959
	ja	.L7370
.L7347:
	sub	rbp, 53247
	cmp	rbp, 1023
	ja	.L7356
.L7357:
	and	edx, 63
	mov	eax, 0
	cmp	rdx, 18
	mov	edx, -256
	cmove	edx, eax
	jmp	.L7361
	.p2align 4,,10
	.p2align 3
.L7370:
	cmp	rdx, 49151
	ja	.L7352
.L7349:
	movsd	xmm0, QWORD PTR [r13+262144+rbp*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7367
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7359
.L7348:
.L7352:
	cmp	rdx, 55295
	jbe	.L7347
	cmp	rdx, 56319
	ja	.L7356
.L7353:
	movsd	xmm0, QWORD PTR [r13+212992+rbp*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7358
	jmp	.L7367
	.size	_ZN7CPU65107ADR_ABSEv, .-_ZN7CPU65107ADR_ABSEv
	.p2align 4,,15
	.globl	_ZN7CPU65108ADR_ZEROEv
	.type	_ZN7CPU65108ADR_ZEROEv, @function
_ZN7CPU65108ADR_ZEROEv:
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+12]
	mov	rdx, QWORD PTR [rdi+16]
	mov	rbx, rax
	cmp	rax, 57343
	jbe	.L7372
.L7373:
	movsd	xmm0, QWORD PTR [rdx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7388
.L7394:
	cvttsd2si	rax, xmm0
.L7389:
.L7391:
	add	ebx, 1
	movzx	eax, al
	mov	WORD PTR [rbp+12], bx
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
.L7376:
.L7390:
	.p2align 4,,10
	.p2align 3
.L7372:
	cmp	rax, 40959
	jbe	.L7377
	cmp	rax, 49151
	ja	.L7382
.L7379:
	movsd	xmm0, QWORD PTR [rdx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7394
.L7388:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7389
.L7378:
	.p2align 4,,10
	.p2align 3
.L7382:
	cmp	rax, 55295
	jbe	.L7377
	cmp	rax, 56319
	ja	.L7383
.L7384:
	movsd	xmm0, QWORD PTR [rdx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7388
	jmp	.L7394
	.p2align 4,,10
	.p2align 3
.L7377:
	lea	ecx, [rbx+12288]
	cmp	cx, 1023
	jbe	.L7395
.L7383:
	movsd	xmm0, QWORD PTR [rdx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7388
	jmp	.L7394
	.p2align 4,,10
	.p2align 3
.L7395:
.L7387:
	mov	eax, ebx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	mov	eax, 0
	cmovne	rax, rdx
	add	ebx, 1
	mov	WORD PTR [rbp+12], bx
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.size	_ZN7CPU65108ADR_ZEROEv, .-_ZN7CPU65108ADR_ZEROEv
	.p2align 4,,15
	.globl	_ZN7CPU65109ADR_ZEROXEv
	.type	_ZN7CPU65109ADR_ZEROXEv, @function
_ZN7CPU65109ADR_ZEROXEv:
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+12]
	mov	rdx, QWORD PTR [rdi+16]
	mov	rbx, rax
	cmp	rax, 57343
	jbe	.L7397
.L7398:
	movsd	xmm0, QWORD PTR [rdx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7413
.L7419:
	cvttsd2si	rax, xmm0
.L7414:
	movzx	eax, al
.L7401:
.L7415:
.L7416:
	add	ebx, 1
	add	al, BYTE PTR [rbp+9]
	mov	WORD PTR [rbp+12], bx
	add	rsp, 8
	movzx	eax, al
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L7397:
	cmp	rax, 40959
	jbe	.L7402
	cmp	rax, 49151
	ja	.L7407
.L7404:
	movsd	xmm0, QWORD PTR [rdx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7419
.L7413:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7414
.L7403:
	.p2align 4,,10
	.p2align 3
.L7407:
	cmp	rax, 55295
	jbe	.L7402
	cmp	rax, 56319
	ja	.L7408
.L7409:
	movsd	xmm0, QWORD PTR [rdx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7413
	jmp	.L7419
	.p2align 4,,10
	.p2align 3
.L7402:
	lea	ecx, [rbx+12288]
	cmp	cx, 1023
	jbe	.L7420
.L7408:
	movsd	xmm0, QWORD PTR [rdx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7413
	jmp	.L7419
	.p2align 4,,10
	.p2align 3
.L7420:
.L7412:
	mov	eax, ebx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	mov	eax, 0
	cmovne	rax, rdx
	jmp	.L7416
	.size	_ZN7CPU65109ADR_ZEROXEv, .-_ZN7CPU65109ADR_ZEROXEv
	.p2align 4,,15
	.globl	_ZN7CPU65109ADR_ZEROYEv
	.type	_ZN7CPU65109ADR_ZEROYEv, @function
_ZN7CPU65109ADR_ZEROYEv:
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 8
	movzx	eax, WORD PTR [rdi+12]
	mov	rdx, QWORD PTR [rdi+16]
	mov	rbx, rax
	cmp	rax, 57343
	jbe	.L7422
.L7423:
	movsd	xmm0, QWORD PTR [rdx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7438
.L7444:
	cvttsd2si	rax, xmm0
.L7439:
	movzx	eax, al
.L7426:
.L7440:
.L7441:
	add	ebx, 1
	add	al, BYTE PTR [rbp+10]
	mov	WORD PTR [rbp+12], bx
	add	rsp, 8
	movzx	eax, al
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L7422:
	cmp	rax, 40959
	jbe	.L7427
	cmp	rax, 49151
	ja	.L7432
.L7429:
	movsd	xmm0, QWORD PTR [rdx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7444
.L7438:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7439
.L7428:
	.p2align 4,,10
	.p2align 3
.L7432:
	cmp	rax, 55295
	jbe	.L7427
	cmp	rax, 56319
	ja	.L7433
.L7434:
	movsd	xmm0, QWORD PTR [rdx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7438
	jmp	.L7444
	.p2align 4,,10
	.p2align 3
.L7427:
	lea	ecx, [rbx+12288]
	cmp	cx, 1023
	jbe	.L7445
.L7433:
	movsd	xmm0, QWORD PTR [rdx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7438
	jmp	.L7444
	.p2align 4,,10
	.p2align 3
.L7445:
.L7437:
	mov	eax, ebx
	mov	edx, 255
	and	eax, 63
	cmp	ax, 18
	mov	eax, 0
	cmovne	rax, rdx
	jmp	.L7441
	.size	_ZN7CPU65109ADR_ZEROYEv, .-_ZN7CPU65109ADR_ZEROYEv
	.p2align 4,,15
	.globl	_ZN7CPU65108ADR_ABSXEv
	.type	_ZN7CPU65108ADR_ABSXEv, @function
_ZN7CPU65108ADR_ABSXEv:
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	movzx	r12d, WORD PTR [rdi+12]
	mov	r13, QWORD PTR [rdi+16]
	mov	rsi, r12
	mov	rbx, r12
	mov	rdi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rdx, [r12+1]
	mov	r14, rax
	cmp	rdx, 57343
	jbe	.L7447
	cmp	rdx, 65536
	jne	.L7475
.L7462:
	movsd	xmm0, QWORD PTR [r13+0+rdx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7464
	.p2align 4,,10
	.p2align 3
.L7473:
	cvttsd2si	rdx, xmm0
.L7465:
	sal	edx, 8
.L7452:
.L7466:
.L7467:
	mov	eax, edx
	movzx	edx, BYTE PTR [rbp+9]
	add	ebx, 2
	or	eax, r14d
	mov	WORD PTR [rbp+12], bx
	pop	rbx
	movzx	eax, ax
	pop	rbp
	pop	r12
	add	rax, rdx
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7475:
.L7449:
	movsd	xmm0, QWORD PTR [r13+65536+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7473
.L7464:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7465
	.p2align 4,,10
	.p2align 3
.L7447:
	cmp	rdx, 40959
	ja	.L7476
.L7453:
	sub	r12, 53247
	cmp	r12, 1023
	ja	.L7462
.L7463:
	and	edx, 63
	mov	eax, 0
	cmp	rdx, 18
	mov	edx, -256
	cmove	edx, eax
	jmp	.L7467
	.p2align 4,,10
	.p2align 3
.L7476:
	cmp	rdx, 49151
	ja	.L7458
.L7455:
	movsd	xmm0, QWORD PTR [r13+262144+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7473
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7465
.L7454:
.L7458:
	cmp	rdx, 55295
	jbe	.L7453
	cmp	rdx, 56319
	ja	.L7462
.L7459:
	movsd	xmm0, QWORD PTR [r13+212992+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7464
	jmp	.L7473
	.size	_ZN7CPU65108ADR_ABSXEv, .-_ZN7CPU65108ADR_ABSXEv
	.p2align 4,,15
	.globl	_ZN7CPU65108ADR_ABSYEv
	.type	_ZN7CPU65108ADR_ABSYEv, @function
_ZN7CPU65108ADR_ABSYEv:
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	movzx	r12d, WORD PTR [rdi+12]
	mov	r13, QWORD PTR [rdi+16]
	mov	rsi, r12
	mov	rbx, r12
	mov	rdi, r13
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rdx, [r12+1]
	mov	r14, rax
	cmp	rdx, 57343
	jbe	.L7478
	cmp	rdx, 65536
	jne	.L7506
.L7493:
	movsd	xmm0, QWORD PTR [r13+0+rdx*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7495
	.p2align 4,,10
	.p2align 3
.L7504:
	cvttsd2si	rdx, xmm0
.L7496:
	sal	edx, 8
.L7483:
.L7497:
.L7498:
	mov	eax, edx
	movzx	edx, BYTE PTR [rbp+10]
	add	ebx, 2
	or	eax, r14d
	mov	WORD PTR [rbp+12], bx
	pop	rbx
	movzx	eax, ax
	pop	rbp
	pop	r12
	add	rax, rdx
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L7506:
.L7480:
	movsd	xmm0, QWORD PTR [r13+65536+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7504
.L7495:
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7496
	.p2align 4,,10
	.p2align 3
.L7478:
	cmp	rdx, 40959
	ja	.L7507
.L7484:
	sub	r12, 53247
	cmp	r12, 1023
	ja	.L7493
.L7494:
	and	edx, 63
	mov	eax, 0
	cmp	rdx, 18
	mov	edx, -256
	cmove	edx, eax
	jmp	.L7498
	.p2align 4,,10
	.p2align 3
.L7507:
	cmp	rdx, 49151
	ja	.L7489
.L7486:
	movsd	xmm0, QWORD PTR [r13+262144+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7504
	subsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	btc	rdx, 63
	jmp	.L7496
.L7485:
.L7489:
	cmp	rdx, 55295
	jbe	.L7484
	cmp	rdx, 56319
	ja	.L7493
.L7490:
	movsd	xmm0, QWORD PTR [r13+212992+r12*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7495
	jmp	.L7504
	.size	_ZN7CPU65108ADR_ABSYEv, .-_ZN7CPU65108ADR_ABSYEv
	.p2align 4,,15
	.globl	_ZN7CPU65108ADR_INDXEv
	.type	_ZN7CPU65108ADR_INDXEv, @function
_ZN7CPU65108ADR_INDXEv:
	push	r14
	push	r13
	mov	r13, rdi
	push	r12
	push	rbp
	push	rbx
	movzx	eax, WORD PTR [rdi+12]
	mov	r12, QWORD PTR [rdi+16]
	mov	rbp, rax
	cmp	rax, 57343
	jbe	.L7509
.L7510:
	movsd	xmm0, QWORD PTR [r12+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7525
.L7530:
	cvttsd2si	rbx, xmm0
.L7513:
.L7527:
.L7528:
	add	bl, BYTE PTR [r13+9]
	mov	rdi, r12
	add	ebp, 1
	movzx	ebx, bl
	mov	rsi, rbx
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [rbx+1]
	mov	rdi, r12
	mov	r14, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	pop	rbx
	mov	WORD PTR [r13+12], bp
	sal	eax, 8
	pop	rbp
	pop	r12
	or	eax, r14d
	pop	r13
	pop	r14
	movzx	eax, ax
	ret
	.p2align 4,,10
	.p2align 3
.L7509:
	cmp	rax, 40959
	jbe	.L7514
	cmp	rax, 49151
	ja	.L7519
.L7516:
	movsd	xmm0, QWORD PTR [r12+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7530
.L7525:
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
	jmp	.L7528
.L7515:
	.p2align 4,,10
	.p2align 3
.L7519:
	cmp	rax, 55295
	jbe	.L7514
	cmp	rax, 56319
	ja	.L7520
.L7521:
	movsd	xmm0, QWORD PTR [r12+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7525
	jmp	.L7530
	.p2align 4,,10
	.p2align 3
.L7514:
	lea	edx, [rbp+12288]
	cmp	dx, 1023
	jbe	.L7531
.L7520:
	movsd	xmm0, QWORD PTR [r12+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7525
	jmp	.L7530
	.p2align 4,,10
	.p2align 3
.L7531:
.L7524:
	mov	eax, ebp
	and	eax, 63
	cmp	ax, 18
	setne	bl
	neg	ebx
	jmp	.L7528
	.size	_ZN7CPU65108ADR_INDXEv, .-_ZN7CPU65108ADR_INDXEv
	.p2align 4,,15
	.globl	_ZN7CPU65108ADR_INDYEv
	.type	_ZN7CPU65108ADR_INDYEv, @function
_ZN7CPU65108ADR_INDYEv:
	push	r14
	push	r13
	push	r12
	mov	r12, rdi
	push	rbp
	push	rbx
	movzx	eax, WORD PTR [rdi+12]
	mov	rbp, QWORD PTR [rdi+16]
	mov	rbx, rax
	cmp	rax, 57343
	jbe	.L7533
.L7534:
	movsd	xmm0, QWORD PTR [rbp+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7549
.L7555:
	cvttsd2si	rsi, xmm0
.L7550:
	movzx	esi, sil
	lea	r14, [rsi+1]
.L7537:
.L7551:
.L7552:
	mov	rdi, rbp
	add	ebx, 1
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rsi, r14
	mov	rdi, rbp
	mov	r13, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	movzx	edx, BYTE PTR [r12+10]
	mov	WORD PTR [r12+12], bx
	sal	eax, 8
	pop	rbx
	pop	rbp
	or	eax, r13d
	pop	r12
	pop	r13
	add	eax, edx
	pop	r14
	movzx	eax, ax
	ret
	.p2align 4,,10
	.p2align 3
.L7533:
	cmp	rax, 40959
	jbe	.L7538
	cmp	rax, 49151
	ja	.L7543
.L7540:
	movsd	xmm0, QWORD PTR [rbp+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7555
.L7549:
	subsd	xmm0, xmm1
	cvttsd2si	rsi, xmm0
	btc	rsi, 63
	jmp	.L7550
.L7539:
	.p2align 4,,10
	.p2align 3
.L7543:
	cmp	rax, 55295
	jbe	.L7538
	cmp	rax, 56319
	ja	.L7544
.L7545:
	movsd	xmm0, QWORD PTR [rbp+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7549
	jmp	.L7555
	.p2align 4,,10
	.p2align 3
.L7538:
	lea	edx, [rbx+12288]
	cmp	dx, 1023
	jbe	.L7556
.L7544:
	movsd	xmm0, QWORD PTR [rbp+0+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7549
	jmp	.L7555
	.p2align 4,,10
	.p2align 3
.L7556:
.L7548:
	mov	eax, ebx
	mov	r14d, 1
	mov	edx, 256
	mov	esi, 0
	and	eax, 63
	cmp	ax, 18
	mov	eax, 255
	cmovne	r14, rdx
	cmovne	rsi, rax
	jmp	.L7552
	.size	_ZN7CPU65108ADR_INDYEv, .-_ZN7CPU65108ADR_INDYEv
	.p2align 4,,15
	.globl	_ZN7CPU65107ADR_INDEv
	.type	_ZN7CPU65107ADR_INDEv, @function
_ZN7CPU65107ADR_INDEv:
	push	r14
	mov	r14, rdi
	push	r13
	push	r12
	push	rbp
	push	rbx
	movzx	r12d, WORD PTR [rdi+12]
	mov	rbp, QWORD PTR [rdi+16]
	mov	rsi, r12
	mov	r13, r12
	mov	rdi, rbp
	add	r13d, 2
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [r12+1]
	mov	rdi, rbp
	mov	rbx, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	mov	rdi, rbp
	sal	eax, 8
	or	eax, ebx
	movzx	ebx, ax
	mov	rsi, rbx
	call	_ZN8MEMORY_T6PEEK64Ey
	lea	rsi, [rbx+1]
	mov	rdi, rbp
	mov	r12, rax
	call	_ZN8MEMORY_T6PEEK64Ey
	pop	rbx
	pop	rbp
	mov	WORD PTR [r14+12], r13w
	sal	eax, 8
	or	eax, r12d
	pop	r12
	pop	r13
	movzx	eax, ax
	pop	r14
	ret
	.size	_ZN7CPU65107ADR_INDEv, .-_ZN7CPU65107ADR_INDEv
	.p2align 4,,15
	.globl	_ZN7CPU65104PUSHEy
	.type	_ZN7CPU65104PUSHEy, @function
_ZN7CPU65104PUSHEy:
.L7560:
	push	rbx
	mov	rdx, rsi
	mov	rbx, rdi
	movzx	esi, WORD PTR [rdi+14]
	mov	rdi, QWORD PTR [rdi+16]
	call	_ZN8MEMORY_T6POKE64Eyy
	sub	BYTE PTR [rbx+14], 1
	pop	rbx
	ret
	.size	_ZN7CPU65104PUSHEy, .-_ZN7CPU65104PUSHEy
	.p2align 4,,15
	.globl	_ZN7CPU65104PULLEv
	.type	_ZN7CPU65104PULLEv, @function
_ZN7CPU65104PULLEv:
	sub	rsp, 8
	add	BYTE PTR [rdi+14], 1
	movzx	eax, WORD PTR [rdi+14]
	mov	rcx, QWORD PTR [rdi+16]
	cmp	rax, 57343
	jbe	.L7563
.L7564:
	movsd	xmm0, QWORD PTR [rcx+65528+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7579
.L7585:
	cvttsd2si	rax, xmm0
.L7580:
	movzx	eax, al
	add	rsp, 8
	ret
.L7567:
.L7581:
.L7582:
	.p2align 4,,10
	.p2align 3
.L7563:
	mov	rdx, rax
	cmp	rax, 40959
	jbe	.L7568
	cmp	rax, 49151
	ja	.L7573
.L7570:
	movsd	xmm0, QWORD PTR [rcx+262136+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jb	.L7585
.L7579:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L7580
.L7569:
	.p2align 4,,10
	.p2align 3
.L7573:
	cmp	rax, 55295
	jbe	.L7568
	cmp	rax, 56319
	ja	.L7574
.L7575:
	movsd	xmm0, QWORD PTR [rcx+212984+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7579
	jmp	.L7585
	.p2align 4,,10
	.p2align 3
.L7568:
	lea	esi, [rdx+12288]
	cmp	si, 1023
	jbe	.L7586
.L7574:
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	call	nearbyint
	movsd	xmm1, QWORD PTR .LC0[rip]
	comisd	xmm0, xmm1
	jnb	.L7579
	jmp	.L7585
	.p2align 4,,10
	.p2align 3
.L7586:
.L7578:
	and	edx, 63
	mov	eax, 255
	cmp	dx, 18
	mov	edx, 0
	cmove	rax, rdx
	add	rsp, 8
	ret
	.size	_ZN7CPU65104PULLEv, .-_ZN7CPU65104PULLEv
	.p2align 4,,15
	.globl	INTERRUPTSERVICE
	.type	INTERRUPTSERVICE, @function
INTERRUPTSERVICE:
	test	BYTE PTR [rdi], 4
	jne	.L7588
	jmp	INTERRUPTSERVICE.part.9
	.p2align 4,,10
	.p2align 3
.L7588:
	xor	eax, eax
	ret
	.size	INTERRUPTSERVICE, .-INTERRUPTSERVICE
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
	push	rbp
	xor	edx, edx
	movabs	rbp, -5853766786057164379
	push	rbx
	xor	ebx, ebx
	sub	rsp, 24
	call	fb_Init
	mov	edi, OFFSET FLAT:label$9
	call	fb_DataRestore
	mov	rdi, rsp
	call	_ZN5C64_TC1Ev
	mov	rdi, QWORD PTR [rsp+8]
.L7590:
	.p2align 4,,10
	.p2align 3
.L7591:
	add	rbx, 1
	cmp	QWORD PTR FLAG$[rip], 1
	mov	rsi, -1
	jne	.L7597
	mov	rsi, rbx
.L7597:
	call	_ZN7CPU65104TICKEy
	mov	rax, rbx
	mov	rdi, QWORD PTR [rsp+8]
	imul	rbp
	mov	rax, rbx
	sar	rax, 63
	add	rdx, rbx
	sar	rdx, 14
	sub	rdx, rax
	imul	rdx, rdx, 24000
	cmp	rbx, rdx
	jne	.L7591
	test	BYTE PTR [rdi], 4
	jne	.L7591
.L7595:
	call	INTERRUPTSERVICE.part.9
	mov	rdi, QWORD PTR [rsp+8]
	add	rbx, rax
	jmp	.L7591
	.size	main, .-main
	.local	S$1.15149
	.comm	S$1.15149,24,16
	.section	.rodata
	.align 32
	.type	tmp$4698.14377, @object
	.size	tmp$4698.14377, 104
tmp$4698.14377:
	.quad	.L7234
	.quad	.L7235
	.quad	.L7236
	.quad	.L7237
	.quad	.L7238
	.quad	.L7239
	.quad	.L7240
	.quad	.L7241
	.quad	.L7242
	.quad	.L7243
	.quad	.L7244
	.quad	.L7245
	.quad	.L7246
	.local	TICKS$1.14346
	.comm	TICKS$1.14346,8,8
	.section	.rodata.str1.1
.LC1704:
	.string	"1644829"
.LC1705:
	.string	"16579833"
.LC1706:
	.string	"5018426"
.LC1707:
	.string	"16430842"
	.data
	.align 32
	.type	label$9, @object
	.size	label$9, 50
label$9:
	.value	7
	.quad	.LC1704
	.value	8
	.quad	.LC1705
	.value	7
	.quad	.LC1706
	.value	8
	.quad	.LC1707
	.value	-1
	.quad	label$11
	.section	.rodata.str1.1
.LC1708:
	.string	"15585917"
.LC1709:
	.string	"7301839"
.LC1710:
	.string	"14176068"
.LC1711:
	.string	"9174011"
	.data
	.align 32
	.type	label$11, @object
	.size	label$11, 50
label$11:
	.value	8
	.quad	.LC1708
	.value	7
	.quad	.LC1709
	.value	8
	.quad	.LC1710
	.value	7
	.quad	.LC1711
	.value	-1
	.quad	label$13
	.section	.rodata.str1.1
.LC1712:
	.string	"6019228"
.LC1713:
	.string	"491347"
.LC1714:
	.string	"10481539"
.LC1715:
	.string	"5461847"
	.data
	.align 32
	.type	label$13, @object
	.size	label$13, 50
label$13:
	.value	7
	.quad	.LC1712
	.value	6
	.quad	.LC1713
	.value	8
	.quad	.LC1714
	.value	7
	.quad	.LC1715
	.value	-1
	.quad	label$15
	.section	.rodata.str1.1
.LC1716:
	.string	"10986407"
.LC1717:
	.string	"12564475"
.LC1718:
	.string	"16753559"
.LC1719:
	.string	"15200233"
	.data
	.align 32
	.type	label$15, @object
	.size	label$15, 50
label$15:
	.value	8
	.quad	.LC1716
	.value	8
	.quad	.LC1717
	.value	8
	.quad	.LC1718
	.value	8
	.quad	.LC1719
	.value	-1
	.quad	label$3145
	.section	.rodata.str1.1
.LC1720:
	.string	"BRK"
.LC1721:
	.string	"1"
.LC1722:
	.string	"7"
	.data
	.align 32
	.type	label$3145, @object
	.size	label$3145, 70
label$3145:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1720
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BRK
	.value	-1
	.quad	label$3532
	.section	.rodata.str1.1
.LC1723:
	.string	"ORA"
.LC1724:
	.string	"10"
.LC1725:
	.string	"6"
.LC1726:
	.string	"2"
	.data
	.align 32
	.type	label$3532, @object
	.size	label$3532, 70
label$3532:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1723
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1726
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3534
	.section	.rodata.str1.1
.LC1727:
	.string	"R32"
.LC1728:
	.string	"3"
	.data
	.align 32
	.type	label$3534, @object
	.size	label$3534, 70
label$3534:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1727
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_R32
	.value	-1
	.quad	label$3536
	.section	.rodata.str1.1
.LC1729:
	.string	"W32"
	.data
	.align 32
	.type	label$3536, @object
	.size	label$3536, 70
label$3536:
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1729
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_W32
	.value	-1
	.quad	label$3538
	.section	.rodata.str1.1
.LC1730:
	.string	"4"
.LC1731:
	.string	"R64"
	.data
	.align 32
	.type	label$3538, @object
	.size	label$3538, 70
label$3538:
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1731
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_R64
	.value	-1
	.quad	label$3540
	.section	.rodata.str1.1
.LC1732:
	.string	"5"
	.data
	.align 32
	.type	label$3540, @object
	.size	label$3540, 70
label$3540:
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1726
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3542
	.section	.rodata.str1.1
.LC1733:
	.string	"ASL"
	.data
	.align 32
	.type	label$3542, @object
	.size	label$3542, 70
label$3542:
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1733
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$3544
	.section	.rodata.str1.1
.LC1734:
	.string	"W64"
	.data
	.align 32
	.type	label$3544, @object
	.size	label$3544, 70
label$3544:
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1734
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_W64
	.value	-1
	.quad	label$3546
	.section	.rodata.str1.1
.LC1735:
	.string	"8"
.LC1736:
	.string	"PHP"
	.data
	.align 32
	.type	label$3546, @object
	.size	label$3546, 70
label$3546:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1736
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1721
	.value	-2
	.quad	INS_PHP
	.value	-1
	.quad	label$3548
	.section	.rodata.str1.1
.LC1737:
	.string	"9"
	.data
	.align 32
	.type	label$3548, @object
	.size	label$3548, 70
label$3548:
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1726
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3550
	.align 32
	.type	label$3550, @object
	.size	label$3550, 70
label$3550:
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1733
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	-2
	.quad	INS_ASLA
	.value	-1
	.quad	label$3552
	.section	.rodata.str1.1
.LC1738:
	.string	"11"
.LC1739:
	.string	"***"
	.data
	.align 32
	.type	label$3552, @object
	.size	label$3552, 70
label$3552:
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3554
	.section	.rodata.str1.1
.LC1740:
	.string	"12"
	.data
	.align 32
	.type	label$3554, @object
	.size	label$3554, 70
label$3554:
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3556
	.section	.rodata.str1.1
.LC1741:
	.string	"13"
	.data
	.align 32
	.type	label$3556, @object
	.size	label$3556, 70
label$3556:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1728
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3558
	.section	.rodata.str1.1
.LC1742:
	.string	"14"
	.data
	.align 32
	.type	label$3558, @object
	.size	label$3558, 70
label$3558:
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1733
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$3560
	.section	.rodata.str1.1
.LC1743:
	.string	"15"
	.data
	.align 32
	.type	label$3560, @object
	.size	label$3560, 70
label$3560:
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3562
	.section	.rodata.str1.1
.LC1744:
	.string	"16"
.LC1745:
	.string	"BPL"
	.data
	.align 32
	.type	label$3562, @object
	.size	label$3562, 70
label$3562:
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1745
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BPL
	.value	-1
	.quad	label$3564
	.section	.rodata.str1.1
.LC1746:
	.string	"17"
	.data
	.align 32
	.type	label$3564, @object
	.size	label$3564, 70
label$3564:
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1723
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3566
	.section	.rodata.str1.1
.LC1747:
	.string	"18"
	.data
	.align 32
	.type	label$3566, @object
	.size	label$3566, 70
label$3566:
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3568
	.section	.rodata.str1.1
.LC1748:
	.string	"19"
	.data
	.align 32
	.type	label$3568, @object
	.size	label$3568, 70
label$3568:
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3570
	.section	.rodata.str1.1
.LC1749:
	.string	"20"
	.data
	.align 32
	.type	label$3570, @object
	.size	label$3570, 70
label$3570:
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3572
	.section	.rodata.str1.1
.LC1750:
	.string	"21"
	.data
	.align 32
	.type	label$3572, @object
	.size	label$3572, 70
label$3572:
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3574
	.section	.rodata.str1.1
.LC1751:
	.string	"22"
	.data
	.align 32
	.type	label$3574, @object
	.size	label$3574, 70
label$3574:
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1733
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$3576
	.section	.rodata.str1.1
.LC1752:
	.string	"23"
	.data
	.align 32
	.type	label$3576, @object
	.size	label$3576, 70
label$3576:
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3578
	.section	.rodata.str1.1
.LC1753:
	.string	"24"
.LC1754:
	.string	"CLC"
	.data
	.align 32
	.type	label$3578, @object
	.size	label$3578, 70
label$3578:
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1754
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CLC
	.value	-1
	.quad	label$3580
	.section	.rodata.str1.1
.LC1755:
	.string	"25"
	.data
	.align 32
	.type	label$3580, @object
	.size	label$3580, 70
label$3580:
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3582
	.section	.rodata.str1.1
.LC1756:
	.string	"26"
	.data
	.align 32
	.type	label$3582, @object
	.size	label$3582, 70
label$3582:
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3584
	.section	.rodata.str1.1
.LC1757:
	.string	"27"
	.data
	.align 32
	.type	label$3584, @object
	.size	label$3584, 70
label$3584:
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3586
	.section	.rodata.str1.1
.LC1758:
	.string	"28"
	.data
	.align 32
	.type	label$3586, @object
	.size	label$3586, 70
label$3586:
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3588
	.section	.rodata.str1.1
.LC1759:
	.string	"29"
	.data
	.align 32
	.type	label$3588, @object
	.size	label$3588, 70
label$3588:
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1723
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$3590
	.section	.rodata.str1.1
.LC1760:
	.string	"30"
	.data
	.align 32
	.type	label$3590, @object
	.size	label$3590, 70
label$3590:
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1733
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$3592
	.section	.rodata.str1.1
.LC1761:
	.string	"31"
	.data
	.align 32
	.type	label$3592, @object
	.size	label$3592, 70
label$3592:
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3594
	.section	.rodata.str1.1
.LC1762:
	.string	"32"
.LC1763:
	.string	"JSR"
	.data
	.align 32
	.type	label$3594, @object
	.size	label$3594, 70
label$3594:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1763
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_JSR
	.value	-1
	.quad	label$3596
	.section	.rodata.str1.1
.LC1764:
	.string	"33"
.LC1765:
	.string	"AND"
	.data
	.align 32
	.type	label$3596, @object
	.size	label$3596, 70
label$3596:
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1765
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3598
	.section	.rodata.str1.1
.LC1766:
	.string	"34"
	.data
	.align 32
	.type	label$3598, @object
	.size	label$3598, 70
label$3598:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3600
	.section	.rodata.str1.1
.LC1767:
	.string	"35"
	.data
	.align 32
	.type	label$3600, @object
	.size	label$3600, 70
label$3600:
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3602
	.section	.rodata.str1.1
.LC1768:
	.string	"36"
.LC1769:
	.string	"BIT"
	.data
	.align 32
	.type	label$3602, @object
	.size	label$3602, 70
label$3602:
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1769
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$3604
	.section	.rodata.str1.1
.LC1770:
	.string	"37"
	.data
	.align 32
	.type	label$3604, @object
	.size	label$3604, 70
label$3604:
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3606
	.section	.rodata.str1.1
.LC1771:
	.string	"38"
.LC1772:
	.string	"ROL"
	.data
	.align 32
	.type	label$3606, @object
	.size	label$3606, 70
label$3606:
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1772
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$3608
	.section	.rodata.str1.1
.LC1773:
	.string	"39"
	.data
	.align 32
	.type	label$3608, @object
	.size	label$3608, 70
label$3608:
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3610
	.section	.rodata.str1.1
.LC1774:
	.string	"40"
.LC1775:
	.string	"PLP"
	.data
	.align 32
	.type	label$3610, @object
	.size	label$3610, 70
label$3610:
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1775
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_PLP
	.value	-1
	.quad	label$3612
	.section	.rodata.str1.1
.LC1776:
	.string	"41"
	.data
	.align 32
	.type	label$3612, @object
	.size	label$3612, 70
label$3612:
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3614
	.section	.rodata.str1.1
.LC1777:
	.string	"42"
	.data
	.align 32
	.type	label$3614, @object
	.size	label$3614, 70
label$3614:
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1772
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROLA
	.value	-1
	.quad	label$3616
	.section	.rodata.str1.1
.LC1778:
	.string	"43"
	.data
	.align 32
	.type	label$3616, @object
	.size	label$3616, 70
label$3616:
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3618
	.section	.rodata.str1.1
.LC1779:
	.string	"44"
	.data
	.align 32
	.type	label$3618, @object
	.size	label$3618, 70
label$3618:
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1769
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$3620
	.section	.rodata.str1.1
.LC1780:
	.string	"45"
	.data
	.align 32
	.type	label$3620, @object
	.size	label$3620, 70
label$3620:
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3622
	.section	.rodata.str1.1
.LC1781:
	.string	"46"
	.data
	.align 32
	.type	label$3622, @object
	.size	label$3622, 70
label$3622:
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1772
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$3624
	.section	.rodata.str1.1
.LC1782:
	.string	"47"
	.data
	.align 32
	.type	label$3624, @object
	.size	label$3624, 70
label$3624:
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3626
	.section	.rodata.str1.1
.LC1783:
	.string	"48"
.LC1784:
	.string	"BMI"
	.data
	.align 32
	.type	label$3626, @object
	.size	label$3626, 70
label$3626:
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1784
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BMI
	.value	-1
	.quad	label$3628
	.section	.rodata.str1.1
.LC1785:
	.string	"49"
	.data
	.align 32
	.type	label$3628, @object
	.size	label$3628, 70
label$3628:
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1765
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3630
	.section	.rodata.str1.1
.LC1786:
	.string	"50"
	.data
	.align 32
	.type	label$3630, @object
	.size	label$3630, 70
label$3630:
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3632
	.section	.rodata.str1.1
.LC1787:
	.string	"51"
	.data
	.align 32
	.type	label$3632, @object
	.size	label$3632, 70
label$3632:
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3634
	.section	.rodata.str1.1
.LC1788:
	.string	"52"
	.data
	.align 32
	.type	label$3634, @object
	.size	label$3634, 70
label$3634:
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3636
	.section	.rodata.str1.1
.LC1789:
	.string	"53"
	.data
	.align 32
	.type	label$3636, @object
	.size	label$3636, 70
label$3636:
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3638
	.section	.rodata.str1.1
.LC1790:
	.string	"54"
	.data
	.align 32
	.type	label$3638, @object
	.size	label$3638, 70
label$3638:
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC1772
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$3640
	.section	.rodata.str1.1
.LC1791:
	.string	"55"
	.data
	.align 32
	.type	label$3640, @object
	.size	label$3640, 70
label$3640:
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3642
	.section	.rodata.str1.1
.LC1792:
	.string	"56"
.LC1793:
	.string	"SEC"
	.data
	.align 32
	.type	label$3642, @object
	.size	label$3642, 70
label$3642:
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1793
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SEC
	.value	-1
	.quad	label$3644
	.section	.rodata.str1.1
.LC1794:
	.string	"57"
	.data
	.align 32
	.type	label$3644, @object
	.size	label$3644, 70
label$3644:
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3646
	.section	.rodata.str1.1
.LC1795:
	.string	"58"
	.data
	.align 32
	.type	label$3646, @object
	.size	label$3646, 70
label$3646:
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3648
	.section	.rodata.str1.1
.LC1796:
	.string	"59"
	.data
	.align 32
	.type	label$3648, @object
	.size	label$3648, 70
label$3648:
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3650
	.section	.rodata.str1.1
.LC1797:
	.string	"60"
	.data
	.align 32
	.type	label$3650, @object
	.size	label$3650, 70
label$3650:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3652
	.section	.rodata.str1.1
.LC1798:
	.string	"61"
	.data
	.align 32
	.type	label$3652, @object
	.size	label$3652, 70
label$3652:
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1765
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$3654
	.section	.rodata.str1.1
.LC1799:
	.string	"62"
	.data
	.align 32
	.type	label$3654, @object
	.size	label$3654, 70
label$3654:
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1772
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$3656
	.section	.rodata.str1.1
.LC1800:
	.string	"63"
	.data
	.align 32
	.type	label$3656, @object
	.size	label$3656, 70
label$3656:
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3658
	.section	.rodata.str1.1
.LC1801:
	.string	"64"
.LC1802:
	.string	"RTI"
	.data
	.align 32
	.type	label$3658, @object
	.size	label$3658, 70
label$3658:
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1802
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_RTI
	.value	-1
	.quad	label$3660
	.section	.rodata.str1.1
.LC1803:
	.string	"65"
.LC1804:
	.string	"EOR"
	.data
	.align 32
	.type	label$3660, @object
	.size	label$3660, 70
label$3660:
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1804
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3662
	.section	.rodata.str1.1
.LC1805:
	.string	"66"
	.data
	.align 32
	.type	label$3662, @object
	.size	label$3662, 70
label$3662:
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3664
	.section	.rodata.str1.1
.LC1806:
	.string	"67"
	.data
	.align 32
	.type	label$3664, @object
	.size	label$3664, 70
label$3664:
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3666
	.section	.rodata.str1.1
.LC1807:
	.string	"68"
	.data
	.align 32
	.type	label$3666, @object
	.size	label$3666, 70
label$3666:
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3668
	.section	.rodata.str1.1
.LC1808:
	.string	"69"
	.data
	.align 32
	.type	label$3668, @object
	.size	label$3668, 70
label$3668:
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3670
	.section	.rodata.str1.1
.LC1809:
	.string	"70"
.LC1810:
	.string	"LSR"
	.data
	.align 32
	.type	label$3670, @object
	.size	label$3670, 70
label$3670:
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1810
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$3672
	.section	.rodata.str1.1
.LC1811:
	.string	"71"
	.data
	.align 32
	.type	label$3672, @object
	.size	label$3672, 70
label$3672:
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3674
	.section	.rodata.str1.1
.LC1812:
	.string	"72"
.LC1813:
	.string	"PHA"
	.data
	.align 32
	.type	label$3674, @object
	.size	label$3674, 70
label$3674:
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1813
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_PHA
	.value	-1
	.quad	label$3676
	.section	.rodata.str1.1
.LC1814:
	.string	"73"
	.data
	.align 32
	.type	label$3676, @object
	.size	label$3676, 70
label$3676:
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3678
	.section	.rodata.str1.1
.LC1815:
	.string	"74"
	.data
	.align 32
	.type	label$3678, @object
	.size	label$3678, 70
label$3678:
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1810
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LSRA
	.value	-1
	.quad	label$3680
	.section	.rodata.str1.1
.LC1816:
	.string	"75"
	.data
	.align 32
	.type	label$3680, @object
	.size	label$3680, 70
label$3680:
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3682
	.section	.rodata.str1.1
.LC1817:
	.string	"76"
.LC1818:
	.string	"JMP"
	.data
	.align 32
	.type	label$3682, @object
	.size	label$3682, 70
label$3682:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1818
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$3684
	.section	.rodata.str1.1
.LC1819:
	.string	"77"
	.data
	.align 32
	.type	label$3684, @object
	.size	label$3684, 70
label$3684:
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3686
	.section	.rodata.str1.1
.LC1820:
	.string	"78"
	.data
	.align 32
	.type	label$3686, @object
	.size	label$3686, 70
label$3686:
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1810
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$3688
	.section	.rodata.str1.1
.LC1821:
	.string	"79"
	.data
	.align 32
	.type	label$3688, @object
	.size	label$3688, 70
label$3688:
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3690
	.section	.rodata.str1.1
.LC1822:
	.string	"80"
.LC1823:
	.string	"BVC"
	.data
	.align 32
	.type	label$3690, @object
	.size	label$3690, 70
label$3690:
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1823
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BVC
	.value	-1
	.quad	label$3692
	.section	.rodata.str1.1
.LC1824:
	.string	"81"
	.data
	.align 32
	.type	label$3692, @object
	.size	label$3692, 70
label$3692:
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1804
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3694
	.section	.rodata.str1.1
.LC1825:
	.string	"82"
	.data
	.align 32
	.type	label$3694, @object
	.size	label$3694, 70
label$3694:
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3696
	.section	.rodata.str1.1
.LC1826:
	.string	"83"
	.data
	.align 32
	.type	label$3696, @object
	.size	label$3696, 70
label$3696:
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3698
	.section	.rodata.str1.1
.LC1827:
	.string	"84"
	.data
	.align 32
	.type	label$3698, @object
	.size	label$3698, 70
label$3698:
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3700
	.section	.rodata.str1.1
.LC1828:
	.string	"85"
	.data
	.align 32
	.type	label$3700, @object
	.size	label$3700, 70
label$3700:
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3702
	.section	.rodata.str1.1
.LC1829:
	.string	"86"
	.data
	.align 32
	.type	label$3702, @object
	.size	label$3702, 70
label$3702:
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1810
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$3704
	.section	.rodata.str1.1
.LC1830:
	.string	"87"
	.data
	.align 32
	.type	label$3704, @object
	.size	label$3704, 70
label$3704:
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3706
	.section	.rodata.str1.1
.LC1831:
	.string	"88"
.LC1832:
	.string	"CLI"
	.data
	.align 32
	.type	label$3706, @object
	.size	label$3706, 70
label$3706:
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1832
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CLI
	.value	-1
	.quad	label$3708
	.section	.rodata.str1.1
.LC1833:
	.string	"89"
	.data
	.align 32
	.type	label$3708, @object
	.size	label$3708, 70
label$3708:
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3710
	.section	.rodata.str1.1
.LC1834:
	.string	"90"
	.data
	.align 32
	.type	label$3710, @object
	.size	label$3710, 70
label$3710:
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3712
	.section	.rodata.str1.1
.LC1835:
	.string	"91"
	.data
	.align 32
	.type	label$3712, @object
	.size	label$3712, 70
label$3712:
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3714
	.section	.rodata.str1.1
.LC1836:
	.string	"92"
	.data
	.align 32
	.type	label$3714, @object
	.size	label$3714, 70
label$3714:
	.value	2
	.quad	.LC1836
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3716
	.section	.rodata.str1.1
.LC1837:
	.string	"93"
	.data
	.align 32
	.type	label$3716, @object
	.size	label$3716, 70
label$3716:
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1804
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$3718
	.section	.rodata.str1.1
.LC1838:
	.string	"94"
	.data
	.align 32
	.type	label$3718, @object
	.size	label$3718, 70
label$3718:
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1810
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$3720
	.section	.rodata.str1.1
.LC1839:
	.string	"95"
	.data
	.align 32
	.type	label$3720, @object
	.size	label$3720, 70
label$3720:
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3722
	.section	.rodata.str1.1
.LC1840:
	.string	"96"
.LC1841:
	.string	"RTS"
	.data
	.align 32
	.type	label$3722, @object
	.size	label$3722, 70
label$3722:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1841
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_RTS
	.value	-1
	.quad	label$3724
	.section	.rodata.str1.1
.LC1842:
	.string	"97"
.LC1843:
	.string	"ADC"
	.data
	.align 32
	.type	label$3724, @object
	.size	label$3724, 70
label$3724:
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1843
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3726
	.section	.rodata.str1.1
.LC1844:
	.string	"98"
	.data
	.align 32
	.type	label$3726, @object
	.size	label$3726, 70
label$3726:
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3728
	.section	.rodata.str1.1
.LC1845:
	.string	"99"
	.data
	.align 32
	.type	label$3728, @object
	.size	label$3728, 70
label$3728:
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3730
	.section	.rodata.str1.1
.LC1846:
	.string	"100"
	.data
	.align 32
	.type	label$3730, @object
	.size	label$3730, 70
label$3730:
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3732
	.section	.rodata.str1.1
.LC1847:
	.string	"101"
	.data
	.align 32
	.type	label$3732, @object
	.size	label$3732, 70
label$3732:
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3734
	.section	.rodata.str1.1
.LC1848:
	.string	"102"
.LC1849:
	.string	"ROR"
	.data
	.align 32
	.type	label$3734, @object
	.size	label$3734, 70
label$3734:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1849
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$3736
	.section	.rodata.str1.1
.LC1850:
	.string	"103"
	.data
	.align 32
	.type	label$3736, @object
	.size	label$3736, 70
label$3736:
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3738
	.section	.rodata.str1.1
.LC1851:
	.string	"104"
.LC1852:
	.string	"PLA"
	.data
	.align 32
	.type	label$3738, @object
	.size	label$3738, 70
label$3738:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1852
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_PLA
	.value	-1
	.quad	label$3740
	.section	.rodata.str1.1
.LC1853:
	.string	"105"
	.data
	.align 32
	.type	label$3740, @object
	.size	label$3740, 70
label$3740:
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3742
	.section	.rodata.str1.1
.LC1854:
	.string	"106"
	.data
	.align 32
	.type	label$3742, @object
	.size	label$3742, 70
label$3742:
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1849
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_RORA
	.value	-1
	.quad	label$3744
	.section	.rodata.str1.1
.LC1855:
	.string	"107"
	.data
	.align 32
	.type	label$3744, @object
	.size	label$3744, 70
label$3744:
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3746
	.section	.rodata.str1.1
.LC1856:
	.string	"108"
	.data
	.align 32
	.type	label$3746, @object
	.size	label$3746, 70
label$3746:
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1818
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$3748
	.section	.rodata.str1.1
.LC1857:
	.string	"109"
	.data
	.align 32
	.type	label$3748, @object
	.size	label$3748, 70
label$3748:
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3750
	.section	.rodata.str1.1
.LC1858:
	.string	"110"
	.data
	.align 32
	.type	label$3750, @object
	.size	label$3750, 70
label$3750:
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1849
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$3752
	.section	.rodata.str1.1
.LC1859:
	.string	"111"
	.data
	.align 32
	.type	label$3752, @object
	.size	label$3752, 70
label$3752:
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3754
	.section	.rodata.str1.1
.LC1860:
	.string	"112"
.LC1861:
	.string	"BVS"
	.data
	.align 32
	.type	label$3754, @object
	.size	label$3754, 70
label$3754:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1861
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BVS
	.value	-1
	.quad	label$3756
	.section	.rodata.str1.1
.LC1862:
	.string	"113"
	.data
	.align 32
	.type	label$3756, @object
	.size	label$3756, 70
label$3756:
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1843
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3758
	.section	.rodata.str1.1
.LC1863:
	.string	"114"
	.data
	.align 32
	.type	label$3758, @object
	.size	label$3758, 70
label$3758:
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3760
	.section	.rodata.str1.1
.LC1864:
	.string	"115"
	.data
	.align 32
	.type	label$3760, @object
	.size	label$3760, 70
label$3760:
	.value	3
	.quad	.LC1864
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3762
	.section	.rodata.str1.1
.LC1865:
	.string	"116"
	.data
	.align 32
	.type	label$3762, @object
	.size	label$3762, 70
label$3762:
	.value	3
	.quad	.LC1865
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3764
	.section	.rodata.str1.1
.LC1866:
	.string	"117"
	.data
	.align 32
	.type	label$3764, @object
	.size	label$3764, 70
label$3764:
	.value	3
	.quad	.LC1866
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3766
	.section	.rodata.str1.1
.LC1867:
	.string	"118"
	.data
	.align 32
	.type	label$3766, @object
	.size	label$3766, 70
label$3766:
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1849
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$3768
	.section	.rodata.str1.1
.LC1868:
	.string	"119"
	.data
	.align 32
	.type	label$3768, @object
	.size	label$3768, 70
label$3768:
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3770
	.section	.rodata.str1.1
.LC1869:
	.string	"120"
.LC1870:
	.string	"SEI"
	.data
	.align 32
	.type	label$3770, @object
	.size	label$3770, 70
label$3770:
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1870
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SEI
	.value	-1
	.quad	label$3772
	.section	.rodata.str1.1
.LC1871:
	.string	"121"
	.data
	.align 32
	.type	label$3772, @object
	.size	label$3772, 70
label$3772:
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3774
	.section	.rodata.str1.1
.LC1872:
	.string	"122"
	.data
	.align 32
	.type	label$3774, @object
	.size	label$3774, 70
label$3774:
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3776
	.section	.rodata.str1.1
.LC1873:
	.string	"123"
	.data
	.align 32
	.type	label$3776, @object
	.size	label$3776, 70
label$3776:
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3778
	.section	.rodata.str1.1
.LC1874:
	.string	"124"
	.data
	.align 32
	.type	label$3778, @object
	.size	label$3778, 70
label$3778:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3780
	.section	.rodata.str1.1
.LC1875:
	.string	"125"
	.data
	.align 32
	.type	label$3780, @object
	.size	label$3780, 70
label$3780:
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1843
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$3782
	.section	.rodata.str1.1
.LC1876:
	.string	"126"
	.data
	.align 32
	.type	label$3782, @object
	.size	label$3782, 70
label$3782:
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1849
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$3784
	.section	.rodata.str1.1
.LC1877:
	.string	"127"
	.data
	.align 32
	.type	label$3784, @object
	.size	label$3784, 70
label$3784:
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3786
	.section	.rodata.str1.1
.LC1878:
	.string	"128"
	.data
	.align 32
	.type	label$3786, @object
	.size	label$3786, 70
label$3786:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3788
	.section	.rodata.str1.1
.LC1879:
	.string	"129"
.LC1880:
	.string	"STA"
	.data
	.align 32
	.type	label$3788, @object
	.size	label$3788, 70
label$3788:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1880
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3790
	.section	.rodata.str1.1
.LC1881:
	.string	"130"
	.data
	.align 32
	.type	label$3790, @object
	.size	label$3790, 70
label$3790:
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3792
	.section	.rodata.str1.1
.LC1882:
	.string	"131"
	.data
	.align 32
	.type	label$3792, @object
	.size	label$3792, 70
label$3792:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3794
	.section	.rodata.str1.1
.LC1883:
	.string	"132"
.LC1884:
	.string	"STY"
	.data
	.align 32
	.type	label$3794, @object
	.size	label$3794, 70
label$3794:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1884
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$3796
	.section	.rodata.str1.1
.LC1885:
	.string	"133"
	.data
	.align 32
	.type	label$3796, @object
	.size	label$3796, 70
label$3796:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1880
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3798
	.section	.rodata.str1.1
.LC1886:
	.string	"134"
.LC1887:
	.string	"STX"
	.data
	.align 32
	.type	label$3798, @object
	.size	label$3798, 70
label$3798:
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1887
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$3800
	.section	.rodata.str1.1
.LC1888:
	.string	"135"
	.data
	.align 32
	.type	label$3800, @object
	.size	label$3800, 70
label$3800:
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3802
	.section	.rodata.str1.1
.LC1889:
	.string	"136"
.LC1890:
	.string	"DEY"
	.data
	.align 32
	.type	label$3802, @object
	.size	label$3802, 70
label$3802:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1890
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEY
	.value	-1
	.quad	label$3804
	.section	.rodata.str1.1
.LC1891:
	.string	"137"
	.data
	.align 32
	.type	label$3804, @object
	.size	label$3804, 70
label$3804:
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3806
	.section	.rodata.str1.1
.LC1892:
	.string	"138"
.LC1893:
	.string	"TXA"
	.data
	.align 32
	.type	label$3806, @object
	.size	label$3806, 70
label$3806:
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1893
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TXA
	.value	-1
	.quad	label$3808
	.section	.rodata.str1.1
.LC1894:
	.string	"139"
	.data
	.align 32
	.type	label$3808, @object
	.size	label$3808, 70
label$3808:
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3810
	.section	.rodata.str1.1
.LC1895:
	.string	"140"
	.data
	.align 32
	.type	label$3810, @object
	.size	label$3810, 70
label$3810:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1884
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$3812
	.section	.rodata.str1.1
.LC1896:
	.string	"141"
	.data
	.align 32
	.type	label$3812, @object
	.size	label$3812, 70
label$3812:
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1880
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3814
	.section	.rodata.str1.1
.LC1897:
	.string	"142"
	.data
	.align 32
	.type	label$3814, @object
	.size	label$3814, 70
label$3814:
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1887
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$3816
	.section	.rodata.str1.1
.LC1898:
	.string	"143"
	.data
	.align 32
	.type	label$3816, @object
	.size	label$3816, 70
label$3816:
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3818
	.section	.rodata.str1.1
.LC1899:
	.string	"144"
.LC1900:
	.string	"BCC"
	.data
	.align 32
	.type	label$3818, @object
	.size	label$3818, 70
label$3818:
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1900
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BCC
	.value	-1
	.quad	label$3820
	.section	.rodata.str1.1
.LC1901:
	.string	"145"
	.data
	.align 32
	.type	label$3820, @object
	.size	label$3820, 70
label$3820:
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1880
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3822
	.section	.rodata.str1.1
.LC1902:
	.string	"146"
	.data
	.align 32
	.type	label$3822, @object
	.size	label$3822, 70
label$3822:
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3824
	.section	.rodata.str1.1
.LC1903:
	.string	"147"
	.data
	.align 32
	.type	label$3824, @object
	.size	label$3824, 70
label$3824:
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3826
	.section	.rodata.str1.1
.LC1904:
	.string	"148"
	.data
	.align 32
	.type	label$3826, @object
	.size	label$3826, 70
label$3826:
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1884
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$3828
	.section	.rodata.str1.1
.LC1905:
	.string	"149"
	.data
	.align 32
	.type	label$3828, @object
	.size	label$3828, 70
label$3828:
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1880
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3830
	.section	.rodata.str1.1
.LC1906:
	.string	"150"
	.data
	.align 32
	.type	label$3830, @object
	.size	label$3830, 70
label$3830:
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1887
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$3832
	.section	.rodata.str1.1
.LC1907:
	.string	"151"
	.data
	.align 32
	.type	label$3832, @object
	.size	label$3832, 70
label$3832:
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3834
	.section	.rodata.str1.1
.LC1908:
	.string	"152"
.LC1909:
	.string	"TYA"
	.data
	.align 32
	.type	label$3834, @object
	.size	label$3834, 70
label$3834:
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1909
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TYA
	.value	-1
	.quad	label$3836
	.section	.rodata.str1.1
.LC1910:
	.string	"153"
	.data
	.align 32
	.type	label$3836, @object
	.size	label$3836, 70
label$3836:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1880
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3838
	.section	.rodata.str1.1
.LC1911:
	.string	"154"
.LC1912:
	.string	"TXS"
	.data
	.align 32
	.type	label$3838, @object
	.size	label$3838, 70
label$3838:
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1912
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TXS
	.value	-1
	.quad	label$3840
	.section	.rodata.str1.1
.LC1913:
	.string	"155"
	.data
	.align 32
	.type	label$3840, @object
	.size	label$3840, 70
label$3840:
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3842
	.section	.rodata.str1.1
.LC1914:
	.string	"156"
	.data
	.align 32
	.type	label$3842, @object
	.size	label$3842, 70
label$3842:
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3844
	.section	.rodata.str1.1
.LC1915:
	.string	"157"
	.data
	.align 32
	.type	label$3844, @object
	.size	label$3844, 70
label$3844:
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1880
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$3846
	.section	.rodata.str1.1
.LC1916:
	.string	"158"
	.data
	.align 32
	.type	label$3846, @object
	.size	label$3846, 70
label$3846:
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3848
	.section	.rodata.str1.1
.LC1917:
	.string	"159"
	.data
	.align 32
	.type	label$3848, @object
	.size	label$3848, 70
label$3848:
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3850
	.section	.rodata.str1.1
.LC1918:
	.string	"160"
.LC1919:
	.string	"LDY"
	.data
	.align 32
	.type	label$3850, @object
	.size	label$3850, 70
label$3850:
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1919
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$3852
	.section	.rodata.str1.1
.LC1920:
	.string	"161"
.LC1921:
	.string	"LDA"
	.data
	.align 32
	.type	label$3852, @object
	.size	label$3852, 70
label$3852:
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1921
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3854
	.section	.rodata.str1.1
.LC1922:
	.string	"162"
.LC1923:
	.string	"LDX"
	.data
	.align 32
	.type	label$3854, @object
	.size	label$3854, 70
label$3854:
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1923
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$3856
	.section	.rodata.str1.1
.LC1924:
	.string	"163"
	.data
	.align 32
	.type	label$3856, @object
	.size	label$3856, 70
label$3856:
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3858
	.section	.rodata.str1.1
.LC1925:
	.string	"164"
	.data
	.align 32
	.type	label$3858, @object
	.size	label$3858, 70
label$3858:
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1919
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$3860
	.section	.rodata.str1.1
.LC1926:
	.string	"165"
	.data
	.align 32
	.type	label$3860, @object
	.size	label$3860, 70
label$3860:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3862
	.section	.rodata.str1.1
.LC1927:
	.string	"166"
	.data
	.align 32
	.type	label$3862, @object
	.size	label$3862, 70
label$3862:
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1923
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$3864
	.section	.rodata.str1.1
.LC1928:
	.string	"167"
	.data
	.align 32
	.type	label$3864, @object
	.size	label$3864, 70
label$3864:
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3866
	.section	.rodata.str1.1
.LC1929:
	.string	"168"
.LC1930:
	.string	"TAY"
	.data
	.align 32
	.type	label$3866, @object
	.size	label$3866, 70
label$3866:
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1930
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TAY
	.value	-1
	.quad	label$3868
	.section	.rodata.str1.1
.LC1931:
	.string	"169"
	.data
	.align 32
	.type	label$3868, @object
	.size	label$3868, 70
label$3868:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3870
	.section	.rodata.str1.1
.LC1932:
	.string	"170"
.LC1933:
	.string	"TAX"
	.data
	.align 32
	.type	label$3870, @object
	.size	label$3870, 70
label$3870:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1933
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TAX
	.value	-1
	.quad	label$3872
	.section	.rodata.str1.1
.LC1934:
	.string	"171"
	.data
	.align 32
	.type	label$3872, @object
	.size	label$3872, 70
label$3872:
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3874
	.section	.rodata.str1.1
.LC1935:
	.string	"172"
	.data
	.align 32
	.type	label$3874, @object
	.size	label$3874, 70
label$3874:
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1919
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$3876
	.section	.rodata.str1.1
.LC1936:
	.string	"173"
	.data
	.align 32
	.type	label$3876, @object
	.size	label$3876, 70
label$3876:
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3878
	.section	.rodata.str1.1
.LC1937:
	.string	"174"
	.data
	.align 32
	.type	label$3878, @object
	.size	label$3878, 70
label$3878:
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1923
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$3880
	.section	.rodata.str1.1
.LC1938:
	.string	"175"
	.data
	.align 32
	.type	label$3880, @object
	.size	label$3880, 70
label$3880:
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3882
	.section	.rodata.str1.1
.LC1939:
	.string	"176"
.LC1940:
	.string	"BCS"
	.data
	.align 32
	.type	label$3882, @object
	.size	label$3882, 70
label$3882:
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1940
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BCS
	.value	-1
	.quad	label$3884
	.section	.rodata.str1.1
.LC1941:
	.string	"177"
	.data
	.align 32
	.type	label$3884, @object
	.size	label$3884, 70
label$3884:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1921
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3886
	.section	.rodata.str1.1
.LC1942:
	.string	"178"
	.data
	.align 32
	.type	label$3886, @object
	.size	label$3886, 70
label$3886:
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3888
	.section	.rodata.str1.1
.LC1943:
	.string	"179"
	.data
	.align 32
	.type	label$3888, @object
	.size	label$3888, 70
label$3888:
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3890
	.section	.rodata.str1.1
.LC1944:
	.string	"180"
	.data
	.align 32
	.type	label$3890, @object
	.size	label$3890, 70
label$3890:
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1919
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$3892
	.section	.rodata.str1.1
.LC1945:
	.string	"181"
	.data
	.align 32
	.type	label$3892, @object
	.size	label$3892, 70
label$3892:
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3894
	.section	.rodata.str1.1
.LC1946:
	.string	"182"
	.data
	.align 32
	.type	label$3894, @object
	.size	label$3894, 70
label$3894:
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1923
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$3896
	.section	.rodata.str1.1
.LC1947:
	.string	"183"
	.data
	.align 32
	.type	label$3896, @object
	.size	label$3896, 70
label$3896:
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3898
	.section	.rodata.str1.1
.LC1948:
	.string	"184"
.LC1949:
	.string	"CLV"
	.data
	.align 32
	.type	label$3898, @object
	.size	label$3898, 70
label$3898:
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1949
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CLV
	.value	-1
	.quad	label$3900
	.section	.rodata.str1.1
.LC1950:
	.string	"185"
	.data
	.align 32
	.type	label$3900, @object
	.size	label$3900, 70
label$3900:
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3902
	.section	.rodata.str1.1
.LC1951:
	.string	"186"
.LC1952:
	.string	"TSX"
	.data
	.align 32
	.type	label$3902, @object
	.size	label$3902, 70
label$3902:
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1952
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_TSX
	.value	-1
	.quad	label$3904
	.section	.rodata.str1.1
.LC1953:
	.string	"187"
	.data
	.align 32
	.type	label$3904, @object
	.size	label$3904, 70
label$3904:
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3906
	.section	.rodata.str1.1
.LC1954:
	.string	"188"
	.data
	.align 32
	.type	label$3906, @object
	.size	label$3906, 70
label$3906:
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1919
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$3908
	.section	.rodata.str1.1
.LC1955:
	.string	"189"
	.data
	.align 32
	.type	label$3908, @object
	.size	label$3908, 70
label$3908:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1921
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$3910
	.section	.rodata.str1.1
.LC1956:
	.string	"190"
	.data
	.align 32
	.type	label$3910, @object
	.size	label$3910, 70
label$3910:
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1923
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$3912
	.section	.rodata.str1.1
.LC1957:
	.string	"191"
	.data
	.align 32
	.type	label$3912, @object
	.size	label$3912, 70
label$3912:
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3914
	.section	.rodata.str1.1
.LC1958:
	.string	"192"
.LC1959:
	.string	"CPY"
	.data
	.align 32
	.type	label$3914, @object
	.size	label$3914, 70
label$3914:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1959
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$3916
	.section	.rodata.str1.1
.LC1960:
	.string	"193"
.LC1961:
	.string	"CMP"
	.data
	.align 32
	.type	label$3916, @object
	.size	label$3916, 70
label$3916:
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1961
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3918
	.section	.rodata.str1.1
.LC1962:
	.string	"194"
	.data
	.align 32
	.type	label$3918, @object
	.size	label$3918, 70
label$3918:
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3920
	.section	.rodata.str1.1
.LC1963:
	.string	"195"
	.data
	.align 32
	.type	label$3920, @object
	.size	label$3920, 70
label$3920:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3922
	.section	.rodata.str1.1
.LC1964:
	.string	"196"
	.data
	.align 32
	.type	label$3922, @object
	.size	label$3922, 70
label$3922:
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1959
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$3924
	.section	.rodata.str1.1
.LC1965:
	.string	"197"
	.data
	.align 32
	.type	label$3924, @object
	.size	label$3924, 70
label$3924:
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3926
	.section	.rodata.str1.1
.LC1966:
	.string	"198"
.LC1967:
	.string	"DEC"
	.data
	.align 32
	.type	label$3926, @object
	.size	label$3926, 70
label$3926:
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1967
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$3928
	.section	.rodata.str1.1
.LC1968:
	.string	"199"
	.data
	.align 32
	.type	label$3928, @object
	.size	label$3928, 70
label$3928:
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3930
	.section	.rodata.str1.1
.LC1969:
	.string	"200"
.LC1970:
	.string	"INY"
	.data
	.align 32
	.type	label$3930, @object
	.size	label$3930, 70
label$3930:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1970
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INY
	.value	-1
	.quad	label$3932
	.section	.rodata.str1.1
.LC1971:
	.string	"201"
	.data
	.align 32
	.type	label$3932, @object
	.size	label$3932, 70
label$3932:
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3934
	.section	.rodata.str1.1
.LC1972:
	.string	"202"
.LC1973:
	.string	"DEX"
	.data
	.align 32
	.type	label$3934, @object
	.size	label$3934, 70
label$3934:
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1973
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEX
	.value	-1
	.quad	label$3936
	.section	.rodata.str1.1
.LC1974:
	.string	"203"
	.data
	.align 32
	.type	label$3936, @object
	.size	label$3936, 70
label$3936:
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3938
	.section	.rodata.str1.1
.LC1975:
	.string	"204"
	.data
	.align 32
	.type	label$3938, @object
	.size	label$3938, 70
label$3938:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1959
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$3940
	.section	.rodata.str1.1
.LC1976:
	.string	"205"
	.data
	.align 32
	.type	label$3940, @object
	.size	label$3940, 70
label$3940:
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3942
	.section	.rodata.str1.1
.LC1977:
	.string	"206"
	.data
	.align 32
	.type	label$3942, @object
	.size	label$3942, 70
label$3942:
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1967
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$3944
	.section	.rodata.str1.1
.LC1978:
	.string	"207"
	.data
	.align 32
	.type	label$3944, @object
	.size	label$3944, 70
label$3944:
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3946
	.section	.rodata.str1.1
.LC1979:
	.string	"208"
.LC1980:
	.string	"BNE"
	.data
	.align 32
	.type	label$3946, @object
	.size	label$3946, 70
label$3946:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1980
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BNE
	.value	-1
	.quad	label$3948
	.section	.rodata.str1.1
.LC1981:
	.string	"209"
	.data
	.align 32
	.type	label$3948, @object
	.size	label$3948, 70
label$3948:
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1961
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3950
	.section	.rodata.str1.1
.LC1982:
	.string	"210"
	.data
	.align 32
	.type	label$3950, @object
	.size	label$3950, 70
label$3950:
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3952
	.section	.rodata.str1.1
.LC1983:
	.string	"211"
	.data
	.align 32
	.type	label$3952, @object
	.size	label$3952, 70
label$3952:
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3954
	.section	.rodata.str1.1
.LC1984:
	.string	"212"
	.data
	.align 32
	.type	label$3954, @object
	.size	label$3954, 70
label$3954:
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3956
	.section	.rodata.str1.1
.LC1985:
	.string	"213"
	.data
	.align 32
	.type	label$3956, @object
	.size	label$3956, 70
label$3956:
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3958
	.section	.rodata.str1.1
.LC1986:
	.string	"214"
	.data
	.align 32
	.type	label$3958, @object
	.size	label$3958, 70
label$3958:
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1967
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$3960
	.section	.rodata.str1.1
.LC1987:
	.string	"215"
	.data
	.align 32
	.type	label$3960, @object
	.size	label$3960, 70
label$3960:
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3962
	.section	.rodata.str1.1
.LC1988:
	.string	"216"
.LC1989:
	.string	"CLD"
	.data
	.align 32
	.type	label$3962, @object
	.size	label$3962, 70
label$3962:
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1989
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CLD
	.value	-1
	.quad	label$3964
	.section	.rodata.str1.1
.LC1990:
	.string	"217"
	.data
	.align 32
	.type	label$3964, @object
	.size	label$3964, 70
label$3964:
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3966
	.section	.rodata.str1.1
.LC1991:
	.string	"218"
	.data
	.align 32
	.type	label$3966, @object
	.size	label$3966, 70
label$3966:
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3968
	.section	.rodata.str1.1
.LC1992:
	.string	"219"
	.data
	.align 32
	.type	label$3968, @object
	.size	label$3968, 70
label$3968:
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3970
	.section	.rodata.str1.1
.LC1993:
	.string	"220"
	.data
	.align 32
	.type	label$3970, @object
	.size	label$3970, 70
label$3970:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3972
	.section	.rodata.str1.1
.LC1994:
	.string	"221"
	.data
	.align 32
	.type	label$3972, @object
	.size	label$3972, 70
label$3972:
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1961
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$3974
	.section	.rodata.str1.1
.LC1995:
	.string	"222"
	.data
	.align 32
	.type	label$3974, @object
	.size	label$3974, 70
label$3974:
	.value	3
	.quad	.LC1995
	.value	3
	.quad	.LC1967
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$3976
	.section	.rodata.str1.1
.LC1996:
	.string	"223"
	.data
	.align 32
	.type	label$3976, @object
	.size	label$3976, 70
label$3976:
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3978
	.section	.rodata.str1.1
.LC1997:
	.string	"224"
.LC1998:
	.string	"CPX"
	.data
	.align 32
	.type	label$3978, @object
	.size	label$3978, 70
label$3978:
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1998
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$3980
	.section	.rodata.str1.1
.LC1999:
	.string	"225"
.LC2000:
	.string	"SBC"
	.data
	.align 32
	.type	label$3980, @object
	.size	label$3980, 70
label$3980:
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2000
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$3982
	.section	.rodata.str1.1
.LC2001:
	.string	"226"
	.data
	.align 32
	.type	label$3982, @object
	.size	label$3982, 70
label$3982:
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3984
	.section	.rodata.str1.1
.LC2002:
	.string	"227"
	.data
	.align 32
	.type	label$3984, @object
	.size	label$3984, 70
label$3984:
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3986
	.section	.rodata.str1.1
.LC2003:
	.string	"228"
	.data
	.align 32
	.type	label$3986, @object
	.size	label$3986, 70
label$3986:
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1998
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$3988
	.section	.rodata.str1.1
.LC2004:
	.string	"229"
	.data
	.align 32
	.type	label$3988, @object
	.size	label$3988, 70
label$3988:
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$3990
	.section	.rodata.str1.1
.LC2005:
	.string	"230"
.LC2006:
	.string	"INC"
	.data
	.align 32
	.type	label$3990, @object
	.size	label$3990, 70
label$3990:
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC2006
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$3992
	.section	.rodata.str1.1
.LC2007:
	.string	"231"
	.data
	.align 32
	.type	label$3992, @object
	.size	label$3992, 70
label$3992:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3994
	.section	.rodata.str1.1
.LC2008:
	.string	"232"
.LC2009:
	.string	"INX"
	.data
	.align 32
	.type	label$3994, @object
	.size	label$3994, 70
label$3994:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2009
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INX
	.value	-1
	.quad	label$3996
	.section	.rodata.str1.1
.LC2010:
	.string	"233"
	.data
	.align 32
	.type	label$3996, @object
	.size	label$3996, 70
label$3996:
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$3998
	.section	.rodata.str1.1
.LC2011:
	.string	"234"
.LC2012:
	.string	"NOP"
	.data
	.align 32
	.type	label$3998, @object
	.size	label$3998, 70
label$3998:
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2012
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_NOP
	.value	-1
	.quad	label$4000
	.section	.rodata.str1.1
.LC2013:
	.string	"235"
	.data
	.align 32
	.type	label$4000, @object
	.size	label$4000, 70
label$4000:
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4002
	.section	.rodata.str1.1
.LC2014:
	.string	"236"
	.data
	.align 32
	.type	label$4002, @object
	.size	label$4002, 70
label$4002:
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1998
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$4004
	.section	.rodata.str1.1
.LC2015:
	.string	"237"
	.data
	.align 32
	.type	label$4004, @object
	.size	label$4004, 70
label$4004:
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4006
	.section	.rodata.str1.1
.LC2016:
	.string	"238"
	.data
	.align 32
	.type	label$4006, @object
	.size	label$4006, 70
label$4006:
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC2006
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4008
	.section	.rodata.str1.1
.LC2017:
	.string	"239"
	.data
	.align 32
	.type	label$4008, @object
	.size	label$4008, 70
label$4008:
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4010
	.section	.rodata.str1.1
.LC2018:
	.string	"240"
.LC2019:
	.string	"BEQ"
	.data
	.align 32
	.type	label$4010, @object
	.size	label$4010, 70
label$4010:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2019
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_BEQ
	.value	-1
	.quad	label$4012
	.section	.rodata.str1.1
.LC2020:
	.string	"241"
	.data
	.align 32
	.type	label$4012, @object
	.size	label$4012, 70
label$4012:
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2000
	.value	2
	.quad	.LC1738
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4014
	.section	.rodata.str1.1
.LC2021:
	.string	"242"
	.data
	.align 32
	.type	label$4014, @object
	.size	label$4014, 70
label$4014:
	.value	3
	.quad	.LC2021
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4016
	.section	.rodata.str1.1
.LC2022:
	.string	"243"
	.data
	.align 32
	.type	label$4016, @object
	.size	label$4016, 70
label$4016:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4018
	.section	.rodata.str1.1
.LC2023:
	.string	"244"
	.data
	.align 32
	.type	label$4018, @object
	.size	label$4018, 70
label$4018:
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4020
	.section	.rodata.str1.1
.LC2024:
	.string	"245"
	.data
	.align 32
	.type	label$4020, @object
	.size	label$4020, 70
label$4020:
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4022
	.section	.rodata.str1.1
.LC2025:
	.string	"246"
	.data
	.align 32
	.type	label$4022, @object
	.size	label$4022, 70
label$4022:
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC2006
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4024
	.section	.rodata.str1.1
.LC2026:
	.string	"247"
	.data
	.align 32
	.type	label$4024, @object
	.size	label$4024, 70
label$4024:
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4026
	.section	.rodata.str1.1
.LC2027:
	.string	"248"
.LC2028:
	.string	"SED"
	.data
	.align 32
	.type	label$4026, @object
	.size	label$4026, 70
label$4026:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2028
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SED
	.value	-1
	.quad	label$4028
	.section	.rodata.str1.1
.LC2029:
	.string	"249"
	.data
	.align 32
	.type	label$4028, @object
	.size	label$4028, 70
label$4028:
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4030
	.section	.rodata.str1.1
.LC2030:
	.string	"250"
	.data
	.align 32
	.type	label$4030, @object
	.size	label$4030, 70
label$4030:
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4032
	.section	.rodata.str1.1
.LC2031:
	.string	"251"
	.data
	.align 32
	.type	label$4032, @object
	.size	label$4032, 70
label$4032:
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4034
	.section	.rodata.str1.1
.LC2032:
	.string	"252"
	.data
	.align 32
	.type	label$4034, @object
	.size	label$4034, 70
label$4034:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4036
	.section	.rodata.str1.1
.LC2033:
	.string	"253"
	.data
	.align 32
	.type	label$4036, @object
	.size	label$4036, 70
label$4036:
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC2000
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4038
	.section	.rodata.str1.1
.LC2034:
	.string	"254"
	.data
	.align 32
	.type	label$4038, @object
	.size	label$4038, 70
label$4038:
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2006
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4040
	.section	.rodata.str1.1
.LC2035:
	.string	"255"
	.data
	.align 32
	.type	label$4040, @object
	.size	label$4040, 70
label$4040:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1739
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$3151
	.section	.rodata.str1.1
.LC2036:
	.string	"UNK"
	.data
	.align 16
	.type	label$3151, @object
	.size	label$3151, 20
label$3151:
	.value	3
	.quad	.LC2036
	.value	-1
	.quad	label$4042
	.section	.rodata.str1.1
.LC2037:
	.string	"IMP"
	.data
	.align 16
	.type	label$4042, @object
	.size	label$4042, 20
label$4042:
	.value	3
	.quad	.LC2037
	.value	-1
	.quad	label$4044
	.section	.rodata.str1.1
.LC2038:
	.string	"IMM"
	.data
	.align 16
	.type	label$4044, @object
	.size	label$4044, 20
label$4044:
	.value	3
	.quad	.LC2038
	.value	-1
	.quad	label$4046
	.section	.rodata.str1.1
.LC2039:
	.string	"ABS"
	.data
	.align 16
	.type	label$4046, @object
	.size	label$4046, 20
label$4046:
	.value	3
	.quad	.LC2039
	.value	-1
	.quad	label$4048
	.section	.rodata.str1.1
.LC2040:
	.string	"ZERO"
	.data
	.align 16
	.type	label$4048, @object
	.size	label$4048, 20
label$4048:
	.value	4
	.quad	.LC2040
	.value	-1
	.quad	label$4050
	.section	.rodata.str1.1
.LC2041:
	.string	"ZEROX"
	.data
	.align 16
	.type	label$4050, @object
	.size	label$4050, 20
label$4050:
	.value	5
	.quad	.LC2041
	.value	-1
	.quad	label$4052
	.section	.rodata.str1.1
.LC2042:
	.string	"ZEROY"
	.data
	.align 16
	.type	label$4052, @object
	.size	label$4052, 20
label$4052:
	.value	5
	.quad	.LC2042
	.value	-1
	.quad	label$4054
	.section	.rodata.str1.1
.LC2043:
	.string	"ABSX"
	.data
	.align 16
	.type	label$4054, @object
	.size	label$4054, 20
label$4054:
	.value	4
	.quad	.LC2043
	.value	-1
	.quad	label$4056
	.section	.rodata.str1.1
.LC2044:
	.string	"ABSY"
	.data
	.align 16
	.type	label$4056, @object
	.size	label$4056, 20
label$4056:
	.value	4
	.quad	.LC2044
	.value	-1
	.quad	label$4058
	.section	.rodata.str1.1
.LC2045:
	.string	"REL"
	.data
	.align 16
	.type	label$4058, @object
	.size	label$4058, 20
label$4058:
	.value	3
	.quad	.LC2045
	.value	-1
	.quad	label$4060
	.section	.rodata.str1.1
.LC2046:
	.string	"INDX"
	.data
	.align 16
	.type	label$4060, @object
	.size	label$4060, 20
label$4060:
	.value	4
	.quad	.LC2046
	.value	-1
	.quad	label$4062
	.section	.rodata.str1.1
.LC2047:
	.string	"INDY"
	.data
	.align 16
	.type	label$4062, @object
	.size	label$4062, 20
label$4062:
	.value	4
	.quad	.LC2047
	.value	-1
	.quad	label$4064
	.section	.rodata.str1.1
.LC2048:
	.string	"IND"
	.data
	.align 16
	.type	label$4064, @object
	.size	label$4064, 20
label$4064:
	.value	3
	.quad	.LC2048
	.value	-1
	.quad	label$31
	.align 32
	.type	label$31, @object
	.size	label$31, 150
label$31:
	.value	3
	.quad	.LC1935
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1974
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC2013
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1974
	.value	2
	.quad	.LC1749
	.value	-1
	.quad	label$4066
	.align 32
	.type	label$4066, @object
	.size	label$4066, 150
label$4066:
	.value	3
	.quad	.LC2013
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1974
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2013
	.value	2
	.quad	.LC1819
	.value	-1
	.quad	label$4068
	.align 32
	.type	label$4068, @object
	.size	label$4068, 130
label$4068:
	.value	3
	.quad	.LC1969
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1969
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1974
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4070
	.align 32
	.type	label$4070, @object
	.size	label$4070, 170
label$4070:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	-1
	.quad	label$4072
	.align 32
	.type	label$4072, @object
	.size	label$4072, 170
label$4072:
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1853
	.value	-1
	.quad	label$4074
	.align 32
	.type	label$4074, @object
	.size	label$4074, 170
label$4074:
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1948
	.value	-1
	.quad	label$4076
	.align 32
	.type	label$4076, @object
	.size	label$4076, 170
label$4076:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4078
	.align 32
	.type	label$4078, @object
	.size	label$4078, 170
label$4078:
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1830
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4080
	.align 32
	.type	label$4080, @object
	.size	label$4080, 170
label$4080:
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1953
	.value	-1
	.quad	label$4082
	.align 32
	.type	label$4082, @object
	.size	label$4082, 170
label$4082:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1863
	.value	-1
	.quad	label$4084
	.align 32
	.type	label$4084, @object
	.size	label$4084, 170
label$4084:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$4086
	.align 32
	.type	label$4086, @object
	.size	label$4086, 170
label$4086:
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1836
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1789
	.value	2
	.quad	.LC1807
	.value	-1
	.quad	label$4088
	.align 32
	.type	label$4088, @object
	.size	label$4088, 170
label$4088:
	.value	3
	.quad	.LC1872
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1809
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2022
	.value	-1
	.quad	label$4090
	.align 32
	.type	label$4090, @object
	.size	label$4090, 170
label$4090:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	-1
	.quad	label$4092
	.align 32
	.type	label$4092, @object
	.size	label$4092, 170
label$4092:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1894
	.value	-1
	.quad	label$4094
	.align 32
	.type	label$4094, @object
	.size	label$4094, 170
label$4094:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$4096
	.align 32
	.type	label$4096, @object
	.size	label$4096, 170
label$4096:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4098
	.align 32
	.type	label$4098, @object
	.size	label$4098, 170
label$4098:
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4100
	.align 32
	.type	label$4100, @object
	.size	label$4100, 170
label$4100:
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$4102
	.align 32
	.type	label$4102, @object
	.size	label$4102, 170
label$4102:
	.value	2
	.quad	.LC1791
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1760
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$4104
	.align 32
	.type	label$4104, @object
	.size	label$4104, 170
label$4104:
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1966
	.value	-1
	.quad	label$4106
	.align 32
	.type	label$4106, @object
	.size	label$4106, 170
label$4106:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$4108
	.align 32
	.type	label$4108, @object
	.size	label$4108, 170
label$4108:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1999
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4110
	.align 32
	.type	label$4110, @object
	.size	label$4110, 170
label$4110:
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1897
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1895
	.value	2
	.quad	.LC1742
	.value	-1
	.quad	label$4112
	.align 32
	.type	label$4112, @object
	.size	label$4112, 170
label$4112:
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1778
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4114
	.align 32
	.type	label$4114, @object
	.size	label$4114, 170
label$4114:
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4116
	.align 32
	.type	label$4116, @object
	.size	label$4116, 170
label$4116:
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1758
	.value	-1
	.quad	label$4118
	.align 32
	.type	label$4118, @object
	.size	label$4118, 170
label$4118:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4120
	.align 32
	.type	label$4120, @object
	.size	label$4120, 170
label$4120:
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1759
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	-1
	.quad	label$4122
	.align 32
	.type	label$4122, @object
	.size	label$4122, 170
label$4122:
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4124
	.align 32
	.type	label$4124, @object
	.size	label$4124, 170
label$4124:
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1755
	.value	-1
	.quad	label$4126
	.align 32
	.type	label$4126, @object
	.size	label$4126, 170
label$4126:
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4128
	.align 32
	.type	label$4128, @object
	.size	label$4128, 170
label$4128:
	.value	3
	.quad	.LC1963
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$4130
	.align 32
	.type	label$4130, @object
	.size	label$4130, 170
label$4130:
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$4132
	.align 32
	.type	label$4132, @object
	.size	label$4132, 170
label$4132:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$4134
	.align 32
	.type	label$4134, @object
	.size	label$4134, 170
label$4134:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	-1
	.quad	label$4136
	.align 32
	.type	label$4136, @object
	.size	label$4136, 170
label$4136:
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1746
	.value	-1
	.quad	label$4138
	.align 32
	.type	label$4138, @object
	.size	label$4138, 170
label$4138:
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$4140
	.align 32
	.type	label$4140, @object
	.size	label$4140, 170
label$4140:
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4142
	.align 32
	.type	label$4142, @object
	.size	label$4142, 170
label$4142:
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1951
	.value	-1
	.quad	label$4144
	.align 32
	.type	label$4144, @object
	.size	label$4144, 170
label$4144:
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$4146
	.align 32
	.type	label$4146, @object
	.size	label$4146, 170
label$4146:
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$4148
	.align 32
	.type	label$4148, @object
	.size	label$4148, 170
label$4148:
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4150
	.align 32
	.type	label$4150, @object
	.size	label$4150, 170
label$4150:
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$4152
	.align 32
	.type	label$4152, @object
	.size	label$4152, 170
label$4152:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	-1
	.quad	label$4154
	.align 32
	.type	label$4154, @object
	.size	label$4154, 170
label$4154:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4156
	.align 32
	.type	label$4156, @object
	.size	label$4156, 170
label$4156:
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$4158
	.align 32
	.type	label$4158, @object
	.size	label$4158, 170
label$4158:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$4160
	.align 32
	.type	label$4160, @object
	.size	label$4160, 170
label$4160:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC2001
	.value	-1
	.quad	label$4162
	.align 32
	.type	label$4162, @object
	.size	label$4162, 170
label$4162:
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1882
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1877
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$4164
	.align 32
	.type	label$4164, @object
	.size	label$4164, 170
label$4164:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1756
	.value	2
	.quad	.LC1780
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1774
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1891
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1888
	.value	-1
	.quad	label$4166
	.align 32
	.type	label$4166, @object
	.size	label$4166, 170
label$4166:
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1882
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$4168
	.align 32
	.type	label$4168, @object
	.size	label$4168, 170
label$4168:
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4170
	.align 32
	.type	label$4170, @object
	.size	label$4170, 170
label$4170:
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	-1
	.quad	label$4172
	.align 32
	.type	label$4172, @object
	.size	label$4172, 170
label$4172:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1867
	.value	-1
	.quad	label$4174
	.align 32
	.type	label$4174, @object
	.size	label$4174, 170
label$4174:
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1740
	.value	-1
	.quad	label$4176
	.align 32
	.type	label$4176, @object
	.size	label$4176, 170
label$4176:
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1875
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2011
	.value	-1
	.quad	label$4178
	.align 32
	.type	label$4178, @object
	.size	label$4178, 170
label$4178:
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1875
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1902
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1901
	.value	-1
	.quad	label$4180
	.align 32
	.type	label$4180, @object
	.size	label$4180, 170
label$4180:
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1879
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4182
	.align 32
	.type	label$4182, @object
	.size	label$4182, 170
label$4182:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1795
	.value	-1
	.quad	label$4184
	.align 32
	.type	label$4184, @object
	.size	label$4184, 170
label$4184:
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1865
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1911
	.value	-1
	.quad	label$4186
	.align 32
	.type	label$4186, @object
	.size	label$4186, 170
label$4186:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4188
	.align 32
	.type	label$4188, @object
	.size	label$4188, 170
label$4188:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2017
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4190
	.align 32
	.type	label$4190, @object
	.size	label$4190, 170
label$4190:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1746
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1895
	.value	2
	.quad	.LC1747
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4192
	.align 32
	.type	label$4192, @object
	.size	label$4192, 170
label$4192:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1883
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1883
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$4194
	.align 32
	.type	label$4194, @object
	.size	label$4194, 170
label$4194:
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1864
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4196
	.align 32
	.type	label$4196, @object
	.size	label$4196, 170
label$4196:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2033
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2032
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1755
	.value	-1
	.quad	label$4198
	.align 32
	.type	label$4198, @object
	.size	label$4198, 170
label$4198:
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1751
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1791
	.value	-1
	.quad	label$4200
	.align 32
	.type	label$4200, @object
	.size	label$4200, 170
label$4200:
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$4202
	.align 32
	.type	label$4202, @object
	.size	label$4202, 170
label$4202:
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1864
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$4204
	.align 32
	.type	label$4204, @object
	.size	label$4204, 170
label$4204:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1791
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4206
	.align 32
	.type	label$4206, @object
	.size	label$4206, 170
label$4206:
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC2003
	.value	-1
	.quad	label$4208
	.align 32
	.type	label$4208, @object
	.size	label$4208, 170
label$4208:
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4210
	.align 32
	.type	label$4210, @object
	.size	label$4210, 170
label$4210:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$4212
	.align 32
	.type	label$4212, @object
	.size	label$4212, 170
label$4212:
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1903
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$4214
	.align 32
	.type	label$4214, @object
	.size	label$4214, 170
label$4214:
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1788
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1806
	.value	-1
	.quad	label$4216
	.align 32
	.type	label$4216, @object
	.size	label$4216, 170
label$4216:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1786
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1788
	.value	2
	.quad	.LC1816
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$4218
	.align 32
	.type	label$4218, @object
	.size	label$4218, 170
label$4218:
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1836
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4220
	.align 32
	.type	label$4220, @object
	.size	label$4220, 170
label$4220:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$4222
	.align 32
	.type	label$4222, @object
	.size	label$4222, 170
label$4222:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$4224
	.align 32
	.type	label$4224, @object
	.size	label$4224, 170
label$4224:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4226
	.align 32
	.type	label$4226, @object
	.size	label$4226, 170
label$4226:
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1755
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1755
	.value	-1
	.quad	label$4228
	.align 32
	.type	label$4228, @object
	.size	label$4228, 170
label$4228:
	.value	2
	.quad	.LC1756
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1981
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1791
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4230
	.align 32
	.type	label$4230, @object
	.size	label$4230, 170
label$4230:
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1755
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	-1
	.quad	label$4232
	.align 32
	.type	label$4232, @object
	.size	label$4232, 170
label$4232:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1901
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4234
	.align 32
	.type	label$4234, @object
	.size	label$4234, 170
label$4234:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1898
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1891
	.value	-1
	.quad	label$4236
	.align 32
	.type	label$4236, @object
	.size	label$4236, 170
label$4236:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1894
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1740
	.value	-1
	.quad	label$4238
	.align 32
	.type	label$4238, @object
	.size	label$4238, 170
label$4238:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1889
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$4240
	.align 32
	.type	label$4240, @object
	.size	label$4240, 170
label$4240:
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$4242
	.align 32
	.type	label$4242, @object
	.size	label$4242, 170
label$4242:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1983
	.value	-1
	.quad	label$4244
	.align 32
	.type	label$4244, @object
	.size	label$4244, 170
label$4244:
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4246
	.align 32
	.type	label$4246, @object
	.size	label$4246, 170
label$4246:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1889
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$4248
	.align 32
	.type	label$4248, @object
	.size	label$4248, 170
label$4248:
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1985
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$4250
	.align 32
	.type	label$4250, @object
	.size	label$4250, 170
label$4250:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1978
	.value	-1
	.quad	label$4252
	.align 32
	.type	label$4252, @object
	.size	label$4252, 170
label$4252:
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1868
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1869
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1868
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$4254
	.align 32
	.type	label$4254, @object
	.size	label$4254, 170
label$4254:
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4256
	.align 32
	.type	label$4256, @object
	.size	label$4256, 170
label$4256:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1902
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1888
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4258
	.align 32
	.type	label$4258, @object
	.size	label$4258, 170
label$4258:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2011
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1737
	.value	-1
	.quad	label$4260
	.align 32
	.type	label$4260, @object
	.size	label$4260, 170
label$4260:
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$4262
	.align 32
	.type	label$4262, @object
	.size	label$4262, 170
label$4262:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$4264
	.align 32
	.type	label$4264, @object
	.size	label$4264, 170
label$4264:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1902
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$4266
	.align 32
	.type	label$4266, @object
	.size	label$4266, 170
label$4266:
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$4268
	.align 32
	.type	label$4268, @object
	.size	label$4268, 170
label$4268:
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1987
	.value	-1
	.quad	label$4270
	.align 32
	.type	label$4270, @object
	.size	label$4270, 170
label$4270:
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1800
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$4272
	.align 32
	.type	label$4272, @object
	.size	label$4272, 170
label$4272:
	.value	3
	.quad	.LC1860
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4274
	.align 32
	.type	label$4274, @object
	.size	label$4274, 170
label$4274:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4276
	.align 32
	.type	label$4276, @object
	.size	label$4276, 170
label$4276:
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1995
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4278
	.align 32
	.type	label$4278, @object
	.size	label$4278, 170
label$4278:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1766
	.value	-1
	.quad	label$4280
	.align 32
	.type	label$4280, @object
	.size	label$4280, 170
label$4280:
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1937
	.value	-1
	.quad	label$4282
	.align 32
	.type	label$4282, @object
	.size	label$4282, 170
label$4282:
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2011
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1984
	.value	-1
	.quad	label$4284
	.align 32
	.type	label$4284, @object
	.size	label$4284, 170
label$4284:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$4286
	.align 32
	.type	label$4286, @object
	.size	label$4286, 170
label$4286:
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1902
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$4288
	.align 32
	.type	label$4288, @object
	.size	label$4288, 170
label$4288:
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1945
	.value	-1
	.quad	label$4290
	.align 32
	.type	label$4290, @object
	.size	label$4290, 170
label$4290:
	.value	3
	.quad	.LC1990
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1985
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$4292
	.align 32
	.type	label$4292, @object
	.size	label$4292, 170
label$4292:
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1983
	.value	-1
	.quad	label$4294
	.align 32
	.type	label$4294, @object
	.size	label$4294, 170
label$4294:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$4296
	.align 32
	.type	label$4296, @object
	.size	label$4296, 170
label$4296:
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4298
	.align 32
	.type	label$4298, @object
	.size	label$4298, 170
label$4298:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	-1
	.quad	label$4300
	.align 32
	.type	label$4300, @object
	.size	label$4300, 170
label$4300:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4302
	.align 32
	.type	label$4302, @object
	.size	label$4302, 170
label$4302:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1781
	.value	-1
	.quad	label$4304
	.align 32
	.type	label$4304, @object
	.size	label$4304, 170
label$4304:
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1864
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4306
	.align 32
	.type	label$4306, @object
	.size	label$4306, 170
label$4306:
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1964
	.value	-1
	.quad	label$4308
	.align 32
	.type	label$4308, @object
	.size	label$4308, 170
label$4308:
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1984
	.value	-1
	.quad	label$4310
	.align 32
	.type	label$4310, @object
	.size	label$4310, 170
label$4310:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4312
	.align 32
	.type	label$4312, @object
	.size	label$4312, 170
label$4312:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4314
	.align 32
	.type	label$4314, @object
	.size	label$4314, 170
label$4314:
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4316
	.align 32
	.type	label$4316, @object
	.size	label$4316, 170
label$4316:
	.value	2
	.quad	.LC1759
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	-1
	.quad	label$4318
	.align 32
	.type	label$4318, @object
	.size	label$4318, 170
label$4318:
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1974
	.value	-1
	.quad	label$4320
	.align 32
	.type	label$4320, @object
	.size	label$4320, 170
label$4320:
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4322
	.align 32
	.type	label$4322, @object
	.size	label$4322, 170
label$4322:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1749
	.value	-1
	.quad	label$4324
	.align 32
	.type	label$4324, @object
	.size	label$4324, 170
label$4324:
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$4326
	.align 32
	.type	label$4326, @object
	.size	label$4326, 170
label$4326:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1985
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	-1
	.quad	label$4328
	.align 32
	.type	label$4328, @object
	.size	label$4328, 170
label$4328:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$4330
	.align 32
	.type	label$4330, @object
	.size	label$4330, 170
label$4330:
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$4332
	.align 32
	.type	label$4332, @object
	.size	label$4332, 170
label$4332:
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	-1
	.quad	label$4334
	.align 32
	.type	label$4334, @object
	.size	label$4334, 170
label$4334:
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$4336
	.align 32
	.type	label$4336, @object
	.size	label$4336, 170
label$4336:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$4338
	.align 32
	.type	label$4338, @object
	.size	label$4338, 170
label$4338:
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1807
	.value	-1
	.quad	label$4340
	.align 32
	.type	label$4340, @object
	.size	label$4340, 170
label$4340:
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	-1
	.quad	label$4342
	.align 32
	.type	label$4342, @object
	.size	label$4342, 170
label$4342:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$4344
	.align 32
	.type	label$4344, @object
	.size	label$4344, 170
label$4344:
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$4346
	.align 32
	.type	label$4346, @object
	.size	label$4346, 170
label$4346:
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4348
	.align 32
	.type	label$4348, @object
	.size	label$4348, 170
label$4348:
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4350
	.align 32
	.type	label$4350, @object
	.size	label$4350, 170
label$4350:
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$4352
	.align 32
	.type	label$4352, @object
	.size	label$4352, 170
label$4352:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1914
	.value	2
	.quad	.LC1760
	.value	-1
	.quad	label$4354
	.align 32
	.type	label$4354, @object
	.size	label$4354, 170
label$4354:
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$4356
	.align 32
	.type	label$4356, @object
	.size	label$4356, 170
label$4356:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$4358
	.align 32
	.type	label$4358, @object
	.size	label$4358, 170
label$4358:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$4360
	.align 32
	.type	label$4360, @object
	.size	label$4360, 170
label$4360:
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4362
	.align 32
	.type	label$4362, @object
	.size	label$4362, 170
label$4362:
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2020
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4364
	.align 32
	.type	label$4364, @object
	.size	label$4364, 170
label$4364:
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	-1
	.quad	label$4366
	.align 32
	.type	label$4366, @object
	.size	label$4366, 170
label$4366:
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2031
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4368
	.align 32
	.type	label$4368, @object
	.size	label$4368, 170
label$4368:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4370
	.align 32
	.type	label$4370, @object
	.size	label$4370, 170
label$4370:
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$4372
	.align 32
	.type	label$4372, @object
	.size	label$4372, 170
label$4372:
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1991
	.value	-1
	.quad	label$4374
	.align 32
	.type	label$4374, @object
	.size	label$4374, 170
label$4374:
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1972
	.value	-1
	.quad	label$4376
	.align 32
	.type	label$4376, @object
	.size	label$4376, 170
label$4376:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1945
	.value	-1
	.quad	label$4378
	.align 32
	.type	label$4378, @object
	.size	label$4378, 170
label$4378:
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$4380
	.align 32
	.type	label$4380, @object
	.size	label$4380, 170
label$4380:
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1937
	.value	-1
	.quad	label$4382
	.align 32
	.type	label$4382, @object
	.size	label$4382, 170
label$4382:
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1889
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4384
	.align 32
	.type	label$4384, @object
	.size	label$4384, 170
label$4384:
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2024
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4386
	.align 32
	.type	label$4386, @object
	.size	label$4386, 170
label$4386:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4388
	.align 32
	.type	label$4388, @object
	.size	label$4388, 170
label$4388:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1889
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4390
	.align 32
	.type	label$4390, @object
	.size	label$4390, 170
label$4390:
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1889
	.value	-1
	.quad	label$4392
	.align 32
	.type	label$4392, @object
	.size	label$4392, 170
label$4392:
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2024
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1976
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1981
	.value	-1
	.quad	label$4394
	.align 32
	.type	label$4394, @object
	.size	label$4394, 170
label$4394:
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2023
	.value	-1
	.quad	label$4396
	.align 32
	.type	label$4396, @object
	.size	label$4396, 170
label$4396:
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1976
	.value	-1
	.quad	label$4398
	.align 32
	.type	label$4398, @object
	.size	label$4398, 170
label$4398:
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1888
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4400
	.align 32
	.type	label$4400, @object
	.size	label$4400, 170
label$4400:
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1888
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	-1
	.quad	label$4402
	.align 32
	.type	label$4402, @object
	.size	label$4402, 170
label$4402:
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4404
	.align 32
	.type	label$4404, @object
	.size	label$4404, 170
label$4404:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$4406
	.align 32
	.type	label$4406, @object
	.size	label$4406, 170
label$4406:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1974
	.value	-1
	.quad	label$4408
	.align 32
	.type	label$4408, @object
	.size	label$4408, 170
label$4408:
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4410
	.align 32
	.type	label$4410, @object
	.size	label$4410, 170
label$4410:
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1976
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$4412
	.align 32
	.type	label$4412, @object
	.size	label$4412, 170
label$4412:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1751
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4414
	.align 32
	.type	label$4414, @object
	.size	label$4414, 170
label$4414:
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$4416
	.align 32
	.type	label$4416, @object
	.size	label$4416, 170
label$4416:
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1996
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1898
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4418
	.align 32
	.type	label$4418, @object
	.size	label$4418, 170
label$4418:
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1790
	.value	-1
	.quad	label$4420
	.align 32
	.type	label$4420, @object
	.size	label$4420, 170
label$4420:
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1892
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4422
	.align 32
	.type	label$4422, @object
	.size	label$4422, 170
label$4422:
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4424
	.align 32
	.type	label$4424, @object
	.size	label$4424, 170
label$4424:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1894
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1894
	.value	-1
	.quad	label$4426
	.align 32
	.type	label$4426, @object
	.size	label$4426, 170
label$4426:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4428
	.align 32
	.type	label$4428, @object
	.size	label$4428, 170
label$4428:
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1891
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1868
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$4430
	.align 32
	.type	label$4430, @object
	.size	label$4430, 170
label$4430:
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1976
	.value	-1
	.quad	label$4432
	.align 32
	.type	label$4432, @object
	.size	label$4432, 170
label$4432:
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1901
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$4434
	.align 32
	.type	label$4434, @object
	.size	label$4434, 170
label$4434:
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC2013
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4436
	.align 32
	.type	label$4436, @object
	.size	label$4436, 170
label$4436:
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC2013
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1869
	.value	-1
	.quad	label$4438
	.align 32
	.type	label$4438, @object
	.size	label$4438, 170
label$4438:
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1888
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1830
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1788
	.value	2
	.quad	.LC1834
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$4440
	.align 32
	.type	label$4440, @object
	.size	label$4440, 170
label$4440:
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1789
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1791
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1828
	.value	-1
	.quad	label$4442
	.align 32
	.type	label$4442, @object
	.size	label$4442, 170
label$4442:
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1794
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1816
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1778
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1780
	.value	2
	.quad	.LC1781
	.value	2
	.quad	.LC1795
	.value	2
	.quad	.LC1801
	.value	-1
	.quad	label$4444
	.align 32
	.type	label$4444, @object
	.size	label$4444, 170
label$4444:
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1836
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1796
	.value	2
	.quad	.LC1748
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1798
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1782
	.value	2
	.quad	.LC1785
	.value	2
	.quad	.LC1839
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1786
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1824
	.value	-1
	.quad	label$4446
	.align 32
	.type	label$4446, @object
	.size	label$4446, 170
label$4446:
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1983
	.value	-1
	.quad	label$4448
	.align 32
	.type	label$4448, @object
	.size	label$4448, 170
label$4448:
	.value	3
	.quad	.LC1965
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$4450
	.align 32
	.type	label$4450, @object
	.size	label$4450, 170
label$4450:
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1835
	.value	-1
	.quad	label$4452
	.align 32
	.type	label$4452, @object
	.size	label$4452, 170
label$4452:
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1764
	.value	2
	.quad	.LC1839
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4454
	.align 32
	.type	label$4454, @object
	.size	label$4454, 170
label$4454:
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$4456
	.align 32
	.type	label$4456, @object
	.size	label$4456, 170
label$4456:
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1941
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1957
	.value	-1
	.quad	label$4458
	.align 32
	.type	label$4458, @object
	.size	label$4458, 170
label$4458:
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1956
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1799
	.value	-1
	.quad	label$4460
	.align 32
	.type	label$4460, @object
	.size	label$4460, 170
label$4460:
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1996
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1839
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4462
	.align 32
	.type	label$4462, @object
	.size	label$4462, 170
label$4462:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4464
	.align 32
	.type	label$4464, @object
	.size	label$4464, 170
label$4464:
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$4466
	.align 32
	.type	label$4466, @object
	.size	label$4466, 170
label$4466:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1901
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1780
	.value	-1
	.quad	label$4468
	.align 32
	.type	label$4468, @object
	.size	label$4468, 170
label$4468:
	.value	3
	.quad	.LC1901
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1901
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$4470
	.align 32
	.type	label$4470, @object
	.size	label$4470, 170
label$4470:
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1752
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1917
	.value	2
	.quad	.LC1756
	.value	2
	.quad	.LC1748
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	2
	.quad	.LC1747
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1760
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$4472
	.align 32
	.type	label$4472, @object
	.size	label$4472, 170
label$4472:
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1755
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1916
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1751
	.value	2
	.quad	.LC1747
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1902
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1742
	.value	-1
	.quad	label$4474
	.align 32
	.type	label$4474, @object
	.size	label$4474, 170
label$4474:
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1757
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$4476
	.align 32
	.type	label$4476, @object
	.size	label$4476, 170
label$4476:
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4478
	.align 32
	.type	label$4478, @object
	.size	label$4478, 170
label$4478:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1913
	.value	2
	.quad	.LC1791
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$4480
	.align 32
	.type	label$4480, @object
	.size	label$4480, 170
label$4480:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4482
	.align 32
	.type	label$4482, @object
	.size	label$4482, 170
label$4482:
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1732
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$4484
	.align 32
	.type	label$4484, @object
	.size	label$4484, 170
label$4484:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1831
	.value	-1
	.quad	label$4486
	.align 32
	.type	label$4486, @object
	.size	label$4486, 170
label$4486:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$4488
	.align 32
	.type	label$4488, @object
	.size	label$4488, 170
label$4488:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1904
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1904
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1924
	.value	-1
	.quad	label$4490
	.align 32
	.type	label$4490, @object
	.size	label$4490, 170
label$4490:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4492
	.align 32
	.type	label$4492, @object
	.size	label$4492, 170
label$4492:
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$4494
	.align 32
	.type	label$4494, @object
	.size	label$4494, 170
label$4494:
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$4496
	.align 32
	.type	label$4496, @object
	.size	label$4496, 170
label$4496:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4498
	.align 32
	.type	label$4498, @object
	.size	label$4498, 170
label$4498:
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1976
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4500
	.align 32
	.type	label$4500, @object
	.size	label$4500, 170
label$4500:
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$4502
	.align 32
	.type	label$4502, @object
	.size	label$4502, 170
label$4502:
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1996
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4504
	.align 32
	.type	label$4504, @object
	.size	label$4504, 170
label$4504:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$4506
	.align 32
	.type	label$4506, @object
	.size	label$4506, 170
label$4506:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1779
	.value	-1
	.quad	label$4508
	.align 32
	.type	label$4508, @object
	.size	label$4508, 170
label$4508:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4510
	.align 32
	.type	label$4510, @object
	.size	label$4510, 170
label$4510:
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$4512
	.align 32
	.type	label$4512, @object
	.size	label$4512, 170
label$4512:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1904
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$4514
	.align 32
	.type	label$4514, @object
	.size	label$4514, 170
label$4514:
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	-1
	.quad	label$4516
	.align 32
	.type	label$4516, @object
	.size	label$4516, 170
label$4516:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1800
	.value	-1
	.quad	label$4518
	.align 32
	.type	label$4518, @object
	.size	label$4518, 170
label$4518:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$4520
	.align 32
	.type	label$4520, @object
	.size	label$4520, 170
label$4520:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2031
	.value	-1
	.quad	label$4522
	.align 32
	.type	label$4522, @object
	.size	label$4522, 170
label$4522:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	-1
	.quad	label$4524
	.align 32
	.type	label$4524, @object
	.size	label$4524, 170
label$4524:
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4526
	.align 32
	.type	label$4526, @object
	.size	label$4526, 170
label$4526:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4528
	.align 32
	.type	label$4528, @object
	.size	label$4528, 170
label$4528:
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1976
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$4530
	.align 32
	.type	label$4530, @object
	.size	label$4530, 170
label$4530:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1976
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$4532
	.align 32
	.type	label$4532, @object
	.size	label$4532, 170
label$4532:
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1822
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$4534
	.align 32
	.type	label$4534, @object
	.size	label$4534, 170
label$4534:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4536
	.align 32
	.type	label$4536, @object
	.size	label$4536, 170
label$4536:
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4538
	.align 32
	.type	label$4538, @object
	.size	label$4538, 170
label$4538:
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1976
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4540
	.align 32
	.type	label$4540, @object
	.size	label$4540, 170
label$4540:
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$4542
	.align 32
	.type	label$4542, @object
	.size	label$4542, 170
label$4542:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4544
	.align 32
	.type	label$4544, @object
	.size	label$4544, 170
label$4544:
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1758
	.value	-1
	.quad	label$4546
	.align 32
	.type	label$4546, @object
	.size	label$4546, 170
label$4546:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1944
	.value	-1
	.quad	label$4548
	.align 32
	.type	label$4548, @object
	.size	label$4548, 170
label$4548:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$4550
	.align 32
	.type	label$4550, @object
	.size	label$4550, 170
label$4550:
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$4552
	.align 32
	.type	label$4552, @object
	.size	label$4552, 170
label$4552:
	.value	2
	.quad	.LC1759
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1908
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1915
	.value	-1
	.quad	label$4554
	.align 32
	.type	label$4554, @object
	.size	label$4554, 170
label$4554:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1916
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	-1
	.quad	label$4556
	.align 32
	.type	label$4556, @object
	.size	label$4556, 170
label$4556:
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1920
	.value	-1
	.quad	label$4558
	.align 32
	.type	label$4558, @object
	.size	label$4558, 170
label$4558:
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1903
	.value	-1
	.quad	label$4560
	.align 32
	.type	label$4560, @object
	.size	label$4560, 170
label$4560:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1822
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4562
	.align 32
	.type	label$4562, @object
	.size	label$4562, 170
label$4562:
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$4564
	.align 32
	.type	label$4564, @object
	.size	label$4564, 170
label$4564:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4566
	.align 32
	.type	label$4566, @object
	.size	label$4566, 170
label$4566:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC2017
	.value	-1
	.quad	label$4568
	.align 32
	.type	label$4568, @object
	.size	label$4568, 170
label$4568:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1913
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1914
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1777
	.value	-1
	.quad	label$4570
	.align 32
	.type	label$4570, @object
	.size	label$4570, 170
label$4570:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1913
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1908
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4572
	.align 32
	.type	label$4572, @object
	.size	label$4572, 170
label$4572:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$4574
	.align 32
	.type	label$4574, @object
	.size	label$4574, 170
label$4574:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1779
	.value	-1
	.quad	label$4576
	.align 32
	.type	label$4576, @object
	.size	label$4576, 170
label$4576:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4578
	.align 32
	.type	label$4578, @object
	.size	label$4578, 170
label$4578:
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1759
	.value	-1
	.quad	label$4580
	.align 32
	.type	label$4580, @object
	.size	label$4580, 170
label$4580:
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$4582
	.align 32
	.type	label$4582, @object
	.size	label$4582, 170
label$4582:
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1860
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1896
	.value	-1
	.quad	label$4584
	.align 32
	.type	label$4584, @object
	.size	label$4584, 170
label$4584:
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1916
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2023
	.value	-1
	.quad	label$4586
	.align 32
	.type	label$4586, @object
	.size	label$4586, 170
label$4586:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1916
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$4588
	.align 32
	.type	label$4588, @object
	.size	label$4588, 170
label$4588:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1911
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4590
	.align 32
	.type	label$4590, @object
	.size	label$4590, 170
label$4590:
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC2017
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$4592
	.align 32
	.type	label$4592, @object
	.size	label$4592, 170
label$4592:
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$4594
	.align 32
	.type	label$4594, @object
	.size	label$4594, 170
label$4594:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$4596
	.align 32
	.type	label$4596, @object
	.size	label$4596, 170
label$4596:
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4598
	.align 32
	.type	label$4598, @object
	.size	label$4598, 170
label$4598:
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1914
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1913
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4600
	.align 32
	.type	label$4600, @object
	.size	label$4600, 170
label$4600:
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1914
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1907
	.value	-1
	.quad	label$4602
	.align 32
	.type	label$4602, @object
	.size	label$4602, 170
label$4602:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4604
	.align 32
	.type	label$4604, @object
	.size	label$4604, 170
label$4604:
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1782
	.value	-1
	.quad	label$4606
	.align 32
	.type	label$4606, @object
	.size	label$4606, 170
label$4606:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$4608
	.align 32
	.type	label$4608, @object
	.size	label$4608, 170
label$4608:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$4610
	.align 32
	.type	label$4610, @object
	.size	label$4610, 170
label$4610:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$4612
	.align 32
	.type	label$4612, @object
	.size	label$4612, 170
label$4612:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$4614
	.align 32
	.type	label$4614, @object
	.size	label$4614, 170
label$4614:
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$4616
	.align 32
	.type	label$4616, @object
	.size	label$4616, 170
label$4616:
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1968
	.value	-1
	.quad	label$4618
	.align 32
	.type	label$4618, @object
	.size	label$4618, 170
label$4618:
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1950
	.value	-1
	.quad	label$4620
	.align 32
	.type	label$4620, @object
	.size	label$4620, 170
label$4620:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$4622
	.align 32
	.type	label$4622, @object
	.size	label$4622, 170
label$4622:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1907
	.value	-1
	.quad	label$4624
	.align 32
	.type	label$4624, @object
	.size	label$4624, 170
label$4624:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1907
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4626
	.align 32
	.type	label$4626, @object
	.size	label$4626, 170
label$4626:
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$4628
	.align 32
	.type	label$4628, @object
	.size	label$4628, 170
label$4628:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1907
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1751
	.value	-1
	.quad	label$4630
	.align 32
	.type	label$4630, @object
	.size	label$4630, 170
label$4630:
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$4632
	.align 32
	.type	label$4632, @object
	.size	label$4632, 170
label$4632:
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1907
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1803
	.value	-1
	.quad	label$4634
	.align 32
	.type	label$4634, @object
	.size	label$4634, 170
label$4634:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4636
	.align 32
	.type	label$4636, @object
	.size	label$4636, 170
label$4636:
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4638
	.align 32
	.type	label$4638, @object
	.size	label$4638, 170
label$4638:
	.value	3
	.quad	.LC2021
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4640
	.align 32
	.type	label$4640, @object
	.size	label$4640, 170
label$4640:
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1892
	.value	-1
	.quad	label$4642
	.align 32
	.type	label$4642, @object
	.size	label$4642, 170
label$4642:
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4644
	.align 32
	.type	label$4644, @object
	.size	label$4644, 170
label$4644:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$4646
	.align 32
	.type	label$4646, @object
	.size	label$4646, 170
label$4646:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$4648
	.align 32
	.type	label$4648, @object
	.size	label$4648, 170
label$4648:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4650
	.align 32
	.type	label$4650, @object
	.size	label$4650, 170
label$4650:
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4652
	.align 32
	.type	label$4652, @object
	.size	label$4652, 170
label$4652:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4654
	.align 32
	.type	label$4654, @object
	.size	label$4654, 170
label$4654:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2026
	.value	-1
	.quad	label$4656
	.align 32
	.type	label$4656, @object
	.size	label$4656, 170
label$4656:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$4658
	.align 32
	.type	label$4658, @object
	.size	label$4658, 170
label$4658:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$4660
	.align 32
	.type	label$4660, @object
	.size	label$4660, 170
label$4660:
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1911
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$4662
	.align 32
	.type	label$4662, @object
	.size	label$4662, 170
label$4662:
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1722
	.value	-1
	.quad	label$4664
	.align 32
	.type	label$4664, @object
	.size	label$4664, 170
label$4664:
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4666
	.align 32
	.type	label$4666, @object
	.size	label$4666, 170
label$4666:
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2021
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4668
	.align 32
	.type	label$4668, @object
	.size	label$4668, 170
label$4668:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4670
	.align 32
	.type	label$4670, @object
	.size	label$4670, 170
label$4670:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC2030
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4672
	.align 32
	.type	label$4672, @object
	.size	label$4672, 170
label$4672:
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4674
	.align 32
	.type	label$4674, @object
	.size	label$4674, 170
label$4674:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	-1
	.quad	label$4676
	.align 32
	.type	label$4676, @object
	.size	label$4676, 170
label$4676:
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1833
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1833
	.value	-1
	.quad	label$4678
	.align 32
	.type	label$4678, @object
	.size	label$4678, 170
label$4678:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1857
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1857
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4680
	.align 32
	.type	label$4680, @object
	.size	label$4680, 170
label$4680:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1833
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1955
	.value	-1
	.quad	label$4682
	.align 32
	.type	label$4682, @object
	.size	label$4682, 170
label$4682:
	.value	2
	.quad	.LC1833
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1857
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4684
	.align 32
	.type	label$4684, @object
	.size	label$4684, 170
label$4684:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4686
	.align 32
	.type	label$4686, @object
	.size	label$4686, 170
label$4686:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$4688
	.align 32
	.type	label$4688, @object
	.size	label$4688, 170
label$4688:
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$4690
	.align 32
	.type	label$4690, @object
	.size	label$4690, 170
label$4690:
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1833
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1915
	.value	-1
	.quad	label$4692
	.align 32
	.type	label$4692, @object
	.size	label$4692, 170
label$4692:
	.value	3
	.quad	.LC1857
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4694
	.align 32
	.type	label$4694, @object
	.size	label$4694, 170
label$4694:
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4696
	.align 32
	.type	label$4696, @object
	.size	label$4696, 170
label$4696:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1938
	.value	-1
	.quad	label$4698
	.align 32
	.type	label$4698, @object
	.size	label$4698, 170
label$4698:
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4700
	.align 32
	.type	label$4700, @object
	.size	label$4700, 170
label$4700:
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4702
	.align 32
	.type	label$4702, @object
	.size	label$4702, 170
label$4702:
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	-1
	.quad	label$4704
	.align 32
	.type	label$4704, @object
	.size	label$4704, 170
label$4704:
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4706
	.align 32
	.type	label$4706, @object
	.size	label$4706, 170
label$4706:
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$4708
	.align 32
	.type	label$4708, @object
	.size	label$4708, 170
label$4708:
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$4710
	.align 32
	.type	label$4710, @object
	.size	label$4710, 170
label$4710:
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1964
	.value	-1
	.quad	label$4712
	.align 32
	.type	label$4712, @object
	.size	label$4712, 170
label$4712:
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC2017
	.value	-1
	.quad	label$4714
	.align 32
	.type	label$4714, @object
	.size	label$4714, 170
label$4714:
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1908
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1903
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1927
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4716
	.align 32
	.type	label$4716, @object
	.size	label$4716, 170
label$4716:
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2003
	.value	-1
	.quad	label$4718
	.align 32
	.type	label$4718, @object
	.size	label$4718, 170
label$4718:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1906
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1905
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1905
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4720
	.align 32
	.type	label$4720, @object
	.size	label$4720, 170
label$4720:
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1913
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	-1
	.quad	label$4722
	.align 32
	.type	label$4722, @object
	.size	label$4722, 170
label$4722:
	.value	3
	.quad	.LC1914
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1916
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1889
	.value	-1
	.quad	label$4724
	.align 32
	.type	label$4724, @object
	.size	label$4724, 170
label$4724:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4726
	.align 32
	.type	label$4726, @object
	.size	label$4726, 170
label$4726:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$4728
	.align 32
	.type	label$4728, @object
	.size	label$4728, 170
label$4728:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1963
	.value	-1
	.quad	label$4730
	.align 32
	.type	label$4730, @object
	.size	label$4730, 170
label$4730:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$4732
	.align 32
	.type	label$4732, @object
	.size	label$4732, 170
label$4732:
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$4734
	.align 32
	.type	label$4734, @object
	.size	label$4734, 170
label$4734:
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2015
	.value	-1
	.quad	label$4736
	.align 32
	.type	label$4736, @object
	.size	label$4736, 170
label$4736:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$4738
	.align 32
	.type	label$4738, @object
	.size	label$4738, 170
label$4738:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	-1
	.quad	label$4740
	.align 32
	.type	label$4740, @object
	.size	label$4740, 170
label$4740:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1787
	.value	-1
	.quad	label$4742
	.align 32
	.type	label$4742, @object
	.size	label$4742, 170
label$4742:
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	-1
	.quad	label$4744
	.align 32
	.type	label$4744, @object
	.size	label$4744, 170
label$4744:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1937
	.value	-1
	.quad	label$4746
	.align 32
	.type	label$4746, @object
	.size	label$4746, 170
label$4746:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1974
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1871
	.value	-1
	.quad	label$4748
	.align 32
	.type	label$4748, @object
	.size	label$4748, 170
label$4748:
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	-1
	.quad	label$4750
	.align 32
	.type	label$4750, @object
	.size	label$4750, 170
label$4750:
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2026
	.value	-1
	.quad	label$4752
	.align 32
	.type	label$4752, @object
	.size	label$4752, 170
label$4752:
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1776
	.value	-1
	.quad	label$4754
	.align 32
	.type	label$4754, @object
	.size	label$4754, 170
label$4754:
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	-1
	.quad	label$4756
	.align 32
	.type	label$4756, @object
	.size	label$4756, 170
label$4756:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$4758
	.align 32
	.type	label$4758, @object
	.size	label$4758, 170
label$4758:
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$4760
	.align 32
	.type	label$4760, @object
	.size	label$4760, 170
label$4760:
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1964
	.value	-1
	.quad	label$4762
	.align 32
	.type	label$4762, @object
	.size	label$4762, 170
label$4762:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1962
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2024
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4764
	.align 32
	.type	label$4764, @object
	.size	label$4764, 170
label$4764:
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1752
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1782
	.value	-1
	.quad	label$4766
	.align 32
	.type	label$4766, @object
	.size	label$4766, 170
label$4766:
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4768
	.align 32
	.type	label$4768, @object
	.size	label$4768, 170
label$4768:
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$4770
	.align 32
	.type	label$4770, @object
	.size	label$4770, 170
label$4770:
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1945
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1945
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1786
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4772
	.align 32
	.type	label$4772, @object
	.size	label$4772, 170
label$4772:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$4774
	.align 32
	.type	label$4774, @object
	.size	label$4774, 170
label$4774:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2015
	.value	-1
	.quad	label$4776
	.align 32
	.type	label$4776, @object
	.size	label$4776, 170
label$4776:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4778
	.align 32
	.type	label$4778, @object
	.size	label$4778, 170
label$4778:
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	-1
	.quad	label$4780
	.align 32
	.type	label$4780, @object
	.size	label$4780, 170
label$4780:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4782
	.align 32
	.type	label$4782, @object
	.size	label$4782, 170
label$4782:
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2017
	.value	1
	.quad	.LC1737
	.value	-1
	.quad	label$4784
	.align 32
	.type	label$4784, @object
	.size	label$4784, 170
label$4784:
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4786
	.align 32
	.type	label$4786, @object
	.size	label$4786, 170
label$4786:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	-1
	.quad	label$4788
	.align 32
	.type	label$4788, @object
	.size	label$4788, 170
label$4788:
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$4790
	.align 32
	.type	label$4790, @object
	.size	label$4790, 170
label$4790:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4792
	.align 32
	.type	label$4792, @object
	.size	label$4792, 170
label$4792:
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4794
	.align 32
	.type	label$4794, @object
	.size	label$4794, 170
label$4794:
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1756
	.value	-1
	.quad	label$4796
	.align 32
	.type	label$4796, @object
	.size	label$4796, 170
label$4796:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1976
	.value	-1
	.quad	label$4798
	.align 32
	.type	label$4798, @object
	.size	label$4798, 170
label$4798:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC2014
	.value	-1
	.quad	label$4800
	.align 32
	.type	label$4800, @object
	.size	label$4800, 170
label$4800:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$4802
	.align 32
	.type	label$4802, @object
	.size	label$4802, 170
label$4802:
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4804
	.align 32
	.type	label$4804, @object
	.size	label$4804, 170
label$4804:
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$4806
	.align 32
	.type	label$4806, @object
	.size	label$4806, 170
label$4806:
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1779
	.value	-1
	.quad	label$4808
	.align 32
	.type	label$4808, @object
	.size	label$4808, 170
label$4808:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4810
	.align 32
	.type	label$4810, @object
	.size	label$4810, 170
label$4810:
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1812
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1903
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$4812
	.align 32
	.type	label$4812, @object
	.size	label$4812, 170
label$4812:
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4814
	.align 32
	.type	label$4814, @object
	.size	label$4814, 170
label$4814:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1915
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1752
	.value	-1
	.quad	label$4816
	.align 32
	.type	label$4816, @object
	.size	label$4816, 170
label$4816:
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4818
	.align 32
	.type	label$4818, @object
	.size	label$4818, 170
label$4818:
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1920
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC2011
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1916
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4820
	.align 32
	.type	label$4820, @object
	.size	label$4820, 170
label$4820:
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1962
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4822
	.align 32
	.type	label$4822, @object
	.size	label$4822, 170
label$4822:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$4824
	.align 32
	.type	label$4824, @object
	.size	label$4824, 170
label$4824:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$4826
	.align 32
	.type	label$4826, @object
	.size	label$4826, 170
label$4826:
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1901
	.value	-1
	.quad	label$4828
	.align 32
	.type	label$4828, @object
	.size	label$4828, 170
label$4828:
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	-1
	.quad	label$4830
	.align 32
	.type	label$4830, @object
	.size	label$4830, 170
label$4830:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$4832
	.align 32
	.type	label$4832, @object
	.size	label$4832, 170
label$4832:
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1958
	.value	-1
	.quad	label$4834
	.align 32
	.type	label$4834, @object
	.size	label$4834, 170
label$4834:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4836
	.align 32
	.type	label$4836, @object
	.size	label$4836, 170
label$4836:
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1981
	.value	-1
	.quad	label$4838
	.align 32
	.type	label$4838, @object
	.size	label$4838, 170
label$4838:
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	-1
	.quad	label$4840
	.align 32
	.type	label$4840, @object
	.size	label$4840, 170
label$4840:
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1757
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1782
	.value	-1
	.quad	label$4842
	.align 32
	.type	label$4842, @object
	.size	label$4842, 170
label$4842:
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1854
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$4844
	.align 32
	.type	label$4844, @object
	.size	label$4844, 170
label$4844:
	.value	2
	.quad	.LC1768
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1768
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4846
	.align 32
	.type	label$4846, @object
	.size	label$4846, 170
label$4846:
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1903
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1869
	.value	-1
	.quad	label$4848
	.align 32
	.type	label$4848, @object
	.size	label$4848, 170
label$4848:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$4850
	.align 32
	.type	label$4850, @object
	.size	label$4850, 170
label$4850:
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$4852
	.align 32
	.type	label$4852, @object
	.size	label$4852, 170
label$4852:
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1895
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1993
	.value	-1
	.quad	label$4854
	.align 32
	.type	label$4854, @object
	.size	label$4854, 170
label$4854:
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4856
	.align 32
	.type	label$4856, @object
	.size	label$4856, 170
label$4856:
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1917
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1750
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4858
	.align 32
	.type	label$4858, @object
	.size	label$4858, 170
label$4858:
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1956
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4860
	.align 32
	.type	label$4860, @object
	.size	label$4860, 170
label$4860:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4862
	.align 32
	.type	label$4862, @object
	.size	label$4862, 170
label$4862:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1976
	.value	2
	.quad	.LC1750
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2027
	.value	-1
	.quad	label$4864
	.align 32
	.type	label$4864, @object
	.size	label$4864, 170
label$4864:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4866
	.align 32
	.type	label$4866, @object
	.size	label$4866, 170
label$4866:
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$4868
	.align 32
	.type	label$4868, @object
	.size	label$4868, 170
label$4868:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1777
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1777
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$4870
	.align 32
	.type	label$4870, @object
	.size	label$4870, 170
label$4870:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1857
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$4872
	.align 32
	.type	label$4872, @object
	.size	label$4872, 170
label$4872:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1925
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$4874
	.align 32
	.type	label$4874, @object
	.size	label$4874, 170
label$4874:
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4876
	.align 32
	.type	label$4876, @object
	.size	label$4876, 170
label$4876:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2015
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC2014
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1993
	.value	-1
	.quad	label$4878
	.align 32
	.type	label$4878, @object
	.size	label$4878, 170
label$4878:
	.value	3
	.quad	.LC1895
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1924
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$4880
	.align 32
	.type	label$4880, @object
	.size	label$4880, 170
label$4880:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$4882
	.align 32
	.type	label$4882, @object
	.size	label$4882, 170
label$4882:
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1853
	.value	-1
	.quad	label$4884
	.align 32
	.type	label$4884, @object
	.size	label$4884, 170
label$4884:
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1752
	.value	-1
	.quad	label$4886
	.align 32
	.type	label$4886, @object
	.size	label$4886, 170
label$4886:
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4888
	.align 32
	.type	label$4888, @object
	.size	label$4888, 170
label$4888:
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1902
	.value	-1
	.quad	label$4890
	.align 32
	.type	label$4890, @object
	.size	label$4890, 170
label$4890:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1766
	.value	-1
	.quad	label$4892
	.align 32
	.type	label$4892, @object
	.size	label$4892, 170
label$4892:
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1924
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1925
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$4894
	.align 32
	.type	label$4894, @object
	.size	label$4894, 170
label$4894:
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1925
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1913
	.value	-1
	.quad	label$4896
	.align 32
	.type	label$4896, @object
	.size	label$4896, 170
label$4896:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$4898
	.align 32
	.type	label$4898, @object
	.size	label$4898, 170
label$4898:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$4900
	.align 32
	.type	label$4900, @object
	.size	label$4900, 170
label$4900:
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1982
	.value	-1
	.quad	label$4902
	.align 32
	.type	label$4902, @object
	.size	label$4902, 170
label$4902:
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$4904
	.align 32
	.type	label$4904, @object
	.size	label$4904, 170
label$4904:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1809
	.value	-1
	.quad	label$4906
	.align 32
	.type	label$4906, @object
	.size	label$4906, 170
label$4906:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1903
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4908
	.align 32
	.type	label$4908, @object
	.size	label$4908, 170
label$4908:
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1896
	.value	-1
	.quad	label$4910
	.align 32
	.type	label$4910, @object
	.size	label$4910, 170
label$4910:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$4912
	.align 32
	.type	label$4912, @object
	.size	label$4912, 170
label$4912:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1929
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$4914
	.align 32
	.type	label$4914, @object
	.size	label$4914, 170
label$4914:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1991
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1928
	.value	-1
	.quad	label$4916
	.align 32
	.type	label$4916, @object
	.size	label$4916, 170
label$4916:
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$4918
	.align 32
	.type	label$4918, @object
	.size	label$4918, 170
label$4918:
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4920
	.align 32
	.type	label$4920, @object
	.size	label$4920, 170
label$4920:
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4922
	.align 32
	.type	label$4922, @object
	.size	label$4922, 170
label$4922:
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4924
	.align 32
	.type	label$4924, @object
	.size	label$4924, 170
label$4924:
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1972
	.value	-1
	.quad	label$4926
	.align 32
	.type	label$4926, @object
	.size	label$4926, 170
label$4926:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1981
	.value	-1
	.quad	label$4928
	.align 32
	.type	label$4928, @object
	.size	label$4928, 170
label$4928:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4930
	.align 32
	.type	label$4930, @object
	.size	label$4930, 170
label$4930:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$4932
	.align 32
	.type	label$4932, @object
	.size	label$4932, 170
label$4932:
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4934
	.align 32
	.type	label$4934, @object
	.size	label$4934, 170
label$4934:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1916
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	-1
	.quad	label$4936
	.align 32
	.type	label$4936, @object
	.size	label$4936, 170
label$4936:
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1917
	.value	-1
	.quad	label$4938
	.align 32
	.type	label$4938, @object
	.size	label$4938, 170
label$4938:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4940
	.align 32
	.type	label$4940, @object
	.size	label$4940, 170
label$4940:
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4942
	.align 32
	.type	label$4942, @object
	.size	label$4942, 170
label$4942:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1897
	.value	-1
	.quad	label$4944
	.align 32
	.type	label$4944, @object
	.size	label$4944, 170
label$4944:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$4946
	.align 32
	.type	label$4946, @object
	.size	label$4946, 170
label$4946:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4948
	.align 32
	.type	label$4948, @object
	.size	label$4948, 170
label$4948:
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2021
	.value	-1
	.quad	label$4950
	.align 32
	.type	label$4950, @object
	.size	label$4950, 170
label$4950:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1962
	.value	-1
	.quad	label$4952
	.align 32
	.type	label$4952, @object
	.size	label$4952, 170
label$4952:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$4954
	.align 32
	.type	label$4954, @object
	.size	label$4954, 170
label$4954:
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$4956
	.align 32
	.type	label$4956, @object
	.size	label$4956, 170
label$4956:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$4958
	.align 32
	.type	label$4958, @object
	.size	label$4958, 170
label$4958:
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4960
	.align 32
	.type	label$4960, @object
	.size	label$4960, 170
label$4960:
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1776
	.value	-1
	.quad	label$4962
	.align 32
	.type	label$4962, @object
	.size	label$4962, 170
label$4962:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1755
	.value	-1
	.quad	label$4964
	.align 32
	.type	label$4964, @object
	.size	label$4964, 170
label$4964:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$4966
	.align 32
	.type	label$4966, @object
	.size	label$4966, 170
label$4966:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1913
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1924
	.value	-1
	.quad	label$4968
	.align 32
	.type	label$4968, @object
	.size	label$4968, 170
label$4968:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1795
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$4970
	.align 32
	.type	label$4970, @object
	.size	label$4970, 170
label$4970:
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1990
	.value	-1
	.quad	label$4972
	.align 32
	.type	label$4972, @object
	.size	label$4972, 170
label$4972:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$4974
	.align 32
	.type	label$4974, @object
	.size	label$4974, 170
label$4974:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1913
	.value	-1
	.quad	label$4976
	.align 32
	.type	label$4976, @object
	.size	label$4976, 170
label$4976:
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$4978
	.align 32
	.type	label$4978, @object
	.size	label$4978, 170
label$4978:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$4980
	.align 32
	.type	label$4980, @object
	.size	label$4980, 170
label$4980:
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1996
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	-1
	.quad	label$4982
	.align 32
	.type	label$4982, @object
	.size	label$4982, 170
label$4982:
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$4984
	.align 32
	.type	label$4984, @object
	.size	label$4984, 170
label$4984:
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1882
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2032
	.value	-1
	.quad	label$4986
	.align 32
	.type	label$4986, @object
	.size	label$4986, 170
label$4986:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1750
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$4988
	.align 32
	.type	label$4988, @object
	.size	label$4988, 170
label$4988:
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1917
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC2033
	.value	-1
	.quad	label$4990
	.align 32
	.type	label$4990, @object
	.size	label$4990, 170
label$4990:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1750
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$4992
	.align 32
	.type	label$4992, @object
	.size	label$4992, 170
label$4992:
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$4994
	.align 32
	.type	label$4994, @object
	.size	label$4994, 170
label$4994:
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1897
	.value	-1
	.quad	label$4996
	.align 32
	.type	label$4996, @object
	.size	label$4996, 170
label$4996:
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$4998
	.align 32
	.type	label$4998, @object
	.size	label$4998, 170
label$4998:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2024
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5000
	.align 32
	.type	label$5000, @object
	.size	label$5000, 170
label$5000:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1976
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1761
	.value	-1
	.quad	label$5002
	.align 32
	.type	label$5002, @object
	.size	label$5002, 170
label$5002:
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5004
	.align 32
	.type	label$5004, @object
	.size	label$5004, 170
label$5004:
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC2022
	.value	-1
	.quad	label$5006
	.align 32
	.type	label$5006, @object
	.size	label$5006, 170
label$5006:
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC2024
	.value	-1
	.quad	label$5008
	.align 32
	.type	label$5008, @object
	.size	label$5008, 170
label$5008:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5010
	.align 32
	.type	label$5010, @object
	.size	label$5010, 170
label$5010:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1960
	.value	-1
	.quad	label$5012
	.align 32
	.type	label$5012, @object
	.size	label$5012, 170
label$5012:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$5014
	.align 32
	.type	label$5014, @object
	.size	label$5014, 170
label$5014:
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1962
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$5016
	.align 32
	.type	label$5016, @object
	.size	label$5016, 170
label$5016:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1881
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1889
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1785
	.value	-1
	.quad	label$5018
	.align 32
	.type	label$5018, @object
	.size	label$5018, 170
label$5018:
	.value	3
	.quad	.LC2011
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$5020
	.align 32
	.type	label$5020, @object
	.size	label$5020, 170
label$5020:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$5022
	.align 32
	.type	label$5022, @object
	.size	label$5022, 170
label$5022:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1897
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1897
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$5024
	.align 32
	.type	label$5024, @object
	.size	label$5024, 170
label$5024:
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1927
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5026
	.align 32
	.type	label$5026, @object
	.size	label$5026, 170
label$5026:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5028
	.align 32
	.type	label$5028, @object
	.size	label$5028, 170
label$5028:
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5030
	.align 32
	.type	label$5030, @object
	.size	label$5030, 170
label$5030:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5032
	.align 32
	.type	label$5032, @object
	.size	label$5032, 170
label$5032:
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1907
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5034
	.align 32
	.type	label$5034, @object
	.size	label$5034, 170
label$5034:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1882
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1883
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1882
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5036
	.align 32
	.type	label$5036, @object
	.size	label$5036, 170
label$5036:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1883
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1879
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1881
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1879
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1895
	.value	-1
	.quad	label$5038
	.align 32
	.type	label$5038, @object
	.size	label$5038, 170
label$5038:
	.value	3
	.quad	.LC1881
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$5040
	.align 32
	.type	label$5040, @object
	.size	label$5040, 170
label$5040:
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1954
	.value	-1
	.quad	label$5042
	.align 32
	.type	label$5042, @object
	.size	label$5042, 170
label$5042:
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$5044
	.align 32
	.type	label$5044, @object
	.size	label$5044, 170
label$5044:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2031
	.value	-1
	.quad	label$5046
	.align 32
	.type	label$5046, @object
	.size	label$5046, 170
label$5046:
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1741
	.value	-1
	.quad	label$5048
	.align 32
	.type	label$5048, @object
	.size	label$5048, 170
label$5048:
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$5050
	.align 32
	.type	label$5050, @object
	.size	label$5050, 170
label$5050:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1776
	.value	-1
	.quad	label$5052
	.align 32
	.type	label$5052, @object
	.size	label$5052, 170
label$5052:
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$5054
	.align 32
	.type	label$5054, @object
	.size	label$5054, 170
label$5054:
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1865
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1808
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5056
	.align 32
	.type	label$5056, @object
	.size	label$5056, 170
label$5056:
	.value	2
	.quad	.LC1809
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1948
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1862
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$5058
	.align 32
	.type	label$5058, @object
	.size	label$5058, 170
label$5058:
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1911
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	-1
	.quad	label$5060
	.align 32
	.type	label$5060, @object
	.size	label$5060, 170
label$5060:
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$5062
	.align 32
	.type	label$5062, @object
	.size	label$5062, 170
label$5062:
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1905
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1906
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5064
	.align 32
	.type	label$5064, @object
	.size	label$5064, 170
label$5064:
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1920
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5066
	.align 32
	.type	label$5066, @object
	.size	label$5066, 170
label$5066:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1908
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$5068
	.align 32
	.type	label$5068, @object
	.size	label$5068, 170
label$5068:
	.value	3
	.quad	.LC1906
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1911
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5070
	.align 32
	.type	label$5070, @object
	.size	label$5070, 170
label$5070:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2011
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2017
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5072
	.align 32
	.type	label$5072, @object
	.size	label$5072, 170
label$5072:
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1751
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1747
	.value	-1
	.quad	label$5074
	.align 32
	.type	label$5074, @object
	.size	label$5074, 170
label$5074:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1927
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1879
	.value	-1
	.quad	label$5076
	.align 32
	.type	label$5076, @object
	.size	label$5076, 170
label$5076:
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC2016
	.value	-1
	.quad	label$5078
	.align 32
	.type	label$5078, @object
	.size	label$5078, 170
label$5078:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC2033
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC2033
	.value	-1
	.quad	label$5080
	.align 32
	.type	label$5080, @object
	.size	label$5080, 170
label$5080:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5082
	.align 32
	.type	label$5082, @object
	.size	label$5082, 170
label$5082:
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC2011
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$5084
	.align 32
	.type	label$5084, @object
	.size	label$5084, 170
label$5084:
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2015
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2034
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2033
	.value	-1
	.quad	label$5086
	.align 32
	.type	label$5086, @object
	.size	label$5086, 170
label$5086:
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1756
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1758
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1760
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1766
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	-1
	.quad	label$5088
	.align 32
	.type	label$5088, @object
	.size	label$5088, 170
label$5088:
	.value	2
	.quad	.LC1768
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1771
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC2024
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1994
	.value	-1
	.quad	label$5090
	.align 32
	.type	label$5090, @object
	.size	label$5090, 170
label$5090:
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1774
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1777
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1779
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC2025
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$5092
	.align 32
	.type	label$5092, @object
	.size	label$5092, 170
label$5092:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5094
	.align 32
	.type	label$5094, @object
	.size	label$5094, 170
label$5094:
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1928
	.value	-1
	.quad	label$5096
	.align 32
	.type	label$5096, @object
	.size	label$5096, 170
label$5096:
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$5098
	.align 32
	.type	label$5098, @object
	.size	label$5098, 170
label$5098:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1758
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5100
	.align 32
	.type	label$5100, @object
	.size	label$5100, 170
label$5100:
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1999
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$5102
	.align 32
	.type	label$5102, @object
	.size	label$5102, 170
label$5102:
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$5104
	.align 32
	.type	label$5104, @object
	.size	label$5104, 170
label$5104:
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1957
	.value	-1
	.quad	label$5106
	.align 32
	.type	label$5106, @object
	.size	label$5106, 170
label$5106:
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC2001
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1948
	.value	-1
	.quad	label$5108
	.align 32
	.type	label$5108, @object
	.size	label$5108, 170
label$5108:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1946
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$5110
	.align 32
	.type	label$5110, @object
	.size	label$5110, 170
label$5110:
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$5112
	.align 32
	.type	label$5112, @object
	.size	label$5112, 170
label$5112:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5114
	.align 32
	.type	label$5114, @object
	.size	label$5114, 170
label$5114:
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1828
	.value	-1
	.quad	label$5116
	.align 32
	.type	label$5116, @object
	.size	label$5116, 170
label$5116:
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1976
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$5118
	.align 32
	.type	label$5118, @object
	.size	label$5118, 170
label$5118:
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$5120
	.align 32
	.type	label$5120, @object
	.size	label$5120, 170
label$5120:
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1962
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1976
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$5122
	.align 32
	.type	label$5122, @object
	.size	label$5122, 170
label$5122:
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1830
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1829
	.value	-1
	.quad	label$5124
	.align 32
	.type	label$5124, @object
	.size	label$5124, 170
label$5124:
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$5126
	.align 32
	.type	label$5126, @object
	.size	label$5126, 170
label$5126:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$5128
	.align 32
	.type	label$5128, @object
	.size	label$5128, 170
label$5128:
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5130
	.align 32
	.type	label$5130, @object
	.size	label$5130, 170
label$5130:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1809
	.value	-1
	.quad	label$5132
	.align 32
	.type	label$5132, @object
	.size	label$5132, 170
label$5132:
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5134
	.align 32
	.type	label$5134, @object
	.size	label$5134, 170
label$5134:
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1977
	.value	-1
	.quad	label$5136
	.align 32
	.type	label$5136, @object
	.size	label$5136, 170
label$5136:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$5138
	.align 32
	.type	label$5138, @object
	.size	label$5138, 170
label$5138:
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$5140
	.align 32
	.type	label$5140, @object
	.size	label$5140, 170
label$5140:
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1974
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	-1
	.quad	label$5142
	.align 32
	.type	label$5142, @object
	.size	label$5142, 170
label$5142:
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1963
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1827
	.value	-1
	.quad	label$5144
	.align 32
	.type	label$5144, @object
	.size	label$5144, 170
label$5144:
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1978
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$5146
	.align 32
	.type	label$5146, @object
	.size	label$5146, 170
label$5146:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1983
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$5148
	.align 32
	.type	label$5148, @object
	.size	label$5148, 170
label$5148:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$5150
	.align 32
	.type	label$5150, @object
	.size	label$5150, 170
label$5150:
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1964
	.value	-1
	.quad	label$5152
	.align 32
	.type	label$5152, @object
	.size	label$5152, 170
label$5152:
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$5154
	.align 32
	.type	label$5154, @object
	.size	label$5154, 170
label$5154:
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1965
	.value	-1
	.quad	label$5156
	.align 32
	.type	label$5156, @object
	.size	label$5156, 170
label$5156:
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1819
	.value	-1
	.quad	label$5158
	.align 32
	.type	label$5158, @object
	.size	label$5158, 170
label$5158:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1965
	.value	-1
	.quad	label$5160
	.align 32
	.type	label$5160, @object
	.size	label$5160, 170
label$5160:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5162
	.align 32
	.type	label$5162, @object
	.size	label$5162, 170
label$5162:
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1830
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	-1
	.quad	label$5164
	.align 32
	.type	label$5164, @object
	.size	label$5164, 170
label$5164:
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1982
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$5166
	.align 32
	.type	label$5166, @object
	.size	label$5166, 170
label$5166:
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1830
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1962
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$5168
	.align 32
	.type	label$5168, @object
	.size	label$5168, 170
label$5168:
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1803
	.value	-1
	.quad	label$5170
	.align 32
	.type	label$5170, @object
	.size	label$5170, 170
label$5170:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5172
	.align 32
	.type	label$5172, @object
	.size	label$5172, 170
label$5172:
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1987
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1828
	.value	-1
	.quad	label$5174
	.align 32
	.type	label$5174, @object
	.size	label$5174, 170
label$5174:
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1984
	.value	-1
	.quad	label$5176
	.align 32
	.type	label$5176, @object
	.size	label$5176, 170
label$5176:
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1807
	.value	-1
	.quad	label$5178
	.align 32
	.type	label$5178, @object
	.size	label$5178, 170
label$5178:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$5180
	.align 32
	.type	label$5180, @object
	.size	label$5180, 170
label$5180:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1834
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1803
	.value	-1
	.quad	label$5182
	.align 32
	.type	label$5182, @object
	.size	label$5182, 170
label$5182:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1984
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1826
	.value	-1
	.quad	label$5184
	.align 32
	.type	label$5184, @object
	.size	label$5184, 170
label$5184:
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5186
	.align 32
	.type	label$5186, @object
	.size	label$5186, 170
label$5186:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1960
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$5188
	.align 32
	.type	label$5188, @object
	.size	label$5188, 170
label$5188:
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1988
	.value	-1
	.quad	label$5190
	.align 32
	.type	label$5190, @object
	.size	label$5190, 170
label$5190:
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5192
	.align 32
	.type	label$5192, @object
	.size	label$5192, 170
label$5192:
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1773
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1808
	.value	-1
	.quad	label$5194
	.align 32
	.type	label$5194, @object
	.size	label$5194, 170
label$5194:
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1990
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1920
	.value	-1
	.quad	label$5196
	.align 32
	.type	label$5196, @object
	.size	label$5196, 170
label$5196:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1920
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5198
	.align 32
	.type	label$5198, @object
	.size	label$5198, 170
label$5198:
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5200
	.align 32
	.type	label$5200, @object
	.size	label$5200, 170
label$5200:
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1985
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1924
	.value	-1
	.quad	label$5202
	.align 32
	.type	label$5202, @object
	.size	label$5202, 170
label$5202:
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1816
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	-1
	.quad	label$5204
	.align 32
	.type	label$5204, @object
	.size	label$5204, 170
label$5204:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1781
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$5206
	.align 32
	.type	label$5206, @object
	.size	label$5206, 170
label$5206:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1816
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1955
	.value	-1
	.quad	label$5208
	.align 32
	.type	label$5208, @object
	.size	label$5208, 170
label$5208:
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1955
	.value	-1
	.quad	label$5210
	.align 32
	.type	label$5210, @object
	.size	label$5210, 170
label$5210:
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1994
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	-1
	.quad	label$5212
	.align 32
	.type	label$5212, @object
	.size	label$5212, 170
label$5212:
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1988
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1786
	.value	2
	.quad	.LC1792
	.value	-1
	.quad	label$5214
	.align 32
	.type	label$5214, @object
	.size	label$5214, 170
label$5214:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1767
	.value	-1
	.quad	label$5216
	.align 32
	.type	label$5216, @object
	.size	label$5216, 170
label$5216:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1834
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1835
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1766
	.value	-1
	.quad	label$5218
	.align 32
	.type	label$5218, @object
	.size	label$5218, 170
label$5218:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5220
	.align 32
	.type	label$5220, @object
	.size	label$5220, 170
label$5220:
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1789
	.value	-1
	.quad	label$5222
	.align 32
	.type	label$5222, @object
	.size	label$5222, 170
label$5222:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1781
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1787
	.value	-1
	.quad	label$5224
	.align 32
	.type	label$5224, @object
	.size	label$5224, 170
label$5224:
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5226
	.align 32
	.type	label$5226, @object
	.size	label$5226, 170
label$5226:
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2008
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$5228
	.align 32
	.type	label$5228, @object
	.size	label$5228, 170
label$5228:
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1924
	.value	-1
	.quad	label$5230
	.align 32
	.type	label$5230, @object
	.size	label$5230, 170
label$5230:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1987
	.value	-1
	.quad	label$5232
	.align 32
	.type	label$5232, @object
	.size	label$5232, 170
label$5232:
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$5234
	.align 32
	.type	label$5234, @object
	.size	label$5234, 170
label$5234:
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5236
	.align 32
	.type	label$5236, @object
	.size	label$5236, 170
label$5236:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5238
	.align 32
	.type	label$5238, @object
	.size	label$5238, 170
label$5238:
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5240
	.align 32
	.type	label$5240, @object
	.size	label$5240, 170
label$5240:
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5242
	.align 32
	.type	label$5242, @object
	.size	label$5242, 170
label$5242:
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5244
	.align 32
	.type	label$5244, @object
	.size	label$5244, 170
label$5244:
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5246
	.align 32
	.type	label$5246, @object
	.size	label$5246, 170
label$5246:
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$5248
	.align 32
	.type	label$5248, @object
	.size	label$5248, 170
label$5248:
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5250
	.align 32
	.type	label$5250, @object
	.size	label$5250, 170
label$5250:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5252
	.align 32
	.type	label$5252, @object
	.size	label$5252, 170
label$5252:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5254
	.align 32
	.type	label$5254, @object
	.size	label$5254, 170
label$5254:
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5256
	.align 32
	.type	label$5256, @object
	.size	label$5256, 170
label$5256:
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC2034
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5258
	.align 32
	.type	label$5258, @object
	.size	label$5258, 170
label$5258:
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2032
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5260
	.align 32
	.type	label$5260, @object
	.size	label$5260, 170
label$5260:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	-1
	.quad	label$5262
	.align 32
	.type	label$5262, @object
	.size	label$5262, 170
label$5262:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5264
	.align 32
	.type	label$5264, @object
	.size	label$5264, 170
label$5264:
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1994
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5266
	.align 32
	.type	label$5266, @object
	.size	label$5266, 170
label$5266:
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5268
	.align 32
	.type	label$5268, @object
	.size	label$5268, 170
label$5268:
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1752
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5270
	.align 32
	.type	label$5270, @object
	.size	label$5270, 170
label$5270:
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5272
	.align 32
	.type	label$5272, @object
	.size	label$5272, 170
label$5272:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1829
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5274
	.align 32
	.type	label$5274, @object
	.size	label$5274, 170
label$5274:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5276
	.align 32
	.type	label$5276, @object
	.size	label$5276, 170
label$5276:
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5278
	.align 32
	.type	label$5278, @object
	.size	label$5278, 170
label$5278:
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2031
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2031
	.value	-1
	.quad	label$5280
	.align 32
	.type	label$5280, @object
	.size	label$5280, 170
label$5280:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	-1
	.quad	label$5282
	.align 32
	.type	label$5282, @object
	.size	label$5282, 170
label$5282:
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1965
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$5284
	.align 32
	.type	label$5284, @object
	.size	label$5284, 170
label$5284:
	.value	3
	.quad	.LC2031
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1950
	.value	-1
	.quad	label$5286
	.align 32
	.type	label$5286, @object
	.size	label$5286, 170
label$5286:
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2033
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5288
	.align 32
	.type	label$5288, @object
	.size	label$5288, 170
label$5288:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5290
	.align 32
	.type	label$5290, @object
	.size	label$5290, 170
label$5290:
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1749
	.value	-1
	.quad	label$5292
	.align 32
	.type	label$5292, @object
	.size	label$5292, 170
label$5292:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1987
	.value	-1
	.quad	label$5294
	.align 32
	.type	label$5294, @object
	.size	label$5294, 170
label$5294:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	-1
	.quad	label$5296
	.align 32
	.type	label$5296, @object
	.size	label$5296, 170
label$5296:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1781
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1897
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1780
	.value	-1
	.quad	label$5298
	.align 32
	.type	label$5298, @object
	.size	label$5298, 170
label$5298:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5300
	.align 32
	.type	label$5300, @object
	.size	label$5300, 170
label$5300:
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1786
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$5302
	.align 32
	.type	label$5302, @object
	.size	label$5302, 170
label$5302:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1911
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5304
	.align 32
	.type	label$5304, @object
	.size	label$5304, 170
label$5304:
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5306
	.align 32
	.type	label$5306, @object
	.size	label$5306, 170
label$5306:
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$5308
	.align 32
	.type	label$5308, @object
	.size	label$5308, 170
label$5308:
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1897
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1749
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$5310
	.align 32
	.type	label$5310, @object
	.size	label$5310, 170
label$5310:
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5312
	.align 32
	.type	label$5312, @object
	.size	label$5312, 170
label$5312:
	.value	2
	.quad	.LC1806
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1750
	.value	-1
	.quad	label$5314
	.align 32
	.type	label$5314, @object
	.size	label$5314, 170
label$5314:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1976
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5316
	.align 32
	.type	label$5316, @object
	.size	label$5316, 170
label$5316:
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$5318
	.align 32
	.type	label$5318, @object
	.size	label$5318, 170
label$5318:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1839
	.value	-1
	.quad	label$5320
	.align 32
	.type	label$5320, @object
	.size	label$5320, 170
label$5320:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1983
	.value	-1
	.quad	label$5322
	.align 32
	.type	label$5322, @object
	.size	label$5322, 170
label$5322:
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5324
	.align 32
	.type	label$5324, @object
	.size	label$5324, 170
label$5324:
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$5326
	.align 32
	.type	label$5326, @object
	.size	label$5326, 170
label$5326:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1853
	.value	-1
	.quad	label$5328
	.align 32
	.type	label$5328, @object
	.size	label$5328, 170
label$5328:
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	-1
	.quad	label$5330
	.align 32
	.type	label$5330, @object
	.size	label$5330, 170
label$5330:
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1795
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1794
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5332
	.align 32
	.type	label$5332, @object
	.size	label$5332, 170
label$5332:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	-1
	.quad	label$5334
	.align 32
	.type	label$5334, @object
	.size	label$5334, 170
label$5334:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5336
	.align 32
	.type	label$5336, @object
	.size	label$5336, 170
label$5336:
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5338
	.align 32
	.type	label$5338, @object
	.size	label$5338, 170
label$5338:
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	-1
	.quad	label$5340
	.align 32
	.type	label$5340, @object
	.size	label$5340, 170
label$5340:
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5342
	.align 32
	.type	label$5342, @object
	.size	label$5342, 170
label$5342:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5344
	.align 32
	.type	label$5344, @object
	.size	label$5344, 170
label$5344:
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$5346
	.align 32
	.type	label$5346, @object
	.size	label$5346, 170
label$5346:
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1856
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC2010
	.value	-1
	.quad	label$5348
	.align 32
	.type	label$5348, @object
	.size	label$5348, 170
label$5348:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1752
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5350
	.align 32
	.type	label$5350, @object
	.size	label$5350, 170
label$5350:
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1816
	.value	-1
	.quad	label$5352
	.align 32
	.type	label$5352, @object
	.size	label$5352, 170
label$5352:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	-1
	.quad	label$5354
	.align 32
	.type	label$5354, @object
	.size	label$5354, 170
label$5354:
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1805
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$5356
	.align 32
	.type	label$5356, @object
	.size	label$5356, 170
label$5356:
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5358
	.align 32
	.type	label$5358, @object
	.size	label$5358, 170
label$5358:
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5360
	.align 32
	.type	label$5360, @object
	.size	label$5360, 170
label$5360:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5362
	.align 32
	.type	label$5362, @object
	.size	label$5362, 170
label$5362:
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1795
	.value	-1
	.quad	label$5364
	.align 32
	.type	label$5364, @object
	.size	label$5364, 170
label$5364:
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5366
	.align 32
	.type	label$5366, @object
	.size	label$5366, 170
label$5366:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1907
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1795
	.value	-1
	.quad	label$5368
	.align 32
	.type	label$5368, @object
	.size	label$5368, 170
label$5368:
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1794
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1896
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1928
	.value	-1
	.quad	label$5370
	.align 32
	.type	label$5370, @object
	.size	label$5370, 170
label$5370:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$5372
	.align 32
	.type	label$5372, @object
	.size	label$5372, 170
label$5372:
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1779
	.value	-1
	.quad	label$5374
	.align 32
	.type	label$5374, @object
	.size	label$5374, 170
label$5374:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5376
	.align 32
	.type	label$5376, @object
	.size	label$5376, 170
label$5376:
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1738
	.value	-1
	.quad	label$5378
	.align 32
	.type	label$5378, @object
	.size	label$5378, 170
label$5378:
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$5380
	.align 32
	.type	label$5380, @object
	.size	label$5380, 170
label$5380:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5382
	.align 32
	.type	label$5382, @object
	.size	label$5382, 170
label$5382:
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1795
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5384
	.align 32
	.type	label$5384, @object
	.size	label$5384, 170
label$5384:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1927
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1965
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5386
	.align 32
	.type	label$5386, @object
	.size	label$5386, 170
label$5386:
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1891
	.value	-1
	.quad	label$5388
	.align 32
	.type	label$5388, @object
	.size	label$5388, 170
label$5388:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1953
	.value	-1
	.quad	label$5390
	.align 32
	.type	label$5390, @object
	.size	label$5390, 170
label$5390:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$5392
	.align 32
	.type	label$5392, @object
	.size	label$5392, 170
label$5392:
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1928
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5394
	.align 32
	.type	label$5394, @object
	.size	label$5394, 170
label$5394:
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$5396
	.align 32
	.type	label$5396, @object
	.size	label$5396, 170
label$5396:
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5398
	.align 32
	.type	label$5398, @object
	.size	label$5398, 170
label$5398:
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5400
	.align 32
	.type	label$5400, @object
	.size	label$5400, 170
label$5400:
	.value	2
	.quad	.LC1750
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1847
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5402
	.align 32
	.type	label$5402, @object
	.size	label$5402, 170
label$5402:
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5404
	.align 32
	.type	label$5404, @object
	.size	label$5404, 170
label$5404:
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5406
	.align 32
	.type	label$5406, @object
	.size	label$5406, 170
label$5406:
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$5408
	.align 32
	.type	label$5408, @object
	.size	label$5408, 170
label$5408:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5410
	.align 32
	.type	label$5410, @object
	.size	label$5410, 170
label$5410:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5412
	.align 32
	.type	label$5412, @object
	.size	label$5412, 170
label$5412:
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$5414
	.align 32
	.type	label$5414, @object
	.size	label$5414, 170
label$5414:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1996
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	-1
	.quad	label$5416
	.align 32
	.type	label$5416, @object
	.size	label$5416, 170
label$5416:
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5418
	.align 32
	.type	label$5418, @object
	.size	label$5418, 170
label$5418:
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1782
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1846
	.value	-1
	.quad	label$5420
	.align 32
	.type	label$5420, @object
	.size	label$5420, 170
label$5420:
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1964
	.value	-1
	.quad	label$5422
	.align 32
	.type	label$5422, @object
	.size	label$5422, 170
label$5422:
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5424
	.align 32
	.type	label$5424, @object
	.size	label$5424, 170
label$5424:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1866
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5426
	.align 32
	.type	label$5426, @object
	.size	label$5426, 170
label$5426:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5428
	.align 32
	.type	label$5428, @object
	.size	label$5428, 170
label$5428:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5430
	.align 32
	.type	label$5430, @object
	.size	label$5430, 170
label$5430:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	-1
	.quad	label$5432
	.align 32
	.type	label$5432, @object
	.size	label$5432, 170
label$5432:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1999
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5434
	.align 32
	.type	label$5434, @object
	.size	label$5434, 170
label$5434:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5436
	.align 32
	.type	label$5436, @object
	.size	label$5436, 170
label$5436:
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1994
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5438
	.align 32
	.type	label$5438, @object
	.size	label$5438, 170
label$5438:
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5440
	.align 32
	.type	label$5440, @object
	.size	label$5440, 170
label$5440:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$5442
	.align 32
	.type	label$5442, @object
	.size	label$5442, 170
label$5442:
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$5444
	.align 32
	.type	label$5444, @object
	.size	label$5444, 170
label$5444:
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2032
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1751
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1883
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5446
	.align 32
	.type	label$5446, @object
	.size	label$5446, 170
label$5446:
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC2004
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$5448
	.align 32
	.type	label$5448, @object
	.size	label$5448, 170
label$5448:
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1888
	.value	-1
	.quad	label$5450
	.align 32
	.type	label$5450, @object
	.size	label$5450, 170
label$5450:
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$5452
	.align 32
	.type	label$5452, @object
	.size	label$5452, 170
label$5452:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5454
	.align 32
	.type	label$5454, @object
	.size	label$5454, 170
label$5454:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1759
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1999
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5456
	.align 32
	.type	label$5456, @object
	.size	label$5456, 170
label$5456:
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1795
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5458
	.align 32
	.type	label$5458, @object
	.size	label$5458, 170
label$5458:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5460
	.align 32
	.type	label$5460, @object
	.size	label$5460, 170
label$5460:
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1767
	.value	-1
	.quad	label$5462
	.align 32
	.type	label$5462, @object
	.size	label$5462, 170
label$5462:
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5464
	.align 32
	.type	label$5464, @object
	.size	label$5464, 170
label$5464:
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1935
	.value	-1
	.quad	label$5466
	.align 32
	.type	label$5466, @object
	.size	label$5466, 170
label$5466:
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5468
	.align 32
	.type	label$5468, @object
	.size	label$5468, 170
label$5468:
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1999
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1977
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1748
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$5470
	.align 32
	.type	label$5470, @object
	.size	label$5470, 170
label$5470:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1796
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5472
	.align 32
	.type	label$5472, @object
	.size	label$5472, 170
label$5472:
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5474
	.align 32
	.type	label$5474, @object
	.size	label$5474, 170
label$5474:
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1936
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5476
	.align 32
	.type	label$5476, @object
	.size	label$5476, 170
label$5476:
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	-1
	.quad	label$5478
	.align 32
	.type	label$5478, @object
	.size	label$5478, 170
label$5478:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1796
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5480
	.align 32
	.type	label$5480, @object
	.size	label$5480, 170
label$5480:
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1873
	.value	-1
	.quad	label$5482
	.align 32
	.type	label$5482, @object
	.size	label$5482, 170
label$5482:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5484
	.align 32
	.type	label$5484, @object
	.size	label$5484, 170
label$5484:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1896
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5486
	.align 32
	.type	label$5486, @object
	.size	label$5486, 170
label$5486:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1866
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5488
	.align 32
	.type	label$5488, @object
	.size	label$5488, 170
label$5488:
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1785
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1822
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5490
	.align 32
	.type	label$5490, @object
	.size	label$5490, 170
label$5490:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5492
	.align 32
	.type	label$5492, @object
	.size	label$5492, 170
label$5492:
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1944
	.value	-1
	.quad	label$5494
	.align 32
	.type	label$5494, @object
	.size	label$5494, 170
label$5494:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1962
	.value	-1
	.quad	label$5496
	.align 32
	.type	label$5496, @object
	.size	label$5496, 170
label$5496:
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5498
	.align 32
	.type	label$5498, @object
	.size	label$5498, 170
label$5498:
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5500
	.align 32
	.type	label$5500, @object
	.size	label$5500, 170
label$5500:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1780
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5502
	.align 32
	.type	label$5502, @object
	.size	label$5502, 170
label$5502:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5504
	.align 32
	.type	label$5504, @object
	.size	label$5504, 170
label$5504:
	.value	2
	.quad	.LC1801
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1935
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5506
	.align 32
	.type	label$5506, @object
	.size	label$5506, 170
label$5506:
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1738
	.value	-1
	.quad	label$5508
	.align 32
	.type	label$5508, @object
	.size	label$5508, 170
label$5508:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1935
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1827
	.value	-1
	.quad	label$5510
	.align 32
	.type	label$5510, @object
	.size	label$5510, 170
label$5510:
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1807
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1807
	.value	-1
	.quad	label$5512
	.align 32
	.type	label$5512, @object
	.size	label$5512, 170
label$5512:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1803
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1827
	.value	2
	.quad	.LC1741
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5514
	.align 32
	.type	label$5514, @object
	.size	label$5514, 170
label$5514:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$5516
	.align 32
	.type	label$5516, @object
	.size	label$5516, 170
label$5516:
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1911
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$5518
	.align 32
	.type	label$5518, @object
	.size	label$5518, 170
label$5518:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5520
	.align 32
	.type	label$5520, @object
	.size	label$5520, 170
label$5520:
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2033
	.value	1
	.quad	.LC1737
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5522
	.align 32
	.type	label$5522, @object
	.size	label$5522, 170
label$5522:
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1747
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	-1
	.quad	label$5524
	.align 32
	.type	label$5524, @object
	.size	label$5524, 170
label$5524:
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1746
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1928
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1911
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5526
	.align 32
	.type	label$5526, @object
	.size	label$5526, 170
label$5526:
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1792
	.value	-1
	.quad	label$5528
	.align 32
	.type	label$5528, @object
	.size	label$5528, 170
label$5528:
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1751
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1872
	.value	-1
	.quad	label$5530
	.align 32
	.type	label$5530, @object
	.size	label$5530, 170
label$5530:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2031
	.value	-1
	.quad	label$5532
	.align 32
	.type	label$5532, @object
	.size	label$5532, 170
label$5532:
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1752
	.value	-1
	.quad	label$5534
	.align 32
	.type	label$5534, @object
	.size	label$5534, 170
label$5534:
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1814
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5536
	.align 32
	.type	label$5536, @object
	.size	label$5536, 170
label$5536:
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5538
	.align 32
	.type	label$5538, @object
	.size	label$5538, 170
label$5538:
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1798
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$5540
	.align 32
	.type	label$5540, @object
	.size	label$5540, 170
label$5540:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1850
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1816
	.value	-1
	.quad	label$5542
	.align 32
	.type	label$5542, @object
	.size	label$5542, 170
label$5542:
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1966
	.value	-1
	.quad	label$5544
	.align 32
	.type	label$5544, @object
	.size	label$5544, 170
label$5544:
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1990
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1990
	.value	-1
	.quad	label$5546
	.align 32
	.type	label$5546, @object
	.size	label$5546, 170
label$5546:
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1936
	.value	-1
	.quad	label$5548
	.align 32
	.type	label$5548, @object
	.size	label$5548, 170
label$5548:
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1956
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5550
	.align 32
	.type	label$5550, @object
	.size	label$5550, 170
label$5550:
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5552
	.align 32
	.type	label$5552, @object
	.size	label$5552, 170
label$5552:
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1766
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5554
	.align 32
	.type	label$5554, @object
	.size	label$5554, 170
label$5554:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1854
	.value	-1
	.quad	label$5556
	.align 32
	.type	label$5556, @object
	.size	label$5556, 170
label$5556:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	-1
	.quad	label$5558
	.align 32
	.type	label$5558, @object
	.size	label$5558, 170
label$5558:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1724
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5560
	.align 32
	.type	label$5560, @object
	.size	label$5560, 170
label$5560:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1929
	.value	-1
	.quad	label$5562
	.align 32
	.type	label$5562, @object
	.size	label$5562, 170
label$5562:
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1881
	.value	2
	.quad	.LC1814
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5564
	.align 32
	.type	label$5564, @object
	.size	label$5564, 170
label$5564:
	.value	3
	.quad	.LC1995
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5566
	.align 32
	.type	label$5566, @object
	.size	label$5566, 170
label$5566:
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1748
	.value	-1
	.quad	label$5568
	.align 32
	.type	label$5568, @object
	.size	label$5568, 170
label$5568:
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1796
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5570
	.align 32
	.type	label$5570, @object
	.size	label$5570, 170
label$5570:
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1928
	.value	-1
	.quad	label$5572
	.align 32
	.type	label$5572, @object
	.size	label$5572, 170
label$5572:
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1776
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5574
	.align 32
	.type	label$5574, @object
	.size	label$5574, 170
label$5574:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1750
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$5576
	.align 32
	.type	label$5576, @object
	.size	label$5576, 170
label$5576:
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5578
	.align 32
	.type	label$5578, @object
	.size	label$5578, 170
label$5578:
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5580
	.align 32
	.type	label$5580, @object
	.size	label$5580, 170
label$5580:
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1758
	.value	-1
	.quad	label$5582
	.align 32
	.type	label$5582, @object
	.size	label$5582, 170
label$5582:
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	-1
	.quad	label$5584
	.align 32
	.type	label$5584, @object
	.size	label$5584, 170
label$5584:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1956
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$5586
	.align 32
	.type	label$5586, @object
	.size	label$5586, 170
label$5586:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1749
	.value	-1
	.quad	label$5588
	.align 32
	.type	label$5588, @object
	.size	label$5588, 170
label$5588:
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5590
	.align 32
	.type	label$5590, @object
	.size	label$5590, 170
label$5590:
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1995
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5592
	.align 32
	.type	label$5592, @object
	.size	label$5592, 170
label$5592:
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1954
	.value	-1
	.quad	label$5594
	.align 32
	.type	label$5594, @object
	.size	label$5594, 170
label$5594:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5596
	.align 32
	.type	label$5596, @object
	.size	label$5596, 170
label$5596:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5598
	.align 32
	.type	label$5598, @object
	.size	label$5598, 170
label$5598:
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1986
	.value	-1
	.quad	label$5600
	.align 32
	.type	label$5600, @object
	.size	label$5600, 170
label$5600:
	.value	3
	.quad	.LC1938
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1829
	.value	-1
	.quad	label$5602
	.align 32
	.type	label$5602, @object
	.size	label$5602, 170
label$5602:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1827
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5604
	.align 32
	.type	label$5604, @object
	.size	label$5604, 170
label$5604:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5606
	.align 32
	.type	label$5606, @object
	.size	label$5606, 170
label$5606:
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1770
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1770
	.value	-1
	.quad	label$5608
	.align 32
	.type	label$5608, @object
	.size	label$5608, 170
label$5608:
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1858
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1770
	.value	-1
	.quad	label$5610
	.align 32
	.type	label$5610, @object
	.size	label$5610, 170
label$5610:
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5612
	.align 32
	.type	label$5612, @object
	.size	label$5612, 170
label$5612:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1819
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5614
	.align 32
	.type	label$5614, @object
	.size	label$5614, 170
label$5614:
	.value	3
	.quad	.LC1857
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5616
	.align 32
	.type	label$5616, @object
	.size	label$5616, 170
label$5616:
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5618
	.align 32
	.type	label$5618, @object
	.size	label$5618, 170
label$5618:
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5620
	.align 32
	.type	label$5620, @object
	.size	label$5620, 170
label$5620:
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1777
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	-1
	.quad	label$5622
	.align 32
	.type	label$5622, @object
	.size	label$5622, 170
label$5622:
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2023
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5624
	.align 32
	.type	label$5624, @object
	.size	label$5624, 170
label$5624:
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5626
	.align 32
	.type	label$5626, @object
	.size	label$5626, 170
label$5626:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$5628
	.align 32
	.type	label$5628, @object
	.size	label$5628, 170
label$5628:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2031
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2025
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$5630
	.align 32
	.type	label$5630, @object
	.size	label$5630, 170
label$5630:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1742
	.value	-1
	.quad	label$5632
	.align 32
	.type	label$5632, @object
	.size	label$5632, 170
label$5632:
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1892
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1792
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$5634
	.align 32
	.type	label$5634, @object
	.size	label$5634, 170
label$5634:
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1981
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$5636
	.align 32
	.type	label$5636, @object
	.size	label$5636, 170
label$5636:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5638
	.align 32
	.type	label$5638, @object
	.size	label$5638, 170
label$5638:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1999
	.value	-1
	.quad	label$5640
	.align 32
	.type	label$5640, @object
	.size	label$5640, 170
label$5640:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1803
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1835
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$5642
	.align 32
	.type	label$5642, @object
	.size	label$5642, 170
label$5642:
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	-1
	.quad	label$5644
	.align 32
	.type	label$5644, @object
	.size	label$5644, 170
label$5644:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1958
	.value	-1
	.quad	label$5646
	.align 32
	.type	label$5646, @object
	.size	label$5646, 170
label$5646:
	.value	2
	.quad	.LC1827
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5648
	.align 32
	.type	label$5648, @object
	.size	label$5648, 170
label$5648:
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1835
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1924
	.value	-1
	.quad	label$5650
	.align 32
	.type	label$5650, @object
	.size	label$5650, 170
label$5650:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5652
	.align 32
	.type	label$5652, @object
	.size	label$5652, 170
label$5652:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5654
	.align 32
	.type	label$5654, @object
	.size	label$5654, 170
label$5654:
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5656
	.align 32
	.type	label$5656, @object
	.size	label$5656, 170
label$5656:
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5658
	.align 32
	.type	label$5658, @object
	.size	label$5658, 170
label$5658:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5660
	.align 32
	.type	label$5660, @object
	.size	label$5660, 170
label$5660:
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5662
	.align 32
	.type	label$5662, @object
	.size	label$5662, 170
label$5662:
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1913
	.value	-1
	.quad	label$5664
	.align 32
	.type	label$5664, @object
	.size	label$5664, 170
label$5664:
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1741
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5666
	.align 32
	.type	label$5666, @object
	.size	label$5666, 170
label$5666:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1955
	.value	-1
	.quad	label$5668
	.align 32
	.type	label$5668, @object
	.size	label$5668, 170
label$5668:
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1955
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5670
	.align 32
	.type	label$5670, @object
	.size	label$5670, 170
label$5670:
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5672
	.align 32
	.type	label$5672, @object
	.size	label$5672, 170
label$5672:
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$5674
	.align 32
	.type	label$5674, @object
	.size	label$5674, 170
label$5674:
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$5676
	.align 32
	.type	label$5676, @object
	.size	label$5676, 170
label$5676:
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5678
	.align 32
	.type	label$5678, @object
	.size	label$5678, 170
label$5678:
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5680
	.align 32
	.type	label$5680, @object
	.size	label$5680, 170
label$5680:
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2011
	.value	-1
	.quad	label$5682
	.align 32
	.type	label$5682, @object
	.size	label$5682, 170
label$5682:
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1901
	.value	-1
	.quad	label$5684
	.align 32
	.type	label$5684, @object
	.size	label$5684, 170
label$5684:
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5686
	.align 32
	.type	label$5686, @object
	.size	label$5686, 170
label$5686:
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1822
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$5688
	.align 32
	.type	label$5688, @object
	.size	label$5688, 170
label$5688:
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1943
	.value	-1
	.quad	label$5690
	.align 32
	.type	label$5690, @object
	.size	label$5690, 170
label$5690:
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1993
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1833
	.value	-1
	.quad	label$5692
	.align 32
	.type	label$5692, @object
	.size	label$5692, 170
label$5692:
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1825
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1786
	.value	-1
	.quad	label$5694
	.align 32
	.type	label$5694, @object
	.size	label$5694, 170
label$5694:
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1966
	.value	-1
	.quad	label$5696
	.align 32
	.type	label$5696, @object
	.size	label$5696, 170
label$5696:
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1786
	.value	-1
	.quad	label$5698
	.align 32
	.type	label$5698, @object
	.size	label$5698, 170
label$5698:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5700
	.align 32
	.type	label$5700, @object
	.size	label$5700, 170
label$5700:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1742
	.value	-1
	.quad	label$5702
	.align 32
	.type	label$5702, @object
	.size	label$5702, 170
label$5702:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5704
	.align 32
	.type	label$5704, @object
	.size	label$5704, 170
label$5704:
	.value	3
	.quad	.LC1863
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1862
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1766
	.value	-1
	.quad	label$5706
	.align 32
	.type	label$5706, @object
	.size	label$5706, 170
label$5706:
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5708
	.align 32
	.type	label$5708, @object
	.size	label$5708, 170
label$5708:
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1847
	.value	-1
	.quad	label$5710
	.align 32
	.type	label$5710, @object
	.size	label$5710, 170
label$5710:
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	-1
	.quad	label$5712
	.align 32
	.type	label$5712, @object
	.size	label$5712, 170
label$5712:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1892
	.value	-1
	.quad	label$5714
	.align 32
	.type	label$5714, @object
	.size	label$5714, 170
label$5714:
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1925
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1862
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1847
	.value	-1
	.quad	label$5716
	.align 32
	.type	label$5716, @object
	.size	label$5716, 170
label$5716:
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2002
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5718
	.align 32
	.type	label$5718, @object
	.size	label$5718, 170
label$5718:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC2004
	.value	-1
	.quad	label$5720
	.align 32
	.type	label$5720, @object
	.size	label$5720, 170
label$5720:
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1807
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5722
	.align 32
	.type	label$5722, @object
	.size	label$5722, 170
label$5722:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1757
	.value	-1
	.quad	label$5724
	.align 32
	.type	label$5724, @object
	.size	label$5724, 170
label$5724:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$5726
	.align 32
	.type	label$5726, @object
	.size	label$5726, 170
label$5726:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5728
	.align 32
	.type	label$5728, @object
	.size	label$5728, 170
label$5728:
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	-1
	.quad	label$5730
	.align 32
	.type	label$5730, @object
	.size	label$5730, 170
label$5730:
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1937
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1902
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5732
	.align 32
	.type	label$5732, @object
	.size	label$5732, 170
label$5732:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1937
	.value	-1
	.quad	label$5734
	.align 32
	.type	label$5734, @object
	.size	label$5734, 170
label$5734:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$5736
	.align 32
	.type	label$5736, @object
	.size	label$5736, 170
label$5736:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1889
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2030
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5738
	.align 32
	.type	label$5738, @object
	.size	label$5738, 170
label$5738:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5740
	.align 32
	.type	label$5740, @object
	.size	label$5740, 170
label$5740:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1811
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5742
	.align 32
	.type	label$5742, @object
	.size	label$5742, 170
label$5742:
	.value	2
	.quad	.LC1821
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1938
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5744
	.align 32
	.type	label$5744, @object
	.size	label$5744, 170
label$5744:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5746
	.align 32
	.type	label$5746, @object
	.size	label$5746, 170
label$5746:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1896
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5748
	.align 32
	.type	label$5748, @object
	.size	label$5748, 170
label$5748:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2023
	.value	3
	.quad	.LC1944
	.value	-1
	.quad	label$5750
	.align 32
	.type	label$5750, @object
	.size	label$5750, 170
label$5750:
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1886
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5752
	.align 32
	.type	label$5752, @object
	.size	label$5752, 170
label$5752:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1965
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5754
	.align 32
	.type	label$5754, @object
	.size	label$5754, 170
label$5754:
	.value	3
	.quad	.LC1965
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1862
	.value	-1
	.quad	label$5756
	.align 32
	.type	label$5756, @object
	.size	label$5756, 170
label$5756:
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1908
	.value	-1
	.quad	label$5758
	.align 32
	.type	label$5758, @object
	.size	label$5758, 170
label$5758:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1866
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1997
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	-1
	.quad	label$5760
	.align 32
	.type	label$5760, @object
	.size	label$5760, 170
label$5760:
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1755
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1905
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1905
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1905
	.value	-1
	.quad	label$5762
	.align 32
	.type	label$5762, @object
	.size	label$5762, 170
label$5762:
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$5764
	.align 32
	.type	label$5764, @object
	.size	label$5764, 170
label$5764:
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1751
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5766
	.align 32
	.type	label$5766, @object
	.size	label$5766, 170
label$5766:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5768
	.align 32
	.type	label$5768, @object
	.size	label$5768, 170
label$5768:
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$5770
	.align 32
	.type	label$5770, @object
	.size	label$5770, 170
label$5770:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5772
	.align 32
	.type	label$5772, @object
	.size	label$5772, 170
label$5772:
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5774
	.align 32
	.type	label$5774, @object
	.size	label$5774, 170
label$5774:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5776
	.align 32
	.type	label$5776, @object
	.size	label$5776, 170
label$5776:
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$5778
	.align 32
	.type	label$5778, @object
	.size	label$5778, 170
label$5778:
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1831
	.value	-1
	.quad	label$5780
	.align 32
	.type	label$5780, @object
	.size	label$5780, 170
label$5780:
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1786
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$5782
	.align 32
	.type	label$5782, @object
	.size	label$5782, 170
label$5782:
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5784
	.align 32
	.type	label$5784, @object
	.size	label$5784, 170
label$5784:
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1983
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	-1
	.quad	label$5786
	.align 32
	.type	label$5786, @object
	.size	label$5786, 170
label$5786:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1767
	.value	-1
	.quad	label$5788
	.align 32
	.type	label$5788, @object
	.size	label$5788, 170
label$5788:
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$5790
	.align 32
	.type	label$5790, @object
	.size	label$5790, 170
label$5790:
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5792
	.align 32
	.type	label$5792, @object
	.size	label$5792, 170
label$5792:
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1756
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1751
	.value	-1
	.quad	label$5794
	.align 32
	.type	label$5794, @object
	.size	label$5794, 170
label$5794:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1820
	.value	-1
	.quad	label$5796
	.align 32
	.type	label$5796, @object
	.size	label$5796, 170
label$5796:
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1826
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1826
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$5798
	.align 32
	.type	label$5798, @object
	.size	label$5798, 170
label$5798:
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1821
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2024
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5800
	.align 32
	.type	label$5800, @object
	.size	label$5800, 170
label$5800:
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1839
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1834
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1835
	.value	-1
	.quad	label$5802
	.align 32
	.type	label$5802, @object
	.size	label$5802, 170
label$5802:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1831
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1831
	.value	-1
	.quad	label$5804
	.align 32
	.type	label$5804, @object
	.size	label$5804, 170
label$5804:
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1820
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5806
	.align 32
	.type	label$5806, @object
	.size	label$5806, 170
label$5806:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5808
	.align 32
	.type	label$5808, @object
	.size	label$5808, 170
label$5808:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1752
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1866
	.value	3
	.quad	.LC1944
	.value	-1
	.quad	label$5810
	.align 32
	.type	label$5810, @object
	.size	label$5810, 170
label$5810:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5812
	.align 32
	.type	label$5812, @object
	.size	label$5812, 170
label$5812:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1969
	.value	-1
	.quad	label$5814
	.align 32
	.type	label$5814, @object
	.size	label$5814, 170
label$5814:
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5816
	.align 32
	.type	label$5816, @object
	.size	label$5816, 170
label$5816:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1789
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	-1
	.quad	label$5818
	.align 32
	.type	label$5818, @object
	.size	label$5818, 170
label$5818:
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1936
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1992
	.value	-1
	.quad	label$5820
	.align 32
	.type	label$5820, @object
	.size	label$5820, 170
label$5820:
	.value	3
	.quad	.LC1946
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	-1
	.quad	label$5822
	.align 32
	.type	label$5822, @object
	.size	label$5822, 170
label$5822:
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5824
	.align 32
	.type	label$5824, @object
	.size	label$5824, 170
label$5824:
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1965
	.value	-1
	.quad	label$5826
	.align 32
	.type	label$5826, @object
	.size	label$5826, 170
label$5826:
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1920
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1892
	.value	-1
	.quad	label$5828
	.align 32
	.type	label$5828, @object
	.size	label$5828, 170
label$5828:
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1944
	.value	-1
	.quad	label$5830
	.align 32
	.type	label$5830, @object
	.size	label$5830, 170
label$5830:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1981
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5832
	.align 32
	.type	label$5832, @object
	.size	label$5832, 170
label$5832:
	.value	3
	.quad	.LC1875
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1824
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5834
	.align 32
	.type	label$5834, @object
	.size	label$5834, 170
label$5834:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1944
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$5836
	.align 32
	.type	label$5836, @object
	.size	label$5836, 170
label$5836:
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1822
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1776
	.value	-1
	.quad	label$5838
	.align 32
	.type	label$5838, @object
	.size	label$5838, 170
label$5838:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5840
	.align 32
	.type	label$5840, @object
	.size	label$5840, 170
label$5840:
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2020
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1946
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$5842
	.align 32
	.type	label$5842, @object
	.size	label$5842, 170
label$5842:
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1937
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1828
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1822
	.value	-1
	.quad	label$5844
	.align 32
	.type	label$5844, @object
	.size	label$5844, 170
label$5844:
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1824
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1828
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5846
	.align 32
	.type	label$5846, @object
	.size	label$5846, 170
label$5846:
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1924
	.value	3
	.quad	.LC1946
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1741
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$5848
	.align 32
	.type	label$5848, @object
	.size	label$5848, 170
label$5848:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1942
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	-1
	.quad	label$5850
	.align 32
	.type	label$5850, @object
	.size	label$5850, 170
label$5850:
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1941
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1881
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$5852
	.align 32
	.type	label$5852, @object
	.size	label$5852, 170
label$5852:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$5854
	.align 32
	.type	label$5854, @object
	.size	label$5854, 170
label$5854:
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1873
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5856
	.align 32
	.type	label$5856, @object
	.size	label$5856, 170
label$5856:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5858
	.align 32
	.type	label$5858, @object
	.size	label$5858, 170
label$5858:
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1863
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1872
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1873
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1936
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	-1
	.quad	label$5860
	.align 32
	.type	label$5860, @object
	.size	label$5860, 170
label$5860:
	.value	3
	.quad	.LC1947
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1937
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1939
	.value	-1
	.quad	label$5862
	.align 32
	.type	label$5862, @object
	.size	label$5862, 170
label$5862:
	.value	3
	.quad	.LC1907
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1812
	.value	-1
	.quad	label$5864
	.align 32
	.type	label$5864, @object
	.size	label$5864, 170
label$5864:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5866
	.align 32
	.type	label$5866, @object
	.size	label$5866, 170
label$5866:
	.value	2
	.quad	.LC1750
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2013
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$5868
	.align 32
	.type	label$5868, @object
	.size	label$5868, 170
label$5868:
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1871
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5870
	.align 32
	.type	label$5870, @object
	.size	label$5870, 170
label$5870:
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1808
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	-1
	.quad	label$5872
	.align 32
	.type	label$5872, @object
	.size	label$5872, 170
label$5872:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5874
	.align 32
	.type	label$5874, @object
	.size	label$5874, 170
label$5874:
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5876
	.align 32
	.type	label$5876, @object
	.size	label$5876, 170
label$5876:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1899
	.value	-1
	.quad	label$5878
	.align 32
	.type	label$5878, @object
	.size	label$5878, 170
label$5878:
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5880
	.align 32
	.type	label$5880, @object
	.size	label$5880, 170
label$5880:
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1829
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5882
	.align 32
	.type	label$5882, @object
	.size	label$5882, 170
label$5882:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1792
	.value	-1
	.quad	label$5884
	.align 32
	.type	label$5884, @object
	.size	label$5884, 170
label$5884:
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2024
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5886
	.align 32
	.type	label$5886, @object
	.size	label$5886, 170
label$5886:
	.value	3
	.quad	.LC2024
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2024
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1950
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2024
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5888
	.align 32
	.type	label$5888, @object
	.size	label$5888, 170
label$5888:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1927
	.value	-1
	.quad	label$5890
	.align 32
	.type	label$5890, @object
	.size	label$5890, 170
label$5890:
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1883
	.value	-1
	.quad	label$5892
	.align 32
	.type	label$5892, @object
	.size	label$5892, 170
label$5892:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2003
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1829
	.value	-1
	.quad	label$5894
	.align 32
	.type	label$5894, @object
	.size	label$5894, 170
label$5894:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	-1
	.quad	label$5896
	.align 32
	.type	label$5896, @object
	.size	label$5896, 170
label$5896:
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$5898
	.align 32
	.type	label$5898, @object
	.size	label$5898, 170
label$5898:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1771
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1968
	.value	-1
	.quad	label$5900
	.align 32
	.type	label$5900, @object
	.size	label$5900, 170
label$5900:
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1805
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1845
	.value	-1
	.quad	label$5902
	.align 32
	.type	label$5902, @object
	.size	label$5902, 170
label$5902:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$5904
	.align 32
	.type	label$5904, @object
	.size	label$5904, 170
label$5904:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5906
	.align 32
	.type	label$5906, @object
	.size	label$5906, 170
label$5906:
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$5908
	.align 32
	.type	label$5908, @object
	.size	label$5908, 170
label$5908:
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$5910
	.align 32
	.type	label$5910, @object
	.size	label$5910, 170
label$5910:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1944
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1944
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1944
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1904
	.value	-1
	.quad	label$5912
	.align 32
	.type	label$5912, @object
	.size	label$5912, 170
label$5912:
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1944
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1904
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2005
	.value	3
	.quad	.LC2010
	.value	-1
	.quad	label$5914
	.align 32
	.type	label$5914, @object
	.size	label$5914, 170
label$5914:
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1751
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2025
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$5916
	.align 32
	.type	label$5916, @object
	.size	label$5916, 170
label$5916:
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1867
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2014
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1879
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5918
	.align 32
	.type	label$5918, @object
	.size	label$5918, 170
label$5918:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1974
	.value	3
	.quad	.LC1871
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1913
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1867
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1903
	.value	-1
	.quad	label$5920
	.align 32
	.type	label$5920, @object
	.size	label$5920, 170
label$5920:
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1881
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1796
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1789
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1789
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC2022
	.value	2
	.quad	.LC1788
	.value	-1
	.quad	label$5922
	.align 32
	.type	label$5922, @object
	.size	label$5922, 170
label$5922:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$5924
	.align 32
	.type	label$5924, @object
	.size	label$5924, 170
label$5924:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1942
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1812
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1986
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$5926
	.align 32
	.type	label$5926, @object
	.size	label$5926, 170
label$5926:
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1992
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5928
	.align 32
	.type	label$5928, @object
	.size	label$5928, 170
label$5928:
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1806
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1948
	.value	-1
	.quad	label$5930
	.align 32
	.type	label$5930, @object
	.size	label$5930, 170
label$5930:
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1894
	.value	3
	.quad	.LC1951
	.value	-1
	.quad	label$5932
	.align 32
	.type	label$5932, @object
	.size	label$5932, 170
label$5932:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5934
	.align 32
	.type	label$5934, @object
	.size	label$5934, 170
label$5934:
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1833
	.value	-1
	.quad	label$5936
	.align 32
	.type	label$5936, @object
	.size	label$5936, 170
label$5936:
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1815
	.value	1
	.quad	.LC1737
	.value	-1
	.quad	label$5938
	.align 32
	.type	label$5938, @object
	.size	label$5938, 170
label$5938:
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1755
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5940
	.align 32
	.type	label$5940, @object
	.size	label$5940, 170
label$5940:
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$5942
	.align 32
	.type	label$5942, @object
	.size	label$5942, 170
label$5942:
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1986
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	-1
	.quad	label$5944
	.align 32
	.type	label$5944, @object
	.size	label$5944, 170
label$5944:
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1855
	.value	-1
	.quad	label$5946
	.align 32
	.type	label$5946, @object
	.size	label$5946, 170
label$5946:
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1858
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1889
	.value	-1
	.quad	label$5948
	.align 32
	.type	label$5948, @object
	.size	label$5948, 170
label$5948:
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5950
	.align 32
	.type	label$5950, @object
	.size	label$5950, 170
label$5950:
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1759
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1779
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1749
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5952
	.align 32
	.type	label$5952, @object
	.size	label$5952, 170
label$5952:
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5954
	.align 32
	.type	label$5954, @object
	.size	label$5954, 170
label$5954:
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1950
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2021
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$5956
	.align 32
	.type	label$5956, @object
	.size	label$5956, 170
label$5956:
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2007
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1762
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	-1
	.quad	label$5958
	.align 32
	.type	label$5958, @object
	.size	label$5958, 170
label$5958:
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1859
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1953
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$5960
	.align 32
	.type	label$5960, @object
	.size	label$5960, 170
label$5960:
	.value	3
	.quad	.LC1895
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1867
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1947
	.value	-1
	.quad	label$5962
	.align 32
	.type	label$5962, @object
	.size	label$5962, 170
label$5962:
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$5964
	.align 32
	.type	label$5964, @object
	.size	label$5964, 170
label$5964:
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1964
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1847
	.value	1
	.quad	.LC1735
	.value	-1
	.quad	label$5966
	.align 32
	.type	label$5966, @object
	.size	label$5966, 170
label$5966:
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1786
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1788
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$5968
	.align 32
	.type	label$5968, @object
	.size	label$5968, 170
label$5968:
	.value	3
	.quad	.LC1857
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1855
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1857
	.value	-1
	.quad	label$5970
	.align 32
	.type	label$5970, @object
	.size	label$5970, 170
label$5970:
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1857
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1855
	.value	-1
	.quad	label$5972
	.align 32
	.type	label$5972, @object
	.size	label$5972, 170
label$5972:
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1854
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1821
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1801
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1977
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	-1
	.quad	label$5974
	.align 32
	.type	label$5974, @object
	.size	label$5974, 170
label$5974:
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1774
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1749
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1791
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5976
	.align 32
	.type	label$5976, @object
	.size	label$5976, 170
label$5976:
	.value	2
	.quad	.LC1771
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1817
	.value	-1
	.quad	label$5978
	.align 32
	.type	label$5978, @object
	.size	label$5978, 170
label$5978:
	.value	3
	.quad	.LC1987
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$5980
	.align 32
	.type	label$5980, @object
	.size	label$5980, 170
label$5980:
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1889
	.value	-1
	.quad	label$5982
	.align 32
	.type	label$5982, @object
	.size	label$5982, 170
label$5982:
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1836
	.value	2
	.quad	.LC1779
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1830
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$5984
	.align 32
	.type	label$5984, @object
	.size	label$5984, 170
label$5984:
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1901
	.value	-1
	.quad	label$5986
	.align 32
	.type	label$5986, @object
	.size	label$5986, 170
label$5986:
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1877
	.value	-1
	.quad	label$5988
	.align 32
	.type	label$5988, @object
	.size	label$5988, 170
label$5988:
	.value	2
	.quad	.LC1770
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1901
	.value	2
	.quad	.LC1766
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$5990
	.align 32
	.type	label$5990, @object
	.size	label$5990, 170
label$5990:
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1732
	.value	3
	.quad	.LC1945
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1905
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$5992
	.align 32
	.type	label$5992, @object
	.size	label$5992, 170
label$5992:
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1945
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1905
	.value	3
	.quad	.LC1851
	.value	3
	.quad	.LC1972
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2031
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$5994
	.align 32
	.type	label$5994, @object
	.size	label$5994, 170
label$5994:
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1899
	.value	3
	.quad	.LC2026
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2021
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1926
	.value	-1
	.quad	label$5996
	.align 32
	.type	label$5996, @object
	.size	label$5996, 170
label$5996:
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$5998
	.align 32
	.type	label$5998, @object
	.size	label$5998, 170
label$5998:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$6000
	.align 32
	.type	label$6000, @object
	.size	label$6000, 170
label$6000:
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1809
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1770
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$6002
	.align 32
	.type	label$6002, @object
	.size	label$6002, 170
label$6002:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1964
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1962
	.value	3
	.quad	.LC2003
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$6004
	.align 32
	.type	label$6004, @object
	.size	label$6004, 170
label$6004:
	.value	2
	.quad	.LC1764
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1965
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1747
	.value	-1
	.quad	label$6006
	.align 32
	.type	label$6006, @object
	.size	label$6006, 170
label$6006:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1738
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1965
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1941
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2004
	.value	3
	.quad	.LC1847
	.value	-1
	.quad	label$6008
	.align 32
	.type	label$6008, @object
	.size	label$6008, 170
label$6008:
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1815
	.value	2
	.quad	.LC1792
	.value	-1
	.quad	label$6010
	.align 32
	.type	label$6010, @object
	.size	label$6010, 170
label$6010:
	.value	3
	.quad	.LC2010
	.value	3
	.quad	.LC1918
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1819
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1922
	.value	-1
	.quad	label$6012
	.align 32
	.type	label$6012, @object
	.size	label$6012, 170
label$6012:
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2029
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1929
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1878
	.value	-1
	.quad	label$6014
	.align 32
	.type	label$6014, @object
	.size	label$6014, 170
label$6014:
	.value	2
	.quad	.LC1809
	.value	2
	.quad	.LC1844
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$6016
	.align 32
	.type	label$6016, @object
	.size	label$6016, 170
label$6016:
	.value	3
	.quad	.LC1939
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$6018
	.align 32
	.type	label$6018, @object
	.size	label$6018, 170
label$6018:
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1885
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1982
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1885
	.value	-1
	.quad	label$6020
	.align 32
	.type	label$6020, @object
	.size	label$6020, 170
label$6020:
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1929
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1904
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1972
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1780
	.value	-1
	.quad	label$6022
	.align 32
	.type	label$6022, @object
	.size	label$6022, 170
label$6022:
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1732
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1971
	.value	-1
	.quad	label$6024
	.align 32
	.type	label$6024, @object
	.size	label$6024, 170
label$6024:
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1979
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1742
	.value	-1
	.quad	label$6026
	.align 32
	.type	label$6026, @object
	.size	label$6026, 170
label$6026:
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	-1
	.quad	label$6028
	.align 32
	.type	label$6028, @object
	.size	label$6028, 170
label$6028:
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1864
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1836
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1742
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1814
	.value	-1
	.quad	label$6030
	.align 32
	.type	label$6030, @object
	.size	label$6030, 170
label$6030:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1747
	.value	-1
	.quad	label$6032
	.align 32
	.type	label$6032, @object
	.size	label$6032, 170
label$6032:
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1737
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1838
	.value	-1
	.quad	label$6034
	.align 32
	.type	label$6034, @object
	.size	label$6034, 170
label$6034:
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1850
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1721
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1944
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1839
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC2005
	.value	-1
	.quad	label$6036
	.align 32
	.type	label$6036, @object
	.size	label$6036, 170
label$6036:
	.value	2
	.quad	.LC1837
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$6038
	.align 32
	.type	label$6038, @object
	.size	label$6038, 170
label$6038:
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1859
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1842
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1854
	.value	-1
	.quad	label$6040
	.align 32
	.type	label$6040, @object
	.size	label$6040, 170
label$6040:
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1846
	.value	2
	.quad	.LC1768
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1746
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1950
	.value	-1
	.quad	label$6042
	.align 32
	.type	label$6042, @object
	.size	label$6042, 170
label$6042:
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1838
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1838
	.value	-1
	.quad	label$6044
	.align 32
	.type	label$6044, @object
	.size	label$6044, 170
label$6044:
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1913
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1855
	.value	2
	.quad	.LC1773
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1916
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1855
	.value	-1
	.quad	label$6046
	.align 32
	.type	label$6046, @object
	.size	label$6046, 170
label$6046:
	.value	2
	.quad	.LC1774
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1924
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1991
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1794
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1886
	.value	-1
	.quad	label$6048
	.align 32
	.type	label$6048, @object
	.size	label$6048, 170
label$6048:
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1996
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1817
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1934
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$6050
	.align 32
	.type	label$6050, @object
	.size	label$6050, 170
label$6050:
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1931
	.value	-1
	.quad	label$6052
	.align 32
	.type	label$6052, @object
	.size	label$6052, 170
label$6052:
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1730
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1737
	.value	-1
	.quad	label$6054
	.align 32
	.type	label$6054, @object
	.size	label$6054, 170
label$6054:
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$6056
	.align 32
	.type	label$6056, @object
	.size	label$6056, 170
label$6056:
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1760
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1747
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1943
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1955
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	-1
	.quad	label$6058
	.align 32
	.type	label$6058, @object
	.size	label$6058, 170
label$6058:
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2001
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC2016
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC2005
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1993
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$6060
	.align 32
	.type	label$6060, @object
	.size	label$6060, 170
label$6060:
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC1948
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1913
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1922
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1837
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1737
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1738
	.value	-1
	.quad	label$6062
	.align 32
	.type	label$6062, @object
	.size	label$6062, 170
label$6062:
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2010
	.value	1
	.quad	.LC1726
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC1886
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6064
	.align 32
	.type	label$6064, @object
	.size	label$6064, 170
label$6064:
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1748
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$6066
	.align 32
	.type	label$6066, @object
	.size	label$6066, 170
label$6066:
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1847
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1755
	.value	3
	.quad	.LC1957
	.value	-1
	.quad	label$6068
	.align 32
	.type	label$6068, @object
	.size	label$6068, 170
label$6068:
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1847
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1846
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1752
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1845
	.value	-1
	.quad	label$6070
	.align 32
	.type	label$6070, @object
	.size	label$6070, 170
label$6070:
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1871
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1885
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC1939
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1995
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1726
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1991
	.value	-1
	.quad	label$6072
	.align 32
	.type	label$6072, @object
	.size	label$6072, 170
label$6072:
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1730
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1925
	.value	-1
	.quad	label$6074
	.align 32
	.type	label$6074, @object
	.size	label$6074, 170
label$6074:
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1966
	.value	2
	.quad	.LC1837
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1781
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$6076
	.align 32
	.type	label$6076, @object
	.size	label$6076, 170
label$6076:
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1883
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1925
	.value	2
	.quad	.LC1811
	.value	3
	.quad	.LC1892
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1776
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1768
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1730
	.value	-1
	.quad	label$6078
	.align 32
	.type	label$6078, @object
	.size	label$6078, 170
label$6078:
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1979
	.value	3
	.quad	.LC1927
	.value	3
	.quad	.LC1925
	.value	3
	.quad	.LC1862
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC1971
	.value	2
	.quad	.LC1781
	.value	-1
	.quad	label$6080
	.align 32
	.type	label$6080, @object
	.size	label$6080, 170
label$6080:
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1969
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1778
	.value	3
	.quad	.LC1927
	.value	2
	.quad	.LC1838
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1781
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2004
	.value	2
	.quad	.LC1838
	.value	-1
	.quad	label$6082
	.align 32
	.type	label$6082, @object
	.size	label$6082, 170
label$6082:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1780
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1808
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1782
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2008
	.value	-1
	.quad	label$6084
	.align 32
	.type	label$6084, @object
	.size	label$6084, 170
label$6084:
	.value	3
	.quad	.LC2010
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1939
	.value	3
	.quad	.LC2031
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1795
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1892
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1726
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$6086
	.align 32
	.type	label$6086, @object
	.size	label$6086, 170
label$6086:
	.value	1
	.quad	.LC1730
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1735
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1931
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$6088
	.align 32
	.type	label$6088, @object
	.size	label$6088, 170
label$6088:
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2030
	.value	2
	.quad	.LC1724
	.value	2
	.quad	.LC1761
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1906
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6090
	.align 32
	.type	label$6090, @object
	.size	label$6090, 170
label$6090:
	.value	3
	.quad	.LC1955
	.value	3
	.quad	.LC1958
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1721
	.value	3
	.quad	.LC1886
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1988
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2008
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6092
	.align 32
	.type	label$6092, @object
	.size	label$6092, 170
label$6092:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1996
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1878
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$6094
	.align 32
	.type	label$6094, @object
	.size	label$6094, 170
label$6094:
	.value	2
	.quad	.LC1816
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1864
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC1929
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6096
	.align 32
	.type	label$6096, @object
	.size	label$6096, 170
label$6096:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC2014
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$6098
	.align 32
	.type	label$6098, @object
	.size	label$6098, 170
label$6098:
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	3
	.quad	.LC1932
	.value	-1
	.quad	label$6100
	.align 32
	.type	label$6100, @object
	.size	label$6100, 170
label$6100:
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1746
	.value	3
	.quad	.LC1918
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1922
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1853
	.value	3
	.quad	.LC1979
	.value	-1
	.quad	label$6102
	.align 32
	.type	label$6102, @object
	.size	label$6102, 170
label$6102:
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1817
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1948
	.value	3
	.quad	.LC1922
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC1984
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1762
	.value	-1
	.quad	label$6104
	.align 32
	.type	label$6104, @object
	.size	label$6104, 170
label$6104:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1835
	.value	3
	.quad	.LC1954
	.value	3
	.quad	.LC1979
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1925
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$6106
	.align 32
	.type	label$6106, @object
	.size	label$6106, 170
label$6106:
	.value	3
	.quad	.LC1953
	.value	3
	.quad	.LC1908
	.value	2
	.quad	.LC1812
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2011
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC1931
	.value	2
	.quad	.LC1820
	.value	3
	.quad	.LC1918
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	2
	.quad	.LC1762
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1957
	.value	-1
	.quad	label$6108
	.align 32
	.type	label$6108, @object
	.size	label$6108, 170
label$6108:
	.value	3
	.quad	.LC1851
	.value	2
	.quad	.LC1815
	.value	3
	.quad	.LC1899
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1926
	.value	2
	.quad	.LC1842
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1814
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1879
	.value	-1
	.quad	label$6110
	.align 32
	.type	label$6110, @object
	.size	label$6110, 170
label$6110:
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1932
	.value	2
	.quad	.LC1796
	.value	2
	.quad	.LC1776
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC1862
	.value	2
	.quad	.LC1788
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1829
	.value	3
	.quad	.LC1865
	.value	2
	.quad	.LC1751
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1943
	.value	2
	.quad	.LC1757
	.value	3
	.quad	.LC1868
	.value	-1
	.quad	label$6112
	.align 32
	.type	label$6112, @object
	.size	label$6112, 170
label$6112:
	.value	2
	.quad	.LC1782
	.value	3
	.quad	.LC2016
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1885
	.value	3
	.quad	.LC1872
	.value	2
	.quad	.LC1759
	.value	3
	.quad	.LC1883
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1777
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1833
	.value	2
	.quad	.LC1831
	.value	2
	.quad	.LC1724
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1866
	.value	-1
	.quad	label$6114
	.align 32
	.type	label$6114, @object
	.size	label$6114, 170
label$6114:
	.value	3
	.quad	.LC2033
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1966
	.value	3
	.quad	.LC1878
	.value	2
	.quad	.LC1785
	.value	3
	.quad	.LC1863
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1744
	.value	3
	.quad	.LC1879
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1931
	.value	3
	.quad	.LC1957
	.value	3
	.quad	.LC1918
	.value	-1
	.quad	label$6116
	.align 32
	.type	label$6116, @object
	.size	label$6116, 170
label$6116:
	.value	3
	.quad	.LC1957
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1774
	.value	3
	.quad	.LC1951
	.value	3
	.quad	.LC1926
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1853
	.value	2
	.quad	.LC1822
	.value	3
	.quad	.LC1899
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1762
	.value	2
	.quad	.LC1767
	.value	3
	.quad	.LC1954
	.value	2
	.quad	.LC1817
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$6118
	.align 32
	.type	label$6118, @object
	.size	label$6118, 170
label$6118:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6120
	.align 32
	.type	label$6120, @object
	.size	label$6120, 170
label$6120:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6122
	.align 32
	.type	label$6122, @object
	.size	label$6122, 170
label$6122:
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6124
	.align 32
	.type	label$6124, @object
	.size	label$6124, 170
label$6124:
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6126
	.align 32
	.type	label$6126, @object
	.size	label$6126, 170
label$6126:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6128
	.align 32
	.type	label$6128, @object
	.size	label$6128, 170
label$6128:
	.value	2
	.quad	.LC1760
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1792
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6130
	.align 32
	.type	label$6130, @object
	.size	label$6130, 170
label$6130:
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1855
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6132
	.align 32
	.type	label$6132, @object
	.size	label$6132, 170
label$6132:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6134
	.align 32
	.type	label$6134, @object
	.size	label$6134, 170
label$6134:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6136
	.align 32
	.type	label$6136, @object
	.size	label$6136, 170
label$6136:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6138
	.align 32
	.type	label$6138, @object
	.size	label$6138, 170
label$6138:
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6140
	.align 32
	.type	label$6140, @object
	.size	label$6140, 170
label$6140:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1868
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6142
	.align 32
	.type	label$6142, @object
	.size	label$6142, 170
label$6142:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6144
	.align 32
	.type	label$6144, @object
	.size	label$6144, 170
label$6144:
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6146
	.align 32
	.type	label$6146, @object
	.size	label$6146, 170
label$6146:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC2032
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6148
	.align 32
	.type	label$6148, @object
	.size	label$6148, 170
label$6148:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6150
	.align 32
	.type	label$6150, @object
	.size	label$6150, 170
label$6150:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6152
	.align 32
	.type	label$6152, @object
	.size	label$6152, 170
label$6152:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6154
	.align 32
	.type	label$6154, @object
	.size	label$6154, 170
label$6154:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1809
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6156
	.align 32
	.type	label$6156, @object
	.size	label$6156, 170
label$6156:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1800
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6158
	.align 32
	.type	label$6158, @object
	.size	label$6158, 170
label$6158:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6160
	.align 32
	.type	label$6160, @object
	.size	label$6160, 170
label$6160:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6162
	.align 32
	.type	label$6162, @object
	.size	label$6162, 170
label$6162:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6164
	.align 32
	.type	label$6164, @object
	.size	label$6164, 170
label$6164:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6166
	.align 32
	.type	label$6166, @object
	.size	label$6166, 170
label$6166:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6168
	.align 32
	.type	label$6168, @object
	.size	label$6168, 170
label$6168:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1758
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6170
	.align 32
	.type	label$6170, @object
	.size	label$6170, 170
label$6170:
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1877
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6172
	.align 32
	.type	label$6172, @object
	.size	label$6172, 170
label$6172:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6174
	.align 32
	.type	label$6174, @object
	.size	label$6174, 170
label$6174:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6176
	.align 32
	.type	label$6176, @object
	.size	label$6176, 170
label$6176:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$6178
	.align 32
	.type	label$6178, @object
	.size	label$6178, 170
label$6178:
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6180
	.align 32
	.type	label$6180, @object
	.size	label$6180, 170
label$6180:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1860
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6182
	.align 32
	.type	label$6182, @object
	.size	label$6182, 170
label$6182:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6184
	.align 32
	.type	label$6184, @object
	.size	label$6184, 170
label$6184:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6186
	.align 32
	.type	label$6186, @object
	.size	label$6186, 170
label$6186:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6188
	.align 32
	.type	label$6188, @object
	.size	label$6188, 170
label$6188:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$6190
	.align 32
	.type	label$6190, @object
	.size	label$6190, 170
label$6190:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6192
	.align 32
	.type	label$6192, @object
	.size	label$6192, 170
label$6192:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1997
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6194
	.align 32
	.type	label$6194, @object
	.size	label$6194, 170
label$6194:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$6196
	.align 32
	.type	label$6196, @object
	.size	label$6196, 170
label$6196:
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	-1
	.quad	label$6198
	.align 32
	.type	label$6198, @object
	.size	label$6198, 170
label$6198:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6200
	.align 32
	.type	label$6200, @object
	.size	label$6200, 170
label$6200:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1790
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1758
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6202
	.align 32
	.type	label$6202, @object
	.size	label$6202, 170
label$6202:
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6204
	.align 32
	.type	label$6204, @object
	.size	label$6204, 170
label$6204:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6206
	.align 32
	.type	label$6206, @object
	.size	label$6206, 170
label$6206:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$6208
	.align 32
	.type	label$6208, @object
	.size	label$6208, 170
label$6208:
	.value	1
	.quad	.LC1735
	.value	2
	.quad	.LC1758
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1758
	.value	1
	.quad	.LC1735
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6210
	.align 32
	.type	label$6210, @object
	.size	label$6210, 170
label$6210:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6212
	.align 32
	.type	label$6212, @object
	.size	label$6212, 170
label$6212:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1867
	.value	2
	.quad	.LC1790
	.value	2
	.quad	.LC1790
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1721
	.value	-1
	.quad	label$6214
	.align 32
	.type	label$6214, @object
	.size	label$6214, 170
label$6214:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6216
	.align 32
	.type	label$6216, @object
	.size	label$6216, 170
label$6216:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6218
	.align 32
	.type	label$6218, @object
	.size	label$6218, 170
label$6218:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	-1
	.quad	label$6220
	.align 32
	.type	label$6220, @object
	.size	label$6220, 170
label$6220:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$6222
	.align 32
	.type	label$6222, @object
	.size	label$6222, 170
label$6222:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1878
	.value	-1
	.quad	label$6224
	.align 32
	.type	label$6224, @object
	.size	label$6224, 170
label$6224:
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6226
	.align 32
	.type	label$6226, @object
	.size	label$6226, 170
label$6226:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6228
	.align 32
	.type	label$6228, @object
	.size	label$6228, 170
label$6228:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6230
	.align 32
	.type	label$6230, @object
	.size	label$6230, 170
label$6230:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6232
	.align 32
	.type	label$6232, @object
	.size	label$6232, 170
label$6232:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6234
	.align 32
	.type	label$6234, @object
	.size	label$6234, 170
label$6234:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$6236
	.align 32
	.type	label$6236, @object
	.size	label$6236, 170
label$6236:
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6238
	.align 32
	.type	label$6238, @object
	.size	label$6238, 170
label$6238:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6240
	.align 32
	.type	label$6240, @object
	.size	label$6240, 170
label$6240:
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6242
	.align 32
	.type	label$6242, @object
	.size	label$6242, 170
label$6242:
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6244
	.align 32
	.type	label$6244, @object
	.size	label$6244, 170
label$6244:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6246
	.align 32
	.type	label$6246, @object
	.size	label$6246, 170
label$6246:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6248
	.align 32
	.type	label$6248, @object
	.size	label$6248, 170
label$6248:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6250
	.align 32
	.type	label$6250, @object
	.size	label$6250, 170
label$6250:
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6252
	.align 32
	.type	label$6252, @object
	.size	label$6252, 170
label$6252:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6254
	.align 32
	.type	label$6254, @object
	.size	label$6254, 170
label$6254:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6256
	.align 32
	.type	label$6256, @object
	.size	label$6256, 170
label$6256:
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6258
	.align 32
	.type	label$6258, @object
	.size	label$6258, 170
label$6258:
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6260
	.align 32
	.type	label$6260, @object
	.size	label$6260, 170
label$6260:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6262
	.align 32
	.type	label$6262, @object
	.size	label$6262, 170
label$6262:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6264
	.align 32
	.type	label$6264, @object
	.size	label$6264, 170
label$6264:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6266
	.align 32
	.type	label$6266, @object
	.size	label$6266, 170
label$6266:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6268
	.align 32
	.type	label$6268, @object
	.size	label$6268, 170
label$6268:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6270
	.align 32
	.type	label$6270, @object
	.size	label$6270, 170
label$6270:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6272
	.align 32
	.type	label$6272, @object
	.size	label$6272, 170
label$6272:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6274
	.align 32
	.type	label$6274, @object
	.size	label$6274, 170
label$6274:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6276
	.align 32
	.type	label$6276, @object
	.size	label$6276, 170
label$6276:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6278
	.align 32
	.type	label$6278, @object
	.size	label$6278, 170
label$6278:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6280
	.align 32
	.type	label$6280, @object
	.size	label$6280, 170
label$6280:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6282
	.align 32
	.type	label$6282, @object
	.size	label$6282, 170
label$6282:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6284
	.align 32
	.type	label$6284, @object
	.size	label$6284, 170
label$6284:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6286
	.align 32
	.type	label$6286, @object
	.size	label$6286, 170
label$6286:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6288
	.align 32
	.type	label$6288, @object
	.size	label$6288, 170
label$6288:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6290
	.align 32
	.type	label$6290, @object
	.size	label$6290, 170
label$6290:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6292
	.align 32
	.type	label$6292, @object
	.size	label$6292, 170
label$6292:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6294
	.align 32
	.type	label$6294, @object
	.size	label$6294, 170
label$6294:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6296
	.align 32
	.type	label$6296, @object
	.size	label$6296, 170
label$6296:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6298
	.align 32
	.type	label$6298, @object
	.size	label$6298, 170
label$6298:
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6300
	.align 32
	.type	label$6300, @object
	.size	label$6300, 170
label$6300:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6302
	.align 32
	.type	label$6302, @object
	.size	label$6302, 170
label$6302:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6304
	.align 32
	.type	label$6304, @object
	.size	label$6304, 170
label$6304:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	-1
	.quad	label$6306
	.align 32
	.type	label$6306, @object
	.size	label$6306, 170
label$6306:
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6308
	.align 32
	.type	label$6308, @object
	.size	label$6308, 170
label$6308:
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6310
	.align 32
	.type	label$6310, @object
	.size	label$6310, 170
label$6310:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6312
	.align 32
	.type	label$6312, @object
	.size	label$6312, 170
label$6312:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6314
	.align 32
	.type	label$6314, @object
	.size	label$6314, 170
label$6314:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6316
	.align 32
	.type	label$6316, @object
	.size	label$6316, 170
label$6316:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	-1
	.quad	label$6318
	.align 32
	.type	label$6318, @object
	.size	label$6318, 170
label$6318:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6320
	.align 32
	.type	label$6320, @object
	.size	label$6320, 170
label$6320:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1968
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6322
	.align 32
	.type	label$6322, @object
	.size	label$6322, 170
label$6322:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1761
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2032
	.value	-1
	.quad	label$6324
	.align 32
	.type	label$6324, @object
	.size	label$6324, 170
label$6324:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1898
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1800
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	-1
	.quad	label$6326
	.align 32
	.type	label$6326, @object
	.size	label$6326, 170
label$6326:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6328
	.align 32
	.type	label$6328, @object
	.size	label$6328, 170
label$6328:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6330
	.align 32
	.type	label$6330, @object
	.size	label$6330, 170
label$6330:
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6332
	.align 32
	.type	label$6332, @object
	.size	label$6332, 170
label$6332:
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1879
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6334
	.align 32
	.type	label$6334, @object
	.size	label$6334, 170
label$6334:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	-1
	.quad	label$6336
	.align 32
	.type	label$6336, @object
	.size	label$6336, 170
label$6336:
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2026
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6338
	.align 32
	.type	label$6338, @object
	.size	label$6338, 170
label$6338:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6340
	.align 32
	.type	label$6340, @object
	.size	label$6340, 170
label$6340:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2034
	.value	-1
	.quad	label$6342
	.align 32
	.type	label$6342, @object
	.size	label$6342, 170
label$6342:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6344
	.align 32
	.type	label$6344, @object
	.size	label$6344, 170
label$6344:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6346
	.align 32
	.type	label$6346, @object
	.size	label$6346, 170
label$6346:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	-1
	.quad	label$6348
	.align 32
	.type	label$6348, @object
	.size	label$6348, 170
label$6348:
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	-1
	.quad	label$6350
	.align 32
	.type	label$6350, @object
	.size	label$6350, 170
label$6350:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1722
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1877
	.value	-1
	.quad	label$6352
	.align 32
	.type	label$6352, @object
	.size	label$6352, 170
label$6352:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6354
	.align 32
	.type	label$6354, @object
	.size	label$6354, 170
label$6354:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6356
	.align 32
	.type	label$6356, @object
	.size	label$6356, 170
label$6356:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6358
	.align 32
	.type	label$6358, @object
	.size	label$6358, 170
label$6358:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6360
	.align 32
	.type	label$6360, @object
	.size	label$6360, 170
label$6360:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6362
	.align 32
	.type	label$6362, @object
	.size	label$6362, 170
label$6362:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	-1
	.quad	label$6364
	.align 32
	.type	label$6364, @object
	.size	label$6364, 170
label$6364:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6366
	.align 32
	.type	label$6366, @object
	.size	label$6366, 170
label$6366:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6368
	.align 32
	.type	label$6368, @object
	.size	label$6368, 170
label$6368:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6370
	.align 32
	.type	label$6370, @object
	.size	label$6370, 170
label$6370:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6372
	.align 32
	.type	label$6372, @object
	.size	label$6372, 170
label$6372:
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6374
	.align 32
	.type	label$6374, @object
	.size	label$6374, 170
label$6374:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1858
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1844
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6376
	.align 32
	.type	label$6376, @object
	.size	label$6376, 170
label$6376:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6378
	.align 32
	.type	label$6378, @object
	.size	label$6378, 170
label$6378:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6380
	.align 32
	.type	label$6380, @object
	.size	label$6380, 170
label$6380:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1874
	.value	-1
	.quad	label$6382
	.align 32
	.type	label$6382, @object
	.size	label$6382, 170
label$6382:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6384
	.align 32
	.type	label$6384, @object
	.size	label$6384, 170
label$6384:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6386
	.align 32
	.type	label$6386, @object
	.size	label$6386, 170
label$6386:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1855
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6388
	.align 32
	.type	label$6388, @object
	.size	label$6388, 170
label$6388:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6390
	.align 32
	.type	label$6390, @object
	.size	label$6390, 170
label$6390:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1799
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	-1
	.quad	label$6392
	.align 32
	.type	label$6392, @object
	.size	label$6392, 170
label$6392:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6394
	.align 32
	.type	label$6394, @object
	.size	label$6394, 170
label$6394:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6396
	.align 32
	.type	label$6396, @object
	.size	label$6396, 170
label$6396:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1790
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6398
	.align 32
	.type	label$6398, @object
	.size	label$6398, 170
label$6398:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1869
	.value	-1
	.quad	label$6400
	.align 32
	.type	label$6400, @object
	.size	label$6400, 170
label$6400:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6402
	.align 32
	.type	label$6402, @object
	.size	label$6402, 170
label$6402:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1747
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC2032
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6404
	.align 32
	.type	label$6404, @object
	.size	label$6404, 170
label$6404:
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1744
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1877
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1744
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6406
	.align 32
	.type	label$6406, @object
	.size	label$6406, 170
label$6406:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6408
	.align 32
	.type	label$6408, @object
	.size	label$6408, 170
label$6408:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6410
	.align 32
	.type	label$6410, @object
	.size	label$6410, 170
label$6410:
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1799
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1844
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1809
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6412
	.align 32
	.type	label$6412, @object
	.size	label$6412, 170
label$6412:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1792
	.value	3
	.quad	.LC1850
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1800
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6414
	.align 32
	.type	label$6414, @object
	.size	label$6414, 170
label$6414:
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6416
	.align 32
	.type	label$6416, @object
	.size	label$6416, 170
label$6416:
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6418
	.align 32
	.type	label$6418, @object
	.size	label$6418, 170
label$6418:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6420
	.align 32
	.type	label$6420, @object
	.size	label$6420, 170
label$6420:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6422
	.align 32
	.type	label$6422, @object
	.size	label$6422, 170
label$6422:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1792
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6424
	.align 32
	.type	label$6424, @object
	.size	label$6424, 170
label$6424:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1758
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6426
	.align 32
	.type	label$6426, @object
	.size	label$6426, 170
label$6426:
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1760
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1877
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1725
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6428
	.align 32
	.type	label$6428, @object
	.size	label$6428, 170
label$6428:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6430
	.align 32
	.type	label$6430, @object
	.size	label$6430, 170
label$6430:
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1799
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6432
	.align 32
	.type	label$6432, @object
	.size	label$6432, 170
label$6432:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	-1
	.quad	label$6434
	.align 32
	.type	label$6434, @object
	.size	label$6434, 170
label$6434:
	.value	2
	.quad	.LC1742
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6436
	.align 32
	.type	label$6436, @object
	.size	label$6436, 170
label$6436:
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1740
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC1860
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6438
	.align 32
	.type	label$6438, @object
	.size	label$6438, 170
label$6438:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6440
	.align 32
	.type	label$6440, @object
	.size	label$6440, 170
label$6440:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6442
	.align 32
	.type	label$6442, @object
	.size	label$6442, 170
label$6442:
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6444
	.align 32
	.type	label$6444, @object
	.size	label$6444, 170
label$6444:
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1869
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6446
	.align 32
	.type	label$6446, @object
	.size	label$6446, 170
label$6446:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6448
	.align 32
	.type	label$6448, @object
	.size	label$6448, 170
label$6448:
	.value	2
	.quad	.LC1760
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1740
	.value	3
	.quad	.LC1856
	.value	2
	.quad	.LC1792
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1860
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6450
	.align 32
	.type	label$6450, @object
	.size	label$6450, 170
label$6450:
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1868
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1855
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6452
	.align 32
	.type	label$6452, @object
	.size	label$6452, 170
label$6452:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1867
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1876
	.value	3
	.quad	.LC1858
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6454
	.align 32
	.type	label$6454, @object
	.size	label$6454, 170
label$6454:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1742
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6456
	.align 32
	.type	label$6456, @object
	.size	label$6456, 170
label$6456:
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1874
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1840
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6458
	.align 32
	.type	label$6458, @object
	.size	label$6458, 170
label$6458:
	.value	3
	.quad	.LC1876
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6460
	.align 32
	.type	label$6460, @object
	.size	label$6460, 170
label$6460:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	2
	.quad	.LC1845
	.value	3
	.quad	.LC1855
	.value	3
	.quad	.LC1877
	.value	3
	.quad	.LC1868
	.value	2
	.quad	.LC1845
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6462
	.align 32
	.type	label$6462, @object
	.size	label$6462, 170
label$6462:
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1797
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1797
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6464
	.align 32
	.type	label$6464, @object
	.size	label$6464, 170
label$6464:
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1725
	.value	2
	.quad	.LC1740
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1840
	.value	3
	.quad	.LC1876
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6466
	.align 32
	.type	label$6466, @object
	.size	label$6466, 170
label$6466:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1783
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6468
	.align 32
	.type	label$6468, @object
	.size	label$6468, 170
label$6468:
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$6470
	.align 32
	.type	label$6470, @object
	.size	label$6470, 170
label$6470:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6472
	.align 32
	.type	label$6472, @object
	.size	label$6472, 170
label$6472:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6474
	.align 32
	.type	label$6474, @object
	.size	label$6474, 170
label$6474:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	-1
	.quad	label$6476
	.align 32
	.type	label$6476, @object
	.size	label$6476, 170
label$6476:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	-1
	.quad	label$6478
	.align 32
	.type	label$6478, @object
	.size	label$6478, 170
label$6478:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1848
	.value	-1
	.quad	label$6480
	.align 32
	.type	label$6480, @object
	.size	label$6480, 170
label$6480:
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1728
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6482
	.align 32
	.type	label$6482, @object
	.size	label$6482, 170
label$6482:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6484
	.align 32
	.type	label$6484, @object
	.size	label$6484, 170
label$6484:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6486
	.align 32
	.type	label$6486, @object
	.size	label$6486, 170
label$6486:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6488
	.align 32
	.type	label$6488, @object
	.size	label$6488, 170
label$6488:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	-1
	.quad	label$6490
	.align 32
	.type	label$6490, @object
	.size	label$6490, 170
label$6490:
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	-1
	.quad	label$6492
	.align 32
	.type	label$6492, @object
	.size	label$6492, 170
label$6492:
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6494
	.align 32
	.type	label$6494, @object
	.size	label$6494, 170
label$6494:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6496
	.align 32
	.type	label$6496, @object
	.size	label$6496, 170
label$6496:
	.value	1
	.quad	.LC1721
	.value	1
	.quad	.LC1728
	.value	1
	.quad	.LC1725
	.value	3
	.quad	.LC1856
	.value	3
	.quad	.LC1869
	.value	3
	.quad	.LC1860
	.value	2
	.quad	.LC1840
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	label$6498
	.align 32
	.type	label$6498, @object
	.size	label$6498, 170
label$6498:
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	2
	.quad	.LC1753
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6500
	.align 32
	.type	label$6500, @object
	.size	label$6500, 170
label$6500:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6502
	.align 32
	.type	label$6502, @object
	.size	label$6502, 170
label$6502:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6504
	.align 32
	.type	label$6504, @object
	.size	label$6504, 170
label$6504:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6506
	.align 32
	.type	label$6506, @object
	.size	label$6506, 170
label$6506:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6508
	.align 32
	.type	label$6508, @object
	.size	label$6508, 170
label$6508:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1882
	.value	-1
	.quad	label$6510
	.align 32
	.type	label$6510, @object
	.size	label$6510, 170
label$6510:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6512
	.align 32
	.type	label$6512, @object
	.size	label$6512, 170
label$6512:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6514
	.align 32
	.type	label$6514, @object
	.size	label$6514, 170
label$6514:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6516
	.align 32
	.type	label$6516, @object
	.size	label$6516, 170
label$6516:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6518
	.align 32
	.type	label$6518, @object
	.size	label$6518, 170
label$6518:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	-1
	.quad	label$6520
	.align 32
	.type	label$6520, @object
	.size	label$6520, 170
label$6520:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6522
	.align 32
	.type	label$6522, @object
	.size	label$6522, 170
label$6522:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6524
	.align 32
	.type	label$6524, @object
	.size	label$6524, 170
label$6524:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1971
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6526
	.align 32
	.type	label$6526, @object
	.size	label$6526, 170
label$6526:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1888
	.value	-1
	.quad	label$6528
	.align 32
	.type	label$6528, @object
	.size	label$6528, 170
label$6528:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6530
	.align 32
	.type	label$6530, @object
	.size	label$6530, 170
label$6530:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2015
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1915
	.value	1
	.quad	.LC1728
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6532
	.align 32
	.type	label$6532, @object
	.size	label$6532, 170
label$6532:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2017
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6534
	.align 32
	.type	label$6534, @object
	.size	label$6534, 170
label$6534:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6536
	.align 32
	.type	label$6536, @object
	.size	label$6536, 170
label$6536:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6538
	.align 32
	.type	label$6538, @object
	.size	label$6538, 170
label$6538:
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1915
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1950
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6540
	.align 32
	.type	label$6540, @object
	.size	label$6540, 170
label$6540:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC1908
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1958
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6542
	.align 32
	.type	label$6542, @object
	.size	label$6542, 170
label$6542:
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6544
	.align 32
	.type	label$6544, @object
	.size	label$6544, 170
label$6544:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6546
	.align 32
	.type	label$6546, @object
	.size	label$6546, 170
label$6546:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6548
	.align 32
	.type	label$6548, @object
	.size	label$6548, 170
label$6548:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6550
	.align 32
	.type	label$6550, @object
	.size	label$6550, 170
label$6550:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6552
	.align 32
	.type	label$6552, @object
	.size	label$6552, 170
label$6552:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2002
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6554
	.align 32
	.type	label$6554, @object
	.size	label$6554, 170
label$6554:
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6556
	.align 32
	.type	label$6556, @object
	.size	label$6556, 170
label$6556:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6558
	.align 32
	.type	label$6558, @object
	.size	label$6558, 170
label$6558:
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1960
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6560
	.align 32
	.type	label$6560, @object
	.size	label$6560, 170
label$6560:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	-1
	.quad	label$6562
	.align 32
	.type	label$6562, @object
	.size	label$6562, 170
label$6562:
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6564
	.align 32
	.type	label$6564, @object
	.size	label$6564, 170
label$6564:
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6566
	.align 32
	.type	label$6566, @object
	.size	label$6566, 170
label$6566:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6568
	.align 32
	.type	label$6568, @object
	.size	label$6568, 170
label$6568:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6570
	.align 32
	.type	label$6570, @object
	.size	label$6570, 170
label$6570:
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6572
	.align 32
	.type	label$6572, @object
	.size	label$6572, 170
label$6572:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6574
	.align 32
	.type	label$6574, @object
	.size	label$6574, 170
label$6574:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6576
	.align 32
	.type	label$6576, @object
	.size	label$6576, 170
label$6576:
	.value	3
	.quad	.LC1999
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1968
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6578
	.align 32
	.type	label$6578, @object
	.size	label$6578, 170
label$6578:
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6580
	.align 32
	.type	label$6580, @object
	.size	label$6580, 170
label$6580:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1891
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC1901
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6582
	.align 32
	.type	label$6582, @object
	.size	label$6582, 170
label$6582:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2020
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6584
	.align 32
	.type	label$6584, @object
	.size	label$6584, 170
label$6584:
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1882
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6586
	.align 32
	.type	label$6586, @object
	.size	label$6586, 170
label$6586:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6588
	.align 32
	.type	label$6588, @object
	.size	label$6588, 170
label$6588:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC1904
	.value	3
	.quad	.LC1878
	.value	3
	.quad	.LC1889
	.value	3
	.quad	.LC1914
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6590
	.align 32
	.type	label$6590, @object
	.size	label$6590, 170
label$6590:
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1963
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6592
	.align 32
	.type	label$6592, @object
	.size	label$6592, 170
label$6592:
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC2022
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC1879
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6594
	.align 32
	.type	label$6594, @object
	.size	label$6594, 170
label$6594:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC1978
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6596
	.align 32
	.type	label$6596, @object
	.size	label$6596, 170
label$6596:
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1910
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1848
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$6598
	.align 32
	.type	label$6598, @object
	.size	label$6598, 170
label$6598:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6600
	.align 32
	.type	label$6600, @object
	.size	label$6600, 170
label$6600:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6602
	.align 32
	.type	label$6602, @object
	.size	label$6602, 170
label$6602:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	-1
	.quad	label$6604
	.align 32
	.type	label$6604, @object
	.size	label$6604, 170
label$6604:
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	-1
	.quad	label$6606
	.align 32
	.type	label$6606, @object
	.size	label$6606, 170
label$6606:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1787
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1975
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1910
	.value	2
	.quad	.LC1787
	.value	3
	.quad	.LC1848
	.value	3
	.quad	.LC1975
	.value	3
	.quad	.LC1910
	.value	-1
	.quad	label$6608
	.align 32
	.type	label$6608, @object
	.size	label$6608, 170
label$6608:
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6610
	.align 32
	.type	label$6610, @object
	.size	label$6610, 170
label$6610:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6612
	.align 32
	.type	label$6612, @object
	.size	label$6612, 170
label$6612:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6614
	.align 32
	.type	label$6614, @object
	.size	label$6614, 170
label$6614:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC1997
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6616
	.align 32
	.type	label$6616, @object
	.size	label$6616, 170
label$6616:
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	-1
	.quad	label$6618
	.align 32
	.type	label$6618, @object
	.size	label$6618, 170
label$6618:
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1800
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	2
	.quad	.LC1761
	.value	-1
	.quad	label$6620
	.align 32
	.type	label$6620, @object
	.size	label$6620, 170
label$6620:
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	3
	.quad	.LC2027
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6622
	.align 32
	.type	label$6622, @object
	.size	label$6622, 170
label$6622:
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	1
	.quad	.LC1677
	.value	-1
	.quad	label$6624
	.align 32
	.type	label$6624, @object
	.size	label$6624, 170
label$6624:
	.value	3
	.quad	.LC2034
	.value	3
	.quad	.LC2032
	.value	3
	.quad	.LC2029
	.value	3
	.quad	.LC1903
	.value	3
	.quad	.LC1888
	.value	3
	.quad	.LC1898
	.value	3
	.quad	.LC1917
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	-1
	.quad	label$6626
	.align 32
	.type	label$6626, @object
	.size	label$6626, 170
label$6626:
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	3
	.quad	.LC2007
	.value	1
	.quad	.LC1722
	.value	1
	.quad	.LC1722
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	-1
	.quad	label$6628
	.align 32
	.type	label$6628, @object
	.size	label$6628, 170
label$6628:
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	3
	.quad	.LC2035
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	2
	.quad	.LC1743
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	3
	.quad	.LC2018
	.value	-1
	.quad	0
	.local	FLAG$
	.comm	FLAG$,8,8
	.local	IMAGE$
	.comm	IMAGE$,8,8
	.align 4
	.type	SYS_OFFSET$, @object
	.size	SYS_OFFSET$, 4
SYS_OFFSET$:
	.long	49152
	.local	OFFSET$
	.comm	OFFSET$,4,4
	.local	ENGINE$
	.comm	ENGINE$,24,16
	.local	TEXTYPE$
	.comm	TEXTYPE$,24,16
	.local	PAD3$
	.comm	PAD3$,24,16
	.local	PAD2$
	.comm	PAD2$,24,16
	.local	PAD1$
	.comm	PAD1$,24,16
	.local	PAD0$
	.comm	PAD0$,24,16
	.local	TB$
	.comm	TB$,24,16
	.local	MODTYPE$
	.comm	MODTYPE$,24,16
	.local	MSG$
	.comm	MSG$,24,16
	.local	MODIFIER$
	.comm	MODIFIER$,24,16
	.local	NOUTPUT$
	.comm	NOUTPUT$,24,16
	.local	NINPUT$
	.comm	NINPUT$,24,16
	.local	NODE$
	.comm	NODE$,24,16
	.local	SHADER$
	.comm	SHADER$,24,16
	.local	LAMP$
	.comm	LAMP$,24,16
	.local	SHAPE$
	.comm	SHAPE$,24,16
	.local	MATERIAL$
	.comm	MATERIAL$,24,16
	.local	MB$
	.comm	MB$,8,8
	.local	MY$
	.comm	MY$,8,8
	.local	MX$
	.comm	MX$,8,8
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	0
	.long	1138753536
	.align 8
.LC55:
	.long	0
	.long	0
	.align 8
.LC56:
	.long	0
	.long	1072693248
	.align 8
.LC59:
	.long	0
	.long	1073741824
	.align 8
.LC62:
	.long	0
	.long	1074266112
	.align 8
.LC65:
	.long	0
	.long	1074790400
	.align 8
.LC68:
	.long	0
	.long	1075052544
	.align 8
.LC71:
	.long	0
	.long	1075314688
	.align 8
.LC74:
	.long	0
	.long	1075576832
	.align 8
.LC77:
	.long	0
	.long	1075838976
	.align 8
.LC80:
	.long	0
	.long	1075970048
	.align 8
.LC83:
	.long	0
	.long	1076101120
	.align 8
.LC86:
	.long	0
	.long	1076232192
	.align 8
.LC88:
	.long	0
	.long	1076363264
	.align 8
.LC90:
	.long	0
	.long	1076494336
	.align 8
.LC92:
	.long	0
	.long	1076625408
	.align 8
.LC94:
	.long	0
	.long	1076756480
	.align 8
.LC96:
	.long	0
	.long	1076887552
	.align 8
.LC98:
	.long	0
	.long	1076953088
	.align 8
.LC100:
	.long	0
	.long	1077018624
	.align 8
.LC102:
	.long	0
	.long	1077084160
	.align 8
.LC104:
	.long	0
	.long	1077149696
	.align 8
.LC106:
	.long	0
	.long	1077215232
	.align 8
.LC108:
	.long	0
	.long	1077280768
	.align 8
.LC110:
	.long	0
	.long	1077346304
	.align 8
.LC114:
	.long	0
	.long	1077411840
	.align 8
.LC116:
	.long	0
	.long	1077477376
	.align 8
.LC118:
	.long	0
	.long	1077542912
	.align 8
.LC120:
	.long	0
	.long	1077608448
	.align 8
.LC122:
	.long	0
	.long	1077673984
	.align 8
.LC124:
	.long	0
	.long	1077739520
	.align 8
.LC126:
	.long	0
	.long	1077805056
	.align 8
.LC170:
	.long	0
	.long	1079558144
	.align 8
.LC222:
	.long	0
	.long	1077870592
	.align 8
.LC224:
	.long	0
	.long	1077936128
	.align 8
.LC226:
	.long	0
	.long	1077968896
	.align 8
.LC228:
	.long	0
	.long	1078001664
	.align 8
.LC230:
	.long	0
	.long	1078034432
	.align 8
.LC232:
	.long	0
	.long	1078067200
	.align 8
.LC234:
	.long	0
	.long	1078099968
	.align 8
.LC236:
	.long	0
	.long	1078132736
	.align 8
.LC238:
	.long	0
	.long	1078165504
	.align 8
.LC240:
	.long	0
	.long	1078198272
	.align 8
.LC242:
	.long	0
	.long	1078231040
	.align 8
.LC244:
	.long	0
	.long	1078263808
	.align 8
.LC246:
	.long	0
	.long	1078296576
	.align 8
.LC248:
	.long	0
	.long	1078329344
	.align 8
.LC250:
	.long	0
	.long	1078362112
	.align 8
.LC252:
	.long	0
	.long	1078394880
	.align 8
.LC253:
	.long	0
	.long	1078427648
	.align 8
.LC255:
	.long	0
	.long	1078460416
	.align 8
.LC257:
	.long	0
	.long	1078493184
	.align 8
.LC259:
	.long	0
	.long	1078525952
	.align 8
.LC261:
	.long	0
	.long	1078558720
	.align 8
.LC263:
	.long	0
	.long	1078591488
	.align 8
.LC264:
	.long	0
	.long	1078624256
	.align 8
.LC266:
	.long	0
	.long	1078657024
	.align 8
.LC268:
	.long	0
	.long	1078689792
	.align 8
.LC270:
	.long	0
	.long	1078722560
	.align 8
.LC272:
	.long	0
	.long	1078755328
	.align 8
.LC274:
	.long	0
	.long	1078788096
	.align 8
.LC276:
	.long	0
	.long	1078820864
	.align 8
.LC278:
	.long	0
	.long	1078853632
	.align 8
.LC281:
	.long	0
	.long	1078886400
	.align 8
.LC284:
	.long	0
	.long	1078919168
	.align 8
.LC286:
	.long	0
	.long	1078951936
	.align 8
.LC288:
	.long	0
	.long	1078984704
	.align 8
.LC290:
	.long	0
	.long	1079001088
	.align 8
.LC292:
	.long	0
	.long	1079017472
	.align 8
.LC294:
	.long	0
	.long	1079033856
	.align 8
.LC296:
	.long	0
	.long	1079050240
	.align 8
.LC298:
	.long	0
	.long	1079066624
	.align 8
.LC300:
	.long	0
	.long	1079083008
	.align 8
.LC302:
	.long	0
	.long	1079099392
	.align 8
.LC304:
	.long	0
	.long	1079115776
	.align 8
.LC306:
	.long	0
	.long	1079132160
	.align 8
.LC308:
	.long	0
	.long	1079148544
	.align 8
.LC310:
	.long	0
	.long	1079164928
	.align 8
.LC312:
	.long	0
	.long	1079181312
	.align 8
.LC314:
	.long	0
	.long	1079197696
	.align 8
.LC316:
	.long	0
	.long	1079214080
	.align 8
.LC318:
	.long	0
	.long	1079230464
	.align 8
.LC320:
	.long	0
	.long	1079246848
	.align 8
.LC322:
	.long	0
	.long	1079263232
	.align 8
.LC324:
	.long	0
	.long	1079279616
	.align 8
.LC326:
	.long	0
	.long	1079296000
	.align 8
.LC328:
	.long	0
	.long	1079312384
	.align 8
.LC330:
	.long	0
	.long	1079328768
	.align 8
.LC332:
	.long	0
	.long	1079345152
	.align 8
.LC334:
	.long	0
	.long	1079361536
	.align 8
.LC336:
	.long	0
	.long	1079377920
	.align 8
.LC338:
	.long	0
	.long	1079394304
	.align 8
.LC340:
	.long	0
	.long	1079410688
	.align 8
.LC342:
	.long	0
	.long	1079427072
	.align 8
.LC344:
	.long	0
	.long	1079443456
	.align 8
.LC346:
	.long	0
	.long	1079459840
	.align 8
.LC348:
	.long	0
	.long	1079476224
	.align 8
.LC350:
	.long	0
	.long	1079492608
	.align 8
.LC352:
	.long	0
	.long	1079508992
	.align 8
.LC354:
	.long	0
	.long	1079525376
	.align 8
.LC356:
	.long	0
	.long	1079541760
	.align 8
.LC359:
	.long	0
	.long	1079574528
	.align 8
.LC361:
	.long	0
	.long	1079590912
	.align 8
.LC363:
	.long	0
	.long	1079607296
	.align 8
.LC365:
	.long	0
	.long	1079623680
	.align 8
.LC367:
	.long	0
	.long	1079640064
	.align 8
.LC369:
	.long	0
	.long	1079656448
	.align 8
.LC371:
	.long	0
	.long	1079672832
	.align 8
.LC373:
	.long	0
	.long	1079689216
	.align 8
.LC375:
	.long	0
	.long	1079705600
	.align 8
.LC377:
	.long	0
	.long	1079721984
	.align 8
.LC379:
	.long	0
	.long	1079738368
	.align 8
.LC381:
	.long	0
	.long	1079754752
	.align 8
.LC382:
	.long	0
	.long	1079771136
	.align 8
.LC384:
	.long	0
	.long	1079787520
	.align 8
.LC385:
	.long	0
	.long	1079803904
	.align 8
.LC386:
	.long	0
	.long	1079820288
	.align 8
.LC388:
	.long	0
	.long	1079836672
	.align 8
.LC390:
	.long	0
	.long	1079853056
	.align 8
.LC391:
	.long	0
	.long	1079869440
	.align 8
.LC393:
	.long	0
	.long	1079885824
	.align 8
.LC395:
	.long	0
	.long	1079902208
	.align 8
.LC396:
	.long	0
	.long	1079918592
	.align 8
.LC398:
	.long	0
	.long	1079934976
	.align 8
.LC400:
	.long	0
	.long	1079951360
	.align 8
.LC402:
	.long	0
	.long	1079967744
	.align 8
.LC404:
	.long	0
	.long	1079984128
	.align 8
.LC406:
	.long	0
	.long	1080000512
	.align 8
.LC408:
	.long	0
	.long	1080016896
	.align 8
.LC410:
	.long	0
	.long	1080033280
	.align 8
.LC412:
	.long	0
	.long	1080041472
	.align 8
.LC414:
	.long	0
	.long	1080049664
	.align 8
.LC416:
	.long	0
	.long	1080057856
	.align 8
.LC418:
	.long	0
	.long	1080066048
	.align 8
.LC420:
	.long	0
	.long	1080074240
	.align 8
.LC422:
	.long	0
	.long	1080082432
	.align 8
.LC424:
	.long	0
	.long	1080090624
	.align 8
.LC426:
	.long	0
	.long	1080098816
	.align 8
.LC428:
	.long	0
	.long	1080107008
	.align 8
.LC430:
	.long	0
	.long	1080115200
	.align 8
.LC432:
	.long	0
	.long	1080123392
	.align 8
.LC435:
	.long	0
	.long	1080131584
	.align 8
.LC438:
	.long	0
	.long	1080139776
	.align 8
.LC440:
	.long	0
	.long	1080147968
	.align 8
.LC442:
	.long	0
	.long	1080156160
	.align 8
.LC444:
	.long	0
	.long	1080164352
	.align 8
.LC446:
	.long	0
	.long	1080172544
	.align 8
.LC448:
	.long	0
	.long	1080180736
	.align 8
.LC450:
	.long	0
	.long	1080188928
	.align 8
.LC452:
	.long	0
	.long	1080197120
	.align 8
.LC454:
	.long	0
	.long	1080205312
	.align 8
.LC456:
	.long	0
	.long	1080213504
	.align 8
.LC458:
	.long	0
	.long	1080221696
	.align 8
.LC460:
	.long	0
	.long	1080229888
	.align 8
.LC462:
	.long	0
	.long	1080238080
	.align 8
.LC464:
	.long	0
	.long	1080246272
	.align 8
.LC466:
	.long	0
	.long	1080254464
	.align 8
.LC468:
	.long	0
	.long	1080262656
	.align 8
.LC470:
	.long	0
	.long	1080270848
	.align 8
.LC472:
	.long	0
	.long	1080279040
	.align 8
.LC474:
	.long	0
	.long	1080287232
	.align 8
.LC476:
	.long	0
	.long	1080295424
	.align 8
.LC478:
	.long	0
	.long	1080303616
	.align 8
.LC480:
	.long	0
	.long	1080311808
	.align 8
.LC487:
	.long	0
	.long	1080320000
	.align 8
.LC488:
	.long	0
	.long	1080328192
	.align 8
.LC702:
	.long	0
	.long	1080336384
	.align 8
.LC704:
	.long	0
	.long	1080344576
	.align 8
.LC706:
	.long	0
	.long	1080352768
	.align 8
.LC708:
	.long	0
	.long	1080360960
	.align 8
.LC710:
	.long	0
	.long	1080369152
	.align 8
.LC712:
	.long	0
	.long	1080377344
	.align 8
.LC1021:
	.long	0
	.long	1080385536
	.align 8
.LC1022:
	.long	0
	.long	1080393728
	.align 8
.LC1023:
	.long	0
	.long	1080401920
	.align 8
.LC1024:
	.long	0
	.long	1080410112
	.align 8
.LC1025:
	.long	0
	.long	1080418304
	.align 8
.LC1026:
	.long	0
	.long	1080426496
	.align 8
.LC1028:
	.long	0
	.long	1080434688
	.align 8
.LC1030:
	.long	0
	.long	1080442880
	.align 8
.LC1032:
	.long	0
	.long	1080451072
	.align 8
.LC1034:
	.long	0
	.long	1080459264
	.align 8
.LC1036:
	.long	0
	.long	1080467456
	.align 8
.LC1038:
	.long	0
	.long	1080475648
	.align 8
.LC1040:
	.long	0
	.long	1080483840
	.align 8
.LC1042:
	.long	0
	.long	1080492032
	.align 8
.LC1044:
	.long	0
	.long	1080500224
	.align 8
.LC1046:
	.long	0
	.long	1080508416
	.align 8
.LC1047:
	.long	0
	.long	1080516608
	.align 8
.LC1049:
	.long	0
	.long	1080524800
	.align 8
.LC1051:
	.long	0
	.long	1080532992
	.align 8
.LC1053:
	.long	0
	.long	1080541184
	.align 8
.LC1055:
	.long	0
	.long	1080549376
	.align 8
.LC1057:
	.long	0
	.long	1080557568
	.align 8
.LC1059:
	.long	0
	.long	1080565760
	.align 8
.LC1061:
	.long	0
	.long	1080573952
	.align 8
.LC1063:
	.long	0
	.long	1080582144
	.align 8
.LC1065:
	.long	0
	.long	1080590336
	.align 8
.LC1067:
	.long	0
	.long	1080598528
	.align 8
.LC1069:
	.long	0
	.long	1080606720
	.align 8
.LC1071:
	.long	0
	.long	1080614912
	.align 8
.LC1073:
	.long	0
	.long	1080623104
	.align 8
.LC1075:
	.long	0
	.long	1080631296
	.align 8
.LC1077:
	.long	0
	.long	1080639488
	.align 8
.LC1079:
	.long	0
	.long	1080647680
	.align 8
.LC1081:
	.long	0
	.long	1080655872
	.align 8
.LC1083:
	.long	0
	.long	1080664064
	.align 8
.LC1085:
	.long	0
	.long	1080672256
	.align 8
.LC1087:
	.long	0
	.long	1080680448
	.align 8
.LC1089:
	.long	0
	.long	1080688640
	.align 8
.LC1091:
	.long	0
	.long	1080696832
	.align 8
.LC1093:
	.long	0
	.long	1080705024
	.align 8
.LC1095:
	.long	0
	.long	1080713216
	.align 8
.LC1097:
	.long	0
	.long	1080721408
	.align 8
.LC1099:
	.long	0
	.long	1080729600
	.align 8
.LC1317:
	.long	0
	.long	1080737792
	.align 8
.LC1319:
	.long	0
	.long	1080745984
	.align 8
.LC1321:
	.long	0
	.long	1080754176
	.align 8
.LC1323:
	.long	0
	.long	1080762368
	.align 8
.LC1325:
	.long	0
	.long	1080770560
	.align 8
.LC1327:
	.long	0
	.long	1080778752
	.align 8
.LC1329:
	.long	0
	.long	1080786944
	.align 8
.LC1331:
	.long	0
	.long	1080795136
	.align 8
.LC1333:
	.long	0
	.long	1080803328
	.align 8
.LC1335:
	.long	0
	.long	1080811520
	.align 8
.LC1337:
	.long	0
	.long	1080819712
	.align 8
.LC1339:
	.long	0
	.long	1080827904
	.align 8
.LC1341:
	.long	0
	.long	1080836096
	.align 8
.LC1343:
	.long	0
	.long	1080844288
	.align 8
.LC1345:
	.long	0
	.long	1080852480
	.align 8
.LC1347:
	.long	0
	.long	1080860672
	.align 8
.LC1349:
	.long	0
	.long	1080868864
	.align 8
.LC1351:
	.long	0
	.long	1080877056
	.align 8
.LC1353:
	.long	0
	.long	1080885248
	.align 8
.LC1355:
	.long	0
	.long	1080893440
	.align 8
.LC1357:
	.long	0
	.long	1080901632
	.align 8
.LC1359:
	.long	0
	.long	1080909824
	.align 8
.LC1361:
	.long	0
	.long	1080918016
	.align 8
.LC1363:
	.long	0
	.long	1080926208
	.align 8
.LC1365:
	.long	0
	.long	1080934400
	.align 8
.LC1367:
	.long	0
	.long	1080942592
	.align 8
.LC1369:
	.long	0
	.long	1080950784
	.align 8
.LC1371:
	.long	0
	.long	1080958976
	.align 8
.LC1373:
	.long	0
	.long	1080967168
	.align 8
.LC1375:
	.long	0
	.long	1080975360
	.align 8
.LC1377:
	.long	0
	.long	1080983552
	.align 8
.LC1379:
	.long	0
	.long	1080991744
	.align 8
.LC1381:
	.long	0
	.long	1080999936
	.align 8
.LC1383:
	.long	0
	.long	1081008128
	.align 8
.LC1385:
	.long	0
	.long	1081016320
	.align 8
.LC1387:
	.long	0
	.long	1081024512
	.align 8
.LC1389:
	.long	0
	.long	1081032704
	.align 8
.LC1391:
	.long	0
	.long	1081040896
	.align 8
.LC1393:
	.long	0
	.long	1081049088
	.align 8
.LC1395:
	.long	0
	.long	1081057280
	.align 8
.LC1397:
	.long	0
	.long	1081065472
	.align 8
.LC1399:
	.long	0
	.long	1081073664
	.align 8
.LC1675:
	.long	1202590843
	.long	1065646817
	.align 8
.LC1676:
	.long	3539053052
	.long	1062232653
	.align 8
.LC1683:
	.long	0
	.long	1083127808
	.align 8
.LC1684:
	.long	0
	.long	1073479680
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC1700:
	.long	1088421888
	.align 4
.LC1701:
	.long	1146601472
	.ident	"GCC: (FreeBSD Ports Collection) 8.3.0"
	.section	.note.GNU-stack,"",@progbits
