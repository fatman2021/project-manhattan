%FBSTRING = type { i8*, i64, i64 }
	%__FB_ARRAYDIMTB$ = type { i64, i64, i64 }
%SHADERTOY = type { i32, i32, %FBSTRING }
%MEMORY_T = type { [16777216 x double], [16384 x double], [16384 x double], [16384 x double], [1000 x double] }
%FLAGS = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%MULTI = type { i8*, i8*, double, double, i64, i64, float, float, i32, i32, i16, i16, i8, i8, i8, i8 }
%OPCODE = type { i64, [4 x i8], i64, i64, i64, %MULTI, void ( %CPU6510* )* }
%CPU6510 = type { i8, %FLAGS, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, %MEMORY_T*, %OPCODE, [256 x %OPCODE], [13 x %FBSTRING] }
%C64_T = type { %MEMORY_T*, %CPU6510* }
	%VEC3 = type { float, float, float }
	%__FB_DATADESC$ = type <{ i16, i8* }>
	%FBARRAY = type { i8*, i8*, i64, i64, i64, [8 x %__FB_ARRAYDIMTB$] }
declare void @llvm.memset.p0i8.i32(i8*, i8, i32, i32, i1) nounwind
declare void @llvm.memmove.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1) nounwind
declare double @llvm.nearbyint.f64(double) nounwind

declare void @fb_ArrayDestructStr( %FBARRAY* ) nounwind
declare i32 @fb_Locate( i32, i32, i32, i32, i32 ) nounwind
declare void @fb_Cls( i32 ) nounwind
declare i32 @fb_Color( i32, i32, i32 ) nounwind
declare %FBSTRING* @fb_Inkey(  ) nounwind naked
declare i32 @fb_PageCopy( i32, i32 ) nounwind
declare void @fb_DataRestore( i8* ) nounwind
declare void @fb_DataReadStr( i8*, i64, i32 ) nounwind
declare void @fb_DataReadLongint( i64* ) nounwind
declare void @fb_DataReadUByte( i8* ) nounwind
declare void @fb_DataReadULongint( i64* ) nounwind
declare i32 @fb_FileOpen( %FBSTRING*, i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_FileClose( i32 ) nounwind
declare i32 @fb_FilePutLarge( i32, i64, i8*, i64 ) nounwind
declare i32 @fb_FileGetLarge( i32, i64, i8*, i64 ) nounwind
declare i32 @fb_FileLineInput( i32, i8*, i64, i32 ) nounwind
declare i32 @fb_ConsoleInput( %FBSTRING*, i32, i32 ) nounwind
declare i32 @fb_InputString( i8*, i64, i32 ) nounwind
declare i32 @fb_FileFree(  ) nounwind
declare i32 @fb_FileEof( i32 ) nounwind
declare i64 @fb_FileSize( i32 ) nounwind
declare void @fb_GfxPset( i8*, float, float, i32, i32, i32 ) nounwind
declare void @fb_GfxLine( i8*, float, float, float, float, i32, i32, i32, i32 ) nounwind
declare void @fb_GfxPaint( i8*, float, float, i32, i32, %FBSTRING*, i32, i32 ) nounwind
declare i64 @fb_GfxDrawString( i8*, float, float, i32, %FBSTRING*, i32, i8*, i32, i8*, i8*, i8* ) nounwind
declare void @fb_GfxPalette( i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxPut( i8*, float, float, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i8*, i8* ) nounwind
declare i32 @fb_GfxScreen( i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxScreenRes( i32, i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxFlip( i32, i32 ) nounwind
declare void @fb_GfxLock(  ) nounwind
declare void @fb_GfxUnlock( i32, i32 ) nounwind
declare i8* @fb_GfxScreenPtr(  ) nounwind
declare void @fb_GfxSetWindowTitle( %FBSTRING* ) nounwind
declare i32 @fb_GetMouse64( i64*, i64*, i64*, i64*, i64* ) nounwind
declare void @fb_GfxScreenInfo( i64*, i64*, i64*, i64*, i64*, i64*, %FBSTRING* ) nounwind
declare i32 @fb_GfxScreenList( i32 ) nounwind
declare i8* @fb_GfxImageCreate( i32, i32, i32, i32, i32 ) nounwind
declare void @fb_GfxImageDestroy( i8* ) nounwind
declare i32 @fb_GfxImageInfo( i8*, i64*, i64*, i64*, i64*, i8**, i64* ) nounwind
declare void @fb_GfxControl_i( i32, i64*, i64*, i64*, i64* ) nounwind
declare i8* @fb_GfxGetGLProcAddress( i8* ) nounwind
declare void @fb_hPutPSet( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* ) nounwind
declare void @fb_hPutOr( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* ) nounwind
declare double @fb_Rnd( float ) nounwind
declare i64 @llabs( i64 ) nounwind
declare i64 @fb_GetMemAvail( i32 ) nounwind
declare i8* @malloc( i64 ) nounwind
declare void @free( i8* ) nounwind
declare void @fb_PrintVoid( i32, i32 ) nounwind
declare void @fb_PrintString( i32, %FBSTRING*, i32 ) nounwind
declare %FBSTRING* @fb_StrInit( i8*, i64, i8*, i64, i32 ) nounwind
declare %FBSTRING* @fb_StrAssign( i8*, i64, i8*, i64, i32 ) nounwind
declare void @fb_StrDelete( %FBSTRING* ) nounwind
declare %FBSTRING* @fb_StrConcat( %FBSTRING*, i8*, i64, i8*, i64 ) nounwind
declare i32 @fb_StrCompare( i8*, i64, i8*, i64 ) nounwind
declare %FBSTRING* @fb_StrConcatAssign( i8*, i64, i8*, i64, i32 ) nounwind
declare %FBSTRING* @fb_StrAllocTempResult( %FBSTRING* ) nounwind
declare %FBSTRING* @fb_StrAllocTempDescZEx( i8*, i64 ) nounwind
declare %FBSTRING* @fb_LongintToStr( i64 ) nounwind
declare %FBSTRING* @fb_ULongintToStr( i64 ) nounwind
declare %FBSTRING* @fb_StrMid( %FBSTRING*, i64, i64 ) nounwind
declare i64 @fb_StrLen( i8*, i64 ) nounwind
declare i32 @fb_ASC( %FBSTRING*, i64 ) nounwind
declare %FBSTRING* @fb_CHR( i32, ... ) nounwind
declare %FBSTRING* @fb_HEXEx_b( i8, i32 ) nounwind naked
declare %FBSTRING* @fb_HEXEx_s( i16, i32 ) nounwind naked
declare %FBSTRING* @fb_SPACE( i64 ) nounwind naked
declare %FBSTRING* @fb_StrLcase2( %FBSTRING*, i32 ) nounwind
declare void @fb_Init( i32, i8**, i32 ) nounwind
declare void @fb_End( i32 ) nounwind
declare double @fb_Timer(  ) nounwind
declare i32 @fb_Shell( %FBSTRING* ) nounwind
declare i32 @fb_Chain( %FBSTRING* ) nounwind
declare void @fb_Sleep( i32 ) nounwind
declare void @fb_Beep(  ) nounwind
declare void @glRectf( float, float, float, float ) nounwind
declare void @glTexParameteri( i32, i32, i32 ) nounwind
declare void @glTexImage2D( i32, i32, i32, i32, i32, i32, i32, i32, i8* ) nounwind
declare void @glGenTextures( i32, i32* ) nounwind
declare void @glBindTexture( i32, i32 ) nounwind
declare void @glActiveTexture( i32 ) nounwind

%fb_RTTI$ = type { i8*, i8*, %fb_RTTI$* }
@__fb_ZTS6Object = global %fb_RTTI$ zeroinitializer
@Lt_0000 = private constant [1 x i8] c"\00"
@RVS = global i16 trunc (i64 199 to i16)
@SWCH = global double zeroinitializer
@MR = global double zeroinitializer
@OFFSET = global double zeroinitializer
@SYS_OFFSET = global double zeroinitializer
@IMAGE = global i8* zeroinitializer
@STRCODE = global %FBSTRING zeroinitializer
@FILENAME = global %FBSTRING zeroinitializer
@Lt_0250 = private constant [18 x i8] c"press any key ...\00"
@GLCREATESHADER = global i32 ( i32 )* zeroinitializer
@GLDELETESHADER = global void ( i32 )* zeroinitializer
@GLSHADERSOURCE = global void ( i32, i32, i8**, i32* )* zeroinitializer
@GLCOMPILESHADER = global void ( i32 )* zeroinitializer
@GLGETSHADERIV = global void ( i32, i32, i32* )* zeroinitializer
@GLGETSHADERINFOLOG = global void ( i32, i32, i32*, i8* )* zeroinitializer
@GLCREATEPROGRAM = global i32 (  )* zeroinitializer
@GLDELETEPROGRAM = global void ( i32 )* zeroinitializer
@GLATTACHSHADER = global void ( i32, i32 )* zeroinitializer
@GLDETACHSHADER = global void ( i32, i32 )* zeroinitializer
@GLLINKPROGRAM = global void ( i32 )* zeroinitializer
@GLGETPROGRAMIV = global void ( i32, i32, i32* )* zeroinitializer
@GLGETPROGRAMINFOLOG = global void ( i32, i32, i32*, i8* )* zeroinitializer
@GLUSEPROGRAM = global void ( i32 )* zeroinitializer
@GLGETUNIFORMLOCATION = global i32 ( i32, i8* )* zeroinitializer
@GLUNIFORM1F = global void ( i32, float )* zeroinitializer
@GLUNIFORM2F = global void ( i32, float, float )* zeroinitializer
@GLUNIFORM3F = global void ( i32, float, float, float )* zeroinitializer
@GLUNIFORM3FV = global void ( i32, i32, float* )* zeroinitializer
@GLUNIFORM4F = global void ( i32, float, float, float, float )* zeroinitializer
@GLUNIFORM4FV = global void ( i32, i32, float* )* zeroinitializer
@GLUNIFORM1I = global void ( i32, i32 )* zeroinitializer
@Lt_0290 = private constant [11 x i8] c"screenres(\00"
@Lt_0291 = private constant [2 x i8] c",\00"
@Lt_0292 = private constant [11 x i8] c") failed !\00"
@Lt_0298 = private constant [15 x i8] c"glCreateShader\00"
@Lt_029C = private constant [15 x i8] c"glDeleteShader\00"
@Lt_02A0 = private constant [15 x i8] c"glShaderSource\00"
@Lt_02A4 = private constant [16 x i8] c"glCompileShader\00"
@Lt_02A8 = private constant [14 x i8] c"glGetShaderiv\00"
@Lt_02AC = private constant [19 x i8] c"glGetShaderInfoLog\00"
@Lt_02B0 = private constant [16 x i8] c"glCreateProgram\00"
@Lt_02B4 = private constant [16 x i8] c"glDeleteProgram\00"
@Lt_02B8 = private constant [15 x i8] c"glAttachShader\00"
@Lt_02BC = private constant [15 x i8] c"glDetachShader\00"
@Lt_02C0 = private constant [14 x i8] c"glLinkProgram\00"
@Lt_02C4 = private constant [15 x i8] c"glGetProgramiv\00"
@Lt_02C8 = private constant [20 x i8] c"glGetProgramInfoLog\00"
@Lt_02CC = private constant [13 x i8] c"glUseProgram\00"
@Lt_02D0 = private constant [21 x i8] c"glGetUniformLocation\00"
@Lt_02D4 = private constant [12 x i8] c"glUniform1i\00"
@Lt_02D8 = private constant [12 x i8] c"glUniform1f\00"
@Lt_02DC = private constant [12 x i8] c"glUniform3f\00"
@Lt_02E0 = private constant [13 x i8] c"glUniform3fv\00"
@Lt_02E4 = private constant [12 x i8] c"glUniform4f\00"
@Lt_02E8 = private constant [13 x i8] c"glUniform4fv\00"
@Lt_02EC = private constant [38 x i8] c"load and compile shader pese wait ...\00"
@Lt_0349 = private constant [2 x i8] c"\22\00"
@Lt_034A = private constant [21 x i8] c"can't read shader: \22\00"
@Lt_034B = private constant [3 x i8] c" !\00"
@Lt_0351 = private constant [2 x i8] c"\0A\00"
@Lt_0359 = private constant [14 x i8] c"#version 460\0A\00"
@Lt_035A = private constant [32 x i8] c"uniform float     iGlobalTime;\0A\00"
@Lt_035B = private constant [26 x i8] c"uniform float     iTime;\0A\00"
@Lt_035C = private constant [32 x i8] c"uniform vec3      iResolution;\0A\00"
@Lt_035D = private constant [31 x i8] c"uniform float     iTimeDelta;\0A\00"
@Lt_035E = private constant [31 x i8] c"uniform float     iFrameRate;\0A\00"
@Lt_035F = private constant [27 x i8] c"uniform int       iFrame;\0A\00"
@Lt_0360 = private constant [36 x i8] c"uniform float     iChannelTime[4];\0A\00"
@Lt_0361 = private constant [42 x i8] c"uniform vec3      iChannelResolution[4];\0A\00"
@Lt_0362 = private constant [32 x i8] c"uniform float     iSampleRate;\0A\00"
@Lt_0363 = private constant [27 x i8] c"uniform vec4      iMouse;\0A\00"
@Lt_0364 = private constant [26 x i8] c"uniform vec4      iDate;\0A\00"
@Lt_0365 = private constant [30 x i8] c"uniform sampler2D iChannel0;\0A\00"
@Lt_0366 = private constant [30 x i8] c"uniform sampler2D iChannel1;\0A\00"
@Lt_0367 = private constant [30 x i8] c"uniform sampler2D iChannel2;\0A\00"
@Lt_0368 = private constant [30 x i8] c"uniform sampler2D iChannel3;\0A\00"
@Lt_0369 = private constant [28 x i8] c"uniform samplerCube iCube;\0A\00"
@Lt_036C = private constant [15 x i8] c"void main() {\0A\00"
@Lt_036D = private constant [15 x i8] c"  vec4 color;\0A\00"
@Lt_036E = private constant [23 x i8] c"  // call user shader\0A\00"
@Lt_036F = private constant [38 x i8] c"  mainImage(color, gl_FragCoord.xy);\0A\00"
@Lt_0370 = private constant [18 x i8] c"  color.w = 1.0;\0A\00"
@Lt_0371 = private constant [25 x i8] c"  gl_FragColor = color;\0A\00"
@Lt_0372 = private constant [3 x i8] c"}\0A\00"
@Lt_0373 = private constant [29 x i8] c"#define main_image mainImage\00"
@Lt_0374 = private constant [29 x i8] c"#define frag_color fragColor\00"
@Lt_0375 = private constant [29 x i8] c"#define frag_coord fragCoord\00"
@Lt_0376 = private constant [33 x i8] c"#define i_resolution iResolution\00"
@Lt_0377 = private constant [21 x i8] c"#define i_time iTime\00"
@Lt_0378 = private constant [39 x i8] c"  main_image(color, gl_FragCoord.xy);\0A\00"
@Lt_037D = private constant [44 x i8] c"glCreateShader(GL_FRAGMENT_SHADER) failed !\00"
@Lt_0380 = private constant [42 x i8] c"glCompileShader(FragmentShader) failed !\0A\00"
@Lt_0384 = private constant [27 x i8] c"glCreateProgram() failed !\00"
@Lt_0387 = private constant [26 x i8] c"glLinkProgram() failed !\0A\00"
@B = global double zeroinitializer
@C = global double zeroinitializer
@X = global double zeroinitializer
@Y = global double zeroinitializer
@XS = global double zeroinitializer
@YS = global double zeroinitializer
@SPR0 = global i8* zeroinitializer
@SPR1 = global i8* zeroinitializer
@SPR2 = global i8* zeroinitializer
@SPR3 = global i8* zeroinitializer
@SPR4 = global i8* zeroinitializer
@SPR5 = global i8* zeroinitializer
@SPR6 = global i8* zeroinitializer
@SPR7 = global i8* zeroinitializer
@BGIMAGE = global i8* zeroinitializer
@FGIMAGE = global i8* zeroinitializer
@RASTER = global i8* zeroinitializer
@UFLAG = global i8 zeroinitializer
@UPDATEDSCREEN = global i16 zeroinitializer
@Lt_03D6 = private constant [18 x i8] c"64c.251913-01.bin\00"
@Lt_03E3 = private constant [16 x i8] c"./chargen/0.c64\00"
@Lt_03E9 = private constant [6 x i8] c"BYTES\00"
@Lt_03EF = private constant [5 x i8] c"FREE\00"
@Lt_03F5 = private constant [10 x i8] c"MICROSOFT\00"
@Lt_03FB = private constant [6 x i8] c"BASIC\00"
@Lt_0401 = private constant [11 x i8] c"RAM SYSTEM\00"
@Lt_0407 = private constant [6 x i8] c"READY\00"
@Lt_0413 = private constant [12 x i8] c" RAM SYSTEM\00"
@Lt_05B9 = private constant [36 x i8] c"mplayer -vo xv -fs -alang en dvd://\00"
@Lt_05BA = private constant [22 x i8] c" -dvd-device /dev/sr0\00"
@Lt_05BF = private constant [67 x i8] c"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0\00"
@Lt_060C = private constant [23 x i8] c"./shaders/pc/demo.glsl\00"
@Lt_060F = private constant [7 x i8] c"file: \00"
@Lt_0610 = private constant [3 x i8] c"\0A\0A\00"
@Lt_0615 = private constant [8 x i8] c" ok ...\00"
@Lt_0630 = private constant [10 x i8] c"FreeBASIC\00"
@Lt_0631 = private constant [14 x i8] c"Shadertoy.com\00"
@Lt_063C = private constant [10 x i8] c"iChannel0\00"
@Lt_063F = private constant [12 x i8] c"iGlobalTime\00"
@Lt_0640 = private constant [6 x i8] c"iTime\00"
@Lt_0641 = private constant [12 x i8] c"iResolution\00"
@Lt_0642 = private constant [7 x i8] c"iMouse\00"
@Lt_0643 = private constant [7 x i8] c"iFrame\00"
@Lt_065B = private constant [7 x i8] c" fps: \00"
@Lt_0667 = private constant [9 x i8] c"tmp.glsl\00"
@Lt_0668 = private constant [19 x i8] c"// The MIT License\00"
@Lt_0669 = private constant [85 x i8] c"// Character ROM           Copyright \C2\A9 1959-2011 National Semiconductor Corporation\00"
@Lt_066A = private constant [84 x i8] c"//                         Copyright \C2\A9 2011-present Texas Instruments Incorporated\00"
@Lt_066B = private constant [83 x i8] c"// Dartmouth BASIC         Copyright \C2\A9 1964-1979 John G. Kem\C3\A9ny, Thomas E. Kurtz\00"
@Lt_066C = private constant [75 x i8] c"// Microsoft BASIC         Copyright \C2\A9 1975-present Microsoft Corporation\00"
@Lt_066D = private constant [82 x i8] c"// Commodore KERNAL ROM    Copyright \C2\A9 1977-1994 Commodore International Limited\00"
@Lt_066E = private constant [56 x i8] c"//                         Copyright \C2\A9 1995-1996 Escom\00"
@Lt_066F = private constant [69 x i8] c"//                         Copyright \C2\A9 1997-2008 Tulip Computers NV\00"
@Lt_0670 = private constant [62 x i8] c"//                         Copyright \C2\A9 2008-2009 Nedfield NV\00"
@Lt_0671 = private constant [71 x i8] c"// MOS Technology 6510     Copyright \C2\A9 1982-2001 MOS Technology, Inc.\00"
@Lt_0672 = private constant [60 x i8] c"// OpenGL Shading Language Copyright \C2\A9 2004-2006 OpenGLARB\00"
@Lt_0673 = private constant [69 x i8] c"//    \09\09    \09      Copyright \C2\A9 2006-present The Khronos Group, Inc.\00"
@Lt_0674 = private constant [84 x i8] c"// FreeBASIC               Copyright \C2\A9 2004-present The FreeBASIC Development Team\00"
@Lt_0675 = private constant [81 x i8] c"// Shadertoy               Copyright \C2\A9 2013-present Inigo Quilez & Pol Jeremias\00"
@Lt_0676 = private constant [76 x i8] c"// Project Manhattan       Copyright \C2\A9 2019-present Project Manhattan Team\00"
@Lt_0677 = private constant [64 x i8] c"// Permission is hereby granted, free of charge, to any person \00"
@Lt_0678 = private constant [67 x i8] c"// obtaining a copy of this software and associated documentation \00"
@Lt_0679 = private constant [72 x i8] c"// files (the 'Software'), to deal in the Software without restriction,\00"
@Lt_067A = private constant [73 x i8] c"// including without limitation the rights to use, copy, modify, merge, \00"
@Lt_067B = private constant [73 x i8] c"// publish, distribute, sublicense, and/or sell copies of the Software, \00"
@Lt_067C = private constant [70 x i8] c"// and to permit persons to whom the Software is furnished to do so, \00"
@Lt_067D = private constant [71 x i8] c"// subject to the following conditions: The above copyright notice and\00"
@Lt_067E = private constant [61 x i8] c"// this permission notice shall be included in all copies or\00"
@Lt_067F = private constant [41 x i8] c"// substantial portions of the Software.\00"
@Lt_0680 = private constant [67 x i8] c"// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\00"
@Lt_0681 = private constant [67 x i8] c"// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\00"
@Lt_0682 = private constant [60 x i8] c"// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\00"
@Lt_0683 = private constant [63 x i8] c"// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\00"
@Lt_0684 = private constant [64 x i8] c"// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\00"
@Lt_0685 = private constant [70 x i8] c"// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\00"
@Lt_0686 = private constant [65 x i8] c"// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\00"
@Lt_0687 = private constant [29 x i8] c"// DEALINGS IN THE SOFTWARE.\00"
@Lt_0688 = private constant [22 x i8] c"#if HW_PERFORMANCE==0\00"
@Lt_0689 = private constant [13 x i8] c"#define AA 1\00"
@Lt_068A = private constant [6 x i8] c"#else\00"
@Lt_068B = private constant [26 x i8] c"#define AA 2             \00"
@Lt_068C = private constant [7 x i8] c"#endif\00"
@Lt_068D = private constant [29 x i8] c"#define ZERO (min(iFrame,0))\00"
@Lt_068E = private constant [19 x i8] c"#define SAMPLES 32\00"
@Lt_068F = private constant [20 x i8] c"#define MAXDEPTH 10\00"
@Lt_0690 = private constant [7 x i8] c"#if 1 \00"
@Lt_0691 = private constant [26 x i8] c"#define INVERSEAO 1      \00"
@Lt_0692 = private constant [26 x i8] c"#define MINWEIGHTMODE 0  \00"
@Lt_0693 = private constant [25 x i8] c"#define WEIGHTMODE 1    \00"
@Lt_0694 = private constant [20 x i8] c"#define INVERSEAO 0\00"
@Lt_0695 = private constant [24 x i8] c"#define MINWEIGHTMODE 1\00"
@Lt_0696 = private constant [21 x i8] c"#define WEIGHTMODE 0\00"
@Lt_0697 = private constant [87 x i8] c"#define PI 3.1415926535897932384626433832795028841971693993751058209749445923078164062\00"
@Lt_0698 = private constant [33 x i8] c"#define OBJECT_MAP_FUNCTION map1\00"
@Lt_0699 = private constant [18 x i8] c"#define RECURSION\00"
@Lt_069A = private constant [22 x i8] c"#define RAY_COUNT 15 \00"
@Lt_069B = private constant [28 x i8] c"#define calcRecursion rec4 \00"
@Lt_069C = private constant [27 x i8] c"#define DIST_EPSILON 0.005\00"
@Lt_069D = private constant [19 x i8] c"#define ID_SKY 3.0\00"
@Lt_069E = private constant [21 x i8] c"#define ID_FLOOR 1.0\00"
@Lt_069F = private constant [23 x i8] c"#define ID_LIGHT 1.001\00"
@Lt_06A0 = private constant [28 x i8] c"#define ID_GLASS_WALL 2.000\00"
@Lt_06A1 = private constant [17 x i8] c"#define ETA 0.75\00"
@Lt_06A2 = private constant [16 x i8] c"#define M_PI PI\00"
@Lt_06A3 = private constant [24 x i8] c"#define DENSITY_MIN 0.1\00"
@Lt_06A4 = private constant [24 x i8] c"#define DENSITY_MAX 1.0\00"
@Lt_06A5 = private constant [43 x i8] c"#define MATERIAL_COLOR vec3(0.5,0.8,1)*0.1\00"
@Lt_06A6 = private constant [38 x i8] c"#define AIR_COLOR vec3(0.5,0.8,1)*0.1\00"
@Lt_06A7 = private constant [43 x i8] c"#define SURFACE_COLOR vec3(0.8,1.,0.8)*1.0\00"
@Lt_06A9 = private constant [125 x i8] c"#define horiz(s, e, p) if(s.x < p.x && p.x <= e.x) return mix(s.y, e.y, notsosmoothstep(0., 1., (p.x - s.x) / (e.x - s.x)));\00"
@Lt_06AA = private constant [22 x i8] c"#define iterations 17\00"
@Lt_06AB = private constant [24 x i8] c"#define formuparam 0.53\00"
@Lt_06AC = private constant [20 x i8] c"#define volsteps 20\00"
@Lt_06AD = private constant [21 x i8] c"#define stepsize 0.1\00"
@Lt_06AE = private constant [21 x i8] c"#define zoom   0.800\00"
@Lt_06AF = private constant [21 x i8] c"#define tile   0.850\00"
@Lt_06B0 = private constant [22 x i8] c"#define speed  0.010 \00"
@Lt_06B1 = private constant [26 x i8] c"#define brightness 0.0015\00"
@Lt_06B2 = private constant [25 x i8] c"#define darkmatter 0.300\00"
@Lt_06B3 = private constant [25 x i8] c"#define distfading 0.730\00"
@Lt_06B4 = private constant [25 x i8] c"#define saturation 0.850\00"
@Lt_06B5 = private constant [20 x i8] c"#define D_DEMO_FREE\00"
@Lt_06B6 = private constant [19 x i8] c"#ifdef D_DEMO_FREE\00"
@Lt_06B7 = private constant [28 x i8] c"    #define D_FOG_NOISE 1.0\00"
@Lt_06B8 = private constant [29 x i8] c"    #define D_STRONG_FOG 0.0\00"
@Lt_06B9 = private constant [37 x i8] c"    #define D_VOLUME_SHADOW_ENABLE 1\00"
@Lt_06BA = private constant [40 x i8] c"    #define D_USE_IMPROVE_INTEGRATION 1\00"
@Lt_06BB = private constant [44 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_FLAT)\00"
@Lt_06BC = private constant [30 x i8] c"    #define D_STRONG_FOG 10.0\00"
@Lt_06BD = private constant [28 x i8] c"    #define D_FOG_NOISE 0.0\00"
@Lt_06BE = private constant [34 x i8] c"\09#define D_VOLUME_SHADOW_ENABLE 1\00"
@Lt_06BF = private constant [45 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_NOISE)\00"
@Lt_06C0 = private constant [29 x i8] c"    #define D_STRONG_FOG 5.0\00"
@Lt_06C1 = private constant [63 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_FLAT_NOVOLUMETRICSHADOW)\00"
@Lt_06C2 = private constant [34 x i8] c"\09#define D_VOLUME_SHADOW_ENABLE 0\00"
@Lt_06C3 = private constant [64 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_NOISE_NOVOLUMETRICSHADOW)\00"
@Lt_06C4 = private constant [29 x i8] c"    #define D_STRONG_FOG 3.0\00"
@Lt_06C5 = private constant [31 x i8] c"#define D_UPDATE_TRANS_FIRST 0\00"
@Lt_06C6 = private constant [27 x i8] c"#define D_DETAILED_WALLS 0\00"
@Lt_06C7 = private constant [35 x i8] c"#define D_MAX_STEP_LENGTH_ENABLE 1\00"
@Lt_06C8 = private constant [69 x i8] c"#define LPOS vec3( 20.0+15.0*sin(iTime), 15.0+12.0*cos(iTime),-20.0)\00"
@Lt_06C9 = private constant [42 x i8] c"#define LCOL (600.0*vec3( 1.0, 0.9, 0.5))\00"
@Lt_06CA = private constant [21 x i8] c"const float pi = PI;\00"
@Lt_06CB = private constant [26 x i8] c"const float maxHei = 0.8;\00"
@Lt_06CC = private constant [53 x i8] c"const vec3 sunDir = normalize( vec3(0.2,0.1,0.02) );\00"
@Lt_06CD = private constant [49 x i8] c"vec3 LIGHT_DIR = normalize(vec3(-0.6,0.7,-0.3));\00"
@Lt_06CE = private constant [9 x i8] c"vec4 ot;\00"
@Lt_06CF = private constant [16 x i8] c"float kl = 0.0;\00"
@Lt_06D0 = private constant [12 x i8] c"int ef = 0;\00"
@Lt_06D1 = private constant [18 x i8] c"float seed = 0.0;\00"
@Lt_06D2 = private constant [12 x i8] c"float href;\00"
@Lt_06D3 = private constant [12 x i8] c"float hsha;\00"
@Lt_06D4 = private constant [12 x i8] c"struct CP {\00"
@Lt_06D5 = private constant [16 x i8] c"    float dist;\00"
@Lt_06D6 = private constant [17 x i8] c"    vec3 normal;\00"
@Lt_06D7 = private constant [15 x i8] c"    float mat;\00"
@Lt_06D8 = private constant [12 x i8] c"    vec3 p;\00"
@Lt_06D9 = private constant [3 x i8] c"};\00"
@Lt_06DA = private constant [5 x i8] c"    \00"
@Lt_06DB = private constant [13 x i8] c"struct Ray {\00"
@Lt_06DC = private constant [13 x i8] c"    vec3 rd;\00"
@Lt_06DD = private constant [11 x i8] c"    CP cp;\00"
@Lt_06DE = private constant [14 x i8] c"    vec3 col;\00"
@Lt_06DF = private constant [17 x i8] c"    float share;\00"
@Lt_06E0 = private constant [15 x i8] c"    float eta;\00"
@Lt_06E1 = private constant [69 x i8] c"//------------------------------------------------------------------\00"
@Lt_06E2 = private constant [58 x i8] c"float rand() { return fract(sin(seed++)*43758.5453123); }\00"
@Lt_06E3 = private constant [22 x i8] c"float rand(vec2 n) { \00"
@Lt_06E4 = private constant [64 x i8] c"\09return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\00"
@Lt_06E5 = private constant [2 x i8] c"}\00"
@Lt_06E6 = private constant [21 x i8] c"float rand1(vec2 co)\00"
@Lt_06E7 = private constant [2 x i8] c"{\00"
@Lt_06E8 = private constant [65 x i8] c"    return fract(sin(dot(co.xy ,vec2(12.98,78.23))) * 43758.54);\00"
@Lt_06E9 = private constant [22 x i8] c"float noise(vec2 n) {\00"
@Lt_06EA = private constant [32 x i8] c"\09const vec2 d = vec2(0.0, 1.0);\00"
@Lt_06EB = private constant [68 x i8] c"\09vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\00"
@Lt_06EC = private constant [95 x i8] c"\09return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\00"
@Lt_06ED = private constant [41 x i8] c"float noise(vec3 p) //Thx to Las^Mercury\00"
@Lt_06EE = private constant [20 x i8] c"\09vec3 i = floor(p);\00"
@Lt_06EF = private constant [64 x i8] c"\09vec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\00"
@Lt_06F0 = private constant [41 x i8] c"\09vec3 f = cos((p-i)*acos(-1.))*(-.5)+.5;\00"
@Lt_06F1 = private constant [52 x i8] c"\09a = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\00"
@Lt_06F2 = private constant [30 x i8] c"\09a.xy = mix(a.xz, a.yw, f.y);\00"
@Lt_06F3 = private constant [28 x i8] c"\09return mix(a.x, a.y, f.z);\00"
@Lt_06F4 = private constant [40 x i8] c"float smin( float a, float b, float k )\00"
@Lt_06F5 = private constant [35 x i8] c"    float h = max(k-abs(a-b),0.0);\00"
@Lt_06F6 = private constant [35 x i8] c"    return min(a, b) - h*h*0.25/k;\00"
@Lt_06F7 = private constant [37 x i8] c"vec2 smin( vec2 a, vec2 b, float k )\00"
@Lt_06F8 = private constant [54 x i8] c"    float h = clamp( 0.5+0.5*(b.x-a.x)/k, 0.0, 1.0 );\00"
@Lt_06F9 = private constant [41 x i8] c"    return mix( b, a, h ) - k*h*(1.0-h);\00"
@Lt_06FA = private constant [40 x i8] c"float smax( float a, float b, float k )\00"
@Lt_06FB = private constant [35 x i8] c"    return max(a, b) + h*h*0.25/k;\00"
@Lt_06FC = private constant [33 x i8] c"vec3 rotXaxis(vec3 p, float rad)\00"
@Lt_06FD = private constant [45 x i8] c"\09float z2 = cos(rad) * p.z - sin(rad) * p.y;\00"
@Lt_06FE = private constant [45 x i8] c"\09float y2 = sin(rad) * p.z + cos(rad) * p.y;\00"
@Lt_06FF = private constant [11 x i8] c"\09p.z = z2;\00"
@Lt_0700 = private constant [11 x i8] c"\09p.y = y2;\00"
@Lt_0701 = private constant [11 x i8] c"\09return p;\00"
@Lt_0702 = private constant [34 x i8] c"vec3 rotYaxis(vec3 p, float rad) \00"
@Lt_0703 = private constant [45 x i8] c"\09float x2 = cos(rad) * p.x - sin(rad) * p.z;\00"
@Lt_0704 = private constant [45 x i8] c"\09float z2 = sin(rad) * p.x + cos(rad) * p.z;\00"
@Lt_0705 = private constant [11 x i8] c"\09p.x = x2;\00"
@Lt_0706 = private constant [53 x i8] c"float sdEllipsoid( in vec3 p, in vec3 c, in vec3 r )\00"
@Lt_0707 = private constant [62 x i8] c"    return (length( (p-c)/r ) - 1.0) * min(min(r.x,r.y),r.z);\00"
@Lt_0708 = private constant [24 x i8] c"float sdPlane( vec3 p )\00"
@Lt_0709 = private constant [13 x i8] c"\09return p.y;\00"
@Lt_070A = private constant [34 x i8] c"float sdSphere( vec3 p, float s )\00"
@Lt_070B = private constant [24 x i8] c"    return length(p)-s;\00"
@Lt_070C = private constant [31 x i8] c"float sphere(vec3 p, vec4 spr)\00"
@Lt_070D = private constant [35 x i8] c"\09return length(spr.xyz-p) - spr.w;\00"
@Lt_070E = private constant [20 x i8] c"float flame(vec3 p)\00"
@Lt_070F = private constant [57 x i8] c"\09float d = sphere(p*vec3(1.,.5,1.), vec4(.0,-1.,.0,1.));\00"
@Lt_0710 = private constant [73 x i8] c"\09return d + (noise(p+vec3(.0,iTime*2.,.0)) + noise(p*3.)*.5)*.25*(p.y) ;\00"
@Lt_0711 = private constant [39 x i8] c"float sdSphere( in vec3 p, in vec4 s )\00"
@Lt_0712 = private constant [34 x i8] c"    return length(p-s.xyz) - s.w;\00"
@Lt_0713 = private constant [30 x i8] c"float sdBox( vec3 p, vec3 b )\00"
@Lt_0714 = private constant [25 x i8] c"    vec3 d = abs(p) - b;\00"
@Lt_0715 = private constant [64 x i8] c"    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\00"
@Lt_0716 = private constant [23 x i8] c"float Boxes(vec3 pos) \00"
@Lt_0717 = private constant [23 x i8] c"vec3 rok = vec3(0.35);\00"
@Lt_0718 = private constant [9 x i8] c"float m;\00"
@Lt_0719 = private constant [109 x i8] c"m = length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3,0.0),iTime*0.3 ),iTime*0.15))-rok,0.0))-0.03; // Cube\00"
@Lt_071A = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3, 1.2),iTime*0.21),iTime*0.24))-rok,0.0))-0.03); \00"
@Lt_071B = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3,-1.2),iTime*0.2 ),iTime*0.3 ))-rok,0.0))-0.03); \00"
@Lt_071C = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(1.2,-0.3, 0.0),iTime*0.17),iTime*0.26))-rok,0.0))-0.03); \00"
@Lt_071D = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(-1.2,-0.3,0.0),iTime*0.32),iTime*0.2 ))-rok,0.0))-0.03); \00"
@Lt_071E = private constant [10 x i8] c"return m;\00"
@Lt_071F = private constant [27 x i8] c"float Singlebox(vec3 pos) \00"
@Lt_0721 = private constant [141 x i8] c"return length(max(abs(rotXaxis(pos+vec3(0.0,-0.5,0.0),iTime*0.47))-vec3(0.55-0.025*(kl+0.4)*sin(pos.z*pos.x*pos.y*35.)),0.0))-0.025; // Cube\00"
@Lt_0722 = private constant [58 x i8] c"float sdEllipsoid( in vec3 p, in vec3 r ) // approximated\00"
@Lt_0723 = private constant [28 x i8] c"    float k0 = length(p/r);\00"
@Lt_0724 = private constant [32 x i8] c"    float k1 = length(p/(r*r));\00"
@Lt_0725 = private constant [27 x i8] c"    return k0*(k0-1.0)/k1;\00"
@Lt_0726 = private constant [44 x i8] c"float udRoundBox( vec3 p, vec3 b, float r )\00"
@Lt_0727 = private constant [40 x i8] c"    return length(max(abs(p)-b,0.0))-r;\00"
@Lt_0728 = private constant [32 x i8] c"float sdTorus( vec3 p, vec2 t )\00"
@Lt_0729 = private constant [53 x i8] c"    return length( vec2(length(p.xz)-t.x,p.y) )-t.y;\00"
@Lt_072A = private constant [69 x i8] c"float sdCappedTorus(in vec3 p, in vec2 sc, in float ra, in float rb)\00"
@Lt_072B = private constant [20 x i8] c"    p.x = abs(p.x);\00"
@Lt_072C = private constant [65 x i8] c"    float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\00"
@Lt_072D = private constant [53 x i8] c"    return sqrt( dot(p,p) + ra*ra - 2.0*ra*k ) - rb;\00"
@Lt_072E = private constant [35 x i8] c"float sdHexPrism( vec3 p, vec2 h )\00"
@Lt_072F = private constant [21 x i8] c"    vec3 q = abs(p);\00"
@Lt_0730 = private constant [6 x i8] c"#if 0\00"
@Lt_0731 = private constant [61 x i8] c"    return max(q.z-h.y,max((q.x*0.866025+q.y*0.5),q.y)-h.x);\00"
@Lt_0732 = private constant [24 x i8] c"    float d1 = q.z-h.y;\00"
@Lt_0733 = private constant [52 x i8] c"    float d2 = max((q.x*0.866025+q.y*0.5),q.y)-h.x;\00"
@Lt_0734 = private constant [63 x i8] c"    return length(max(vec2(d1,d2),0.0)) + min(max(d1,d2), 0.);\00"
@Lt_0735 = private constant [51 x i8] c"float sdCapsule( vec3 p, vec3 a, vec3 b, float r )\00"
@Lt_0736 = private constant [26 x i8] c"\09vec3 pa = p-a, ba = b-a;\00"
@Lt_0737 = private constant [53 x i8] c"\09float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\00"
@Lt_0738 = private constant [33 x i8] c"\09return length( pa - ba*h ) - r;\00"
@Lt_0739 = private constant [63 x i8] c"float sdRoundCone( in vec3 p, in float r1, float r2, float h )\00"
@Lt_073A = private constant [40 x i8] c"    vec2 q = vec2( length(p.xz), p.y );\00"
@Lt_073B = private constant [25 x i8] c"    float b = (r1-r2)/h;\00"
@Lt_073C = private constant [29 x i8] c"    float a = sqrt(1.0-b*b);\00"
@Lt_073D = private constant [33 x i8] c"    float k = dot(q,vec2(-b,a));\00"
@Lt_073E = private constant [41 x i8] c"    if( k < 0.0 ) return length(q) - r1;\00"
@Lt_073F = private constant [53 x i8] c"    if( k > a*h ) return length(q-vec2(0.0,h)) - r2;\00"
@Lt_0740 = private constant [9 x i8] c"        \00"
@Lt_0741 = private constant [36 x i8] c"    return dot(q, vec2(a,b) ) - r1;\00"
@Lt_0742 = private constant [42 x i8] c"float dot2(in vec3 v ) {return dot(v,v);}\00"
@Lt_0743 = private constant [62 x i8] c"float sdRoundCone(vec3 p, vec3 a, vec3 b, float r1, float r2)\00"
@Lt_0744 = private constant [64 x i8] c"    // sampling independent computations (only depend on shape)\00"
@Lt_0745 = private constant [22 x i8] c"    vec3  ba = b - a;\00"
@Lt_0746 = private constant [27 x i8] c"    float l2 = dot(ba,ba);\00"
@Lt_0747 = private constant [24 x i8] c"    float rr = r1 - r2;\00"
@Lt_0748 = private constant [27 x i8] c"    float a2 = l2 - rr*rr;\00"
@Lt_0749 = private constant [24 x i8] c"    float il2 = 1.0/l2;\00"
@Lt_074A = private constant [39 x i8] c"    // sampling dependant computations\00"
@Lt_074B = private constant [21 x i8] c"    vec3 pa = p - a;\00"
@Lt_074C = private constant [26 x i8] c"    float y = dot(pa,ba);\00"
@Lt_074D = private constant [22 x i8] c"    float z = y - l2;\00"
@Lt_074E = private constant [37 x i8] c"    float x2 = dot2( pa*l2 - ba*y );\00"
@Lt_074F = private constant [23 x i8] c"    float y2 = y*y*l2;\00"
@Lt_0750 = private constant [23 x i8] c"    float z2 = z*z*l2;\00"
@Lt_0751 = private constant [27 x i8] c"    // single square root!\00"
@Lt_0752 = private constant [33 x i8] c"    float k = sign(rr)*rr*rr*x2;\00"
@Lt_0753 = private constant [68 x i8] c"    if( sign(z)*a2*z2 > k ) return  sqrt(x2 + z2)        *il2 - r2;\00"
@Lt_0754 = private constant [68 x i8] c"    if( sign(y)*a2*y2 < k ) return  sqrt(x2 + y2)        *il2 - r1;\00"
@Lt_0755 = private constant [68 x i8] c"                            return (sqrt(x2*a2*il2)+y*rr)*il2 - r1;\00"
@Lt_0756 = private constant [42 x i8] c"float sdEquilateralTriangle(  in vec2 p )\00"
@Lt_0757 = private constant [41 x i8] c"    const float k = 1.73205;//sqrt(3.0);\00"
@Lt_0758 = private constant [26 x i8] c"    p.x = abs(p.x) - 1.0;\00"
@Lt_0759 = private constant [23 x i8] c"    p.y = p.y + 1.0/k;\00"
@Lt_075A = private constant [71 x i8] c"    if( p.x + k*p.y > 0.0 ) p = vec2( p.x - k*p.y, -k*p.x - p.y )/2.0;\00"
@Lt_075B = private constant [55 x i8] c"    p.x += 2.0 - 2.0*clamp( (p.x+2.0)/2.0, 0.0, 1.0 );\00"
@Lt_075C = private constant [33 x i8] c"    return -length(p)*sign(p.y);\00"
@Lt_075D = private constant [35 x i8] c"float sdTriPrism( vec3 p, vec2 h )\00"
@Lt_075E = private constant [64 x i8] c"    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\00"
@Lt_075F = private constant [55 x i8] c"    float d2 = max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5;\00"
@Lt_0760 = private constant [12 x i8] c"// vertical\00"
@Lt_0761 = private constant [35 x i8] c"float sdCylinder( vec3 p, vec2 h )\00"
@Lt_0762 = private constant [46 x i8] c"    vec2 d = abs(vec2(length(p.xz),p.y)) - h;\00"
@Lt_0763 = private constant [55 x i8] c"    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\00"
@Lt_0764 = private constant [25 x i8] c"// arbitrary orientation\00"
@Lt_0765 = private constant [50 x i8] c"float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\00"
@Lt_0766 = private constant [21 x i8] c"    vec3 ba = b - a;\00"
@Lt_0767 = private constant [29 x i8] c"    float baba = dot(ba,ba);\00"
@Lt_0768 = private constant [29 x i8] c"    float paba = dot(pa,ba);\00"
@Lt_0769 = private constant [48 x i8] c"    float x = length(pa*baba-ba*paba) - r*baba;\00"
@Lt_076A = private constant [43 x i8] c"    float y = abs(paba-baba*0.5)-baba*0.5;\00"
@Lt_076B = private constant [20 x i8] c"    float x2 = x*x;\00"
@Lt_076C = private constant [25 x i8] c"    float y2 = y*y*baba;\00"
@Lt_076D = private constant [78 x i8] c"    float d = (max(x,y)<0.0)?-min(x2,y2):(((x>0.0)?x2:0.0)+((y>0.0)?y2:0.0));\00"
@Lt_076E = private constant [38 x i8] c"    return sign(d)*sqrt(abs(d))/baba;\00"
@Lt_076F = private constant [41 x i8] c"float sdCappedCylinder( vec3 p, vec2 h )\00"
@Lt_0770 = private constant [44 x i8] c"  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\00"
@Lt_0771 = private constant [53 x i8] c"  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\00"
@Lt_0772 = private constant [37 x i8] c"float sdCone( in vec3 p, in vec3 c )\00"
@Lt_0773 = private constant [25 x i8] c"    float d1 = -q.y-c.z;\00"
@Lt_0774 = private constant [39 x i8] c"    float d2 = max( dot(q,c.xy), q.y);\00"
@Lt_0775 = private constant [45 x i8] c"float dot2( in vec2 v ) { return dot(v,v); }\00"
@Lt_0776 = private constant [64 x i8] c"float sdCone( in vec3 p, in float h, in float r1, in float r2 )\00"
@Lt_0777 = private constant [26 x i8] c"    vec2 k1 = vec2(r2,h);\00"
@Lt_0778 = private constant [33 x i8] c"    vec2 k2 = vec2(r2-r1,2.0*h);\00"
@Lt_0779 = private constant [64 x i8] c"    vec2 ca = vec2(q.x-min(q.x,(q.y < 0.0)?r1:r2), abs(q.y)-h);\00"
@Lt_077A = private constant [68 x i8] c"    vec2 cb = q - k1 + k2*clamp( dot(k1-q,k2)/dot2(k2), 0.0, 1.0 );\00"
@Lt_077B = private constant [55 x i8] c"    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;\00"
@Lt_077C = private constant [45 x i8] c"    return s*sqrt( min(dot2(ca),dot2(cb)) );\00"
@Lt_077D = private constant [57 x i8] c"float sdCone(vec3 p, vec3 a, vec3 b, float ra, float rb)\00"
@Lt_077E = private constant [24 x i8] c"    float rba  = rb-ra;\00"
@Lt_077F = private constant [31 x i8] c"    float baba = dot(b-a,b-a);\00"
@Lt_0780 = private constant [31 x i8] c"    float papa = dot(p-a,p-a);\00"
@Lt_0781 = private constant [36 x i8] c"    float paba = dot(p-a,b-a)/baba;\00"
@Lt_0782 = private constant [45 x i8] c"    float x = sqrt( papa - paba*paba*baba );\00"
@Lt_0783 = private constant [47 x i8] c"    float cax = max(0.0,x-((paba<0.5)?ra:rb));\00"
@Lt_0784 = private constant [35 x i8] c"    float cay = abs(paba-0.5)-0.5;\00"
@Lt_0785 = private constant [30 x i8] c"    float k = rba*rba + baba;\00"
@Lt_0786 = private constant [59 x i8] c"    float f = clamp( (rba*(x-ra)+paba*baba)/k, 0.0, 1.0 );\00"
@Lt_0787 = private constant [30 x i8] c"    float cbx = x-ra - f*rba;\00"
@Lt_0788 = private constant [26 x i8] c"    float cby = paba - f;\00"
@Lt_0789 = private constant [53 x i8] c"    float s = (cbx < 0.0 && cay < 0.0) ? -1.0 : 1.0;\00"
@Lt_078A = private constant [47 x i8] c"    return s*sqrt( min(cax*cax + cay*cay*baba,\00"
@Lt_078B = private constant [50 x i8] c"                       cbx*cbx + cby*cby*baba) );\00"
@Lt_078C = private constant [71 x i8] c"float sdConeSection( in vec3 p, in float h, in float r1, in float r2 )\00"
@Lt_078D = private constant [25 x i8] c"    float d1 = -p.y - h;\00"
@Lt_078E = private constant [23 x i8] c"    float q = p.y - h;\00"
@Lt_078F = private constant [30 x i8] c"    float si = 0.5*(r1-r2)/h;\00"
@Lt_0790 = private constant [72 x i8] c"    float d2 = max( sqrt( dot(p.xz,p.xz)*(1.0-si*si)) + q*si - r2, q );\00"
@Lt_0791 = private constant [46 x i8] c"// c is the sin/cos of the desired cone angle\00"
@Lt_0792 = private constant [47 x i8] c"float sdSolidAngle(vec3 pos, vec2 c, float ra)\00"
@Lt_0793 = private constant [44 x i8] c"    vec2 p = vec2( length(pos.xz), pos.y );\00"
@Lt_0794 = private constant [30 x i8] c"    float l = length(p) - ra;\00"
@Lt_0795 = private constant [50 x i8] c"\09float m = length(p - c*clamp(dot(p,c),0.0,ra) );\00"
@Lt_0796 = private constant [43 x i8] c"    return max(l,m*sign(c.y*p.x-c.x*p.y));\00"
@Lt_0797 = private constant [36 x i8] c"float sdOctahedron(vec3 p, float s)\00"
@Lt_0798 = private constant [16 x i8] c"    p = abs(p);\00"
@Lt_0799 = private constant [35 x i8] c"    float m = p.x + p.y + p.z - s;\00"
@Lt_079A = private constant [22 x i8] c"    // exact distance\00"
@Lt_079B = private constant [10 x i8] c"    #if 0\00"
@Lt_079C = private constant [34 x i8] c"    vec3 o = min(3.0*p - m, 0.0);\00"
@Lt_079D = private constant [57 x i8] c"    o = max(6.0*p - m*2.0 - o*3.0 + (o.x+o.y+o.z), 0.0);\00"
@Lt_079E = private constant [42 x i8] c"    return length(p - s*o/(o.x+o.y+o.z));\00"
@Lt_079F = private constant [11 x i8] c"    #endif\00"
@Lt_07A0 = private constant [10 x i8] c"    #if 1\00"
@Lt_07A1 = private constant [10 x i8] c" \09vec3 q;\00"
@Lt_07A2 = private constant [38 x i8] c"         if( 3.0*p.x < m ) q = p.xyz;\00"
@Lt_07A3 = private constant [38 x i8] c"    else if( 3.0*p.y < m ) q = p.yzx;\00"
@Lt_07A4 = private constant [38 x i8] c"    else if( 3.0*p.z < m ) q = p.zxy;\00"
@Lt_07A5 = private constant [30 x i8] c"    else return m*0.57735027;\00"
@Lt_07A6 = private constant [45 x i8] c"    float k = clamp(0.5*(q.z-q.y+s),0.0,s); \00"
@Lt_07A7 = private constant [45 x i8] c"    return length(vec3(q.x,q.y-s+k,q.z-k)); \00"
@Lt_07A8 = private constant [24 x i8] c"    // bound, not exact\00"
@Lt_07A9 = private constant [22 x i8] c"\09return m*0.57735027;\00"
@Lt_07AA = private constant [41 x i8] c"float sdPyramid( in vec3 p, in float h )\00"
@Lt_07AB = private constant [27 x i8] c"    float m2 = h*h + 0.25;\00"
@Lt_07AC = private constant [16 x i8] c"    // symmetry\00"
@Lt_07AD = private constant [22 x i8] c"    p.xz = abs(p.xz);\00"
@Lt_07AE = private constant [36 x i8] c"    p.xz = (p.z>p.x) ? p.zx : p.xz;\00"
@Lt_07AF = private constant [17 x i8] c"    p.xz -= 0.5;\00"
@Lt_07B0 = private constant [2 x i8] c"\09\00"
@Lt_07B1 = private constant [36 x i8] c"    // project into face plane (2D)\00"
@Lt_07B2 = private constant [59 x i8] c"    vec3 q = vec3( p.z, h*p.y - 0.5*p.x, h*p.x + 0.5*p.y);\00"
@Lt_07B3 = private constant [4 x i8] c"   \00"
@Lt_07B4 = private constant [29 x i8] c"    float s = max(-q.x,0.0);\00"
@Lt_07B5 = private constant [58 x i8] c"    float t = clamp( (q.y-0.5*p.z)/(m2+0.25), 0.0, 1.0 );\00"
@Lt_07B6 = private constant [44 x i8] c"    float a = m2*(q.x+s)*(q.x+s) + q.y*q.y;\00"
@Lt_07B7 = private constant [63 x i8] c"\09float b = m2*(q.x+0.5*t)*(q.x+0.5*t) + (q.y-m2*t)*(q.y-m2*t);\00"
@Lt_07B8 = private constant [64 x i8] c"    float d2 = min(q.y,-q.x*m2-q.y*0.5) > 0.0 ? 0.0 : min(a,b);\00"
@Lt_07B9 = private constant [42 x i8] c"    // recover 3D and scale, and add sign\00"
@Lt_07BA = private constant [59 x i8] c"    return sqrt( (d2+q.z*q.z)/m2 ) * sign(max(q.z,-p.y));;\00"
@Lt_07BB = private constant [66 x i8] c"float sdPryamid4(vec3 p, vec3 h ) // h = { cos a, sin a, height }\00"
@Lt_07BC = private constant [39 x i8] c"    // Tetrahedron = Octahedron - Cube\00"
@Lt_07BD = private constant [64 x i8] c"    float box = sdBox( p - vec3(0,-2.0*h.z,0), vec3(2.0*h.z) );\00"
@Lt_07BE = private constant [19 x i8] c"    float d = 0.0;\00"
@Lt_07BF = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3( -h.x, h.y, 0 )) ));\00"
@Lt_07C0 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  h.x, h.y, 0 )) ));\00"
@Lt_07C1 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  0, h.y, h.x )) ));\00"
@Lt_07C2 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  0, h.y,-h.x )) ));\00"
@Lt_07C3 = private constant [26 x i8] c"    float octa = d - h.z;\00"
@Lt_07C4 = private constant [42 x i8] c"    return max(-box,octa); // Subtraction\00"
@Lt_07C5 = private constant [73 x i8] c"vec2 sdStick(vec3 p, vec3 a, vec3 b, float r1, float r2) // approximated\00"
@Lt_07C6 = private constant [29 x i8] c"    vec3 pa = p-a, ba = b-a;\00"
@Lt_07C7 = private constant [69 x i8] c"\09return vec2( length( pa - ba*h ) - mix(r1,r2,h*h*(3.0-2.0*h)), h );\00"
@Lt_07C8 = private constant [66 x i8] c"float sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\00"
@Lt_07C9 = private constant [20 x i8] c"\09vec2 e0 = p1 - p0;\00"
@Lt_07CA = private constant [20 x i8] c"\09vec2 e1 = p2 - p1;\00"
@Lt_07CB = private constant [20 x i8] c"\09vec2 e2 = p0 - p2;\00"
@Lt_07CC = private constant [19 x i8] c"\09vec2 v0 = p - p0;\00"
@Lt_07CD = private constant [19 x i8] c"\09vec2 v1 = p - p1;\00"
@Lt_07CE = private constant [19 x i8] c"\09vec2 v2 = p - p2;\00"
@Lt_07CF = private constant [62 x i8] c"\09vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\00"
@Lt_07D0 = private constant [62 x i8] c"\09vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\00"
@Lt_07D1 = private constant [62 x i8] c"\09vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\00"
@Lt_07D2 = private constant [45 x i8] c"    float s = sign( e0.x*e2.y - e0.y*e2.x );\00"
@Lt_07D3 = private constant [73 x i8] c"    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\00"
@Lt_07D4 = private constant [74 x i8] c"                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\00"
@Lt_07D5 = private constant [74 x i8] c"                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\00"
@Lt_07D6 = private constant [30 x i8] c"\09return -sqrt(d.x)*sign(d.y);\00"
@Lt_07D7 = private constant [24 x i8] c"float menger(vec3 pos )\00"
@Lt_07D8 = private constant [32 x i8] c"\09float d = sdBox(pos,vec3(1.));\00"
@Lt_07D9 = private constant [48 x i8] c"\09float s = 1.63+0.07*sin(0.53*iTime)-0.3*pos.y;\00"
@Lt_07DA = private constant [26 x i8] c"\09for( int m=0; m<2; m++ )\00"
@Lt_07DB = private constant [3 x i8] c"\09{\00"
@Lt_07DC = private constant [38 x i8] c"      vec3 a = mod( pos*s, 2.0 )-1.0;\00"
@Lt_07DD = private constant [16 x i8] c"      s *= 3.0;\00"
@Lt_07DE = private constant [41 x i8] c"\09  vec3 r = abs(1.0 - 3.0*abs(a))-0.025;\00"
@Lt_07DF = private constant [31 x i8] c"      float da = max(r.x,r.y);\00"
@Lt_07E0 = private constant [31 x i8] c"      float db = max(r.y,r.z);\00"
@Lt_07E1 = private constant [31 x i8] c"      float dc = max(r.z,r.x);\00"
@Lt_07E2 = private constant [44 x i8] c"      float c = (min(da,min(db,dc))-1.0)/s;\00"
@Lt_07E3 = private constant [20 x i8] c"      d = max(d,c);\00"
@Lt_07E4 = private constant [5 x i8] c"   }\00"
@Lt_07E5 = private constant [14 x i8] c"    return d;\00"
@Lt_07E6 = private constant [33 x i8] c"vec3 hsv2rgb_smooth( in vec3 c )\00"
@Lt_07E7 = private constant [83 x i8] c"    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\00"
@Lt_07E8 = private constant [50 x i8] c"\09rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\09\00"
@Lt_07E9 = private constant [41 x i8] c"\09return c.z * mix( vec3(1.0), rgb, c.y);\00"
@Lt_07EA = private constant [57 x i8] c"float notsosmoothstep(float edge0, float edge1, float x)\00"
@Lt_07EB = private constant [55 x i8] c"    x = clamp((x - edge0)/(edge1 - edge0), 0.0, 1.0); \00"
@Lt_07EC = private constant [41 x i8] c"    return mix(x*x*(3. - 2.*x), x, 0.2);\00"
@Lt_07ED = private constant [24 x i8] c"float length2( vec2 p )\00"
@Lt_07EE = private constant [38 x i8] c"    return sqrt( p.x*p.x + p.y*p.y );\00"
@Lt_07EF = private constant [24 x i8] c"float length6( vec2 p )\00"
@Lt_07F0 = private constant [24 x i8] c"    p = p*p*p; p = p*p;\00"
@Lt_07F1 = private constant [38 x i8] c"    return pow( p.x + p.y, 1.0/6.0 );\00"
@Lt_07F2 = private constant [24 x i8] c"float length8( vec2 p )\00"
@Lt_07F3 = private constant [31 x i8] c"    p = p*p; p = p*p; p = p*p;\00"
@Lt_07F4 = private constant [38 x i8] c"    return pow( p.x + p.y, 1.0/8.0 );\00"
@Lt_07F5 = private constant [34 x i8] c"float sdTorus82( vec3 p, vec2 t )\00"
@Lt_07F6 = private constant [42 x i8] c"    vec2 q = vec2(length2(p.xz)-t.x,p.y);\00"
@Lt_07F7 = private constant [27 x i8] c"    return length8(q)-t.y;\00"
@Lt_07F8 = private constant [34 x i8] c"float sdTorus88( vec3 p, vec2 t )\00"
@Lt_07F9 = private constant [42 x i8] c"    vec2 q = vec2(length8(p.xz)-t.x,p.y);\00"
@Lt_07FA = private constant [36 x i8] c"float sdCylinder6( vec3 p, vec2 h )\00"
@Lt_07FB = private constant [51 x i8] c"    return max( length6(p.xz)-h.x, abs(p.y)-h.y );\00"
@Lt_07FC = private constant [32 x i8] c"float opS( float d1, float d2 )\00"
@Lt_07FD = private constant [24 x i8] c"    return max(-d2,d1);\00"
@Lt_07FE = private constant [30 x i8] c"vec3 opS(  vec3 d1, vec3 d2 )\00"
@Lt_07FF = private constant [32 x i8] c"    return -d1.x>d2.x ? d2: d1;\00"
@Lt_0800 = private constant [29 x i8] c"vec2 opU( vec2 d1, vec2 d2 )\00"
@Lt_0801 = private constant [31 x i8] c"\09return (d1.x<d2.x) ? d1 : d2;\00"
@Lt_0802 = private constant [29 x i8] c"vec3 opU( vec3 d1, vec3 d2 )\00"
@Lt_0803 = private constant [29 x i8] c"vec4 opU( vec4 d1, vec4 d2 )\00"
@Lt_0804 = private constant [29 x i8] c"vec3 opRep( vec3 p, vec3 c )\00"
@Lt_0805 = private constant [27 x i8] c"    return mod(p,c)-0.5*c;\00"
@Lt_0806 = private constant [23 x i8] c"vec3 opTwist( vec3 p )\00"
@Lt_0807 = private constant [35 x i8] c"    float  c = cos(10.0*p.y+10.0);\00"
@Lt_0808 = private constant [35 x i8] c"    float  s = sin(10.0*p.y+10.0);\00"
@Lt_0809 = private constant [31 x i8] c"    mat2   m = mat2(c,-s,s,c);\00"
@Lt_080A = private constant [29 x i8] c"    return vec3(m*p.xz,p.y);\00"
@Lt_080B = private constant [51 x i8] c"float sdCircle( in vec2 p, in vec2 c, in float r )\00"
@Lt_080C = private constant [28 x i8] c"    return length(p-c) - r;\00"
@Lt_080D = private constant [41 x i8] c"vec2 udSegment( vec3 p, vec3 a, vec3 b )\00"
@Lt_080E = private constant [40 x i8] c"\09return vec2( length( pa - ba*h ), h );\00"
@Lt_080F = private constant [56 x i8] c"float det( vec2 a, vec2 b ) { return a.x*b.y-b.x*a.y; }\00"
@Lt_0810 = private constant [46 x i8] c"vec3 getClosest( vec2 b0, vec2 b1, vec2 b2 ) \00"
@Lt_0811 = private constant [30 x i8] c"    float a =     det(b0,b2);\00"
@Lt_0812 = private constant [30 x i8] c"    float b = 2.0*det(b1,b0);\00"
@Lt_0813 = private constant [30 x i8] c"    float d = 2.0*det(b2,b1);\00"
@Lt_0814 = private constant [25 x i8] c"    float f = b*d - a*a;\00"
@Lt_0815 = private constant [23 x i8] c"    vec2  d21 = b2-b1;\00"
@Lt_0816 = private constant [23 x i8] c"    vec2  d10 = b1-b0;\00"
@Lt_0817 = private constant [23 x i8] c"    vec2  d20 = b2-b0;\00"
@Lt_0818 = private constant [63 x i8] c"    vec2  gf = 2.0*(b*d21+d*d10+a*d20); gf = vec2(gf.y,-gf.x);\00"
@Lt_0819 = private constant [33 x i8] c"    vec2  pp = -f*gf/dot(gf,gf);\00"
@Lt_081A = private constant [23 x i8] c"    vec2  d0p = b0-pp;\00"
@Lt_081B = private constant [29 x i8] c"    float ap = det(d0p,d20);\00"
@Lt_081C = private constant [33 x i8] c"    float bp = 2.0*det(d10,d0p);\00"
@Lt_081D = private constant [54 x i8] c"    float t = clamp( (ap+bp)/(2.0*a+b+d), 0.0 ,1.0 );\00"
@Lt_081E = private constant [57 x i8] c"    return vec3( mix(mix(b0,b1,t), mix(b1,b2,t),t), t );\00"
@Lt_081F = private constant [48 x i8] c"vec4 sdBezier( vec3 a, vec3 b, vec3 c, vec3 p )\00"
@Lt_0820 = private constant [42 x i8] c"\09vec3 w = normalize( cross( c-b, a-b ) );\00"
@Lt_0821 = private constant [28 x i8] c"\09vec3 u = normalize( c-b );\00"
@Lt_0822 = private constant [38 x i8] c"\09vec3 v =          ( cross( w, u ) );\00"
@Lt_0823 = private constant [43 x i8] c"\09vec2 a2 = vec2( dot(a-b,u), dot(a-b,v) );\00"
@Lt_0824 = private constant [24 x i8] c"\09vec2 b2 = vec2( 0.0 );\00"
@Lt_0825 = private constant [43 x i8] c"\09vec2 c2 = vec2( dot(c-b,u), dot(c-b,v) );\00"
@Lt_0826 = private constant [55 x i8] c"\09vec3 p3 = vec3( dot(p-b,u), dot(p-b,v), dot(p-b,w) );\00"
@Lt_0827 = private constant [55 x i8] c"\09vec3 cp = getClosest( a2-p3.xy, b2-p3.xy, c2-p3.xy );\00"
@Lt_0828 = private constant [77 x i8] c"\09return vec4( sqrt(dot(cp.xy,cp.xy)+p3.z*p3.z), cp.z, length(cp.xy), p3.z );\00"
@Lt_0829 = private constant [37 x i8] c"vec3 smax( vec3 a, vec3 b, float k )\00"
@Lt_082A = private constant [48 x i8] c"\09vec3 h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\00"
@Lt_082B = private constant [38 x i8] c"\09return mix( a, b, h ) + k*h*(1.0-h);\00"
@Lt_082C = private constant [78 x i8] c"//---------------------------------------------------------------------------\00"
@Lt_082D = private constant [23 x i8] c"float hash1( float n )\00"
@Lt_082E = private constant [40 x i8] c"    return fract(sin(n)*43758.5453123);\00"
@Lt_082F = private constant [22 x i8] c"vec3 hash3( float n )\00"
@Lt_0830 = private constant [58 x i8] c"    return fract(sin(n+vec3(0.0,13.1,31.3))*158.5453123);\00"
@Lt_0831 = private constant [35 x i8] c"vec3 forwardSF( float i, float n) \00"
@Lt_0832 = private constant [30 x i8] c"    const float PHI = PI*0.5;\00"
@Lt_0833 = private constant [37 x i8] c"    float phi = 2.0*PI*fract(i/PHI);\00"
@Lt_0834 = private constant [36 x i8] c"    float zi = 1.0 - (2.0*i+1.0)/n;\00"
@Lt_0835 = private constant [41 x i8] c"    float sinTheta = sqrt( 1.0 - zi*zi);\00"
@Lt_0836 = private constant [60 x i8] c"    return vec3( cos(phi)*sinTheta, sin(phi)*sinTheta, zi);\00"
@Lt_0837 = private constant [25 x i8] c"vec3 map3(in vec3 pos) {\00"
@Lt_0838 = private constant [79 x i8] c"    vec3 res =  vec3(sdBox(pos-vec3(0,0.29,0), vec3(0.5)),ID_GLASS_WALL, ETA);\00"
@Lt_0839 = private constant [23 x i8] c"    res.x =abs(res.x);\00"
@Lt_083A = private constant [79 x i8] c"    res = opU(res, vec3(sdSphere(pos-vec3(0,0.8,0),0.4),ID_GLASS_WALL, ETA)); \00"
@Lt_083B = private constant [13 x i8] c"\09return res;\00"
@Lt_083C = private constant [25 x i8] c"vec3 map4(in vec3 pos) {\00"
@Lt_083D = private constant [25 x i8] c"vec3 map2(in vec3 pos) {\00"
@Lt_083E = private constant [95 x i8] c"   vec3 res =  vec3((sdCappedCylinder(pos-vec3(0,0.4,0), vec2(0.8,0.5))), ID_GLASS_WALL, ETA);\00"
@Lt_083F = private constant [79 x i8] c"    res = opS(res, vec3(sdSphere(pos-vec3(0,0.8,0),0.4),ID_GLASS_WALL, ETA)); \00"
@Lt_0840 = private constant [14 x i8] c" \09return res;\00"
@Lt_0841 = private constant [25 x i8] c"vec3 map1(in vec3 pos) {\00"
@Lt_0842 = private constant [24 x i8] c"vec3 map(in vec3 pos) {\00"
@Lt_0843 = private constant [53 x i8] c"    vec3 plane = vec3(sdPlane(pos), ID_FLOOR, -1. );\00"
@Lt_0844 = private constant [22 x i8] c"    vec3 res = plane;\00"
@Lt_0845 = private constant [31 x i8] c"#ifdef OBJECT_MAP_FUNCTION    \00"
@Lt_0846 = private constant [46 x i8] c"\09res =opU(res, OBJECT_MAP_FUNCTION(pos));    \00"
@Lt_0847 = private constant [34 x i8] c"    float t = mod(iTime*0.1, 4.);\00"
@Lt_0848 = private constant [18 x i8] c"    if (t < 1.) {\00"
@Lt_0849 = private constant [32 x i8] c"    \09res = opU(res, map1(pos));\00"
@Lt_084A = private constant [23 x i8] c"    } else if (t<2.) {\00"
@Lt_084B = private constant [35 x i8] c"       \09res = opU(res, map2(pos));\00"
@Lt_084C = private constant [23 x i8] c"    } else if (t<3.) {\00"
@Lt_084D = private constant [35 x i8] c"        res = opU(res, map3(pos));\00"
@Lt_084E = private constant [23 x i8] c"    } else if (t<4.) {\00"
@Lt_084F = private constant [35 x i8] c"        res = opU(res, map4(pos));\00"
@Lt_0850 = private constant [6 x i8] c"    }\00"
@Lt_0851 = private constant [16 x i8] c"    return res;\00"
@Lt_0852 = private constant [37 x i8] c"vec4 map( in vec3 pos, float atime )\00"
@Lt_0853 = private constant [16 x i8] c"    hsha = 1.0;\00"
@Lt_0854 = private constant [29 x i8] c"    float t1 = fract(atime);\00"
@Lt_0855 = private constant [46 x i8] c"    float t4 = abs(fract(atime*0.5)-0.5)/0.5;\00"
@Lt_0856 = private constant [31 x i8] c"    float p = 4.0*t1*(1.0-t1);\00"
@Lt_0857 = private constant [52 x i8] c"    float pp = 4.0*(1.0-2.0*t1); // derivative of p\00"
@Lt_0858 = private constant [42 x i8] c"    vec3 cen = vec3( 0.5*(-1.0 + 2.0*t4),\00"
@Lt_0859 = private constant [41 x i8] c"                     pow(p,2.0-p) + 0.1,\00"
@Lt_085A = private constant [56 x i8] c"                     floor(atime) + pow(t1,0.7) -1.0 );\00"
@Lt_085B = private constant [12 x i8] c"    // body\00"
@Lt_085C = private constant [43 x i8] c"    vec2 uu = normalize(vec2( 1.0, -pp ));\00"
@Lt_085D = private constant [33 x i8] c"    vec2 vv = vec2(-uu.y, uu.x);\00"
@Lt_085E = private constant [28 x i8] c"    float sy = 0.5 + 0.5*p;\00"
@Lt_085F = private constant [48 x i8] c"    float compress = 1.0-smoothstep(0.0,0.4,p);\00"
@Lt_0860 = private constant [39 x i8] c"    sy = sy*(1.0-compress) + compress;\00"
@Lt_0861 = private constant [23 x i8] c"    float sz = 1.0/sy;\00"
@Lt_0862 = private constant [24 x i8] c"    vec3 q = pos - cen;\00"
@Lt_0863 = private constant [39 x i8] c"    float rot = -0.25*(-1.0 + 2.0*t4);\00"
@Lt_0864 = private constant [25 x i8] c"    float rc = cos(rot);\00"
@Lt_0865 = private constant [25 x i8] c"    float rs = sin(rot);\00"
@Lt_0866 = private constant [38 x i8] c"    q.xy = mat2x2(rc,rs,-rs,rc)*q.xy;\00"
@Lt_0867 = private constant [16 x i8] c"    vec3 r = q;\00"
@Lt_0868 = private constant [13 x i8] c"\09href = q.y;\00"
@Lt_0869 = private constant [47 x i8] c"    q.yz = vec2( dot(uu,q.yz), dot(vv,q.yz) );\00"
@Lt_086A = private constant [86 x i8] c"    vec4 res = vec4( sdEllipsoid( q, vec3(0.25, 0.25*sy, 0.25*sz) ), 2.0, 0.0, 1.0 );\00"
@Lt_086B = private constant [47 x i8] c"    if( res.x-1.0 < pos.y ) // bounding volume\00"
@Lt_086C = private constant [33 x i8] c"    float t2 = fract(atime+0.8);\00"
@Lt_086D = private constant [39 x i8] c"    float p2 = 0.5-0.5*cos(6.2831*t2);\00"
@Lt_086E = private constant [24 x i8] c"    r.z += 0.05-0.2*p2;\00"
@Lt_086F = private constant [23 x i8] c"    r.y += 0.2*sy-0.2;\00"
@Lt_0870 = private constant [38 x i8] c"    vec3 sq = vec3( abs(r.x), r.yz );\00"
@Lt_0871 = private constant [9 x i8] c"\09// head\00"
@Lt_0872 = private constant [16 x i8] c"    vec3 h = r;\00"
@Lt_0873 = private constant [33 x i8] c"    float hr = sin(0.791*atime);\00"
@Lt_0874 = private constant [51 x i8] c"    hr = 0.7*sign(hr)*smoothstep(0.5,0.7,abs(hr));\00"
@Lt_0875 = private constant [58 x i8] c"    h.xz = mat2x2(cos(hr),sin(hr),-sin(hr),cos(hr))*h.xz;\00"
@Lt_0876 = private constant [38 x i8] c"    vec3 hq = vec3( abs(h.x), h.yz );\00"
@Lt_0877 = private constant [74 x i8] c"   \09float d  = sdEllipsoid( h-vec3(0.0,0.20,0.02), vec3(0.08,0.2,0.15) );\00"
@Lt_0878 = private constant [71 x i8] c"\09float d2 = sdEllipsoid( h-vec3(0.0,0.21,-0.1), vec3(0.20,0.2,0.20) );\00"
@Lt_0879 = private constant [25 x i8] c"\09d = smin( d, d2, 0.1 );\00"
@Lt_087A = private constant [35 x i8] c"    res.x = smin( res.x, d, 0.1 );\00"
@Lt_087B = private constant [22 x i8] c"    // belly wrinkles\00"
@Lt_087C = private constant [6 x i8] c"    {\00"
@Lt_087D = private constant [37 x i8] c"    float yy = r.y-0.02-2.5*r.x*r.x;\00"
@Lt_087E = private constant [68 x i8] c"    res.x += 0.001*sin(yy*120.0)*(1.0-smoothstep(0.0,0.1,abs(yy)));\00"
@Lt_087F = private constant [12 x i8] c"    // arms\00"
@Lt_0880 = private constant [119 x i8] c"    vec2 arms = sdStick( sq, vec3(0.18-0.06*hr*sign(r.x),0.2,-0.05), vec3(0.3+0.1*p2,-0.2+0.3*p2,-0.15), 0.03, 0.06 );\00"
@Lt_0881 = private constant [85 x i8] c"    res.xz = smin( res.xz, arms, 0.01+0.04*(1.0-arms.y)*(1.0-arms.y)*(1.0-arms.y) );\00"
@Lt_0882 = private constant [12 x i8] c"    // ears\00"
@Lt_0883 = private constant [33 x i8] c"    float t3 = fract(atime+0.9);\00"
@Lt_0884 = private constant [32 x i8] c"    float p3 = 4.0*t3*(1.0-t3);\00"
@Lt_0885 = private constant [101 x i8] c"    vec2 ear = sdStick( hq, vec3(0.15,0.32,-0.05), vec3(0.2+0.05*p3,0.2+0.2*p3,-0.07), 0.01, 0.04 );\00"
@Lt_0886 = private constant [40 x i8] c"    res.xz = smin( res.xz, ear, 0.01 );\00"
@Lt_0887 = private constant [13 x i8] c"    // mouth\00"
@Lt_0888 = private constant [80 x i8] c"   \09d = sdEllipsoid( h-vec3(0.0,0.15+4.0*hq.x*hq.x,0.15), vec3(0.1,0.04,0.2) );\00"
@Lt_0889 = private constant [45 x i8] c"    res.w = 0.3+0.7*clamp( d*150.0,0.0,1.0);\00"
@Lt_088A = private constant [37 x i8] c"    res.x = smax( res.x, -d, 0.03 );\00"
@Lt_088B = private constant [9 x i8] c"\09// legs\00"
@Lt_088C = private constant [45 x i8] c"    float t6 = cos(6.2831*(atime*0.5+0.25));\00"
@Lt_088D = private constant [40 x i8] c"    float ccc = cos(1.57*t6*sign(r.x));\00"
@Lt_088E = private constant [40 x i8] c"    float sss = sin(1.57*t6*sign(r.x));\00"
@Lt_088F = private constant [54 x i8] c"\09vec3 base = vec3(0.12,-0.07,-0.1); base.y -= 0.1/sy;\00"
@Lt_0890 = private constant [80 x i8] c"    vec2 legs = sdStick( sq, base, base + vec3(0.2,-ccc,sss)*0.2, 0.04, 0.07 );\00"
@Lt_0891 = private constant [41 x i8] c"    res.xz = smin( res.xz, legs, 0.07 );\00"
@Lt_0892 = private constant [11 x i8] c"    // eye\00"
@Lt_0893 = private constant [52 x i8] c"    float blink = pow(0.5+0.5*sin(2.1*iTime),20.0);\00"
@Lt_0894 = private constant [72 x i8] c"    float eyeball = sdSphere(hq-vec3(0.08,0.27,0.06),0.065+0.02*blink);\00"
@Lt_0895 = private constant [42 x i8] c"    res.x = smin( res.x, eyeball, 0.03 );\00"
@Lt_0896 = private constant [38 x i8] c"    vec3 cq = hq-vec3(0.1,0.34,0.08);\00"
@Lt_0897 = private constant [44 x i8] c"    cq.xy = mat2x2(0.8,0.6,-0.6,0.8)*cq.xy;\00"
@Lt_0898 = private constant [49 x i8] c"    d = sdEllipsoid( cq, vec3(0.06,0.03,0.03) );\00"
@Lt_0899 = private constant [36 x i8] c"    res.x = smin( res.x, d, 0.03 );\00"
@Lt_089A = private constant [94 x i8] c"    float eo = 1.0-0.5*smoothstep(0.01,0.04,length((hq.xy-vec2(0.095,0.285))*vec2(1.0,1.1)));\00"
@Lt_089B = private constant [79 x i8] c"    res = opU( res, vec4(sdSphere(hq-vec3(0.08,0.28,0.08),0.060),3.0,0.0,eo));\00"
@Lt_089C = private constant [83 x i8] c"    res = opU( res, vec4(sdSphere(hq-vec3(0.075,0.28,0.102),0.0395),4.0,0.0,1.0));\00"
@Lt_089D = private constant [3 x i8] c"\09}\00"
@Lt_089E = private constant [14 x i8] c"    // ground\00"
@Lt_089F = private constant [60 x i8] c"    float fh = -0.1 - 0.05*(sin(pos.x*2.0)+sin(pos.z*2.0));\00"
@Lt_08A0 = private constant [34 x i8] c"    float t5 = fract(atime+0.05);\00"
@Lt_08A1 = private constant [37 x i8] c"    float k = length(pos.xz-cen.xz);\00"
@Lt_08A2 = private constant [39 x i8] c"    float tt = t5*15.0-6.2831 - k*3.0;\00"
@Lt_08A3 = private constant [79 x i8] c"    fh -= 0.1*exp(-k*k)*sin(tt)*exp(-max(tt,0.0)/2.0)*smoothstep(0.0,0.01,t5);\00"
@Lt_08A4 = private constant [26 x i8] c"    float d = pos.y - fh;\00"
@Lt_08A5 = private constant [15 x i8] c"    // bubbles\00"
@Lt_08A6 = private constant [75 x i8] c"    vec3 vp = vec3( mod(abs(pos.x),3.0)-1.5,pos.y,mod(pos.z+1.5,3.0)-1.5);\00"
@Lt_08A7 = private constant [64 x i8] c"    vec2 id = vec2( floor(pos.x/3.0), floor((pos.z+1.5)/3.0) );\00"
@Lt_08A8 = private constant [39 x i8] c"    float fid = id.x*11.1 + id.y*31.7;\00"
@Lt_08A9 = private constant [43 x i8] c"    float fy = fract(fid*1.312+atime*0.1);\00"
@Lt_08AA = private constant [27 x i8] c"    float y = -1.0+4.0*fy;\00"
@Lt_08AB = private constant [48 x i8] c"    vec3  rad = vec3(0.7,1.0+0.5*sin(fid),0.7);\00"
@Lt_08AC = private constant [67 x i8] c"    rad -= 0.1*(sin(pos.x*3.0)+sin(pos.y*4.0)+sin(pos.z*5.0));    \00"
@Lt_08AD = private constant [33 x i8] c"    float siz = 4.0*fy*(1.0-fy);\00"
@Lt_08AE = private constant [59 x i8] c"    float d2 = sdEllipsoid( vp-vec3(0.5,y,0.0), siz*rad );\00"
@Lt_08AF = private constant [85 x i8] c"    d2 -= 0.03*smoothstep(-1.0,1.0,sin(18.0*pos.x)+sin(18.0*pos.y)+sin(18.0*pos.z));\00"
@Lt_08B0 = private constant [15 x i8] c"    d2 *= 0.6;\00"
@Lt_08B1 = private constant [22 x i8] c"    d2 = min(d2,2.0);\00"
@Lt_08B2 = private constant [29 x i8] c"    d = smin( d, d2, 0.32 );\00"
@Lt_08B3 = private constant [65 x i8] c"    if( d<res.x ) { res = vec4(d,1.0,0.0,1.0); hsha=sqrt(siz); }\00"
@Lt_08B4 = private constant [13 x i8] c"    // candy\00"
@Lt_08B5 = private constant [20 x i8] c"    float fs = 5.0;\00"
@Lt_08B6 = private constant [49 x i8] c"    vec3 qos = fs*vec3(pos.x, pos.y-fh, pos.z );\00"
@Lt_08B7 = private constant [58 x i8] c"    vec2 id = vec2( floor(qos.x+0.5), floor(qos.z+0.5) );\00"
@Lt_08B8 = private constant [70 x i8] c"    vec3 vp = vec3( fract(qos.x+0.5)-0.5,qos.y,fract(qos.z+0.5)-0.5);\00"
@Lt_08B9 = private constant [69 x i8] c"    vp.xz += 0.1*cos( id.x*130.143 + id.y*120.372 + vec2(0.0,2.0) );\00"
@Lt_08BA = private constant [61 x i8] c"    float den = sin(id.x*0.1+sin(id.y*0.091))+sin(id.y*0.1);\00"
@Lt_08BB = private constant [41 x i8] c"    float fid = id.x*0.143 + id.y*0.372;\00"
@Lt_08BC = private constant [60 x i8] c"    float ra = smoothstep(0.0,0.1,den*0.1+fract(fid)-0.95);\00"
@Lt_08BD = private constant [36 x i8] c"    d = sdSphere( vp, 0.35*ra )/fs;\00"
@Lt_08BE = private constant [47 x i8] c"    if( d<res.x ) res = vec4(d,5.0,qos.y,1.0);\00"
@Lt_08BF = private constant [50 x i8] c"vec2 iBox( in vec3 ro, in vec3 rd, in vec3 rad ) \00"
@Lt_08C0 = private constant [21 x i8] c"    vec3 m = 1.0/rd;\00"
@Lt_08C1 = private constant [19 x i8] c"    vec3 n = m*ro;\00"
@Lt_08C2 = private constant [25 x i8] c"    vec3 k = abs(m)*rad;\00"
@Lt_08C3 = private constant [22 x i8] c"    vec3 t1 = -n - k;\00"
@Lt_08C4 = private constant [22 x i8] c"    vec3 t2 = -n + k;\00"
@Lt_08C5 = private constant [46 x i8] c"\09return vec2( max( max( t1.x, t1.y ), t1.z ),\00"
@Lt_08C6 = private constant [48 x i8] c"\09             min( min( t2.x, t2.y ), t2.z ) );\00"
@Lt_08C7 = private constant [47 x i8] c"float mapShell( in vec3 p, out vec4 matInfo ) \00"
@Lt_08C8 = private constant [30 x i8] c"    const float sc = 1.0/1.0;\00"
@Lt_08C9 = private constant [36 x i8] c"    p -= vec3(0.05,0.12,-0.09);    \00"
@Lt_08CA = private constant [13 x i8] c"    p *= sc;\00"
@Lt_08CB = private constant [62 x i8] c"    vec3 q = mat3(-0.6333234236, -0.7332753384, 0.2474039592,\00"
@Lt_08CC = private constant [62 x i8] c"                   0.7738444477, -0.6034162289, 0.1924931824,\00"
@Lt_08CD = private constant [67 x i8] c"                   0.0081370606,  0.3133626215, 0.9495986813) * p;\00"
@Lt_08CE = private constant [28 x i8] c"    const float b = 0.1759;\00"
@Lt_08CF = private constant [30 x i8] c"    float r = length( q.xy );\00"
@Lt_08D0 = private constant [32 x i8] c"    float t = atan( q.y, q.x );\00"
@Lt_08D1 = private constant [2 x i8] c" \00"
@Lt_08D2 = private constant [86 x i8] c"    // https://swiftcoder.wordpress.com/2010/06/21/logarithmic-spiral-distance-field/\00"
@Lt_08D3 = private constant [39 x i8] c"    float n = (log(r)/b - t)/(2.0*pi);\00"
@Lt_08D4 = private constant [27 x i8] c"    const float th = 0.11;\00"
@Lt_08D5 = private constant [39 x i8] c"    float nm = (log(th)/b-t)/(2.0*pi);\00"
@Lt_08D6 = private constant [19 x i8] c"    n = min(n,nm);\00"
@Lt_08D7 = private constant [27 x i8] c"    float ni = floor( n );\00"
@Lt_08D8 = private constant [42 x i8] c"    float r1 = exp( b * (t + 2.0*pi*ni));\00"
@Lt_08D9 = private constant [30 x i8] c"    float r2 = r1 * 3.019863;\00"
@Lt_08DA = private constant [14 x i8] c"    //-------\00"
@Lt_08DB = private constant [78 x i8] c"    float h1 = q.z + 1.5*r1 - 0.5; float d1 = sqrt((r1-r)*(r1-r)+h1*h1) - r1;\00"
@Lt_08DC = private constant [78 x i8] c"    float h2 = q.z + 1.5*r2 - 0.5; float d2 = sqrt((r2-r)*(r2-r)+h2*h2) - r2;\00"
@Lt_08DD = private constant [21 x i8] c"    float d, dx, dy;\00"
@Lt_08DE = private constant [44 x i8] c"    if( d1<d2 ) { d = d1; dx=r1-r; dy=h1; }\00"
@Lt_08DF = private constant [44 x i8] c"    else        { d = d2; dx=r2-r; dy=h2; }\00"
@Lt_08E0 = private constant [61 x i8] c"    float di = textureLod( iChannel2, vec2(t+r,0.5), 0. ).x;\00"
@Lt_08E1 = private constant [19 x i8] c"    d += 0.002*di;\00"
@Lt_08E2 = private constant [43 x i8] c"    matInfo = vec4(dx,dy,r/0.4,t/3.14159);\00"
@Lt_08E3 = private constant [16 x i8] c"    vec3 s = q;\00"
@Lt_08E4 = private constant [34 x i8] c"    q = q - vec3(0.34,-0.1,0.03);\00"
@Lt_08E5 = private constant [40 x i8] c"    q.xy = mat2(0.8,0.6,-0.6,0.8)*q.xy;\00"
@Lt_08E6 = private constant [55 x i8] c"    d = smin( d, sdTorus( q, vec2(0.28,0.05) ), 0.06);\00"
@Lt_08E7 = private constant [82 x i8] c"    d = smax( d, -sdEllipsoid(q,vec3(0.0,0.0,0.0),vec3(0.24,0.36,0.24) ), 0.03 );\00"
@Lt_08E8 = private constant [83 x i8] c"    d = smax( d, -sdEllipsoid(s,vec3(0.52,-0.0,0.0),vec3(0.42,0.23,0.5) ), 0.05 );\00"
@Lt_08E9 = private constant [17 x i8] c"    return d/sc;\00"
@Lt_08EA = private constant [42 x i8] c"vec2 mapSnail( vec3 p, out vec4 matInfo )\00"
@Lt_08EB = private constant [38 x i8] c"    vec3 head = vec3(-0.76,0.6,-0.3);\00"
@Lt_08EC = private constant [23 x i8] c"    vec3 q = p - head;\00"
@Lt_08ED = private constant [6 x i8] c"#if 1\00"
@Lt_08EE = private constant [102 x i8] c"    vec4 b1 = sdBezier( vec3(-0.13,-0.65,0.0), vec3(0.24,0.9+0.1,0.0), head+vec3(0.04,0.01,0.0), p );\00"
@Lt_08EF = private constant [21 x i8] c"    float d1 = b1.x;\00"
@Lt_08F0 = private constant [75 x i8] c"    d1 -= smoothstep(0.0,0.2,b1.y)*(0.16 - 0.07*smoothstep(0.5,1.0,b1.y));\00"
@Lt_08F1 = private constant [98 x i8] c"    b1 = sdBezier( vec3(-0.085,0.0,0.0), vec3(-0.1,0.9-0.05,0.0), head+vec3(0.06,-0.08,0.0), p );\00"
@Lt_08F2 = private constant [21 x i8] c"    float d2 = b1.x;\00"
@Lt_08F3 = private constant [27 x i8] c"    d2 -= 0.1 - 0.06*b1.y;\00"
@Lt_08F4 = private constant [31 x i8] c"    d1 = smin( d1, d2, 0.03 );\00"
@Lt_08F5 = private constant [26 x i8] c"    matInfo.xyz = b1.yzw;\00"
@Lt_08F6 = private constant [108 x i8] c"    vec4 b1 = sdBezier( vec3(-0.13,-0.65,0.0), vec3(0.24,0.9+0.11,0.0), head+vec3(0.05,0.01-0.02,0.0), p );\00"
@Lt_08F7 = private constant [80 x i8] c"    d1 -= smoothstep(0.0,0.2,b1.y)*(0.16 - 0.75*0.07*smoothstep(0.5,1.0,b1.y));\00"
@Lt_08F8 = private constant [14 x i8] c"    float d2;\00"
@Lt_08F9 = private constant [51 x i8] c"    d2 = sdSphere( q, vec4(0.0,-0.06,0.0,0.085) );\00"
@Lt_08FA = private constant [65 x i8] c"    d1 = smin( d1, sdSphere(p,vec4(0.05,0.52,0.0,0.13)), 0.07 );\00"
@Lt_08FB = private constant [40 x i8] c"    q.xz = mat2(0.8,0.6,-0.6,0.8)*q.xz;\00"
@Lt_08FC = private constant [38 x i8] c"    vec3 sq = vec3( q.xy, abs(q.z) );\00"
@Lt_08FD = private constant [19 x i8] c"    // top antenas\00"
@Lt_08FE = private constant [84 x i8] c"    vec3 af = 0.05*sin(0.5*iTime+vec3(0.0,1.0,3.0) + vec3(2.0,1.0,0.0)*sign(q.z) );\00"
@Lt_08FF = private constant [84 x i8] c"    vec4 b2 = sdBezier( vec3(0.0), vec3(-0.1,0.2,0.2), vec3(-0.3,0.2,0.3)+af, sq );\00"
@Lt_0900 = private constant [21 x i8] c"    float d3 = b2.x;\00"
@Lt_0901 = private constant [29 x i8] c"    d3 -= 0.03 - 0.025*b2.y;\00"
@Lt_0902 = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.04 );\00"
@Lt_0903 = private constant [66 x i8] c"    d3 = sdSphere( sq, vec4(-0.3,0.2,0.3,0.016) + vec4(af,0.0) );\00"
@Lt_0904 = private constant [35 x i8] c"    d1 = smin( d1, d3, 0.01 );    \00"
@Lt_0905 = private constant [22 x i8] c"    // bottom antenas\00"
@Lt_0906 = private constant [84 x i8] c"    vec3 bf = 0.02*sin(0.3*iTime+vec3(4.0,1.0,2.0) + vec3(3.0,0.0,1.0)*sign(q.z) );\00"
@Lt_0907 = private constant [79 x i8] c"    vec2 b3 = udSegment( sq, vec3(0.06,-0.05,0.0), vec3(-0.04,-0.2,0.18)+bf );\00"
@Lt_0908 = private constant [15 x i8] c"    d3 = b3.x;\00"
@Lt_0909 = private constant [29 x i8] c"    d3 -= 0.025 - 0.02*b3.y;\00"
@Lt_090A = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.06 );\00"
@Lt_090B = private constant [67 x i8] c"    d3 = sdSphere( sq, vec4(-0.04,-0.2,0.18,0.008)+vec4(bf,0.0) );\00"
@Lt_090C = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.02 );\00"
@Lt_090D = private constant [14 x i8] c"    // bottom\00"
@Lt_090E = private constant [38 x i8] c"    vec3 pp = p-vec3(-0.17,0.15,0.0);\00"
@Lt_090F = private constant [28 x i8] c"    float co = 0.988771078;\00"
@Lt_0910 = private constant [28 x i8] c"    float si = 0.149438132;\00"
@Lt_0911 = private constant [38 x i8] c"    pp.xy = mat2(co,-si,si,co)*pp.xy;\00"
@Lt_0912 = private constant [87 x i8] c"    d1 = smin( d1, sdEllipsoid( pp, vec3(0.0,0.0,0.0), vec3(0.084,0.3,0.15) ), 0.05 );\00"
@Lt_0913 = private constant [90 x i8] c"    d1 = smax( d1, -sdEllipsoid( pp, vec3(-0.08,-0.0,0.0), vec3(0.06,0.55,0.1) ), 0.02 );\00"
@Lt_0914 = private constant [12 x i8] c"    // disp\00"
@Lt_0915 = private constant [57 x i8] c"    float dis = textureLod( iChannel1, 5.0*p.xy, 0. ).x;\00"
@Lt_0916 = private constant [57 x i8] c"    float dx = 0.5 + 0.5*(1.0-smoothstep(0.5,1.0,b1.y));\00"
@Lt_0917 = private constant [28 x i8] c"    d1 -= 0.005*dis*dx*0.5;\00"
@Lt_0918 = private constant [25 x i8] c"    return vec2(d1,1.0);\00"
@Lt_0919 = private constant [27 x i8] c"float mapDrop( in vec3 p )\00"
@Lt_091A = private constant [33 x i8] c"    p -= vec3(-0.26,0.25,-0.02);\00"
@Lt_091B = private constant [24 x i8] c"    p.x -= 2.5*p.y*p.y;\00"
@Lt_091C = private constant [77 x i8] c"    return sdCapsule( p, vec3(0.0,-0.06,0.0), vec3(0.014,0.06,0.0), 0.037 );\00"
@Lt_091D = private constant [27 x i8] c"float mapLeaf( in vec3 p )\00"
@Lt_091E = private constant [31 x i8] c"    p -= vec3(-1.8,0.6,-0.75);\00"
@Lt_091F = private constant [44 x i8] c"    p = mat3(0.671212, 0.366685, -0.644218,\00"
@Lt_0920 = private constant [44 x i8] c"            -0.479426, 0.877583,  0.000000,\00"
@Lt_0921 = private constant [47 x i8] c"             0.565354, 0.308854,  0.764842)*p;\00"
@Lt_0922 = private constant [36 x i8] c"    p.y += 0.2*exp(-abs(2.0*p.z) );\00"
@Lt_0923 = private constant [86 x i8] c"    float ph = 0.25*50.0*p.x - 0.25*75.0*abs(p.z);// + 1.0*sin(5.0*p.x)*sin(5.0*p.z);\00"
@Lt_0924 = private constant [26 x i8] c"    float rr = sin( ph );\00"
@Lt_0925 = private constant [20 x i8] c"    rr = rr*rr;    \00"
@Lt_0926 = private constant [21 x i8] c"    p.y += 0.005*rr;\00"
@Lt_0927 = private constant [44 x i8] c"    float r = clamp((p.x+2.0)/4.0,0.0,1.0);\00"
@Lt_0928 = private constant [40 x i8] c"    r = 0.0001 + r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_0929 = private constant [24 x i8] c"    rr = sin( ph*2.0 );\00"
@Lt_092A = private constant [35 x i8] c"    rr *= 0.5+0.5*sin( p.x*12.0 );\00"
@Lt_092B = private constant [25 x i8] c"    float ri = 0.035*rr;\00"
@Lt_092C = private constant [66 x i8] c"    float d = sdEllipsoid( p, vec3(0.0), vec3(2.0,0.25*r,r+ri) );\00"
@Lt_092D = private constant [25 x i8] c"    float d2 = p.y-0.02;\00"
@Lt_092E = private constant [30 x i8] c"    d = smax( d, -d2, 0.02 );\00"
@Lt_092F = private constant [43 x i8] c"vec2 mapOpaque( vec3 p, out vec4 matInfo )\00"
@Lt_0930 = private constant [25 x i8] c"    matInfo = vec4(0.0);\00"
@Lt_0931 = private constant [21 x i8] c"   \09//--------------\00"
@Lt_0932 = private constant [39 x i8] c"    vec2 res = mapSnail( p, matInfo );\00"
@Lt_0933 = private constant [22 x i8] c"    //---------------\00"
@Lt_0934 = private constant [21 x i8] c"    vec4 tmpMatInfo;\00"
@Lt_0935 = private constant [46 x i8] c"    float d4 = mapShell( p, tmpMatInfo );    \00"
@Lt_0936 = private constant [66 x i8] c"    if( d4<res.x  ) { res = vec2(d4,2.0); matInfo = tmpMatInfo; }\00"
@Lt_0937 = private constant [13 x i8] c"    // plant\00"
@Lt_0938 = private constant [91 x i8] c"    vec4 b3 = sdBezier( vec3(-0.15,-1.5,0.0), vec3(-0.1,0.5,0.0), vec3(-0.6,1.5,0.0), p );\00"
@Lt_0939 = private constant [15 x i8] c"    d4 = b3.x;\00"
@Lt_093A = private constant [28 x i8] c"    d4 -= 0.04 - 0.02*b3.y;\00"
@Lt_093B = private constant [44 x i8] c"    if( d4<res.x  ) { res = vec2(d4,3.0); }\00"
@Lt_093C = private constant [32 x i8] c"\09//----------------------------\00"
@Lt_093D = private constant [29 x i8] c"    float d5 = mapLeaf( p );\00"
@Lt_093E = private constant [39 x i8] c"    if( d5<res.x ) res = vec2(d5,4.0);\00"
@Lt_093F = private constant [51 x i8] c"vec3 calcNormalOpaque( in vec3 pos, in float eps )\00"
@Lt_0940 = private constant [13 x i8] c"    vec4 kk;\00"
@Lt_0941 = private constant [40 x i8] c"    vec2 e = vec2(1.0,-1.0)*0.5773*eps;\00"
@Lt_0942 = private constant [62 x i8] c"    return normalize( e.xyy*mapOpaque( pos + e.xyy, kk ).x + \00"
@Lt_0943 = private constant [47 x i8] c"\09\09\09\09\09  e.yyx*mapOpaque( pos + e.yyx, kk ).x + \00"
@Lt_0944 = private constant [47 x i8] c"\09\09\09\09\09  e.yxy*mapOpaque( pos + e.yxy, kk ).x + \00"
@Lt_0945 = private constant [47 x i8] c"\09\09\09\09\09  e.xxx*mapOpaque( pos + e.xxx, kk ).x );\00"
@Lt_0946 = private constant [85 x i8] c"    // inspired by klems - a way to prevent the compiler from inlining map() 4 times\00"
@Lt_0947 = private constant [24 x i8] c"    vec3 n = vec3(0.0);\00"
@Lt_0948 = private constant [32 x i8] c"    for( int i=ZERO; i<4; i++ )\00"
@Lt_0949 = private constant [73 x i8] c"        vec3 e = 0.5773*(2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);\00"
@Lt_094A = private constant [42 x i8] c"        n += e*mapOpaque(pos+eps*e,kk).x;\00"
@Lt_094B = private constant [25 x i8] c"    return normalize(n);\00"
@Lt_094C = private constant [11 x i8] c"#endif    \00"
@Lt_094D = private constant [76 x i8] c"//=========================================================================\00"
@Lt_094E = private constant [37 x i8] c"float mapLeafWaterDrops( in vec3 p )\00"
@Lt_094F = private constant [16 x i8] c"    vec3 s = p;\00"
@Lt_0950 = private constant [3 x i8] c"  \00"
@Lt_0951 = private constant [16 x i8] c"    vec3 q = p;\00"
@Lt_0952 = private constant [31 x i8] c"    r = r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_0953 = private constant [64 x i8] c"    float d0 = sdEllipsoid( p, vec3(0.0), vec3(2.0,0.25*r,r) );\00"
@Lt_0954 = private constant [78 x i8] c"    float d1 = sdEllipsoid( q, vec3(0.5,0.0,0.2), 1.0*vec3(0.15,0.13,0.15) );\00"
@Lt_0955 = private constant [82 x i8] c"    float d2 = sdEllipsoid( q, vec3(0.8,-0.07,-0.15), 0.5*vec3(0.15,0.13,0.15) );\00"
@Lt_0956 = private constant [79 x i8] c"    float d3 = sdEllipsoid( s, vec3(0.76,-0.8,0.6), 0.5*vec3(0.15,0.2,0.15) );\00"
@Lt_0957 = private constant [77 x i8] c"    float d4 = sdEllipsoid( q, vec3(-0.5,0.09,-0.2), vec3(0.04,0.03,0.04) );\00"
@Lt_0958 = private constant [29 x i8] c"    d3 = max( d3, p.y-0.01);\00"
@Lt_0959 = private constant [42 x i8] c"    return min( min(d1,d4), min(d2,d3) );\00"
@Lt_095A = private constant [48 x i8] c"vec2 mapTransparent( vec3 p, out vec4 matInfo )\00"
@Lt_095B = private constant [29 x i8] c"    float d5 = mapDrop( p );\00"
@Lt_095C = private constant [30 x i8] c"    vec2  res = vec2(d5,4.0);\00"
@Lt_095D = private constant [39 x i8] c"    float d6 = mapLeafWaterDrops( p );\00"
@Lt_095E = private constant [30 x i8] c"    res.x = min( res.x, d6 );\00"
@Lt_095F = private constant [56 x i8] c"vec3 calcNormalTransparent( in vec3 pos, in float eps )\00"
@Lt_0960 = private constant [67 x i8] c"    return normalize( e.xyy*mapTransparent( pos + e.xyy, kk ).x + \00"
@Lt_0961 = private constant [52 x i8] c"\09\09\09\09\09  e.yyx*mapTransparent( pos + e.yyx, kk ).x + \00"
@Lt_0962 = private constant [52 x i8] c"\09\09\09\09\09  e.yxy*mapTransparent( pos + e.yxy, kk ).x + \00"
@Lt_0963 = private constant [52 x i8] c"\09\09\09\09\09  e.xxx*mapTransparent( pos + e.xxx, kk ).x );\00"
@Lt_0964 = private constant [41 x i8] c"float calcAO( in vec3 pos, in vec3 nor )\00"
@Lt_0965 = private constant [17 x i8] c"\09float ao = 0.0;\00"
@Lt_0966 = private constant [33 x i8] c"    for( int i=ZERO; i<32; i++ )\00"
@Lt_0967 = private constant [47 x i8] c"        vec3 ap = forwardSF( float(i), 32.0 );\00"
@Lt_0968 = private constant [35 x i8] c"        float h = hash1(float(i));\00"
@Lt_0969 = private constant [37 x i8] c"\09\09ap *= sign( dot(ap,nor) ) * h*0.1;\00"
@Lt_096A = private constant [77 x i8] c"        ao += clamp( mapOpaque( pos + nor*0.01 + ap, kk ).x*3.0, 0.0, 1.0 );\00"
@Lt_096B = private constant [13 x i8] c"\09ao /= 32.0;\00"
@Lt_096C = private constant [38 x i8] c"    return clamp( ao*6.0, 0.0, 1.0 );\00"
@Lt_096D = private constant [42 x i8] c"float calcSSS( in vec3 pos, in vec3 nor )\00"
@Lt_096E = private constant [18 x i8] c"\09float occ = 0.0;\00"
@Lt_096F = private constant [32 x i8] c"    for( int i=ZERO; i<8; i++ )\00"
@Lt_0970 = private constant [45 x i8] c"        float h = 0.002 + 0.11*float(i)/7.0;\00"
@Lt_0971 = private constant [74 x i8] c"        vec3 dir = normalize( sin( float(i)*13.0 + vec3(0.0,2.1,4.2) ) );\00"
@Lt_0972 = private constant [35 x i8] c"        dir *= sign(dot(dir,nor));\00"
@Lt_0973 = private constant [47 x i8] c"        occ += (h-mapOpaque(pos-h*dir, kk).x);\00"
@Lt_0974 = private constant [53 x i8] c"    occ = clamp( 1.0 - 11.0*occ/8.0, 0.0, 1.0 );    \00"
@Lt_0975 = private constant [20 x i8] c"    return occ*occ;\00"
@Lt_0976 = private constant [59 x i8] c"float calcSoftshadow( in vec3 ro, in vec3 rd, float time )\00"
@Lt_0977 = private constant [21 x i8] c"    float res = 1.0;\00"
@Lt_0978 = private constant [23 x i8] c"    float tmax = 12.0;\00"
@Lt_0979 = private constant [59 x i8] c"    float tp = (3.5-ro.y)/rd.y; // raytrace bounding plane\00"
@Lt_097A = private constant [41 x i8] c"    if( tp>0.0 ) tmax = min( tmax, tp );\00"
@Lt_097B = private constant [12 x i8] c"\09#endif    \00"
@Lt_097C = private constant [20 x i8] c"    float t = 0.02;\00"
@Lt_097D = private constant [30 x i8] c"    for( int i=0; i<50; i++ )\00"
@Lt_097E = private constant [38 x i8] c"\09\09float h = map( ro + rd*t, time ).x;\00"
@Lt_097F = private constant [51 x i8] c"        res = min( res, mix(1.0,16.0*h/t, hsha) );\00"
@Lt_0980 = private constant [37 x i8] c"        t += clamp( h, 0.05, 0.40 );\00"
@Lt_0981 = private constant [41 x i8] c"        if( res<0.005 || t>tmax ) break;\00"
@Lt_0982 = private constant [35 x i8] c"    return clamp( res, 0.0, 1.0 );\00"
@Lt_0983 = private constant [43 x i8] c"vec3 calcNormal( in vec3 pos, float time )\00"
@Lt_0984 = private constant [42 x i8] c"    vec2 e = vec2(1.0,-1.0)*0.5773*0.001;\00"
@Lt_0985 = private constant [58 x i8] c"    return normalize( e.xyy*map( pos + e.xyy, time ).x + \00"
@Lt_0986 = private constant [43 x i8] c"\09\09\09\09\09  e.yyx*map( pos + e.yyx, time ).x + \00"
@Lt_0987 = private constant [43 x i8] c"\09\09\09\09\09  e.yxy*map( pos + e.yxy, time ).x + \00"
@Lt_0988 = private constant [43 x i8] c"\09\09\09\09\09  e.xxx*map( pos + e.xxx, time ).x );\00"
@Lt_0989 = private constant [40 x i8] c"        n += e*map(pos+0.001*e,time).x;\00"
@Lt_098A = private constant [57 x i8] c"vec3 jitter(vec3 d, float phi, float sina, float cosa) {\00"
@Lt_098B = private constant [76 x i8] c"    vec3 w = normalize(d), u = normalize(cross(w.yzx, w)), v = cross(w, u);\00"
@Lt_098C = private constant [56 x i8] c"    return (u*cos(phi) + v*sin(phi)) * sina + w * cosa;\00"
@Lt_098D = private constant [60 x i8] c"float calcOcclusion( in vec3 pos, in vec3 nor, float time )\00"
@Lt_098E = private constant [21 x i8] c"    float sca = 1.0;\00"
@Lt_098F = private constant [32 x i8] c"    for( int i=ZERO; i<5; i++ )\00"
@Lt_0990 = private constant [44 x i8] c"        float h = 0.01 + 0.11*float(i)/4.0;\00"
@Lt_0991 = private constant [33 x i8] c"        vec3 opos = pos + h*nor;\00"
@Lt_0992 = private constant [39 x i8] c"        float d = map( opos, time ).x;\00"
@Lt_0993 = private constant [26 x i8] c"        occ += (h-d)*sca;\00"
@Lt_0994 = private constant [21 x i8] c"        sca *= 0.95;\00"
@Lt_0995 = private constant [45 x i8] c"    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\00"
@Lt_0996 = private constant [56 x i8] c"float calcSoftShadow( in vec3 ro, in vec3 rd, float k )\00"
@Lt_0997 = private constant [17 x i8] c"    vec4 kk;    \00"
@Lt_0998 = private constant [20 x i8] c"    float t = 0.01;\00"
@Lt_0999 = private constant [47 x i8] c"        float h = mapOpaque(ro + rd*t, kk ).x;\00"
@Lt_099A = private constant [53 x i8] c"        res = min( res, smoothstep(0.0,1.0,k*h/t) );\00"
@Lt_099B = private constant [36 x i8] c"        t += clamp( h, 0.04, 0.1 );\00"
@Lt_099C = private constant [24 x i8] c"\09\09if( res<0.01 ) break;\00"
@Lt_099D = private constant [31 x i8] c"    return clamp(res,0.0,1.0);\00"
@Lt_099E = private constant [63 x i8] c"float checkersGradBox( in vec2 p, in vec2 dpdx, in vec2 dpdy )\00"
@Lt_099F = private constant [21 x i8] c"    // filter kernel\00"
@Lt_09A0 = private constant [42 x i8] c"    vec2 w = abs(dpdx)+abs(dpdy) + 0.001;\00"
@Lt_09A1 = private constant [40 x i8] c"    // analytical integral (box filter)\00"
@Lt_09A2 = private constant [82 x i8] c"    vec2 i = 2.0*(abs(fract((p-0.5*w)*0.5)-0.5)-abs(fract((p+0.5*w)*0.5)-0.5))/w;\00"
@Lt_09A3 = private constant [19 x i8] c"    // xor pattern\00"
@Lt_09A4 = private constant [48 x i8] c"    return 0.5 - 0.5*i.x*i.y;                  \00"
@Lt_09A5 = private constant [84 x i8] c"vec3 shadeOpaque( in vec3 ro, in vec3 rd, in float t, in float m, in vec4 matInfo )\00"
@Lt_09A6 = private constant [23 x i8] c"    float eps = 0.002;\00"
@Lt_09A7 = private constant [26 x i8] c"    vec3 pos = ro + t*rd;\00"
@Lt_09A8 = private constant [45 x i8] c"    vec3 nor = calcNormalOpaque( pos, eps );\00"
@Lt_09A9 = private constant [28 x i8] c"    vec3 mateD = vec3(0.0);\00"
@Lt_09AA = private constant [28 x i8] c"    vec3 mateS = vec3(0.0);\00"
@Lt_09AB = private constant [28 x i8] c"    vec2 mateK = vec2(0.0);\00"
@Lt_09AC = private constant [28 x i8] c"    vec3 mateE = vec3(0.0);\00"
@Lt_09AD = private constant [22 x i8] c"    float focc = 1.0;\00"
@Lt_09AE = private constant [22 x i8] c"    float fsha = 1.0;\00"
@Lt_09AF = private constant [30 x i8] c"    if( m<1.5 ) // snail body\00"
@Lt_09B0 = private constant [56 x i8] c"        float dis = texture( iChannel1, 5.0*pos.xy ).x;\00"
@Lt_09B1 = private constant [80 x i8] c"        float be = sdEllipsoid( pos, vec3(-0.3,-0.5,-0.1), vec3(0.2,1.0,0.5) );\00"
@Lt_09B2 = private constant [56 x i8] c"        be = 1.0-smoothstep( -0.01, 0.01, be );        \00"
@Lt_09B3 = private constant [40 x i8] c"        float ff = abs(matInfo.x-0.20);\00"
@Lt_09B4 = private constant [73 x i8] c"        mateS = 6.0*mix( 0.7*vec3(2.0,1.2,0.2), vec3(2.5,1.8,0.9), ff );\00"
@Lt_09B5 = private constant [26 x i8] c"        mateS += 2.0*dis;\00"
@Lt_09B6 = private constant [22 x i8] c"        mateS *= 1.5;\00"
@Lt_09B7 = private constant [34 x i8] c"        mateS *= 1.0 + 0.5*ff*ff;\00"
@Lt_09B8 = private constant [29 x i8] c"        mateS *= 1.0-0.5*be;\00"
@Lt_09B9 = private constant [35 x i8] c"        mateD = vec3(1.0,0.8,0.4);\00"
@Lt_09BA = private constant [22 x i8] c"        mateD *= dis;\00"
@Lt_09BB = private constant [24 x i8] c"        mateD *= 0.015;\00"
@Lt_09BC = private constant [44 x i8] c"        mateD += vec3(0.8,0.4,0.3)*0.15*be;\00"
@Lt_09BD = private constant [45 x i8] c"        mateK = vec2( 60.0, 0.7 + 2.0*dis );\00"
@Lt_09BE = private constant [54 x i8] c"        float f = clamp( dot( -rd, nor ), 0.0, 1.0 );\00"
@Lt_09BF = private constant [31 x i8] c"        f = 1.0-pow( f, 8.0 );\00"
@Lt_09C0 = private constant [68 x i8] c"        f = 1.0 - (1.0-f)*(1.0-texture( iChannel2, 0.3*pos.xy ).x);\00"
@Lt_09C1 = private constant [58 x i8] c"        mateS *= vec3(0.5,0.1,0.0) + f*vec3(0.5,0.9,1.0);\00"
@Lt_09C2 = private constant [57 x i8] c"        float b = 1.0-smoothstep( 0.25,0.55,abs(pos.y));\00"
@Lt_09C3 = private constant [90 x i8] c"        focc = 0.2 + 0.8*smoothstep( 0.0, 0.15, sdSphere(pos,vec4(0.05,0.52,0.0,0.13)) );\00"
@Lt_09C4 = private constant [27 x i8] c"\09else if( m<2.5 ) // shell\00"
@Lt_09C5 = private constant [27 x i8] c"        mateK = vec2(0.0);\00"
@Lt_09C6 = private constant [80 x i8] c"        float tip = 1.0-smoothstep(0.05,0.4, length(pos-vec3(0.17,0.2,0.35)) );\00"
@Lt_09C7 = private constant [77 x i8] c"        mateD = mix( 0.7*vec3(0.2,0.21,0.22), 0.2*vec3(0.15,0.1,0.0), tip );\00"
@Lt_09C8 = private constant [78 x i8] c"        vec2 uv = vec2( .5*atan(matInfo.x,matInfo.y)/3.1416, 1.5*matInfo.w );\00"
@Lt_09C9 = private constant [84 x i8] c"        vec3 ral = texture( iChannel1, vec2(2.0*matInfo.w+matInfo.z*0.5,0.5) ).xxx;\00"
@Lt_09CA = private constant [34 x i8] c"        mateD *= 0.25 + 0.75*ral;\00"
@Lt_09CB = private constant [87 x i8] c"        float pa = smoothstep(-0.2,0.2, 0.3+sin(2.0+40.0*uv.x + 3.0*sin(11.0*uv.x)) );\00"
@Lt_09CC = private constant [57 x i8] c"        float bar = mix(pa,1.0,smoothstep(0.7,1.0,tip));\00"
@Lt_09CD = private constant [82 x i8] c"        bar *= (matInfo.z<0.6) ? 1.0 : smoothstep( 0.17, 0.21, abs(matInfo.w)  );\00"
@Lt_09CE = private constant [62 x i8] c"        mateD *= vec3(0.06,0.03,0.0)+vec3(0.94,0.97,1.0)*bar;\00"
@Lt_09CF = private constant [35 x i8] c"        mateK = vec2( 64.0, 0.2 );\00"
@Lt_09D0 = private constant [59 x i8] c"        mateS = 1.5*vec3(1.0,0.65,0.6) * (1.0-tip);//*0.5;\00"
@Lt_09D1 = private constant [30 x i8] c"    else if( m<3.5 ) // plant\00"
@Lt_09D2 = private constant [40 x i8] c"        mateD = vec3(0.05,0.1,0.0)*0.2;\00"
@Lt_09D3 = private constant [41 x i8] c"        mateS = vec3(0.1,0.2,0.02)*25.0;\00"
@Lt_09D4 = private constant [31 x i8] c"        mateK = vec2(5.0,1.0);\00"
@Lt_09D5 = private constant [55 x i8] c"        float fre = clamp(1.0+dot(nor,rd), 0.0, 1.0 );\00"
@Lt_09D6 = private constant [44 x i8] c"        mateD += 0.2*fre*vec3(1.0,0.5,0.1);\00"
@Lt_09D7 = private constant [56 x i8] c"        vec3 te = texture( iChannel2, pos.xy*0.2 ).xyz;\00"
@Lt_09D8 = private constant [31 x i8] c"        mateS *= 0.5 + 1.5*te;\00"
@Lt_09D9 = private constant [55 x i8] c"        mateE = 0.5*vec3(0.1,0.1,0.03)*(0.2+0.8*te.x);\00"
@Lt_09DA = private constant [32 x i8] c"    else //if( m<4.5 ) // leave\00"
@Lt_09DB = private constant [45 x i8] c"        vec3 p = pos - vec3(-1.8,0.6,-0.75);\00"
@Lt_09DC = private constant [20 x i8] c"        vec3 s = p;\00"
@Lt_09DD = private constant [48 x i8] c"        p = mat3(0.671212, 0.366685, -0.644218,\00"
@Lt_09DE = private constant [48 x i8] c"                -0.479426, 0.877583,  0.000000,\00"
@Lt_09DF = private constant [51 x i8] c"                 0.565354, 0.308854,  0.764842)*p;\00"
@Lt_09E0 = private constant [20 x i8] c"        vec3 q = p;\00"
@Lt_09E1 = private constant [40 x i8] c"        p.y += 0.2*exp(-abs(2.0*p.z) );\00"
@Lt_09E2 = private constant [53 x i8] c"        float v = smoothstep( 0.01, 0.02, abs(p.z));\00"
@Lt_09E3 = private constant [70 x i8] c"        float rr = sin( 4.0*0.25*50.0*p.x - 4.0*0.25*75.0*abs(p.z) );\00"
@Lt_09E4 = private constant [55 x i8] c"        vec3 te = texture( iChannel2, p.xz*0.35 ).xyz;\00"
@Lt_09E5 = private constant [48 x i8] c"        float r = clamp((p.x+2.0)/4.0,0.0,1.0);\00"
@Lt_09E6 = private constant [35 x i8] c"        r = r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_09E7 = private constant [45 x i8] c"        float ff = length(p.xz/vec2(2.0,r));\00"
@Lt_09E8 = private constant [72 x i8] c"        mateD = mix( vec3(0.07,0.1,0.0), vec3(0.05,0.2,0.01)*0.25, v );\00"
@Lt_09E9 = private constant [60 x i8] c"        mateD = mix( mateD, vec3(0.16,0.2,0.01)*0.25, ff );\00"
@Lt_09EA = private constant [32 x i8] c"        mateD *= 1.0 + 0.25*te;\00"
@Lt_09EB = private constant [22 x i8] c"        mateD *= 0.8;\00"
@Lt_09EC = private constant [41 x i8] c"        mateS = vec3(0.15,0.2,0.02)*0.8;\00"
@Lt_09ED = private constant [31 x i8] c"        mateS *= 1.0 + 0.2*rr;\00"
@Lt_09EE = private constant [22 x i8] c"        mateS *= 0.8;\00"
@Lt_09EF = private constant [33 x i8] c"        mateK = vec2(64.0,0.25);\00"
@Lt_09F0 = private constant [32 x i8] c"        //---------------------\00"
@Lt_09F1 = private constant [71 x i8] c"        nor.xz += v*0.15*(-1.0+2.0*texture( iChannel3, 1.0*p.xz ).xy);\00"
@Lt_09F2 = private constant [32 x i8] c"        nor = normalize( nor );\00"
@Lt_09F3 = private constant [96 x i8] c"        float d1 = sdEllipsoid( q, vec3( 0.5-0.07, 0.0,  0.20), 1.0*vec3(1.4*0.15,0.13,0.15) );\00"
@Lt_09F4 = private constant [96 x i8] c"        float d2 = sdEllipsoid( q, vec3( 0.8-0.05,-0.07,-0.15), 0.5*vec3(1.3*0.15,0.13,0.15) );\00"
@Lt_09F5 = private constant [96 x i8] c"        float d4 = sdEllipsoid( q, vec3(-0.5-0.07, 0.09,-0.20), 1.0*vec3(1.4*0.04,0.03,0.04) );\00"
@Lt_09F6 = private constant [39 x i8] c"        float dd = min(d1,min(d2,d4));\00"
@Lt_09F7 = private constant [52 x i8] c"        fsha = 0.05 + 0.95*smoothstep(0.0,0.05,dd);\00"
@Lt_09F8 = private constant [65 x i8] c"        d1 = abs( sdCircle( q.xz, vec2( 0.5, 0.20), 1.0*0.15 ));\00"
@Lt_09F9 = private constant [65 x i8] c"        d2 = abs( sdCircle( q.xz, vec2( 0.8,-0.15), 0.5*0.15 ));\00"
@Lt_09FA = private constant [65 x i8] c"        d4 = abs( sdCircle( q.xz, vec2(-0.5,-0.20), 1.0*0.04 ));\00"
@Lt_09FB = private constant [33 x i8] c"        dd = min(d1,min(d2,d4));\00"
@Lt_09FC = private constant [53 x i8] c"        focc *= 0.55 + 0.45*smoothstep(0.0,0.08,dd);\00"
@Lt_09FD = private constant [54 x i8] c"        d1 = distance( q.xz, vec2( 0.5-0.07, 0.20) );\00"
@Lt_09FE = private constant [54 x i8] c"        d2 = distance( q.xz, vec2( 0.8-0.03,-0.15) );\00"
@Lt_09FF = private constant [51 x i8] c"        fsha += (1.0-smoothstep(0.0,0.10,d1))*1.5;\00"
@Lt_0A00 = private constant [55 x i8] c"        fsha += (1.0-smoothstep(0.0,0.05,d2))*1.5;    \00"
@Lt_0A01 = private constant [39 x i8] c"    vec3 hal = normalize( sunDir-rd );\00"
@Lt_0A02 = private constant [51 x i8] c"    float fre = clamp(1.0+dot(nor,rd), 0.0, 1.0 );\00"
@Lt_0A03 = private constant [41 x i8] c"    float occ = calcAO( pos, nor )*focc;\00"
@Lt_0A04 = private constant [37 x i8] c"    float sss = calcSSS( pos, nor );\00"
@Lt_0A05 = private constant [77 x i8] c"    sss = sss*occ + fre*occ + (0.5+0.5*fre)*pow(abs(matInfo.x-0.2),1.0)*occ;\00"
@Lt_0A06 = private constant [53 x i8] c"    float dif1 = clamp( dot(nor,sunDir), 0.0, 1.0 );\00"
@Lt_0A07 = private constant [54 x i8] c"    float sha = calcSoftShadow( pos, sunDir, 20.0 ); \00"
@Lt_0A08 = private constant [22 x i8] c"    dif1 *= sha*fsha;\00"
@Lt_0A09 = private constant [50 x i8] c"    float spe1 = clamp( dot(nor,hal), 0.0, 1.0 );\00"
@Lt_0A0A = private constant [50 x i8] c"    float bou = clamp( 0.3-0.7*nor.y, 0.0, 1.0 );\00"
@Lt_0A0B = private constant [20 x i8] c"    // illumination\00"
@Lt_0A0C = private constant [26 x i8] c"    vec3 col = vec3(0.0);\00"
@Lt_0A0D = private constant [60 x i8] c"    col += 7.0*vec3(1.7,1.2,0.6)*dif1*2.0;           // sun\00"
@Lt_0A0E = private constant [64 x i8] c"    col += 4.0*vec3(0.2,1.2,1.6)*occ*(0.5+0.5*nor.y);    // sky\00"
@Lt_0A0F = private constant [67 x i8] c"    col += 1.8*vec3(0.1,2.0,0.1)*bou*occ;                // bounce\00"
@Lt_0A10 = private constant [18 x i8] c"    col *= mateD;\00"
@Lt_0A11 = private constant [96 x i8] c"    col += 0.4*sss*(vec3(0.15,0.1,0.05)+vec3(0.85,0.9,0.95)*dif1)*(0.05+0.95*occ)*mateS; // sss\00"
@Lt_0A12 = private constant [38 x i8] c"    col = pow(col,vec3(0.6,0.8,1.0));\00"
@Lt_0A13 = private constant [120 x i8] c"    col += vec3(1.0,1.0,1.0)*0.2*pow( spe1, 1.0+mateK.x )*dif1*(0.04+0.96*pow(fre,4.0))*mateK.x*mateK.y;   // sun lobe1\00"
@Lt_0A14 = private constant [120 x i8] c"    col += vec3(1.0,1.0,1.0)*0.1*pow( spe1, 1.0+mateK.x/3.0 )*dif1*(0.1+0.9*pow(fre,4.0))*mateK.x*mateK.y; // sun lobe2\00"
@Lt_0A16 = private constant [151 x i8] c"\09col += 0.1*vec3(1.0,max(1.5-0.7*col.y,0.0),2.0)*occ*occ*smoothstep( 0.0, 0.3, reflect( rd, nor ).y )*mateK.x*mateK.y*(0.04+0.96*pow(fre,5.0)); // sky\00"
@Lt_0A17 = private constant [18 x i8] c"    col += mateE;\00"
@Lt_0A18 = private constant [24 x i8] c"    return col;        \00"
@Lt_0A19 = private constant [118 x i8] c"vec3 shadeTransparent( in vec3 ro, in vec3 rd, in float t, in float m, in vec4 matInfo, in vec3 col, in float depth )\00"
@Lt_0A1A = private constant [23 x i8] c"    vec3 oriCol = col;\00"
@Lt_0A1B = private constant [26 x i8] c"    float dz = depth - t;\00"
@Lt_0A1C = private constant [39 x i8] c"    float ao = clamp(dz*50.0,0.0,1.0);\00"
@Lt_0A1D = private constant [27 x i8] c"    vec3  pos = ro + t*rd;\00"
@Lt_0A1E = private constant [53 x i8] c"    vec3  nor = calcNormalTransparent( pos, 0.002 );\00"
@Lt_0A1F = private constant [57 x i8] c"    float fre = clamp( 1.0 + dot( rd, nor ), 0.0, 1.0 );\00"
@Lt_0A20 = private constant [40 x i8] c"    vec3  hal = normalize( sunDir-rd );\00"
@Lt_0A21 = private constant [37 x i8] c"    vec3  ref = reflect( -rd, nor );\00"
@Lt_0A22 = private constant [53 x i8] c"    float spe2 = clamp( dot(ref,sunDir), 0.0, 1.0 );\00"
@Lt_0A23 = private constant [28 x i8] c"    float ds = 1.6 - col.y;\00"
@Lt_0A24 = private constant [60 x i8] c"    col *= mix( vec3(0.0,0.0,0.0), vec3(0.4,0.6,0.4), ao );\00"
@Lt_0A25 = private constant [55 x i8] c"    col += ds*1.5*vec3(1.0,0.9,0.8)*pow( spe1, 80.0 );\00"
@Lt_0A26 = private constant [61 x i8] c"    col += ds*0.2*vec3(0.9,1.0,1.0)*smoothstep(0.4,0.8,fre);\00"
@Lt_0A27 = private constant [112 x i8] c"    col += ds*0.9*vec3(0.6,0.7,1.0)*smoothstep( -0.5, 0.5, -reflect( rd, nor ).y )*smoothstep(0.2,0.4,fre);    \00"
@Lt_0A28 = private constant [55 x i8] c"    col += ds*0.5*vec3(1.0,0.9,0.8)*pow( spe2, 80.0 );\00"
@Lt_0A29 = private constant [55 x i8] c"    col += ds*0.5*vec3(1.0,0.9,0.8)*pow( spe2, 16.0 );\00"
@Lt_0A2A = private constant [107 x i8] c"    col += vec3(0.8,1.0,0.8)*0.5*smoothstep(0.3,0.6,texture( iChannel1, 0.8*nor.xy ).x)*(0.1+0.9*fre*fre);\00"
@Lt_0A2B = private constant [27 x i8] c"    // hide aliasing a bit\00"
@Lt_0A2C = private constant [57 x i8] c"    return mix( col, oriCol, smoothstep(0.6,1.0,fre) ); \00"
@Lt_0A2D = private constant [47 x i8] c"//--------------------------------------------\00"
@Lt_0A2E = private constant [31 x i8] c"vec3 calcNormal( in vec3 pos )\00"
@Lt_0A2F = private constant [38 x i8] c"\09vec3 eps = vec3( 0.0001, 0.0, 0.0 );\00"
@Lt_0A30 = private constant [26 x i8] c"    float d = map(pos).x;\00"
@Lt_0A31 = private constant [28 x i8] c"    return normalize( vec3(\00"
@Lt_0A32 = private constant [29 x i8] c"\09    map(pos+eps.xyy).x - d,\00"
@Lt_0A33 = private constant [29 x i8] c"\09    map(pos+eps.yxy).x - d,\00"
@Lt_0A34 = private constant [29 x i8] c"\09    map(pos+eps.yyx).x - d)\00"
@Lt_0A35 = private constant [4 x i8] c"\09);\00"
@Lt_0A36 = private constant [39 x i8] c"CP findIntersection(vec3 p, vec3 rd) {\00"
@Lt_0A37 = private constant [6 x i8] c"     \00"
@Lt_0A38 = private constant [24 x i8] c"    float tmin = 0.000;\00"
@Lt_0A39 = private constant [23 x i8] c"    float tmax = 50.0;\00"
@Lt_0A3A = private constant [30 x i8] c"\09float precis = DIST_EPSILON;\00"
@Lt_0A3B = private constant [20 x i8] c"    float t = tmin;\00"
@Lt_0A3C = private constant [21 x i8] c"    float eta = -1.;\00"
@Lt_0A3D = private constant [14 x i8] c"    vec3 res;\00"
@Lt_0A3E = private constant [23 x i8] c"\09  \09res = map(p+rd*t);\00"
@Lt_0A3F = private constant [21 x i8] c"        eta = res.z;\00"
@Lt_0A40 = private constant [44 x i8] c"        if( res.x<precis || t>tmax ) break;\00"
@Lt_0A41 = private constant [20 x i8] c"        t += res.x;\00"
@Lt_0A42 = private constant [13 x i8] c"    p+=rd*t;\00"
@Lt_0A43 = private constant [63 x i8] c"    // calculate normal in the father point to avoid artifacts\00"
@Lt_0A44 = private constant [46 x i8] c"    vec3 n = calcNormal(p-rd*(precis-res.x));\00"
@Lt_0A45 = private constant [32 x i8] c"    CP cp = CP(t, n, res.y, p);\00"
@Lt_0A46 = private constant [15 x i8] c"    return cp;\00"
@Lt_0A47 = private constant [107 x i8] c"vec2 intersectOpaque( in vec3 ro, in vec3 rd, const float mindist, const float maxdist, out vec4 matInfo )\00"
@Lt_0A48 = private constant [27 x i8] c"    vec2 res = vec2(-1.0);\00"
@Lt_0A49 = private constant [23 x i8] c"    float t = mindist;\00"
@Lt_0A4A = private constant [33 x i8] c"    for( int i=ZERO; i<64; i++ )\00"
@Lt_0A4B = private constant [28 x i8] c"        vec3 p = ro + t*rd;\00"
@Lt_0A4C = private constant [42 x i8] c"        vec2 h = mapOpaque( p, matInfo );\00"
@Lt_0A4D = private constant [27 x i8] c"        res = vec2(t,h.y);\00"
@Lt_0A4E = private constant [49 x i8] c"        if( h.x<(0.001*t) ||  t>maxdist ) break;\00"
@Lt_0A4F = private constant [22 x i8] c"        t += h.x*0.9;\00"
@Lt_0A50 = private constant [112 x i8] c"vec2 intersectTransparent( in vec3 ro, in vec3 rd, const float mindist, const float maxdist, out vec4 matInfo )\00"
@Lt_0A51 = private constant [47 x i8] c"        vec2 h = mapTransparent( p, matInfo );\00"
@Lt_0A52 = private constant [18 x i8] c"        t += h.x;\00"
@Lt_0A53 = private constant [59 x i8] c"vec3 refractCaustic(vec3 p, vec3 rd, vec3 ld, float eta) {\00"
@Lt_0A54 = private constant [24 x i8] c"     vec3 cl = vec3(1);\00"
@Lt_0A55 = private constant [33 x i8] c"    for(int j = 0; j < 2; ++j) {\00"
@Lt_0A56 = private constant [41 x i8] c"        CP cp = findIntersection(p, rd);\00"
@Lt_0A57 = private constant [33 x i8] c"        if (length(cp.p) > 2.) {\00"
@Lt_0A58 = private constant [19 x i8] c"            break;\00"
@Lt_0A59 = private constant [10 x i8] c"        }\00"
@Lt_0A5A = private constant [58 x i8] c"        cl *= SURFACE_COLOR;//*(abs(dot(rd, cp.normal)));\00"
@Lt_0A5B = private constant [58 x i8] c"        vec3 normal = sign(dot(rd, cp.normal))*cp.normal;\00"
@Lt_0A5C = private constant [40 x i8] c"        rd = refract(rd, -normal, eta);\00"
@Lt_0A5D = private constant [18 x i8] c"        p = cp.p;\00"
@Lt_0A5E = private constant [22 x i8] c"        eta = 1./eta;\00"
@Lt_0A5F = private constant [37 x i8] c"        p += normal*DIST_EPSILON*2.;\00"
@Lt_0A60 = private constant [49 x i8] c"     float d = clamp( dot( rd, ld ), 0.0, 1.0 );\00"
@Lt_0A61 = private constant [40 x i8] c"     return smoothstep(0.99, 1., d)*cl;\00"
@Lt_0A62 = private constant [40 x i8] c"vec3 caustic(vec3 p,vec3 ld, Ray ray) {\00"
@Lt_0A63 = private constant [49 x i8] c"    vec3 VX = normalize(cross(ld, vec3(0,1,0)));\00"
@Lt_0A64 = private constant [42 x i8] c"\09vec3 VY = normalize(cross(ld, VX));     \00"
@Lt_0A65 = private constant [22 x i8] c"    vec3 c = vec3(0);\00"
@Lt_0A66 = private constant [20 x i8] c"    const int N =3;\00"
@Lt_0A67 = private constant [37 x i8] c"    p += ray.cp.normal*DIST_EPSILON;\00"
@Lt_0A68 = private constant [32 x i8] c"    for(int i = 0; i < N;++i) {\00"
@Lt_0A69 = private constant [67 x i8] c"        float n1 = rand(p.xz*10. + vec2(iTime*2. +float(i)*123.));\00"
@Lt_0A6A = private constant [66 x i8] c"        float n2 = rand(p.xz*15. +vec2(iTime*3. +float(i)*111.));\00"
@Lt_0A6B = private constant [52 x i8] c"        vec3 rd = ld+(VX*(n1-0.5)+VY*(n2-0.5))*0.1;\00"
@Lt_0A6C = private constant [19 x i8] c"       // rd = ld;\00"
@Lt_0A6D = private constant [28 x i8] c"        rd = normalize(rd);\00"
@Lt_0A6E = private constant [49 x i8] c" \09\09vec3 cl = refractCaustic(p, rd, ld, ray.eta);\00"
@Lt_0A6F = private constant [39 x i8] c"      \09c += cl* dot(rd,ray.cp.normal);\00"
@Lt_0A70 = private constant [26 x i8] c"    return c*3./float(N);\00"
@Lt_0A71 = private constant [33 x i8] c"vec3 getFloorColor(in Ray ray) {\00"
@Lt_0A72 = private constant [24 x i8] c"    vec3 col = vec3(0);\00"
@Lt_0A73 = private constant [25 x i8] c"    vec3 pos = ray.cp.p;\00"
@Lt_0A74 = private constant [49 x i8] c"    vec3 ref = reflect( ray.rd, ray.cp.normal );\00"
@Lt_0A75 = private constant [62 x i8] c"    float f = mod( floor(5.0*pos.z) + floor(5.0*pos.x), 2.0);\00"
@Lt_0A76 = private constant [33 x i8] c"    col = 0.4 + 0.1*f*vec3(1.0);\00"
@Lt_0A77 = private constant [68 x i8] c"    float dif = clamp( dot( ray.cp.normal, LIGHT_DIR ), 0.0, 1.0 );\00"
@Lt_0A78 = private constant [27 x i8] c"    vec3 brdf = vec3(0.0);\00"
@Lt_0A79 = private constant [42 x i8] c"    brdf += caustic(pos, LIGHT_DIR, ray);\00"
@Lt_0A7A = private constant [43 x i8] c"    brdf += 1.20*dif*vec3(1.00,0.90,0.60);\00"
@Lt_0A7B = private constant [20 x i8] c"    col = col*brdf;\00"
@Lt_0A7C = private constant [25 x i8] c"    // exclude branching\00"
@Lt_0A7D = private constant [39 x i8] c"    col *= (ID_GLASS_WALL-ray.cp.mat);\00"
@Lt_0A7E = private constant [16 x i8] c"    return col;\00"
@Lt_0A7F = private constant [28 x i8] c"vec3 getColor(in Ray ray) {\00"
@Lt_0A80 = private constant [62 x i8] c"    vec3 p = ray.cp.p ;// can be used by SURFACE_COLOR define\00"
@Lt_0A81 = private constant [39 x i8] c"    vec3 c1 = ray.col * SURFACE_COLOR;\00"
@Lt_0A82 = private constant [34 x i8] c"    vec3 c2 = getFloorColor(ray);\00"
@Lt_0A83 = private constant [47 x i8] c"    return mix(c2, c1, ray.cp.mat - ID_FLOOR);\00"
@Lt_0A84 = private constant [3 x i8] c"} \00"
@Lt_0A85 = private constant [28 x i8] c"vec3 getRayColor(Ray ray) {\00"
@Lt_0A86 = private constant [75 x i8] c"    float d = mix(DENSITY_MIN, DENSITY_MAX, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0A87 = private constant [82 x i8] c"    vec3 matColor = mix(AIR_COLOR, MATERIAL_COLOR, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0A88 = private constant [30 x i8] c"    vec3 col = getColor(ray);\00"
@Lt_0A89 = private constant [35 x i8] c"    float q = exp(-d*ray.cp.dist);\00"
@Lt_0A8A = private constant [33 x i8] c"    col = col*q+matColor*(1.-q);\00"
@Lt_0A8B = private constant [26 x i8] c"    return col*ray.share;\00"
@Lt_0A8C = private constant [38 x i8] c"vec3 getColor(in Ray ray, vec3 pos) {\00"
@Lt_0A8D = private constant [34 x i8] c"    if (ray.cp.mat == ID_FLOOR) {\00"
@Lt_0A8E = private constant [28 x i8] c"        const float m = 3.;\00"
@Lt_0A8F = private constant [56 x i8] c"        vec2 p = fract(vec2(-pos.x+0.5,pos.z+0.5)/m)*m;\00"
@Lt_0A90 = private constant [44 x i8] c"        col = texture(iChannel0, p.xy).xyz;\00"
@Lt_0A91 = private constant [13 x i8] c"    } else {\00"
@Lt_0A92 = private constant [39 x i8] c"        col = ray.col * SURFACE_COLOR;\00"
@Lt_0A93 = private constant [14 x i8] c" \09return col;\00"
@Lt_0A94 = private constant [4 x i8] c"}  \00"
@Lt_0A95 = private constant [17 x i8] c"#ifdef RECURSION\00"
@Lt_0A96 = private constant [54 x i8] c"void getRays(inout Ray ray, out Ray r1, out Ray r2) {\00"
@Lt_0A97 = private constant [24 x i8] c"     vec3 p = ray.cp.p;\00"
@Lt_0A98 = private constant [43 x i8] c"    float cs = dot(ray.cp.normal, ray.rd);\00"
@Lt_0A99 = private constant [28 x i8] c"    // simple approximation\00"
@Lt_0A9A = private constant [33 x i8] c"    float fresnel = 1.0-abs(cs);\00"
@Lt_0A9B = private constant [42 x i8] c"    vec3 normal = sign(cs)*ray.cp.normal;\00"
@Lt_0A9C = private constant [51 x i8] c"    vec3 refr = refract(ray.rd, -normal, ray.eta);\00"
@Lt_0A9D = private constant [48 x i8] c"    vec3 refl = reflect(ray.rd, ray.cp.normal);\00"
@Lt_0A9E = private constant [37 x i8] c"    vec3 z = normal*DIST_EPSILON*2.;\00"
@Lt_0A9F = private constant [12 x i8] c"    p += z;\00"
@Lt_0AA0 = private constant [80 x i8] c"    r1 = Ray(refr, findIntersection(p, refr),  vec3(0),1.-fresnel, 1./ray.eta);\00"
@Lt_0AA1 = private constant [15 x i8] c"    p -= 2.*z;\00"
@Lt_0AA2 = private constant [74 x i8] c"    r2 = Ray( refl, findIntersection(p, refl), vec3(0),fresnel, ray.eta);\00"
@Lt_0AA3 = private constant [30 x i8] c"// set of recursion functions\00"
@Lt_0AA4 = private constant [27 x i8] c"void rec2(inout Ray ray) {\00"
@Lt_0AA5 = private constant [15 x i8] c"    Ray r1,r2;\00"
@Lt_0AA6 = private constant [26 x i8] c"    getRays(ray, r1, r2);\00"
@Lt_0AA7 = private constant [32 x i8] c"    ray.col += getRayColor(r1);\00"
@Lt_0AA8 = private constant [32 x i8] c"    ray.col += getRayColor(r2);\00"
@Lt_0AA9 = private constant [27 x i8] c"void rec3(inout Ray ray) {\00"
@Lt_0AAA = private constant [14 x i8] c"    rec2(r1);\00"
@Lt_0AAB = private constant [14 x i8] c"    rec2(r2);\00"
@Lt_0AAC = private constant [27 x i8] c"void rec4(inout Ray ray) {\00"
@Lt_0AAD = private constant [14 x i8] c"    rec3(r1);\00"
@Lt_0AAE = private constant [14 x i8] c"    rec3(r2);\00"
@Lt_0AAF = private constant [27 x i8] c"void rec5(inout Ray ray) {\00"
@Lt_0AB0 = private constant [14 x i8] c"    rec4(r1);\00"
@Lt_0AB1 = private constant [14 x i8] c"    rec4(r2);\00"
@Lt_0AB2 = private constant [27 x i8] c"void rec6(inout Ray ray) {\00"
@Lt_0AB3 = private constant [14 x i8] c"    rec5(r1);\00"
@Lt_0AB4 = private constant [14 x i8] c"    rec5(r2);\00"
@Lt_0AB5 = private constant [32 x i8] c"vec3 castRay(vec3 p, vec3 rd) {\00"
@Lt_0AB6 = private constant [37 x i8] c"    CP cp = findIntersection(p, rd);\00"
@Lt_0AB7 = private constant [46 x i8] c"    Ray ray = Ray( rd, cp, vec3(0), 1., ETA);\00"
@Lt_0AB8 = private constant [24 x i8] c"    calcRecursion(ray);\00"
@Lt_0AB9 = private constant [33 x i8] c"    ray.col += getRayColor(ray);\00"
@Lt_0ABA = private constant [17 x i8] c"\09return ray.col;\00"
@Lt_0ABB = private constant [21 x i8] c"Ray rays[RAY_COUNT];\00"
@Lt_0ABC = private constant [46 x i8] c"    rays[0] = Ray( rd, cp, vec3(0), 1., ETA);\00"
@Lt_0ABD = private constant [43 x i8] c"    for(int i = 0; i < RAY_COUNT/2; ++i) {\00"
@Lt_0ABE = private constant [27 x i8] c"        Ray ray = rays[i];\00"
@Lt_0ABF = private constant [21 x i8] c"\09\09vec3 p = ray.cp.p;\00"
@Lt_0AC0 = private constant [48 x i8] c"       \09 float cs = dot(ray.cp.normal, ray.rd);\00"
@Lt_0AC1 = private constant [37 x i8] c"        float fresnel = 1.0-abs(cs);\00"
@Lt_0AC2 = private constant [59 x i8] c"        //float fresnel =mix(0.2, 1., pow(1.-abs(cs),2.));\00"
@Lt_0AC3 = private constant [47 x i8] c"         vec3 normal = sign(cs)*ray.cp.normal;\00"
@Lt_0AC4 = private constant [52 x i8] c"    \09vec3 refr = refract(ray.rd, -normal, ray.eta);\00"
@Lt_0AC5 = private constant [52 x i8] c"        vec3 refl = reflect(ray.rd, ray.cp.normal);\00"
@Lt_0AC6 = private constant [41 x i8] c"        vec3 z = normal*DIST_EPSILON*2.;\00"
@Lt_0AC7 = private constant [16 x i8] c"        p += z;\00"
@Lt_0AC8 = private constant [93 x i8] c"        rays[i*2+1] = Ray(refr, findIntersection(p, refr),  vec3(0),1.-fresnel, 1./ray.eta);\00"
@Lt_0AC9 = private constant [19 x i8] c"        p -= 2.*z;\00"
@Lt_0ACA = private constant [89 x i8] c"        rays[i*2 + 2] = Ray( refl, findIntersection(p, refl), vec3(0),fresnel, ray.eta);\00"
@Lt_0ACB = private constant [41 x i8] c"    for(int i = RAY_COUNT-1; i>=0;--i) {\00"
@Lt_0ACC = private constant [28 x i8] c"        vec3 p =  ray.cp.p;\00"
@Lt_0ACD = private constant [16 x i8] c"\09\09vec3 atColor;\00"
@Lt_0ACE = private constant [80 x i8] c"        float  d = mix(DENSITY_MIN, DENSITY_MAX, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0ACF = private constant [86 x i8] c"        vec3 matColor = mix(AIR_COLOR, MATERIAL_COLOR, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0AD0 = private constant [37 x i8] c"        vec3 col = getColor(ray, p);\00"
@Lt_0AD1 = private constant [39 x i8] c"        float q = exp(-d*ray.cp.dist);\00"
@Lt_0AD2 = private constant [37 x i8] c"        col = col*q+matColor*(1.-q);\00"
@Lt_0AD3 = private constant [44 x i8] c"        rays[(i-1)/2].col += col*ray.share;\00"
@Lt_0AD4 = private constant [21 x i8] c"\09return rays[0].col;\00"
@Lt_0AD5 = private constant [29 x i8] c"vec3 background( in vec3 d )\00"
@Lt_0AD6 = private constant [21 x i8] c"    // cheap cubemap\00"
@Lt_0AD7 = private constant [21 x i8] c"    vec3 n = abs(d);\00"
@Lt_0AD8 = private constant [48 x i8] c"    vec2 uv = (n.x>n.y && n.x>n.z) ? d.yz/d.x: \00"
@Lt_0AD9 = private constant [47 x i8] c"              (n.y>n.x && n.y>n.z) ? d.zx/d.y:\00"
@Lt_0ADA = private constant [47 x i8] c"                                     d.xy/d.z;\00"
@Lt_0ADB = private constant [18 x i8] c"    // fancy blur\00"
@Lt_0ADC = private constant [29 x i8] c"    vec3  col = vec3( 0.0 );\00"
@Lt_0ADD = private constant [34 x i8] c"    for( int i=ZERO; i<200; i++ )\00"
@Lt_0ADE = private constant [34 x i8] c"        float h = float(i)/200.0;\00"
@Lt_0ADF = private constant [34 x i8] c"        float an = 31.0*6.2831*h;\00"
@Lt_0AE0 = private constant [49 x i8] c"        vec2  of = vec2( cos(an), sin(an) ) * h;\00"
@Lt_0AE1 = private constant [71 x i8] c"        vec3 tmp = texture( iChannel2, uv*0.25 + 0.0075*of, 4.0 ).yxz;\00"
@Lt_0AE2 = private constant [37 x i8] c"        col = smax( col, tmp, 0.5 );\00"
@Lt_0AE3 = private constant [43 x i8] c"    return pow(col,vec3(3.5,3.0,6.0))*0.2;\00"
@Lt_0AE4 = private constant [30 x i8] c"float horizonHeight(vec2 pos)\00"
@Lt_0AE5 = private constant [50 x i8] c"    horiz( vec2(-1, 0.1), vec2(-0.8, 0.3), pos );\00"
@Lt_0AE6 = private constant [52 x i8] c"    horiz( vec2(-0.8, 0.3), vec2(-0.6, 0.4), pos );\00"
@Lt_0AE7 = private constant [52 x i8] c"    horiz( vec2(-0.6, 0.4), vec2(-0.3, 0.2), pos );\00"
@Lt_0AE8 = private constant [53 x i8] c"    horiz( vec2(-0.3, 0.2), vec2(-0.1, 0.25), pos );\00"
@Lt_0AE9 = private constant [52 x i8] c"    horiz( vec2(-0.1, 0.25), vec2(-0., 0.2), pos );\00"
@Lt_0AEA = private constant [49 x i8] c"    horiz( vec2(-0., 0.2), vec2(.1, 0.3), pos );\00"
@Lt_0AEB = private constant [50 x i8] c"    horiz( vec2(.1, 0.3), vec2(.24, 0.32), pos );\00"
@Lt_0AEC = private constant [50 x i8] c"    horiz( vec2(.24, 0.32), vec2(.3, 0.3), pos );\00"
@Lt_0AED = private constant [50 x i8] c"    horiz( vec2(.3, 0.3), vec2(.34, 0.32), pos );\00"
@Lt_0AEE = private constant [52 x i8] c"    horiz( vec2(.34, 0.32), vec2(.36, 0.31), pos );\00"
@Lt_0AEF = private constant [51 x i8] c"    horiz( vec2(.36, 0.31), vec2(.4, 0.27), pos );\00"
@Lt_0AF0 = private constant [51 x i8] c"    horiz( vec2(.4, 0.27), vec2(.47, 0.23), pos );\00"
@Lt_0AF1 = private constant [51 x i8] c"    horiz( vec2(.47, 0.23), vec2(.6, 0.15), pos );\00"
@Lt_0AF2 = private constant [49 x i8] c"    horiz( vec2(.6, 0.15), vec2(.8, 0.3), pos );\00"
@Lt_0AF3 = private constant [48 x i8] c"    horiz( vec2(.8, 0.3), vec2(1., 0.2), pos );\00"
@Lt_0AF4 = private constant [22 x i8] c"vec3 sunColor(vec2 p)\00"
@Lt_0AF5 = private constant [35 x i8] c"    #define suncenter vec2(0, 0.1)\00"
@Lt_0AF6 = private constant [26 x i8] c"    #define sunradius 0.6\00"
@Lt_0AF7 = private constant [28 x i8] c"    #define sunfalloff 0.23\00"
@Lt_0AF8 = private constant [43 x i8] c"    #define suncolor vec3(0.8, 0.05, 0.05)\00"
@Lt_0AF9 = private constant [26 x i8] c"    #define skyradius 0.8\00"
@Lt_0AFA = private constant [27 x i8] c"    #define skyfalloff 0.3\00"
@Lt_0AFB = private constant [39 x i8] c"    #define skycolor vec3(0.05,0.,0.1)\00"
@Lt_0AFC = private constant [80 x i8] c"    #define noise(x) (1. - texture(iChannel0, p*2.).r * 1. * (1.-sqrt(x)*0.92))\00"
@Lt_0AFD = private constant [103 x i8] c"    float sunbrightness = smoothstep(sunradius+sunfalloff, sunradius-sunfalloff, length(p-suncenter));\00"
@Lt_0AFE = private constant [111 x i8] c"    float skymask = smoothstep(skyradius+skyfalloff, skyradius-skyfalloff, length(p*vec2(0.5, 1.)-suncenter));\00"
@Lt_0AFF = private constant [101 x i8] c"    return mix(skycolor*skymask*noise(skymask*0.5), suncolor, sunbrightness * noise(sunbrightness));\00"
@Lt_0B00 = private constant [21 x i8] c"vec3 bgColor(vec2 p)\00"
@Lt_0B01 = private constant [40 x i8] c"    #define bgcolor vec3(0., 0.25, 0.7)\00"
@Lt_0B02 = private constant [81 x i8] c"    #define noise2(x) (1. - texture(iChannel0, p*2.).r * 1. * (1.-sqrt(x)*0.72))\00"
@Lt_0B03 = private constant [24 x i8] c"    p.y += p.x*p.x*0.1;\00"
@Lt_0B04 = private constant [84 x i8] c"    float dist = sdTriangle(vec2(-1.5, 0.05), vec2(2.5, -0.7), vec2(-1.5, -1.), p);\00"
@Lt_0B05 = private constant [98 x i8] c"    float mask = clamp(smoothstep(-0.2, 0.2, -dist) - smoothstep(-1., 1.5, p.x)*0.6, 0., 1.)*0.8;\00"
@Lt_0B06 = private constant [26 x i8] c"    mask *= noise2(mask);\00"
@Lt_0B07 = private constant [31 x i8] c"    return vec3(mask*bgcolor);\00"
@Lt_0B08 = private constant [19 x i8] c"vec3 prism(vec2 p)\00"
@Lt_0B09 = private constant [41 x i8] c"    #define f1color vec3(0.5, 0.5, 0.24)\00"
@Lt_0B0A = private constant [43 x i8] c"    #define f1color2 vec3(0.57, 0.27, 0.2)\00"
@Lt_0B0B = private constant [90 x i8] c" \09float f1 = sdTriangle(vec2(-.195, -0.205), vec2(0.175, -0.24), vec2(-0.095, -0.38), p);\00"
@Lt_0B0C = private constant [76 x i8] c"    vec3 f1col = smoothstep(0.01, -0.0, f1)*f1color*(p.x+0.26+p.y*0.5)*10.;\00"
@Lt_0B0D = private constant [52 x i8] c"    f1col += smoothstep(0.01, -0.0, f1)*(f1color2);\00"
@Lt_0B0E = private constant [40 x i8] c"    #define f2color vec3(0.4, 0.6, 0.7)\00"
@Lt_0B0F = private constant [85 x i8] c"    float f2 = sdTriangle(vec2(-.2, -0.21), vec2(-0.1, -0.39), vec2(-0.2, -0.6), p);\00"
@Lt_0B10 = private constant [88 x i8] c"    f2 = min(f2, sdTriangle(vec2(-.1, -0.77), vec2(-0.1, -0.39), vec2(-0.2, -0.6), p));\00"
@Lt_0B11 = private constant [114 x i8] c"    vec3 f2col = clamp(smoothstep(0.01, -0.0, f2)* f2color * (.6-length(p-vec2(-0.15, -0.4)))*0.4, 0., 1.) * 2.6;\00"
@Lt_0B12 = private constant [43 x i8] c"    #define f3color vec3(-0.5, -0.5, -0.5)\00"
@Lt_0B13 = private constant [88 x i8] c"    float f3 = sdTriangle(vec2(0.18, -0.24), vec2(.18, -0.63), vec2(-0.095, -0.39), p);\00"
@Lt_0B14 = private constant [92 x i8] c"    f3 = min(f3, sdTriangle(vec2(-.095, -0.77), vec2(.18, -0.63), vec2(-0.095, -0.39), p));\00"
@Lt_0B15 = private constant [102 x i8] c"    vec3 f3col = clamp(smoothstep(0.01, -0.0, f3) * (.4-length(p-vec2(0.04, -0.5))), 0., 1.)*f3color;\00"
@Lt_0B16 = private constant [65 x i8] c"    return (f2col+f1col+f3col)*noise(length(f2col+f1col+f3col));\00"
@Lt_0B17 = private constant [18 x i8] c"vec3 beam(vec2 p)\00"
@Lt_0B18 = private constant [46 x i8] c"    #define whitebeamcolor vec3(0.5, 0.5, 1.)\00"
@Lt_0B19 = private constant [86 x i8] c"    float wb = sdTriangle(vec2(-.14, -0.47), vec2(-.16, -0.45), vec2(-25., -10.), p);\00"
@Lt_0B1A = private constant [68 x i8] c"    vec3 wbcol = whitebeamcolor * smoothstep(0.015, -0.015, wb)*2.;\00"
@Lt_0B1B = private constant [81 x i8] c"    float rb = sdTriangle(vec2(.04, -0.47), vec2(30., -51.), vec2(25., -5.), p);\00"
@Lt_0B1C = private constant [53 x i8] c"    #define leg1 (vec2(25., -5.) - vec2(.04, -0.47))\00"
@Lt_0B1D = private constant [38 x i8] c"    #define ang1 atan(leg1.y, leg1.x)\00"
@Lt_0B1E = private constant [54 x i8] c"    #define leg2 (vec2(30., -51.) - vec2(.04, -0.47))\00"
@Lt_0B1F = private constant [38 x i8] c"    #define ang2 atan(leg2.y, leg2.x)\00"
@Lt_0B20 = private constant [44 x i8] c"    #define rbleg(x) (x - vec2(.04, -0.47))\00"
@Lt_0B21 = private constant [82 x i8] c"    #define rbangle(xv) ((atan(rbleg(xv).y, rbleg(xv).x) - ang1) / (ang2 - ang1))\00"
@Lt_0B22 = private constant [42 x i8] c"    float rainbowangle = -rbangle(p)-0.1;\00"
@Lt_0B24 = private constant [142 x i8] c"    vec3 rbcol = hsv2rgb_smooth(vec3(rainbowangle, 0.7 - length(rbleg(p))*0.2, 0.6 - length(rbleg(p))*0.2)) *  smoothstep(0.015, -0.015, rb);\00"
@Lt_0B25 = private constant [55 x i8] c"    return (wbcol + rbcol)*noise(length(wbcol+rbcol));\00"
@Lt_0B26 = private constant [31 x i8] c"vec3 render(vec3 p, vec3 rd) {\00"
@Lt_0B27 = private constant [30 x i8] c"    vec3 col= castRay(p, rd);\00"
@Lt_0B28 = private constant [49 x i8] c"vec3 render( in vec3 ro, in vec3 rd, in vec2 q )\00"
@Lt_0B29 = private constant [36 x i8] c"    //-----------------------------\00"
@Lt_0B2A = private constant [33 x i8] c"    vec3 col = background( rd );\00"
@Lt_0B2B = private constant [25 x i8] c"    float mindist = 1.0;\00"
@Lt_0B2C = private constant [25 x i8] c"    float maxdist = 4.0;\00"
@Lt_0B2D = private constant [18 x i8] c"    vec4 matInfo;\00"
@Lt_0B2E = private constant [68 x i8] c"    vec2 tm = intersectOpaque( ro, rd, mindist, maxdist, matInfo );\00"
@Lt_0B2F = private constant [38 x i8] c"    if( tm.y>-0.5 && tm.x < maxdist )\00"
@Lt_0B30 = private constant [58 x i8] c"        col = shadeOpaque( ro, rd, tm.x, tm.y, matInfo );\00"
@Lt_0B31 = private constant [24 x i8] c"        maxdist = tm.x;\00"
@Lt_0B32 = private constant [68 x i8] c"    tm = intersectTransparent( ro, rd, mindist, maxdist, matInfo );\00"
@Lt_0B33 = private constant [77 x i8] c"        col = shadeTransparent( ro, rd, tm.x, tm.y, matInfo, col, maxdist );\00"
@Lt_0B34 = private constant [47 x i8] c"    float sun = clamp(dot(rd,sunDir),0.0,1.0);\00"
@Lt_0B35 = private constant [47 x i8] c"    col += 1.0*vec3(1.5,0.8,0.7)*pow(sun,4.0);\00"
@Lt_0B36 = private constant [34 x i8] c"    col = pow( col, vec3(0.45) );\00"
@Lt_0B37 = private constant [90 x i8] c"    col = vec3(1.05,1.0,1.0)*col*(0.7+0.3*col*max(3.0-2.0*col,0.0)) + vec3(0.0,0.0,0.04);\00"
@Lt_0B38 = private constant [64 x i8] c"    col *= 0.3 + 0.7*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.1);\00"
@Lt_0B39 = private constant [35 x i8] c"    return clamp( col, 0.0, 1.0 );\00"
@Lt_0B3A = private constant [51 x i8] c"mat3 setCamera( in vec3 ro, in vec3 ta, float cr )\00"
@Lt_0B3B = private constant [29 x i8] c"\09vec3 cw = normalize(ta-ro);\00"
@Lt_0B3C = private constant [39 x i8] c"\09vec3 cp = vec3(sin(cr), cos(cr),0.0);\00"
@Lt_0B3D = private constant [38 x i8] c"\09vec3 cu = normalize( cross(cw,cp) );\00"
@Lt_0B3E = private constant [38 x i8] c"\09vec3 cv =          ( cross(cu,cw) );\00"
@Lt_0B3F = private constant [31 x i8] c"    return mat3( cu, cv, cw );\00"
@Lt_0B40 = private constant [41 x i8] c"mat3 setCamera( in vec3 ro, in vec3 rt )\00"
@Lt_0B41 = private constant [31 x i8] c"    vec3 w = normalize(ro-rt);\00"
@Lt_0B42 = private constant [33 x i8] c"    float m = sqrt(1.0-w.y*w.y);\00"
@Lt_0B43 = private constant [38 x i8] c"    return mat3( w.z,     0.0, -w.x, \00"
@Lt_0B44 = private constant [41 x i8] c"                 0.0,     m*m, -w.z*w.y,\00"
@Lt_0B45 = private constant [41 x i8] c"                 w.x*m, w.y*m,  w.z*m );\00"
@Lt_0B46 = private constant [29 x i8] c"vec3 cycle(vec3 c, float s) \00"
@Lt_0B47 = private constant [56 x i8] c"\09float Cycles = max(1.175494351e-38F,3.402823466e+38F);\00"
@Lt_0B48 = private constant [95 x i8] c"\09return vec3(PI*0.125)+(PI*0.125)*vec3(cos(s*Cycles+c.x),cos(s*Cycles+c.y),cos(s*Cycles+c.z));\00"
@Lt_0B49 = private constant [21 x i8] c"vec3 getColor(int o)\00"
@Lt_0B4A = private constant [36 x i8] c"\09vec4 Z = vec4(0.3, 0.5, 0.6, 0.2);\00"
@Lt_0B4B = private constant [37 x i8] c"\09vec4 Y = vec4(0.1, 0.5, 1.0, -0.5);\00"
@Lt_0B4C = private constant [36 x i8] c"\09vec4 X = vec4(0.7, 0.8, 1.0, 0.3);\00"
@Lt_0B4D = private constant [105 x i8] c"\09vec3 orbitColor = cycle(X.xyz,ot.x)*X.w*ot.x + cycle(Y.xyz,ot.y)*Y.w*ot.y + cycle(Z.xyz,ot.z)*Z.w*ot.z;\00"
@Lt_0B4E = private constant [48 x i8] c"\09if (orbitColor.x >= 1.05125) orbitColor.x =0.;\00"
@Lt_0B4F = private constant [48 x i8] c"\09if (orbitColor.y >= 1.05125) orbitColor.y =0.;\00"
@Lt_0B50 = private constant [48 x i8] c"\09if (orbitColor.z >= 1.05125) orbitColor.z =0.;\00"
@Lt_0B51 = private constant [43 x i8] c"\09return clamp(3.0*orbitColor,0.0,1.05125);\00"
@Lt_0B52 = private constant [20 x i8] c"float scene(vec3 p)\00"
@Lt_0B53 = private constant [46 x i8] c"\09return min(100.-length(p) , abs(flame(p)) );\00"
@Lt_0B54 = private constant [34 x i8] c"vec4 raymarch(vec3 org, vec3 dir)\00"
@Lt_0B55 = private constant [40 x i8] c"\09float d = 0.0, glow = 0.0, eps = 0.02;\00"
@Lt_0B56 = private constant [16 x i8] c"\09vec3  p = org;\00"
@Lt_0B57 = private constant [22 x i8] c"\09bool glowed = false;\00"
@Lt_0B58 = private constant [25 x i8] c"\09for(int i=0; i<64; i++)\00"
@Lt_0B59 = private constant [22 x i8] c"\09\09d = scene(p) + eps;\00"
@Lt_0B5A = private constant [16 x i8] c"\09\09p += d * dir;\00"
@Lt_0B5B = private constant [14 x i8] c"\09\09if( d>eps )\00"
@Lt_0B5C = private constant [4 x i8] c"\09\09{\00"
@Lt_0B5D = private constant [21 x i8] c"\09\09\09if(flame(p) < .0)\00"
@Lt_0B5E = private constant [17 x i8] c"\09\09\09\09glowed=true;\00"
@Lt_0B5F = private constant [14 x i8] c"\09\09\09if(glowed)\00"
@Lt_0B60 = private constant [31 x i8] c"       \09\09\09glow = float(i)/64.;\00"
@Lt_0B61 = private constant [4 x i8] c"\09\09}\00"
@Lt_0B62 = private constant [22 x i8] c"\09return vec4(p,glow);\00"
@Lt_0B63 = private constant [35 x i8] c"float displacementSimple( vec2 p )\00"
@Lt_0B64 = private constant [13 x i8] c"    float f;\00"
@Lt_0B65 = private constant [63 x i8] c"    f  = 0.5000* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0B66 = private constant [63 x i8] c"    f += 0.2500* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0B67 = private constant [63 x i8] c"    f += 0.1250* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0B68 = private constant [63 x i8] c"    f += 0.0625* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0B69 = private constant [14 x i8] c"    return f;\00"
@Lt_0B6A = private constant [43 x i8] c"vec3 getSceneColor(vec3 p, float material)\00"
@Lt_0B6B = private constant [19 x i8] c"\09if(material==1.0)\00"
@Lt_0B6C = private constant [30 x i8] c"\09\09return vec3(1.0, 0.5, 0.5);\00"
@Lt_0B6D = private constant [24 x i8] c"\09else if(material==2.0)\00"
@Lt_0B6E = private constant [30 x i8] c"\09\09return vec3(0.5, 1.0, 0.5);\00"
@Lt_0B6F = private constant [24 x i8] c"\09else if(material==3.0)\00"
@Lt_0B70 = private constant [30 x i8] c"\09\09return vec3(0.5, 0.5, 1.0);\00"
@Lt_0B71 = private constant [29 x i8] c"\09return vec3(0.0, 0.0, 0.0);\00"
@Lt_0B72 = private constant [53 x i8] c"float getClosestDistance(vec3 p, out float material)\00"
@Lt_0B73 = private constant [16 x i8] c"\09float d = 0.0;\00"
@Lt_0B74 = private constant [29 x i8] c"#if D_MAX_STEP_LENGTH_ENABLE\00"
@Lt_0B75 = private constant [76 x i8] c"    float minD = 1.0; // restrict max step for better scattering evaluation\00"
@Lt_0B76 = private constant [26 x i8] c"\09float minD = 10000000.0;\00"
@Lt_0B77 = private constant [17 x i8] c"\09material = 0.0;\00"
@Lt_0B78 = private constant [24 x i8] c"    float yNoise = 0.0;\00"
@Lt_0B79 = private constant [24 x i8] c"    float xNoise = 0.0;\00"
@Lt_0B7A = private constant [24 x i8] c"    float zNoise = 0.0;\00"
@Lt_0B7B = private constant [21 x i8] c"#if D_DETAILED_WALLS\00"
@Lt_0B7C = private constant [64 x i8] c"    yNoise = 1.0*clamp(displacementSimple(p.xz*0.005),0.0,1.0);\00"
@Lt_0B7D = private constant [64 x i8] c"    xNoise = 2.0*clamp(displacementSimple(p.zy*0.005),0.0,1.0);\00"
@Lt_0B7E = private constant [63 x i8] c"    zNoise = 0.5*clamp(displacementSimple(p.xy*0.01),0.0,1.0);\00"
@Lt_0B7F = private constant [29 x i8] c"\09d = max(0.0, p.y - yNoise);\00"
@Lt_0B80 = private constant [12 x i8] c"\09if(d<minD)\00"
@Lt_0B81 = private constant [12 x i8] c"\09\09minD = d;\00"
@Lt_0B82 = private constant [18 x i8] c"\09\09material = 2.0;\00"
@Lt_0B83 = private constant [28 x i8] c"\09d = max(0.0,p.x - xNoise);\00"
@Lt_0B84 = private constant [18 x i8] c"\09\09material = 1.0;\00"
@Lt_0B85 = private constant [33 x i8] c"\09d = max(0.0,40.0-p.x - xNoise);\00"
@Lt_0B86 = private constant [29 x i8] c"\09d = max(0.0,-p.z - zNoise);\00"
@Lt_0B87 = private constant [18 x i8] c"\09\09material = 3.0;\00"
@Lt_0B88 = private constant [14 x i8] c"\09return minD;\00"
@Lt_0B89 = private constant [32 x i8] c"vec3 evaluateLight(in vec3 pos)\00"
@Lt_0B8A = private constant [26 x i8] c"    vec3 lightPos = LPOS;\00"
@Lt_0B8B = private constant [26 x i8] c"    vec3 lightCol = LCOL;\00"
@Lt_0B8C = private constant [27 x i8] c"    vec3 L = lightPos-pos;\00"
@Lt_0B8D = private constant [36 x i8] c"    return lightCol * 1.0/dot(L,L);\00"
@Lt_0B8E = private constant [48 x i8] c"vec3 evaluateLight(in vec3 pos, in vec3 normal)\00"
@Lt_0B8F = private constant [35 x i8] c"    float distanceToL = length(L);\00"
@Lt_0B90 = private constant [32 x i8] c"    vec3 Lnorm = L/distanceToL;\00"
@Lt_0B91 = private constant [60 x i8] c"    return max(0.0,dot(normal,Lnorm)) * evaluateLight(pos);\00"
@Lt_0B92 = private constant [65 x i8] c"// To simplify: wavelength independent scattering and extinction\00"
@Lt_0B93 = private constant [76 x i8] c"void getParticipatingMedia(out float sigmaS, out float sigmaE, in vec3 pos)\00"
@Lt_0B94 = private constant [106 x i8] c"    float heightFog = 7.0 + D_FOG_NOISE*3.0*clamp(displacementSimple(pos.xz*0.005 + iTime*0.01),0.0,1.0);\00"
@Lt_0B95 = private constant [60 x i8] c"    heightFog = 0.3*clamp((heightFog-pos.y)*1.0, 0.0, 1.0);\00"
@Lt_0B96 = private constant [54 x i8] c"    const float fogFactor = 1.0 + D_STRONG_FOG * 5.0;\00"
@Lt_0B97 = private constant [36 x i8] c"    const float sphereRadius = 5.0;\00"
@Lt_0B98 = private constant [101 x i8] c"    float sphereFog = clamp((sphereRadius-length(pos-vec3(20.0,19.0,-17.0)))/sphereRadius, 0.0,1.0);\00"
@Lt_0B99 = private constant [36 x i8] c"    const float constantFog = 0.02;\00"
@Lt_0B9A = private constant [60 x i8] c"    sigmaS = constantFog + heightFog*fogFactor + sphereFog;\00"
@Lt_0B9B = private constant [30 x i8] c"    const float sigmaA = 0.0;\00"
@Lt_0B9C = private constant [88 x i8] c"    sigmaE = max(0.000000001, sigmaA + sigmaS); // to avoid division by zero extinction\00"
@Lt_0B9D = private constant [22 x i8] c"float phaseFunction()\00"
@Lt_0B9E = private constant [27 x i8] c"    return 1.0/(4.0*3.14);\00"
@Lt_0B9F = private constant [49 x i8] c"float volumetricShadow(in vec3 from, in vec3 to)\00"
@Lt_0BA0 = private constant [27 x i8] c"#if D_VOLUME_SHADOW_ENABLE\00"
@Lt_0BA1 = private constant [82 x i8] c"    const float numStep = 16.0; // quality control. Bump to avoid shadow alisaing\00"
@Lt_0BA2 = private constant [24 x i8] c"    float shadow = 1.0;\00"
@Lt_0BA3 = private constant [24 x i8] c"    float sigmaS = 0.0;\00"
@Lt_0BA4 = private constant [24 x i8] c"    float sigmaE = 0.0;\00"
@Lt_0BA5 = private constant [42 x i8] c"    float dd = length(to-from) / numStep;\00"
@Lt_0BA6 = private constant [98 x i8] c"    for(float s=0.5; s<(numStep-0.1); s+=1.0)// start at 0.5 to sample at center of integral part\00"
@Lt_0BA7 = private constant [51 x i8] c"        vec3 pos = from + (to-from)*(s/(numStep));\00"
@Lt_0BA8 = private constant [52 x i8] c"        getParticipatingMedia(sigmaS, sigmaE, pos);\00"
@Lt_0BA9 = private constant [37 x i8] c"        shadow *= exp(-sigmaE * dd);\00"
@Lt_0BAA = private constant [19 x i8] c"    return shadow;\00"
@Lt_0BAB = private constant [16 x i8] c"    return 1.0;\00"
@Lt_0BAD = private constant [140 x i8] c"void traceScene(bool improvedScattering, vec3 rO, vec3 rD, inout vec3 finalPos, inout vec3 normal, inout vec3 albedo, inout vec4 scatTrans)\00"
@Lt_0BAE = private constant [26 x i8] c"\09const int numIter = 100;\00"
@Lt_0BAF = private constant [62 x i8] c"    // Initialise volumetric scattering integration (to view)\00"
@Lt_0BB0 = private constant [31 x i8] c"    float transmittance = 1.0;\00"
@Lt_0BB1 = private constant [47 x i8] c"    vec3 scatteredLight = vec3(0.0, 0.0, 0.0);\00"
@Lt_0BB2 = private constant [74 x i8] c"\09float d = 1.0; // hack: always have a first step of 1 unit to go further\00"
@Lt_0BB3 = private constant [23 x i8] c"\09float material = 0.0;\00"
@Lt_0BB4 = private constant [31 x i8] c"\09vec3 p = vec3(0.0, 0.0, 0.0);\00"
@Lt_0BB5 = private constant [20 x i8] c"    float dd = 0.0;\00"
@Lt_0BB6 = private constant [29 x i8] c"\09for(int i=0; i<numIter;++i)\00"
@Lt_0BB7 = private constant [22 x i8] c"\09\09vec3 p = rO + d*rD;\00"
@Lt_0BB8 = private constant [47 x i8] c"    \09getParticipatingMedia(sigmaS, sigmaE, p);\00"
@Lt_0BB9 = private constant [69 x i8] c"        if(D_USE_IMPROVE_INTEGRATION>0) // freedom/tweakable version\00"
@Lt_0BBA = private constant [31 x i8] c"        if(improvedScattering)\00"
@Lt_0BBB = private constant [10 x i8] c"        {\00"
@Lt_0BBD = private constant [124 x i8] c"            // See slide 28 at http://www.frostbite.com/2015/08/physically-based-unified-volumetric-rendering-in-frostbite/\00"
@Lt_0BBE = private constant [113 x i8] c"            vec3 S = evaluateLight(p) * sigmaS * phaseFunction()* volumetricShadow(p,lightPos);// incoming light\00"
@Lt_0BBF = private constant [106 x i8] c"            vec3 Sint = (S - S * exp(-sigmaE * dd)) / sigmaE; // integrate along the current step segment\00"
@Lt_0BC1 = private constant [131 x i8] c"            scatteredLight += transmittance * Sint; // accumulate and also take into account the transmittance from previous steps\00"
@Lt_0BC2 = private constant [61 x i8] c"            // Evaluate transmittance to view independentely\00"
@Lt_0BC3 = private constant [48 x i8] c"            transmittance *= exp(-sigmaE * dd);\00"
@Lt_0BC4 = private constant [7 x i8] c"\09\09else\00"
@Lt_0BC5 = private constant [57 x i8] c"            // Basic scatering/transmittance integration\00"
@Lt_0BC6 = private constant [33 x i8] c"        #if D_UPDATE_TRANS_FIRST\00"
@Lt_0BC7 = private constant [15 x i8] c"        #endif\00"
@Lt_0BC9 = private constant [127 x i8] c"            scatteredLight += sigmaS * evaluateLight(p) * phaseFunction() * volumetricShadow(p,lightPos) * transmittance * dd;\00"
@Lt_0BCA = private constant [34 x i8] c"        #if !D_UPDATE_TRANS_FIRST\00"
@Lt_0BCB = private constant [3 x i8] c"\09\09\00"
@Lt_0BCC = private constant [46 x i8] c"        dd = getClosestDistance(p, material);\00"
@Lt_0BCD = private constant [19 x i8] c"        if(dd<0.2)\00"
@Lt_0BCE = private constant [82 x i8] c"            break; // give back a lot of performance without too much visual loss\00"
@Lt_0BCF = private constant [11 x i8] c"\09\09d += dd;\00"
@Lt_0BD0 = private constant [38 x i8] c"\09albedo = getSceneColor(p, material);\00"
@Lt_0BD1 = private constant [26 x i8] c"    finalPos = rO + d*rD;\00"
@Lt_0BD2 = private constant [35 x i8] c"    normal = calcNormal(finalPos);\00"
@Lt_0BD3 = private constant [53 x i8] c"    scatTrans = vec4(scatteredLight, transmittance);\00"
@Lt_0BD4 = private constant [56 x i8] c"void mainImage( out vec4 fragColor, in vec2 fragCoord )\00"
@Lt_0BD9 = private constant [11 x i8] c"vec2 uv,p;\00"
@Lt_0BDC = private constant [36 x i8] c"vec2 uv = fragCoord/iResolution.xy;\00"
@Lt_0BDF = private constant [39 x i8] c"vec2 uv = fragCoord.xy/iResolution.xy;\00"
@Lt_0BE2 = private constant [43 x i8] c"vec2 uv = fragCoord.xy/iResolution.xy-0.5;\00"
@Lt_0BE5 = private constant [59 x i8] c"vec2 uv = (fragCoord.xy * 2.0 / iResolution.xy) - vec2(1);\00"
@Lt_0BE8 = private constant [42 x i8] c"vec2 uv2= gl_FragCoord.xy/iResolution.xy;\00"
@Lt_0BEB = private constant [80 x i8] c"vec2 uv2 = vec2(2.0,2.0*hfactor)*fragCoord.xy/iResolution.xy-vec2(1.0,hfactor);\00"
@Lt_0BEE = private constant [36 x i8] c"vec2 mo = iMouse.xy/iResolution.xy;\00"
@Lt_0BF1 = private constant [52 x i8] c"vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\00"
@Lt_0BF4 = private constant [55 x i8] c"vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\00"
@Lt_0BF7 = private constant [56 x i8] c"vec2 p = (-iResolution.xy+2.0*fragCoord)/iResolution.y;\00"
@Lt_0BFA = private constant [59 x i8] c"vec2 p = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\00"
@Lt_0BFD = private constant [59 x i8] c"vec2 p = (2.0*(fragCoord+o)-iResolution.xy)/iResolution.y;\00"
@Lt_0C00 = private constant [60 x i8] c"vec2 p = (-iResolution.xy+2.0*(fragCoord+o))/iResolution.y;\00"
@Lt_0C03 = private constant [64 x i8] c"vec2 p = (-iResolution.xy+2.0*(fragCoord.xy+rr))/iResolution.y;\00"
@Lt_0C06 = private constant [72 x i8] c"vec2 px = (2.0*(fragCoord+vec2(1.0,0.0))-iResolution.xy)/iResolution.y;\00"
@Lt_0C09 = private constant [72 x i8] c"vec2 py = (2.0*(fragCoord+vec2(0.0,1.0))-iResolution.xy)/iResolution.y;\00"
@Lt_0C0C = private constant [35 x i8] c"vec2 q = fragCoord/iResolution.xy;\00"
@Lt_0C0F = private constant [38 x i8] c"vec2 q = fragCoord.xy/iResolution.xy;\00"
@Lt_0C12 = private constant [43 x i8] c"vec2 q = (fragCoord.xy+rr)/iResolution.xy;\00"
@Lt_0C15 = private constant [50 x i8] c"vec2 rr = vec2( float(m), float(n) ) / float(AA);\00"
@Lt_0C18 = private constant [53 x i8] c"vec2 v = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\00"
@Lt_0C1B = private constant [18 x i8] c"vec3 v=vec3(0.0);\00"
@Lt_0C1E = private constant [22 x i8] c"vec3 p=from+s*dir*.5;\00"
@Lt_0C21 = private constant [25 x i8] c"vec3 c = render(ro, rd);\00"
@Lt_0C24 = private constant [27 x i8] c"vec3 from=vec3(1.,.5,0.5);\00"
@Lt_0C27 = private constant [27 x i8] c"vec3 dir=vec3(uv*zoom,1.);\00"
@Lt_0C2A = private constant [22 x i8] c"vec3 col = vec3(0.0);\00"
@Lt_0C2D = private constant [32 x i8] c"vec3 col = render( ro, rd, q );\00"
@Lt_0C30 = private constant [35 x i8] c"vec3 col = render( ro, rd, time );\00"
@Lt_0C33 = private constant [39 x i8] c"vec3 col = render( ro, rd, rdx, rdy );\00"
@Lt_0C36 = private constant [52 x i8] c"vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\00"
@Lt_0C39 = private constant [26 x i8] c"vec3 ta = vec3( 0,0.4,0);\00"
@Lt_0C3C = private constant [30 x i8] c"vec3 ta = vec3(-0.6,0.2,0.0);\00"
@Lt_0C3F = private constant [35 x i8] c"vec3 ta = vec3( 0.5, -0.4, -0.5 );\00"
@Lt_0C42 = private constant [36 x i8] c"vec3 ta = vec3( -0.5, -0.4,  0.5 );\00"
@Lt_0C45 = private constant [52 x i8] c"vec3 ta = vec3( 0.0, 0.65, -0.6+time*1.0 - 0.4*cl);\00"
@Lt_0C48 = private constant [9 x i8] c"vec3 ro;\00"
@Lt_0C4B = private constant [57 x i8] c"vec3 ro = ta + vec3( 1.3*cos(an), -0.250, 1.3*sin(an) );\00"
@Lt_0C4E = private constant [62 x i8] c"vec3 ro = vec3(-0.4,0.2,0.0) + 2.2*vec3(cos(an),0.0,sin(an));\00"
@Lt_0C51 = private constant [62 x i8] c"vec3 ro = vec3(cos(time + mo.x)*X, Y, X*sin(time + mo.x) )*R;\00"
@Lt_0C54 = private constant [99 x i8] c"vec3 ro = ta + vec3( 4.5*cos(0.1*time + 6.0*mo.x), 1.0 + 2.0*mo.y, 4.5*sin(0.1*time + 6.0*mo.x) );\00"
@Lt_0C57 = private constant [105 x i8] c"vec3 ro = vec3( -0.5+3.5*cos(0.1*time + 6.0*mo.x), 1.0 + 2.0*mo.y, 0.5 + 4.0*sin(0.1*time + 6.0*mo.x) );\00"
@Lt_0C5A = private constant [22 x i8] c"vec3 tot = vec3(0.0);\00"
@Lt_0C5D = private constant [40 x i8] c"vec3 rd = ca * normalize( vec3(p,2.5));\00"
@Lt_0C60 = private constant [40 x i8] c"vec3 rd = ca * normalize( vec3(p,1.8));\00"
@Lt_0C63 = private constant [41 x i8] c"vec3 rd = normalize( ca * vec3(p,-2.8));\00"
@Lt_0C66 = private constant [43 x i8] c"vec3 rd = normalize(p.x*cu+p.y*cv+7.5*cw);\00"
@Lt_0C69 = private constant [44 x i8] c"vec3 rd = ca * normalize( vec3(uv.xy,2.5));\00"
@Lt_0C6C = private constant [44 x i8] c"vec3 rd = ca  * normalize( vec3(p.xy,2.0));\00"
@Lt_0C6F = private constant [42 x i8] c"vec3 rdx = ca * normalize( vec3(px,2.5));\00"
@Lt_0C72 = private constant [42 x i8] c"vec3 rdy = ca * normalize( vec3(py,2.5));\00"
@Lt_0C75 = private constant [46 x i8] c"vec3 cw = normalize(vec3(0., 0.25, 0.) - ro);\00"
@Lt_0C78 = private constant [31 x i8] c"vec3 cp = vec3(0.0, 1.0, 0.0);\00"
@Lt_0C7B = private constant [36 x i8] c"vec3 cu = normalize(cross(cw, cp));\00"
@Lt_0C7E = private constant [36 x i8] c"vec3 cv = normalize(cross(cu, cw));\00"
@Lt_0C81 = private constant [23 x i8] c"vec3 pos = ro + rd *t;\00"
@Lt_0C84 = private constant [28 x i8] c"vec3 nor = calcNormal(pos);\00"
@Lt_0C87 = private constant [29 x i8] c"vec3 ligvec = SURFACE_COLOR;\00"
@Lt_0C8A = private constant [30 x i8] c"vec3 lig = normalize(ligvec);\00"
@Lt_0C8D = private constant [39 x i8] c"vec3 color = (3.5-0.35*t)*getColor(1);\00"
@Lt_0C90 = private constant [22 x i8] c"vec3 ro2r = pos-rd/t;\00"
@Lt_0C93 = private constant [29 x i8] c"vec3 rd2r = reflect(rd,nor);\00"
@Lt_0C96 = private constant [24 x i8] c"vec3 pos2r = vec3(0.0);\00"
@Lt_0C99 = private constant [32 x i8] c"vec3 nor2r = calcNormal(pos2r);\00"
@Lt_0C9C = private constant [33 x i8] c"vec3 rd2 = refract(rd,nor,0.78);\00"
@Lt_0C9F = private constant [27 x i8] c"vec3 pos2 = pos + rd2* t2;\00"
@Lt_0CA2 = private constant [30 x i8] c"vec3 nor2 = calcNormal(pos2);\00"
@Lt_0CA5 = private constant [20 x i8] c"vec3 ro3 = pos2+rd;\00"
@Lt_0CA8 = private constant [45 x i8] c"vec3 rd3 = rd2+0.002*rand1(gl_FragCoord.xy);\00"
@Lt_0CAB = private constant [27 x i8] c"vec3 pos3 = ro3 + rd3* t3;\00"
@Lt_0CAE = private constant [30 x i8] c"vec3 nor3 = calcNormal(pos3);\00"
@Lt_0CB1 = private constant [30 x i8] c"vec3 org = vec3(0., -2., 4.);\00"
@Lt_0CB4 = private constant [49 x i8] c"vec3 dir = normalize(vec3(v.x*1.6, -v.y, -1.5));\00"
@Lt_0CB7 = private constant [29 x i8] c"vec4 p = raymarch(org, dir);\00"
@Lt_0CBA = private constant [67 x i8] c"vec4 col = mix(vec4(1.,.5,.1,1.), vec4(0.1,.5,1.,1.), p.y*.02+.4);\00"
@Lt_0CBD = private constant [18 x i8] c"vec3 rO = camPos;\00"
@Lt_0CC0 = private constant [20 x i8] c"vec3 finalPos = rO;\00"
@Lt_0CC3 = private constant [36 x i8] c"vec3 camX   = vec3( 1.0, 0.0, 0.0);\00"
@Lt_0CC6 = private constant [36 x i8] c"vec3 camY   = vec3( 0.0, 1.0, 0.0);\00"
@Lt_0CC9 = private constant [36 x i8] c"vec3 camZ   = vec3( 0.0, 0.0, 1.0);\00"
@Lt_0CCC = private constant [36 x i8] c"vec3 albedo = vec3( 0.0, 0.0, 0.0);\00"
@Lt_0CCF = private constant [36 x i8] c"vec3 normal = vec3( 0.0, 0.0, 0.0);\00"
@Lt_0CD2 = private constant [39 x i8] c"vec3 camPos = vec3( 20.0, 18.0,-50.0);\00"
@Lt_0CD5 = private constant [53 x i8] c"vec3 rD = normalize(uv2.x*camX + uv2.y*camY + camZ);\00"
@Lt_0CD8 = private constant [89 x i8] c"vec3 color=(albedo/3.14)*evaluateLight(finalPos,normal)*volumetricShadow(finalPos,LPOS);\00"
@Lt_0CDB = private constant [45 x i8] c"vec4 scatTrans = vec4( 0.0, 0.0, 0.0, 0.0 );\00"
@Lt_0CDE = private constant [25 x i8] c"fragColor = vec4(c,1.0);\00"
@Lt_0CE1 = private constant [27 x i8] c"fragColor = vec4(col,1.0);\00"
@Lt_0CE4 = private constant [27 x i8] c"fragColor = vec4(tot,1.0);\00"
@Lt_0CE7 = private constant [29 x i8] c"fragColor = vec4(color,1.0);\00"
@Lt_0CEA = private constant [30 x i8] c"fragColor = vec4(v*0.01,1.0);\00"
@Lt_0CED = private constant [33 x i8] c"fragColor = vec4(col*blend,1.0);\00"
@Lt_0CF0 = private constant [30 x i8] c"fragColor.rgb += bgColor(uv);\00"
@Lt_0CF3 = private constant [31 x i8] c"fragColor.rgb = render(ro,rd);\00"
@Lt_0CF6 = private constant [64 x i8] c"fragColor.rgb += beam(uv*vec2(iResolution.x/iResolution.y, 1));\00"
@Lt_0CF9 = private constant [65 x i8] c"fragColor.rgb += prism(uv*vec2(iResolution.x/iResolution.y, 1));\00"
@Lt_0CFC = private constant [49 x i8] c"fragColor = mix(vec4(0.), col, pow(glow*2.,4.));\00"
@Lt_0CFF = private constant [88 x i8] c"fragColor = vec4(sunmask*sunColor(uv * vec2(iResolution.x/iResolution.y / 1.4, 1)), 1);\00"
@Lt_0D02 = private constant [19 x i8] c"float pa,a=pa=0.0;\00"
@Lt_0D05 = private constant [22 x i8] c"float s=0.1,fade=1.0;\00"
@Lt_0D08 = private constant [38 x i8] c"float dm=max(0.,darkmatter-a*a*.001);\00"
@Lt_0D0B = private constant [39 x i8] c"float a1=.5+iMouse.x/iResolution.x*2.;\00"
@Lt_0D0E = private constant [39 x i8] c"float a2=.8+iMouse.y/iResolution.y*2.;\00"
@Lt_0D11 = private constant [18 x i8] c"float glow = p.w;\00"
@Lt_0D14 = private constant [15 x i8] c"float R = 4.3;\00"
@Lt_0D17 = private constant [21 x i8] c"float Y = sin(mo.y);\00"
@Lt_0D1A = private constant [21 x i8] c"float X = cos(mo.y);\00"
@Lt_0D1D = private constant [28 x i8] c"float x = 3.0 * cos(theta);\00"
@Lt_0D20 = private constant [28 x i8] c"float z = 3.0 * sin(theta);\00"
@Lt_0D23 = private constant [20 x i8] c"float time = iTime;\00"
@Lt_0D26 = private constant [23 x i8] c"float time =iTime*0.1;\00"
@Lt_0D29 = private constant [27 x i8] c"float time = 15.0 + iTime;\00"
@Lt_0D2C = private constant [29 x i8] c"float time=iTime*speed+0.25;\00"
@Lt_0D2F = private constant [31 x i8] c"float time = 15.0 + iTime*1.5;\00"
@Lt_0D32 = private constant [70 x i8] c"float time = iTime - 0.5*(1.0/24.0)*(float(m*AA+n)+d)/float(AA*AA-1);\00"
@Lt_0D35 = private constant [26 x i8] c"float cl = sin(0.5*time);\00"
@Lt_0D38 = private constant [38 x i8] c"float an = 1.57 + 0.7*sin(0.15*time);\00"
@Lt_0D3B = private constant [45 x i8] c"float an = 1.87 - 0.04*(1.0-cos(0.5*iTime));\00"
@Lt_0D3E = private constant [61 x i8] c"float d = 0.5*sin(fragCoord.x*147.0)*sin(fragCoord.y*131.0);\00"
@Lt_0D41 = private constant [29 x i8] c"float ti = fract(time-0.15);\00"
@Lt_0D44 = private constant [41 x i8] c"float t4 = abs(fract(time*0.5)-0.5)/0.5;\00"
@Lt_0D47 = private constant [87 x i8] c"float sunmask = smoothstep(-sunmaskfeather, sunmaskfeather, uv.y - horizonHeight(uv));\00"
@Lt_0D4A = private constant [27 x i8] c"float bou = -1.0 + 2.0*t4;\00"
@Lt_0D4D = private constant [30 x i8] c"float t = castRay(ro,rd,12.);\00"
@Lt_0D50 = private constant [31 x i8] c"float t2 = castRay2(pos, rd2);\00"
@Lt_0D53 = private constant [33 x i8] c"float sh = softshadow(pos, lig);\00"
@Lt_0D56 = private constant [35 x i8] c"float t3 = castRay(ro3, rd3, 10.);\00"
@Lt_0D59 = private constant [37 x i8] c"float theta = sin(iTime*0.1) * 6.28;\00"
@Lt_0D5C = private constant [38 x i8] c"float t2r = castRay(ro2r, rd2r, 7.0);\00"
@Lt_0D5F = private constant [40 x i8] c"float dif = clamp(dot(lig, nor),0.,1.);\00"
@Lt_0D62 = private constant [46 x i8] c"float dif2 = clamp(dot(lig, nor2), 0.0, 1.0);\00"
@Lt_0D65 = private constant [47 x i8] c"float dif3 = clamp(dot(lig, -nor3), 0.0, 1.0);\00"
@Lt_0D68 = private constant [48 x i8] c"float dif2r = clamp(dot(lig, nor2r), 0.0, 1.0);\00"
@Lt_0D6B = private constant [54 x i8] c"float blend=min(2.*abs(sin((0.1*iTime)*PI/3.2)),1.0);\00"
@Lt_0D6E = private constant [63 x i8] c"float spec = pow(clamp(dot(reflect(rd, nor), lig),0.,1.),16.);\00"
@Lt_0D71 = private constant [66 x i8] c"float spec2 = pow(clamp(dot(reflect(rd2, nor2), lig),0.,1.),16.);\00"
@Lt_0D74 = private constant [75 x i8] c"float spec2r = pow(clamp(dot(reflect(rd2r, nor2r), lig), 0.0, 1.0), 16.0);\00"
@Lt_0D77 = private constant [61 x i8] c"float hfactor = float(iResolution.y) / float(iResolution.x);\00"
@Lt_0D7A = private constant [50 x i8] c"mat2 rot1=mat2(cos(a1),sin(a1),-sin(a1),cos(a1));\00"
@Lt_0D7D = private constant [50 x i8] c"mat2 rot2=mat2(cos(a2),sin(a2),-sin(a2),cos(a2));\00"
@Lt_0D80 = private constant [36 x i8] c"mat3 ca = setCamera( ro, ta, 0.0 );\00"
@Lt_0D83 = private constant [31 x i8] c"mat3 ca = setCamera( ro, ta );\00"
@Lt_0D86 = private constant [9 x i8] c"#if AA>1\00"
@Lt_0D89 = private constant [29 x i8] c"for( int m=ZERO; m<AA; m++ )\00"
@Lt_0D8C = private constant [29 x i8] c"for( int n=ZERO; n<AA; n++ )\00"
@Lt_0D8F = private constant [33 x i8] c"for (int r=0; r<volsteps; r++) {\00"
@Lt_0D92 = private constant [35 x i8] c"for (int i=0; i<iterations; i++) {\00"
@Lt_0D9B = private constant [15 x i8] c"col+=.6*spec2;\00"
@Lt_0D9E = private constant [16 x i8] c"col.g+=.3*dif2;\00"
@Lt_0DA1 = private constant [17 x i8] c"col.r+=0.3*dif2;\00"
@Lt_0DA4 = private constant [17 x i8] c"col.b+=0.3*dif2;\00"
@Lt_0DA7 = private constant [21 x i8] c"col /= float(AA*AA);\00"
@Lt_0DAA = private constant [21 x i8] c"col+=0.1*dif3*color;\00"
@Lt_0DAD = private constant [26 x i8] c"col*=clamp(sh, 0.0, 1.0);\00"
@Lt_0DB0 = private constant [26 x i8] c"col /= sin(float(AA*AA));\00"
@Lt_0DB3 = private constant [26 x i8] c"col = 1.35*col/(1.0+col);\00"
@Lt_0DB6 = private constant [27 x i8] c"col+=0.04*(1.-dif3)*color;\00"
@Lt_0DB9 = private constant [27 x i8] c"col-=1.-dot(uv,1.-uv)*2.4;\00"
@Lt_0DBC = private constant [28 x i8] c"col=0.3*dif+0.5*color+spec;\00"
@Lt_0DBF = private constant [28 x i8] c"col += render( ro, rd, q );\00"
@Lt_0DC2 = private constant [31 x i8] c"col+=0.1*(dif2r*color+spec2r);\00"
@Lt_0DC5 = private constant [31 x i8] c"col-=0.04*rand1(uv2.xy*iTime);\00"
@Lt_0DC8 = private constant [31 x i8] c"col = pow( col, vec3(0.4545));\00"
@Lt_0DCB = private constant [32 x i8] c"col = col*vec3(1.11,0.89,0.79);\00"
@Lt_0DCE = private constant [40 x i8] c"col*=.9+.1*sin(2.*uv2.y*iResolution.y);\00"
@Lt_0DD1 = private constant [53 x i8] c"col=mix(col, vec3(.4,.5,.6), exp(-(2.-(0.18*t)) ) );\00"
@Lt_0DD4 = private constant [12 x i8] c"tot += col;\00"
@Lt_0DD7 = private constant [21 x i8] c"tot /= float(AA*AA);\00"
@Lt_0DDA = private constant [26 x i8] c"tot = clamp(tot,0.0,1.0);\00"
@Lt_0DDD = private constant [29 x i8] c"tot = tot*tot*(3.0-2.0*tot);\00"
@Lt_0DE0 = private constant [61 x i8] c"tot *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\00"
@Lt_0DE3 = private constant [3 x i8] c" }\00"
@Lt_0DE6 = private constant [14 x i8] c"time += -2.6;\00"
@Lt_0DE9 = private constant [13 x i8] c"time *= 0.9;\00"
@Lt_0DEC = private constant [22 x i8] c"ti = 4.0*ti*(1.0-ti);\00"
@Lt_0DEF = private constant [56 x i8] c"ta.y += 0.15*ti*ti*(3.0-2.0*ti)*smoothstep(0.4,0.9,cl);\00"
@Lt_0DF2 = private constant [79 x i8] c"ro += 0.06*sin(time*12.0+vec3(0.0,2.0,4.0))*smoothstep( 0.85, 1.0, abs(bou) );\00"
@Lt_0DF5 = private constant [35 x i8] c"uv.x*=iResolution.x/iResolution.y;\00"
@Lt_0DF9 = private constant [145 x i8] c"uv.x = 1.0+ (mod(gl_FragCoord.x-(iResolution.x/2.),((iResolution.x/4.)*(-1.5*blend+0.501)+(iResolution.x/4.)))-1.*gl_FragCoord.x)/iResolution.x;\00"
@Lt_0DFD = private constant [173 x i8] c"uv.x = 1.0+(mod(gl_FragCoord.x-sin(iTime)*gl_FragCoord.y-(iResolution.x/2.),((iResolution.x/4.)*(-1.5*blend+0.501) +(iResolution.x/4.)))-(1.*gl_FragCoord.x))/iResolution.x;\00"
@Lt_0E00 = private constant [44 x i8] c"uv.y = 1.0-(gl_FragCoord.y /iResolution.y);\00"
@Lt_0E04 = private constant [173 x i8] c"uv.y = 1.0+(mod(gl_FragCoord.y+sin(iTime)*gl_FragCoord.x-(iResolution.y/2.),((iResolution.y/4.)*(-1.5*blend+0.501) +(iResolution.y/4.)))-(1.*gl_FragCoord.y))/iResolution.y;\00"
@Lt_0E07 = private constant [35 x i8] c"uv.y*=iResolution.y/iResolution.x;\00"
@Lt_0E0A = private constant [22 x i8] c"if (r>6) fade*=1.-dm;\00"
@Lt_0E0D = private constant [31 x i8] c"if (mo.x==mo.y && mo.x==0.0) {\00"
@Lt_0E10 = private constant [22 x i8] c"if (t3>=10.0)t3=10.0;\00"
@Lt_0E13 = private constant [22 x i8] c"if (t>= 12.0) t=12.0;\00"
@Lt_0E16 = private constant [23 x i8] c"if (iTime>150.0) ef=1;\00"
@Lt_0E19 = private constant [36 x i8] c"if (iTime>30.0 && iTime<60.0) ef=1;\00"
@Lt_0E1C = private constant [36 x i8] c"if (iTime>60.0 && iTime<90.0) ef=2;\00"
@Lt_0E1F = private constant [37 x i8] c"if (iTime>90.0 && iTime<120.0) ef=3;\00"
@Lt_0E22 = private constant [37 x i8] c"if (iTime>120.0 && iTime<150.0)ef=0;\00"
@Lt_0E25 = private constant [18 x i8] c"if (ef==0||ef==2)\00"
@Lt_0E28 = private constant [18 x i8] c"if (ef==1||ef==3)\00"
@Lt_0E2B = private constant [48 x i8] c"if (ef==1) ro = vec3(x*0.2+1.0, 4.0, 0.6*z-3.);\00"
@Lt_0E2E = private constant [50 x i8] c"if (ef==4) ro = vec3(0.0, 0.3+0.10*iTime, 0.001);\00"
@Lt_0E31 = private constant [50 x i8] c"if (ef==3) ro = vec3(0.0, 36.-0.24*iTime, 0.001);\00"
@Lt_0E34 = private constant [73 x i8] c"if (ef==0||ef==2) ro = vec3(x*2.0, 2.0+2.*sin((iTime+37.)*0.15), z*1.4);\00"
@Lt_0E37 = private constant [74 x i8] c"if (ef==4){ uv.xy = gl_FragCoord.xy /iResolution.xy; p = uv * 2.0 - 1.0;}\00"
@Lt_0E3A = private constant [89 x i8] c"if (ef==4||ef==2||ef==1) ligvec = vec3(0.4*sin(iTime*0.2), 1.0, 0.4*cos(iTime*0.3))*1.0;\00"
@Lt_0E3D = private constant [28 x i8] c"if(iMouse.x+iMouse.y > 0.0)\00"
@Lt_0E40 = private constant [45 x i8] c"if(abs(fragCoord.x-(iResolution.x*0.5))<0.6)\00"
@Lt_0E43 = private constant [21 x i8] c"mo = vec2(0.42,0.4);\00"
@Lt_0E46 = private constant [12 x i8] c"mo.y+=0.02;\00"
@Lt_0E49 = private constant [13 x i8] c"mo.y *=1.57;\00"
@Lt_0E4C = private constant [12 x i8] c"mo.x*=10.0;\00"
@Lt_0E4F = private constant [29 x i8] c"#define sunmaskfeather 0.013\00"
@Lt_0E52 = private constant [25 x i8] c"p = (1.-uv) * 2.0 - 1.0;\00"
@Lt_0E55 = private constant [30 x i8] c"p=abs(p)/dot(p,p)-formuparam;\00"
@Lt_0E58 = private constant [42 x i8] c"p = abs(vec3(tile)-mod(p,vec3(tile*2.)));\00"
@Lt_0E5B = private constant [36 x i8] c"p.x *= iResolution.x/iResolution.y;\00"
@Lt_0E5E = private constant [26 x i8] c"pos2r = ro2r + rd2r* t2r;\00"
@Lt_0E61 = private constant [22 x i8] c"pos2 = pos + rd2* t2;\00"
@Lt_0E64 = private constant [27 x i8] c"rd2 = refract(rd,nor,0.8);\00"
@Lt_0E67 = private constant [28 x i8] c"rd2 = refract(rd,nor,0.82);\00"
@Lt_0E6A = private constant [25 x i8] c"t2 = castRay2(pos, rd2);\00"
@Lt_0E6D = private constant [25 x i8] c"nor2 = calcNormal(pos2);\00"
@Lt_0E70 = private constant [39 x i8] c"dif2 = clamp(dot(lig, nor2), 0.0,1.0);\00"
@Lt_0E73 = private constant [51 x i8] c"color = clamp(1.+(1.-0.2*t3)*getColor(1),0.0,8.0);\00"
@Lt_0E76 = private constant [15 x i8] c"color.r = 0.5;\00"
@Lt_0E79 = private constant [45 x i8] c"color = color * scatTrans.w + scatTrans.xyz;\00"
@Lt_0E7C = private constant [35 x i8] c"color = pow(color, vec3(1.0/2.2));\00"
@Lt_0E7F = private constant [85 x i8] c"traceScene( fragCoord.x>(iResolution.x/2.0),rO,rD,finalPos,normal,albedo,scatTrans);\00"
@Lt_0E82 = private constant [88 x i8] c"camPos+=vec3(0.05,0.12,0.0)*(vec3(iMouse.x,iMouse.y,0.0)-vec3(iResolution.xy*0.5,0.0));\00"
@Lt_0E85 = private constant [20 x i8] c"#ifndef D_DEMO_FREE\00"
@Lt_0E88 = private constant [36 x i8] c"v.x *= iResolution.x/iResolution.y;\00"
@Lt_0E8B = private constant [9 x i8] c"#if AA<2\00"
@Lt_0EA0 = private constant [11 x i8] c"./chargen/\00"
@Lt_0EA1 = private constant [5 x i8] c".c64\00"
@Lt_0ED0 = private constant [6 x i8] c"wine \00"
@Lt_0ED8 = private constant [8 x i8] c"dosbox \00"
@Lt_0ED9 = private constant [19 x i8] c" -fullscreen -exit\00"
@Lt_0EDE = private constant [5 x i8] c".asm\00"
@Lt_0EE6 = private constant [6 x i8] c"nasm \00"
@Lt_0EE7 = private constant [13 x i8] c".asm -f bin \00"
@Lt_0EE8 = private constant [5 x i8] c".bin\00"
@Lt_0EEF = private constant [29 x i8] c"dosbox -fullscreen -c 'boot \00"
@Lt_0EF0 = private constant [2 x i8] c"'\00"
@Lt_0EF1 = private constant [7 x i8] c" -exit\00"
@Lt_0EF5 = private constant [11 x i8] c"rm tmp.bin\00"
@Lt_1386 = private constant [4 x i8] c"PC:\00"
@Lt_1387 = private constant [4 x i8] c" A:\00"
@Lt_1388 = private constant [4 x i8] c" X:\00"
@Lt_1389 = private constant [4 x i8] c" Y:\00"
@Lt_138A = private constant [4 x i8] c" S:\00"
@Lt_138B = private constant [4 x i8] c" N:\00"
@Lt_138C = private constant [4 x i8] c" V:\00"
@Lt_138D = private constant [3 x i8] c" -\00"
@Lt_138E = private constant [4 x i8] c" B:\00"
@Lt_138F = private constant [4 x i8] c" D:\00"
@Lt_1390 = private constant [4 x i8] c" I:\00"
@Lt_1391 = private constant [4 x i8] c" Z:\00"
@Lt_1392 = private constant [4 x i8] c" C:\00"
@Lt_163D = private constant [4 x i8] c"BRK\00"
@Lt_163E = private constant [2 x i8] c"0\00"
@Lt_163F = private constant [2 x i8] c"1\00"
@Lt_1640 = private constant [2 x i8] c"7\00"
@Lt_1641 = private constant [4 x i8] c"ORA\00"
@Lt_1645 = private constant [3 x i8] c"10\00"
@Lt_1646 = private constant [2 x i8] c"6\00"
@Lt_1647 = private constant [2 x i8] c"2\00"
@Lt_1648 = private constant [4 x i8] c"R32\00"
@Lt_164C = private constant [2 x i8] c"3\00"
@Lt_164D = private constant [4 x i8] c"W32\00"
@Lt_1651 = private constant [4 x i8] c"R64\00"
@Lt_1655 = private constant [2 x i8] c"4\00"
@Lt_1659 = private constant [2 x i8] c"5\00"
@Lt_165A = private constant [4 x i8] c"ASL\00"
@Lt_165E = private constant [4 x i8] c"W64\00"
@Lt_1662 = private constant [4 x i8] c"PHP\00"
@Lt_1666 = private constant [2 x i8] c"8\00"
@Lt_166A = private constant [2 x i8] c"9\00"
@Lt_166E = private constant [4 x i8] c"***\00"
@Lt_1672 = private constant [3 x i8] c"11\00"
@Lt_1676 = private constant [3 x i8] c"12\00"
@Lt_167A = private constant [3 x i8] c"13\00"
@Lt_167E = private constant [3 x i8] c"14\00"
@Lt_1682 = private constant [3 x i8] c"15\00"
@Lt_1683 = private constant [4 x i8] c"BPL\00"
@Lt_1687 = private constant [3 x i8] c"16\00"
@Lt_168B = private constant [3 x i8] c"17\00"
@Lt_168F = private constant [3 x i8] c"18\00"
@Lt_1693 = private constant [3 x i8] c"19\00"
@Lt_1697 = private constant [3 x i8] c"20\00"
@Lt_169B = private constant [3 x i8] c"21\00"
@Lt_169F = private constant [3 x i8] c"22\00"
@Lt_16A3 = private constant [3 x i8] c"23\00"
@Lt_16A4 = private constant [4 x i8] c"CLC\00"
@Lt_16A8 = private constant [3 x i8] c"24\00"
@Lt_16AC = private constant [3 x i8] c"25\00"
@Lt_16B0 = private constant [3 x i8] c"26\00"
@Lt_16B4 = private constant [3 x i8] c"27\00"
@Lt_16B8 = private constant [3 x i8] c"28\00"
@Lt_16BC = private constant [3 x i8] c"29\00"
@Lt_16C0 = private constant [3 x i8] c"30\00"
@Lt_16C4 = private constant [3 x i8] c"31\00"
@Lt_16C5 = private constant [4 x i8] c"JSR\00"
@Lt_16C9 = private constant [3 x i8] c"32\00"
@Lt_16CA = private constant [4 x i8] c"AND\00"
@Lt_16CE = private constant [3 x i8] c"33\00"
@Lt_16D2 = private constant [3 x i8] c"34\00"
@Lt_16D6 = private constant [3 x i8] c"35\00"
@Lt_16D7 = private constant [4 x i8] c"BIT\00"
@Lt_16DB = private constant [3 x i8] c"36\00"
@Lt_16DF = private constant [3 x i8] c"37\00"
@Lt_16E0 = private constant [4 x i8] c"ROL\00"
@Lt_16E4 = private constant [3 x i8] c"38\00"
@Lt_16E8 = private constant [3 x i8] c"39\00"
@Lt_16E9 = private constant [4 x i8] c"PLP\00"
@Lt_16ED = private constant [3 x i8] c"40\00"
@Lt_16F1 = private constant [3 x i8] c"41\00"
@Lt_16F5 = private constant [3 x i8] c"42\00"
@Lt_16F9 = private constant [3 x i8] c"43\00"
@Lt_16FD = private constant [3 x i8] c"44\00"
@Lt_1701 = private constant [3 x i8] c"45\00"
@Lt_1705 = private constant [3 x i8] c"46\00"
@Lt_1709 = private constant [3 x i8] c"47\00"
@Lt_170A = private constant [4 x i8] c"BMI\00"
@Lt_170E = private constant [3 x i8] c"48\00"
@Lt_1712 = private constant [3 x i8] c"49\00"
@Lt_1716 = private constant [3 x i8] c"50\00"
@Lt_171A = private constant [3 x i8] c"51\00"
@Lt_171E = private constant [3 x i8] c"52\00"
@Lt_1722 = private constant [3 x i8] c"53\00"
@Lt_1726 = private constant [3 x i8] c"54\00"
@Lt_172A = private constant [3 x i8] c"55\00"
@Lt_172B = private constant [4 x i8] c"SEC\00"
@Lt_172F = private constant [3 x i8] c"56\00"
@Lt_1733 = private constant [3 x i8] c"57\00"
@Lt_1737 = private constant [3 x i8] c"58\00"
@Lt_173B = private constant [3 x i8] c"59\00"
@Lt_173F = private constant [3 x i8] c"60\00"
@Lt_1743 = private constant [3 x i8] c"61\00"
@Lt_1747 = private constant [3 x i8] c"62\00"
@Lt_174B = private constant [3 x i8] c"63\00"
@Lt_174C = private constant [4 x i8] c"RTI\00"
@Lt_1750 = private constant [3 x i8] c"64\00"
@Lt_1751 = private constant [4 x i8] c"EOR\00"
@Lt_1755 = private constant [3 x i8] c"65\00"
@Lt_1759 = private constant [3 x i8] c"66\00"
@Lt_175D = private constant [3 x i8] c"67\00"
@Lt_1761 = private constant [3 x i8] c"68\00"
@Lt_1765 = private constant [3 x i8] c"69\00"
@Lt_1766 = private constant [4 x i8] c"LSR\00"
@Lt_176A = private constant [3 x i8] c"70\00"
@Lt_176E = private constant [3 x i8] c"71\00"
@Lt_176F = private constant [4 x i8] c"PHA\00"
@Lt_1773 = private constant [3 x i8] c"72\00"
@Lt_1777 = private constant [3 x i8] c"73\00"
@Lt_177B = private constant [3 x i8] c"74\00"
@Lt_177F = private constant [3 x i8] c"75\00"
@Lt_1780 = private constant [4 x i8] c"JMP\00"
@Lt_1784 = private constant [3 x i8] c"76\00"
@Lt_1788 = private constant [3 x i8] c"77\00"
@Lt_178C = private constant [3 x i8] c"78\00"
@Lt_1790 = private constant [3 x i8] c"79\00"
@Lt_1791 = private constant [4 x i8] c"BVC\00"
@Lt_1795 = private constant [3 x i8] c"80\00"
@Lt_1799 = private constant [3 x i8] c"81\00"
@Lt_179D = private constant [3 x i8] c"82\00"
@Lt_17A1 = private constant [3 x i8] c"83\00"
@Lt_17A5 = private constant [3 x i8] c"84\00"
@Lt_17A9 = private constant [3 x i8] c"85\00"
@Lt_17AD = private constant [3 x i8] c"86\00"
@Lt_17B1 = private constant [3 x i8] c"87\00"
@Lt_17B2 = private constant [4 x i8] c"CLI\00"
@Lt_17B6 = private constant [3 x i8] c"88\00"
@Lt_17BA = private constant [3 x i8] c"89\00"
@Lt_17BE = private constant [3 x i8] c"90\00"
@Lt_17C2 = private constant [3 x i8] c"91\00"
@Lt_17C6 = private constant [3 x i8] c"92\00"
@Lt_17CA = private constant [3 x i8] c"93\00"
@Lt_17CE = private constant [3 x i8] c"94\00"
@Lt_17D2 = private constant [3 x i8] c"95\00"
@Lt_17D3 = private constant [4 x i8] c"RTS\00"
@Lt_17D7 = private constant [3 x i8] c"96\00"
@Lt_17D8 = private constant [4 x i8] c"ADC\00"
@Lt_17DC = private constant [3 x i8] c"97\00"
@Lt_17E0 = private constant [3 x i8] c"98\00"
@Lt_17E4 = private constant [3 x i8] c"99\00"
@Lt_17E8 = private constant [4 x i8] c"100\00"
@Lt_17EC = private constant [4 x i8] c"101\00"
@Lt_17ED = private constant [4 x i8] c"ROR\00"
@Lt_17F1 = private constant [4 x i8] c"102\00"
@Lt_17F5 = private constant [4 x i8] c"103\00"
@Lt_17F6 = private constant [4 x i8] c"PLA\00"
@Lt_17FA = private constant [4 x i8] c"104\00"
@Lt_17FE = private constant [4 x i8] c"105\00"
@Lt_1802 = private constant [4 x i8] c"106\00"
@Lt_1806 = private constant [4 x i8] c"107\00"
@Lt_180A = private constant [4 x i8] c"108\00"
@Lt_180E = private constant [4 x i8] c"109\00"
@Lt_1812 = private constant [4 x i8] c"110\00"
@Lt_1816 = private constant [4 x i8] c"111\00"
@Lt_1817 = private constant [4 x i8] c"BVS\00"
@Lt_181B = private constant [4 x i8] c"112\00"
@Lt_181F = private constant [4 x i8] c"113\00"
@Lt_1823 = private constant [4 x i8] c"114\00"
@Lt_1827 = private constant [4 x i8] c"115\00"
@Lt_182B = private constant [4 x i8] c"116\00"
@Lt_182F = private constant [4 x i8] c"117\00"
@Lt_1833 = private constant [4 x i8] c"118\00"
@Lt_1837 = private constant [4 x i8] c"119\00"
@Lt_1838 = private constant [4 x i8] c"SEI\00"
@Lt_183C = private constant [4 x i8] c"120\00"
@Lt_1840 = private constant [4 x i8] c"121\00"
@Lt_1844 = private constant [4 x i8] c"122\00"
@Lt_1848 = private constant [4 x i8] c"123\00"
@Lt_184C = private constant [4 x i8] c"124\00"
@Lt_1850 = private constant [4 x i8] c"125\00"
@Lt_1854 = private constant [4 x i8] c"126\00"
@Lt_1858 = private constant [4 x i8] c"127\00"
@Lt_185C = private constant [4 x i8] c"128\00"
@Lt_185D = private constant [4 x i8] c"STA\00"
@Lt_1861 = private constant [4 x i8] c"129\00"
@Lt_1865 = private constant [4 x i8] c"130\00"
@Lt_1869 = private constant [4 x i8] c"131\00"
@Lt_186A = private constant [4 x i8] c"STY\00"
@Lt_186E = private constant [4 x i8] c"132\00"
@Lt_1872 = private constant [4 x i8] c"133\00"
@Lt_1873 = private constant [4 x i8] c"STX\00"
@Lt_1877 = private constant [4 x i8] c"134\00"
@Lt_187B = private constant [4 x i8] c"135\00"
@Lt_187C = private constant [4 x i8] c"DEY\00"
@Lt_1880 = private constant [4 x i8] c"136\00"
@Lt_1884 = private constant [4 x i8] c"137\00"
@Lt_1885 = private constant [4 x i8] c"TXA\00"
@Lt_1889 = private constant [4 x i8] c"138\00"
@Lt_188D = private constant [4 x i8] c"139\00"
@Lt_1891 = private constant [4 x i8] c"140\00"
@Lt_1895 = private constant [4 x i8] c"141\00"
@Lt_1899 = private constant [4 x i8] c"142\00"
@Lt_189D = private constant [4 x i8] c"143\00"
@Lt_189E = private constant [4 x i8] c"BCC\00"
@Lt_18A2 = private constant [4 x i8] c"144\00"
@Lt_18A6 = private constant [4 x i8] c"145\00"
@Lt_18AA = private constant [4 x i8] c"146\00"
@Lt_18AE = private constant [4 x i8] c"147\00"
@Lt_18B2 = private constant [4 x i8] c"148\00"
@Lt_18B6 = private constant [4 x i8] c"149\00"
@Lt_18BA = private constant [4 x i8] c"150\00"
@Lt_18BE = private constant [4 x i8] c"151\00"
@Lt_18BF = private constant [4 x i8] c"TYA\00"
@Lt_18C3 = private constant [4 x i8] c"152\00"
@Lt_18C7 = private constant [4 x i8] c"153\00"
@Lt_18C8 = private constant [4 x i8] c"TXS\00"
@Lt_18CC = private constant [4 x i8] c"154\00"
@Lt_18D0 = private constant [4 x i8] c"155\00"
@Lt_18D4 = private constant [4 x i8] c"156\00"
@Lt_18D8 = private constant [4 x i8] c"157\00"
@Lt_18DC = private constant [4 x i8] c"158\00"
@Lt_18E0 = private constant [4 x i8] c"159\00"
@Lt_18E1 = private constant [4 x i8] c"LDY\00"
@Lt_18E5 = private constant [4 x i8] c"160\00"
@Lt_18E6 = private constant [4 x i8] c"LDA\00"
@Lt_18EA = private constant [4 x i8] c"161\00"
@Lt_18EB = private constant [4 x i8] c"LDX\00"
@Lt_18EF = private constant [4 x i8] c"162\00"
@Lt_18F3 = private constant [4 x i8] c"163\00"
@Lt_18F7 = private constant [4 x i8] c"164\00"
@Lt_18FB = private constant [4 x i8] c"165\00"
@Lt_18FF = private constant [4 x i8] c"166\00"
@Lt_1903 = private constant [4 x i8] c"167\00"
@Lt_1904 = private constant [4 x i8] c"TAY\00"
@Lt_1908 = private constant [4 x i8] c"168\00"
@Lt_190C = private constant [4 x i8] c"169\00"
@Lt_190D = private constant [4 x i8] c"TAX\00"
@Lt_1911 = private constant [4 x i8] c"170\00"
@Lt_1915 = private constant [4 x i8] c"171\00"
@Lt_1919 = private constant [4 x i8] c"172\00"
@Lt_191D = private constant [4 x i8] c"173\00"
@Lt_1921 = private constant [4 x i8] c"174\00"
@Lt_1925 = private constant [4 x i8] c"175\00"
@Lt_1926 = private constant [4 x i8] c"BCS\00"
@Lt_192A = private constant [4 x i8] c"176\00"
@Lt_192E = private constant [4 x i8] c"177\00"
@Lt_1932 = private constant [4 x i8] c"178\00"
@Lt_1936 = private constant [4 x i8] c"179\00"
@Lt_193A = private constant [4 x i8] c"180\00"
@Lt_193E = private constant [4 x i8] c"181\00"
@Lt_1942 = private constant [4 x i8] c"182\00"
@Lt_1946 = private constant [4 x i8] c"183\00"
@Lt_1947 = private constant [4 x i8] c"CLV\00"
@Lt_194B = private constant [4 x i8] c"184\00"
@Lt_194F = private constant [4 x i8] c"185\00"
@Lt_1950 = private constant [4 x i8] c"TSX\00"
@Lt_1954 = private constant [4 x i8] c"186\00"
@Lt_1958 = private constant [4 x i8] c"187\00"
@Lt_195C = private constant [4 x i8] c"188\00"
@Lt_1960 = private constant [4 x i8] c"189\00"
@Lt_1964 = private constant [4 x i8] c"190\00"
@Lt_1968 = private constant [4 x i8] c"191\00"
@Lt_1969 = private constant [4 x i8] c"CPY\00"
@Lt_196D = private constant [4 x i8] c"192\00"
@Lt_196E = private constant [4 x i8] c"CMP\00"
@Lt_1972 = private constant [4 x i8] c"193\00"
@Lt_1976 = private constant [4 x i8] c"194\00"
@Lt_197A = private constant [4 x i8] c"195\00"
@Lt_197E = private constant [4 x i8] c"196\00"
@Lt_1982 = private constant [4 x i8] c"197\00"
@Lt_1983 = private constant [4 x i8] c"DEC\00"
@Lt_1987 = private constant [4 x i8] c"198\00"
@Lt_198B = private constant [4 x i8] c"199\00"
@Lt_198C = private constant [4 x i8] c"INY\00"
@Lt_1990 = private constant [4 x i8] c"200\00"
@Lt_1994 = private constant [4 x i8] c"201\00"
@Lt_1995 = private constant [4 x i8] c"DEX\00"
@Lt_1999 = private constant [4 x i8] c"202\00"
@Lt_199D = private constant [4 x i8] c"203\00"
@Lt_19A1 = private constant [4 x i8] c"204\00"
@Lt_19A5 = private constant [4 x i8] c"205\00"
@Lt_19A9 = private constant [4 x i8] c"206\00"
@Lt_19AD = private constant [4 x i8] c"207\00"
@Lt_19AE = private constant [4 x i8] c"BNE\00"
@Lt_19B2 = private constant [4 x i8] c"208\00"
@Lt_19B6 = private constant [4 x i8] c"209\00"
@Lt_19BA = private constant [4 x i8] c"210\00"
@Lt_19BE = private constant [4 x i8] c"211\00"
@Lt_19C2 = private constant [4 x i8] c"212\00"
@Lt_19C6 = private constant [4 x i8] c"213\00"
@Lt_19CA = private constant [4 x i8] c"214\00"
@Lt_19CE = private constant [4 x i8] c"215\00"
@Lt_19CF = private constant [4 x i8] c"CLD\00"
@Lt_19D3 = private constant [4 x i8] c"216\00"
@Lt_19D7 = private constant [4 x i8] c"217\00"
@Lt_19DB = private constant [4 x i8] c"218\00"
@Lt_19DF = private constant [4 x i8] c"219\00"
@Lt_19E3 = private constant [4 x i8] c"220\00"
@Lt_19E7 = private constant [4 x i8] c"221\00"
@Lt_19EB = private constant [4 x i8] c"222\00"
@Lt_19EF = private constant [4 x i8] c"223\00"
@Lt_19F0 = private constant [4 x i8] c"CPX\00"
@Lt_19F4 = private constant [4 x i8] c"224\00"
@Lt_19F5 = private constant [4 x i8] c"SBC\00"
@Lt_19F9 = private constant [4 x i8] c"225\00"
@Lt_19FD = private constant [4 x i8] c"226\00"
@Lt_1A01 = private constant [4 x i8] c"227\00"
@Lt_1A05 = private constant [4 x i8] c"228\00"
@Lt_1A09 = private constant [4 x i8] c"229\00"
@Lt_1A0A = private constant [4 x i8] c"INC\00"
@Lt_1A0E = private constant [4 x i8] c"230\00"
@Lt_1A12 = private constant [4 x i8] c"231\00"
@Lt_1A13 = private constant [4 x i8] c"INX\00"
@Lt_1A17 = private constant [4 x i8] c"232\00"
@Lt_1A1B = private constant [4 x i8] c"233\00"
@Lt_1A1C = private constant [4 x i8] c"NOP\00"
@Lt_1A20 = private constant [4 x i8] c"234\00"
@Lt_1A24 = private constant [4 x i8] c"235\00"
@Lt_1A28 = private constant [4 x i8] c"236\00"
@Lt_1A2C = private constant [4 x i8] c"237\00"
@Lt_1A30 = private constant [4 x i8] c"238\00"
@Lt_1A34 = private constant [4 x i8] c"239\00"
@Lt_1A35 = private constant [4 x i8] c"BEQ\00"
@Lt_1A39 = private constant [4 x i8] c"240\00"
@Lt_1A3D = private constant [4 x i8] c"241\00"
@Lt_1A41 = private constant [4 x i8] c"242\00"
@Lt_1A45 = private constant [4 x i8] c"243\00"
@Lt_1A49 = private constant [4 x i8] c"244\00"
@Lt_1A4D = private constant [4 x i8] c"245\00"
@Lt_1A51 = private constant [4 x i8] c"246\00"
@Lt_1A55 = private constant [4 x i8] c"247\00"
@Lt_1A56 = private constant [4 x i8] c"SED\00"
@Lt_1A5A = private constant [4 x i8] c"248\00"
@Lt_1A5E = private constant [4 x i8] c"249\00"
@Lt_1A62 = private constant [4 x i8] c"250\00"
@Lt_1A66 = private constant [4 x i8] c"251\00"
@Lt_1A6A = private constant [4 x i8] c"252\00"
@Lt_1A6E = private constant [4 x i8] c"253\00"
@Lt_1A72 = private constant [4 x i8] c"254\00"
@Lt_1A76 = private constant [4 x i8] c"255\00"
@Lt_1A77 = private constant [4 x i8] c"UNK\00"
@Lt_1A78 = private constant [4 x i8] c"IMP\00"
@Lt_1A7C = private constant [4 x i8] c"IMM\00"
@Lt_1A80 = private constant [4 x i8] c"ABS\00"
@Lt_1A84 = private constant [5 x i8] c"ZERO\00"
@Lt_1A88 = private constant [6 x i8] c"ZEROX\00"
@Lt_1A8C = private constant [6 x i8] c"ZEROY\00"
@Lt_1A90 = private constant [5 x i8] c"ABSX\00"
@Lt_1A94 = private constant [5 x i8] c"ABSY\00"
@Lt_1A98 = private constant [4 x i8] c"REL\00"
@Lt_1A9C = private constant [5 x i8] c"INDX\00"
@Lt_1AA0 = private constant [5 x i8] c"INDY\00"
@Lt_1AA4 = private constant [4 x i8] c"IND\00"
@FLAG = global i64 zeroinitializer
@Lt_1AB9 = private constant [15 x i8] c"save filename:\00"
@Lt_1AC3 = private constant [15 x i8] c"can't create: \00"
@Lt_1AC7 = private constant [15 x i8] c"load filename:\00"
@Lt_1AD1 = private constant [13 x i8] c"can't open: \00"
@.Lt_1AA6 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1AA4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* 0 } ]
@.Lt_1AA2 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1AA0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1AA6 to i8*) } ]
@.Lt_1A9E = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1A9C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1AA2 to i8*) } ]
@.Lt_1A9A = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A98 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A9E to i8*) } ]
@.Lt_1A96 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1A94 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A9A to i8*) } ]
@.Lt_1A92 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1A90 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A96 to i8*) } ]
@.Lt_1A8E = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 5 to i16), i8* bitcast (i8* @Lt_1A8C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A92 to i8*) } ]
@.Lt_1A8A = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 5 to i16), i8* bitcast (i8* @Lt_1A88 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A8E to i8*) } ]
@.Lt_1A86 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1A84 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A8A to i8*) } ]
@.Lt_1A82 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A80 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A86 to i8*) } ]
@.Lt_1A7E = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A7C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A82 to i8*) } ]
@.Lt_1A7A = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A78 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A7E to i8*) } ]
@.Lt_1379 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A77 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A7A to i8*) } ]
@.Lt_1A74 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A76 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1379 to i8*) } ]
@.Lt_1A70 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A72 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A0A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A74 to i8*) } ]
@.Lt_1A6C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A6E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A70 to i8*) } ]
@.Lt_1A68 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A6A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A6C to i8*) } ]
@.Lt_1A64 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A66 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A68 to i8*) } ]
@.Lt_1A60 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A62 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A64 to i8*) } ]
@.Lt_1A5C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A5E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A60 to i8*) } ]
@.Lt_1A58 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A5A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A56 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SED }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A5C to i8*) } ]
@.Lt_1A53 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A55 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A58 to i8*) } ]
@.Lt_1A4F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A51 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A0A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A53 to i8*) } ]
@.Lt_1A4B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A4D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A4F to i8*) } ]
@.Lt_1A47 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A49 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A4B to i8*) } ]
@.Lt_1A43 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A45 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A47 to i8*) } ]
@.Lt_1A3F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A41 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A43 to i8*) } ]
@.Lt_1A3B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A3D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A3F to i8*) } ]
@.Lt_1A37 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A39 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A35 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BEQ }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A3B to i8*) } ]
@.Lt_1A32 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A34 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A37 to i8*) } ]
@.Lt_1A2E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A30 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A0A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A32 to i8*) } ]
@.Lt_1A2A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A2C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A2E to i8*) } ]
@.Lt_1A26 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A28 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A2A to i8*) } ]
@.Lt_1A22 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A24 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A26 to i8*) } ]
@.Lt_1A1E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A20 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A1C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_NOP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A22 to i8*) } ]
@.Lt_1A19 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A1B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A1E to i8*) } ]
@.Lt_1A15 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A17 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A13 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A19 to i8*) } ]
@.Lt_1A10 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A12 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A15 to i8*) } ]
@.Lt_1A0C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A0E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A0A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A10 to i8*) } ]
@.Lt_1A07 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A09 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A0C to i8*) } ]
@.Lt_1A03 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A05 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A07 to i8*) } ]
@.Lt_19FF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1A01 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1A03 to i8*) } ]
@.Lt_19FB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19FD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19FF to i8*) } ]
@.Lt_19F7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19FB to i8*) } ]
@.Lt_19F2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19F0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19F7 to i8*) } ]
@.Lt_19ED = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19F2 to i8*) } ]
@.Lt_19E9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1983 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19ED to i8*) } ]
@.Lt_19E5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19E7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19E9 to i8*) } ]
@.Lt_19E1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19E3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19E5 to i8*) } ]
@.Lt_19DD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19DF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19E1 to i8*) } ]
@.Lt_19D9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19DB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19DD to i8*) } ]
@.Lt_19D5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19D7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19D9 to i8*) } ]
@.Lt_19D1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19D3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19CF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLD }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19D5 to i8*) } ]
@.Lt_19CC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19CE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19D1 to i8*) } ]
@.Lt_19C8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1983 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19CC to i8*) } ]
@.Lt_19C4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19C6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19C8 to i8*) } ]
@.Lt_19C0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19C2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19C4 to i8*) } ]
@.Lt_19BC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19BE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19C0 to i8*) } ]
@.Lt_19B8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19BA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19BC to i8*) } ]
@.Lt_19B4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19B6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19B8 to i8*) } ]
@.Lt_19B0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19B2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19AE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BNE }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19B4 to i8*) } ]
@.Lt_19AB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19AD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19B0 to i8*) } ]
@.Lt_19A7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19A9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1983 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19AB to i8*) } ]
@.Lt_19A3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19A5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19A7 to i8*) } ]
@.Lt_199F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_19A1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1969 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_19A3 to i8*) } ]
@.Lt_199B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_199D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_199F to i8*) } ]
@.Lt_1997 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1999 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1995 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_199B to i8*) } ]
@.Lt_1992 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1994 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1997 to i8*) } ]
@.Lt_198E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1990 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_198C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1992 to i8*) } ]
@.Lt_1989 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_198B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_198E to i8*) } ]
@.Lt_1985 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1987 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1983 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1989 to i8*) } ]
@.Lt_1980 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1982 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1985 to i8*) } ]
@.Lt_197C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_197E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1969 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1980 to i8*) } ]
@.Lt_1978 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_197A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_197C to i8*) } ]
@.Lt_1974 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1976 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1978 to i8*) } ]
@.Lt_1970 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1972 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1974 to i8*) } ]
@.Lt_196B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_196D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1969 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1970 to i8*) } ]
@.Lt_1966 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1968 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_196B to i8*) } ]
@.Lt_1962 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1964 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1966 to i8*) } ]
@.Lt_195E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1960 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1962 to i8*) } ]
@.Lt_195A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_195C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_195E to i8*) } ]
@.Lt_1956 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1958 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_195A to i8*) } ]
@.Lt_1952 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1954 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1950 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TSX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1956 to i8*) } ]
@.Lt_194D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_194F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1952 to i8*) } ]
@.Lt_1949 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_194B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1947 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLV }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_194D to i8*) } ]
@.Lt_1944 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1946 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1949 to i8*) } ]
@.Lt_1940 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1942 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1646 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1944 to i8*) } ]
@.Lt_193C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_193E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1940 to i8*) } ]
@.Lt_1938 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_193A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_193C to i8*) } ]
@.Lt_1934 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1936 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1938 to i8*) } ]
@.Lt_1930 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1932 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1934 to i8*) } ]
@.Lt_192C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_192E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1930 to i8*) } ]
@.Lt_1928 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_192A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1926 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BCS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_192C to i8*) } ]
@.Lt_1923 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1925 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1928 to i8*) } ]
@.Lt_191F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1921 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1923 to i8*) } ]
@.Lt_191B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_191D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_191F to i8*) } ]
@.Lt_1917 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1919 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_191B to i8*) } ]
@.Lt_1913 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1915 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1917 to i8*) } ]
@.Lt_190F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1911 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_190D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TAX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1913 to i8*) } ]
@.Lt_190A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_190C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_190F to i8*) } ]
@.Lt_1906 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1908 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1904 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TAY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_190A to i8*) } ]
@.Lt_1901 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1903 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1906 to i8*) } ]
@.Lt_18FD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18FF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1901 to i8*) } ]
@.Lt_18F9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18FD to i8*) } ]
@.Lt_18F5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18F7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18F9 to i8*) } ]
@.Lt_18F1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18F3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18F5 to i8*) } ]
@.Lt_18ED = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18F1 to i8*) } ]
@.Lt_18E8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18EA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18ED to i8*) } ]
@.Lt_18E3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18E8 to i8*) } ]
@.Lt_18DE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18E3 to i8*) } ]
@.Lt_18DA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18DC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18DE to i8*) } ]
@.Lt_18D6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18DA to i8*) } ]
@.Lt_18D2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18D4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18D6 to i8*) } ]
@.Lt_18CE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18D0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18D2 to i8*) } ]
@.Lt_18CA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18CC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18C8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TXS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18CE to i8*) } ]
@.Lt_18C5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18C7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18CA to i8*) } ]
@.Lt_18C1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18C3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18BF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TYA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18C5 to i8*) } ]
@.Lt_18BC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18BE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18C1 to i8*) } ]
@.Lt_18B8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18BA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1873 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1646 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18BC to i8*) } ]
@.Lt_18B4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18B6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18B8 to i8*) } ]
@.Lt_18B0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18B2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_186A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18B4 to i8*) } ]
@.Lt_18AC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18AE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18B0 to i8*) } ]
@.Lt_18A8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18AA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18AC to i8*) } ]
@.Lt_18A4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18A6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A8 to i8*) } ]
@.Lt_18A0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18A2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_189E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BCC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A4 to i8*) } ]
@.Lt_189B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_189D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A0 to i8*) } ]
@.Lt_1897 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1899 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1873 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_189B to i8*) } ]
@.Lt_1893 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1895 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1897 to i8*) } ]
@.Lt_188F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1891 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_186A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1893 to i8*) } ]
@.Lt_188B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_188D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_188F to i8*) } ]
@.Lt_1887 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1889 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1885 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TXA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_188B to i8*) } ]
@.Lt_1882 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1884 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1887 to i8*) } ]
@.Lt_187E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1880 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_187C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1882 to i8*) } ]
@.Lt_1879 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_187B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_187E to i8*) } ]
@.Lt_1875 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1877 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1873 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1879 to i8*) } ]
@.Lt_1870 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1872 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1875 to i8*) } ]
@.Lt_186C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_186E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_186A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1870 to i8*) } ]
@.Lt_1867 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1869 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_186C to i8*) } ]
@.Lt_1863 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1865 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1867 to i8*) } ]
@.Lt_185F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1861 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1863 to i8*) } ]
@.Lt_185A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_185F to i8*) } ]
@.Lt_1856 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1858 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_185A to i8*) } ]
@.Lt_1852 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1854 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1856 to i8*) } ]
@.Lt_184E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1850 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1852 to i8*) } ]
@.Lt_184A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_184C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_184E to i8*) } ]
@.Lt_1846 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1848 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_184A to i8*) } ]
@.Lt_1842 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1844 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1846 to i8*) } ]
@.Lt_183E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1840 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1842 to i8*) } ]
@.Lt_183A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_183C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1838 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SEI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_183E to i8*) } ]
@.Lt_1835 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1837 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_183A to i8*) } ]
@.Lt_1831 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1833 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1835 to i8*) } ]
@.Lt_182D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_182F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1831 to i8*) } ]
@.Lt_1829 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_182B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_182D to i8*) } ]
@.Lt_1825 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1827 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1829 to i8*) } ]
@.Lt_1821 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1823 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1825 to i8*) } ]
@.Lt_181D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_181F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1821 to i8*) } ]
@.Lt_1819 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_181B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1817 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BVS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_181D to i8*) } ]
@.Lt_1814 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1816 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1819 to i8*) } ]
@.Lt_1810 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1812 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1814 to i8*) } ]
@.Lt_180C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_180E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1810 to i8*) } ]
@.Lt_1808 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_180A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1780 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1676 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_180C to i8*) } ]
@.Lt_1804 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1806 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1808 to i8*) } ]
@.Lt_1800 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1802 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1804 to i8*) } ]
@.Lt_17FC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1800 to i8*) } ]
@.Lt_17F8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17FC to i8*) } ]
@.Lt_17F3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17F8 to i8*) } ]
@.Lt_17EF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17F3 to i8*) } ]
@.Lt_17EA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17EC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17EF to i8*) } ]
@.Lt_17E6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17E8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17EA to i8*) } ]
@.Lt_17E2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17E4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17E6 to i8*) } ]
@.Lt_17DE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17E2 to i8*) } ]
@.Lt_17DA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17DC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17DE to i8*) } ]
@.Lt_17D5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17D7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RTS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17DA to i8*) } ]
@.Lt_17D0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17D2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17D5 to i8*) } ]
@.Lt_17CC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17CE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17D0 to i8*) } ]
@.Lt_17C8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17CC to i8*) } ]
@.Lt_17C4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17C6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17C8 to i8*) } ]
@.Lt_17C0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17C2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17C4 to i8*) } ]
@.Lt_17BC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17BE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17C0 to i8*) } ]
@.Lt_17B8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17BA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17BC to i8*) } ]
@.Lt_17B4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17B6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17B2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17B8 to i8*) } ]
@.Lt_17AF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17B1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17B4 to i8*) } ]
@.Lt_17AB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17AD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17AF to i8*) } ]
@.Lt_17A7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17A9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17AB to i8*) } ]
@.Lt_17A3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17A5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17A7 to i8*) } ]
@.Lt_179F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_17A1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17A3 to i8*) } ]
@.Lt_179B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_179D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_179F to i8*) } ]
@.Lt_1797 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1799 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_179B to i8*) } ]
@.Lt_1793 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1795 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1791 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BVC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1797 to i8*) } ]
@.Lt_178E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1790 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1793 to i8*) } ]
@.Lt_178A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_178C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_178E to i8*) } ]
@.Lt_1786 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1788 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_178A to i8*) } ]
@.Lt_1782 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1784 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1780 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1786 to i8*) } ]
@.Lt_177D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_177F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1782 to i8*) } ]
@.Lt_1779 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_177B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSRA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_177D to i8*) } ]
@.Lt_1775 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1777 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1779 to i8*) } ]
@.Lt_1771 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1773 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_176F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PHA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1775 to i8*) } ]
@.Lt_176C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_176E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1771 to i8*) } ]
@.Lt_1768 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_176A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_176C to i8*) } ]
@.Lt_1763 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1765 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1768 to i8*) } ]
@.Lt_175F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1761 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1763 to i8*) } ]
@.Lt_175B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_175D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_175F to i8*) } ]
@.Lt_1757 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1759 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_175B to i8*) } ]
@.Lt_1753 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1755 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1751 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1757 to i8*) } ]
@.Lt_174E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1750 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_174C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RTI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1753 to i8*) } ]
@.Lt_1749 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_174B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_174E to i8*) } ]
@.Lt_1745 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1747 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1749 to i8*) } ]
@.Lt_1741 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1743 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1745 to i8*) } ]
@.Lt_173D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_173F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1741 to i8*) } ]
@.Lt_1739 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_173B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_173D to i8*) } ]
@.Lt_1735 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1737 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1739 to i8*) } ]
@.Lt_1731 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1733 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1735 to i8*) } ]
@.Lt_172D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_172F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_172B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1731 to i8*) } ]
@.Lt_1728 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_172A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_172D to i8*) } ]
@.Lt_1724 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1726 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1728 to i8*) } ]
@.Lt_1720 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1722 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1724 to i8*) } ]
@.Lt_171C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_171E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1720 to i8*) } ]
@.Lt_1718 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_171A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_171C to i8*) } ]
@.Lt_1714 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1716 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1718 to i8*) } ]
@.Lt_1710 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1712 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1714 to i8*) } ]
@.Lt_170C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_170E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_170A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BMI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1710 to i8*) } ]
@.Lt_1707 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1709 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_170C to i8*) } ]
@.Lt_1703 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1705 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1707 to i8*) } ]
@.Lt_16FF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1701 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1703 to i8*) } ]
@.Lt_16FB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16FD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16D7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BIT }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16FF to i8*) } ]
@.Lt_16F7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16FB to i8*) } ]
@.Lt_16F3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16F7 to i8*) } ]
@.Lt_16EF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16F1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16F3 to i8*) } ]
@.Lt_16EB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PLP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16EF to i8*) } ]
@.Lt_16E6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16E8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16EB to i8*) } ]
@.Lt_16E2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16E4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16E6 to i8*) } ]
@.Lt_16DD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16DF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16E2 to i8*) } ]
@.Lt_16D9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16DB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16D7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BIT }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16DD to i8*) } ]
@.Lt_16D4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16D6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16D9 to i8*) } ]
@.Lt_16D0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16D2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16D4 to i8*) } ]
@.Lt_16CC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16CE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16D0 to i8*) } ]
@.Lt_16C7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16C9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16C5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16CC to i8*) } ]
@.Lt_16C2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16C4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16C7 to i8*) } ]
@.Lt_16BE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16C0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16C2 to i8*) } ]
@.Lt_16BA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16BC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16BE to i8*) } ]
@.Lt_16B6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16B8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16BA to i8*) } ]
@.Lt_16B2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16B4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16B6 to i8*) } ]
@.Lt_16AE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16B0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16B2 to i8*) } ]
@.Lt_16AA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16AC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16AE to i8*) } ]
@.Lt_16A6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16A8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16A4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16AA to i8*) } ]
@.Lt_16A1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_16A3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16A6 to i8*) } ]
@.Lt_169D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_169F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16A1 to i8*) } ]
@.Lt_1699 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_169B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_169D to i8*) } ]
@.Lt_1695 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1697 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1699 to i8*) } ]
@.Lt_1691 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1693 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1695 to i8*) } ]
@.Lt_168D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_168F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1691 to i8*) } ]
@.Lt_1689 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_168B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_168D to i8*) } ]
@.Lt_1685 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1687 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1683 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BPL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1689 to i8*) } ]
@.Lt_1680 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1682 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1685 to i8*) } ]
@.Lt_167C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_167E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1680 to i8*) } ]
@.Lt_1678 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_167A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_167C to i8*) } ]
@.Lt_1674 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1676 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1678 to i8*) } ]
@.Lt_1670 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1672 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1674 to i8*) } ]
@.Lt_166C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1670 to i8*) } ]
@.Lt_1668 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_166C to i8*) } ]
@.Lt_1664 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1662 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PHP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1668 to i8*) } ]
@.Lt_1660 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_W64 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1664 to i8*) } ]
@.Lt_165C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1646 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1660 to i8*) } ]
@.Lt_1657 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1659 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_165C to i8*) } ]
@.Lt_1653 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1655 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1651 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_R64 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1657 to i8*) } ]
@.Lt_164F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_164D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_W32 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1653 to i8*) } ]
@.Lt_164A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1648 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_164C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_R32 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_164F to i8*) } ]
@.Lt_1643 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1646 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1647 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_164A to i8*) } ]
@.Lt_1371 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_163D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1640 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_163E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BRK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1643 to i8*) } ]

define void @ERROREXIT( %FBSTRING* %MSG.0$ ) nounwind
{

	; paramvar MSG
	%MSG.0 = alloca %FBSTRING*
	store %FBSTRING* %MSG.0$, %FBSTRING** %MSG.0

	; localvar W
	%W.1 = alloca i64

	; localvar H
	%H.2 = alloca i64

	; label .Lt_024C
	br label %.Lt_024C
.Lt_024C:

	; call fb_GfxScreenPtr()
	%vr0 = call i8* @fb_GfxScreenPtr(  )

	; branchbop vr0 == 0
	%vr1 = icmp eq i8* %vr0, 0
	br i1 %vr1, label %.Lt_024F, label %.Lt_0251
.Lt_0251:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr2 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; label .Lt_024F
	br label %.Lt_024F
.Lt_024F:

	; addrof W

	; memclear W
	%vr9 = bitcast i64* %W.1 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 8, i32 1, i1 false )

	; addrof H

	; memclear H
	%vr11 = bitcast i64* %H.2 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr11, i8 0, i32 8, i32 1, i1 false )
	%vr13 = load %FBSTRING*, %FBSTRING** %MSG.0
	%vr12 = bitcast %FBSTRING* %vr13 to %FBSTRING*

	; call fb_PrintString()
	; arg 0
	; arg vr12
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr12, i32 1 )

	; call fb_PrintVoid()
	; arg 0
	; arg 1
	call void @fb_PrintVoid( i32 0, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0250
	%vr19 = bitcast i8* bitcast ([18 x i8]* @Lt_0250 to i8*) to i8*
	; arg 17
	%vr18 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19, i64 17 )

	; call fb_PrintString()
	; arg 0
	; arg vr18
	%vr22 = bitcast %FBSTRING* %vr18 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr22, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; call fb_End()
	; arg 1
	call void @fb_End( i32 1 )

	; label .Lt_024D
	br label %.Lt_024D
.Lt_024D:
	ret void
}

define void @GLSCREEN( i64 %PIXELWIDTH.3$, i64 %PIXELHEIGHT.4$, i64 %COLORBITS.5$, i64 %DEPTHBITS.6$, i8 %FULLSCREEN.7$ ) nounwind
{

	; paramvar PIXELWIDTH
	%PIXELWIDTH.3 = alloca i64
	store i64 %PIXELWIDTH.3$, i64* %PIXELWIDTH.3

	; paramvar PIXELHEIGHT
	%PIXELHEIGHT.4 = alloca i64
	store i64 %PIXELHEIGHT.4$, i64* %PIXELHEIGHT.4

	; paramvar COLORBITS
	%COLORBITS.5 = alloca i64
	store i64 %COLORBITS.5$, i64* %COLORBITS.5

	; paramvar DEPTHBITS
	%DEPTHBITS.6 = alloca i64
	store i64 %DEPTHBITS.6$, i64* %DEPTHBITS.6

	; paramvar FULLSCREEN
	%FULLSCREEN.7 = alloca i8
	store i8 %FULLSCREEN.7$, i8* %FULLSCREEN.7

	; localvar W
	%W.8 = alloca i64

	; localvar H
	%H.9 = alloca i64

	; localvar B
	%B.10 = alloca i64

	; localvar LT_0256
	%LT_0256.11 = alloca i64

	; localvar LT_0257
	%LT_0257.12 = alloca i64

	; localvar LT_0258
	%LT_0258.13 = alloca i64

	; localvar LT_025A
	%LT_025A.14 = alloca i64

	; localvar LT_025F
	%LT_025F.15 = alloca i64

	; localvar LT_0262
	%LT_0262.16 = alloca i64

	; localvar LT_026B
	%LT_026B.17 = alloca i64

	; localvar LT_026C
	%LT_026C.18 = alloca i64

	; localvar LT_026D
	%LT_026D.19 = alloca i64

	; localvar LT_028B
	%LT_028B.20 = alloca i64

	; label .Lt_0252
	br label %.Lt_0252
.Lt_0252:

	; addrof W

	; memclear W
	%vr1 = bitcast i64* %W.8 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof H

	; memclear H
	%vr3 = bitcast i64* %H.9 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; addrof B

	; memclear B
	%vr5 = bitcast i64* %B.10 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; call fb_GfxScreenPtr()
	%vr6 = call i8* @fb_GfxScreenPtr(  )

	; branchbop vr6 == 0
	%vr7 = icmp eq i8* %vr6, 0
	br i1 %vr7, label %.Lt_0255, label %.Lt_02ED
.Lt_02ED:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr8 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; label .Lt_0255
	br label %.Lt_0255
.Lt_0255:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15, i64 0 )

	; store LT_0258 := 0
	store i64 0, i64* %LT_0258.13

	; store LT_0257 := 0
	store i64 0, i64* %LT_0257.12

	; store LT_0256 := 0
	store i64 0, i64* %LT_0256.11

	; addrof B

	; addrof H

	; addrof W

	; call fb_GfxScreenInfo()
	; arg W
	; arg H
	; arg B
	; arg LT_0256
	; arg LT_0257
	; arg LT_0258
	; arg vr14
	call void @fb_GfxScreenInfo( i64* %W.8, i64* %H.9, i64* %B.10, i64* %LT_0256.11, i64* %LT_0257.12, i64* %LT_0258.13, %FBSTRING* %vr14 )

	; branchbop PIXELWIDTH > 0
	%vr21 = load i64, i64* %PIXELWIDTH.3
	%vr20 = icmp sgt i64 %vr21, 0
	br i1 %vr20, label %.Lt_0259, label %.Lt_02EE
.Lt_02EE:

	; bop PIXELHEIGHT <= 0
	%vr23 = load i64, i64* %PIXELHEIGHT.4
	%vr22 = icmp sle i64 %vr23, 0
	%vr24 = sext i1 %vr22 to i64

	; store LT_025A := vr24
	store i64 %vr24, i64* %LT_025A.14

	; goto .Lt_02EF
	br label %.Lt_02EF
.Lt_02F0:

	; label .Lt_0259
	br label %.Lt_0259
.Lt_0259:

	; store LT_025A := 0
	store i64 0, i64* %LT_025A.14

	; label .Lt_02EF
	br label %.Lt_02EF
.Lt_02EF:

	; branchbop LT_025A == 0
	%vr26 = load i64, i64* %LT_025A.14
	%vr25 = icmp eq i64 %vr26, 0
	br i1 %vr25, label %.Lt_025C, label %.Lt_02F1
.Lt_02F1:

	; store PIXELWIDTH := 640
	store i64 640, i64* %PIXELWIDTH.3

	; store PIXELHEIGHT := 350
	store i64 350, i64* %PIXELHEIGHT.4

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; goto .Lt_025B
	br label %.Lt_025B
.Lt_02F2:

	; label .Lt_025C
	br label %.Lt_025C
.Lt_025C:

	; branchbop PIXELWIDTH <= 0
	%vr28 = load i64, i64* %PIXELWIDTH.3
	%vr27 = icmp sle i64 %vr28, 0
	br i1 %vr27, label %.Lt_025E, label %.Lt_02F3
.Lt_02F3:

	; bop PIXELHEIGHT <= 0
	%vr30 = load i64, i64* %PIXELHEIGHT.4
	%vr29 = icmp sle i64 %vr30, 0
	%vr31 = sext i1 %vr29 to i64

	; store LT_025F := vr31
	store i64 %vr31, i64* %LT_025F.15

	; goto .Lt_02F4
	br label %.Lt_02F4
.Lt_02F5:

	; label .Lt_025E
	br label %.Lt_025E
.Lt_025E:

	; store LT_025F := 0
	store i64 0, i64* %LT_025F.15

	; label .Lt_02F4
	br label %.Lt_02F4
.Lt_02F4:

	; branchbop LT_025F == 0
	%vr33 = load i64, i64* %LT_025F.15
	%vr32 = icmp eq i64 %vr33, 0
	br i1 %vr32, label %.Lt_025D, label %.Lt_02F6
.Lt_02F6:

	; conv PIXELWIDTH => vr34
	%vr35 = load i64, i64* %PIXELWIDTH.3
	%vr34 = sitofp i64 %vr35 to double

	; bop vr34 / 16
	%vr36 = fdiv double %vr34, 0x4030000000000000

	; bop vr36 * 9
	%vr37 = fmul double %vr36, 0x4022000000000000

	; conv vr37 => vr38
	%vr39 = call double @llvm.nearbyint.f64(double %vr37)
	%vr38 = fptosi double %vr39 to i64

	; store PIXELHEIGHT := vr38
	store i64 %vr38, i64* %PIXELHEIGHT.4

	; goto .Lt_025B
	br label %.Lt_025B
.Lt_02F7:

	; label .Lt_025D
	br label %.Lt_025D
.Lt_025D:

	; branchbop PIXELWIDTH > 0
	%vr41 = load i64, i64* %PIXELWIDTH.3
	%vr40 = icmp sgt i64 %vr41, 0
	br i1 %vr40, label %.Lt_0261, label %.Lt_02F8
.Lt_02F8:

	; bop PIXELHEIGHT > 0
	%vr43 = load i64, i64* %PIXELHEIGHT.4
	%vr42 = icmp sgt i64 %vr43, 0
	%vr44 = sext i1 %vr42 to i64

	; store LT_0262 := vr44
	store i64 %vr44, i64* %LT_0262.16

	; goto .Lt_02F9
	br label %.Lt_02F9
.Lt_02FA:

	; label .Lt_0261
	br label %.Lt_0261
.Lt_0261:

	; store LT_0262 := 0
	store i64 0, i64* %LT_0262.16

	; label .Lt_02F9
	br label %.Lt_02F9
.Lt_02F9:

	; branchbop LT_0262 == 0
	%vr46 = load i64, i64* %LT_0262.16
	%vr45 = icmp eq i64 %vr46, 0
	br i1 %vr45, label %.Lt_0260, label %.Lt_02FB
.Lt_02FB:

	; conv PIXELHEIGHT => vr47
	%vr48 = load i64, i64* %PIXELHEIGHT.4
	%vr47 = sitofp i64 %vr48 to double

	; bop vr47 / 9
	%vr49 = fdiv double %vr47, 0x4022000000000000

	; bop vr49 * 16
	%vr50 = fmul double %vr49, 0x4030000000000000

	; conv vr50 => vr51
	%vr52 = call double @llvm.nearbyint.f64(double %vr50)
	%vr51 = fptosi double %vr52 to i64

	; store PIXELWIDTH := vr51
	store i64 %vr51, i64* %PIXELWIDTH.3

	; label .Lt_0260
	br label %.Lt_0260
.Lt_0260:

	; label .Lt_025B
	br label %.Lt_025B
.Lt_025B:

	; branchbop COLORBITS >= 16
	%vr54 = load i64, i64* %COLORBITS.5
	%vr53 = icmp sge i64 %vr54, 16
	br i1 %vr53, label %.Lt_0264, label %.Lt_02FC
.Lt_02FC:

	; store COLORBITS := B
	%vr55 = load i64, i64* %B.10
	store i64 %vr55, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_02FD:

	; label .Lt_0264
	br label %.Lt_0264
.Lt_0264:

	; branchbop COLORBITS >= 24
	%vr57 = load i64, i64* %COLORBITS.5
	%vr56 = icmp sge i64 %vr57, 24
	br i1 %vr56, label %.Lt_0265, label %.Lt_02FE
.Lt_02FE:

	; store COLORBITS := 16
	store i64 16, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_02FF:

	; label .Lt_0265
	br label %.Lt_0265
.Lt_0265:

	; branchbop COLORBITS >= 32
	%vr59 = load i64, i64* %COLORBITS.5
	%vr58 = icmp sge i64 %vr59, 32
	br i1 %vr58, label %.Lt_0266, label %.Lt_0300
.Lt_0300:

	; store COLORBITS := 24
	store i64 24, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_0301:

	; label .Lt_0266
	br label %.Lt_0266
.Lt_0266:

	; store COLORBITS := 32
	store i64 32, i64* %COLORBITS.5

	; label .Lt_0263
	br label %.Lt_0263
.Lt_0263:

	; branchbop DEPTHBITS > 0
	%vr61 = load i64, i64* %DEPTHBITS.6
	%vr60 = icmp sgt i64 %vr61, 0
	br i1 %vr60, label %.Lt_0268, label %.Lt_0302
.Lt_0302:

	; store DEPTHBITS := 0
	store i64 0, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0303:

	; label .Lt_0268
	br label %.Lt_0268
.Lt_0268:

	; branchbop DEPTHBITS >= 16
	%vr63 = load i64, i64* %DEPTHBITS.6
	%vr62 = icmp sge i64 %vr63, 16
	br i1 %vr62, label %.Lt_0269, label %.Lt_0304
.Lt_0304:

	; store DEPTHBITS := 16
	store i64 16, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0305:

	; label .Lt_0269
	br label %.Lt_0269
.Lt_0269:

	; branchbop DEPTHBITS >= 32
	%vr65 = load i64, i64* %DEPTHBITS.6
	%vr64 = icmp sge i64 %vr65, 32
	br i1 %vr64, label %.Lt_026A, label %.Lt_0306
.Lt_0306:

	; store DEPTHBITS := 24
	store i64 24, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0307:

	; label .Lt_026A
	br label %.Lt_026A
.Lt_026A:

	; store DEPTHBITS := 32
	store i64 32, i64* %DEPTHBITS.6

	; label .Lt_0267
	br label %.Lt_0267
.Lt_0267:

	; store LT_026D := 2147483648
	store i64 2147483648, i64* %LT_026D.19

	; store LT_026C := 2147483648
	store i64 2147483648, i64* %LT_026C.18

	; store LT_026B := 2147483648
	store i64 2147483648, i64* %LT_026B.17

	; addrof DEPTHBITS

	; call fb_GfxControl_i()
	; arg 110
	; arg DEPTHBITS
	; arg LT_026B
	; arg LT_026C
	; arg LT_026D
	call void @fb_GfxControl_i( i32 110, i64* %DEPTHBITS.6, i64* %LT_026B.17, i64* %LT_026C.18, i64* %LT_026D.19 )

	; branchbop FULLSCREEN == 0
	%vr69 = load i8, i8* %FULLSCREEN.7
	%vr68 = icmp eq i8 %vr69, trunc (i64 0 to i8)
	br i1 %vr68, label %.Lt_026F, label %.Lt_0308
.Lt_0308:

	; localvar FOUNDMODE
	%FOUNDMODE.21 = alloca i32

	; localvar MODE
	%MODE.22 = alloca i32

	; bop PIXELWIDTH < 640
	%vr71 = load i64, i64* %PIXELWIDTH.3
	%vr70 = icmp slt i64 %vr71, 640
	%vr72 = sext i1 %vr70 to i64

	; bop PIXELHEIGHT < 480
	%vr74 = load i64, i64* %PIXELHEIGHT.4
	%vr73 = icmp slt i64 %vr74, 480
	%vr75 = sext i1 %vr73 to i64

	; bop vr72 OR vr75
	%vr76 = or i64 %vr72, %vr75

	; branchbop vr76 == 0
	%vr77 = icmp eq i64 %vr76, 0
	br i1 %vr77, label %.Lt_0271, label %.Lt_0309
.Lt_0309:

	; store PIXELWIDTH := 640
	store i64 640, i64* %PIXELWIDTH.3

	; store PIXELHEIGHT := 480
	store i64 480, i64* %PIXELHEIGHT.4

	; label .Lt_0271
	br label %.Lt_0271
.Lt_0271:

	; label .Lt_0270
	br label %.Lt_0270
.Lt_0270:

	; addrof FOUNDMODE

	; memclear FOUNDMODE
	%vr79 = bitcast i32* %FOUNDMODE.21 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr79, i8 0, i32 4, i32 1, i1 false )

	; conv COLORBITS => vr80
	%vr81 = load i64, i64* %COLORBITS.5
	%vr80 = trunc i64 %vr81 to i32

	; call fb_GfxScreenList()
	; arg vr80
	%vr82 = call i32 @fb_GfxScreenList( i32 %vr80 )

	; store MODE := vr82
	store i32 %vr82, i32* %MODE.22

	; conv MODE => vr83
	%vr84 = load i32, i32* %MODE.22
	%vr83 = sext i32 %vr84 to i64

	; branchbop vr83 == 0
	%vr85 = icmp eq i64 %vr83, 0
	br i1 %vr85, label %.Lt_0273, label %.Lt_030A
.Lt_030A:

	; localvar ERRORVALUE
	%ERRORVALUE.23 = alloca i64

	; localvar ERRORWIDTH
	%ERRORWIDTH.24 = alloca i64

	; localvar ERRORHEIGHT
	%ERRORHEIGHT.25 = alloca i64

	; store ERRORVALUE := 1073741824
	store i64 1073741824, i64* %ERRORVALUE.23

	; addrof ERRORWIDTH

	; memclear ERRORWIDTH
	%vr87 = bitcast i64* %ERRORWIDTH.24 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr87, i8 0, i32 8, i32 1, i1 false )

	; addrof ERRORHEIGHT

	; memclear ERRORHEIGHT
	%vr89 = bitcast i64* %ERRORHEIGHT.25 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr89, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0274
	br label %.Lt_0274
.Lt_0274:

	; conv MODE => vr90
	%vr91 = load i32, i32* %MODE.22
	%vr90 = sext i32 %vr91 to i64

	; branchbop vr90 == 0
	%vr92 = icmp eq i64 %vr90, 0
	br i1 %vr92, label %.Lt_0275, label %.Lt_030B
.Lt_030B:

	; conv MODE => vr93
	%vr94 = load i32, i32* %MODE.22
	%vr93 = zext i32 %vr94 to i64

	; bop vr93 AND 4294901760
	%vr95 = and i64 %vr93, 4294901760

	; bop vr95 SHR 16
	%vr97 = bitcast i64 16 to i64
	%vr96 = ashr i64 %vr95, %vr97
	%vr99 = load i64, i64* %PIXELWIDTH.3
	%vr98 = bitcast i64 %vr99 to i64

	; bop vr96 - vr98
	%vr100 = sub i64 %vr96, %vr98
	%vr101 = bitcast i64 %vr100 to i64

	; call llabs()
	; arg vr101
	%vr102 = call i64 @llabs( i64 %vr101 )

	; store ERRORWIDTH := vr102
	store i64 %vr102, i64* %ERRORWIDTH.24

	; conv MODE => vr105
	%vr106 = load i32, i32* %MODE.22
	%vr105 = zext i32 %vr106 to i64

	; bop vr105 AND 65535
	%vr107 = and i64 %vr105, 65535
	%vr109 = load i64, i64* %PIXELHEIGHT.4
	%vr108 = bitcast i64 %vr109 to i64

	; bop vr107 - vr108
	%vr110 = sub i64 %vr107, %vr108
	%vr111 = bitcast i64 %vr110 to i64

	; call llabs()
	; arg vr111
	%vr112 = call i64 @llabs( i64 %vr111 )

	; store ERRORHEIGHT := vr112
	store i64 %vr112, i64* %ERRORHEIGHT.25

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr116 = load i64, i64* %ERRORWIDTH.24
	%vr117 = load i64, i64* %ERRORHEIGHT.25
	%vr115 = add i64 %vr116, %vr117

	; branchbop vr115 >= ERRORVALUE
	%vr119 = load i64, i64* %ERRORVALUE.23
	%vr118 = icmp sge i64 %vr115, %vr119
	br i1 %vr118, label %.Lt_0277, label %.Lt_030C
.Lt_030C:

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr121 = load i64, i64* %ERRORWIDTH.24
	%vr122 = load i64, i64* %ERRORHEIGHT.25
	%vr120 = add i64 %vr121, %vr122

	; store ERRORVALUE := vr120
	store i64 %vr120, i64* %ERRORVALUE.23

	; store FOUNDMODE := MODE
	%vr123 = load i32, i32* %MODE.22
	store i32 %vr123, i32* %FOUNDMODE.21

	; label .Lt_0277
	br label %.Lt_0277
.Lt_0277:

	; label .Lt_0276
	br label %.Lt_0276
.Lt_0276:

	; call fb_GfxScreenList()
	; arg 0
	%vr124 = call i32 @fb_GfxScreenList( i32 0 )

	; store MODE := vr124
	store i32 %vr124, i32* %MODE.22

	; goto .Lt_0274
	br label %.Lt_0274
.Lt_030D:

	; label .Lt_0275
	br label %.Lt_0275
.Lt_0275:

	; goto .Lt_0272
	br label %.Lt_0272
.Lt_030E:

	; label .Lt_0273
	br label %.Lt_0273
.Lt_0273:

	; localvar BITS
	%BITS.26 = alloca [2 x i32]

	; localvar Lt_0278
	%FBARRAY1 = type { i32*, i32*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_0278.27 = alloca %FBARRAY1

	; addrof BITS

	; memclear BITS
	%vr127 = bitcast i32* %BITS.26 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr127, i8 0, i32 8, i32 1, i1 false )

	; addrof BITS

	; store Lt_0278 := BITS
	%vr129 = bitcast %FBARRAY1* %Lt_0278.27 to i32**
	store i32* %BITS.26, i32** %vr129

	; addrof BITS

	; store Lt_0278+8 := BITS
	%vr131 = bitcast %FBARRAY1* %Lt_0278.27 to i32**
	%vr132 = ptrtoint i32** %vr131 to i64
	%vr133 = add i64 %vr132, 8
	%vr134 = inttoptr i64 %vr133 to i32**
	store i32* %BITS.26, i32** %vr134

	; store Lt_0278+16 := 8
	%vr135 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr136 = ptrtoint i64* %vr135 to i64
	%vr137 = add i64 %vr136, 16
	%vr138 = inttoptr i64 %vr137 to i64*
	store i64 8, i64* %vr138

	; store Lt_0278+24 := 4
	%vr139 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr140 = ptrtoint i64* %vr139 to i64
	%vr141 = add i64 %vr140, 24
	%vr142 = inttoptr i64 %vr141 to i64*
	store i64 4, i64* %vr142

	; store Lt_0278+32 := 1
	%vr143 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr144 = ptrtoint i64* %vr143 to i64
	%vr145 = add i64 %vr144, 32
	%vr146 = inttoptr i64 %vr145 to i64*
	store i64 1, i64* %vr146

	; store Lt_0278+40 := 2
	%vr147 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr148 = ptrtoint i64* %vr147 to i64
	%vr149 = add i64 %vr148, 40
	%vr150 = inttoptr i64 %vr149 to i64*
	store i64 2, i64* %vr150

	; store Lt_0278+48 := 0
	%vr151 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr152 = ptrtoint i64* %vr151 to i64
	%vr153 = add i64 %vr152, 48
	%vr154 = inttoptr i64 %vr153 to i64*
	store i64 0, i64* %vr154

	; store Lt_0278+56 := 1
	%vr155 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr156 = ptrtoint i64* %vr155 to i64
	%vr157 = add i64 %vr156, 56
	%vr158 = inttoptr i64 %vr157 to i64*
	store i64 1, i64* %vr158

	; branchbop COLORBITS <> 16
	%vr160 = load i64, i64* %COLORBITS.5
	%vr159 = icmp ne i64 %vr160, 16
	br i1 %vr159, label %.Lt_027A, label %.Lt_030F
.Lt_030F:

	; store BITS := 32
	store i32 32, i32* %BITS.26

	; store BITS+4 := 24
	%vr161 = ptrtoint i32* %BITS.26 to i64
	%vr162 = add i64 %vr161, 4
	%vr163 = inttoptr i64 %vr162 to i32*
	store i32 24, i32* %vr163

	; goto .Lt_0279
	br label %.Lt_0279
.Lt_0310:

	; label .Lt_027A
	br label %.Lt_027A
.Lt_027A:

	; branchbop COLORBITS <> 24
	%vr165 = load i64, i64* %COLORBITS.5
	%vr164 = icmp ne i64 %vr165, 24
	br i1 %vr164, label %.Lt_027B, label %.Lt_0311
.Lt_0311:

	; store BITS := 32
	store i32 32, i32* %BITS.26

	; store BITS+4 := 16
	%vr166 = ptrtoint i32* %BITS.26 to i64
	%vr167 = add i64 %vr166, 4
	%vr168 = inttoptr i64 %vr167 to i32*
	store i32 16, i32* %vr168

	; goto .Lt_0279
	br label %.Lt_0279
.Lt_0312:

	; label .Lt_027B
	br label %.Lt_027B
.Lt_027B:

	; store BITS := 24
	store i32 24, i32* %BITS.26

	; store BITS+4 := 16
	%vr169 = ptrtoint i32* %BITS.26 to i64
	%vr170 = add i64 %vr169, 4
	%vr171 = inttoptr i64 %vr170 to i32*
	store i32 16, i32* %vr171

	; label .Lt_0279
	br label %.Lt_0279
.Lt_0279:

	; localvar I
	%I.28 = alloca i64

	; store I := 0
	store i64 0, i64* %I.28

	; label .Lt_027F
	br label %.Lt_027F
.Lt_027F:

	; bop I SHL 2
	%vr173 = load i64, i64* %I.28
	%vr172 = shl i64 %vr173, 2

	; conv BITS+vr172 => vr174
	%vr175 = ptrtoint i32* %BITS.26 to i64
	%vr176 = inttoptr i64 %vr175 to i32*
	%vr177 = load i32, i32* %vr176
	%vr174 = sext i32 %vr177 to i64

	; store COLORBITS := vr174
	store i64 %vr174, i64* %COLORBITS.5

	; conv COLORBITS => vr178
	%vr179 = load i64, i64* %COLORBITS.5
	%vr178 = trunc i64 %vr179 to i32

	; call fb_GfxScreenList()
	; arg vr178
	%vr180 = call i32 @fb_GfxScreenList( i32 %vr178 )

	; store MODE := vr180
	store i32 %vr180, i32* %MODE.22

	; conv MODE => vr181
	%vr182 = load i32, i32* %MODE.22
	%vr181 = sext i32 %vr182 to i64

	; branchbop vr181 == 0
	%vr183 = icmp eq i64 %vr181, 0
	br i1 %vr183, label %.Lt_0281, label %.Lt_0313
.Lt_0313:

	; localvar ERRORVALUE
	%ERRORVALUE.29 = alloca i64

	; localvar ERRORWIDTH
	%ERRORWIDTH.30 = alloca i64

	; localvar ERRORHEIGHT
	%ERRORHEIGHT.31 = alloca i64

	; store ERRORVALUE := 1073741824
	store i64 1073741824, i64* %ERRORVALUE.29

	; addrof ERRORWIDTH

	; memclear ERRORWIDTH
	%vr185 = bitcast i64* %ERRORWIDTH.30 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr185, i8 0, i32 8, i32 1, i1 false )

	; addrof ERRORHEIGHT

	; memclear ERRORHEIGHT
	%vr187 = bitcast i64* %ERRORHEIGHT.31 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr187, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0282
	br label %.Lt_0282
.Lt_0282:

	; conv MODE => vr188
	%vr189 = load i32, i32* %MODE.22
	%vr188 = sext i32 %vr189 to i64

	; branchbop vr188 == 0
	%vr190 = icmp eq i64 %vr188, 0
	br i1 %vr190, label %.Lt_0283, label %.Lt_0314
.Lt_0314:

	; conv MODE => vr191
	%vr192 = load i32, i32* %MODE.22
	%vr191 = zext i32 %vr192 to i64

	; bop vr191 AND 4294901760
	%vr193 = and i64 %vr191, 4294901760

	; bop vr193 SHR 16
	%vr195 = bitcast i64 16 to i64
	%vr194 = ashr i64 %vr193, %vr195
	%vr197 = load i64, i64* %PIXELWIDTH.3
	%vr196 = bitcast i64 %vr197 to i64

	; bop vr194 - vr196
	%vr198 = sub i64 %vr194, %vr196
	%vr199 = bitcast i64 %vr198 to i64

	; call llabs()
	; arg vr199
	%vr200 = call i64 @llabs( i64 %vr199 )

	; store ERRORWIDTH := vr200
	store i64 %vr200, i64* %ERRORWIDTH.30

	; conv MODE => vr203
	%vr204 = load i32, i32* %MODE.22
	%vr203 = zext i32 %vr204 to i64

	; bop vr203 AND 65535
	%vr205 = and i64 %vr203, 65535
	%vr207 = load i64, i64* %PIXELHEIGHT.4
	%vr206 = bitcast i64 %vr207 to i64

	; bop vr205 - vr206
	%vr208 = sub i64 %vr205, %vr206
	%vr209 = bitcast i64 %vr208 to i64

	; call llabs()
	; arg vr209
	%vr210 = call i64 @llabs( i64 %vr209 )

	; store ERRORHEIGHT := vr210
	store i64 %vr210, i64* %ERRORHEIGHT.31

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr214 = load i64, i64* %ERRORWIDTH.30
	%vr215 = load i64, i64* %ERRORHEIGHT.31
	%vr213 = add i64 %vr214, %vr215

	; branchbop vr213 >= ERRORVALUE
	%vr217 = load i64, i64* %ERRORVALUE.29
	%vr216 = icmp sge i64 %vr213, %vr217
	br i1 %vr216, label %.Lt_0285, label %.Lt_0315
.Lt_0315:

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr219 = load i64, i64* %ERRORWIDTH.30
	%vr220 = load i64, i64* %ERRORHEIGHT.31
	%vr218 = add i64 %vr219, %vr220

	; store ERRORVALUE := vr218
	store i64 %vr218, i64* %ERRORVALUE.29

	; store FOUNDMODE := MODE
	%vr221 = load i32, i32* %MODE.22
	store i32 %vr221, i32* %FOUNDMODE.21

	; label .Lt_0285
	br label %.Lt_0285
.Lt_0285:

	; label .Lt_0284
	br label %.Lt_0284
.Lt_0284:

	; call fb_GfxScreenList()
	; arg 0
	%vr222 = call i32 @fb_GfxScreenList( i32 0 )

	; store MODE := vr222
	store i32 %vr222, i32* %MODE.22

	; goto .Lt_0282
	br label %.Lt_0282
.Lt_0316:

	; label .Lt_0283
	br label %.Lt_0283
.Lt_0283:

	; label .Lt_0281
	br label %.Lt_0281
.Lt_0281:

	; label .Lt_0280
	br label %.Lt_0280
.Lt_0280:

	; conv FOUNDMODE => vr224
	%vr225 = load i32, i32* %FOUNDMODE.21
	%vr224 = sext i32 %vr225 to i64

	; branchbop vr224 == 0
	%vr226 = icmp eq i64 %vr224, 0
	br i1 %vr226, label %.Lt_0287, label %.Lt_0317
.Lt_0317:

	; goto .Lt_027E
	br label %.Lt_027E
.Lt_0318:

	; label .Lt_0287
	br label %.Lt_0287
.Lt_0287:

	; label .Lt_027D
	br label %.Lt_027D
.Lt_027D:

	; bop I + 1
	%vr228 = load i64, i64* %I.28
	%vr227 = add i64 %vr228, 1

	; store I := vr227
	store i64 %vr227, i64* %I.28

	; label .Lt_027C
	br label %.Lt_027C
.Lt_027C:

	; branchbop I <= 1
	%vr230 = load i64, i64* %I.28
	%vr229 = icmp sle i64 %vr230, 1
	br i1 %vr229, label %.Lt_027F, label %.Lt_0319
.Lt_0319:

	; label .Lt_027E
	br label %.Lt_027E
.Lt_027E:

	; label .Lt_0272
	br label %.Lt_0272
.Lt_0272:

	; conv FOUNDMODE => vr231
	%vr232 = load i32, i32* %FOUNDMODE.21
	%vr231 = sext i32 %vr232 to i64

	; branchbop vr231 == 0
	%vr233 = icmp eq i64 %vr231, 0
	br i1 %vr233, label %.Lt_0289, label %.Lt_031A
.Lt_031A:

	; conv FOUNDMODE => vr234
	%vr235 = load i32, i32* %FOUNDMODE.21
	%vr234 = zext i32 %vr235 to i64

	; bop vr234 AND 4294901760
	%vr236 = and i64 %vr234, 4294901760

	; bop vr236 SHR 16
	%vr238 = bitcast i64 16 to i64
	%vr237 = ashr i64 %vr236, %vr238
	%vr239 = bitcast i64 %vr237 to i64

	; store PIXELWIDTH := vr239
	store i64 %vr239, i64* %PIXELWIDTH.3

	; conv FOUNDMODE => vr240
	%vr241 = load i32, i32* %FOUNDMODE.21
	%vr240 = zext i32 %vr241 to i64

	; bop vr240 AND 65535
	%vr242 = and i64 %vr240, 65535
	%vr243 = bitcast i64 %vr242 to i64

	; store PIXELHEIGHT := vr243
	store i64 %vr243, i64* %PIXELHEIGHT.4

	; goto .Lt_0288
	br label %.Lt_0288
.Lt_031B:

	; label .Lt_0289
	br label %.Lt_0289
.Lt_0289:

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; label .Lt_0288
	br label %.Lt_0288
.Lt_0288:

	; label .Lt_026F
	br label %.Lt_026F
.Lt_026F:

	; label .Lt_026E
	br label %.Lt_026E
.Lt_026E:

	; conv FULLSCREEN => vr244
	%vr245 = load i8, i8* %FULLSCREEN.7
	%vr244 = sext i8 %vr245 to i64

	; branchbop vr244 == 0
	%vr246 = icmp eq i64 %vr244, 0
	br i1 %vr246, label %.Lt_028A, label %.Lt_031C
.Lt_031C:

	; store LT_028B := 1
	store i64 1, i64* %LT_028B.20

	; goto .Lt_031D
	br label %.Lt_031D
.Lt_031E:

	; label .Lt_028A
	br label %.Lt_028A
.Lt_028A:

	; store LT_028B := 0
	store i64 0, i64* %LT_028B.20

	; label .Lt_031D
	br label %.Lt_031D
.Lt_031D:

	; bop LT_028B OR 2
	%vr248 = load i64, i64* %LT_028B.20
	%vr247 = or i64 %vr248, 2

	; conv vr247 => vr249
	%vr249 = trunc i64 %vr247 to i32

	; conv COLORBITS => vr250
	%vr251 = load i64, i64* %COLORBITS.5
	%vr250 = trunc i64 %vr251 to i32

	; conv PIXELHEIGHT => vr252
	%vr253 = load i64, i64* %PIXELHEIGHT.4
	%vr252 = trunc i64 %vr253 to i32

	; conv PIXELWIDTH => vr254
	%vr255 = load i64, i64* %PIXELWIDTH.3
	%vr254 = trunc i64 %vr255 to i32

	; call fb_GfxScreenRes()
	; arg vr254
	; arg vr252
	; arg vr250
	; arg 1
	; arg vr249
	; arg 0
	%vr256 = call i32 @fb_GfxScreenRes( i32 %vr254, i32 %vr252, i32 %vr250, i32 1, i32 %vr249, i32 0 )

	; conv vr256 => vr259
	%vr259 = sext i32 %vr256 to i64

	; branchbop vr259 == 0
	%vr260 = icmp eq i64 %vr259, 0
	br i1 %vr260, label %.Lt_028D, label %.Lt_031F
.Lt_031F:

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; conv B => vr261
	%vr262 = load i64, i64* %B.10
	%vr261 = trunc i64 %vr262 to i32

	; call fb_GfxScreenRes()
	; arg 640
	; arg 350
	; arg vr261
	; arg 1
	; arg 2
	; arg 0
	%vr263 = call i32 @fb_GfxScreenRes( i32 640, i32 350, i32 %vr261, i32 1, i32 2, i32 0 )

	; conv vr263 => vr269
	%vr269 = sext i32 %vr263 to i64

	; branchbop vr269 == 0
	%vr270 = icmp eq i64 %vr269, 0
	br i1 %vr270, label %.Lt_028F, label %.Lt_0320
.Lt_0320:

	; localvar LT_0293
	%LT_0293.32 = alloca %FBSTRING

	; localvar LT_0294
	%LT_0294.33 = alloca %FBSTRING

	; localvar LT_0295
	%LT_0295.34 = alloca %FBSTRING

	; localvar LT_0296
	%LT_0296.35 = alloca %FBSTRING

	; localvar LT_0297
	%LT_0297.36 = alloca %FBSTRING

	; addrof LT_0297

	; memclear LT_0297
	%vr272 = bitcast %FBSTRING* %LT_0297.36 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr272, i8 0, i32 24, i32 1, i1 false )
	%vr273 = bitcast i8* bitcast ([11 x i8]* @Lt_0292 to i8*) to i8*

	; call fb_LongintToStr()
	; arg H
	%vr276 = load i64, i64* %H.9
	%vr275 = call %FBSTRING* @fb_LongintToStr( i64 %vr276 )
	%vr278 = bitcast i8* bitcast ([2 x i8]* @Lt_0291 to i8*) to i8*

	; call fb_LongintToStr()
	; arg W
	%vr281 = load i64, i64* %W.8
	%vr280 = call %FBSTRING* @fb_LongintToStr( i64 %vr281 )
	%vr283 = bitcast i8* bitcast ([11 x i8]* @Lt_0290 to i8*) to i8*

	; addrof LT_0293

	; memclear LT_0293
	%vr285 = bitcast %FBSTRING* %LT_0293.32 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr285, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0293

	; call fb_StrConcat()
	; arg LT_0293
	; arg vr283
	; arg 11
	; arg vr280
	%vr289 = bitcast %FBSTRING* %vr280 to i8*
	; arg -1
	%vr287 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0293.32, i8* %vr283, i64 11, i8* %vr289, i64 -1 )

	; addrof LT_0294

	; memclear LT_0294
	%vr292 = bitcast %FBSTRING* %LT_0294.33 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr292, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0294

	; call fb_StrConcat()
	; arg LT_0294
	; arg vr287
	%vr295 = bitcast %FBSTRING* %vr287 to i8*
	; arg -1
	; arg vr278
	; arg 2
	%vr294 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0294.33, i8* %vr295, i64 -1, i8* %vr278, i64 2 )

	; addrof LT_0295

	; memclear LT_0295
	%vr299 = bitcast %FBSTRING* %LT_0295.34 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr299, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0295

	; call fb_StrConcat()
	; arg LT_0295
	; arg vr294
	%vr302 = bitcast %FBSTRING* %vr294 to i8*
	; arg -1
	; arg vr275
	%vr304 = bitcast %FBSTRING* %vr275 to i8*
	; arg -1
	%vr301 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0295.34, i8* %vr302, i64 -1, i8* %vr304, i64 -1 )

	; addrof LT_0296

	; memclear LT_0296
	%vr307 = bitcast %FBSTRING* %LT_0296.35 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr307, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0296

	; call fb_StrConcat()
	; arg LT_0296
	; arg vr301
	%vr310 = bitcast %FBSTRING* %vr301 to i8*
	; arg -1
	; arg vr273
	; arg 11
	%vr309 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0296.35, i8* %vr310, i64 -1, i8* %vr273, i64 11 )

	; addrof LT_0297
	%vr314 = bitcast %FBSTRING* %LT_0297.36 to i8*

	; call fb_StrAssign()
	; arg vr314
	; arg -1
	; arg vr309
	%vr317 = bitcast %FBSTRING* %vr309 to i8*
	; arg -1
	; arg 0
	%vr315 = call %FBSTRING* @fb_StrAssign( i8* %vr314, i64 -1, i8* %vr317, i64 -1, i32 0 )

	; addrof LT_0297

	; call ERROREXIT()
	; arg LT_0297
	call void @ERROREXIT( %FBSTRING* %LT_0297.36 )

	; addrof LT_0297
	%vr322 = bitcast %FBSTRING* %LT_0297.36 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr322
	call void @fb_StrDelete( %FBSTRING* %vr322 )

	; label .Lt_028F
	br label %.Lt_028F
.Lt_028F:

	; label .Lt_028E
	br label %.Lt_028E
.Lt_028E:

	; label .Lt_028D
	br label %.Lt_028D
.Lt_028D:

	; label .Lt_028C
	br label %.Lt_028C
.Lt_028C:

	; call fb_GfxFlip()
	; arg -1
	; arg -1
	%vr323 = call i32 @fb_GfxFlip( i32 -1, i32 -1 )

	; call fb_GfxGetGLProcAddress()
	; arg Lt_0298
	%vr327 = bitcast i8* bitcast ([15 x i8]* @Lt_0298 to i8*) to i8*
	%vr326 = call i8* @fb_GfxGetGLProcAddress( i8* %vr327 )
	%vr328 = bitcast i8* %vr326 to i32 ( i32 )*

	; store GLCREATESHADER := vr328
	store i32 ( i32 )* %vr328, i32 ( i32 )** @GLCREATESHADER
	%vr330 = load i32 ( i32 )*, i32 ( i32 )** @GLCREATESHADER
	%vr329 = ptrtoint i32 ( i32 )* %vr330 to i64

	; branchbop vr329 <> 0
	%vr331 = icmp ne i64 %vr329, 0
	br i1 %vr331, label %.Lt_029A, label %.Lt_0321
.Lt_0321:

	; localvar LT_029B
	%LT_029B.37 = alloca %FBSTRING

	; addrof LT_029B

	; memclear LT_029B
	%vr333 = bitcast %FBSTRING* %LT_029B.37 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr333, i8 0, i32 24, i32 1, i1 false )
	%vr334 = bitcast i8* bitcast ([15 x i8]* @Lt_0298 to i8*) to i8*

	; addrof LT_029B
	%vr336 = bitcast %FBSTRING* %LT_029B.37 to i8*

	; call fb_StrAssign()
	; arg vr336
	; arg -1
	; arg vr334
	; arg 15
	; arg 0
	%vr337 = call %FBSTRING* @fb_StrAssign( i8* %vr336, i64 -1, i8* %vr334, i64 15, i32 0 )

	; addrof LT_029B

	; call ERROREXIT()
	; arg LT_029B
	call void @ERROREXIT( %FBSTRING* %LT_029B.37 )

	; addrof LT_029B
	%vr343 = bitcast %FBSTRING* %LT_029B.37 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr343
	call void @fb_StrDelete( %FBSTRING* %vr343 )

	; label .Lt_029A
	br label %.Lt_029A
.Lt_029A:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_029C
	%vr345 = bitcast i8* bitcast ([15 x i8]* @Lt_029C to i8*) to i8*
	%vr344 = call i8* @fb_GfxGetGLProcAddress( i8* %vr345 )
	%vr346 = bitcast i8* %vr344 to void ( i32 )*

	; store GLDELETESHADER := vr346
	store void ( i32 )* %vr346, void ( i32 )** @GLDELETESHADER
	%vr348 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	%vr347 = ptrtoint void ( i32 )* %vr348 to i64

	; branchbop vr347 <> 0
	%vr349 = icmp ne i64 %vr347, 0
	br i1 %vr349, label %.Lt_029E, label %.Lt_0322
.Lt_0322:

	; localvar LT_029F
	%LT_029F.38 = alloca %FBSTRING

	; addrof LT_029F

	; memclear LT_029F
	%vr351 = bitcast %FBSTRING* %LT_029F.38 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr351, i8 0, i32 24, i32 1, i1 false )
	%vr352 = bitcast i8* bitcast ([15 x i8]* @Lt_029C to i8*) to i8*

	; addrof LT_029F
	%vr354 = bitcast %FBSTRING* %LT_029F.38 to i8*

	; call fb_StrAssign()
	; arg vr354
	; arg -1
	; arg vr352
	; arg 15
	; arg 0
	%vr355 = call %FBSTRING* @fb_StrAssign( i8* %vr354, i64 -1, i8* %vr352, i64 15, i32 0 )

	; addrof LT_029F

	; call ERROREXIT()
	; arg LT_029F
	call void @ERROREXIT( %FBSTRING* %LT_029F.38 )

	; addrof LT_029F
	%vr361 = bitcast %FBSTRING* %LT_029F.38 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr361
	call void @fb_StrDelete( %FBSTRING* %vr361 )

	; label .Lt_029E
	br label %.Lt_029E
.Lt_029E:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A0
	%vr363 = bitcast i8* bitcast ([15 x i8]* @Lt_02A0 to i8*) to i8*
	%vr362 = call i8* @fb_GfxGetGLProcAddress( i8* %vr363 )
	%vr364 = bitcast i8* %vr362 to void ( i32, i32, i8**, i32* )*

	; store GLSHADERSOURCE := vr364
	store void ( i32, i32, i8**, i32* )* %vr364, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	%vr366 = load void ( i32, i32, i8**, i32* )*, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	%vr365 = ptrtoint void ( i32, i32, i8**, i32* )* %vr366 to i64

	; branchbop vr365 <> 0
	%vr367 = icmp ne i64 %vr365, 0
	br i1 %vr367, label %.Lt_02A2, label %.Lt_0323
.Lt_0323:

	; localvar LT_02A3
	%LT_02A3.39 = alloca %FBSTRING

	; addrof LT_02A3

	; memclear LT_02A3
	%vr369 = bitcast %FBSTRING* %LT_02A3.39 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr369, i8 0, i32 24, i32 1, i1 false )
	%vr370 = bitcast i8* bitcast ([15 x i8]* @Lt_02A0 to i8*) to i8*

	; addrof LT_02A3
	%vr372 = bitcast %FBSTRING* %LT_02A3.39 to i8*

	; call fb_StrAssign()
	; arg vr372
	; arg -1
	; arg vr370
	; arg 15
	; arg 0
	%vr373 = call %FBSTRING* @fb_StrAssign( i8* %vr372, i64 -1, i8* %vr370, i64 15, i32 0 )

	; addrof LT_02A3

	; call ERROREXIT()
	; arg LT_02A3
	call void @ERROREXIT( %FBSTRING* %LT_02A3.39 )

	; addrof LT_02A3
	%vr379 = bitcast %FBSTRING* %LT_02A3.39 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr379
	call void @fb_StrDelete( %FBSTRING* %vr379 )

	; label .Lt_02A2
	br label %.Lt_02A2
.Lt_02A2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A4
	%vr381 = bitcast i8* bitcast ([16 x i8]* @Lt_02A4 to i8*) to i8*
	%vr380 = call i8* @fb_GfxGetGLProcAddress( i8* %vr381 )
	%vr382 = bitcast i8* %vr380 to void ( i32 )*

	; store GLCOMPILESHADER := vr382
	store void ( i32 )* %vr382, void ( i32 )** @GLCOMPILESHADER
	%vr384 = load void ( i32 )*, void ( i32 )** @GLCOMPILESHADER
	%vr383 = ptrtoint void ( i32 )* %vr384 to i64

	; branchbop vr383 <> 0
	%vr385 = icmp ne i64 %vr383, 0
	br i1 %vr385, label %.Lt_02A6, label %.Lt_0324
.Lt_0324:

	; localvar LT_02A7
	%LT_02A7.40 = alloca %FBSTRING

	; addrof LT_02A7

	; memclear LT_02A7
	%vr387 = bitcast %FBSTRING* %LT_02A7.40 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr387, i8 0, i32 24, i32 1, i1 false )
	%vr388 = bitcast i8* bitcast ([16 x i8]* @Lt_02A4 to i8*) to i8*

	; addrof LT_02A7
	%vr390 = bitcast %FBSTRING* %LT_02A7.40 to i8*

	; call fb_StrAssign()
	; arg vr390
	; arg -1
	; arg vr388
	; arg 16
	; arg 0
	%vr391 = call %FBSTRING* @fb_StrAssign( i8* %vr390, i64 -1, i8* %vr388, i64 16, i32 0 )

	; addrof LT_02A7

	; call ERROREXIT()
	; arg LT_02A7
	call void @ERROREXIT( %FBSTRING* %LT_02A7.40 )

	; addrof LT_02A7
	%vr397 = bitcast %FBSTRING* %LT_02A7.40 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr397
	call void @fb_StrDelete( %FBSTRING* %vr397 )

	; label .Lt_02A6
	br label %.Lt_02A6
.Lt_02A6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A8
	%vr399 = bitcast i8* bitcast ([14 x i8]* @Lt_02A8 to i8*) to i8*
	%vr398 = call i8* @fb_GfxGetGLProcAddress( i8* %vr399 )
	%vr400 = bitcast i8* %vr398 to void ( i32, i32, i32* )*

	; store GLGETSHADERIV := vr400
	store void ( i32, i32, i32* )* %vr400, void ( i32, i32, i32* )** @GLGETSHADERIV
	%vr402 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	%vr401 = ptrtoint void ( i32, i32, i32* )* %vr402 to i64

	; branchbop vr401 <> 0
	%vr403 = icmp ne i64 %vr401, 0
	br i1 %vr403, label %.Lt_02AA, label %.Lt_0325
.Lt_0325:

	; localvar LT_02AB
	%LT_02AB.41 = alloca %FBSTRING

	; addrof LT_02AB

	; memclear LT_02AB
	%vr405 = bitcast %FBSTRING* %LT_02AB.41 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr405, i8 0, i32 24, i32 1, i1 false )
	%vr406 = bitcast i8* bitcast ([14 x i8]* @Lt_02A8 to i8*) to i8*

	; addrof LT_02AB
	%vr408 = bitcast %FBSTRING* %LT_02AB.41 to i8*

	; call fb_StrAssign()
	; arg vr408
	; arg -1
	; arg vr406
	; arg 14
	; arg 0
	%vr409 = call %FBSTRING* @fb_StrAssign( i8* %vr408, i64 -1, i8* %vr406, i64 14, i32 0 )

	; addrof LT_02AB

	; call ERROREXIT()
	; arg LT_02AB
	call void @ERROREXIT( %FBSTRING* %LT_02AB.41 )

	; addrof LT_02AB
	%vr415 = bitcast %FBSTRING* %LT_02AB.41 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr415
	call void @fb_StrDelete( %FBSTRING* %vr415 )

	; label .Lt_02AA
	br label %.Lt_02AA
.Lt_02AA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02AC
	%vr417 = bitcast i8* bitcast ([19 x i8]* @Lt_02AC to i8*) to i8*
	%vr416 = call i8* @fb_GfxGetGLProcAddress( i8* %vr417 )
	%vr418 = bitcast i8* %vr416 to void ( i32, i32, i32*, i8* )*

	; store GLGETSHADERINFOLOG := vr418
	store void ( i32, i32, i32*, i8* )* %vr418, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	%vr420 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	%vr419 = ptrtoint void ( i32, i32, i32*, i8* )* %vr420 to i64

	; branchbop vr419 <> 0
	%vr421 = icmp ne i64 %vr419, 0
	br i1 %vr421, label %.Lt_02AE, label %.Lt_0326
.Lt_0326:

	; localvar LT_02AF
	%LT_02AF.42 = alloca %FBSTRING

	; addrof LT_02AF

	; memclear LT_02AF
	%vr423 = bitcast %FBSTRING* %LT_02AF.42 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr423, i8 0, i32 24, i32 1, i1 false )
	%vr424 = bitcast i8* bitcast ([19 x i8]* @Lt_02AC to i8*) to i8*

	; addrof LT_02AF
	%vr426 = bitcast %FBSTRING* %LT_02AF.42 to i8*

	; call fb_StrAssign()
	; arg vr426
	; arg -1
	; arg vr424
	; arg 19
	; arg 0
	%vr427 = call %FBSTRING* @fb_StrAssign( i8* %vr426, i64 -1, i8* %vr424, i64 19, i32 0 )

	; addrof LT_02AF

	; call ERROREXIT()
	; arg LT_02AF
	call void @ERROREXIT( %FBSTRING* %LT_02AF.42 )

	; addrof LT_02AF
	%vr433 = bitcast %FBSTRING* %LT_02AF.42 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr433
	call void @fb_StrDelete( %FBSTRING* %vr433 )

	; label .Lt_02AE
	br label %.Lt_02AE
.Lt_02AE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B0
	%vr435 = bitcast i8* bitcast ([16 x i8]* @Lt_02B0 to i8*) to i8*
	%vr434 = call i8* @fb_GfxGetGLProcAddress( i8* %vr435 )
	%vr436 = bitcast i8* %vr434 to i32 (  )*

	; store GLCREATEPROGRAM := vr436
	store i32 (  )* %vr436, i32 (  )** @GLCREATEPROGRAM
	%vr438 = load i32 (  )*, i32 (  )** @GLCREATEPROGRAM
	%vr437 = ptrtoint i32 (  )* %vr438 to i64

	; branchbop vr437 <> 0
	%vr439 = icmp ne i64 %vr437, 0
	br i1 %vr439, label %.Lt_02B2, label %.Lt_0327
.Lt_0327:

	; localvar LT_02B3
	%LT_02B3.43 = alloca %FBSTRING

	; addrof LT_02B3

	; memclear LT_02B3
	%vr441 = bitcast %FBSTRING* %LT_02B3.43 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr441, i8 0, i32 24, i32 1, i1 false )
	%vr442 = bitcast i8* bitcast ([16 x i8]* @Lt_02B0 to i8*) to i8*

	; addrof LT_02B3
	%vr444 = bitcast %FBSTRING* %LT_02B3.43 to i8*

	; call fb_StrAssign()
	; arg vr444
	; arg -1
	; arg vr442
	; arg 16
	; arg 0
	%vr445 = call %FBSTRING* @fb_StrAssign( i8* %vr444, i64 -1, i8* %vr442, i64 16, i32 0 )

	; addrof LT_02B3

	; call ERROREXIT()
	; arg LT_02B3
	call void @ERROREXIT( %FBSTRING* %LT_02B3.43 )

	; addrof LT_02B3
	%vr451 = bitcast %FBSTRING* %LT_02B3.43 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr451
	call void @fb_StrDelete( %FBSTRING* %vr451 )

	; label .Lt_02B2
	br label %.Lt_02B2
.Lt_02B2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B4
	%vr453 = bitcast i8* bitcast ([16 x i8]* @Lt_02B4 to i8*) to i8*
	%vr452 = call i8* @fb_GfxGetGLProcAddress( i8* %vr453 )
	%vr454 = bitcast i8* %vr452 to void ( i32 )*

	; store GLDELETEPROGRAM := vr454
	store void ( i32 )* %vr454, void ( i32 )** @GLDELETEPROGRAM
	%vr456 = load void ( i32 )*, void ( i32 )** @GLDELETEPROGRAM
	%vr455 = ptrtoint void ( i32 )* %vr456 to i64

	; branchbop vr455 <> 0
	%vr457 = icmp ne i64 %vr455, 0
	br i1 %vr457, label %.Lt_02B6, label %.Lt_0328
.Lt_0328:

	; localvar LT_02B7
	%LT_02B7.44 = alloca %FBSTRING

	; addrof LT_02B7

	; memclear LT_02B7
	%vr459 = bitcast %FBSTRING* %LT_02B7.44 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr459, i8 0, i32 24, i32 1, i1 false )
	%vr460 = bitcast i8* bitcast ([16 x i8]* @Lt_02B4 to i8*) to i8*

	; addrof LT_02B7
	%vr462 = bitcast %FBSTRING* %LT_02B7.44 to i8*

	; call fb_StrAssign()
	; arg vr462
	; arg -1
	; arg vr460
	; arg 16
	; arg 0
	%vr463 = call %FBSTRING* @fb_StrAssign( i8* %vr462, i64 -1, i8* %vr460, i64 16, i32 0 )

	; addrof LT_02B7

	; call ERROREXIT()
	; arg LT_02B7
	call void @ERROREXIT( %FBSTRING* %LT_02B7.44 )

	; addrof LT_02B7
	%vr469 = bitcast %FBSTRING* %LT_02B7.44 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr469
	call void @fb_StrDelete( %FBSTRING* %vr469 )

	; label .Lt_02B6
	br label %.Lt_02B6
.Lt_02B6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B8
	%vr471 = bitcast i8* bitcast ([15 x i8]* @Lt_02B8 to i8*) to i8*
	%vr470 = call i8* @fb_GfxGetGLProcAddress( i8* %vr471 )
	%vr472 = bitcast i8* %vr470 to void ( i32, i32 )*

	; store GLATTACHSHADER := vr472
	store void ( i32, i32 )* %vr472, void ( i32, i32 )** @GLATTACHSHADER
	%vr474 = load void ( i32, i32 )*, void ( i32, i32 )** @GLATTACHSHADER
	%vr473 = ptrtoint void ( i32, i32 )* %vr474 to i64

	; branchbop vr473 <> 0
	%vr475 = icmp ne i64 %vr473, 0
	br i1 %vr475, label %.Lt_02BA, label %.Lt_0329
.Lt_0329:

	; localvar LT_02BB
	%LT_02BB.45 = alloca %FBSTRING

	; addrof LT_02BB

	; memclear LT_02BB
	%vr477 = bitcast %FBSTRING* %LT_02BB.45 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr477, i8 0, i32 24, i32 1, i1 false )
	%vr478 = bitcast i8* bitcast ([15 x i8]* @Lt_02B8 to i8*) to i8*

	; addrof LT_02BB
	%vr480 = bitcast %FBSTRING* %LT_02BB.45 to i8*

	; call fb_StrAssign()
	; arg vr480
	; arg -1
	; arg vr478
	; arg 15
	; arg 0
	%vr481 = call %FBSTRING* @fb_StrAssign( i8* %vr480, i64 -1, i8* %vr478, i64 15, i32 0 )

	; addrof LT_02BB

	; call ERROREXIT()
	; arg LT_02BB
	call void @ERROREXIT( %FBSTRING* %LT_02BB.45 )

	; addrof LT_02BB
	%vr487 = bitcast %FBSTRING* %LT_02BB.45 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr487
	call void @fb_StrDelete( %FBSTRING* %vr487 )

	; label .Lt_02BA
	br label %.Lt_02BA
.Lt_02BA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02BC
	%vr489 = bitcast i8* bitcast ([15 x i8]* @Lt_02BC to i8*) to i8*
	%vr488 = call i8* @fb_GfxGetGLProcAddress( i8* %vr489 )
	%vr490 = bitcast i8* %vr488 to void ( i32, i32 )*

	; store GLDETACHSHADER := vr490
	store void ( i32, i32 )* %vr490, void ( i32, i32 )** @GLDETACHSHADER
	%vr492 = load void ( i32, i32 )*, void ( i32, i32 )** @GLDETACHSHADER
	%vr491 = ptrtoint void ( i32, i32 )* %vr492 to i64

	; branchbop vr491 <> 0
	%vr493 = icmp ne i64 %vr491, 0
	br i1 %vr493, label %.Lt_02BE, label %.Lt_032A
.Lt_032A:

	; localvar LT_02BF
	%LT_02BF.46 = alloca %FBSTRING

	; addrof LT_02BF

	; memclear LT_02BF
	%vr495 = bitcast %FBSTRING* %LT_02BF.46 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr495, i8 0, i32 24, i32 1, i1 false )
	%vr496 = bitcast i8* bitcast ([15 x i8]* @Lt_02BC to i8*) to i8*

	; addrof LT_02BF
	%vr498 = bitcast %FBSTRING* %LT_02BF.46 to i8*

	; call fb_StrAssign()
	; arg vr498
	; arg -1
	; arg vr496
	; arg 15
	; arg 0
	%vr499 = call %FBSTRING* @fb_StrAssign( i8* %vr498, i64 -1, i8* %vr496, i64 15, i32 0 )

	; addrof LT_02BF

	; call ERROREXIT()
	; arg LT_02BF
	call void @ERROREXIT( %FBSTRING* %LT_02BF.46 )

	; addrof LT_02BF
	%vr505 = bitcast %FBSTRING* %LT_02BF.46 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr505
	call void @fb_StrDelete( %FBSTRING* %vr505 )

	; label .Lt_02BE
	br label %.Lt_02BE
.Lt_02BE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C0
	%vr507 = bitcast i8* bitcast ([14 x i8]* @Lt_02C0 to i8*) to i8*
	%vr506 = call i8* @fb_GfxGetGLProcAddress( i8* %vr507 )
	%vr508 = bitcast i8* %vr506 to void ( i32 )*

	; store GLLINKPROGRAM := vr508
	store void ( i32 )* %vr508, void ( i32 )** @GLLINKPROGRAM
	%vr510 = load void ( i32 )*, void ( i32 )** @GLLINKPROGRAM
	%vr509 = ptrtoint void ( i32 )* %vr510 to i64

	; branchbop vr509 <> 0
	%vr511 = icmp ne i64 %vr509, 0
	br i1 %vr511, label %.Lt_02C2, label %.Lt_032B
.Lt_032B:

	; localvar LT_02C3
	%LT_02C3.47 = alloca %FBSTRING

	; addrof LT_02C3

	; memclear LT_02C3
	%vr513 = bitcast %FBSTRING* %LT_02C3.47 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr513, i8 0, i32 24, i32 1, i1 false )
	%vr514 = bitcast i8* bitcast ([14 x i8]* @Lt_02C0 to i8*) to i8*

	; addrof LT_02C3
	%vr516 = bitcast %FBSTRING* %LT_02C3.47 to i8*

	; call fb_StrAssign()
	; arg vr516
	; arg -1
	; arg vr514
	; arg 14
	; arg 0
	%vr517 = call %FBSTRING* @fb_StrAssign( i8* %vr516, i64 -1, i8* %vr514, i64 14, i32 0 )

	; addrof LT_02C3

	; call ERROREXIT()
	; arg LT_02C3
	call void @ERROREXIT( %FBSTRING* %LT_02C3.47 )

	; addrof LT_02C3
	%vr523 = bitcast %FBSTRING* %LT_02C3.47 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr523
	call void @fb_StrDelete( %FBSTRING* %vr523 )

	; label .Lt_02C2
	br label %.Lt_02C2
.Lt_02C2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C4
	%vr525 = bitcast i8* bitcast ([15 x i8]* @Lt_02C4 to i8*) to i8*
	%vr524 = call i8* @fb_GfxGetGLProcAddress( i8* %vr525 )
	%vr526 = bitcast i8* %vr524 to void ( i32, i32, i32* )*

	; store GLGETPROGRAMIV := vr526
	store void ( i32, i32, i32* )* %vr526, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	%vr528 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	%vr527 = ptrtoint void ( i32, i32, i32* )* %vr528 to i64

	; branchbop vr527 <> 0
	%vr529 = icmp ne i64 %vr527, 0
	br i1 %vr529, label %.Lt_02C6, label %.Lt_032C
.Lt_032C:

	; localvar LT_02C7
	%LT_02C7.48 = alloca %FBSTRING

	; addrof LT_02C7

	; memclear LT_02C7
	%vr531 = bitcast %FBSTRING* %LT_02C7.48 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr531, i8 0, i32 24, i32 1, i1 false )
	%vr532 = bitcast i8* bitcast ([15 x i8]* @Lt_02C4 to i8*) to i8*

	; addrof LT_02C7
	%vr534 = bitcast %FBSTRING* %LT_02C7.48 to i8*

	; call fb_StrAssign()
	; arg vr534
	; arg -1
	; arg vr532
	; arg 15
	; arg 0
	%vr535 = call %FBSTRING* @fb_StrAssign( i8* %vr534, i64 -1, i8* %vr532, i64 15, i32 0 )

	; addrof LT_02C7

	; call ERROREXIT()
	; arg LT_02C7
	call void @ERROREXIT( %FBSTRING* %LT_02C7.48 )

	; addrof LT_02C7
	%vr541 = bitcast %FBSTRING* %LT_02C7.48 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr541
	call void @fb_StrDelete( %FBSTRING* %vr541 )

	; label .Lt_02C6
	br label %.Lt_02C6
.Lt_02C6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C8
	%vr543 = bitcast i8* bitcast ([20 x i8]* @Lt_02C8 to i8*) to i8*
	%vr542 = call i8* @fb_GfxGetGLProcAddress( i8* %vr543 )
	%vr544 = bitcast i8* %vr542 to void ( i32, i32, i32*, i8* )*

	; store GLGETPROGRAMINFOLOG := vr544
	store void ( i32, i32, i32*, i8* )* %vr544, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	%vr546 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	%vr545 = ptrtoint void ( i32, i32, i32*, i8* )* %vr546 to i64

	; branchbop vr545 <> 0
	%vr547 = icmp ne i64 %vr545, 0
	br i1 %vr547, label %.Lt_02CA, label %.Lt_032D
.Lt_032D:

	; localvar LT_02CB
	%LT_02CB.49 = alloca %FBSTRING

	; addrof LT_02CB

	; memclear LT_02CB
	%vr549 = bitcast %FBSTRING* %LT_02CB.49 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr549, i8 0, i32 24, i32 1, i1 false )
	%vr550 = bitcast i8* bitcast ([20 x i8]* @Lt_02C8 to i8*) to i8*

	; addrof LT_02CB
	%vr552 = bitcast %FBSTRING* %LT_02CB.49 to i8*

	; call fb_StrAssign()
	; arg vr552
	; arg -1
	; arg vr550
	; arg 20
	; arg 0
	%vr553 = call %FBSTRING* @fb_StrAssign( i8* %vr552, i64 -1, i8* %vr550, i64 20, i32 0 )

	; addrof LT_02CB

	; call ERROREXIT()
	; arg LT_02CB
	call void @ERROREXIT( %FBSTRING* %LT_02CB.49 )

	; addrof LT_02CB
	%vr559 = bitcast %FBSTRING* %LT_02CB.49 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr559
	call void @fb_StrDelete( %FBSTRING* %vr559 )

	; label .Lt_02CA
	br label %.Lt_02CA
.Lt_02CA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02CC
	%vr561 = bitcast i8* bitcast ([13 x i8]* @Lt_02CC to i8*) to i8*
	%vr560 = call i8* @fb_GfxGetGLProcAddress( i8* %vr561 )
	%vr562 = bitcast i8* %vr560 to void ( i32 )*

	; store GLUSEPROGRAM := vr562
	store void ( i32 )* %vr562, void ( i32 )** @GLUSEPROGRAM
	%vr564 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	%vr563 = ptrtoint void ( i32 )* %vr564 to i64

	; branchbop vr563 <> 0
	%vr565 = icmp ne i64 %vr563, 0
	br i1 %vr565, label %.Lt_02CE, label %.Lt_032E
.Lt_032E:

	; localvar LT_02CF
	%LT_02CF.50 = alloca %FBSTRING

	; addrof LT_02CF

	; memclear LT_02CF
	%vr567 = bitcast %FBSTRING* %LT_02CF.50 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr567, i8 0, i32 24, i32 1, i1 false )
	%vr568 = bitcast i8* bitcast ([13 x i8]* @Lt_02CC to i8*) to i8*

	; addrof LT_02CF
	%vr570 = bitcast %FBSTRING* %LT_02CF.50 to i8*

	; call fb_StrAssign()
	; arg vr570
	; arg -1
	; arg vr568
	; arg 13
	; arg 0
	%vr571 = call %FBSTRING* @fb_StrAssign( i8* %vr570, i64 -1, i8* %vr568, i64 13, i32 0 )

	; addrof LT_02CF

	; call ERROREXIT()
	; arg LT_02CF
	call void @ERROREXIT( %FBSTRING* %LT_02CF.50 )

	; addrof LT_02CF
	%vr577 = bitcast %FBSTRING* %LT_02CF.50 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr577
	call void @fb_StrDelete( %FBSTRING* %vr577 )

	; label .Lt_02CE
	br label %.Lt_02CE
.Lt_02CE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D0
	%vr579 = bitcast i8* bitcast ([21 x i8]* @Lt_02D0 to i8*) to i8*
	%vr578 = call i8* @fb_GfxGetGLProcAddress( i8* %vr579 )
	%vr580 = bitcast i8* %vr578 to i32 ( i32, i8* )*

	; store GLGETUNIFORMLOCATION := vr580
	store i32 ( i32, i8* )* %vr580, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	%vr582 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	%vr581 = ptrtoint i32 ( i32, i8* )* %vr582 to i64

	; branchbop vr581 <> 0
	%vr583 = icmp ne i64 %vr581, 0
	br i1 %vr583, label %.Lt_02D2, label %.Lt_032F
.Lt_032F:

	; localvar LT_02D3
	%LT_02D3.51 = alloca %FBSTRING

	; addrof LT_02D3

	; memclear LT_02D3
	%vr585 = bitcast %FBSTRING* %LT_02D3.51 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr585, i8 0, i32 24, i32 1, i1 false )
	%vr586 = bitcast i8* bitcast ([21 x i8]* @Lt_02D0 to i8*) to i8*

	; addrof LT_02D3
	%vr588 = bitcast %FBSTRING* %LT_02D3.51 to i8*

	; call fb_StrAssign()
	; arg vr588
	; arg -1
	; arg vr586
	; arg 21
	; arg 0
	%vr589 = call %FBSTRING* @fb_StrAssign( i8* %vr588, i64 -1, i8* %vr586, i64 21, i32 0 )

	; addrof LT_02D3

	; call ERROREXIT()
	; arg LT_02D3
	call void @ERROREXIT( %FBSTRING* %LT_02D3.51 )

	; addrof LT_02D3
	%vr595 = bitcast %FBSTRING* %LT_02D3.51 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr595
	call void @fb_StrDelete( %FBSTRING* %vr595 )

	; label .Lt_02D2
	br label %.Lt_02D2
.Lt_02D2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D4
	%vr597 = bitcast i8* bitcast ([12 x i8]* @Lt_02D4 to i8*) to i8*
	%vr596 = call i8* @fb_GfxGetGLProcAddress( i8* %vr597 )
	%vr598 = bitcast i8* %vr596 to void ( i32, i32 )*

	; store GLUNIFORM1I := vr598
	store void ( i32, i32 )* %vr598, void ( i32, i32 )** @GLUNIFORM1I
	%vr600 = load void ( i32, i32 )*, void ( i32, i32 )** @GLUNIFORM1I
	%vr599 = ptrtoint void ( i32, i32 )* %vr600 to i64

	; branchbop vr599 <> 0
	%vr601 = icmp ne i64 %vr599, 0
	br i1 %vr601, label %.Lt_02D6, label %.Lt_0330
.Lt_0330:

	; localvar LT_02D7
	%LT_02D7.52 = alloca %FBSTRING

	; addrof LT_02D7

	; memclear LT_02D7
	%vr603 = bitcast %FBSTRING* %LT_02D7.52 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr603, i8 0, i32 24, i32 1, i1 false )
	%vr604 = bitcast i8* bitcast ([12 x i8]* @Lt_02D4 to i8*) to i8*

	; addrof LT_02D7
	%vr606 = bitcast %FBSTRING* %LT_02D7.52 to i8*

	; call fb_StrAssign()
	; arg vr606
	; arg -1
	; arg vr604
	; arg 12
	; arg 0
	%vr607 = call %FBSTRING* @fb_StrAssign( i8* %vr606, i64 -1, i8* %vr604, i64 12, i32 0 )

	; addrof LT_02D7

	; call ERROREXIT()
	; arg LT_02D7
	call void @ERROREXIT( %FBSTRING* %LT_02D7.52 )

	; addrof LT_02D7
	%vr613 = bitcast %FBSTRING* %LT_02D7.52 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr613
	call void @fb_StrDelete( %FBSTRING* %vr613 )

	; label .Lt_02D6
	br label %.Lt_02D6
.Lt_02D6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D8
	%vr615 = bitcast i8* bitcast ([12 x i8]* @Lt_02D8 to i8*) to i8*
	%vr614 = call i8* @fb_GfxGetGLProcAddress( i8* %vr615 )
	%vr616 = bitcast i8* %vr614 to void ( i32, float )*

	; store GLUNIFORM1F := vr616
	store void ( i32, float )* %vr616, void ( i32, float )** @GLUNIFORM1F
	%vr618 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	%vr617 = ptrtoint void ( i32, float )* %vr618 to i64

	; branchbop vr617 <> 0
	%vr619 = icmp ne i64 %vr617, 0
	br i1 %vr619, label %.Lt_02DA, label %.Lt_0331
.Lt_0331:

	; localvar LT_02DB
	%LT_02DB.53 = alloca %FBSTRING

	; addrof LT_02DB

	; memclear LT_02DB
	%vr621 = bitcast %FBSTRING* %LT_02DB.53 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr621, i8 0, i32 24, i32 1, i1 false )
	%vr622 = bitcast i8* bitcast ([12 x i8]* @Lt_02D8 to i8*) to i8*

	; addrof LT_02DB
	%vr624 = bitcast %FBSTRING* %LT_02DB.53 to i8*

	; call fb_StrAssign()
	; arg vr624
	; arg -1
	; arg vr622
	; arg 12
	; arg 0
	%vr625 = call %FBSTRING* @fb_StrAssign( i8* %vr624, i64 -1, i8* %vr622, i64 12, i32 0 )

	; addrof LT_02DB

	; call ERROREXIT()
	; arg LT_02DB
	call void @ERROREXIT( %FBSTRING* %LT_02DB.53 )

	; addrof LT_02DB
	%vr631 = bitcast %FBSTRING* %LT_02DB.53 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr631
	call void @fb_StrDelete( %FBSTRING* %vr631 )

	; label .Lt_02DA
	br label %.Lt_02DA
.Lt_02DA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02DC
	%vr633 = bitcast i8* bitcast ([12 x i8]* @Lt_02DC to i8*) to i8*
	%vr632 = call i8* @fb_GfxGetGLProcAddress( i8* %vr633 )
	%vr634 = bitcast i8* %vr632 to void ( i32, float, float, float )*

	; store GLUNIFORM3F := vr634
	store void ( i32, float, float, float )* %vr634, void ( i32, float, float, float )** @GLUNIFORM3F
	%vr636 = load void ( i32, float, float, float )*, void ( i32, float, float, float )** @GLUNIFORM3F
	%vr635 = ptrtoint void ( i32, float, float, float )* %vr636 to i64

	; branchbop vr635 <> 0
	%vr637 = icmp ne i64 %vr635, 0
	br i1 %vr637, label %.Lt_02DE, label %.Lt_0332
.Lt_0332:

	; localvar LT_02DF
	%LT_02DF.54 = alloca %FBSTRING

	; addrof LT_02DF

	; memclear LT_02DF
	%vr639 = bitcast %FBSTRING* %LT_02DF.54 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr639, i8 0, i32 24, i32 1, i1 false )
	%vr640 = bitcast i8* bitcast ([12 x i8]* @Lt_02DC to i8*) to i8*

	; addrof LT_02DF
	%vr642 = bitcast %FBSTRING* %LT_02DF.54 to i8*

	; call fb_StrAssign()
	; arg vr642
	; arg -1
	; arg vr640
	; arg 12
	; arg 0
	%vr643 = call %FBSTRING* @fb_StrAssign( i8* %vr642, i64 -1, i8* %vr640, i64 12, i32 0 )

	; addrof LT_02DF

	; call ERROREXIT()
	; arg LT_02DF
	call void @ERROREXIT( %FBSTRING* %LT_02DF.54 )

	; addrof LT_02DF
	%vr649 = bitcast %FBSTRING* %LT_02DF.54 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr649
	call void @fb_StrDelete( %FBSTRING* %vr649 )

	; label .Lt_02DE
	br label %.Lt_02DE
.Lt_02DE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E0
	%vr651 = bitcast i8* bitcast ([13 x i8]* @Lt_02E0 to i8*) to i8*
	%vr650 = call i8* @fb_GfxGetGLProcAddress( i8* %vr651 )
	%vr652 = bitcast i8* %vr650 to void ( i32, i32, float* )*

	; store GLUNIFORM3FV := vr652
	store void ( i32, i32, float* )* %vr652, void ( i32, i32, float* )** @GLUNIFORM3FV
	%vr654 = load void ( i32, i32, float* )*, void ( i32, i32, float* )** @GLUNIFORM3FV
	%vr653 = ptrtoint void ( i32, i32, float* )* %vr654 to i64

	; branchbop vr653 <> 0
	%vr655 = icmp ne i64 %vr653, 0
	br i1 %vr655, label %.Lt_02E2, label %.Lt_0333
.Lt_0333:

	; localvar LT_02E3
	%LT_02E3.55 = alloca %FBSTRING

	; addrof LT_02E3

	; memclear LT_02E3
	%vr657 = bitcast %FBSTRING* %LT_02E3.55 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr657, i8 0, i32 24, i32 1, i1 false )
	%vr658 = bitcast i8* bitcast ([13 x i8]* @Lt_02E0 to i8*) to i8*

	; addrof LT_02E3
	%vr660 = bitcast %FBSTRING* %LT_02E3.55 to i8*

	; call fb_StrAssign()
	; arg vr660
	; arg -1
	; arg vr658
	; arg 13
	; arg 0
	%vr661 = call %FBSTRING* @fb_StrAssign( i8* %vr660, i64 -1, i8* %vr658, i64 13, i32 0 )

	; addrof LT_02E3

	; call ERROREXIT()
	; arg LT_02E3
	call void @ERROREXIT( %FBSTRING* %LT_02E3.55 )

	; addrof LT_02E3
	%vr667 = bitcast %FBSTRING* %LT_02E3.55 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr667
	call void @fb_StrDelete( %FBSTRING* %vr667 )

	; label .Lt_02E2
	br label %.Lt_02E2
.Lt_02E2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E4
	%vr669 = bitcast i8* bitcast ([12 x i8]* @Lt_02E4 to i8*) to i8*
	%vr668 = call i8* @fb_GfxGetGLProcAddress( i8* %vr669 )
	%vr670 = bitcast i8* %vr668 to void ( i32, float, float, float, float )*

	; store GLUNIFORM4F := vr670
	store void ( i32, float, float, float, float )* %vr670, void ( i32, float, float, float, float )** @GLUNIFORM4F
	%vr672 = load void ( i32, float, float, float, float )*, void ( i32, float, float, float, float )** @GLUNIFORM4F
	%vr671 = ptrtoint void ( i32, float, float, float, float )* %vr672 to i64

	; branchbop vr671 <> 0
	%vr673 = icmp ne i64 %vr671, 0
	br i1 %vr673, label %.Lt_02E6, label %.Lt_0334
.Lt_0334:

	; localvar LT_02E7
	%LT_02E7.56 = alloca %FBSTRING

	; addrof LT_02E7

	; memclear LT_02E7
	%vr675 = bitcast %FBSTRING* %LT_02E7.56 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr675, i8 0, i32 24, i32 1, i1 false )
	%vr676 = bitcast i8* bitcast ([12 x i8]* @Lt_02E4 to i8*) to i8*

	; addrof LT_02E7
	%vr678 = bitcast %FBSTRING* %LT_02E7.56 to i8*

	; call fb_StrAssign()
	; arg vr678
	; arg -1
	; arg vr676
	; arg 12
	; arg 0
	%vr679 = call %FBSTRING* @fb_StrAssign( i8* %vr678, i64 -1, i8* %vr676, i64 12, i32 0 )

	; addrof LT_02E7

	; call ERROREXIT()
	; arg LT_02E7
	call void @ERROREXIT( %FBSTRING* %LT_02E7.56 )

	; addrof LT_02E7
	%vr685 = bitcast %FBSTRING* %LT_02E7.56 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr685
	call void @fb_StrDelete( %FBSTRING* %vr685 )

	; label .Lt_02E6
	br label %.Lt_02E6
.Lt_02E6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E8
	%vr687 = bitcast i8* bitcast ([13 x i8]* @Lt_02E8 to i8*) to i8*
	%vr686 = call i8* @fb_GfxGetGLProcAddress( i8* %vr687 )
	%vr688 = bitcast i8* %vr686 to void ( i32, i32, float* )*

	; store GLUNIFORM4FV := vr688
	store void ( i32, i32, float* )* %vr688, void ( i32, i32, float* )** @GLUNIFORM4FV
	%vr690 = load void ( i32, i32, float* )*, void ( i32, i32, float* )** @GLUNIFORM4FV
	%vr689 = ptrtoint void ( i32, i32, float* )* %vr690 to i64

	; branchbop vr689 <> 0
	%vr691 = icmp ne i64 %vr689, 0
	br i1 %vr691, label %.Lt_02EA, label %.Lt_0335
.Lt_0335:

	; localvar LT_02EB
	%LT_02EB.57 = alloca %FBSTRING

	; addrof LT_02EB

	; memclear LT_02EB
	%vr693 = bitcast %FBSTRING* %LT_02EB.57 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr693, i8 0, i32 24, i32 1, i1 false )
	%vr694 = bitcast i8* bitcast ([13 x i8]* @Lt_02E8 to i8*) to i8*

	; addrof LT_02EB
	%vr696 = bitcast %FBSTRING* %LT_02EB.57 to i8*

	; call fb_StrAssign()
	; arg vr696
	; arg -1
	; arg vr694
	; arg 13
	; arg 0
	%vr697 = call %FBSTRING* @fb_StrAssign( i8* %vr696, i64 -1, i8* %vr694, i64 13, i32 0 )

	; addrof LT_02EB

	; call ERROREXIT()
	; arg LT_02EB
	call void @ERROREXIT( %FBSTRING* %LT_02EB.57 )

	; addrof LT_02EB
	%vr703 = bitcast %FBSTRING* %LT_02EB.57 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr703
	call void @fb_StrDelete( %FBSTRING* %vr703 )

	; label .Lt_02EA
	br label %.Lt_02EA
.Lt_02EA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_02EC
	%vr705 = bitcast i8* bitcast ([38 x i8]* @Lt_02EC to i8*) to i8*
	; arg 37
	%vr704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr705, i64 37 )

	; call fb_GfxSetWindowTitle()
	; arg vr704
	%vr707 = bitcast %FBSTRING* %vr704 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr707 )

	; label .Lt_0253
	br label %.Lt_0253
.Lt_0253:
	ret void
}

define void @_ZN9SHADERTOYD1Ev( %SHADERTOY* %THIS.58$ ) nounwind
{

	; paramvar THIS
	%THIS.58 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.58$, %SHADERTOY** %THIS.58

	; label .Lt_033C
	br label %.Lt_033C
.Lt_033C:

	; deref THIS
	%vr1 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; conv vr1+4 => vr2
	%vr3 = ptrtoint %SHADERTOY* %vr1 to i64
	%vr4 = add i64 %vr3, 4
	%vr5 = inttoptr i64 %vr4 to i32*
	%vr6 = load i32, i32* %vr5
	%vr2 = sext i32 %vr6 to i64

	; branchbop vr2 == 0
	%vr7 = icmp eq i64 %vr2, 0
	br i1 %vr7, label %.Lt_033F, label %.Lt_0342
.Lt_0342:

	; callptr GLUSEPROGRAM
	%vr8 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	; arg 0
	call void %vr8( i32 0 )

	; deref THIS
	%vr10 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; conv vr10 => vr11
	%vr12 = ptrtoint %SHADERTOY* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i32*
	%vr14 = load i32, i32* %vr13
	%vr11 = sext i32 %vr14 to i64

	; branchbop vr11 == 0
	%vr15 = icmp eq i64 %vr11, 0
	br i1 %vr15, label %.Lt_0341, label %.Lt_0343
.Lt_0343:

	; deref THIS
	%vr17 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; deref THIS
	%vr19 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDETACHSHADER
	%vr20 = load void ( i32, i32 )*, void ( i32, i32 )** @GLDETACHSHADER
	; arg vr19+4
	%vr21 = ptrtoint %SHADERTOY* %vr19 to i64
	%vr22 = add i64 %vr21, 4
	%vr23 = inttoptr i64 %vr22 to i32*
	%vr24 = load i32, i32* %vr23
	; arg vr17
	%vr25 = ptrtoint %SHADERTOY* %vr17 to i64
	%vr26 = inttoptr i64 %vr25 to i32*
	%vr27 = load i32, i32* %vr26
	call void %vr20( i32 %vr24, i32 %vr27 )

	; deref THIS
	%vr29 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDELETESHADER
	%vr30 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr29
	%vr31 = ptrtoint %SHADERTOY* %vr29 to i64
	%vr32 = inttoptr i64 %vr31 to i32*
	%vr33 = load i32, i32* %vr32
	call void %vr30( i32 %vr33 )

	; label .Lt_0341
	br label %.Lt_0341
.Lt_0341:

	; label .Lt_0340
	br label %.Lt_0340
.Lt_0340:

	; deref THIS
	%vr35 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDELETEPROGRAM
	%vr36 = load void ( i32 )*, void ( i32 )** @GLDELETEPROGRAM
	; arg vr35+4
	%vr37 = ptrtoint %SHADERTOY* %vr35 to i64
	%vr38 = add i64 %vr37, 4
	%vr39 = inttoptr i64 %vr38 to i32*
	%vr40 = load i32, i32* %vr39
	call void %vr36( i32 %vr40 )

	; label .Lt_033F
	br label %.Lt_033F
.Lt_033F:

	; label .Lt_033E
	br label %.Lt_033E
.Lt_033E:

	; label .Lt_033D
	br label %.Lt_033D
.Lt_033D:

	; bop THIS + 8
	%vr42 = load %SHADERTOY*, %SHADERTOY** %THIS.58
	%vr43 = inttoptr i64 8 to %SHADERTOY*
	%vr41 = add %SHADERTOY* %vr42, %vr43
	%vr44 = bitcast %SHADERTOY* %vr41 to %FBSTRING*

	; addrof vr44
	%vr46 = ptrtoint %FBSTRING* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to %FBSTRING*
	%vr48 = bitcast %FBSTRING* %vr47 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr48
	call void @fb_StrDelete( %FBSTRING* %vr48 )
	ret void
}

define i8 @_ZN9SHADERTOY11COMPILEFILEER8FBSTRING( %SHADERTOY* %THIS.59$, %FBSTRING* %FILENAME.60$ ) nounwind
{

	; paramvar THIS
	%THIS.59 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.59$, %SHADERTOY** %THIS.59

	; paramvar FILENAME
	%FILENAME.60 = alloca %FBSTRING*
	store %FBSTRING* %FILENAME.60$, %FBSTRING** %FILENAME.60

	; localvar fb$result
	%fb$result.61 = alloca i8

	; localvar CODE
	%CODE.62 = alloca %FBSTRING

	; localvar HFILE
	%HFILE.63 = alloca i32

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.61 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_0344
	br label %.Lt_0344
.Lt_0344:

	; addrof CODE

	; memclear CODE
	%vr3 = bitcast %FBSTRING* %CODE.62 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 24, i32 1, i1 false )

	; call fb_FileFree()
	%vr4 = call i32 @fb_FileFree(  )

	; store HFILE := vr4
	store i32 %vr4, i32* %HFILE.63
	%vr6 = load %FBSTRING*, %FBSTRING** %FILENAME.60
	%vr5 = bitcast %FBSTRING* %vr6 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr5
	; arg 2
	; arg 0
	; arg 0
	; arg HFILE
	%vr11 = load i32, i32* %HFILE.63
	; arg 0
	%vr7 = call i32 @fb_FileOpen( %FBSTRING* %vr5, i32 2, i32 0, i32 0, i32 %vr11, i32 0 )

	; conv vr7 => vr14
	%vr14 = sext i32 %vr7 to i64

	; branchbop vr14 == 0
	%vr15 = icmp eq i64 %vr14, 0
	br i1 %vr15, label %.Lt_0347, label %.Lt_0352
.Lt_0352:

	; localvar LT_034C
	%LT_034C.64 = alloca %FBSTRING

	; localvar LT_034D
	%LT_034D.65 = alloca %FBSTRING

	; localvar LT_034E
	%LT_034E.66 = alloca %FBSTRING
	%vr16 = bitcast i8* bitcast ([3 x i8]* @Lt_034B to i8*) to i8*
	%vr17 = bitcast i8* bitcast ([2 x i8]* @Lt_0349 to i8*) to i8*
	%vr19 = load %FBSTRING*, %FBSTRING** %FILENAME.60
	%vr18 = bitcast %FBSTRING* %vr19 to i8*
	%vr20 = bitcast i8* bitcast ([21 x i8]* @Lt_034A to i8*) to i8*

	; addrof LT_034C

	; memclear LT_034C
	%vr22 = bitcast %FBSTRING* %LT_034C.64 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034C

	; call fb_StrConcat()
	; arg LT_034C
	; arg vr20
	; arg 21
	; arg vr18
	; arg -1
	%vr24 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034C.64, i8* %vr20, i64 21, i8* %vr18, i64 -1 )

	; addrof LT_034D

	; memclear LT_034D
	%vr28 = bitcast %FBSTRING* %LT_034D.65 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr28, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034D

	; call fb_StrConcat()
	; arg LT_034D
	; arg vr24
	%vr31 = bitcast %FBSTRING* %vr24 to i8*
	; arg -1
	; arg vr17
	; arg 2
	%vr30 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034D.65, i8* %vr31, i64 -1, i8* %vr17, i64 2 )

	; addrof LT_034E

	; memclear LT_034E
	%vr35 = bitcast %FBSTRING* %LT_034E.66 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr35, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034E

	; call fb_StrConcat()
	; arg LT_034E
	; arg vr30
	%vr38 = bitcast %FBSTRING* %vr30 to i8*
	; arg -1
	; arg vr16
	; arg 3
	%vr37 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034E.66, i8* %vr38, i64 -1, i8* %vr16, i64 3 )

	; deref THIS
	%vr42 = load %SHADERTOY*, %SHADERTOY** %THIS.59

	; addrof vr42+8
	%vr44 = ptrtoint %SHADERTOY* %vr42 to i64
	%vr45 = add i64 %vr44, 8
	%vr46 = inttoptr i64 %vr45 to %FBSTRING*
	%vr47 = bitcast %FBSTRING* %vr46 to i8*

	; call fb_StrAssign()
	; arg vr47
	; arg -1
	; arg vr37
	%vr50 = bitcast %FBSTRING* %vr37 to i8*
	; arg -1
	; arg 0
	%vr48 = call %FBSTRING* @fb_StrAssign( i8* %vr47, i64 -1, i8* %vr50, i64 -1, i32 0 )

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.61

	; addrof CODE
	%vr54 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr54
	call void @fb_StrDelete( %FBSTRING* %vr54 )

	; goto .Lt_0345
	br label %.Lt_0345
.Lt_0353:

	; label .Lt_0347
	br label %.Lt_0347
.Lt_0347:

	; label .Lt_0346
	br label %.Lt_0346
.Lt_0346:

	; label .Lt_034F
	br label %.Lt_034F
.Lt_034F:

	; call fb_FileEof()
	; arg HFILE
	%vr56 = load i32, i32* %HFILE.63
	%vr55 = call i32 @fb_FileEof( i32 %vr56 )

	; conv vr55 => vr58
	%vr58 = sext i32 %vr55 to i64

	; uop NOT vr58
	%vr59 = xor i64 %vr58, -1

	; branchbop vr59 == 0
	%vr60 = icmp eq i64 %vr59, 0
	br i1 %vr60, label %.Lt_0350, label %.Lt_0354
.Lt_0354:

	; localvar ALINE
	%ALINE.67 = alloca %FBSTRING

	; addrof ALINE

	; memclear ALINE
	%vr62 = bitcast %FBSTRING* %ALINE.67 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr62, i8 0, i32 24, i32 1, i1 false )

	; addrof ALINE
	%vr64 = bitcast %FBSTRING* %ALINE.67 to i8*

	; call fb_FileLineInput()
	; arg HFILE
	%vr66 = load i32, i32* %HFILE.63
	; arg vr64
	; arg -1
	; arg 0
	%vr65 = call i32 @fb_FileLineInput( i32 %vr66, i8* %vr64, i64 -1, i32 0 )

	; addrof ALINE
	%vr71 = bitcast %FBSTRING* %ALINE.67 to i8*

	; addrof CODE
	%vr73 = bitcast %FBSTRING* %CODE.62 to i8*

	; call fb_StrConcatAssign()
	; arg vr73
	; arg -1
	; arg vr71
	; arg -1
	; arg 0
	%vr74 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr73, i64 -1, i8* %vr71, i64 -1, i32 0 )
	%vr78 = bitcast i8* bitcast ([2 x i8]* @Lt_0351 to i8*) to i8*

	; addrof CODE
	%vr80 = bitcast %FBSTRING* %CODE.62 to i8*

	; call fb_StrConcatAssign()
	; arg vr80
	; arg -1
	; arg vr78
	; arg 2
	; arg 0
	%vr81 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr80, i64 -1, i8* %vr78, i64 2, i32 0 )

	; addrof ALINE
	%vr86 = bitcast %FBSTRING* %ALINE.67 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr86
	call void @fb_StrDelete( %FBSTRING* %vr86 )

	; goto .Lt_034F
	br label %.Lt_034F
.Lt_0355:

	; label .Lt_0350
	br label %.Lt_0350
.Lt_0350:

	; call fb_FileClose()
	; arg HFILE
	%vr88 = load i32, i32* %HFILE.63
	%vr87 = call i32 @fb_FileClose( i32 %vr88 )

	; addrof CODE

	; call COMPILECODE()
	; arg THIS
	%vr92 = load %SHADERTOY*, %SHADERTOY** %THIS.59
	; arg CODE
	%vr91 = call i8 @_ZN9SHADERTOY11COMPILECODEER8FBSTRING( %SHADERTOY* %vr92, %FBSTRING* %CODE.62 )

	; store fb$result := vr91
	store i8 %vr91, i8* %fb$result.61

	; addrof CODE
	%vr94 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr94
	call void @fb_StrDelete( %FBSTRING* %vr94 )

	; goto .Lt_0345
	br label %.Lt_0345
.Lt_0356:

	; addrof CODE
	%vr96 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr96
	call void @fb_StrDelete( %FBSTRING* %vr96 )

	; label .Lt_0345
	br label %.Lt_0345
.Lt_0345:

	; loadres fb$result
	%vr98 = load i8, i8* %fb$result.61
	ret i8 %vr98
}

define i8 @_ZN9SHADERTOY11COMPILECODEER8FBSTRING( %SHADERTOY* %THIS.68$, %FBSTRING* %USERCODE.69$ ) nounwind
{

	; paramvar THIS
	%THIS.68 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.68$, %SHADERTOY** %THIS.68

	; paramvar USERCODE
	%USERCODE.69 = alloca %FBSTRING*
	store %FBSTRING* %USERCODE.69$, %FBSTRING** %USERCODE.69

	; localvar fb$result
	%fb$result.70 = alloca i8

	; localvar LOGSIZE
	%LOGSIZE.71 = alloca i32

	; localvar STATUS
	%STATUS.72 = alloca i32

	; localvar FRAGMENTPROLOG
	%FRAGMENTPROLOG.73 = alloca %FBSTRING

	; localvar VERSION
	%VERSION.74 = alloca %FBSTRING

	; localvar FRAGMENTEPILOG
	%FRAGMENTEPILOG.75 = alloca %FBSTRING

	; localvar FRAGMENTCODE
	%FRAGMENTCODE.76 = alloca %FBSTRING

	; localvar LT_0379
	%LT_0379.77 = alloca %FBSTRING

	; localvar LT_037A
	%LT_037A.78 = alloca %FBSTRING

	; localvar PCODE
	%PCODE.79 = alloca i8*

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.70 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_0357
	br label %.Lt_0357
.Lt_0357:

	; addrof LOGSIZE

	; memclear LOGSIZE
	%vr3 = bitcast i32* %LOGSIZE.71 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 4, i32 1, i1 false )

	; addrof STATUS

	; memclear STATUS
	%vr5 = bitcast i32* %STATUS.72 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 4, i32 1, i1 false )

	; addrof FRAGMENTPROLOG

	; memclear FRAGMENTPROLOG
	%vr7 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr7, i8 0, i32 24, i32 1, i1 false )

	; addrof VERSION

	; memclear VERSION
	%vr9 = bitcast %FBSTRING* %VERSION.74 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 24, i32 1, i1 false )
	%vr10 = bitcast i8* bitcast ([14 x i8]* @Lt_0359 to i8*) to i8*

	; addrof VERSION
	%vr12 = bitcast %FBSTRING* %VERSION.74 to i8*

	; call fb_StrAssign()
	; arg vr12
	; arg -1
	; arg vr10
	; arg 14
	; arg 0
	%vr13 = call %FBSTRING* @fb_StrAssign( i8* %vr12, i64 -1, i8* %vr10, i64 14, i32 0 )

	; addrof VERSION
	%vr18 = bitcast %FBSTRING* %VERSION.74 to i8*

	; addrof FRAGMENTPROLOG
	%vr20 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrAssign()
	; arg vr20
	; arg -1
	; arg vr18
	; arg -1
	; arg 0
	%vr21 = call %FBSTRING* @fb_StrAssign( i8* %vr20, i64 -1, i8* %vr18, i64 -1, i32 0 )
	%vr25 = bitcast i8* bitcast ([32 x i8]* @Lt_035A to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr27 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr27
	; arg -1
	; arg vr25
	; arg 32
	; arg 0
	%vr28 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr27, i64 -1, i8* %vr25, i64 32, i32 0 )
	%vr32 = bitcast i8* bitcast ([26 x i8]* @Lt_035B to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr34 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr34
	; arg -1
	; arg vr32
	; arg 26
	; arg 0
	%vr35 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr34, i64 -1, i8* %vr32, i64 26, i32 0 )
	%vr39 = bitcast i8* bitcast ([32 x i8]* @Lt_035C to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr41 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr41
	; arg -1
	; arg vr39
	; arg 32
	; arg 0
	%vr42 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr41, i64 -1, i8* %vr39, i64 32, i32 0 )
	%vr46 = bitcast i8* bitcast ([31 x i8]* @Lt_035D to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr48 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr48
	; arg -1
	; arg vr46
	; arg 31
	; arg 0
	%vr49 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr48, i64 -1, i8* %vr46, i64 31, i32 0 )
	%vr53 = bitcast i8* bitcast ([31 x i8]* @Lt_035E to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr55 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr55
	; arg -1
	; arg vr53
	; arg 31
	; arg 0
	%vr56 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr55, i64 -1, i8* %vr53, i64 31, i32 0 )
	%vr60 = bitcast i8* bitcast ([27 x i8]* @Lt_035F to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr62 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr62
	; arg -1
	; arg vr60
	; arg 27
	; arg 0
	%vr63 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr62, i64 -1, i8* %vr60, i64 27, i32 0 )
	%vr67 = bitcast i8* bitcast ([36 x i8]* @Lt_0360 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr69 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr69
	; arg -1
	; arg vr67
	; arg 36
	; arg 0
	%vr70 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr69, i64 -1, i8* %vr67, i64 36, i32 0 )
	%vr74 = bitcast i8* bitcast ([42 x i8]* @Lt_0361 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr76 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr76
	; arg -1
	; arg vr74
	; arg 42
	; arg 0
	%vr77 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr76, i64 -1, i8* %vr74, i64 42, i32 0 )
	%vr81 = bitcast i8* bitcast ([32 x i8]* @Lt_0362 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr83 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr83
	; arg -1
	; arg vr81
	; arg 32
	; arg 0
	%vr84 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr83, i64 -1, i8* %vr81, i64 32, i32 0 )
	%vr88 = bitcast i8* bitcast ([27 x i8]* @Lt_0363 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr90 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr90
	; arg -1
	; arg vr88
	; arg 27
	; arg 0
	%vr91 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr90, i64 -1, i8* %vr88, i64 27, i32 0 )
	%vr95 = bitcast i8* bitcast ([26 x i8]* @Lt_0364 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr97 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr97
	; arg -1
	; arg vr95
	; arg 26
	; arg 0
	%vr98 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr97, i64 -1, i8* %vr95, i64 26, i32 0 )
	%vr102 = bitcast i8* bitcast ([30 x i8]* @Lt_0365 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr104 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr104
	; arg -1
	; arg vr102
	; arg 30
	; arg 0
	%vr105 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr104, i64 -1, i8* %vr102, i64 30, i32 0 )
	%vr109 = bitcast i8* bitcast ([30 x i8]* @Lt_0366 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr111 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr111
	; arg -1
	; arg vr109
	; arg 30
	; arg 0
	%vr112 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr111, i64 -1, i8* %vr109, i64 30, i32 0 )
	%vr116 = bitcast i8* bitcast ([30 x i8]* @Lt_0367 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr118 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr118
	; arg -1
	; arg vr116
	; arg 30
	; arg 0
	%vr119 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr118, i64 -1, i8* %vr116, i64 30, i32 0 )
	%vr123 = bitcast i8* bitcast ([30 x i8]* @Lt_0368 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr125 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr125
	; arg -1
	; arg vr123
	; arg 30
	; arg 0
	%vr126 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr125, i64 -1, i8* %vr123, i64 30, i32 0 )
	%vr130 = bitcast i8* bitcast ([28 x i8]* @Lt_0369 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr132 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr132
	; arg -1
	; arg vr130
	; arg 28
	; arg 0
	%vr133 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr132, i64 -1, i8* %vr130, i64 28, i32 0 )

	; addrof FRAGMENTEPILOG

	; memclear FRAGMENTEPILOG
	%vr138 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr138, i8 0, i32 24, i32 1, i1 false )

	; branchbop SWCH <> 0
	%vr140 = load double, double* @SWCH
	%vr139 = icmp ne double %vr140, 0x0000000000000000
	br i1 %vr139, label %.Lt_036B, label %.Lt_0389
.Lt_0389:
	%vr141 = bitcast i8* bitcast ([15 x i8]* @Lt_036C to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr143 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr143
	; arg -1
	; arg vr141
	; arg 15
	; arg 0
	%vr144 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr143, i64 -1, i8* %vr141, i64 15, i32 0 )
	%vr148 = bitcast i8* bitcast ([15 x i8]* @Lt_036D to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr150 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr150
	; arg -1
	; arg vr148
	; arg 15
	; arg 0
	%vr151 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr150, i64 -1, i8* %vr148, i64 15, i32 0 )
	%vr155 = bitcast i8* bitcast ([23 x i8]* @Lt_036E to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr157 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr157
	; arg -1
	; arg vr155
	; arg 23
	; arg 0
	%vr158 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr157, i64 -1, i8* %vr155, i64 23, i32 0 )
	%vr162 = bitcast i8* bitcast ([38 x i8]* @Lt_036F to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr164 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr164
	; arg -1
	; arg vr162
	; arg 38
	; arg 0
	%vr165 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr164, i64 -1, i8* %vr162, i64 38, i32 0 )
	%vr169 = bitcast i8* bitcast ([18 x i8]* @Lt_0370 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr171 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr171
	; arg -1
	; arg vr169
	; arg 18
	; arg 0
	%vr172 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr171, i64 -1, i8* %vr169, i64 18, i32 0 )
	%vr176 = bitcast i8* bitcast ([25 x i8]* @Lt_0371 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr178 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr178
	; arg -1
	; arg vr176
	; arg 25
	; arg 0
	%vr179 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr178, i64 -1, i8* %vr176, i64 25, i32 0 )
	%vr183 = bitcast i8* bitcast ([3 x i8]* @Lt_0372 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr185 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr185
	; arg -1
	; arg vr183
	; arg 3
	; arg 0
	%vr186 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr185, i64 -1, i8* %vr183, i64 3, i32 0 )

	; goto .Lt_036A
	br label %.Lt_036A
.Lt_038A:

	; label .Lt_036B
	br label %.Lt_036B
.Lt_036B:
	%vr190 = bitcast i8* bitcast ([29 x i8]* @Lt_0373 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr192 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr192
	; arg -1
	; arg vr190
	; arg 29
	; arg 0
	%vr193 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr192, i64 -1, i8* %vr190, i64 29, i32 0 )
	%vr197 = bitcast i8* bitcast ([29 x i8]* @Lt_0374 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr199 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr199
	; arg -1
	; arg vr197
	; arg 29
	; arg 0
	%vr200 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr199, i64 -1, i8* %vr197, i64 29, i32 0 )
	%vr204 = bitcast i8* bitcast ([29 x i8]* @Lt_0375 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr206 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr206
	; arg -1
	; arg vr204
	; arg 29
	; arg 0
	%vr207 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr206, i64 -1, i8* %vr204, i64 29, i32 0 )
	%vr211 = bitcast i8* bitcast ([33 x i8]* @Lt_0376 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr213 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr213
	; arg -1
	; arg vr211
	; arg 33
	; arg 0
	%vr214 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr213, i64 -1, i8* %vr211, i64 33, i32 0 )
	%vr218 = bitcast i8* bitcast ([21 x i8]* @Lt_0377 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr220 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr220
	; arg -1
	; arg vr218
	; arg 21
	; arg 0
	%vr221 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr220, i64 -1, i8* %vr218, i64 21, i32 0 )
	%vr225 = bitcast i8* bitcast ([15 x i8]* @Lt_036C to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr227 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr227
	; arg -1
	; arg vr225
	; arg 15
	; arg 0
	%vr228 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr227, i64 -1, i8* %vr225, i64 15, i32 0 )
	%vr232 = bitcast i8* bitcast ([15 x i8]* @Lt_036D to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr234 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr234
	; arg -1
	; arg vr232
	; arg 15
	; arg 0
	%vr235 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr234, i64 -1, i8* %vr232, i64 15, i32 0 )
	%vr239 = bitcast i8* bitcast ([23 x i8]* @Lt_036E to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr241 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr241
	; arg -1
	; arg vr239
	; arg 23
	; arg 0
	%vr242 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr241, i64 -1, i8* %vr239, i64 23, i32 0 )
	%vr246 = bitcast i8* bitcast ([39 x i8]* @Lt_0378 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr248 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr248
	; arg -1
	; arg vr246
	; arg 39
	; arg 0
	%vr249 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr248, i64 -1, i8* %vr246, i64 39, i32 0 )
	%vr253 = bitcast i8* bitcast ([18 x i8]* @Lt_0370 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr255 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr255
	; arg -1
	; arg vr253
	; arg 18
	; arg 0
	%vr256 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr255, i64 -1, i8* %vr253, i64 18, i32 0 )
	%vr260 = bitcast i8* bitcast ([25 x i8]* @Lt_0371 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr262 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr262
	; arg -1
	; arg vr260
	; arg 25
	; arg 0
	%vr263 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr262, i64 -1, i8* %vr260, i64 25, i32 0 )
	%vr267 = bitcast i8* bitcast ([3 x i8]* @Lt_0372 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr269 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr269
	; arg -1
	; arg vr267
	; arg 3
	; arg 0
	%vr270 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr269, i64 -1, i8* %vr267, i64 3, i32 0 )

	; label .Lt_036A
	br label %.Lt_036A
.Lt_036A:

	; addrof FRAGMENTEPILOG
	%vr275 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*
	%vr277 = load %FBSTRING*, %FBSTRING** %USERCODE.69
	%vr276 = bitcast %FBSTRING* %vr277 to i8*

	; addrof FRAGMENTPROLOG
	%vr279 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; addrof LT_0379

	; memclear LT_0379
	%vr281 = bitcast %FBSTRING* %LT_0379.77 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr281, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0379

	; call fb_StrConcat()
	; arg LT_0379
	; arg vr279
	; arg -1
	; arg vr276
	; arg -1
	%vr283 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0379.77, i8* %vr279, i64 -1, i8* %vr276, i64 -1 )

	; addrof LT_037A

	; memclear LT_037A
	%vr287 = bitcast %FBSTRING* %LT_037A.78 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr287, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_037A

	; call fb_StrConcat()
	; arg LT_037A
	; arg vr283
	%vr290 = bitcast %FBSTRING* %vr283 to i8*
	; arg -1
	; arg vr275
	; arg -1
	%vr289 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_037A.78, i8* %vr290, i64 -1, i8* %vr275, i64 -1 )

	; addrof FRAGMENTCODE
	%vr294 = bitcast %FBSTRING* %FRAGMENTCODE.76 to i8*

	; call fb_StrInit()
	; arg vr294
	; arg -1
	; arg vr289
	%vr297 = bitcast %FBSTRING* %vr289 to i8*
	; arg -1
	; arg 0
	%vr295 = call %FBSTRING* @fb_StrInit( i8* %vr294, i64 -1, i8* %vr297, i64 -1, i32 0 )

	; callptr GLCREATESHADER
	%vr301 = load i32 ( i32 )*, i32 ( i32 )** @GLCREATESHADER
	; arg 35632
	%vr300 = call i32 %vr301( i32 35632 )

	; deref THIS
	%vr303 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr303 := vr300
	%vr304 = ptrtoint %SHADERTOY* %vr303 to i64
	%vr305 = inttoptr i64 %vr304 to i32*
	store i32 %vr300, i32* %vr305

	; deref THIS
	%vr307 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; conv vr307 => vr308
	%vr309 = ptrtoint %SHADERTOY* %vr307 to i64
	%vr310 = inttoptr i64 %vr309 to i32*
	%vr311 = load i32, i32* %vr310
	%vr308 = sext i32 %vr311 to i64

	; branchbop vr308 <> 0
	%vr312 = icmp ne i64 %vr308, 0
	br i1 %vr312, label %.Lt_037C, label %.Lt_038B
.Lt_038B:
	%vr313 = bitcast i8* bitcast ([44 x i8]* @Lt_037D to i8*) to i8*

	; deref THIS
	%vr315 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr315+8
	%vr317 = ptrtoint %SHADERTOY* %vr315 to i64
	%vr318 = add i64 %vr317, 8
	%vr319 = inttoptr i64 %vr318 to %FBSTRING*
	%vr320 = bitcast %FBSTRING* %vr319 to i8*

	; call fb_StrAssign()
	; arg vr320
	; arg -1
	; arg vr313
	; arg 44
	; arg 0
	%vr321 = call %FBSTRING* @fb_StrAssign( i8* %vr320, i64 -1, i8* %vr313, i64 44, i32 0 )

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr326 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr326
	call void @fb_StrDelete( %FBSTRING* %vr326 )

	; addrof FRAGMENTEPILOG
	%vr328 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr328
	call void @fb_StrDelete( %FBSTRING* %vr328 )

	; addrof VERSION
	%vr330 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr330
	call void @fb_StrDelete( %FBSTRING* %vr330 )

	; addrof FRAGMENTPROLOG
	%vr332 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr332
	call void @fb_StrDelete( %FBSTRING* %vr332 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_038C:

	; label .Lt_037C
	br label %.Lt_037C
.Lt_037C:

	; label .Lt_037B
	br label %.Lt_037B
.Lt_037B:

	; store PCODE := FRAGMENTCODE
	%vr333 = bitcast %FBSTRING* %FRAGMENTCODE.76 to i8**
	%vr334 = load i8*, i8** %vr333
	%vr335 = bitcast i8* %vr334 to i8*
	store i8* %vr335, i8** %PCODE.79

	; addrof PCODE

	; deref THIS
	%vr338 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLSHADERSOURCE
	%vr339 = load void ( i32, i32, i8**, i32* )*, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	; arg vr338
	%vr340 = ptrtoint %SHADERTOY* %vr338 to i64
	%vr341 = inttoptr i64 %vr340 to i32*
	%vr342 = load i32, i32* %vr341
	; arg 1
	; arg PCODE
	%vr343 = bitcast i8** %PCODE.79 to i8**
	; arg 0
	%vr344 = bitcast i32* 0 to i32*
	call void %vr339( i32 %vr342, i32 1, i8** %vr343, i32* %vr344 )

	; deref THIS
	%vr346 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLCOMPILESHADER
	%vr347 = load void ( i32 )*, void ( i32 )** @GLCOMPILESHADER
	; arg vr346
	%vr348 = ptrtoint %SHADERTOY* %vr346 to i64
	%vr349 = inttoptr i64 %vr348 to i32*
	%vr350 = load i32, i32* %vr349
	call void %vr347( i32 %vr350 )

	; addrof STATUS

	; deref THIS
	%vr353 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERIV
	%vr354 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	; arg vr353
	%vr355 = ptrtoint %SHADERTOY* %vr353 to i64
	%vr356 = inttoptr i64 %vr355 to i32*
	%vr357 = load i32, i32* %vr356
	; arg 35713
	; arg STATUS
	call void %vr354( i32 %vr357, i32 35713, i32* %STATUS.72 )

	; conv STATUS => vr358
	%vr359 = load i32, i32* %STATUS.72
	%vr358 = sext i32 %vr359 to i64

	; branchbop vr358 <> 0
	%vr360 = icmp ne i64 %vr358, 0
	br i1 %vr360, label %.Lt_037F, label %.Lt_038D
.Lt_038D:

	; localvar LT_0381
	%LT_0381.80 = alloca %FBSTRING

	; addrof LOGSIZE

	; deref THIS
	%vr363 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERIV
	%vr364 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	; arg vr363
	%vr365 = ptrtoint %SHADERTOY* %vr363 to i64
	%vr366 = inttoptr i64 %vr365 to i32*
	%vr367 = load i32, i32* %vr366
	; arg 35716
	; arg LOGSIZE
	call void %vr364( i32 %vr367, i32 35716, i32* %LOGSIZE.71 )

	; conv LOGSIZE => vr368
	%vr369 = load i32, i32* %LOGSIZE.71
	%vr368 = sext i32 %vr369 to i64

	; call fb_SPACE()
	; arg vr368
	%vr370 = call %FBSTRING* @fb_SPACE( i64 %vr368 )

	; deref THIS
	%vr372 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr372+8
	%vr374 = ptrtoint %SHADERTOY* %vr372 to i64
	%vr375 = add i64 %vr374, 8
	%vr376 = inttoptr i64 %vr375 to %FBSTRING*
	%vr377 = bitcast %FBSTRING* %vr376 to i8*

	; call fb_StrAssign()
	; arg vr377
	; arg -1
	; arg vr370
	%vr380 = bitcast %FBSTRING* %vr370 to i8*
	; arg -1
	; arg 0
	%vr378 = call %FBSTRING* @fb_StrAssign( i8* %vr377, i64 -1, i8* %vr380, i64 -1, i32 0 )

	; deref THIS
	%vr384 = load %SHADERTOY*, %SHADERTOY** %THIS.68
	%vr386 = ptrtoint %SHADERTOY* %vr384 to i64
	%vr387 = add i64 %vr386, 8
	%vr388 = inttoptr i64 %vr387 to i8**
	%vr389 = load i8*, i8** %vr388
	%vr385 = bitcast i8* %vr389 to i8*

	; deref THIS
	%vr391 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERINFOLOG
	%vr392 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	; arg vr391
	%vr393 = ptrtoint %SHADERTOY* %vr391 to i64
	%vr394 = inttoptr i64 %vr393 to i32*
	%vr395 = load i32, i32* %vr394
	; arg LOGSIZE
	%vr396 = load i32, i32* %LOGSIZE.71
	; arg 0
	; arg vr385
	call void %vr392( i32 %vr395, i32 %vr396, i32* 0, i8* %vr385 )

	; deref THIS
	%vr398 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr398+8
	%vr400 = ptrtoint %SHADERTOY* %vr398 to i64
	%vr401 = add i64 %vr400, 8
	%vr402 = inttoptr i64 %vr401 to %FBSTRING*
	%vr403 = bitcast %FBSTRING* %vr402 to i8*
	%vr404 = bitcast i8* bitcast ([42 x i8]* @Lt_0380 to i8*) to i8*

	; addrof LT_0381

	; memclear LT_0381
	%vr406 = bitcast %FBSTRING* %LT_0381.80 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr406, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0381

	; call fb_StrConcat()
	; arg LT_0381
	; arg vr404
	; arg 42
	; arg vr403
	; arg -1
	%vr408 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0381.80, i8* %vr404, i64 42, i8* %vr403, i64 -1 )

	; deref THIS
	%vr412 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr412+8
	%vr414 = ptrtoint %SHADERTOY* %vr412 to i64
	%vr415 = add i64 %vr414, 8
	%vr416 = inttoptr i64 %vr415 to %FBSTRING*
	%vr417 = bitcast %FBSTRING* %vr416 to i8*

	; call fb_StrAssign()
	; arg vr417
	; arg -1
	; arg vr408
	%vr420 = bitcast %FBSTRING* %vr408 to i8*
	; arg -1
	; arg 0
	%vr418 = call %FBSTRING* @fb_StrAssign( i8* %vr417, i64 -1, i8* %vr420, i64 -1, i32 0 )

	; deref THIS
	%vr424 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr425 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr424
	%vr426 = ptrtoint %SHADERTOY* %vr424 to i64
	%vr427 = inttoptr i64 %vr426 to i32*
	%vr428 = load i32, i32* %vr427
	call void %vr425( i32 %vr428 )

	; deref THIS
	%vr430 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr430 := 0
	%vr431 = ptrtoint %SHADERTOY* %vr430 to i64
	%vr432 = inttoptr i64 %vr431 to i32*
	store i32 0, i32* %vr432

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr434 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr434
	call void @fb_StrDelete( %FBSTRING* %vr434 )

	; addrof FRAGMENTEPILOG
	%vr436 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr436
	call void @fb_StrDelete( %FBSTRING* %vr436 )

	; addrof VERSION
	%vr438 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr438
	call void @fb_StrDelete( %FBSTRING* %vr438 )

	; addrof FRAGMENTPROLOG
	%vr440 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr440
	call void @fb_StrDelete( %FBSTRING* %vr440 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_038E:

	; label .Lt_037F
	br label %.Lt_037F
.Lt_037F:

	; label .Lt_037E
	br label %.Lt_037E
.Lt_037E:

	; callptr GLCREATEPROGRAM
	%vr442 = load i32 (  )*, i32 (  )** @GLCREATEPROGRAM
	%vr441 = call i32 %vr442(  )

	; deref THIS
	%vr444 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr444+4 := vr441
	%vr445 = ptrtoint %SHADERTOY* %vr444 to i64
	%vr446 = add i64 %vr445, 4
	%vr447 = inttoptr i64 %vr446 to i32*
	store i32 %vr441, i32* %vr447

	; deref THIS
	%vr449 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; conv vr449+4 => vr450
	%vr451 = ptrtoint %SHADERTOY* %vr449 to i64
	%vr452 = add i64 %vr451, 4
	%vr453 = inttoptr i64 %vr452 to i32*
	%vr454 = load i32, i32* %vr453
	%vr450 = sext i32 %vr454 to i64

	; branchbop vr450 <> 0
	%vr455 = icmp ne i64 %vr450, 0
	br i1 %vr455, label %.Lt_0383, label %.Lt_038F
.Lt_038F:
	%vr456 = bitcast i8* bitcast ([27 x i8]* @Lt_0384 to i8*) to i8*

	; deref THIS
	%vr458 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr458+8
	%vr460 = ptrtoint %SHADERTOY* %vr458 to i64
	%vr461 = add i64 %vr460, 8
	%vr462 = inttoptr i64 %vr461 to %FBSTRING*
	%vr463 = bitcast %FBSTRING* %vr462 to i8*

	; call fb_StrAssign()
	; arg vr463
	; arg -1
	; arg vr456
	; arg 27
	; arg 0
	%vr464 = call %FBSTRING* @fb_StrAssign( i8* %vr463, i64 -1, i8* %vr456, i64 27, i32 0 )

	; deref THIS
	%vr469 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr470 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr469
	%vr471 = ptrtoint %SHADERTOY* %vr469 to i64
	%vr472 = inttoptr i64 %vr471 to i32*
	%vr473 = load i32, i32* %vr472
	call void %vr470( i32 %vr473 )

	; deref THIS
	%vr475 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr475 := 0
	%vr476 = ptrtoint %SHADERTOY* %vr475 to i64
	%vr477 = inttoptr i64 %vr476 to i32*
	store i32 0, i32* %vr477

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr479 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr479
	call void @fb_StrDelete( %FBSTRING* %vr479 )

	; addrof FRAGMENTEPILOG
	%vr481 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr481
	call void @fb_StrDelete( %FBSTRING* %vr481 )

	; addrof VERSION
	%vr483 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr483
	call void @fb_StrDelete( %FBSTRING* %vr483 )

	; addrof FRAGMENTPROLOG
	%vr485 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr485
	call void @fb_StrDelete( %FBSTRING* %vr485 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0390:

	; label .Lt_0383
	br label %.Lt_0383
.Lt_0383:

	; label .Lt_0382
	br label %.Lt_0382
.Lt_0382:

	; deref THIS
	%vr487 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; deref THIS
	%vr489 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLATTACHSHADER
	%vr490 = load void ( i32, i32 )*, void ( i32, i32 )** @GLATTACHSHADER
	; arg vr489+4
	%vr491 = ptrtoint %SHADERTOY* %vr489 to i64
	%vr492 = add i64 %vr491, 4
	%vr493 = inttoptr i64 %vr492 to i32*
	%vr494 = load i32, i32* %vr493
	; arg vr487
	%vr495 = ptrtoint %SHADERTOY* %vr487 to i64
	%vr496 = inttoptr i64 %vr495 to i32*
	%vr497 = load i32, i32* %vr496
	call void %vr490( i32 %vr494, i32 %vr497 )

	; deref THIS
	%vr499 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLLINKPROGRAM
	%vr500 = load void ( i32 )*, void ( i32 )** @GLLINKPROGRAM
	; arg vr499+4
	%vr501 = ptrtoint %SHADERTOY* %vr499 to i64
	%vr502 = add i64 %vr501, 4
	%vr503 = inttoptr i64 %vr502 to i32*
	%vr504 = load i32, i32* %vr503
	call void %vr500( i32 %vr504 )

	; addrof STATUS

	; deref THIS
	%vr507 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMIV
	%vr508 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	; arg vr507+4
	%vr509 = ptrtoint %SHADERTOY* %vr507 to i64
	%vr510 = add i64 %vr509, 4
	%vr511 = inttoptr i64 %vr510 to i32*
	%vr512 = load i32, i32* %vr511
	; arg 35714
	; arg STATUS
	call void %vr508( i32 %vr512, i32 35714, i32* %STATUS.72 )

	; conv STATUS => vr513
	%vr514 = load i32, i32* %STATUS.72
	%vr513 = sext i32 %vr514 to i64

	; branchbop vr513 <> 0
	%vr515 = icmp ne i64 %vr513, 0
	br i1 %vr515, label %.Lt_0386, label %.Lt_0391
.Lt_0391:

	; localvar LT_0388
	%LT_0388.81 = alloca %FBSTRING

	; addrof LOGSIZE

	; deref THIS
	%vr518 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMIV
	%vr519 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	; arg vr518+4
	%vr520 = ptrtoint %SHADERTOY* %vr518 to i64
	%vr521 = add i64 %vr520, 4
	%vr522 = inttoptr i64 %vr521 to i32*
	%vr523 = load i32, i32* %vr522
	; arg 35716
	; arg LOGSIZE
	call void %vr519( i32 %vr523, i32 35716, i32* %LOGSIZE.71 )

	; conv LOGSIZE => vr524
	%vr525 = load i32, i32* %LOGSIZE.71
	%vr524 = sext i32 %vr525 to i64

	; call fb_SPACE()
	; arg vr524
	%vr526 = call %FBSTRING* @fb_SPACE( i64 %vr524 )

	; deref THIS
	%vr528 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr528+8
	%vr530 = ptrtoint %SHADERTOY* %vr528 to i64
	%vr531 = add i64 %vr530, 8
	%vr532 = inttoptr i64 %vr531 to %FBSTRING*
	%vr533 = bitcast %FBSTRING* %vr532 to i8*

	; call fb_StrAssign()
	; arg vr533
	; arg -1
	; arg vr526
	%vr536 = bitcast %FBSTRING* %vr526 to i8*
	; arg -1
	; arg 0
	%vr534 = call %FBSTRING* @fb_StrAssign( i8* %vr533, i64 -1, i8* %vr536, i64 -1, i32 0 )

	; deref THIS
	%vr540 = load %SHADERTOY*, %SHADERTOY** %THIS.68
	%vr542 = ptrtoint %SHADERTOY* %vr540 to i64
	%vr543 = add i64 %vr542, 8
	%vr544 = inttoptr i64 %vr543 to i8**
	%vr545 = load i8*, i8** %vr544
	%vr541 = bitcast i8* %vr545 to i8*

	; deref THIS
	%vr547 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMINFOLOG
	%vr548 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	; arg vr547+4
	%vr549 = ptrtoint %SHADERTOY* %vr547 to i64
	%vr550 = add i64 %vr549, 4
	%vr551 = inttoptr i64 %vr550 to i32*
	%vr552 = load i32, i32* %vr551
	; arg LOGSIZE
	%vr553 = load i32, i32* %LOGSIZE.71
	; arg 0
	; arg vr541
	call void %vr548( i32 %vr552, i32 %vr553, i32* 0, i8* %vr541 )

	; deref THIS
	%vr555 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr555+8
	%vr557 = ptrtoint %SHADERTOY* %vr555 to i64
	%vr558 = add i64 %vr557, 8
	%vr559 = inttoptr i64 %vr558 to %FBSTRING*
	%vr560 = bitcast %FBSTRING* %vr559 to i8*
	%vr561 = bitcast i8* bitcast ([26 x i8]* @Lt_0387 to i8*) to i8*

	; addrof LT_0388

	; memclear LT_0388
	%vr563 = bitcast %FBSTRING* %LT_0388.81 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr563, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0388

	; call fb_StrConcat()
	; arg LT_0388
	; arg vr561
	; arg 26
	; arg vr560
	; arg -1
	%vr565 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0388.81, i8* %vr561, i64 26, i8* %vr560, i64 -1 )

	; deref THIS
	%vr569 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr569+8
	%vr571 = ptrtoint %SHADERTOY* %vr569 to i64
	%vr572 = add i64 %vr571, 8
	%vr573 = inttoptr i64 %vr572 to %FBSTRING*
	%vr574 = bitcast %FBSTRING* %vr573 to i8*

	; call fb_StrAssign()
	; arg vr574
	; arg -1
	; arg vr565
	%vr577 = bitcast %FBSTRING* %vr565 to i8*
	; arg -1
	; arg 0
	%vr575 = call %FBSTRING* @fb_StrAssign( i8* %vr574, i64 -1, i8* %vr577, i64 -1, i32 0 )

	; deref THIS
	%vr581 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr582 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr581
	%vr583 = ptrtoint %SHADERTOY* %vr581 to i64
	%vr584 = inttoptr i64 %vr583 to i32*
	%vr585 = load i32, i32* %vr584
	call void %vr582( i32 %vr585 )

	; deref THIS
	%vr587 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr587 := 0
	%vr588 = ptrtoint %SHADERTOY* %vr587 to i64
	%vr589 = inttoptr i64 %vr588 to i32*
	store i32 0, i32* %vr589

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr591 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr591
	call void @fb_StrDelete( %FBSTRING* %vr591 )

	; addrof FRAGMENTEPILOG
	%vr593 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr593
	call void @fb_StrDelete( %FBSTRING* %vr593 )

	; addrof VERSION
	%vr595 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr595
	call void @fb_StrDelete( %FBSTRING* %vr595 )

	; addrof FRAGMENTPROLOG
	%vr597 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr597
	call void @fb_StrDelete( %FBSTRING* %vr597 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0392:

	; label .Lt_0386
	br label %.Lt_0386
.Lt_0386:

	; label .Lt_0385
	br label %.Lt_0385
.Lt_0385:

	; store fb$result := -1
	store i8 trunc (i64 -1 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr599 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr599
	call void @fb_StrDelete( %FBSTRING* %vr599 )

	; addrof FRAGMENTEPILOG
	%vr601 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr601
	call void @fb_StrDelete( %FBSTRING* %vr601 )

	; addrof VERSION
	%vr603 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr603
	call void @fb_StrDelete( %FBSTRING* %vr603 )

	; addrof FRAGMENTPROLOG
	%vr605 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr605
	call void @fb_StrDelete( %FBSTRING* %vr605 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0393:

	; addrof FRAGMENTCODE
	%vr607 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr607
	call void @fb_StrDelete( %FBSTRING* %vr607 )

	; addrof FRAGMENTEPILOG
	%vr609 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr609
	call void @fb_StrDelete( %FBSTRING* %vr609 )

	; addrof VERSION
	%vr611 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr611
	call void @fb_StrDelete( %FBSTRING* %vr611 )

	; addrof FRAGMENTPROLOG
	%vr613 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr613
	call void @fb_StrDelete( %FBSTRING* %vr613 )

	; label .Lt_0358
	br label %.Lt_0358
.Lt_0358:

	; loadres fb$result
	%vr615 = load i8, i8* %fb$result.70
	ret i8 %vr615
}

define void @_ZN5C64_TC1Ev( %C64_T* %THIS.82$ ) nounwind
{

	; paramvar THIS
	%THIS.82 = alloca %C64_T*
	store %C64_T* %THIS.82$, %C64_T** %THIS.82

	; localvar I
	%I.83 = alloca i64

	; localvar C
	%C.84 = alloca i64

	; localvar LT_03BD
	%LT_03BD.85 = alloca %MEMORY_T*

	; localvar LT_03C0
	%LT_03C0.86 = alloca %CPU6510*

	; label .Lt_03B7
	br label %.Lt_03B7
.Lt_03B7:

	; addrof I

	; memclear I
	%vr1 = bitcast i64* %I.83 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof C

	; memclear C
	%vr3 = bitcast i64* %C.84 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )
	%vr5 = load %C64_T*, %C64_T** %THIS.82
	%vr4 = bitcast %C64_T* %vr5 to %MEMORY_T**

	; addrof vr4
	%vr7 = ptrtoint %MEMORY_T** %vr4 to i64
	%vr8 = inttoptr i64 %vr7 to %MEMORY_T**

	; memclear vr8
	%vr9 = bitcast %MEMORY_T** %vr8 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr11 = load %C64_T*, %C64_T** %THIS.82
	%vr12 = inttoptr i64 8 to %C64_T*
	%vr10 = add %C64_T* %vr11, %vr12
	%vr13 = bitcast %C64_T* %vr10 to %CPU6510**

	; addrof vr13
	%vr15 = ptrtoint %CPU6510** %vr13 to i64
	%vr16 = inttoptr i64 %vr15 to %CPU6510**

	; memclear vr16
	%vr17 = bitcast %CPU6510** %vr16 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr17, i8 0, i32 8, i32 1, i1 false )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr18 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_GfxImageCreate()
	; arg 1920
	; arg 1080
	; arg 0
	; arg 32
	; arg 0
	%vr26 = call i8* @fb_GfxImageCreate( i32 1920, i32 1080, i32 0, i32 32, i32 0 )

	; store BGIMAGE := vr26
	store i8* %vr26, i8** @BGIMAGE

	; call fb_GfxImageCreate()
	; arg 1920
	; arg 1080
	; arg 0
	; arg 32
	; arg 0
	%vr32 = call i8* @fb_GfxImageCreate( i32 1920, i32 1080, i32 0, i32 32, i32 0 )

	; store FGIMAGE := vr32
	store i8* %vr32, i8** @FGIMAGE

	; call fb_GfxImageCreate()
	; arg 1920
	; arg 0
	; arg 0
	; arg 32
	; arg 0
	%vr38 = call i8* @fb_GfxImageCreate( i32 1920, i32 0, i32 0, i32 32, i32 0 )

	; store RASTER := vr38
	store i8* %vr38, i8** @RASTER

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr44 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR0 := vr44
	store i8* %vr44, i8** @SPR0

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr50 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR1 := vr50
	store i8* %vr50, i8** @SPR1

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr56 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR2 := vr56
	store i8* %vr56, i8** @SPR2

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr62 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR3 := vr62
	store i8* %vr62, i8** @SPR3

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr68 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR4 := vr68
	store i8* %vr68, i8** @SPR4

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr74 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR5 := vr74
	store i8* %vr74, i8** @SPR5

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr80 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR6 := vr80
	store i8* %vr80, i8** @SPR6

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr86 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR7 := vr86
	store i8* %vr86, i8** @SPR7

	; store I := 0
	store i64 0, i64* %I.83

	; label .Lt_03BC
	br label %.Lt_03BC
.Lt_03BC:

	; addrof C
	%vr93 = bitcast i64* %C.84 to i64*

	; call fb_DataReadLongint()
	; arg vr93
	call void @fb_DataReadLongint( i64* %vr93 )

	; conv C => vr94
	%vr95 = load i64, i64* %C.84
	%vr94 = trunc i64 %vr95 to i32

	; conv I => vr96
	%vr97 = load i64, i64* %I.83
	%vr96 = trunc i64 %vr97 to i32

	; call fb_GfxPalette()
	; arg vr96
	; arg vr94
	; arg -1
	; arg -1
	call void @fb_GfxPalette( i32 %vr96, i32 %vr94, i32 -1, i32 -1 )

	; label .Lt_03BA
	br label %.Lt_03BA
.Lt_03BA:

	; bop I + 1
	%vr101 = load i64, i64* %I.83
	%vr100 = add i64 %vr101, 1

	; store I := vr100
	store i64 %vr100, i64* %I.83

	; label .Lt_03B9
	br label %.Lt_03B9
.Lt_03B9:

	; branchbop I <= 15
	%vr103 = load i64, i64* %I.83
	%vr102 = icmp sle i64 %vr103, 15
	br i1 %vr102, label %.Lt_03BC, label %.Lt_03C3
.Lt_03C3:

	; label .Lt_03BB
	br label %.Lt_03BB
.Lt_03BB:

	; call malloc()
	; arg 134618944
	%vr104 = call i8* @malloc( i64 134618944 )
	%vr106 = bitcast i8* %vr104 to %MEMORY_T*

	; store LT_03BD := vr106
	store %MEMORY_T* %vr106, %MEMORY_T** %LT_03BD.85

	; branchbop LT_03BD == 0
	%vr108 = load %MEMORY_T*, %MEMORY_T** %LT_03BD.85
	%vr107 = icmp eq %MEMORY_T* %vr108, 0
	br i1 %vr107, label %.Lt_03BF, label %.Lt_03C4
.Lt_03C4:

	; call ()
	; arg LT_03BD
	%vr109 = load %MEMORY_T*, %MEMORY_T** %LT_03BD.85
	call void @_ZN8MEMORY_TC1Ev( %MEMORY_T* %vr109 )

	; label .Lt_03BF
	br label %.Lt_03BF
.Lt_03BF:

	; deref THIS
	%vr111 = load %C64_T*, %C64_T** %THIS.82

	; store vr111 := LT_03BD
	%vr112 = load %MEMORY_T*, %MEMORY_T** %LT_03BD.85
	%vr113 = ptrtoint %C64_T* %vr111 to i64
	%vr114 = inttoptr i64 %vr113 to %MEMORY_T**
	store %MEMORY_T* %vr112, %MEMORY_T** %vr114

	; call malloc()
	; arg 14728
	%vr115 = call i8* @malloc( i64 14728 )
	%vr117 = bitcast i8* %vr115 to %CPU6510*

	; store LT_03C0 := vr117
	store %CPU6510* %vr117, %CPU6510** %LT_03C0.86

	; branchbop LT_03C0 == 0
	%vr119 = load %CPU6510*, %CPU6510** %LT_03C0.86
	%vr118 = icmp eq %CPU6510* %vr119, 0
	br i1 %vr118, label %.Lt_03C2, label %.Lt_03C5
.Lt_03C5:

	; deref THIS
	%vr121 = load %C64_T*, %C64_T** %THIS.82

	; call ()
	; arg LT_03C0
	%vr122 = load %CPU6510*, %CPU6510** %LT_03C0.86
	; arg vr121
	%vr123 = ptrtoint %C64_T* %vr121 to i64
	%vr124 = inttoptr i64 %vr123 to %MEMORY_T**
	%vr125 = load %MEMORY_T*, %MEMORY_T** %vr124
	call void @_ZN7CPU6510C1EP8MEMORY_T( %CPU6510* %vr122, %MEMORY_T* %vr125 )

	; label .Lt_03C2
	br label %.Lt_03C2
.Lt_03C2:

	; deref THIS
	%vr127 = load %C64_T*, %C64_T** %THIS.82

	; store vr127+8 := LT_03C0
	%vr128 = load %CPU6510*, %CPU6510** %LT_03C0.86
	%vr129 = ptrtoint %C64_T* %vr127 to i64
	%vr130 = add i64 %vr129, 8
	%vr131 = inttoptr i64 %vr130 to %CPU6510**
	store %CPU6510* %vr128, %CPU6510** %vr131

	; label .Lt_03B8
	br label %.Lt_03B8
.Lt_03B8:
	ret void
}

define void @_ZN5C64_TD1Ev( %C64_T* %THIS.87$ ) nounwind
{

	; paramvar THIS
	%THIS.87 = alloca %C64_T*
	store %C64_T* %THIS.87$, %C64_T** %THIS.87

	; label .Lt_03C6
	br label %.Lt_03C6
.Lt_03C6:

	; deref THIS
	%vr1 = load %C64_T*, %C64_T** %THIS.87

	; branchbop vr1+8 == 0
	%vr3 = ptrtoint %C64_T* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to %CPU6510**
	%vr6 = load %CPU6510*, %CPU6510** %vr5
	%vr2 = icmp eq %CPU6510* %vr6, 0
	br i1 %vr2, label %.Lt_03C8, label %.Lt_03CA
.Lt_03CA:

	; deref THIS
	%vr8 = load %C64_T*, %C64_T** %THIS.87

	; call ()
	; arg vr8+8
	%vr9 = ptrtoint %C64_T* %vr8 to i64
	%vr10 = add i64 %vr9, 8
	%vr11 = inttoptr i64 %vr10 to %CPU6510**
	%vr12 = load %CPU6510*, %CPU6510** %vr11
	call void @_ZN7CPU6510D1Ev( %CPU6510* %vr12 )

	; deref THIS
	%vr14 = load %C64_T*, %C64_T** %THIS.87
	%vr16 = ptrtoint %C64_T* %vr14 to i64
	%vr17 = add i64 %vr16, 8
	%vr18 = inttoptr i64 %vr17 to %CPU6510**
	%vr19 = load %CPU6510*, %CPU6510** %vr18
	%vr15 = bitcast %CPU6510* %vr19 to i8*

	; call free()
	; arg vr15
	call void @free( i8* %vr15 )

	; label .Lt_03C8
	br label %.Lt_03C8
.Lt_03C8:

	; deref THIS
	%vr21 = load %C64_T*, %C64_T** %THIS.87

	; branchbop vr21 == 0
	%vr23 = ptrtoint %C64_T* %vr21 to i64
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	%vr22 = icmp eq %MEMORY_T* %vr25, 0
	br i1 %vr22, label %.Lt_03C9, label %.Lt_03CB
.Lt_03CB:

	; deref THIS
	%vr27 = load %C64_T*, %C64_T** %THIS.87

	; call ()
	; arg vr27
	%vr28 = ptrtoint %C64_T* %vr27 to i64
	%vr29 = inttoptr i64 %vr28 to %MEMORY_T**
	%vr30 = load %MEMORY_T*, %MEMORY_T** %vr29
	call void @_ZN8MEMORY_TD1Ev( %MEMORY_T* %vr30 )

	; deref THIS
	%vr32 = load %C64_T*, %C64_T** %THIS.87
	%vr34 = ptrtoint %C64_T* %vr32 to i64
	%vr35 = inttoptr i64 %vr34 to %MEMORY_T**
	%vr36 = load %MEMORY_T*, %MEMORY_T** %vr35
	%vr33 = bitcast %MEMORY_T* %vr36 to i8*

	; call free()
	; arg vr33
	call void @free( i8* %vr33 )

	; label .Lt_03C9
	br label %.Lt_03C9
.Lt_03C9:

	; call fb_GfxImageDestroy()
	; arg SPR0
	%vr37 = load i8*, i8** @SPR0
	%vr38 = bitcast i8* %vr37 to i8*
	call void @fb_GfxImageDestroy( i8* %vr38 )

	; call fb_GfxImageDestroy()
	; arg SPR1
	%vr39 = load i8*, i8** @SPR1
	%vr40 = bitcast i8* %vr39 to i8*
	call void @fb_GfxImageDestroy( i8* %vr40 )

	; call fb_GfxImageDestroy()
	; arg SPR2
	%vr41 = load i8*, i8** @SPR2
	%vr42 = bitcast i8* %vr41 to i8*
	call void @fb_GfxImageDestroy( i8* %vr42 )

	; call fb_GfxImageDestroy()
	; arg SPR3
	%vr43 = load i8*, i8** @SPR3
	%vr44 = bitcast i8* %vr43 to i8*
	call void @fb_GfxImageDestroy( i8* %vr44 )

	; call fb_GfxImageDestroy()
	; arg SPR4
	%vr45 = load i8*, i8** @SPR4
	%vr46 = bitcast i8* %vr45 to i8*
	call void @fb_GfxImageDestroy( i8* %vr46 )

	; call fb_GfxImageDestroy()
	; arg SPR5
	%vr47 = load i8*, i8** @SPR5
	%vr48 = bitcast i8* %vr47 to i8*
	call void @fb_GfxImageDestroy( i8* %vr48 )

	; call fb_GfxImageDestroy()
	; arg SPR6
	%vr49 = load i8*, i8** @SPR6
	%vr50 = bitcast i8* %vr49 to i8*
	call void @fb_GfxImageDestroy( i8* %vr50 )

	; call fb_GfxImageDestroy()
	; arg SPR7
	%vr51 = load i8*, i8** @SPR7
	%vr52 = bitcast i8* %vr51 to i8*
	call void @fb_GfxImageDestroy( i8* %vr52 )

	; call fb_GfxImageDestroy()
	; arg BGIMAGE
	%vr53 = load i8*, i8** @BGIMAGE
	%vr54 = bitcast i8* %vr53 to i8*
	call void @fb_GfxImageDestroy( i8* %vr54 )

	; call fb_GfxImageDestroy()
	; arg FGIMAGE
	%vr55 = load i8*, i8** @FGIMAGE
	%vr56 = bitcast i8* %vr55 to i8*
	call void @fb_GfxImageDestroy( i8* %vr56 )

	; call fb_GfxImageDestroy()
	; arg RASTER
	%vr57 = load i8*, i8** @RASTER
	%vr58 = bitcast i8* %vr57 to i8*
	call void @fb_GfxImageDestroy( i8* %vr58 )

	; call fb_Sleep()
	; arg 1000
	call void @fb_Sleep( i32 1000 )

	; label .Lt_03C7
	br label %.Lt_03C7
.Lt_03C7:
	ret void
}

define void @_ZN8MEMORY_TC1Ev( %MEMORY_T* %THIS.88$ ) nounwind
{

	; paramvar THIS
	%THIS.88 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.88$, %MEMORY_T** %THIS.88

	; localvar B
	%B.89 = alloca i8

	; localvar INDEX
	%INDEX.90 = alloca i16

	; localvar I
	%I.91 = alloca i64

	; localvar TMP
	%TMP.92 = alloca i8

	; localvar MEM
	%MEM.93 = alloca %FBSTRING

	; localvar A
	%A.94 = alloca i64

	; label .Lt_03CC
	br label %.Lt_03CC
.Lt_03CC:

	; addrof B

	; memclear B
	%vr1 = bitcast i8* %B.89 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; addrof INDEX

	; memclear INDEX
	%vr3 = bitcast i16* %INDEX.90 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 2, i32 1, i1 false )
	%vr5 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr4 = bitcast %MEMORY_T* %vr5 to double*

	; addrof vr4
	%vr7 = ptrtoint double* %vr4 to i64
	%vr8 = inttoptr i64 %vr7 to double*

	; memclear vr8
	%vr9 = bitcast double* %vr8 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 134217728, i32 1, i1 false )

	; bop THIS + 134217728
	%vr11 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr12 = inttoptr i64 134217728 to %MEMORY_T*
	%vr10 = add %MEMORY_T* %vr11, %vr12
	%vr13 = bitcast %MEMORY_T* %vr10 to double*

	; addrof vr13
	%vr15 = ptrtoint double* %vr13 to i64
	%vr16 = inttoptr i64 %vr15 to double*

	; memclear vr16
	%vr17 = bitcast double* %vr16 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr17, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 134348800
	%vr19 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr20 = inttoptr i64 134348800 to %MEMORY_T*
	%vr18 = add %MEMORY_T* %vr19, %vr20
	%vr21 = bitcast %MEMORY_T* %vr18 to double*

	; addrof vr21
	%vr23 = ptrtoint double* %vr21 to i64
	%vr24 = inttoptr i64 %vr23 to double*

	; memclear vr24
	%vr25 = bitcast double* %vr24 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr25, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 134479872
	%vr27 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr28 = inttoptr i64 134479872 to %MEMORY_T*
	%vr26 = add %MEMORY_T* %vr27, %vr28
	%vr29 = bitcast %MEMORY_T* %vr26 to double*

	; addrof vr29
	%vr31 = ptrtoint double* %vr29 to i64
	%vr32 = inttoptr i64 %vr31 to double*

	; memclear vr32
	%vr33 = bitcast double* %vr32 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr33, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 134610944
	%vr35 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr36 = inttoptr i64 134610944 to %MEMORY_T*
	%vr34 = add %MEMORY_T* %vr35, %vr36
	%vr37 = bitcast %MEMORY_T* %vr34 to double*

	; addrof vr37
	%vr39 = ptrtoint double* %vr37 to i64
	%vr40 = inttoptr i64 %vr39 to double*

	; memclear vr40
	%vr41 = bitcast double* %vr40 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr41, i8 0, i32 8000, i32 1, i1 false )

	; store INDEX := 0
	store i16 trunc (i64 0 to i16), i16* %INDEX.90

	; label .Lt_03D1
	br label %.Lt_03D1
.Lt_03D1:

	; addrof B

	; call fb_DataReadUByte()
	; arg B
	call void @fb_DataReadUByte( i8* %B.89 )

	; conv B => vr43
	%vr44 = load i8, i8* %B.89
	%vr43 = uitofp i8 %vr44 to double

	; conv INDEX => vr45
	%vr46 = load i16, i16* %INDEX.90
	%vr45 = sext i16 %vr46 to i64

	; bop vr45 SHL 3
	%vr47 = shl i64 %vr45, 3

	; bop THIS + vr47
	%vr49 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr50 = inttoptr i64 %vr47 to %MEMORY_T*
	%vr48 = add %MEMORY_T* %vr49, %vr50

	; store vr48 := vr43
	%vr51 = ptrtoint %MEMORY_T* %vr48 to i64
	%vr52 = inttoptr i64 %vr51 to double*
	store double %vr43, double* %vr52

	; label .Lt_03CF
	br label %.Lt_03CF
.Lt_03CF:

	; conv INDEX => vr53
	%vr54 = load i16, i16* %INDEX.90
	%vr53 = sext i16 %vr54 to i64

	; bop vr53 + 1
	%vr55 = add i64 %vr53, 1

	; conv vr55 => vr56
	%vr56 = trunc i64 %vr55 to i16

	; store INDEX := vr56
	store i16 %vr56, i16* %INDEX.90

	; label .Lt_03CE
	br label %.Lt_03CE
.Lt_03CE:

	; conv INDEX => vr57
	%vr58 = load i16, i16* %INDEX.90
	%vr57 = sext i16 %vr58 to i64

	; branchbop vr57 <= 511
	%vr59 = icmp sle i64 %vr57, 511
	br i1 %vr59, label %.Lt_03D1, label %.Lt_0419
.Lt_0419:

	; label .Lt_03D0
	br label %.Lt_03D0
.Lt_03D0:

	; store INDEX := 512
	store i16 trunc (i64 512 to i16), i16* %INDEX.90

	; label .Lt_03D5
	br label %.Lt_03D5
.Lt_03D5:

	; conv INDEX => vr60
	%vr61 = load i16, i16* %INDEX.90
	%vr60 = sext i16 %vr61 to i64

	; bop vr60 SHL 3
	%vr62 = shl i64 %vr60, 3

	; bop THIS + vr62
	%vr64 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr65 = inttoptr i64 %vr62 to %MEMORY_T*
	%vr63 = add %MEMORY_T* %vr64, %vr65

	; store vr63 := 255
	%vr66 = ptrtoint %MEMORY_T* %vr63 to i64
	%vr67 = inttoptr i64 %vr66 to double*
	store double 0x406FE00000000000, double* %vr67

	; label .Lt_03D3
	br label %.Lt_03D3
.Lt_03D3:

	; conv INDEX => vr68
	%vr69 = load i16, i16* %INDEX.90
	%vr68 = sext i16 %vr69 to i64

	; bop vr68 + 1
	%vr70 = add i64 %vr68, 1

	; conv vr70 => vr71
	%vr71 = trunc i64 %vr70 to i16

	; store INDEX := vr71
	store i16 %vr71, i16* %INDEX.90

	; label .Lt_03D2
	br label %.Lt_03D2
.Lt_03D2:

	; conv INDEX => vr72
	%vr73 = load i16, i16* %INDEX.90
	%vr72 = sext i16 %vr73 to i64

	; branchbop vr72 <= 1023
	%vr74 = icmp sle i64 %vr72, 1023
	br i1 %vr74, label %.Lt_03D5, label %.Lt_041A
.Lt_041A:

	; label .Lt_03D4
	br label %.Lt_03D4
.Lt_03D4:

	; bop SYS_OFFSET + 2
	%vr76 = load double, double* @SYS_OFFSET
	%vr75 = fadd double %vr76, 0x4000000000000000

	; conv vr75 => vr77
	%vr78 = call double @llvm.nearbyint.f64(double %vr75)
	%vr77 = fptoui double %vr78 to i64

	; call POKE64()
	; arg THIS
	%vr79 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr77
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr79, i64 %vr77, i64 255 )

	; bop SYS_OFFSET + 3
	%vr81 = load double, double* @SYS_OFFSET
	%vr80 = fadd double %vr81, 0x4008000000000000

	; conv vr80 => vr82
	%vr83 = call double @llvm.nearbyint.f64(double %vr80)
	%vr82 = fptoui double %vr83 to i64

	; call POKE64()
	; arg THIS
	%vr84 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr82
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr84, i64 %vr82, i64 255 )

	; bop SYS_OFFSET + 4
	%vr86 = load double, double* @SYS_OFFSET
	%vr85 = fadd double %vr86, 0x4010000000000000

	; conv vr85 => vr87
	%vr88 = call double @llvm.nearbyint.f64(double %vr85)
	%vr87 = fptoui double %vr88 to i64

	; call POKE64()
	; arg THIS
	%vr89 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr87
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr89, i64 %vr87, i64 255 )

	; bop SYS_OFFSET + 5
	%vr91 = load double, double* @SYS_OFFSET
	%vr90 = fadd double %vr91, 0x4014000000000000

	; conv vr90 => vr92
	%vr93 = call double @llvm.nearbyint.f64(double %vr90)
	%vr92 = fptoui double %vr93 to i64

	; call POKE64()
	; arg THIS
	%vr94 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr92
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr94, i64 %vr92, i64 255 )

	; bop SYS_OFFSET + 9
	%vr96 = load double, double* @SYS_OFFSET
	%vr95 = fadd double %vr96, 0x4022000000000000

	; conv vr95 => vr97
	%vr98 = call double @llvm.nearbyint.f64(double %vr95)
	%vr97 = fptoui double %vr98 to i64

	; call POKE64()
	; arg THIS
	%vr99 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr97
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr99, i64 %vr97, i64 255 )

	; call POKE64()
	; arg THIS
	%vr100 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 53272
	; arg 31
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr100, i64 53272, i64 31 )

	; bop SYS_OFFSET + 231
	%vr102 = load double, double* @SYS_OFFSET
	%vr101 = fadd double %vr102, 0x406CE00000000000

	; conv vr101 => vr103
	%vr104 = call double @llvm.nearbyint.f64(double %vr101)
	%vr103 = fptoui double %vr104 to i64

	; call POKE64()
	; arg THIS
	%vr105 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr103
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr105, i64 %vr103, i64 0 )

	; bop SYS_OFFSET + 232
	%vr107 = load double, double* @SYS_OFFSET
	%vr106 = fadd double %vr107, 0x406D000000000000

	; conv vr106 => vr108
	%vr109 = call double @llvm.nearbyint.f64(double %vr106)
	%vr108 = fptoui double %vr109 to i64

	; call POKE64()
	; arg THIS
	%vr110 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr108
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr110, i64 %vr108, i64 0 )

	; bop SYS_OFFSET + 233
	%vr112 = load double, double* @SYS_OFFSET
	%vr111 = fadd double %vr112, 0x406D200000000000

	; conv vr111 => vr113
	%vr114 = call double @llvm.nearbyint.f64(double %vr111)
	%vr113 = fptoui double %vr114 to i64

	; call POKE64()
	; arg THIS
	%vr115 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr113
	; arg 7
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr115, i64 %vr113, i64 7 )

	; bop SYS_OFFSET + 234
	%vr117 = load double, double* @SYS_OFFSET
	%vr116 = fadd double %vr117, 0x406D400000000000

	; conv vr116 => vr118
	%vr119 = call double @llvm.nearbyint.f64(double %vr116)
	%vr118 = fptoui double %vr119 to i64

	; call POKE64()
	; arg THIS
	%vr120 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr118
	; arg 7
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr120, i64 %vr118, i64 7 )

	; addrof I

	; memclear I
	%vr122 = bitcast i64* %I.91 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr122, i8 0, i32 8, i32 1, i1 false )

	; addrof TMP

	; memclear TMP
	%vr124 = bitcast i8* %TMP.92 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr124, i8 0, i32 1, i32 1, i1 false )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_03D6
	%vr126 = bitcast i8* bitcast ([18 x i8]* @Lt_03D6 to i8*) to i8*
	; arg 17
	%vr125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr126, i64 17 )

	; call fb_FileOpen()
	; arg vr125
	%vr129 = bitcast %FBSTRING* %vr125 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr128 = call i32 @fb_FileOpen( %FBSTRING* %vr129, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; store I := 0
	store i64 0, i64* %I.91

	; label .Lt_03DA
	br label %.Lt_03DA
.Lt_03DA:

	; addrof TMP
	%vr136 = bitcast i8* %TMP.92 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr136
	; arg 1
	%vr137 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr136, i64 1 )

	; conv TMP => vr141
	%vr142 = load i8, i8* %TMP.92
	%vr141 = uitofp i8 %vr142 to double

	; bop I SHL 3
	%vr144 = load i64, i64* %I.91
	%vr143 = shl i64 %vr144, 3

	; bop THIS + vr143
	%vr146 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr147 = inttoptr i64 %vr143 to %MEMORY_T*
	%vr145 = add %MEMORY_T* %vr146, %vr147

	; store vr145+134348800 := vr141
	%vr148 = ptrtoint %MEMORY_T* %vr145 to i64
	%vr149 = add i64 %vr148, 134348800
	%vr150 = inttoptr i64 %vr149 to double*
	store double %vr141, double* %vr150

	; label .Lt_03D8
	br label %.Lt_03D8
.Lt_03D8:

	; bop I + 1
	%vr152 = load i64, i64* %I.91
	%vr151 = add i64 %vr152, 1

	; store I := vr151
	store i64 %vr151, i64* %I.91

	; label .Lt_03D7
	br label %.Lt_03D7
.Lt_03D7:

	; branchbop I <= 8191
	%vr154 = load i64, i64* %I.91
	%vr153 = icmp sle i64 %vr154, 8191
	br i1 %vr153, label %.Lt_03DA, label %.Lt_041B
.Lt_041B:

	; label .Lt_03D9
	br label %.Lt_03D9
.Lt_03D9:

	; store I := 0
	store i64 0, i64* %I.91

	; label .Lt_03DE
	br label %.Lt_03DE
.Lt_03DE:

	; addrof TMP
	%vr156 = bitcast i8* %TMP.92 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr156
	; arg 1
	%vr157 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr156, i64 1 )

	; conv TMP => vr161
	%vr162 = load i8, i8* %TMP.92
	%vr161 = uitofp i8 %vr162 to double

	; bop I SHL 3
	%vr164 = load i64, i64* %I.91
	%vr163 = shl i64 %vr164, 3

	; bop THIS + vr163
	%vr166 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr167 = inttoptr i64 %vr163 to %MEMORY_T*
	%vr165 = add %MEMORY_T* %vr166, %vr167

	; store vr165+134217728 := vr161
	%vr168 = ptrtoint %MEMORY_T* %vr165 to i64
	%vr169 = add i64 %vr168, 134217728
	%vr170 = inttoptr i64 %vr169 to double*
	store double %vr161, double* %vr170

	; label .Lt_03DC
	br label %.Lt_03DC
.Lt_03DC:

	; bop I + 1
	%vr172 = load i64, i64* %I.91
	%vr171 = add i64 %vr172, 1

	; store I := vr171
	store i64 %vr171, i64* %I.91

	; label .Lt_03DB
	br label %.Lt_03DB
.Lt_03DB:

	; branchbop I <= 8191
	%vr174 = load i64, i64* %I.91
	%vr173 = icmp sle i64 %vr174, 8191
	br i1 %vr173, label %.Lt_03DE, label %.Lt_041C
.Lt_041C:

	; label .Lt_03DD
	br label %.Lt_03DD
.Lt_03DD:

	; call fb_FileClose()
	; arg 1
	%vr175 = call i32 @fb_FileClose( i32 1 )

	; store I := 0
	store i64 0, i64* %I.91

	; label .Lt_03E2
	br label %.Lt_03E2
.Lt_03E2:

	; bop I SHL 3
	%vr178 = load i64, i64* %I.91
	%vr177 = shl i64 %vr178, 3

	; bop THIS + vr177
	%vr180 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr181 = inttoptr i64 %vr177 to %MEMORY_T*
	%vr179 = add %MEMORY_T* %vr180, %vr181

	; store vr179+134479872 := 0
	%vr182 = ptrtoint %MEMORY_T* %vr179 to i64
	%vr183 = add i64 %vr182, 134479872
	%vr184 = inttoptr i64 %vr183 to double*
	store double 0x0000000000000000, double* %vr184

	; label .Lt_03E0
	br label %.Lt_03E0
.Lt_03E0:

	; bop I + 1
	%vr186 = load i64, i64* %I.91
	%vr185 = add i64 %vr186, 1

	; store I := vr185
	store i64 %vr185, i64* %I.91

	; label .Lt_03DF
	br label %.Lt_03DF
.Lt_03DF:

	; branchbop I <= 8191
	%vr188 = load i64, i64* %I.91
	%vr187 = icmp sle i64 %vr188, 8191
	br i1 %vr187, label %.Lt_03E2, label %.Lt_041D
.Lt_041D:

	; label .Lt_03E1
	br label %.Lt_03E1
.Lt_03E1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_03E3
	%vr190 = bitcast i8* bitcast ([16 x i8]* @Lt_03E3 to i8*) to i8*
	; arg 15
	%vr189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr190, i64 15 )

	; call fb_FileOpen()
	; arg vr189
	%vr193 = bitcast %FBSTRING* %vr189 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr192 = call i32 @fb_FileOpen( %FBSTRING* %vr193, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; localvar LT_03E4
	%LT_03E4.95 = alloca i64

	; store I := 0
	store i64 0, i64* %I.91

	; call fb_FileSize()
	; arg 1
	%vr199 = call i64 @fb_FileSize( i32 1 )

	; store LT_03E4 := vr199
	store i64 %vr199, i64* %LT_03E4.95

	; goto .Lt_03E5
	br label %.Lt_03E5
.Lt_041E:

	; label .Lt_03E8
	br label %.Lt_03E8
.Lt_03E8:

	; addrof TMP
	%vr204 = bitcast i8* %TMP.92 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr204
	; arg 1
	%vr205 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr204, i64 1 )

	; conv TMP => vr209
	%vr210 = load i8, i8* %TMP.92
	%vr209 = uitofp i8 %vr210 to double

	; bop I SHL 3
	%vr212 = load i64, i64* %I.91
	%vr211 = shl i64 %vr212, 3

	; bop THIS + vr211
	%vr214 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr215 = inttoptr i64 %vr211 to %MEMORY_T*
	%vr213 = add %MEMORY_T* %vr214, %vr215

	; store vr213+134479872 := vr209
	%vr216 = ptrtoint %MEMORY_T* %vr213 to i64
	%vr217 = add i64 %vr216, 134479872
	%vr218 = inttoptr i64 %vr217 to double*
	store double %vr209, double* %vr218

	; label .Lt_03E6
	br label %.Lt_03E6
.Lt_03E6:

	; bop I + 1
	%vr220 = load i64, i64* %I.91
	%vr219 = add i64 %vr220, 1

	; store I := vr219
	store i64 %vr219, i64* %I.91

	; label .Lt_03E5
	br label %.Lt_03E5
.Lt_03E5:

	; branchbop I <= LT_03E4
	%vr222 = load i64, i64* %I.91
	%vr223 = load i64, i64* %LT_03E4.95
	%vr221 = icmp sle i64 %vr222, %vr223
	br i1 %vr221, label %.Lt_03E8, label %.Lt_041F
.Lt_041F:

	; label .Lt_03E7
	br label %.Lt_03E7
.Lt_03E7:

	; call fb_FileClose()
	; arg 1
	%vr224 = call i32 @fb_FileClose( i32 1 )

	; call POKE64()
	; arg THIS
	%vr226 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 0
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr226, i64 0, i64 255 )

	; call POKE64()
	; arg THIS
	%vr227 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 1
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr227, i64 1, i64 255 )

	; call POKE64()
	; arg THIS
	%vr228 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 65532
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr228, i64 65532, i64 0 )

	; call POKE64()
	; arg THIS
	%vr229 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 65533
	; arg 128
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr229, i64 65533, i64 128 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr231 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr231, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr233 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr234 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr230
	%vr237 = bitcast %FBSTRING* %vr230 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr233, float %vr234, i32 4278190080, i32 0, %FBSTRING* %vr237, i32 0, i32 1073741828 )

	; call POKE64()
	; arg THIS
	%vr240 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49318
	; arg 169
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr240, i64 49318, i64 169 )

	; call POKE64()
	; arg THIS
	%vr241 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49319
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr241, i64 49319, i64 0 )

	; call POKE64()
	; arg THIS
	%vr242 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49320
	; arg 141
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr242, i64 49320, i64 141 )

	; call POKE64()
	; arg THIS
	%vr243 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49321
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr243, i64 49321, i64 0 )

	; call POKE64()
	; arg THIS
	%vr244 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49322
	; arg 192
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr244, i64 49322, i64 192 )

	; call POKE64()
	; arg THIS
	%vr245 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49323
	; arg 96
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr245, i64 49323, i64 96 )

	; addrof MEM

	; memclear MEM
	%vr247 = bitcast %FBSTRING* %MEM.93 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr247, i8 0, i32 24, i32 1, i1 false )

	; addrof A

	; memclear A
	%vr249 = bitcast i64* %A.94 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr249, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr251 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr251+134371888 := 0
	%vr252 = ptrtoint %MEMORY_T* %vr251 to i64
	%vr253 = add i64 %vr252, 134371888
	%vr254 = inttoptr i64 %vr253 to double*
	store double 0x0000000000000000, double* %vr254

	; deref THIS
	%vr256 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr256+134397040 := 0
	%vr257 = ptrtoint %MEMORY_T* %vr256 to i64
	%vr258 = add i64 %vr257, 134397040
	%vr259 = inttoptr i64 %vr258 to double*
	store double 0x0000000000000000, double* %vr259
	%vr260 = bitcast i8* bitcast ([6 x i8]* @Lt_03E9 to i8*) to i8*

	; addrof MEM
	%vr262 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr262
	; arg -1
	; arg vr260
	; arg 6
	; arg 0
	%vr263 = call %FBSTRING* @fb_StrAssign( i8* %vr262, i64 -1, i8* %vr260, i64 6, i32 0 )

	; localvar LT_03EA
	%LT_03EA.96 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr268 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr268
	; arg -1
	%vr269 = call i64 @fb_StrLen( i8* %vr268, i64 -1 )

	; store LT_03EA := vr269
	store i64 %vr269, i64* %LT_03EA.96

	; goto .Lt_03EB
	br label %.Lt_03EB
.Lt_0420:

	; label .Lt_03EE
	br label %.Lt_03EE
.Lt_03EE:

	; addrof MEM
	%vr272 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr272
	; arg A
	%vr274 = load i64, i64* %A.94
	; arg 1
	%vr273 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr272, i64 %vr274, i64 1 )

	; call fb_ASC()
	; arg vr273
	%vr278 = bitcast %FBSTRING* %vr273 to %FBSTRING*
	; arg 1
	%vr277 = call i32 @fb_ASC( %FBSTRING* %vr278, i64 1 )

	; conv vr277 => vr280
	%vr280 = sext i32 %vr277 to i64

	; bop vr280 + 32
	%vr281 = add i64 %vr280, 32

	; conv vr281 => vr282
	%vr282 = sitofp i64 %vr281 to double

	; bop A SHL 3
	%vr284 = load i64, i64* %A.94
	%vr283 = shl i64 %vr284, 3

	; bop THIS + vr283
	%vr286 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr287 = inttoptr i64 %vr283 to %MEMORY_T*
	%vr285 = add %MEMORY_T* %vr286, %vr287

	; store vr285+134226736 := vr282
	%vr288 = ptrtoint %MEMORY_T* %vr285 to i64
	%vr289 = add i64 %vr288, 134226736
	%vr290 = inttoptr i64 %vr289 to double*
	store double %vr282, double* %vr290

	; label .Lt_03EC
	br label %.Lt_03EC
.Lt_03EC:

	; bop A + 1
	%vr292 = load i64, i64* %A.94
	%vr291 = add i64 %vr292, 1

	; store A := vr291
	store i64 %vr291, i64* %A.94

	; label .Lt_03EB
	br label %.Lt_03EB
.Lt_03EB:

	; branchbop A <= LT_03EA
	%vr294 = load i64, i64* %A.94
	%vr295 = load i64, i64* %LT_03EA.96
	%vr293 = icmp sle i64 %vr294, %vr295
	br i1 %vr293, label %.Lt_03EE, label %.Lt_0421
.Lt_0421:

	; label .Lt_03ED
	br label %.Lt_03ED
.Lt_03ED:
	%vr296 = bitcast i8* bitcast ([5 x i8]* @Lt_03EF to i8*) to i8*

	; addrof MEM
	%vr298 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr298
	; arg -1
	; arg vr296
	; arg 5
	; arg 0
	%vr299 = call %FBSTRING* @fb_StrAssign( i8* %vr298, i64 -1, i8* %vr296, i64 5, i32 0 )

	; localvar LT_03F0
	%LT_03F0.97 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr304 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr304
	; arg -1
	%vr305 = call i64 @fb_StrLen( i8* %vr304, i64 -1 )

	; store LT_03F0 := vr305
	store i64 %vr305, i64* %LT_03F0.97

	; goto .Lt_03F1
	br label %.Lt_03F1
.Lt_0422:

	; label .Lt_03F4
	br label %.Lt_03F4
.Lt_03F4:

	; addrof MEM
	%vr308 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr308
	; arg A
	%vr310 = load i64, i64* %A.94
	; arg 1
	%vr309 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr308, i64 %vr310, i64 1 )

	; call fb_ASC()
	; arg vr309
	%vr314 = bitcast %FBSTRING* %vr309 to %FBSTRING*
	; arg 1
	%vr313 = call i32 @fb_ASC( %FBSTRING* %vr314, i64 1 )

	; conv vr313 => vr316
	%vr316 = sext i32 %vr313 to i64

	; bop vr316 + 32
	%vr317 = add i64 %vr316, 32

	; conv vr317 => vr318
	%vr318 = sitofp i64 %vr317 to double

	; bop A SHL 3
	%vr320 = load i64, i64* %A.94
	%vr319 = shl i64 %vr320, 3

	; bop THIS + vr319
	%vr322 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr323 = inttoptr i64 %vr319 to %MEMORY_T*
	%vr321 = add %MEMORY_T* %vr322, %vr323

	; store vr321+134226784 := vr318
	%vr324 = ptrtoint %MEMORY_T* %vr321 to i64
	%vr325 = add i64 %vr324, 134226784
	%vr326 = inttoptr i64 %vr325 to double*
	store double %vr318, double* %vr326

	; label .Lt_03F2
	br label %.Lt_03F2
.Lt_03F2:

	; bop A + 1
	%vr328 = load i64, i64* %A.94
	%vr327 = add i64 %vr328, 1

	; store A := vr327
	store i64 %vr327, i64* %A.94

	; label .Lt_03F1
	br label %.Lt_03F1
.Lt_03F1:

	; branchbop A <= LT_03F0
	%vr330 = load i64, i64* %A.94
	%vr331 = load i64, i64* %LT_03F0.97
	%vr329 = icmp sle i64 %vr330, %vr331
	br i1 %vr329, label %.Lt_03F4, label %.Lt_0423
.Lt_0423:

	; label .Lt_03F3
	br label %.Lt_03F3
.Lt_03F3:

	; deref THIS
	%vr333 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr333+134226920 := 42
	%vr334 = ptrtoint %MEMORY_T* %vr333 to i64
	%vr335 = add i64 %vr334, 134226920
	%vr336 = inttoptr i64 %vr335 to double*
	store double 0x4045000000000000, double* %vr336

	; deref THIS
	%vr338 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr338+134226928 := 32
	%vr339 = ptrtoint %MEMORY_T* %vr338 to i64
	%vr340 = add i64 %vr339, 134226928
	%vr341 = inttoptr i64 %vr340 to double*
	store double 0x4040000000000000, double* %vr341

	; deref THIS
	%vr343 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr343+134226936 := 32
	%vr344 = ptrtoint %MEMORY_T* %vr343 to i64
	%vr345 = add i64 %vr344, 134226936
	%vr346 = inttoptr i64 %vr345 to double*
	store double 0x4040000000000000, double* %vr346
	%vr347 = bitcast i8* bitcast ([10 x i8]* @Lt_03F5 to i8*) to i8*

	; addrof MEM
	%vr349 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr349
	; arg -1
	; arg vr347
	; arg 10
	; arg 0
	%vr350 = call %FBSTRING* @fb_StrAssign( i8* %vr349, i64 -1, i8* %vr347, i64 10, i32 0 )

	; localvar LT_03F6
	%LT_03F6.98 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr355 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr355
	; arg -1
	%vr356 = call i64 @fb_StrLen( i8* %vr355, i64 -1 )

	; store LT_03F6 := vr356
	store i64 %vr356, i64* %LT_03F6.98

	; goto .Lt_03F7
	br label %.Lt_03F7
.Lt_0424:

	; label .Lt_03FA
	br label %.Lt_03FA
.Lt_03FA:

	; addrof MEM
	%vr359 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr359
	; arg A
	%vr361 = load i64, i64* %A.94
	; arg 1
	%vr360 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr359, i64 %vr361, i64 1 )

	; call fb_ASC()
	; arg vr360
	%vr365 = bitcast %FBSTRING* %vr360 to %FBSTRING*
	; arg 1
	%vr364 = call i32 @fb_ASC( %FBSTRING* %vr365, i64 1 )

	; conv vr364 => vr367
	%vr367 = sext i32 %vr364 to i64

	; bop vr367 + 32
	%vr368 = add i64 %vr367, 32

	; conv vr368 => vr369
	%vr369 = sitofp i64 %vr368 to double

	; bop A SHL 3
	%vr371 = load i64, i64* %A.94
	%vr370 = shl i64 %vr371, 3

	; bop THIS + vr370
	%vr373 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr374 = inttoptr i64 %vr370 to %MEMORY_T*
	%vr372 = add %MEMORY_T* %vr373, %vr374

	; store vr372+134226936 := vr369
	%vr375 = ptrtoint %MEMORY_T* %vr372 to i64
	%vr376 = add i64 %vr375, 134226936
	%vr377 = inttoptr i64 %vr376 to double*
	store double %vr369, double* %vr377

	; label .Lt_03F8
	br label %.Lt_03F8
.Lt_03F8:

	; bop A + 1
	%vr379 = load i64, i64* %A.94
	%vr378 = add i64 %vr379, 1

	; store A := vr378
	store i64 %vr378, i64* %A.94

	; label .Lt_03F7
	br label %.Lt_03F7
.Lt_03F7:

	; branchbop A <= LT_03F6
	%vr381 = load i64, i64* %A.94
	%vr382 = load i64, i64* %LT_03F6.98
	%vr380 = icmp sle i64 %vr381, %vr382
	br i1 %vr380, label %.Lt_03FA, label %.Lt_0425
.Lt_0425:

	; label .Lt_03F9
	br label %.Lt_03F9
.Lt_03F9:

	; deref THIS
	%vr384 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr384+134227016 := 32
	%vr385 = ptrtoint %MEMORY_T* %vr384 to i64
	%vr386 = add i64 %vr385, 134227016
	%vr387 = inttoptr i64 %vr386 to double*
	store double 0x4040000000000000, double* %vr387
	%vr388 = bitcast i8* bitcast ([6 x i8]* @Lt_03FB to i8*) to i8*

	; addrof MEM
	%vr390 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr390
	; arg -1
	; arg vr388
	; arg 6
	; arg 0
	%vr391 = call %FBSTRING* @fb_StrAssign( i8* %vr390, i64 -1, i8* %vr388, i64 6, i32 0 )

	; localvar LT_03FC
	%LT_03FC.99 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr396 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr396
	; arg -1
	%vr397 = call i64 @fb_StrLen( i8* %vr396, i64 -1 )

	; store LT_03FC := vr397
	store i64 %vr397, i64* %LT_03FC.99

	; goto .Lt_03FD
	br label %.Lt_03FD
.Lt_0426:

	; label .Lt_0400
	br label %.Lt_0400
.Lt_0400:

	; addrof MEM
	%vr400 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr400
	; arg A
	%vr402 = load i64, i64* %A.94
	; arg 1
	%vr401 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr400, i64 %vr402, i64 1 )

	; call fb_ASC()
	; arg vr401
	%vr406 = bitcast %FBSTRING* %vr401 to %FBSTRING*
	; arg 1
	%vr405 = call i32 @fb_ASC( %FBSTRING* %vr406, i64 1 )

	; conv vr405 => vr408
	%vr408 = sext i32 %vr405 to i64

	; bop vr408 + 32
	%vr409 = add i64 %vr408, 32

	; conv vr409 => vr410
	%vr410 = sitofp i64 %vr409 to double

	; bop A SHL 3
	%vr412 = load i64, i64* %A.94
	%vr411 = shl i64 %vr412, 3

	; bop THIS + vr411
	%vr414 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr415 = inttoptr i64 %vr411 to %MEMORY_T*
	%vr413 = add %MEMORY_T* %vr414, %vr415

	; store vr413+134226688 := vr410
	%vr416 = ptrtoint %MEMORY_T* %vr413 to i64
	%vr417 = add i64 %vr416, 134226688
	%vr418 = inttoptr i64 %vr417 to double*
	store double %vr410, double* %vr418

	; addrof MEM
	%vr420 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr420
	; arg A
	%vr422 = load i64, i64* %A.94
	; arg 1
	%vr421 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr420, i64 %vr422, i64 1 )

	; call fb_ASC()
	; arg vr421
	%vr426 = bitcast %FBSTRING* %vr421 to %FBSTRING*
	; arg 1
	%vr425 = call i32 @fb_ASC( %FBSTRING* %vr426, i64 1 )

	; conv vr425 => vr428
	%vr428 = sext i32 %vr425 to i64

	; bop vr428 + 32
	%vr429 = add i64 %vr428, 32

	; conv vr429 => vr430
	%vr430 = sitofp i64 %vr429 to double

	; bop A SHL 3
	%vr432 = load i64, i64* %A.94
	%vr431 = shl i64 %vr432, 3

	; bop THIS + vr431
	%vr434 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr435 = inttoptr i64 %vr431 to %MEMORY_T*
	%vr433 = add %MEMORY_T* %vr434, %vr435

	; store vr433+134227016 := vr430
	%vr436 = ptrtoint %MEMORY_T* %vr433 to i64
	%vr437 = add i64 %vr436, 134227016
	%vr438 = inttoptr i64 %vr437 to double*
	store double %vr430, double* %vr438

	; label .Lt_03FE
	br label %.Lt_03FE
.Lt_03FE:

	; bop A + 1
	%vr440 = load i64, i64* %A.94
	%vr439 = add i64 %vr440, 1

	; store A := vr439
	store i64 %vr439, i64* %A.94

	; label .Lt_03FD
	br label %.Lt_03FD
.Lt_03FD:

	; branchbop A <= LT_03FC
	%vr442 = load i64, i64* %A.94
	%vr443 = load i64, i64* %LT_03FC.99
	%vr441 = icmp sle i64 %vr442, %vr443
	br i1 %vr441, label %.Lt_0400, label %.Lt_0427
.Lt_0427:

	; label .Lt_03FF
	br label %.Lt_03FF
.Lt_03FF:

	; deref THIS
	%vr445 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr445+134227064 := 32
	%vr446 = ptrtoint %MEMORY_T* %vr445 to i64
	%vr447 = add i64 %vr446, 134227064
	%vr448 = inttoptr i64 %vr447 to double*
	store double 0x4040000000000000, double* %vr448

	; deref THIS
	%vr450 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr450+134227072 := 118
	%vr451 = ptrtoint %MEMORY_T* %vr450 to i64
	%vr452 = add i64 %vr451, 134227072
	%vr453 = inttoptr i64 %vr452 to double*
	store double 0x405D800000000000, double* %vr453

	; deref THIS
	%vr455 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr455+134227080 := 50
	%vr456 = ptrtoint %MEMORY_T* %vr455 to i64
	%vr457 = add i64 %vr456, 134227080
	%vr458 = inttoptr i64 %vr457 to double*
	store double 0x4049000000000000, double* %vr458

	; deref THIS
	%vr460 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr460+134227088 := 32
	%vr461 = ptrtoint %MEMORY_T* %vr460 to i64
	%vr462 = add i64 %vr461, 134227088
	%vr463 = inttoptr i64 %vr462 to double*
	store double 0x4040000000000000, double* %vr463

	; deref THIS
	%vr465 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr465+134227096 := 42
	%vr466 = ptrtoint %MEMORY_T* %vr465 to i64
	%vr467 = add i64 %vr466, 134227096
	%vr468 = inttoptr i64 %vr467 to double*
	store double 0x4045000000000000, double* %vr468
	%vr469 = bitcast i8* bitcast ([11 x i8]* @Lt_0401 to i8*) to i8*

	; addrof MEM
	%vr471 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr471
	; arg -1
	; arg vr469
	; arg 11
	; arg 0
	%vr472 = call %FBSTRING* @fb_StrAssign( i8* %vr471, i64 -1, i8* %vr469, i64 11, i32 0 )

	; localvar LT_0402
	%LT_0402.100 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr477 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr477
	; arg -1
	%vr478 = call i64 @fb_StrLen( i8* %vr477, i64 -1 )

	; store LT_0402 := vr478
	store i64 %vr478, i64* %LT_0402.100

	; goto .Lt_0403
	br label %.Lt_0403
.Lt_0428:

	; label .Lt_0406
	br label %.Lt_0406
.Lt_0406:

	; addrof MEM
	%vr481 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr481
	; arg A
	%vr483 = load i64, i64* %A.94
	; arg 1
	%vr482 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr481, i64 %vr483, i64 1 )

	; call fb_ASC()
	; arg vr482
	%vr487 = bitcast %FBSTRING* %vr482 to %FBSTRING*
	; arg 1
	%vr486 = call i32 @fb_ASC( %FBSTRING* %vr487, i64 1 )

	; conv vr486 => vr489
	%vr489 = sext i32 %vr486 to i64

	; bop vr489 + 32
	%vr490 = add i64 %vr489, 32

	; conv vr490 => vr491
	%vr491 = sitofp i64 %vr490 to double

	; bop A SHL 3
	%vr493 = load i64, i64* %A.94
	%vr492 = shl i64 %vr493, 3

	; bop THIS + vr492
	%vr495 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr496 = inttoptr i64 %vr492 to %MEMORY_T*
	%vr494 = add %MEMORY_T* %vr495, %vr496

	; store vr494+134227184 := vr491
	%vr497 = ptrtoint %MEMORY_T* %vr494 to i64
	%vr498 = add i64 %vr497, 134227184
	%vr499 = inttoptr i64 %vr498 to double*
	store double %vr491, double* %vr499

	; label .Lt_0404
	br label %.Lt_0404
.Lt_0404:

	; bop A + 1
	%vr501 = load i64, i64* %A.94
	%vr500 = add i64 %vr501, 1

	; store A := vr500
	store i64 %vr500, i64* %A.94

	; label .Lt_0403
	br label %.Lt_0403
.Lt_0403:

	; branchbop A <= LT_0402
	%vr503 = load i64, i64* %A.94
	%vr504 = load i64, i64* %LT_0402.100
	%vr502 = icmp sle i64 %vr503, %vr504
	br i1 %vr502, label %.Lt_0406, label %.Lt_0429
.Lt_0429:

	; label .Lt_0405
	br label %.Lt_0405
.Lt_0405:

	; deref THIS
	%vr506 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr506+134227216 := 32
	%vr507 = ptrtoint %MEMORY_T* %vr506 to i64
	%vr508 = add i64 %vr507, 134227216
	%vr509 = inttoptr i64 %vr508 to double*
	store double 0x4040000000000000, double* %vr509
	%vr510 = bitcast i8* bitcast ([6 x i8]* @Lt_0407 to i8*) to i8*

	; addrof MEM
	%vr512 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr512
	; arg -1
	; arg vr510
	; arg 6
	; arg 0
	%vr513 = call %FBSTRING* @fb_StrAssign( i8* %vr512, i64 -1, i8* %vr510, i64 6, i32 0 )

	; localvar LT_0408
	%LT_0408.101 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr518 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr518
	; arg -1
	%vr519 = call i64 @fb_StrLen( i8* %vr518, i64 -1 )

	; store LT_0408 := vr519
	store i64 %vr519, i64* %LT_0408.101

	; goto .Lt_0409
	br label %.Lt_0409
.Lt_042A:

	; label .Lt_040C
	br label %.Lt_040C
.Lt_040C:

	; addrof MEM
	%vr522 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr522
	; arg A
	%vr524 = load i64, i64* %A.94
	; arg 1
	%vr523 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr522, i64 %vr524, i64 1 )

	; call fb_ASC()
	; arg vr523
	%vr528 = bitcast %FBSTRING* %vr523 to %FBSTRING*
	; arg 1
	%vr527 = call i32 @fb_ASC( %FBSTRING* %vr528, i64 1 )

	; conv vr527 => vr530
	%vr530 = sext i32 %vr527 to i64

	; bop vr530 + 32
	%vr531 = add i64 %vr530, 32

	; conv vr531 => vr532
	%vr532 = sitofp i64 %vr531 to double

	; bop A SHL 3
	%vr534 = load i64, i64* %A.94
	%vr533 = shl i64 %vr534, 3

	; bop THIS + vr533
	%vr536 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr537 = inttoptr i64 %vr533 to %MEMORY_T*
	%vr535 = add %MEMORY_T* %vr536, %vr537

	; store vr535+134355896 := vr532
	%vr538 = ptrtoint %MEMORY_T* %vr535 to i64
	%vr539 = add i64 %vr538, 134355896
	%vr540 = inttoptr i64 %vr539 to double*
	store double %vr532, double* %vr540

	; label .Lt_040A
	br label %.Lt_040A
.Lt_040A:

	; bop A + 1
	%vr542 = load i64, i64* %A.94
	%vr541 = add i64 %vr542, 1

	; store A := vr541
	store i64 %vr541, i64* %A.94

	; label .Lt_0409
	br label %.Lt_0409
.Lt_0409:

	; branchbop A <= LT_0408
	%vr544 = load i64, i64* %A.94
	%vr545 = load i64, i64* %LT_0408.101
	%vr543 = icmp sle i64 %vr544, %vr545
	br i1 %vr543, label %.Lt_040C, label %.Lt_042B
.Lt_042B:

	; label .Lt_040B
	br label %.Lt_040B
.Lt_040B:

	; deref THIS
	%vr547 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; conv vr547 => vr548
	%vr550 = ptrtoint %MEMORY_T* %vr547 to i64
	%vr551 = inttoptr i64 %vr550 to double*
	%vr552 = load double, double* %vr551
	%vr549 = call double @llvm.nearbyint.f64(double %vr552)
	%vr548 = fptosi double %vr549 to i32

	; call fb_GetMemAvail()
	; arg vr548
	%vr553 = call i64 @fb_GetMemAvail( i32 %vr548 )

	; bop vr553 SHR 30
	%vr554 = ashr i64 %vr553, 30

	; call fb_ULongintToStr()
	; arg vr554
	%vr556 = call %FBSTRING* @fb_ULongintToStr( i64 %vr554 )

	; addrof MEM
	%vr559 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr559
	; arg -1
	; arg vr556
	%vr562 = bitcast %FBSTRING* %vr556 to i8*
	; arg -1
	; arg 0
	%vr560 = call %FBSTRING* @fb_StrAssign( i8* %vr559, i64 -1, i8* %vr562, i64 -1, i32 0 )

	; localvar LT_040E
	%LT_040E.102 = alloca i64

	; addrof MEM
	%vr566 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr566
	; arg -1
	%vr567 = call i64 @fb_StrLen( i8* %vr566, i64 -1 )

	; store LT_040E := vr567
	store i64 %vr567, i64* %LT_040E.102

	; branchbop LT_040E <> 1
	%vr570 = load i64, i64* %LT_040E.102
	%vr569 = icmp ne i64 %vr570, 1
	br i1 %vr569, label %.Lt_040F, label %.Lt_042C
.Lt_042C:

	; label .Lt_0410
	br label %.Lt_0410
.Lt_0410:

	; addrof MEM
	%vr572 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_ASC()
	; arg vr572
	; arg 1
	%vr573 = call i32 @fb_ASC( %FBSTRING* %vr572, i64 1 )

	; conv vr573 => vr575
	%vr575 = uitofp i32 %vr573 to double

	; deref THIS
	%vr577 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr577+134227160 := vr575
	%vr578 = ptrtoint %MEMORY_T* %vr577 to i64
	%vr579 = add i64 %vr578, 134227160
	%vr580 = inttoptr i64 %vr579 to double*
	store double %vr575, double* %vr580

	; deref THIS
	%vr582 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr582+134227168 := 103
	%vr583 = ptrtoint %MEMORY_T* %vr582 to i64
	%vr584 = add i64 %vr583, 134227168
	%vr585 = inttoptr i64 %vr584 to double*
	store double 0x4059C00000000000, double* %vr585

	; deref THIS
	%vr587 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr587+134227176 := 98
	%vr588 = ptrtoint %MEMORY_T* %vr587 to i64
	%vr589 = add i64 %vr588, 134227176
	%vr590 = inttoptr i64 %vr589 to double*
	store double 0x4058800000000000, double* %vr590

	; goto .Lt_040D
	br label %.Lt_040D
.Lt_042D:

	; label .Lt_040F
	br label %.Lt_040F
.Lt_040F:

	; branchbop LT_040E <> 2
	%vr592 = load i64, i64* %LT_040E.102
	%vr591 = icmp ne i64 %vr592, 2
	br i1 %vr591, label %.Lt_0411, label %.Lt_042E
.Lt_042E:

	; label .Lt_0412
	br label %.Lt_0412
.Lt_0412:

	; addrof MEM
	%vr594 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr594
	; arg 1
	; arg 1
	%vr595 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr594, i64 1, i64 1 )

	; call fb_ASC()
	; arg vr595
	%vr599 = bitcast %FBSTRING* %vr595 to %FBSTRING*
	; arg 1
	%vr598 = call i32 @fb_ASC( %FBSTRING* %vr599, i64 1 )

	; conv vr598 => vr601
	%vr601 = uitofp i32 %vr598 to double

	; deref THIS
	%vr603 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr603+134227160 := vr601
	%vr604 = ptrtoint %MEMORY_T* %vr603 to i64
	%vr605 = add i64 %vr604, 134227160
	%vr606 = inttoptr i64 %vr605 to double*
	store double %vr601, double* %vr606

	; addrof MEM
	%vr608 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr608
	; arg 2
	; arg 1
	%vr609 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr608, i64 2, i64 1 )

	; call fb_ASC()
	; arg vr609
	%vr613 = bitcast %FBSTRING* %vr609 to %FBSTRING*
	; arg 1
	%vr612 = call i32 @fb_ASC( %FBSTRING* %vr613, i64 1 )

	; conv vr612 => vr615
	%vr615 = uitofp i32 %vr612 to double

	; deref THIS
	%vr617 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr617+134227168 := vr615
	%vr618 = ptrtoint %MEMORY_T* %vr617 to i64
	%vr619 = add i64 %vr618, 134227168
	%vr620 = inttoptr i64 %vr619 to double*
	store double %vr615, double* %vr620

	; deref THIS
	%vr622 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr622+134227176 := 103
	%vr623 = ptrtoint %MEMORY_T* %vr622 to i64
	%vr624 = add i64 %vr623, 134227176
	%vr625 = inttoptr i64 %vr624 to double*
	store double 0x4059C00000000000, double* %vr625

	; deref THIS
	%vr627 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr627+134227184 := 98
	%vr628 = ptrtoint %MEMORY_T* %vr627 to i64
	%vr629 = add i64 %vr628, 134227184
	%vr630 = inttoptr i64 %vr629 to double*
	store double 0x4058800000000000, double* %vr630
	%vr631 = bitcast i8* bitcast ([12 x i8]* @Lt_0413 to i8*) to i8*

	; addrof MEM
	%vr633 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrAssign()
	; arg vr633
	; arg -1
	; arg vr631
	; arg 12
	; arg 0
	%vr634 = call %FBSTRING* @fb_StrAssign( i8* %vr633, i64 -1, i8* %vr631, i64 12, i32 0 )

	; localvar LT_0414
	%LT_0414.103 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr639 = bitcast %FBSTRING* %MEM.93 to i8*

	; call fb_StrLen()
	; arg vr639
	; arg -1
	%vr640 = call i64 @fb_StrLen( i8* %vr639, i64 -1 )

	; store LT_0414 := vr640
	store i64 %vr640, i64* %LT_0414.103

	; goto .Lt_0415
	br label %.Lt_0415
.Lt_042F:

	; label .Lt_0418
	br label %.Lt_0418
.Lt_0418:

	; addrof MEM
	%vr643 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrMid()
	; arg vr643
	; arg A
	%vr645 = load i64, i64* %A.94
	; arg 1
	%vr644 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr643, i64 %vr645, i64 1 )

	; call fb_ASC()
	; arg vr644
	%vr649 = bitcast %FBSTRING* %vr644 to %FBSTRING*
	; arg 1
	%vr648 = call i32 @fb_ASC( %FBSTRING* %vr649, i64 1 )

	; conv vr648 => vr651
	%vr651 = sext i32 %vr648 to i64

	; bop vr651 + 32
	%vr652 = add i64 %vr651, 32

	; conv vr652 => vr653
	%vr653 = sitofp i64 %vr652 to double

	; bop A SHL 3
	%vr655 = load i64, i64* %A.94
	%vr654 = shl i64 %vr655, 3

	; bop THIS + vr654
	%vr657 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr658 = inttoptr i64 %vr654 to %MEMORY_T*
	%vr656 = add %MEMORY_T* %vr657, %vr658

	; store vr656+134227184 := vr653
	%vr659 = ptrtoint %MEMORY_T* %vr656 to i64
	%vr660 = add i64 %vr659, 134227184
	%vr661 = inttoptr i64 %vr660 to double*
	store double %vr653, double* %vr661

	; label .Lt_0416
	br label %.Lt_0416
.Lt_0416:

	; bop A + 1
	%vr663 = load i64, i64* %A.94
	%vr662 = add i64 %vr663, 1

	; store A := vr662
	store i64 %vr662, i64* %A.94

	; label .Lt_0415
	br label %.Lt_0415
.Lt_0415:

	; branchbop A <= LT_0414
	%vr665 = load i64, i64* %A.94
	%vr666 = load i64, i64* %LT_0414.103
	%vr664 = icmp sle i64 %vr665, %vr666
	br i1 %vr664, label %.Lt_0418, label %.Lt_0430
.Lt_0430:

	; label .Lt_0417
	br label %.Lt_0417
.Lt_0417:

	; deref THIS
	%vr668 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr668+134227192 := 32
	%vr669 = ptrtoint %MEMORY_T* %vr668 to i64
	%vr670 = add i64 %vr669, 134227192
	%vr671 = inttoptr i64 %vr670 to double*
	store double 0x4040000000000000, double* %vr671

	; deref THIS
	%vr673 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr673+134227224 := 32
	%vr674 = ptrtoint %MEMORY_T* %vr673 to i64
	%vr675 = add i64 %vr674, 134227224
	%vr676 = inttoptr i64 %vr675 to double*
	store double 0x4040000000000000, double* %vr676

	; label .Lt_0411
	br label %.Lt_0411
.Lt_0411:

	; label .Lt_040D
	br label %.Lt_040D
.Lt_040D:

	; deref THIS
	%vr678 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr678+134228392 := 17
	%vr679 = ptrtoint %MEMORY_T* %vr678 to i64
	%vr680 = add i64 %vr679, 134228392
	%vr681 = inttoptr i64 %vr680 to double*
	store double 0x4031000000000000, double* %vr681

	; deref THIS
	%vr683 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr683+134244040 := 23
	%vr684 = ptrtoint %MEMORY_T* %vr683 to i64
	%vr685 = add i64 %vr684, 134244040
	%vr686 = inttoptr i64 %vr685 to double*
	store double 0x4037000000000000, double* %vr686

	; deref THIS
	%vr688 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr688+134244048 := 23
	%vr689 = ptrtoint %MEMORY_T* %vr688 to i64
	%vr690 = add i64 %vr689, 134244048
	%vr691 = inttoptr i64 %vr690 to double*
	store double 0x4037000000000000, double* %vr691

	; addrof MEM
	%vr693 = bitcast %FBSTRING* %MEM.93 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr693
	call void @fb_StrDelete( %FBSTRING* %vr693 )

	; label .Lt_03CD
	br label %.Lt_03CD
.Lt_03CD:
	ret void
}

define void @_ZN8MEMORY_TD1Ev( %MEMORY_T* %THIS.104$ ) nounwind
{

	; paramvar THIS
	%THIS.104 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.104$, %MEMORY_T** %THIS.104

	; label .Lt_0431
	br label %.Lt_0431
.Lt_0431:

	; label .Lt_0432
	br label %.Lt_0432
.Lt_0432:
	ret void
}

define i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %THIS.105$, i64 %ADR.106$ ) nounwind
{

	; paramvar THIS
	%THIS.105 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.105$, %MEMORY_T** %THIS.105

	; paramvar ADR
	%ADR.106 = alloca i64
	store i64 %ADR.106$, i64* %ADR.106

	; localvar fb$result
	%fb$result.107 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.107 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0433
	br label %.Lt_0433
.Lt_0433:

	; branchbop ADR < 57344
	%vr4 = load i64, i64* %ADR.106
	%vr3 = icmp slt i64 %vr4, 57344
	br i1 %vr3, label %.Lt_0436, label %.Lt_0441
.Lt_0441:

	; branchbop ADR > 65535
	%vr8 = load i64, i64* %ADR.106
	%vr7 = icmp sgt i64 %vr8, 65535
	br i1 %vr7, label %.Lt_0436, label %.Lt_0442
.Lt_0442:

	; label .Lt_0437
	br label %.Lt_0437
.Lt_0437:

	; bop ADR + -57344
	%vr12 = load i64, i64* %ADR.106
	%vr11 = add i64 %vr12, -57344
	%vr14 = bitcast i64 %vr11 to i64

	; bop vr14 SHL 3
	%vr15 = shl i64 %vr14, 3

	; bop THIS + vr15
	%vr17 = load %MEMORY_T*, %MEMORY_T** %THIS.105
	%vr18 = inttoptr i64 %vr15 to %MEMORY_T*
	%vr16 = add %MEMORY_T* %vr17, %vr18

	; conv vr16+134217728 => vr19
	%vr21 = ptrtoint %MEMORY_T* %vr16 to i64
	%vr22 = add i64 %vr21, 134217728
	%vr23 = inttoptr i64 %vr22 to double*
	%vr24 = load double, double* %vr23
	%vr20 = call double @llvm.nearbyint.f64(double %vr24)
	%vr19 = fptoui double %vr20 to i64

	; store fb$result := vr19
	store i64 %vr19, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_0443:

	; goto .Lt_0435
	br label %.Lt_0435
.Lt_0444:

	; label .Lt_0436
	br label %.Lt_0436
.Lt_0436:

	; branchbop ADR < 40960
	%vr27 = load i64, i64* %ADR.106
	%vr26 = icmp slt i64 %vr27, 40960
	br i1 %vr26, label %.Lt_0438, label %.Lt_0445
.Lt_0445:

	; branchbop ADR > 49151
	%vr31 = load i64, i64* %ADR.106
	%vr30 = icmp sgt i64 %vr31, 49151
	br i1 %vr30, label %.Lt_0438, label %.Lt_0446
.Lt_0446:

	; label .Lt_0439
	br label %.Lt_0439
.Lt_0439:

	; bop ADR + -40960
	%vr35 = load i64, i64* %ADR.106
	%vr34 = add i64 %vr35, -40960
	%vr37 = bitcast i64 %vr34 to i64

	; bop vr37 SHL 3
	%vr38 = shl i64 %vr37, 3

	; bop THIS + vr38
	%vr40 = load %MEMORY_T*, %MEMORY_T** %THIS.105
	%vr41 = inttoptr i64 %vr38 to %MEMORY_T*
	%vr39 = add %MEMORY_T* %vr40, %vr41

	; conv vr39+134348800 => vr42
	%vr44 = ptrtoint %MEMORY_T* %vr39 to i64
	%vr45 = add i64 %vr44, 134348800
	%vr46 = inttoptr i64 %vr45 to double*
	%vr47 = load double, double* %vr46
	%vr43 = call double @llvm.nearbyint.f64(double %vr47)
	%vr42 = fptoui double %vr43 to i64

	; store fb$result := vr42
	store i64 %vr42, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_0447:

	; goto .Lt_0435
	br label %.Lt_0435
.Lt_0448:

	; label .Lt_0438
	br label %.Lt_0438
.Lt_0438:

	; branchbop ADR < 55296
	%vr50 = load i64, i64* %ADR.106
	%vr49 = icmp slt i64 %vr50, 55296
	br i1 %vr49, label %.Lt_043A, label %.Lt_0449
.Lt_0449:

	; branchbop ADR > 56319
	%vr54 = load i64, i64* %ADR.106
	%vr53 = icmp sgt i64 %vr54, 56319
	br i1 %vr53, label %.Lt_043A, label %.Lt_044A
.Lt_044A:

	; label .Lt_043B
	br label %.Lt_043B
.Lt_043B:

	; bop ADR + -55296
	%vr58 = load i64, i64* %ADR.106
	%vr57 = add i64 %vr58, -55296
	%vr60 = bitcast i64 %vr57 to i64

	; bop vr60 SHL 3
	%vr61 = shl i64 %vr60, 3

	; bop THIS + vr61
	%vr63 = load %MEMORY_T*, %MEMORY_T** %THIS.105
	%vr64 = inttoptr i64 %vr61 to %MEMORY_T*
	%vr62 = add %MEMORY_T* %vr63, %vr64

	; conv vr62+134479872 => vr65
	%vr67 = ptrtoint %MEMORY_T* %vr62 to i64
	%vr68 = add i64 %vr67, 134479872
	%vr69 = inttoptr i64 %vr68 to double*
	%vr70 = load double, double* %vr69
	%vr66 = call double @llvm.nearbyint.f64(double %vr70)
	%vr65 = fptoui double %vr66 to i64

	; store fb$result := vr65
	store i64 %vr65, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_044B:

	; goto .Lt_0435
	br label %.Lt_0435
.Lt_044C:

	; label .Lt_043A
	br label %.Lt_043A
.Lt_043A:

	; branchbop ADR < 53248
	%vr73 = load i64, i64* %ADR.106
	%vr72 = icmp slt i64 %vr73, 53248
	br i1 %vr72, label %.Lt_043C, label %.Lt_044D
.Lt_044D:

	; branchbop ADR > 54271
	%vr77 = load i64, i64* %ADR.106
	%vr76 = icmp sgt i64 %vr77, 54271
	br i1 %vr76, label %.Lt_043C, label %.Lt_044E
.Lt_044E:

	; label .Lt_043D
	br label %.Lt_043D
.Lt_043D:

	; localvar REG
	%REG.108 = alloca i64

	; bop ADR AND 63
	%vr81 = load i64, i64* %ADR.106
	%vr80 = and i64 %vr81, 63
	%vr83 = bitcast i64 %vr80 to i64

	; store REG := vr83
	store i64 %vr83, i64* %REG.108

	; branchbop REG <> 18
	%vr85 = load i64, i64* %REG.108
	%vr84 = icmp ne i64 %vr85, 18
	br i1 %vr84, label %.Lt_043F, label %.Lt_044F
.Lt_044F:

	; store fb$result := 0
	store i64 0, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_0450:

	; goto .Lt_043E
	br label %.Lt_043E
.Lt_0451:

	; label .Lt_043F
	br label %.Lt_043F
.Lt_043F:

	; store fb$result := 255
	store i64 255, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_0452:

	; label .Lt_043E
	br label %.Lt_043E
.Lt_043E:

	; goto .Lt_0435
	br label %.Lt_0435
.Lt_0453:

	; label .Lt_043C
	br label %.Lt_043C
.Lt_043C:
	%vr87 = load i64, i64* %ADR.106
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 SHL 3
	%vr88 = shl i64 %vr86, 3

	; bop THIS + vr88
	%vr90 = load %MEMORY_T*, %MEMORY_T** %THIS.105
	%vr91 = inttoptr i64 %vr88 to %MEMORY_T*
	%vr89 = add %MEMORY_T* %vr90, %vr91

	; conv vr89 => vr92
	%vr94 = ptrtoint %MEMORY_T* %vr89 to i64
	%vr95 = inttoptr i64 %vr94 to double*
	%vr96 = load double, double* %vr95
	%vr93 = call double @llvm.nearbyint.f64(double %vr96)
	%vr92 = fptoui double %vr93 to i64

	; store fb$result := vr92
	store i64 %vr92, i64* %fb$result.107

	; goto .Lt_0434
	br label %.Lt_0434
.Lt_0454:

	; label .Lt_0440
	br label %.Lt_0440
.Lt_0440:

	; label .Lt_0435
	br label %.Lt_0435
.Lt_0435:

	; label .Lt_0434
	br label %.Lt_0434
.Lt_0434:

	; loadres fb$result
	%vr98 = load i64, i64* %fb$result.107
	ret i64 %vr98
}

define void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %THIS.109$, i64 %ADR.110$, i64 %V.111$ ) nounwind
{

	; paramvar THIS
	%THIS.109 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.109$, %MEMORY_T** %THIS.109

	; paramvar ADR
	%ADR.110 = alloca i64
	store i64 %ADR.110$, i64* %ADR.110

	; paramvar V
	%V.111 = alloca i64
	store i64 %V.111$, i64* %V.111

	; label .Lt_0455
	br label %.Lt_0455
.Lt_0455:

	; conv V => vr0
	%vr1 = load i64, i64* %V.111
	%vr0 = uitofp i64 %vr1 to double
	%vr3 = load i64, i64* %ADR.110
	%vr2 = bitcast i64 %vr3 to i64

	; bop vr2 SHL 3
	%vr4 = shl i64 %vr2, 3

	; bop THIS + vr4
	%vr6 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr7 = inttoptr i64 %vr4 to %MEMORY_T*
	%vr5 = add %MEMORY_T* %vr6, %vr7

	; store vr5 := vr0
	%vr8 = ptrtoint %MEMORY_T* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to double*
	store double %vr0, double* %vr9

	; bop ADR >= 55296
	%vr12 = load i64, i64* %ADR.110
	%vr13 = bitcast i64 %vr12 to i64
	%vr14 = bitcast i64 55296 to i64
	%vr11 = icmp sge i64 %vr13, %vr14
	%vr15 = sext i1 %vr11 to i64

	; bop ADR <= 56319
	%vr18 = load i64, i64* %ADR.110
	%vr19 = bitcast i64 %vr18 to i64
	%vr20 = bitcast i64 56319 to i64
	%vr17 = icmp sle i64 %vr19, %vr20
	%vr21 = sext i1 %vr17 to i64

	; bop vr15 AND vr21
	%vr22 = and i64 %vr15, %vr21

	; branchbop vr22 == 0
	%vr23 = icmp eq i64 %vr22, 0
	br i1 %vr23, label %.Lt_0458, label %.Lt_0F43
.Lt_0F43:

	; bop ADR + -55296
	%vr26 = load i64, i64* %ADR.110
	%vr25 = add i64 %vr26, -55296

	; store ADR := vr25
	store i64 %vr25, i64* %ADR.110

	; conv V => vr30
	%vr31 = load i64, i64* %V.111
	%vr30 = uitofp i64 %vr31 to double
	%vr33 = load i64, i64* %ADR.110
	%vr32 = bitcast i64 %vr33 to i64

	; bop vr32 SHL 3
	%vr34 = shl i64 %vr32, 3

	; bop THIS + vr34
	%vr36 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr37 = inttoptr i64 %vr34 to %MEMORY_T*
	%vr35 = add %MEMORY_T* %vr36, %vr37

	; store vr35+134610944 := vr30
	%vr38 = ptrtoint %MEMORY_T* %vr35 to i64
	%vr39 = add i64 %vr38, 134610944
	%vr40 = inttoptr i64 %vr39 to double*
	store double %vr30, double* %vr40

	; conv ADR => vr42
	%vr43 = load i64, i64* %ADR.110
	%vr42 = uitofp i64 %vr43 to double

	; bop SYS_OFFSET + 299
	%vr45 = load double, double* @SYS_OFFSET
	%vr44 = fadd double %vr45, 0x4072B00000000000

	; conv vr44 => vr46
	%vr47 = call double @llvm.nearbyint.f64(double %vr44)
	%vr46 = fptosi double %vr47 to i64

	; bop vr46 SHL 3
	%vr48 = shl i64 %vr46, 3

	; bop THIS + vr48
	%vr50 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr51 = inttoptr i64 %vr48 to %MEMORY_T*
	%vr49 = add %MEMORY_T* %vr50, %vr51

	; bop vr42 + vr49
	%vr53 = ptrtoint %MEMORY_T* %vr49 to i64
	%vr54 = inttoptr i64 %vr53 to double*
	%vr55 = load double, double* %vr54
	%vr52 = fadd double %vr42, %vr55

	; conv vr52 => vr56
	%vr57 = call double @llvm.nearbyint.f64(double %vr52)
	%vr56 = fptoui double %vr57 to i64

	; store ADR := vr56
	store i64 %vr56, i64* %ADR.110
	%vr59 = load i64, i64* %ADR.110
	%vr58 = bitcast i64 %vr59 to i64

	; bop vr58 SHL 3
	%vr60 = shl i64 %vr58, 3

	; bop THIS + vr60
	%vr62 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr63 = inttoptr i64 %vr60 to %MEMORY_T*
	%vr61 = add %MEMORY_T* %vr62, %vr63

	; conv vr61 => vr64
	%vr66 = ptrtoint %MEMORY_T* %vr61 to i64
	%vr67 = inttoptr i64 %vr66 to double*
	%vr68 = load double, double* %vr67
	%vr65 = call double @llvm.nearbyint.f64(double %vr68)
	%vr64 = fptoui double %vr65 to i64

	; store V := vr64
	store i64 %vr64, i64* %V.111

	; label .Lt_0458
	br label %.Lt_0458
.Lt_0458:

	; label .Lt_0457
	br label %.Lt_0457
.Lt_0457:

	; branchbop ADR <> 646
	%vr71 = load i64, i64* %ADR.110
	%vr70 = icmp ne i64 %vr71, 646
	br i1 %vr70, label %.Lt_045A, label %.Lt_0F44
.Lt_0F44:

	; branchbop V <> 0
	%vr75 = load i64, i64* %V.111
	%vr74 = icmp ne i64 %vr75, 0
	br i1 %vr74, label %.Lt_045C, label %.Lt_0F45
.Lt_0F45:

	; label .Lt_045D
	br label %.Lt_045D
.Lt_045D:

	; bop SYS_OFFSET + 2
	%vr78 = load double, double* @SYS_OFFSET
	%vr77 = fadd double %vr78, 0x4000000000000000

	; conv vr77 => vr79
	%vr80 = call double @llvm.nearbyint.f64(double %vr77)
	%vr79 = fptoui double %vr80 to i64

	; call POKE64()
	; arg THIS
	%vr81 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr79
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr81, i64 %vr79, i64 0 )

	; bop SYS_OFFSET + 3
	%vr83 = load double, double* @SYS_OFFSET
	%vr82 = fadd double %vr83, 0x4008000000000000

	; conv vr82 => vr84
	%vr85 = call double @llvm.nearbyint.f64(double %vr82)
	%vr84 = fptoui double %vr85 to i64

	; call POKE64()
	; arg THIS
	%vr86 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr84
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr86, i64 %vr84, i64 0 )

	; bop SYS_OFFSET + 4
	%vr88 = load double, double* @SYS_OFFSET
	%vr87 = fadd double %vr88, 0x4010000000000000

	; conv vr87 => vr89
	%vr90 = call double @llvm.nearbyint.f64(double %vr87)
	%vr89 = fptoui double %vr90 to i64

	; call POKE64()
	; arg THIS
	%vr91 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr89
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr91, i64 %vr89, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F46:

	; label .Lt_045C
	br label %.Lt_045C
.Lt_045C:

	; branchbop V <> 1
	%vr94 = load i64, i64* %V.111
	%vr93 = icmp ne i64 %vr94, 1
	br i1 %vr93, label %.Lt_045E, label %.Lt_0F47
.Lt_0F47:

	; label .Lt_045F
	br label %.Lt_045F
.Lt_045F:

	; bop SYS_OFFSET + 2
	%vr97 = load double, double* @SYS_OFFSET
	%vr96 = fadd double %vr97, 0x4000000000000000

	; conv vr96 => vr98
	%vr99 = call double @llvm.nearbyint.f64(double %vr96)
	%vr98 = fptoui double %vr99 to i64

	; call POKE64()
	; arg THIS
	%vr100 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr98
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr100, i64 %vr98, i64 0 )

	; bop SYS_OFFSET + 3
	%vr102 = load double, double* @SYS_OFFSET
	%vr101 = fadd double %vr102, 0x4008000000000000

	; conv vr101 => vr103
	%vr104 = call double @llvm.nearbyint.f64(double %vr101)
	%vr103 = fptoui double %vr104 to i64

	; call POKE64()
	; arg THIS
	%vr105 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr103
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr105, i64 %vr103, i64 0 )

	; bop SYS_OFFSET + 4
	%vr107 = load double, double* @SYS_OFFSET
	%vr106 = fadd double %vr107, 0x4010000000000000

	; conv vr106 => vr108
	%vr109 = call double @llvm.nearbyint.f64(double %vr106)
	%vr108 = fptoui double %vr109 to i64

	; call POKE64()
	; arg THIS
	%vr110 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr108
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr110, i64 %vr108, i64 170 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F48:

	; label .Lt_045E
	br label %.Lt_045E
.Lt_045E:

	; branchbop V <> 2
	%vr113 = load i64, i64* %V.111
	%vr112 = icmp ne i64 %vr113, 2
	br i1 %vr112, label %.Lt_0460, label %.Lt_0F49
.Lt_0F49:

	; label .Lt_0461
	br label %.Lt_0461
.Lt_0461:

	; bop SYS_OFFSET + 2
	%vr116 = load double, double* @SYS_OFFSET
	%vr115 = fadd double %vr116, 0x4000000000000000

	; conv vr115 => vr117
	%vr118 = call double @llvm.nearbyint.f64(double %vr115)
	%vr117 = fptoui double %vr118 to i64

	; call POKE64()
	; arg THIS
	%vr119 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr117
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr119, i64 %vr117, i64 0 )

	; bop SYS_OFFSET + 3
	%vr121 = load double, double* @SYS_OFFSET
	%vr120 = fadd double %vr121, 0x4008000000000000

	; conv vr120 => vr122
	%vr123 = call double @llvm.nearbyint.f64(double %vr120)
	%vr122 = fptoui double %vr123 to i64

	; call POKE64()
	; arg THIS
	%vr124 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr122
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr124, i64 %vr122, i64 170 )

	; bop SYS_OFFSET + 4
	%vr126 = load double, double* @SYS_OFFSET
	%vr125 = fadd double %vr126, 0x4010000000000000

	; conv vr125 => vr127
	%vr128 = call double @llvm.nearbyint.f64(double %vr125)
	%vr127 = fptoui double %vr128 to i64

	; call POKE64()
	; arg THIS
	%vr129 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr127
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr129, i64 %vr127, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F4A:

	; label .Lt_0460
	br label %.Lt_0460
.Lt_0460:

	; branchbop V <> 3
	%vr132 = load i64, i64* %V.111
	%vr131 = icmp ne i64 %vr132, 3
	br i1 %vr131, label %.Lt_0462, label %.Lt_0F4B
.Lt_0F4B:

	; label .Lt_0463
	br label %.Lt_0463
.Lt_0463:

	; bop SYS_OFFSET + 2
	%vr135 = load double, double* @SYS_OFFSET
	%vr134 = fadd double %vr135, 0x4000000000000000

	; conv vr134 => vr136
	%vr137 = call double @llvm.nearbyint.f64(double %vr134)
	%vr136 = fptoui double %vr137 to i64

	; call POKE64()
	; arg THIS
	%vr138 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr136
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr138, i64 %vr136, i64 0 )

	; bop SYS_OFFSET + 3
	%vr140 = load double, double* @SYS_OFFSET
	%vr139 = fadd double %vr140, 0x4008000000000000

	; conv vr139 => vr141
	%vr142 = call double @llvm.nearbyint.f64(double %vr139)
	%vr141 = fptoui double %vr142 to i64

	; call POKE64()
	; arg THIS
	%vr143 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr141
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr143, i64 %vr141, i64 170 )

	; bop SYS_OFFSET + 4
	%vr145 = load double, double* @SYS_OFFSET
	%vr144 = fadd double %vr145, 0x4010000000000000

	; conv vr144 => vr146
	%vr147 = call double @llvm.nearbyint.f64(double %vr144)
	%vr146 = fptoui double %vr147 to i64

	; call POKE64()
	; arg THIS
	%vr148 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr146
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr148, i64 %vr146, i64 170 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F4C:

	; label .Lt_0462
	br label %.Lt_0462
.Lt_0462:

	; branchbop V <> 4
	%vr151 = load i64, i64* %V.111
	%vr150 = icmp ne i64 %vr151, 4
	br i1 %vr150, label %.Lt_0464, label %.Lt_0F4D
.Lt_0F4D:

	; label .Lt_0465
	br label %.Lt_0465
.Lt_0465:

	; bop SYS_OFFSET + 2
	%vr154 = load double, double* @SYS_OFFSET
	%vr153 = fadd double %vr154, 0x4000000000000000

	; conv vr153 => vr155
	%vr156 = call double @llvm.nearbyint.f64(double %vr153)
	%vr155 = fptoui double %vr156 to i64

	; call POKE64()
	; arg THIS
	%vr157 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr155
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr157, i64 %vr155, i64 170 )

	; bop SYS_OFFSET + 3
	%vr159 = load double, double* @SYS_OFFSET
	%vr158 = fadd double %vr159, 0x4008000000000000

	; conv vr158 => vr160
	%vr161 = call double @llvm.nearbyint.f64(double %vr158)
	%vr160 = fptoui double %vr161 to i64

	; call POKE64()
	; arg THIS
	%vr162 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr160
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr162, i64 %vr160, i64 0 )

	; bop SYS_OFFSET + 4
	%vr164 = load double, double* @SYS_OFFSET
	%vr163 = fadd double %vr164, 0x4010000000000000

	; conv vr163 => vr165
	%vr166 = call double @llvm.nearbyint.f64(double %vr163)
	%vr165 = fptoui double %vr166 to i64

	; call POKE64()
	; arg THIS
	%vr167 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr165
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr167, i64 %vr165, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F4E:

	; label .Lt_0464
	br label %.Lt_0464
.Lt_0464:

	; branchbop V <> 5
	%vr170 = load i64, i64* %V.111
	%vr169 = icmp ne i64 %vr170, 5
	br i1 %vr169, label %.Lt_0466, label %.Lt_0F4F
.Lt_0F4F:

	; label .Lt_0467
	br label %.Lt_0467
.Lt_0467:

	; bop SYS_OFFSET + 2
	%vr173 = load double, double* @SYS_OFFSET
	%vr172 = fadd double %vr173, 0x4000000000000000

	; conv vr172 => vr174
	%vr175 = call double @llvm.nearbyint.f64(double %vr172)
	%vr174 = fptoui double %vr175 to i64

	; call POKE64()
	; arg THIS
	%vr176 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr174
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr176, i64 %vr174, i64 170 )

	; bop SYS_OFFSET + 3
	%vr178 = load double, double* @SYS_OFFSET
	%vr177 = fadd double %vr178, 0x4008000000000000

	; conv vr177 => vr179
	%vr180 = call double @llvm.nearbyint.f64(double %vr177)
	%vr179 = fptoui double %vr180 to i64

	; call POKE64()
	; arg THIS
	%vr181 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr179
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr181, i64 %vr179, i64 0 )

	; bop SYS_OFFSET + 4
	%vr183 = load double, double* @SYS_OFFSET
	%vr182 = fadd double %vr183, 0x4010000000000000

	; conv vr182 => vr184
	%vr185 = call double @llvm.nearbyint.f64(double %vr182)
	%vr184 = fptoui double %vr185 to i64

	; call POKE64()
	; arg THIS
	%vr186 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr184
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr186, i64 %vr184, i64 170 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F50:

	; label .Lt_0466
	br label %.Lt_0466
.Lt_0466:

	; branchbop V <> 6
	%vr189 = load i64, i64* %V.111
	%vr188 = icmp ne i64 %vr189, 6
	br i1 %vr188, label %.Lt_0468, label %.Lt_0F51
.Lt_0F51:

	; label .Lt_0469
	br label %.Lt_0469
.Lt_0469:

	; bop SYS_OFFSET + 2
	%vr192 = load double, double* @SYS_OFFSET
	%vr191 = fadd double %vr192, 0x4000000000000000

	; conv vr191 => vr193
	%vr194 = call double @llvm.nearbyint.f64(double %vr191)
	%vr193 = fptoui double %vr194 to i64

	; call POKE64()
	; arg THIS
	%vr195 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr193
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr195, i64 %vr193, i64 170 )

	; bop SYS_OFFSET + 3
	%vr197 = load double, double* @SYS_OFFSET
	%vr196 = fadd double %vr197, 0x4008000000000000

	; conv vr196 => vr198
	%vr199 = call double @llvm.nearbyint.f64(double %vr196)
	%vr198 = fptoui double %vr199 to i64

	; call POKE64()
	; arg THIS
	%vr200 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr198
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr200, i64 %vr198, i64 85 )

	; bop SYS_OFFSET + 4
	%vr202 = load double, double* @SYS_OFFSET
	%vr201 = fadd double %vr202, 0x4010000000000000

	; conv vr201 => vr203
	%vr204 = call double @llvm.nearbyint.f64(double %vr201)
	%vr203 = fptoui double %vr204 to i64

	; call POKE64()
	; arg THIS
	%vr205 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr203
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr205, i64 %vr203, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F52:

	; label .Lt_0468
	br label %.Lt_0468
.Lt_0468:

	; branchbop V <> 7
	%vr208 = load i64, i64* %V.111
	%vr207 = icmp ne i64 %vr208, 7
	br i1 %vr207, label %.Lt_046A, label %.Lt_0F53
.Lt_0F53:

	; label .Lt_046B
	br label %.Lt_046B
.Lt_046B:

	; bop SYS_OFFSET + 2
	%vr211 = load double, double* @SYS_OFFSET
	%vr210 = fadd double %vr211, 0x4000000000000000

	; conv vr210 => vr212
	%vr213 = call double @llvm.nearbyint.f64(double %vr210)
	%vr212 = fptoui double %vr213 to i64

	; call POKE64()
	; arg THIS
	%vr214 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr212
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr214, i64 %vr212, i64 170 )

	; bop SYS_OFFSET + 3
	%vr216 = load double, double* @SYS_OFFSET
	%vr215 = fadd double %vr216, 0x4008000000000000

	; conv vr215 => vr217
	%vr218 = call double @llvm.nearbyint.f64(double %vr215)
	%vr217 = fptoui double %vr218 to i64

	; call POKE64()
	; arg THIS
	%vr219 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr217
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr219, i64 %vr217, i64 170 )

	; bop SYS_OFFSET + 4
	%vr221 = load double, double* @SYS_OFFSET
	%vr220 = fadd double %vr221, 0x4010000000000000

	; conv vr220 => vr222
	%vr223 = call double @llvm.nearbyint.f64(double %vr220)
	%vr222 = fptoui double %vr223 to i64

	; call POKE64()
	; arg THIS
	%vr224 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr222
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr224, i64 %vr222, i64 170 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F54:

	; label .Lt_046A
	br label %.Lt_046A
.Lt_046A:

	; branchbop V <> 8
	%vr227 = load i64, i64* %V.111
	%vr226 = icmp ne i64 %vr227, 8
	br i1 %vr226, label %.Lt_046C, label %.Lt_0F55
.Lt_0F55:

	; label .Lt_046D
	br label %.Lt_046D
.Lt_046D:

	; bop SYS_OFFSET + 2
	%vr230 = load double, double* @SYS_OFFSET
	%vr229 = fadd double %vr230, 0x4000000000000000

	; conv vr229 => vr231
	%vr232 = call double @llvm.nearbyint.f64(double %vr229)
	%vr231 = fptoui double %vr232 to i64

	; call POKE64()
	; arg THIS
	%vr233 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr231
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr233, i64 %vr231, i64 85 )

	; bop SYS_OFFSET + 3
	%vr235 = load double, double* @SYS_OFFSET
	%vr234 = fadd double %vr235, 0x4008000000000000

	; conv vr234 => vr236
	%vr237 = call double @llvm.nearbyint.f64(double %vr234)
	%vr236 = fptoui double %vr237 to i64

	; call POKE64()
	; arg THIS
	%vr238 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr236
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr238, i64 %vr236, i64 85 )

	; bop SYS_OFFSET + 4
	%vr240 = load double, double* @SYS_OFFSET
	%vr239 = fadd double %vr240, 0x4010000000000000

	; conv vr239 => vr241
	%vr242 = call double @llvm.nearbyint.f64(double %vr239)
	%vr241 = fptoui double %vr242 to i64

	; call POKE64()
	; arg THIS
	%vr243 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr241
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr243, i64 %vr241, i64 85 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F56:

	; label .Lt_046C
	br label %.Lt_046C
.Lt_046C:

	; branchbop V <> 9
	%vr246 = load i64, i64* %V.111
	%vr245 = icmp ne i64 %vr246, 9
	br i1 %vr245, label %.Lt_046E, label %.Lt_0F57
.Lt_0F57:

	; label .Lt_046F
	br label %.Lt_046F
.Lt_046F:

	; bop SYS_OFFSET + 2
	%vr249 = load double, double* @SYS_OFFSET
	%vr248 = fadd double %vr249, 0x4000000000000000

	; conv vr248 => vr250
	%vr251 = call double @llvm.nearbyint.f64(double %vr248)
	%vr250 = fptoui double %vr251 to i64

	; call POKE64()
	; arg THIS
	%vr252 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr250
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr252, i64 %vr250, i64 85 )

	; bop SYS_OFFSET + 3
	%vr254 = load double, double* @SYS_OFFSET
	%vr253 = fadd double %vr254, 0x4008000000000000

	; conv vr253 => vr255
	%vr256 = call double @llvm.nearbyint.f64(double %vr253)
	%vr255 = fptoui double %vr256 to i64

	; call POKE64()
	; arg THIS
	%vr257 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr255
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr257, i64 %vr255, i64 85 )

	; bop SYS_OFFSET + 4
	%vr259 = load double, double* @SYS_OFFSET
	%vr258 = fadd double %vr259, 0x4010000000000000

	; conv vr258 => vr260
	%vr261 = call double @llvm.nearbyint.f64(double %vr258)
	%vr260 = fptoui double %vr261 to i64

	; call POKE64()
	; arg THIS
	%vr262 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr260
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr262, i64 %vr260, i64 255 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F58:

	; label .Lt_046E
	br label %.Lt_046E
.Lt_046E:

	; branchbop V <> 10
	%vr265 = load i64, i64* %V.111
	%vr264 = icmp ne i64 %vr265, 10
	br i1 %vr264, label %.Lt_0470, label %.Lt_0F59
.Lt_0F59:

	; label .Lt_0471
	br label %.Lt_0471
.Lt_0471:

	; bop SYS_OFFSET + 2
	%vr268 = load double, double* @SYS_OFFSET
	%vr267 = fadd double %vr268, 0x4000000000000000

	; conv vr267 => vr269
	%vr270 = call double @llvm.nearbyint.f64(double %vr267)
	%vr269 = fptoui double %vr270 to i64

	; call POKE64()
	; arg THIS
	%vr271 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr269
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr271, i64 %vr269, i64 85 )

	; bop SYS_OFFSET + 3
	%vr273 = load double, double* @SYS_OFFSET
	%vr272 = fadd double %vr273, 0x4008000000000000

	; conv vr272 => vr274
	%vr275 = call double @llvm.nearbyint.f64(double %vr272)
	%vr274 = fptoui double %vr275 to i64

	; call POKE64()
	; arg THIS
	%vr276 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr274
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr276, i64 %vr274, i64 255 )

	; bop SYS_OFFSET + 4
	%vr278 = load double, double* @SYS_OFFSET
	%vr277 = fadd double %vr278, 0x4010000000000000

	; conv vr277 => vr279
	%vr280 = call double @llvm.nearbyint.f64(double %vr277)
	%vr279 = fptoui double %vr280 to i64

	; call POKE64()
	; arg THIS
	%vr281 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr279
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr281, i64 %vr279, i64 85 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F5A:

	; label .Lt_0470
	br label %.Lt_0470
.Lt_0470:

	; branchbop V <> 11
	%vr284 = load i64, i64* %V.111
	%vr283 = icmp ne i64 %vr284, 11
	br i1 %vr283, label %.Lt_0472, label %.Lt_0F5B
.Lt_0F5B:

	; label .Lt_0473
	br label %.Lt_0473
.Lt_0473:

	; bop SYS_OFFSET + 2
	%vr287 = load double, double* @SYS_OFFSET
	%vr286 = fadd double %vr287, 0x4000000000000000

	; conv vr286 => vr288
	%vr289 = call double @llvm.nearbyint.f64(double %vr286)
	%vr288 = fptoui double %vr289 to i64

	; call POKE64()
	; arg THIS
	%vr290 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr288
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr290, i64 %vr288, i64 85 )

	; bop SYS_OFFSET + 3
	%vr292 = load double, double* @SYS_OFFSET
	%vr291 = fadd double %vr292, 0x4008000000000000

	; conv vr291 => vr293
	%vr294 = call double @llvm.nearbyint.f64(double %vr291)
	%vr293 = fptoui double %vr294 to i64

	; call POKE64()
	; arg THIS
	%vr295 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr293
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr295, i64 %vr293, i64 255 )

	; bop SYS_OFFSET + 4
	%vr297 = load double, double* @SYS_OFFSET
	%vr296 = fadd double %vr297, 0x4010000000000000

	; conv vr296 => vr298
	%vr299 = call double @llvm.nearbyint.f64(double %vr296)
	%vr298 = fptoui double %vr299 to i64

	; call POKE64()
	; arg THIS
	%vr300 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr298
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr300, i64 %vr298, i64 255 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F5C:

	; label .Lt_0472
	br label %.Lt_0472
.Lt_0472:

	; branchbop V <> 12
	%vr303 = load i64, i64* %V.111
	%vr302 = icmp ne i64 %vr303, 12
	br i1 %vr302, label %.Lt_0474, label %.Lt_0F5D
.Lt_0F5D:

	; label .Lt_0475
	br label %.Lt_0475
.Lt_0475:

	; bop SYS_OFFSET + 2
	%vr306 = load double, double* @SYS_OFFSET
	%vr305 = fadd double %vr306, 0x4000000000000000

	; conv vr305 => vr307
	%vr308 = call double @llvm.nearbyint.f64(double %vr305)
	%vr307 = fptoui double %vr308 to i64

	; call POKE64()
	; arg THIS
	%vr309 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr307
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr309, i64 %vr307, i64 255 )

	; bop SYS_OFFSET + 3
	%vr311 = load double, double* @SYS_OFFSET
	%vr310 = fadd double %vr311, 0x4008000000000000

	; conv vr310 => vr312
	%vr313 = call double @llvm.nearbyint.f64(double %vr310)
	%vr312 = fptoui double %vr313 to i64

	; call POKE64()
	; arg THIS
	%vr314 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr312
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr314, i64 %vr312, i64 85 )

	; bop SYS_OFFSET + 4
	%vr316 = load double, double* @SYS_OFFSET
	%vr315 = fadd double %vr316, 0x4010000000000000

	; conv vr315 => vr317
	%vr318 = call double @llvm.nearbyint.f64(double %vr315)
	%vr317 = fptoui double %vr318 to i64

	; call POKE64()
	; arg THIS
	%vr319 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr317
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr319, i64 %vr317, i64 85 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F5E:

	; label .Lt_0474
	br label %.Lt_0474
.Lt_0474:

	; branchbop V <> 13
	%vr322 = load i64, i64* %V.111
	%vr321 = icmp ne i64 %vr322, 13
	br i1 %vr321, label %.Lt_0476, label %.Lt_0F5F
.Lt_0F5F:

	; label .Lt_0477
	br label %.Lt_0477
.Lt_0477:

	; bop SYS_OFFSET + 2
	%vr325 = load double, double* @SYS_OFFSET
	%vr324 = fadd double %vr325, 0x4000000000000000

	; conv vr324 => vr326
	%vr327 = call double @llvm.nearbyint.f64(double %vr324)
	%vr326 = fptoui double %vr327 to i64

	; call POKE64()
	; arg THIS
	%vr328 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr326
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr328, i64 %vr326, i64 255 )

	; bop SYS_OFFSET + 3
	%vr330 = load double, double* @SYS_OFFSET
	%vr329 = fadd double %vr330, 0x4008000000000000

	; conv vr329 => vr331
	%vr332 = call double @llvm.nearbyint.f64(double %vr329)
	%vr331 = fptoui double %vr332 to i64

	; call POKE64()
	; arg THIS
	%vr333 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr331
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr333, i64 %vr331, i64 85 )

	; bop SYS_OFFSET + 4
	%vr335 = load double, double* @SYS_OFFSET
	%vr334 = fadd double %vr335, 0x4010000000000000

	; conv vr334 => vr336
	%vr337 = call double @llvm.nearbyint.f64(double %vr334)
	%vr336 = fptoui double %vr337 to i64

	; call POKE64()
	; arg THIS
	%vr338 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr336
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr338, i64 %vr336, i64 255 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F60:

	; label .Lt_0476
	br label %.Lt_0476
.Lt_0476:

	; branchbop V <> 14
	%vr341 = load i64, i64* %V.111
	%vr340 = icmp ne i64 %vr341, 14
	br i1 %vr340, label %.Lt_0478, label %.Lt_0F61
.Lt_0F61:

	; label .Lt_0479
	br label %.Lt_0479
.Lt_0479:

	; bop SYS_OFFSET + 2
	%vr344 = load double, double* @SYS_OFFSET
	%vr343 = fadd double %vr344, 0x4000000000000000

	; conv vr343 => vr345
	%vr346 = call double @llvm.nearbyint.f64(double %vr343)
	%vr345 = fptoui double %vr346 to i64

	; call POKE64()
	; arg THIS
	%vr347 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr345
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr347, i64 %vr345, i64 255 )

	; bop SYS_OFFSET + 3
	%vr349 = load double, double* @SYS_OFFSET
	%vr348 = fadd double %vr349, 0x4008000000000000

	; conv vr348 => vr350
	%vr351 = call double @llvm.nearbyint.f64(double %vr348)
	%vr350 = fptoui double %vr351 to i64

	; call POKE64()
	; arg THIS
	%vr352 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr350
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr352, i64 %vr350, i64 255 )

	; bop SYS_OFFSET + 4
	%vr354 = load double, double* @SYS_OFFSET
	%vr353 = fadd double %vr354, 0x4010000000000000

	; conv vr353 => vr355
	%vr356 = call double @llvm.nearbyint.f64(double %vr353)
	%vr355 = fptoui double %vr356 to i64

	; call POKE64()
	; arg THIS
	%vr357 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr355
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr357, i64 %vr355, i64 85 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F62:

	; label .Lt_0478
	br label %.Lt_0478
.Lt_0478:

	; branchbop V <> 15
	%vr360 = load i64, i64* %V.111
	%vr359 = icmp ne i64 %vr360, 15
	br i1 %vr359, label %.Lt_047A, label %.Lt_0F63
.Lt_0F63:

	; label .Lt_047B
	br label %.Lt_047B
.Lt_047B:

	; bop SYS_OFFSET + 2
	%vr363 = load double, double* @SYS_OFFSET
	%vr362 = fadd double %vr363, 0x4000000000000000

	; conv vr362 => vr364
	%vr365 = call double @llvm.nearbyint.f64(double %vr362)
	%vr364 = fptoui double %vr365 to i64

	; call POKE64()
	; arg THIS
	%vr366 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr364
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr366, i64 %vr364, i64 255 )

	; bop SYS_OFFSET + 3
	%vr368 = load double, double* @SYS_OFFSET
	%vr367 = fadd double %vr368, 0x4008000000000000

	; conv vr367 => vr369
	%vr370 = call double @llvm.nearbyint.f64(double %vr367)
	%vr369 = fptoui double %vr370 to i64

	; call POKE64()
	; arg THIS
	%vr371 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr369
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr371, i64 %vr369, i64 255 )

	; bop SYS_OFFSET + 4
	%vr373 = load double, double* @SYS_OFFSET
	%vr372 = fadd double %vr373, 0x4010000000000000

	; conv vr372 => vr374
	%vr375 = call double @llvm.nearbyint.f64(double %vr372)
	%vr374 = fptoui double %vr375 to i64

	; call POKE64()
	; arg THIS
	%vr376 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr374
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr376, i64 %vr374, i64 255 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F64:

	; label .Lt_047A
	br label %.Lt_047A
.Lt_047A:

	; branchbop V <> 16
	%vr379 = load i64, i64* %V.111
	%vr378 = icmp ne i64 %vr379, 16
	br i1 %vr378, label %.Lt_047C, label %.Lt_0F65
.Lt_0F65:

	; label .Lt_047D
	br label %.Lt_047D
.Lt_047D:

	; bop SYS_OFFSET + 2
	%vr382 = load double, double* @SYS_OFFSET
	%vr381 = fadd double %vr382, 0x4000000000000000

	; conv vr381 => vr383
	%vr384 = call double @llvm.nearbyint.f64(double %vr381)
	%vr383 = fptoui double %vr384 to i64

	; call POKE64()
	; arg THIS
	%vr385 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr383
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr385, i64 %vr383, i64 255 )

	; bop SYS_OFFSET + 3
	%vr387 = load double, double* @SYS_OFFSET
	%vr386 = fadd double %vr387, 0x4008000000000000

	; conv vr386 => vr388
	%vr389 = call double @llvm.nearbyint.f64(double %vr386)
	%vr388 = fptoui double %vr389 to i64

	; call POKE64()
	; arg THIS
	%vr390 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr388
	; arg 176
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr390, i64 %vr388, i64 176 )

	; bop SYS_OFFSET + 4
	%vr392 = load double, double* @SYS_OFFSET
	%vr391 = fadd double %vr392, 0x4010000000000000

	; conv vr391 => vr393
	%vr394 = call double @llvm.nearbyint.f64(double %vr391)
	%vr393 = fptoui double %vr394 to i64

	; call POKE64()
	; arg THIS
	%vr395 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr393
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr395, i64 %vr393, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F66:

	; label .Lt_047C
	br label %.Lt_047C
.Lt_047C:

	; branchbop V <> 17
	%vr398 = load i64, i64* %V.111
	%vr397 = icmp ne i64 %vr398, 17
	br i1 %vr397, label %.Lt_047E, label %.Lt_0F67
.Lt_0F67:

	; label .Lt_047F
	br label %.Lt_047F
.Lt_047F:

	; bop SYS_OFFSET + 2
	%vr401 = load double, double* @SYS_OFFSET
	%vr400 = fadd double %vr401, 0x4000000000000000

	; conv vr400 => vr402
	%vr403 = call double @llvm.nearbyint.f64(double %vr400)
	%vr402 = fptoui double %vr403 to i64

	; call POKE64()
	; arg THIS
	%vr404 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr402
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr404, i64 %vr402, i64 255 )

	; bop SYS_OFFSET + 3
	%vr406 = load double, double* @SYS_OFFSET
	%vr405 = fadd double %vr406, 0x4008000000000000

	; conv vr405 => vr407
	%vr408 = call double @llvm.nearbyint.f64(double %vr405)
	%vr407 = fptoui double %vr408 to i64

	; call POKE64()
	; arg THIS
	%vr409 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr407
	; arg 204
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr409, i64 %vr407, i64 204 )

	; bop SYS_OFFSET + 4
	%vr411 = load double, double* @SYS_OFFSET
	%vr410 = fadd double %vr411, 0x4010000000000000

	; conv vr410 => vr412
	%vr413 = call double @llvm.nearbyint.f64(double %vr410)
	%vr412 = fptoui double %vr413 to i64

	; call POKE64()
	; arg THIS
	%vr414 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr412
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr414, i64 %vr412, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F68:

	; label .Lt_047E
	br label %.Lt_047E
.Lt_047E:

	; branchbop V <> 18
	%vr417 = load i64, i64* %V.111
	%vr416 = icmp ne i64 %vr417, 18
	br i1 %vr416, label %.Lt_0480, label %.Lt_0F69
.Lt_0F69:

	; label .Lt_0481
	br label %.Lt_0481
.Lt_0481:

	; bop SYS_OFFSET + 2
	%vr420 = load double, double* @SYS_OFFSET
	%vr419 = fadd double %vr420, 0x4000000000000000

	; conv vr419 => vr421
	%vr422 = call double @llvm.nearbyint.f64(double %vr419)
	%vr421 = fptoui double %vr422 to i64

	; call POKE64()
	; arg THIS
	%vr423 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr421
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr423, i64 %vr421, i64 51 )

	; bop SYS_OFFSET + 3
	%vr425 = load double, double* @SYS_OFFSET
	%vr424 = fadd double %vr425, 0x4008000000000000

	; conv vr424 => vr426
	%vr427 = call double @llvm.nearbyint.f64(double %vr424)
	%vr426 = fptoui double %vr427 to i64

	; call POKE64()
	; arg THIS
	%vr428 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr426
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr428, i64 %vr426, i64 255 )

	; bop SYS_OFFSET + 4
	%vr430 = load double, double* @SYS_OFFSET
	%vr429 = fadd double %vr430, 0x4010000000000000

	; conv vr429 => vr431
	%vr432 = call double @llvm.nearbyint.f64(double %vr429)
	%vr431 = fptoui double %vr432 to i64

	; call POKE64()
	; arg THIS
	%vr433 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr431
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr433, i64 %vr431, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F6A:

	; label .Lt_0480
	br label %.Lt_0480
.Lt_0480:

	; branchbop V <> 19
	%vr436 = load i64, i64* %V.111
	%vr435 = icmp ne i64 %vr436, 19
	br i1 %vr435, label %.Lt_0482, label %.Lt_0F6B
.Lt_0F6B:

	; label .Lt_0483
	br label %.Lt_0483
.Lt_0483:

	; bop SYS_OFFSET + 2
	%vr439 = load double, double* @SYS_OFFSET
	%vr438 = fadd double %vr439, 0x4000000000000000

	; conv vr438 => vr440
	%vr441 = call double @llvm.nearbyint.f64(double %vr438)
	%vr440 = fptoui double %vr441 to i64

	; call POKE64()
	; arg THIS
	%vr442 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr440
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr442, i64 %vr440, i64 51 )

	; bop SYS_OFFSET + 3
	%vr444 = load double, double* @SYS_OFFSET
	%vr443 = fadd double %vr444, 0x4008000000000000

	; conv vr443 => vr445
	%vr446 = call double @llvm.nearbyint.f64(double %vr443)
	%vr445 = fptoui double %vr446 to i64

	; call POKE64()
	; arg THIS
	%vr447 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr445
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr447, i64 %vr445, i64 255 )

	; bop SYS_OFFSET + 4
	%vr449 = load double, double* @SYS_OFFSET
	%vr448 = fadd double %vr449, 0x4010000000000000

	; conv vr448 => vr450
	%vr451 = call double @llvm.nearbyint.f64(double %vr448)
	%vr450 = fptoui double %vr451 to i64

	; call POKE64()
	; arg THIS
	%vr452 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr450
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr452, i64 %vr450, i64 51 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F6C:

	; label .Lt_0482
	br label %.Lt_0482
.Lt_0482:

	; branchbop V <> 20
	%vr455 = load i64, i64* %V.111
	%vr454 = icmp ne i64 %vr455, 20
	br i1 %vr454, label %.Lt_0484, label %.Lt_0F6D
.Lt_0F6D:

	; label .Lt_0485
	br label %.Lt_0485
.Lt_0485:

	; bop SYS_OFFSET + 2
	%vr458 = load double, double* @SYS_OFFSET
	%vr457 = fadd double %vr458, 0x4000000000000000

	; conv vr457 => vr459
	%vr460 = call double @llvm.nearbyint.f64(double %vr457)
	%vr459 = fptoui double %vr460 to i64

	; call POKE64()
	; arg THIS
	%vr461 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr459
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr461, i64 %vr459, i64 0 )

	; bop SYS_OFFSET + 3
	%vr463 = load double, double* @SYS_OFFSET
	%vr462 = fadd double %vr463, 0x4008000000000000

	; conv vr462 => vr464
	%vr465 = call double @llvm.nearbyint.f64(double %vr462)
	%vr464 = fptoui double %vr465 to i64

	; call POKE64()
	; arg THIS
	%vr466 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr464
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr466, i64 %vr464, i64 255 )

	; bop SYS_OFFSET + 4
	%vr468 = load double, double* @SYS_OFFSET
	%vr467 = fadd double %vr468, 0x4010000000000000

	; conv vr467 => vr469
	%vr470 = call double @llvm.nearbyint.f64(double %vr467)
	%vr469 = fptoui double %vr470 to i64

	; call POKE64()
	; arg THIS
	%vr471 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr469
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr471, i64 %vr469, i64 51 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F6E:

	; label .Lt_0484
	br label %.Lt_0484
.Lt_0484:

	; branchbop V <> 21
	%vr474 = load i64, i64* %V.111
	%vr473 = icmp ne i64 %vr474, 21
	br i1 %vr473, label %.Lt_0486, label %.Lt_0F6F
.Lt_0F6F:

	; label .Lt_0487
	br label %.Lt_0487
.Lt_0487:

	; bop SYS_OFFSET + 2
	%vr477 = load double, double* @SYS_OFFSET
	%vr476 = fadd double %vr477, 0x4000000000000000

	; conv vr476 => vr478
	%vr479 = call double @llvm.nearbyint.f64(double %vr476)
	%vr478 = fptoui double %vr479 to i64

	; call POKE64()
	; arg THIS
	%vr480 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr478
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr480, i64 %vr478, i64 102 )

	; bop SYS_OFFSET + 3
	%vr482 = load double, double* @SYS_OFFSET
	%vr481 = fadd double %vr482, 0x4008000000000000

	; conv vr481 => vr483
	%vr484 = call double @llvm.nearbyint.f64(double %vr481)
	%vr483 = fptoui double %vr484 to i64

	; call POKE64()
	; arg THIS
	%vr485 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr483
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr485, i64 %vr483, i64 255 )

	; bop SYS_OFFSET + 4
	%vr487 = load double, double* @SYS_OFFSET
	%vr486 = fadd double %vr487, 0x4010000000000000

	; conv vr486 => vr488
	%vr489 = call double @llvm.nearbyint.f64(double %vr486)
	%vr488 = fptoui double %vr489 to i64

	; call POKE64()
	; arg THIS
	%vr490 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr488
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr490, i64 %vr488, i64 102 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F70:

	; label .Lt_0486
	br label %.Lt_0486
.Lt_0486:

	; branchbop V <> 22
	%vr493 = load i64, i64* %V.111
	%vr492 = icmp ne i64 %vr493, 22
	br i1 %vr492, label %.Lt_0488, label %.Lt_0F71
.Lt_0F71:

	; label .Lt_0489
	br label %.Lt_0489
.Lt_0489:

	; bop SYS_OFFSET + 2
	%vr496 = load double, double* @SYS_OFFSET
	%vr495 = fadd double %vr496, 0x4000000000000000

	; conv vr495 => vr497
	%vr498 = call double @llvm.nearbyint.f64(double %vr495)
	%vr497 = fptoui double %vr498 to i64

	; call POKE64()
	; arg THIS
	%vr499 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr497
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr499, i64 %vr497, i64 0 )

	; bop SYS_OFFSET + 3
	%vr501 = load double, double* @SYS_OFFSET
	%vr500 = fadd double %vr501, 0x4008000000000000

	; conv vr500 => vr502
	%vr503 = call double @llvm.nearbyint.f64(double %vr500)
	%vr502 = fptoui double %vr503 to i64

	; call POKE64()
	; arg THIS
	%vr504 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr502
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr504, i64 %vr502, i64 255 )

	; bop SYS_OFFSET + 4
	%vr506 = load double, double* @SYS_OFFSET
	%vr505 = fadd double %vr506, 0x4010000000000000

	; conv vr505 => vr507
	%vr508 = call double @llvm.nearbyint.f64(double %vr505)
	%vr507 = fptoui double %vr508 to i64

	; call POKE64()
	; arg THIS
	%vr509 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr507
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr509, i64 %vr507, i64 102 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F72:

	; label .Lt_0488
	br label %.Lt_0488
.Lt_0488:

	; branchbop V <> 23
	%vr512 = load i64, i64* %V.111
	%vr511 = icmp ne i64 %vr512, 23
	br i1 %vr511, label %.Lt_048A, label %.Lt_0F73
.Lt_0F73:

	; label .Lt_048B
	br label %.Lt_048B
.Lt_048B:

	; bop SYS_OFFSET + 2
	%vr515 = load double, double* @SYS_OFFSET
	%vr514 = fadd double %vr515, 0x4000000000000000

	; conv vr514 => vr516
	%vr517 = call double @llvm.nearbyint.f64(double %vr514)
	%vr516 = fptoui double %vr517 to i64

	; call POKE64()
	; arg THIS
	%vr518 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr516
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr518, i64 %vr516, i64 40 )

	; bop SYS_OFFSET + 3
	%vr520 = load double, double* @SYS_OFFSET
	%vr519 = fadd double %vr520, 0x4008000000000000

	; conv vr519 => vr521
	%vr522 = call double @llvm.nearbyint.f64(double %vr519)
	%vr521 = fptoui double %vr522 to i64

	; call POKE64()
	; arg THIS
	%vr523 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr521
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr523, i64 %vr521, i64 40 )

	; bop SYS_OFFSET + 4
	%vr525 = load double, double* @SYS_OFFSET
	%vr524 = fadd double %vr525, 0x4010000000000000

	; conv vr524 => vr526
	%vr527 = call double @llvm.nearbyint.f64(double %vr524)
	%vr526 = fptoui double %vr527 to i64

	; call POKE64()
	; arg THIS
	%vr528 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr526
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr528, i64 %vr526, i64 40 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F74:

	; label .Lt_048A
	br label %.Lt_048A
.Lt_048A:

	; branchbop V <> 24
	%vr531 = load i64, i64* %V.111
	%vr530 = icmp ne i64 %vr531, 24
	br i1 %vr530, label %.Lt_048C, label %.Lt_0F75
.Lt_0F75:

	; label .Lt_048D
	br label %.Lt_048D
.Lt_048D:

	; bop SYS_OFFSET + 2
	%vr534 = load double, double* @SYS_OFFSET
	%vr533 = fadd double %vr534, 0x4000000000000000

	; conv vr533 => vr535
	%vr536 = call double @llvm.nearbyint.f64(double %vr533)
	%vr535 = fptoui double %vr536 to i64

	; call POKE64()
	; arg THIS
	%vr537 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr535
	; arg 239
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr537, i64 %vr535, i64 239 )

	; bop SYS_OFFSET + 3
	%vr539 = load double, double* @SYS_OFFSET
	%vr538 = fadd double %vr539, 0x4008000000000000

	; conv vr538 => vr540
	%vr541 = call double @llvm.nearbyint.f64(double %vr538)
	%vr540 = fptoui double %vr541 to i64

	; call POKE64()
	; arg THIS
	%vr542 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr540
	; arg 41
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr542, i64 %vr540, i64 41 )

	; bop SYS_OFFSET + 4
	%vr544 = load double, double* @SYS_OFFSET
	%vr543 = fadd double %vr544, 0x4010000000000000

	; conv vr543 => vr545
	%vr546 = call double @llvm.nearbyint.f64(double %vr543)
	%vr545 = fptoui double %vr546 to i64

	; call POKE64()
	; arg THIS
	%vr547 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr545
	; arg 41
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr547, i64 %vr545, i64 41 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F76:

	; label .Lt_048C
	br label %.Lt_048C
.Lt_048C:

	; branchbop V <> 25
	%vr550 = load i64, i64* %V.111
	%vr549 = icmp ne i64 %vr550, 25
	br i1 %vr549, label %.Lt_048E, label %.Lt_0F77
.Lt_0F77:

	; label .Lt_048F
	br label %.Lt_048F
.Lt_048F:

	; bop SYS_OFFSET + 2
	%vr553 = load double, double* @SYS_OFFSET
	%vr552 = fadd double %vr553, 0x4000000000000000

	; conv vr552 => vr554
	%vr555 = call double @llvm.nearbyint.f64(double %vr552)
	%vr554 = fptoui double %vr555 to i64

	; call POKE64()
	; arg THIS
	%vr556 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr554
	; arg 204
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr556, i64 %vr554, i64 204 )

	; bop SYS_OFFSET + 3
	%vr558 = load double, double* @SYS_OFFSET
	%vr557 = fadd double %vr558, 0x4008000000000000

	; conv vr557 => vr559
	%vr560 = call double @llvm.nearbyint.f64(double %vr557)
	%vr559 = fptoui double %vr560 to i64

	; call POKE64()
	; arg THIS
	%vr561 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr559
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr561, i64 %vr559, i64 0 )

	; bop SYS_OFFSET + 4
	%vr563 = load double, double* @SYS_OFFSET
	%vr562 = fadd double %vr563, 0x4010000000000000

	; conv vr562 => vr564
	%vr565 = call double @llvm.nearbyint.f64(double %vr562)
	%vr564 = fptoui double %vr565 to i64

	; call POKE64()
	; arg THIS
	%vr566 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr564
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr566, i64 %vr564, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F78:

	; label .Lt_048E
	br label %.Lt_048E
.Lt_048E:

	; branchbop V <> 26
	%vr569 = load i64, i64* %V.111
	%vr568 = icmp ne i64 %vr569, 26
	br i1 %vr568, label %.Lt_0490, label %.Lt_0F79
.Lt_0F79:

	; label .Lt_0491
	br label %.Lt_0491
.Lt_0491:

	; bop SYS_OFFSET + 2
	%vr572 = load double, double* @SYS_OFFSET
	%vr571 = fadd double %vr572, 0x4000000000000000

	; conv vr571 => vr573
	%vr574 = call double @llvm.nearbyint.f64(double %vr571)
	%vr573 = fptoui double %vr574 to i64

	; call POKE64()
	; arg THIS
	%vr575 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr573
	; arg 164
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr575, i64 %vr573, i64 164 )

	; bop SYS_OFFSET + 3
	%vr577 = load double, double* @SYS_OFFSET
	%vr576 = fadd double %vr577, 0x4008000000000000

	; conv vr576 => vr578
	%vr579 = call double @llvm.nearbyint.f64(double %vr576)
	%vr578 = fptoui double %vr579 to i64

	; call POKE64()
	; arg THIS
	%vr580 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr578
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr580, i64 %vr578, i64 0 )

	; bop SYS_OFFSET + 4
	%vr582 = load double, double* @SYS_OFFSET
	%vr581 = fadd double %vr582, 0x4010000000000000

	; conv vr581 => vr583
	%vr584 = call double @llvm.nearbyint.f64(double %vr581)
	%vr583 = fptoui double %vr584 to i64

	; call POKE64()
	; arg THIS
	%vr585 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr583
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr585, i64 %vr583, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F7A:

	; label .Lt_0490
	br label %.Lt_0490
.Lt_0490:

	; branchbop V <> 27
	%vr588 = load i64, i64* %V.111
	%vr587 = icmp ne i64 %vr588, 27
	br i1 %vr587, label %.Lt_0492, label %.Lt_0F7B
.Lt_0F7B:

	; label .Lt_0493
	br label %.Lt_0493
.Lt_0493:

	; bop SYS_OFFSET + 2
	%vr591 = load double, double* @SYS_OFFSET
	%vr590 = fadd double %vr591, 0x4000000000000000

	; conv vr590 => vr592
	%vr593 = call double @llvm.nearbyint.f64(double %vr590)
	%vr592 = fptoui double %vr593 to i64

	; call POKE64()
	; arg THIS
	%vr594 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr592
	; arg 252
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr594, i64 %vr592, i64 252 )

	; bop SYS_OFFSET + 3
	%vr596 = load double, double* @SYS_OFFSET
	%vr595 = fadd double %vr596, 0x4008000000000000

	; conv vr595 => vr597
	%vr598 = call double @llvm.nearbyint.f64(double %vr595)
	%vr597 = fptoui double %vr598 to i64

	; call POKE64()
	; arg THIS
	%vr599 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr597
	; arg 175
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr599, i64 %vr597, i64 175 )

	; bop SYS_OFFSET + 4
	%vr601 = load double, double* @SYS_OFFSET
	%vr600 = fadd double %vr601, 0x4010000000000000

	; conv vr600 => vr602
	%vr603 = call double @llvm.nearbyint.f64(double %vr600)
	%vr602 = fptoui double %vr603 to i64

	; call POKE64()
	; arg THIS
	%vr604 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr602
	; arg 62
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr604, i64 %vr602, i64 62 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F7C:

	; label .Lt_0492
	br label %.Lt_0492
.Lt_0492:

	; branchbop V <> 28
	%vr607 = load i64, i64* %V.111
	%vr606 = icmp ne i64 %vr607, 28
	br i1 %vr606, label %.Lt_0494, label %.Lt_0F7D
.Lt_0F7D:

	; label .Lt_0495
	br label %.Lt_0495
.Lt_0495:

	; bop SYS_OFFSET + 2
	%vr610 = load double, double* @SYS_OFFSET
	%vr609 = fadd double %vr610, 0x4000000000000000

	; conv vr609 => vr611
	%vr612 = call double @llvm.nearbyint.f64(double %vr609)
	%vr611 = fptoui double %vr612 to i64

	; call POKE64()
	; arg THIS
	%vr613 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr611
	; arg 245
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr613, i64 %vr611, i64 245 )

	; bop SYS_OFFSET + 3
	%vr615 = load double, double* @SYS_OFFSET
	%vr614 = fadd double %vr615, 0x4008000000000000

	; conv vr614 => vr616
	%vr617 = call double @llvm.nearbyint.f64(double %vr614)
	%vr616 = fptoui double %vr617 to i64

	; call POKE64()
	; arg THIS
	%vr618 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr616
	; arg 121
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr618, i64 %vr616, i64 121 )

	; bop SYS_OFFSET + 4
	%vr620 = load double, double* @SYS_OFFSET
	%vr619 = fadd double %vr620, 0x4010000000000000

	; conv vr619 => vr621
	%vr622 = call double @llvm.nearbyint.f64(double %vr619)
	%vr621 = fptoui double %vr622 to i64

	; call POKE64()
	; arg THIS
	%vr623 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr621
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr623, i64 %vr621, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F7E:

	; label .Lt_0494
	br label %.Lt_0494
.Lt_0494:

	; branchbop V <> 29
	%vr626 = load i64, i64* %V.111
	%vr625 = icmp ne i64 %vr626, 29
	br i1 %vr625, label %.Lt_0496, label %.Lt_0F7F
.Lt_0F7F:

	; label .Lt_0497
	br label %.Lt_0497
.Lt_0497:

	; bop SYS_OFFSET + 2
	%vr629 = load double, double* @SYS_OFFSET
	%vr628 = fadd double %vr629, 0x4000000000000000

	; conv vr628 => vr630
	%vr631 = call double @llvm.nearbyint.f64(double %vr628)
	%vr630 = fptoui double %vr631 to i64

	; call POKE64()
	; arg THIS
	%vr632 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr630
	; arg 206
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr632, i64 %vr630, i64 206 )

	; bop SYS_OFFSET + 3
	%vr634 = load double, double* @SYS_OFFSET
	%vr633 = fadd double %vr634, 0x4008000000000000

	; conv vr633 => vr635
	%vr636 = call double @llvm.nearbyint.f64(double %vr633)
	%vr635 = fptoui double %vr636 to i64

	; call POKE64()
	; arg THIS
	%vr637 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr635
	; arg 92
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr637, i64 %vr635, i64 92 )

	; bop SYS_OFFSET + 4
	%vr639 = load double, double* @SYS_OFFSET
	%vr638 = fadd double %vr639, 0x4010000000000000

	; conv vr638 => vr640
	%vr641 = call double @llvm.nearbyint.f64(double %vr638)
	%vr640 = fptoui double %vr641 to i64

	; call POKE64()
	; arg THIS
	%vr642 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr640
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr642, i64 %vr640, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F80:

	; label .Lt_0496
	br label %.Lt_0496
.Lt_0496:

	; branchbop V <> 30
	%vr645 = load i64, i64* %V.111
	%vr644 = icmp ne i64 %vr645, 30
	br i1 %vr644, label %.Lt_0498, label %.Lt_0F81
.Lt_0F81:

	; label .Lt_0499
	br label %.Lt_0499
.Lt_0499:

	; bop SYS_OFFSET + 2
	%vr648 = load double, double* @SYS_OFFSET
	%vr647 = fadd double %vr648, 0x4000000000000000

	; conv vr647 => vr649
	%vr650 = call double @llvm.nearbyint.f64(double %vr647)
	%vr649 = fptoui double %vr650 to i64

	; call POKE64()
	; arg THIS
	%vr651 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr649
	; arg 252
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr651, i64 %vr649, i64 252 )

	; bop SYS_OFFSET + 3
	%vr653 = load double, double* @SYS_OFFSET
	%vr652 = fadd double %vr653, 0x4008000000000000

	; conv vr652 => vr654
	%vr655 = call double @llvm.nearbyint.f64(double %vr652)
	%vr654 = fptoui double %vr655 to i64

	; call POKE64()
	; arg THIS
	%vr656 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr654
	; arg 233
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr656, i64 %vr654, i64 233 )

	; bop SYS_OFFSET + 4
	%vr658 = load double, double* @SYS_OFFSET
	%vr657 = fadd double %vr658, 0x4010000000000000

	; conv vr657 => vr659
	%vr660 = call double @llvm.nearbyint.f64(double %vr657)
	%vr659 = fptoui double %vr660 to i64

	; call POKE64()
	; arg THIS
	%vr661 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr659
	; arg 79
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr661, i64 %vr659, i64 79 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F82:

	; label .Lt_0498
	br label %.Lt_0498
.Lt_0498:

	; branchbop V <> 31
	%vr664 = load i64, i64* %V.111
	%vr663 = icmp ne i64 %vr664, 31
	br i1 %vr663, label %.Lt_049A, label %.Lt_0F83
.Lt_0F83:

	; label .Lt_049B
	br label %.Lt_049B
.Lt_049B:

	; bop SYS_OFFSET + 2
	%vr667 = load double, double* @SYS_OFFSET
	%vr666 = fadd double %vr667, 0x4000000000000000

	; conv vr666 => vr668
	%vr669 = call double @llvm.nearbyint.f64(double %vr666)
	%vr668 = fptoui double %vr669 to i64

	; call POKE64()
	; arg THIS
	%vr670 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr668
	; arg 237
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr670, i64 %vr668, i64 237 )

	; bop SYS_OFFSET + 3
	%vr672 = load double, double* @SYS_OFFSET
	%vr671 = fadd double %vr672, 0x4008000000000000

	; conv vr671 => vr673
	%vr674 = call double @llvm.nearbyint.f64(double %vr671)
	%vr673 = fptoui double %vr674 to i64

	; call POKE64()
	; arg THIS
	%vr675 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr673
	; arg 212
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr675, i64 %vr673, i64 212 )

	; bop SYS_OFFSET + 4
	%vr677 = load double, double* @SYS_OFFSET
	%vr676 = fadd double %vr677, 0x4010000000000000

	; conv vr676 => vr678
	%vr679 = call double @llvm.nearbyint.f64(double %vr676)
	%vr678 = fptoui double %vr679 to i64

	; call POKE64()
	; arg THIS
	%vr680 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr678
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr680, i64 %vr678, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F84:

	; label .Lt_049A
	br label %.Lt_049A
.Lt_049A:

	; branchbop V <> 32
	%vr683 = load i64, i64* %V.111
	%vr682 = icmp ne i64 %vr683, 32
	br i1 %vr682, label %.Lt_049C, label %.Lt_0F85
.Lt_0F85:

	; label .Lt_049D
	br label %.Lt_049D
.Lt_049D:

	; bop SYS_OFFSET + 2
	%vr686 = load double, double* @SYS_OFFSET
	%vr685 = fadd double %vr686, 0x4000000000000000

	; conv vr685 => vr687
	%vr688 = call double @llvm.nearbyint.f64(double %vr685)
	%vr687 = fptoui double %vr688 to i64

	; call POKE64()
	; arg THIS
	%vr689 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr687
	; arg 196
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr689, i64 %vr687, i64 196 )

	; bop SYS_OFFSET + 3
	%vr691 = load double, double* @SYS_OFFSET
	%vr690 = fadd double %vr691, 0x4008000000000000

	; conv vr690 => vr692
	%vr693 = call double @llvm.nearbyint.f64(double %vr690)
	%vr692 = fptoui double %vr693 to i64

	; call POKE64()
	; arg THIS
	%vr694 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr692
	; arg 160
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr694, i64 %vr692, i64 160 )

	; bop SYS_OFFSET + 4
	%vr696 = load double, double* @SYS_OFFSET
	%vr695 = fadd double %vr696, 0x4010000000000000

	; conv vr695 => vr697
	%vr698 = call double @llvm.nearbyint.f64(double %vr695)
	%vr697 = fptoui double %vr698 to i64

	; call POKE64()
	; arg THIS
	%vr699 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr697
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr699, i64 %vr697, i64 0 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F86:

	; label .Lt_049C
	br label %.Lt_049C
.Lt_049C:

	; branchbop V <> 33
	%vr702 = load i64, i64* %V.111
	%vr701 = icmp ne i64 %vr702, 33
	br i1 %vr701, label %.Lt_049E, label %.Lt_0F87
.Lt_0F87:

	; label .Lt_049F
	br label %.Lt_049F
.Lt_049F:

	; bop SYS_OFFSET + 2
	%vr705 = load double, double* @SYS_OFFSET
	%vr704 = fadd double %vr705, 0x4000000000000000

	; conv vr704 => vr706
	%vr707 = call double @llvm.nearbyint.f64(double %vr704)
	%vr706 = fptoui double %vr707 to i64

	; call POKE64()
	; arg THIS
	%vr708 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr706
	; arg 186
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr708, i64 %vr706, i64 186 )

	; bop SYS_OFFSET + 3
	%vr710 = load double, double* @SYS_OFFSET
	%vr709 = fadd double %vr710, 0x4008000000000000

	; conv vr709 => vr711
	%vr712 = call double @llvm.nearbyint.f64(double %vr709)
	%vr711 = fptoui double %vr712 to i64

	; call POKE64()
	; arg THIS
	%vr713 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr711
	; arg 226
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr713, i64 %vr711, i64 226 )

	; bop SYS_OFFSET + 4
	%vr715 = load double, double* @SYS_OFFSET
	%vr714 = fadd double %vr715, 0x4010000000000000

	; conv vr714 => vr716
	%vr717 = call double @llvm.nearbyint.f64(double %vr714)
	%vr716 = fptoui double %vr717 to i64

	; call POKE64()
	; arg THIS
	%vr718 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr716
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr718, i64 %vr716, i64 52 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F88:

	; label .Lt_049E
	br label %.Lt_049E
.Lt_049E:

	; branchbop V <> 34
	%vr721 = load i64, i64* %V.111
	%vr720 = icmp ne i64 %vr721, 34
	br i1 %vr720, label %.Lt_04A0, label %.Lt_0F89
.Lt_0F89:

	; label .Lt_04A1
	br label %.Lt_04A1
.Lt_04A1:

	; bop SYS_OFFSET + 2
	%vr724 = load double, double* @SYS_OFFSET
	%vr723 = fadd double %vr724, 0x4000000000000000

	; conv vr723 => vr725
	%vr726 = call double @llvm.nearbyint.f64(double %vr723)
	%vr725 = fptoui double %vr726 to i64

	; call POKE64()
	; arg THIS
	%vr727 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr725
	; arg 115
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr727, i64 %vr725, i64 115 )

	; bop SYS_OFFSET + 3
	%vr729 = load double, double* @SYS_OFFSET
	%vr728 = fadd double %vr729, 0x4008000000000000

	; conv vr728 => vr730
	%vr731 = call double @llvm.nearbyint.f64(double %vr728)
	%vr730 = fptoui double %vr731 to i64

	; call POKE64()
	; arg THIS
	%vr732 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr730
	; arg 210
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr732, i64 %vr730, i64 210 )

	; bop SYS_OFFSET + 4
	%vr734 = load double, double* @SYS_OFFSET
	%vr733 = fadd double %vr734, 0x4010000000000000

	; conv vr733 => vr735
	%vr736 = call double @llvm.nearbyint.f64(double %vr733)
	%vr735 = fptoui double %vr736 to i64

	; call POKE64()
	; arg THIS
	%vr737 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr735
	; arg 22
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr737, i64 %vr735, i64 22 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F8A:

	; label .Lt_04A0
	br label %.Lt_04A0
.Lt_04A0:

	; branchbop V <> 35
	%vr740 = load i64, i64* %V.111
	%vr739 = icmp ne i64 %vr740, 35
	br i1 %vr739, label %.Lt_04A2, label %.Lt_0F8B
.Lt_0F8B:

	; label .Lt_04A3
	br label %.Lt_04A3
.Lt_04A3:

	; bop SYS_OFFSET + 2
	%vr743 = load double, double* @SYS_OFFSET
	%vr742 = fadd double %vr743, 0x4000000000000000

	; conv vr742 => vr744
	%vr745 = call double @llvm.nearbyint.f64(double %vr742)
	%vr744 = fptoui double %vr745 to i64

	; call POKE64()
	; arg THIS
	%vr746 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr744
	; arg 78
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr746, i64 %vr744, i64 78 )

	; bop SYS_OFFSET + 3
	%vr748 = load double, double* @SYS_OFFSET
	%vr747 = fadd double %vr748, 0x4008000000000000

	; conv vr747 => vr749
	%vr750 = call double @llvm.nearbyint.f64(double %vr747)
	%vr749 = fptoui double %vr750 to i64

	; call POKE64()
	; arg THIS
	%vr751 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr749
	; arg 154
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr751, i64 %vr749, i64 154 )

	; bop SYS_OFFSET + 4
	%vr753 = load double, double* @SYS_OFFSET
	%vr752 = fadd double %vr753, 0x4010000000000000

	; conv vr752 => vr754
	%vr755 = call double @llvm.nearbyint.f64(double %vr752)
	%vr754 = fptoui double %vr755 to i64

	; call POKE64()
	; arg THIS
	%vr756 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr754
	; arg 6
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr756, i64 %vr754, i64 6 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F8C:

	; label .Lt_04A2
	br label %.Lt_04A2
.Lt_04A2:

	; branchbop V <> 36
	%vr759 = load i64, i64* %V.111
	%vr758 = icmp ne i64 %vr759, 36
	br i1 %vr758, label %.Lt_04A4, label %.Lt_0F8D
.Lt_0F8D:

	; label .Lt_04A5
	br label %.Lt_04A5
.Lt_04A5:

	; bop SYS_OFFSET + 2
	%vr762 = load double, double* @SYS_OFFSET
	%vr761 = fadd double %vr762, 0x4000000000000000

	; conv vr761 => vr763
	%vr764 = call double @llvm.nearbyint.f64(double %vr761)
	%vr763 = fptoui double %vr764 to i64

	; call POKE64()
	; arg THIS
	%vr765 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr763
	; arg 114
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr765, i64 %vr763, i64 114 )

	; bop SYS_OFFSET + 3
	%vr767 = load double, double* @SYS_OFFSET
	%vr766 = fadd double %vr767, 0x4008000000000000

	; conv vr766 => vr768
	%vr769 = call double @llvm.nearbyint.f64(double %vr766)
	%vr768 = fptoui double %vr769 to i64

	; call POKE64()
	; arg THIS
	%vr770 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr768
	; arg 159
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr770, i64 %vr768, i64 159 )

	; bop SYS_OFFSET + 4
	%vr772 = load double, double* @SYS_OFFSET
	%vr771 = fadd double %vr772, 0x4010000000000000

	; conv vr771 => vr773
	%vr774 = call double @llvm.nearbyint.f64(double %vr771)
	%vr773 = fptoui double %vr774 to i64

	; call POKE64()
	; arg THIS
	%vr775 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr773
	; arg 207
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr775, i64 %vr773, i64 207 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F8E:

	; label .Lt_04A4
	br label %.Lt_04A4
.Lt_04A4:

	; branchbop V <> 37
	%vr778 = load i64, i64* %V.111
	%vr777 = icmp ne i64 %vr778, 37
	br i1 %vr777, label %.Lt_04A6, label %.Lt_0F8F
.Lt_0F8F:

	; label .Lt_04A7
	br label %.Lt_04A7
.Lt_04A7:

	; bop SYS_OFFSET + 2
	%vr781 = load double, double* @SYS_OFFSET
	%vr780 = fadd double %vr781, 0x4000000000000000

	; conv vr780 => vr782
	%vr783 = call double @llvm.nearbyint.f64(double %vr780)
	%vr782 = fptoui double %vr783 to i64

	; call POKE64()
	; arg THIS
	%vr784 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr782
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr784, i64 %vr782, i64 52 )

	; bop SYS_OFFSET + 3
	%vr786 = load double, double* @SYS_OFFSET
	%vr785 = fadd double %vr786, 0x4008000000000000

	; conv vr785 => vr787
	%vr788 = call double @llvm.nearbyint.f64(double %vr785)
	%vr787 = fptoui double %vr788 to i64

	; call POKE64()
	; arg THIS
	%vr789 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr787
	; arg 101
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr789, i64 %vr787, i64 101 )

	; bop SYS_OFFSET + 4
	%vr791 = load double, double* @SYS_OFFSET
	%vr790 = fadd double %vr791, 0x4010000000000000

	; conv vr790 => vr792
	%vr793 = call double @llvm.nearbyint.f64(double %vr790)
	%vr792 = fptoui double %vr793 to i64

	; call POKE64()
	; arg THIS
	%vr794 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr792
	; arg 164
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr794, i64 %vr792, i64 164 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F90:

	; label .Lt_04A6
	br label %.Lt_04A6
.Lt_04A6:

	; branchbop V <> 38
	%vr797 = load i64, i64* %V.111
	%vr796 = icmp ne i64 %vr797, 38
	br i1 %vr796, label %.Lt_04A8, label %.Lt_0F91
.Lt_0F91:

	; label .Lt_04A9
	br label %.Lt_04A9
.Lt_04A9:

	; bop SYS_OFFSET + 2
	%vr800 = load double, double* @SYS_OFFSET
	%vr799 = fadd double %vr800, 0x4000000000000000

	; conv vr799 => vr801
	%vr802 = call double @llvm.nearbyint.f64(double %vr799)
	%vr801 = fptoui double %vr802 to i64

	; call POKE64()
	; arg THIS
	%vr803 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr801
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr803, i64 %vr801, i64 32 )

	; bop SYS_OFFSET + 3
	%vr805 = load double, double* @SYS_OFFSET
	%vr804 = fadd double %vr805, 0x4008000000000000

	; conv vr804 => vr806
	%vr807 = call double @llvm.nearbyint.f64(double %vr804)
	%vr806 = fptoui double %vr807 to i64

	; call POKE64()
	; arg THIS
	%vr808 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr806
	; arg 74
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr808, i64 %vr806, i64 74 )

	; bop SYS_OFFSET + 4
	%vr810 = load double, double* @SYS_OFFSET
	%vr809 = fadd double %vr810, 0x4010000000000000

	; conv vr809 => vr811
	%vr812 = call double @llvm.nearbyint.f64(double %vr809)
	%vr811 = fptoui double %vr812 to i64

	; call POKE64()
	; arg THIS
	%vr813 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr811
	; arg 135
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr813, i64 %vr811, i64 135 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F92:

	; label .Lt_04A8
	br label %.Lt_04A8
.Lt_04A8:

	; branchbop V <> 39
	%vr816 = load i64, i64* %V.111
	%vr815 = icmp ne i64 %vr816, 39
	br i1 %vr815, label %.Lt_04AA, label %.Lt_0F93
.Lt_0F93:

	; label .Lt_04AB
	br label %.Lt_04AB
.Lt_04AB:

	; bop SYS_OFFSET + 2
	%vr819 = load double, double* @SYS_OFFSET
	%vr818 = fadd double %vr819, 0x4000000000000000

	; conv vr818 => vr820
	%vr821 = call double @llvm.nearbyint.f64(double %vr818)
	%vr820 = fptoui double %vr821 to i64

	; call POKE64()
	; arg THIS
	%vr822 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr820
	; arg 173
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr822, i64 %vr820, i64 173 )

	; bop SYS_OFFSET + 3
	%vr824 = load double, double* @SYS_OFFSET
	%vr823 = fadd double %vr824, 0x4008000000000000

	; conv vr823 => vr825
	%vr826 = call double @llvm.nearbyint.f64(double %vr823)
	%vr825 = fptoui double %vr826 to i64

	; call POKE64()
	; arg THIS
	%vr827 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr825
	; arg 127
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr827, i64 %vr825, i64 127 )

	; bop SYS_OFFSET + 4
	%vr829 = load double, double* @SYS_OFFSET
	%vr828 = fadd double %vr829, 0x4010000000000000

	; conv vr828 => vr830
	%vr831 = call double @llvm.nearbyint.f64(double %vr828)
	%vr830 = fptoui double %vr831 to i64

	; call POKE64()
	; arg THIS
	%vr832 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr830
	; arg 168
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr832, i64 %vr830, i64 168 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F94:

	; label .Lt_04AA
	br label %.Lt_04AA
.Lt_04AA:

	; branchbop V <> 40
	%vr835 = load i64, i64* %V.111
	%vr834 = icmp ne i64 %vr835, 40
	br i1 %vr834, label %.Lt_04AC, label %.Lt_0F95
.Lt_0F95:

	; label .Lt_04AD
	br label %.Lt_04AD
.Lt_04AD:

	; bop SYS_OFFSET + 2
	%vr838 = load double, double* @SYS_OFFSET
	%vr837 = fadd double %vr838, 0x4000000000000000

	; conv vr837 => vr839
	%vr840 = call double @llvm.nearbyint.f64(double %vr837)
	%vr839 = fptoui double %vr840 to i64

	; call POKE64()
	; arg THIS
	%vr841 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr839
	; arg 117
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr841, i64 %vr839, i64 117 )

	; bop SYS_OFFSET + 3
	%vr843 = load double, double* @SYS_OFFSET
	%vr842 = fadd double %vr843, 0x4008000000000000

	; conv vr842 => vr844
	%vr845 = call double @llvm.nearbyint.f64(double %vr842)
	%vr844 = fptoui double %vr845 to i64

	; call POKE64()
	; arg THIS
	%vr846 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr844
	; arg 80
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr846, i64 %vr844, i64 80 )

	; bop SYS_OFFSET + 4
	%vr848 = load double, double* @SYS_OFFSET
	%vr847 = fadd double %vr848, 0x4010000000000000

	; conv vr847 => vr849
	%vr850 = call double @llvm.nearbyint.f64(double %vr847)
	%vr849 = fptoui double %vr850 to i64

	; call POKE64()
	; arg THIS
	%vr851 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr849
	; arg 125
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr851, i64 %vr849, i64 125 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F96:

	; label .Lt_04AC
	br label %.Lt_04AC
.Lt_04AC:

	; branchbop V <> 41
	%vr854 = load i64, i64* %V.111
	%vr853 = icmp ne i64 %vr854, 41
	br i1 %vr853, label %.Lt_04AE, label %.Lt_0F97
.Lt_0F97:

	; label .Lt_04AF
	br label %.Lt_04AF
.Lt_04AF:

	; bop SYS_OFFSET + 2
	%vr857 = load double, double* @SYS_OFFSET
	%vr856 = fadd double %vr857, 0x4000000000000000

	; conv vr856 => vr858
	%vr859 = call double @llvm.nearbyint.f64(double %vr856)
	%vr858 = fptoui double %vr859 to i64

	; call POKE64()
	; arg THIS
	%vr860 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr858
	; arg 92
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr860, i64 %vr858, i64 92 )

	; bop SYS_OFFSET + 3
	%vr862 = load double, double* @SYS_OFFSET
	%vr861 = fadd double %vr862, 0x4008000000000000

	; conv vr861 => vr863
	%vr864 = call double @llvm.nearbyint.f64(double %vr861)
	%vr863 = fptoui double %vr864 to i64

	; call POKE64()
	; arg THIS
	%vr865 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr863
	; arg 53
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr865, i64 %vr863, i64 53 )

	; bop SYS_OFFSET + 4
	%vr867 = load double, double* @SYS_OFFSET
	%vr866 = fadd double %vr867, 0x4010000000000000

	; conv vr866 => vr868
	%vr869 = call double @llvm.nearbyint.f64(double %vr866)
	%vr868 = fptoui double %vr869 to i64

	; call POKE64()
	; arg THIS
	%vr870 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr868
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr870, i64 %vr868, i64 102 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F98:

	; label .Lt_04AE
	br label %.Lt_04AE
.Lt_04AE:

	; branchbop V <> 42
	%vr873 = load i64, i64* %V.111
	%vr872 = icmp ne i64 %vr873, 42
	br i1 %vr872, label %.Lt_04B0, label %.Lt_0F99
.Lt_0F99:

	; label .Lt_04B1
	br label %.Lt_04B1
.Lt_04B1:

	; bop SYS_OFFSET + 2
	%vr876 = load double, double* @SYS_OFFSET
	%vr875 = fadd double %vr876, 0x4000000000000000

	; conv vr875 => vr877
	%vr878 = call double @llvm.nearbyint.f64(double %vr875)
	%vr877 = fptoui double %vr878 to i64

	; call POKE64()
	; arg THIS
	%vr879 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr877
	; arg 233
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr879, i64 %vr877, i64 233 )

	; bop SYS_OFFSET + 3
	%vr881 = load double, double* @SYS_OFFSET
	%vr880 = fadd double %vr881, 0x4008000000000000

	; conv vr880 => vr882
	%vr883 = call double @llvm.nearbyint.f64(double %vr880)
	%vr882 = fptoui double %vr883 to i64

	; call POKE64()
	; arg THIS
	%vr884 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr882
	; arg 185
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr884, i64 %vr882, i64 185 )

	; bop SYS_OFFSET + 4
	%vr886 = load double, double* @SYS_OFFSET
	%vr885 = fadd double %vr886, 0x4010000000000000

	; conv vr885 => vr887
	%vr888 = call double @llvm.nearbyint.f64(double %vr885)
	%vr887 = fptoui double %vr888 to i64

	; call POKE64()
	; arg THIS
	%vr889 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr887
	; arg 110
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr889, i64 %vr887, i64 110 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F9A:

	; label .Lt_04B0
	br label %.Lt_04B0
.Lt_04B0:

	; branchbop V <> 43
	%vr892 = load i64, i64* %V.111
	%vr891 = icmp ne i64 %vr892, 43
	br i1 %vr891, label %.Lt_04B2, label %.Lt_0F9B
.Lt_0F9B:

	; label .Lt_04B3
	br label %.Lt_04B3
.Lt_04B3:

	; bop SYS_OFFSET + 2
	%vr895 = load double, double* @SYS_OFFSET
	%vr894 = fadd double %vr895, 0x4000000000000000

	; conv vr894 => vr896
	%vr897 = call double @llvm.nearbyint.f64(double %vr894)
	%vr896 = fptoui double %vr897 to i64

	; call POKE64()
	; arg THIS
	%vr898 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr896
	; arg 193
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr898, i64 %vr896, i64 193 )

	; bop SYS_OFFSET + 3
	%vr900 = load double, double* @SYS_OFFSET
	%vr899 = fadd double %vr900, 0x4008000000000000

	; conv vr899 => vr901
	%vr902 = call double @llvm.nearbyint.f64(double %vr899)
	%vr901 = fptoui double %vr902 to i64

	; call POKE64()
	; arg THIS
	%vr903 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr901
	; arg 125
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr903, i64 %vr901, i64 125 )

	; bop SYS_OFFSET + 4
	%vr905 = load double, double* @SYS_OFFSET
	%vr904 = fadd double %vr905, 0x4010000000000000

	; conv vr904 => vr906
	%vr907 = call double @llvm.nearbyint.f64(double %vr904)
	%vr906 = fptoui double %vr907 to i64

	; call POKE64()
	; arg THIS
	%vr908 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr906
	; arg 17
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr908, i64 %vr906, i64 17 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F9C:

	; label .Lt_04B2
	br label %.Lt_04B2
.Lt_04B2:

	; branchbop V <> 44
	%vr911 = load i64, i64* %V.111
	%vr910 = icmp ne i64 %vr911, 44
	br i1 %vr910, label %.Lt_04B4, label %.Lt_0F9D
.Lt_0F9D:

	; label .Lt_04B5
	br label %.Lt_04B5
.Lt_04B5:

	; bop SYS_OFFSET + 2
	%vr914 = load double, double* @SYS_OFFSET
	%vr913 = fadd double %vr914, 0x4000000000000000

	; conv vr913 => vr915
	%vr916 = call double @llvm.nearbyint.f64(double %vr913)
	%vr915 = fptoui double %vr916 to i64

	; call POKE64()
	; arg THIS
	%vr917 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr915
	; arg 143
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr917, i64 %vr915, i64 143 )

	; bop SYS_OFFSET + 3
	%vr919 = load double, double* @SYS_OFFSET
	%vr918 = fadd double %vr919, 0x4008000000000000

	; conv vr918 => vr920
	%vr921 = call double @llvm.nearbyint.f64(double %vr918)
	%vr920 = fptoui double %vr921 to i64

	; call POKE64()
	; arg THIS
	%vr922 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr920
	; arg 89
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr922, i64 %vr920, i64 89 )

	; bop SYS_OFFSET + 4
	%vr924 = load double, double* @SYS_OFFSET
	%vr923 = fadd double %vr924, 0x4010000000000000

	; conv vr923 => vr925
	%vr926 = call double @llvm.nearbyint.f64(double %vr923)
	%vr925 = fptoui double %vr926 to i64

	; call POKE64()
	; arg THIS
	%vr927 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr925
	; arg 2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr927, i64 %vr925, i64 2 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0F9E:

	; label .Lt_04B4
	br label %.Lt_04B4
.Lt_04B4:

	; branchbop V <> 45
	%vr930 = load i64, i64* %V.111
	%vr929 = icmp ne i64 %vr930, 45
	br i1 %vr929, label %.Lt_04B6, label %.Lt_0F9F
.Lt_0F9F:

	; label .Lt_04B7
	br label %.Lt_04B7
.Lt_04B7:

	; bop SYS_OFFSET + 2
	%vr933 = load double, double* @SYS_OFFSET
	%vr932 = fadd double %vr933, 0x4000000000000000

	; conv vr932 => vr934
	%vr935 = call double @llvm.nearbyint.f64(double %vr932)
	%vr934 = fptoui double %vr935 to i64

	; call POKE64()
	; arg THIS
	%vr936 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr934
	; arg 136
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr936, i64 %vr934, i64 136 )

	; bop SYS_OFFSET + 3
	%vr938 = load double, double* @SYS_OFFSET
	%vr937 = fadd double %vr938, 0x4008000000000000

	; conv vr937 => vr939
	%vr940 = call double @llvm.nearbyint.f64(double %vr937)
	%vr939 = fptoui double %vr940 to i64

	; call POKE64()
	; arg THIS
	%vr941 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr939
	; arg 138
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr941, i64 %vr939, i64 138 )

	; bop SYS_OFFSET + 4
	%vr943 = load double, double* @SYS_OFFSET
	%vr942 = fadd double %vr943, 0x4010000000000000

	; conv vr942 => vr944
	%vr945 = call double @llvm.nearbyint.f64(double %vr942)
	%vr944 = fptoui double %vr945 to i64

	; call POKE64()
	; arg THIS
	%vr946 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr944
	; arg 133
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr946, i64 %vr944, i64 133 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0FA0:

	; label .Lt_04B6
	br label %.Lt_04B6
.Lt_04B6:

	; branchbop V <> 46
	%vr949 = load i64, i64* %V.111
	%vr948 = icmp ne i64 %vr949, 46
	br i1 %vr948, label %.Lt_04B8, label %.Lt_0FA1
.Lt_0FA1:

	; label .Lt_04B9
	br label %.Lt_04B9
.Lt_04B9:

	; bop SYS_OFFSET + 2
	%vr952 = load double, double* @SYS_OFFSET
	%vr951 = fadd double %vr952, 0x4000000000000000

	; conv vr951 => vr953
	%vr954 = call double @llvm.nearbyint.f64(double %vr951)
	%vr953 = fptoui double %vr954 to i64

	; call POKE64()
	; arg THIS
	%vr955 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr953
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr955, i64 %vr953, i64 85 )

	; bop SYS_OFFSET + 3
	%vr957 = load double, double* @SYS_OFFSET
	%vr956 = fadd double %vr957, 0x4008000000000000

	; conv vr956 => vr958
	%vr959 = call double @llvm.nearbyint.f64(double %vr956)
	%vr958 = fptoui double %vr959 to i64

	; call POKE64()
	; arg THIS
	%vr960 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr958
	; arg 87
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr960, i64 %vr958, i64 87 )

	; bop SYS_OFFSET + 4
	%vr962 = load double, double* @SYS_OFFSET
	%vr961 = fadd double %vr962, 0x4010000000000000

	; conv vr961 => vr963
	%vr964 = call double @llvm.nearbyint.f64(double %vr961)
	%vr963 = fptoui double %vr964 to i64

	; call POKE64()
	; arg THIS
	%vr965 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr963
	; arg 83
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr965, i64 %vr963, i64 83 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0FA2:

	; label .Lt_04B8
	br label %.Lt_04B8
.Lt_04B8:

	; branchbop V <> 47
	%vr968 = load i64, i64* %V.111
	%vr967 = icmp ne i64 %vr968, 47
	br i1 %vr967, label %.Lt_04BA, label %.Lt_0FA3
.Lt_0FA3:

	; label .Lt_04BB
	br label %.Lt_04BB
.Lt_04BB:

	; bop SYS_OFFSET + 2
	%vr971 = load double, double* @SYS_OFFSET
	%vr970 = fadd double %vr971, 0x4000000000000000

	; conv vr970 => vr972
	%vr973 = call double @llvm.nearbyint.f64(double %vr970)
	%vr972 = fptoui double %vr973 to i64

	; call POKE64()
	; arg THIS
	%vr974 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr972
	; arg 46
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr974, i64 %vr972, i64 46 )

	; bop SYS_OFFSET + 3
	%vr976 = load double, double* @SYS_OFFSET
	%vr975 = fadd double %vr976, 0x4008000000000000

	; conv vr975 => vr977
	%vr978 = call double @llvm.nearbyint.f64(double %vr975)
	%vr977 = fptoui double %vr978 to i64

	; call POKE64()
	; arg THIS
	%vr979 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr977
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr979, i64 %vr977, i64 52 )

	; bop SYS_OFFSET + 4
	%vr981 = load double, double* @SYS_OFFSET
	%vr980 = fadd double %vr981, 0x4010000000000000

	; conv vr980 => vr982
	%vr983 = call double @llvm.nearbyint.f64(double %vr980)
	%vr982 = fptoui double %vr983 to i64

	; call POKE64()
	; arg THIS
	%vr984 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr982
	; arg 54
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr984, i64 %vr982, i64 54 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0FA4:

	; label .Lt_04BA
	br label %.Lt_04BA
.Lt_04BA:

	; branchbop V <> 48
	%vr987 = load i64, i64* %V.111
	%vr986 = icmp ne i64 %vr987, 48
	br i1 %vr986, label %.Lt_04BC, label %.Lt_0FA5
.Lt_0FA5:

	; label .Lt_04BD
	br label %.Lt_04BD
.Lt_04BD:

	; bop SYS_OFFSET + 2
	%vr990 = load double, double* @SYS_OFFSET
	%vr989 = fadd double %vr990, 0x4000000000000000

	; conv vr989 => vr991
	%vr992 = call double @llvm.nearbyint.f64(double %vr989)
	%vr991 = fptoui double %vr992 to i64

	; call POKE64()
	; arg THIS
	%vr993 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr991
	; arg 238
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr993, i64 %vr991, i64 238 )

	; bop SYS_OFFSET + 3
	%vr995 = load double, double* @SYS_OFFSET
	%vr994 = fadd double %vr995, 0x4008000000000000

	; conv vr994 => vr996
	%vr997 = call double @llvm.nearbyint.f64(double %vr994)
	%vr996 = fptoui double %vr997 to i64

	; call POKE64()
	; arg THIS
	%vr998 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr996
	; arg 238
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr998, i64 %vr996, i64 238 )

	; bop SYS_OFFSET + 4
	%vr1000 = load double, double* @SYS_OFFSET
	%vr999 = fadd double %vr1000, 0x4010000000000000

	; conv vr999 => vr1001
	%vr1002 = call double @llvm.nearbyint.f64(double %vr999)
	%vr1001 = fptoui double %vr1002 to i64

	; call POKE64()
	; arg THIS
	%vr1003 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1001
	; arg 236
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1003, i64 %vr1001, i64 236 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0FA6:

	; label .Lt_04BC
	br label %.Lt_04BC
.Lt_04BC:

	; branchbop V <> 49
	%vr1006 = load i64, i64* %V.111
	%vr1005 = icmp ne i64 %vr1006, 49
	br i1 %vr1005, label %.Lt_04BE, label %.Lt_0FA7
.Lt_0FA7:

	; label .Lt_04BF
	br label %.Lt_04BF
.Lt_04BF:

	; bop SYS_OFFSET + 2
	%vr1009 = load double, double* @SYS_OFFSET
	%vr1008 = fadd double %vr1009, 0x4000000000000000

	; conv vr1008 => vr1010
	%vr1011 = call double @llvm.nearbyint.f64(double %vr1008)
	%vr1010 = fptoui double %vr1011 to i64

	; call POKE64()
	; arg THIS
	%vr1012 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1010
	; arg 211
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1012, i64 %vr1010, i64 211 )

	; bop SYS_OFFSET + 3
	%vr1014 = load double, double* @SYS_OFFSET
	%vr1013 = fadd double %vr1014, 0x4008000000000000

	; conv vr1013 => vr1015
	%vr1016 = call double @llvm.nearbyint.f64(double %vr1013)
	%vr1015 = fptoui double %vr1016 to i64

	; call POKE64()
	; arg THIS
	%vr1017 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1015
	; arg 215
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1017, i64 %vr1015, i64 215 )

	; bop SYS_OFFSET + 4
	%vr1019 = load double, double* @SYS_OFFSET
	%vr1018 = fadd double %vr1019, 0x4010000000000000

	; conv vr1018 => vr1020
	%vr1021 = call double @llvm.nearbyint.f64(double %vr1018)
	%vr1020 = fptoui double %vr1021 to i64

	; call POKE64()
	; arg THIS
	%vr1022 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1020
	; arg 207
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1022, i64 %vr1020, i64 207 )

	; goto .Lt_045B
	br label %.Lt_045B
.Lt_0FA8:

	; label .Lt_04BE
	br label %.Lt_04BE
.Lt_04BE:

	; branchbop V <> 50
	%vr1025 = load i64, i64* %V.111
	%vr1024 = icmp ne i64 %vr1025, 50
	br i1 %vr1024, label %.Lt_04C0, label %.Lt_0FA9
.Lt_0FA9:

	; label .Lt_04C1
	br label %.Lt_04C1
.Lt_04C1:

	; bop SYS_OFFSET + 2
	%vr1028 = load double, double* @SYS_OFFSET
	%vr1027 = fadd double %vr1028, 0x4000000000000000

	; conv vr1027 => vr1029
	%vr1030 = call double @llvm.nearbyint.f64(double %vr1027)
	%vr1029 = fptoui double %vr1030 to i64

	; call POKE64()
	; arg THIS
	%vr1031 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1029
	; arg 186
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1031, i64 %vr1029, i64 186 )

	; bop SYS_OFFSET + 3
	%vr1033 = load double, double* @SYS_OFFSET
	%vr1032 = fadd double %vr1033, 0x4008000000000000

	; conv vr1032 => vr1034
	%vr1035 = call double @llvm.nearbyint.f64(double %vr1032)
	%vr1034 = fptoui double %vr1035 to i64

	; call POKE64()
	; arg THIS
	%vr1036 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1034
	; arg 189
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1036, i64 %vr1034, i64 189 )

	; bop SYS_OFFSET + 4
	%vr1038 = load double, double* @SYS_OFFSET
	%vr1037 = fadd double %vr1038, 0x4010000000000000

	; conv vr1037 => vr1039
	%vr1040 = call double @llvm.nearbyint.f64(double %vr1037)
	%vr1039 = fptoui double %vr1040 to i64

	; call POKE64()
	; arg THIS
	%vr1041 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1039
	; arg 182
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1041, i64 %vr1039, i64 182 )

	; label .Lt_04C0
	br label %.Lt_04C0
.Lt_04C0:

	; label .Lt_045B
	br label %.Lt_045B
.Lt_045B:

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_0FAA:

	; label .Lt_045A
	br label %.Lt_045A
.Lt_045A:

	; branchbop ADR <> 53272
	%vr1044 = load i64, i64* %ADR.110
	%vr1043 = icmp ne i64 %vr1044, 53272
	br i1 %vr1043, label %.Lt_04C2, label %.Lt_0FAB
.Lt_0FAB:

	; branchbop V <> 15
	%vr1048 = load i64, i64* %V.111
	%vr1047 = icmp ne i64 %vr1048, 15
	br i1 %vr1047, label %.Lt_04C4, label %.Lt_0FAC
.Lt_0FAC:

	; label .Lt_04C5
	br label %.Lt_04C5
.Lt_04C5:

	; bop SYS_OFFSET + 299
	%vr1051 = load double, double* @SYS_OFFSET
	%vr1050 = fadd double %vr1051, 0x4072B00000000000

	; conv vr1050 => vr1052
	%vr1053 = call double @llvm.nearbyint.f64(double %vr1050)
	%vr1052 = fptoui double %vr1053 to i64

	; call POKE64()
	; arg THIS
	%vr1054 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1052
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1054, i64 %vr1052, i64 0 )

	; call POKE64()
	; arg THIS
	%vr1055 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1055, i64 648, i64 0 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FAD:

	; label .Lt_04C4
	br label %.Lt_04C4
.Lt_04C4:

	; branchbop V <> 31
	%vr1058 = load i64, i64* %V.111
	%vr1057 = icmp ne i64 %vr1058, 31
	br i1 %vr1057, label %.Lt_04C6, label %.Lt_0FAE
.Lt_0FAE:

	; label .Lt_04C7
	br label %.Lt_04C7
.Lt_04C7:

	; bop SYS_OFFSET + 299
	%vr1061 = load double, double* @SYS_OFFSET
	%vr1060 = fadd double %vr1061, 0x4072B00000000000

	; conv vr1060 => vr1062
	%vr1063 = call double @llvm.nearbyint.f64(double %vr1060)
	%vr1062 = fptoui double %vr1063 to i64

	; call POKE64()
	; arg THIS
	%vr1064 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1062
	; arg 1024
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1064, i64 %vr1062, i64 1024 )

	; call POKE64()
	; arg THIS
	%vr1065 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 4
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1065, i64 648, i64 4 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FAF:

	; label .Lt_04C6
	br label %.Lt_04C6
.Lt_04C6:

	; branchbop V <> 47
	%vr1068 = load i64, i64* %V.111
	%vr1067 = icmp ne i64 %vr1068, 47
	br i1 %vr1067, label %.Lt_04C8, label %.Lt_0FB0
.Lt_0FB0:

	; label .Lt_04C9
	br label %.Lt_04C9
.Lt_04C9:

	; bop SYS_OFFSET + 299
	%vr1071 = load double, double* @SYS_OFFSET
	%vr1070 = fadd double %vr1071, 0x4072B00000000000

	; conv vr1070 => vr1072
	%vr1073 = call double @llvm.nearbyint.f64(double %vr1070)
	%vr1072 = fptoui double %vr1073 to i64

	; call POKE64()
	; arg THIS
	%vr1074 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1072
	; arg 2048
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1074, i64 %vr1072, i64 2048 )

	; call POKE64()
	; arg THIS
	%vr1075 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 8
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1075, i64 648, i64 8 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FB1:

	; label .Lt_04C8
	br label %.Lt_04C8
.Lt_04C8:

	; branchbop V <> 63
	%vr1078 = load i64, i64* %V.111
	%vr1077 = icmp ne i64 %vr1078, 63
	br i1 %vr1077, label %.Lt_04CA, label %.Lt_0FB2
.Lt_0FB2:

	; label .Lt_04CB
	br label %.Lt_04CB
.Lt_04CB:

	; bop SYS_OFFSET + 299
	%vr1081 = load double, double* @SYS_OFFSET
	%vr1080 = fadd double %vr1081, 0x4072B00000000000

	; conv vr1080 => vr1082
	%vr1083 = call double @llvm.nearbyint.f64(double %vr1080)
	%vr1082 = fptoui double %vr1083 to i64

	; call POKE64()
	; arg THIS
	%vr1084 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1082
	; arg 3072
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1084, i64 %vr1082, i64 3072 )

	; call POKE64()
	; arg THIS
	%vr1085 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 12
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1085, i64 648, i64 12 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FB3:

	; label .Lt_04CA
	br label %.Lt_04CA
.Lt_04CA:

	; branchbop V <> 79
	%vr1088 = load i64, i64* %V.111
	%vr1087 = icmp ne i64 %vr1088, 79
	br i1 %vr1087, label %.Lt_04CC, label %.Lt_0FB4
.Lt_0FB4:

	; label .Lt_04CD
	br label %.Lt_04CD
.Lt_04CD:

	; bop SYS_OFFSET + 299
	%vr1091 = load double, double* @SYS_OFFSET
	%vr1090 = fadd double %vr1091, 0x4072B00000000000

	; conv vr1090 => vr1092
	%vr1093 = call double @llvm.nearbyint.f64(double %vr1090)
	%vr1092 = fptoui double %vr1093 to i64

	; call POKE64()
	; arg THIS
	%vr1094 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1092
	; arg 4096
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1094, i64 %vr1092, i64 4096 )

	; call POKE64()
	; arg THIS
	%vr1095 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 16
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1095, i64 648, i64 16 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FB5:

	; label .Lt_04CC
	br label %.Lt_04CC
.Lt_04CC:

	; branchbop V <> 95
	%vr1098 = load i64, i64* %V.111
	%vr1097 = icmp ne i64 %vr1098, 95
	br i1 %vr1097, label %.Lt_04CE, label %.Lt_0FB6
.Lt_0FB6:

	; label .Lt_04CF
	br label %.Lt_04CF
.Lt_04CF:

	; bop SYS_OFFSET + 299
	%vr1101 = load double, double* @SYS_OFFSET
	%vr1100 = fadd double %vr1101, 0x4072B00000000000

	; conv vr1100 => vr1102
	%vr1103 = call double @llvm.nearbyint.f64(double %vr1100)
	%vr1102 = fptoui double %vr1103 to i64

	; call POKE64()
	; arg THIS
	%vr1104 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1102
	; arg 5120
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1104, i64 %vr1102, i64 5120 )

	; call POKE64()
	; arg THIS
	%vr1105 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 20
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1105, i64 648, i64 20 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FB7:

	; label .Lt_04CE
	br label %.Lt_04CE
.Lt_04CE:

	; branchbop V <> 111
	%vr1108 = load i64, i64* %V.111
	%vr1107 = icmp ne i64 %vr1108, 111
	br i1 %vr1107, label %.Lt_04D0, label %.Lt_0FB8
.Lt_0FB8:

	; label .Lt_04D1
	br label %.Lt_04D1
.Lt_04D1:

	; bop SYS_OFFSET + 299
	%vr1111 = load double, double* @SYS_OFFSET
	%vr1110 = fadd double %vr1111, 0x4072B00000000000

	; conv vr1110 => vr1112
	%vr1113 = call double @llvm.nearbyint.f64(double %vr1110)
	%vr1112 = fptoui double %vr1113 to i64

	; call POKE64()
	; arg THIS
	%vr1114 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1112
	; arg 6144
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1114, i64 %vr1112, i64 6144 )

	; call POKE64()
	; arg THIS
	%vr1115 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 24
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1115, i64 648, i64 24 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FB9:

	; label .Lt_04D0
	br label %.Lt_04D0
.Lt_04D0:

	; branchbop V <> 127
	%vr1118 = load i64, i64* %V.111
	%vr1117 = icmp ne i64 %vr1118, 127
	br i1 %vr1117, label %.Lt_04D2, label %.Lt_0FBA
.Lt_0FBA:

	; label .Lt_04D3
	br label %.Lt_04D3
.Lt_04D3:

	; bop SYS_OFFSET + 299
	%vr1121 = load double, double* @SYS_OFFSET
	%vr1120 = fadd double %vr1121, 0x4072B00000000000

	; conv vr1120 => vr1122
	%vr1123 = call double @llvm.nearbyint.f64(double %vr1120)
	%vr1122 = fptoui double %vr1123 to i64

	; call POKE64()
	; arg THIS
	%vr1124 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1122
	; arg 7168
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1124, i64 %vr1122, i64 7168 )

	; call POKE64()
	; arg THIS
	%vr1125 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 28
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1125, i64 648, i64 28 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FBB:

	; label .Lt_04D2
	br label %.Lt_04D2
.Lt_04D2:

	; branchbop V <> 143
	%vr1128 = load i64, i64* %V.111
	%vr1127 = icmp ne i64 %vr1128, 143
	br i1 %vr1127, label %.Lt_04D4, label %.Lt_0FBC
.Lt_0FBC:

	; label .Lt_04D5
	br label %.Lt_04D5
.Lt_04D5:

	; bop SYS_OFFSET + 299
	%vr1131 = load double, double* @SYS_OFFSET
	%vr1130 = fadd double %vr1131, 0x4072B00000000000

	; conv vr1130 => vr1132
	%vr1133 = call double @llvm.nearbyint.f64(double %vr1130)
	%vr1132 = fptoui double %vr1133 to i64

	; call POKE64()
	; arg THIS
	%vr1134 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1132
	; arg 8192
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1134, i64 %vr1132, i64 8192 )

	; call POKE64()
	; arg THIS
	%vr1135 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1135, i64 648, i64 32 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FBD:

	; label .Lt_04D4
	br label %.Lt_04D4
.Lt_04D4:

	; branchbop V <> 159
	%vr1138 = load i64, i64* %V.111
	%vr1137 = icmp ne i64 %vr1138, 159
	br i1 %vr1137, label %.Lt_04D6, label %.Lt_0FBE
.Lt_0FBE:

	; label .Lt_04D7
	br label %.Lt_04D7
.Lt_04D7:

	; bop SYS_OFFSET + 299
	%vr1141 = load double, double* @SYS_OFFSET
	%vr1140 = fadd double %vr1141, 0x4072B00000000000

	; conv vr1140 => vr1142
	%vr1143 = call double @llvm.nearbyint.f64(double %vr1140)
	%vr1142 = fptoui double %vr1143 to i64

	; call POKE64()
	; arg THIS
	%vr1144 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1142
	; arg 9216
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1144, i64 %vr1142, i64 9216 )

	; call POKE64()
	; arg THIS
	%vr1145 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 36
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1145, i64 648, i64 36 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FBF:

	; label .Lt_04D6
	br label %.Lt_04D6
.Lt_04D6:

	; branchbop V <> 175
	%vr1148 = load i64, i64* %V.111
	%vr1147 = icmp ne i64 %vr1148, 175
	br i1 %vr1147, label %.Lt_04D8, label %.Lt_0FC0
.Lt_0FC0:

	; label .Lt_04D9
	br label %.Lt_04D9
.Lt_04D9:

	; bop SYS_OFFSET + 299
	%vr1151 = load double, double* @SYS_OFFSET
	%vr1150 = fadd double %vr1151, 0x4072B00000000000

	; conv vr1150 => vr1152
	%vr1153 = call double @llvm.nearbyint.f64(double %vr1150)
	%vr1152 = fptoui double %vr1153 to i64

	; call POKE64()
	; arg THIS
	%vr1154 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1152
	; arg 10240
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1154, i64 %vr1152, i64 10240 )

	; call POKE64()
	; arg THIS
	%vr1155 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1155, i64 648, i64 40 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FC1:

	; label .Lt_04D8
	br label %.Lt_04D8
.Lt_04D8:

	; branchbop V <> 191
	%vr1158 = load i64, i64* %V.111
	%vr1157 = icmp ne i64 %vr1158, 191
	br i1 %vr1157, label %.Lt_04DA, label %.Lt_0FC2
.Lt_0FC2:

	; label .Lt_04DB
	br label %.Lt_04DB
.Lt_04DB:

	; bop SYS_OFFSET + 299
	%vr1161 = load double, double* @SYS_OFFSET
	%vr1160 = fadd double %vr1161, 0x4072B00000000000

	; conv vr1160 => vr1162
	%vr1163 = call double @llvm.nearbyint.f64(double %vr1160)
	%vr1162 = fptoui double %vr1163 to i64

	; call POKE64()
	; arg THIS
	%vr1164 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1162
	; arg 11264
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1164, i64 %vr1162, i64 11264 )

	; call POKE64()
	; arg THIS
	%vr1165 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 44
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1165, i64 648, i64 44 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FC3:

	; label .Lt_04DA
	br label %.Lt_04DA
.Lt_04DA:

	; branchbop V <> 207
	%vr1168 = load i64, i64* %V.111
	%vr1167 = icmp ne i64 %vr1168, 207
	br i1 %vr1167, label %.Lt_04DC, label %.Lt_0FC4
.Lt_0FC4:

	; label .Lt_04DD
	br label %.Lt_04DD
.Lt_04DD:

	; bop SYS_OFFSET + 299
	%vr1171 = load double, double* @SYS_OFFSET
	%vr1170 = fadd double %vr1171, 0x4072B00000000000

	; conv vr1170 => vr1172
	%vr1173 = call double @llvm.nearbyint.f64(double %vr1170)
	%vr1172 = fptoui double %vr1173 to i64

	; call POKE64()
	; arg THIS
	%vr1174 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1172
	; arg 12288
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1174, i64 %vr1172, i64 12288 )

	; call POKE64()
	; arg THIS
	%vr1175 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 48
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1175, i64 648, i64 48 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FC5:

	; label .Lt_04DC
	br label %.Lt_04DC
.Lt_04DC:

	; branchbop V <> 223
	%vr1178 = load i64, i64* %V.111
	%vr1177 = icmp ne i64 %vr1178, 223
	br i1 %vr1177, label %.Lt_04DE, label %.Lt_0FC6
.Lt_0FC6:

	; label .Lt_04DF
	br label %.Lt_04DF
.Lt_04DF:

	; bop SYS_OFFSET + 299
	%vr1181 = load double, double* @SYS_OFFSET
	%vr1180 = fadd double %vr1181, 0x4072B00000000000

	; conv vr1180 => vr1182
	%vr1183 = call double @llvm.nearbyint.f64(double %vr1180)
	%vr1182 = fptoui double %vr1183 to i64

	; call POKE64()
	; arg THIS
	%vr1184 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1182
	; arg 13312
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1184, i64 %vr1182, i64 13312 )

	; call POKE64()
	; arg THIS
	%vr1185 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1185, i64 648, i64 52 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FC7:

	; label .Lt_04DE
	br label %.Lt_04DE
.Lt_04DE:

	; branchbop V <> 239
	%vr1188 = load i64, i64* %V.111
	%vr1187 = icmp ne i64 %vr1188, 239
	br i1 %vr1187, label %.Lt_04E0, label %.Lt_0FC8
.Lt_0FC8:

	; label .Lt_04E1
	br label %.Lt_04E1
.Lt_04E1:

	; bop SYS_OFFSET + 299
	%vr1191 = load double, double* @SYS_OFFSET
	%vr1190 = fadd double %vr1191, 0x4072B00000000000

	; conv vr1190 => vr1192
	%vr1193 = call double @llvm.nearbyint.f64(double %vr1190)
	%vr1192 = fptoui double %vr1193 to i64

	; call POKE64()
	; arg THIS
	%vr1194 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1192
	; arg 14336
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1194, i64 %vr1192, i64 14336 )

	; call POKE64()
	; arg THIS
	%vr1195 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 56
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1195, i64 648, i64 56 )

	; goto .Lt_04C3
	br label %.Lt_04C3
.Lt_0FC9:

	; label .Lt_04E0
	br label %.Lt_04E0
.Lt_04E0:

	; branchbop V <> 255
	%vr1198 = load i64, i64* %V.111
	%vr1197 = icmp ne i64 %vr1198, 255
	br i1 %vr1197, label %.Lt_04E2, label %.Lt_0FCA
.Lt_0FCA:

	; label .Lt_04E3
	br label %.Lt_04E3
.Lt_04E3:

	; bop SYS_OFFSET + 299
	%vr1201 = load double, double* @SYS_OFFSET
	%vr1200 = fadd double %vr1201, 0x4072B00000000000

	; conv vr1200 => vr1202
	%vr1203 = call double @llvm.nearbyint.f64(double %vr1200)
	%vr1202 = fptoui double %vr1203 to i64

	; call POKE64()
	; arg THIS
	%vr1204 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1202
	; arg 15360
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1204, i64 %vr1202, i64 15360 )

	; call POKE64()
	; arg THIS
	%vr1205 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 648
	; arg 60
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1205, i64 648, i64 60 )

	; label .Lt_04E2
	br label %.Lt_04E2
.Lt_04E2:

	; label .Lt_04C3
	br label %.Lt_04C3
.Lt_04C3:

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_0FCB:

	; label .Lt_04C2
	br label %.Lt_04C2
.Lt_04C2:

	; bop ADR == 53248
	%vr1208 = load i64, i64* %ADR.110
	%vr1209 = bitcast i64 %vr1208 to i64
	%vr1210 = bitcast i64 53248 to i64
	%vr1207 = icmp eq i64 %vr1209, %vr1210
	%vr1211 = sext i1 %vr1207 to i64

	; bop ADR == 53250
	%vr1214 = load i64, i64* %ADR.110
	%vr1215 = bitcast i64 %vr1214 to i64
	%vr1216 = bitcast i64 53250 to i64
	%vr1213 = icmp eq i64 %vr1215, %vr1216
	%vr1217 = sext i1 %vr1213 to i64

	; bop vr1211 OR vr1217
	%vr1218 = or i64 %vr1211, %vr1217

	; bop ADR == 53252
	%vr1221 = load i64, i64* %ADR.110
	%vr1222 = bitcast i64 %vr1221 to i64
	%vr1223 = bitcast i64 53252 to i64
	%vr1220 = icmp eq i64 %vr1222, %vr1223
	%vr1224 = sext i1 %vr1220 to i64

	; bop vr1218 OR vr1224
	%vr1225 = or i64 %vr1218, %vr1224

	; bop ADR == 53254
	%vr1228 = load i64, i64* %ADR.110
	%vr1229 = bitcast i64 %vr1228 to i64
	%vr1230 = bitcast i64 53254 to i64
	%vr1227 = icmp eq i64 %vr1229, %vr1230
	%vr1231 = sext i1 %vr1227 to i64

	; bop vr1225 OR vr1231
	%vr1232 = or i64 %vr1225, %vr1231

	; bop ADR == 53256
	%vr1235 = load i64, i64* %ADR.110
	%vr1236 = bitcast i64 %vr1235 to i64
	%vr1237 = bitcast i64 53256 to i64
	%vr1234 = icmp eq i64 %vr1236, %vr1237
	%vr1238 = sext i1 %vr1234 to i64

	; bop vr1232 OR vr1238
	%vr1239 = or i64 %vr1232, %vr1238

	; bop ADR == 53258
	%vr1242 = load i64, i64* %ADR.110
	%vr1243 = bitcast i64 %vr1242 to i64
	%vr1244 = bitcast i64 53258 to i64
	%vr1241 = icmp eq i64 %vr1243, %vr1244
	%vr1245 = sext i1 %vr1241 to i64

	; bop vr1239 OR vr1245
	%vr1246 = or i64 %vr1239, %vr1245

	; bop ADR == 53260
	%vr1249 = load i64, i64* %ADR.110
	%vr1250 = bitcast i64 %vr1249 to i64
	%vr1251 = bitcast i64 53260 to i64
	%vr1248 = icmp eq i64 %vr1250, %vr1251
	%vr1252 = sext i1 %vr1248 to i64

	; bop vr1246 OR vr1252
	%vr1253 = or i64 %vr1246, %vr1252

	; bop ADR == 53262
	%vr1256 = load i64, i64* %ADR.110
	%vr1257 = bitcast i64 %vr1256 to i64
	%vr1258 = bitcast i64 53262 to i64
	%vr1255 = icmp eq i64 %vr1257, %vr1258
	%vr1259 = sext i1 %vr1255 to i64

	; bop vr1253 OR vr1259
	%vr1260 = or i64 %vr1253, %vr1259

	; branchbop vr1260 == 0
	%vr1261 = icmp eq i64 %vr1260, 0
	br i1 %vr1261, label %.Lt_04E4, label %.Lt_0FCC
.Lt_0FCC:

	; bop SYS_OFFSET + 203
	%vr1263 = load double, double* @SYS_OFFSET
	%vr1262 = fadd double %vr1263, 0x4069600000000000

	; conv vr1262 => vr1264
	%vr1265 = call double @llvm.nearbyint.f64(double %vr1262)
	%vr1264 = fptoui double %vr1265 to i64

	; call POKE64()
	; arg THIS
	%vr1266 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1264
	; arg V
	%vr1267 = load i64, i64* %V.111
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1266, i64 %vr1264, i64 %vr1267 )

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_0FCD:

	; label .Lt_04E4
	br label %.Lt_04E4
.Lt_04E4:

	; bop ADR == 53249
	%vr1270 = load i64, i64* %ADR.110
	%vr1271 = bitcast i64 %vr1270 to i64
	%vr1272 = bitcast i64 53249 to i64
	%vr1269 = icmp eq i64 %vr1271, %vr1272
	%vr1273 = sext i1 %vr1269 to i64

	; bop ADR == 53251
	%vr1276 = load i64, i64* %ADR.110
	%vr1277 = bitcast i64 %vr1276 to i64
	%vr1278 = bitcast i64 53251 to i64
	%vr1275 = icmp eq i64 %vr1277, %vr1278
	%vr1279 = sext i1 %vr1275 to i64

	; bop vr1273 OR vr1279
	%vr1280 = or i64 %vr1273, %vr1279

	; bop ADR == 53253
	%vr1283 = load i64, i64* %ADR.110
	%vr1284 = bitcast i64 %vr1283 to i64
	%vr1285 = bitcast i64 53253 to i64
	%vr1282 = icmp eq i64 %vr1284, %vr1285
	%vr1286 = sext i1 %vr1282 to i64

	; bop vr1280 OR vr1286
	%vr1287 = or i64 %vr1280, %vr1286

	; bop ADR == 53255
	%vr1290 = load i64, i64* %ADR.110
	%vr1291 = bitcast i64 %vr1290 to i64
	%vr1292 = bitcast i64 53255 to i64
	%vr1289 = icmp eq i64 %vr1291, %vr1292
	%vr1293 = sext i1 %vr1289 to i64

	; bop vr1287 OR vr1293
	%vr1294 = or i64 %vr1287, %vr1293

	; bop ADR == 53257
	%vr1297 = load i64, i64* %ADR.110
	%vr1298 = bitcast i64 %vr1297 to i64
	%vr1299 = bitcast i64 53257 to i64
	%vr1296 = icmp eq i64 %vr1298, %vr1299
	%vr1300 = sext i1 %vr1296 to i64

	; bop vr1294 OR vr1300
	%vr1301 = or i64 %vr1294, %vr1300

	; bop ADR == 53259
	%vr1304 = load i64, i64* %ADR.110
	%vr1305 = bitcast i64 %vr1304 to i64
	%vr1306 = bitcast i64 53259 to i64
	%vr1303 = icmp eq i64 %vr1305, %vr1306
	%vr1307 = sext i1 %vr1303 to i64

	; bop vr1301 OR vr1307
	%vr1308 = or i64 %vr1301, %vr1307

	; bop ADR == 53261
	%vr1311 = load i64, i64* %ADR.110
	%vr1312 = bitcast i64 %vr1311 to i64
	%vr1313 = bitcast i64 53261 to i64
	%vr1310 = icmp eq i64 %vr1312, %vr1313
	%vr1314 = sext i1 %vr1310 to i64

	; bop vr1308 OR vr1314
	%vr1315 = or i64 %vr1308, %vr1314

	; bop ADR == 53263
	%vr1318 = load i64, i64* %ADR.110
	%vr1319 = bitcast i64 %vr1318 to i64
	%vr1320 = bitcast i64 53263 to i64
	%vr1317 = icmp eq i64 %vr1319, %vr1320
	%vr1321 = sext i1 %vr1317 to i64

	; bop vr1315 OR vr1321
	%vr1322 = or i64 %vr1315, %vr1321

	; branchbop vr1322 == 0
	%vr1323 = icmp eq i64 %vr1322, 0
	br i1 %vr1323, label %.Lt_04E5, label %.Lt_0FCE
.Lt_0FCE:

	; bop SYS_OFFSET + 204
	%vr1325 = load double, double* @SYS_OFFSET
	%vr1324 = fadd double %vr1325, 0x4069800000000000

	; conv vr1324 => vr1326
	%vr1327 = call double @llvm.nearbyint.f64(double %vr1324)
	%vr1326 = fptoui double %vr1327 to i64

	; call POKE64()
	; arg THIS
	%vr1328 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1326
	; arg V
	%vr1329 = load i64, i64* %V.111
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1328, i64 %vr1326, i64 %vr1329 )

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_0FCF:

	; label .Lt_04E5
	br label %.Lt_04E5
.Lt_04E5:

	; branchbop ADR <> 53269
	%vr1332 = load i64, i64* %ADR.110
	%vr1331 = icmp ne i64 %vr1332, 53269
	br i1 %vr1331, label %.Lt_04E6, label %.Lt_0FD0
.Lt_0FD0:

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_0FD1:

	; label .Lt_04E6
	br label %.Lt_04E6
.Lt_04E6:

	; branchbop ADR <> 53280
	%vr1336 = load i64, i64* %ADR.110
	%vr1335 = icmp ne i64 %vr1336, 53280
	br i1 %vr1335, label %.Lt_04E7, label %.Lt_0FD2
.Lt_0FD2:

	; branchbop V <> 0
	%vr1340 = load i64, i64* %V.111
	%vr1339 = icmp ne i64 %vr1340, 0
	br i1 %vr1339, label %.Lt_04E9, label %.Lt_0FD3
.Lt_0FD3:

	; label .Lt_04EA
	br label %.Lt_04EA
.Lt_04EA:

	; call fb_Color()
	; arg -16777216
	; arg 0
	; arg 2
	%vr1342 = call i32 @fb_Color( i32 -16777216, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FD4:

	; label .Lt_04E9
	br label %.Lt_04E9
.Lt_04E9:

	; branchbop V <> 1
	%vr1348 = load i64, i64* %V.111
	%vr1347 = icmp ne i64 %vr1348, 1
	br i1 %vr1347, label %.Lt_04EB, label %.Lt_0FD5
.Lt_0FD5:

	; label .Lt_04EC
	br label %.Lt_04EC
.Lt_04EC:

	; call fb_Color()
	; arg -16777046
	; arg 0
	; arg 2
	%vr1350 = call i32 @fb_Color( i32 -16777046, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FD6:

	; label .Lt_04EB
	br label %.Lt_04EB
.Lt_04EB:

	; branchbop V <> 2
	%vr1356 = load i64, i64* %V.111
	%vr1355 = icmp ne i64 %vr1356, 2
	br i1 %vr1355, label %.Lt_04ED, label %.Lt_0FD7
.Lt_0FD7:

	; label .Lt_04EE
	br label %.Lt_04EE
.Lt_04EE:

	; call fb_Color()
	; arg -16733696
	; arg 0
	; arg 2
	%vr1358 = call i32 @fb_Color( i32 -16733696, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FD8:

	; label .Lt_04ED
	br label %.Lt_04ED
.Lt_04ED:

	; branchbop V <> 3
	%vr1364 = load i64, i64* %V.111
	%vr1363 = icmp ne i64 %vr1364, 3
	br i1 %vr1363, label %.Lt_04EF, label %.Lt_0FD9
.Lt_0FD9:

	; label .Lt_04F0
	br label %.Lt_04F0
.Lt_04F0:

	; call fb_Color()
	; arg -16733526
	; arg 0
	; arg 2
	%vr1366 = call i32 @fb_Color( i32 -16733526, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FDA:

	; label .Lt_04EF
	br label %.Lt_04EF
.Lt_04EF:

	; branchbop V <> 4
	%vr1372 = load i64, i64* %V.111
	%vr1371 = icmp ne i64 %vr1372, 4
	br i1 %vr1371, label %.Lt_04F1, label %.Lt_0FDB
.Lt_0FDB:

	; label .Lt_04F2
	br label %.Lt_04F2
.Lt_04F2:

	; call fb_Color()
	; arg -5636096
	; arg 0
	; arg 2
	%vr1374 = call i32 @fb_Color( i32 -5636096, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FDC:

	; label .Lt_04F1
	br label %.Lt_04F1
.Lt_04F1:

	; branchbop V <> 5
	%vr1380 = load i64, i64* %V.111
	%vr1379 = icmp ne i64 %vr1380, 5
	br i1 %vr1379, label %.Lt_04F3, label %.Lt_0FDD
.Lt_0FDD:

	; label .Lt_04F4
	br label %.Lt_04F4
.Lt_04F4:

	; call fb_Color()
	; arg -5635926
	; arg 0
	; arg 2
	%vr1382 = call i32 @fb_Color( i32 -5635926, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FDE:

	; label .Lt_04F3
	br label %.Lt_04F3
.Lt_04F3:

	; branchbop V <> 6
	%vr1388 = load i64, i64* %V.111
	%vr1387 = icmp ne i64 %vr1388, 6
	br i1 %vr1387, label %.Lt_04F5, label %.Lt_0FDF
.Lt_0FDF:

	; label .Lt_04F6
	br label %.Lt_04F6
.Lt_04F6:

	; call fb_Color()
	; arg -5614336
	; arg 0
	; arg 2
	%vr1390 = call i32 @fb_Color( i32 -5614336, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FE0:

	; label .Lt_04F5
	br label %.Lt_04F5
.Lt_04F5:

	; branchbop V <> 7
	%vr1396 = load i64, i64* %V.111
	%vr1395 = icmp ne i64 %vr1396, 7
	br i1 %vr1395, label %.Lt_04F7, label %.Lt_0FE1
.Lt_0FE1:

	; label .Lt_04F8
	br label %.Lt_04F8
.Lt_04F8:

	; call fb_Color()
	; arg -5592406
	; arg 0
	; arg 2
	%vr1398 = call i32 @fb_Color( i32 -5592406, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FE2:

	; label .Lt_04F7
	br label %.Lt_04F7
.Lt_04F7:

	; branchbop V <> 8
	%vr1404 = load i64, i64* %V.111
	%vr1403 = icmp ne i64 %vr1404, 8
	br i1 %vr1403, label %.Lt_04F9, label %.Lt_0FE3
.Lt_0FE3:

	; label .Lt_04FA
	br label %.Lt_04FA
.Lt_04FA:

	; call fb_Color()
	; arg -11184811
	; arg 0
	; arg 2
	%vr1406 = call i32 @fb_Color( i32 -11184811, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FE4:

	; label .Lt_04F9
	br label %.Lt_04F9
.Lt_04F9:

	; branchbop V <> 9
	%vr1412 = load i64, i64* %V.111
	%vr1411 = icmp ne i64 %vr1412, 9
	br i1 %vr1411, label %.Lt_04FB, label %.Lt_0FE5
.Lt_0FE5:

	; label .Lt_04FC
	br label %.Lt_04FC
.Lt_04FC:

	; call fb_Color()
	; arg -11184641
	; arg 0
	; arg 2
	%vr1414 = call i32 @fb_Color( i32 -11184641, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FE6:

	; label .Lt_04FB
	br label %.Lt_04FB
.Lt_04FB:

	; branchbop V <> 10
	%vr1420 = load i64, i64* %V.111
	%vr1419 = icmp ne i64 %vr1420, 10
	br i1 %vr1419, label %.Lt_04FD, label %.Lt_0FE7
.Lt_0FE7:

	; label .Lt_04FE
	br label %.Lt_04FE
.Lt_04FE:

	; call fb_Color()
	; arg -11141291
	; arg 0
	; arg 2
	%vr1422 = call i32 @fb_Color( i32 -11141291, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FE8:

	; label .Lt_04FD
	br label %.Lt_04FD
.Lt_04FD:

	; branchbop V <> 11
	%vr1428 = load i64, i64* %V.111
	%vr1427 = icmp ne i64 %vr1428, 11
	br i1 %vr1427, label %.Lt_04FF, label %.Lt_0FE9
.Lt_0FE9:

	; label .Lt_0500
	br label %.Lt_0500
.Lt_0500:

	; call fb_Color()
	; arg -11141121
	; arg 0
	; arg 2
	%vr1430 = call i32 @fb_Color( i32 -11141121, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FEA:

	; label .Lt_04FF
	br label %.Lt_04FF
.Lt_04FF:

	; branchbop V <> 12
	%vr1436 = load i64, i64* %V.111
	%vr1435 = icmp ne i64 %vr1436, 12
	br i1 %vr1435, label %.Lt_0501, label %.Lt_0FEB
.Lt_0FEB:

	; label .Lt_0502
	br label %.Lt_0502
.Lt_0502:

	; call fb_Color()
	; arg -43691
	; arg 0
	; arg 2
	%vr1438 = call i32 @fb_Color( i32 -43691, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FEC:

	; label .Lt_0501
	br label %.Lt_0501
.Lt_0501:

	; branchbop V <> 13
	%vr1444 = load i64, i64* %V.111
	%vr1443 = icmp ne i64 %vr1444, 13
	br i1 %vr1443, label %.Lt_0503, label %.Lt_0FED
.Lt_0FED:

	; label .Lt_0504
	br label %.Lt_0504
.Lt_0504:

	; call fb_Color()
	; arg -43521
	; arg 0
	; arg 2
	%vr1446 = call i32 @fb_Color( i32 -43521, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FEE:

	; label .Lt_0503
	br label %.Lt_0503
.Lt_0503:

	; branchbop V <> 14
	%vr1452 = load i64, i64* %V.111
	%vr1451 = icmp ne i64 %vr1452, 14
	br i1 %vr1451, label %.Lt_0505, label %.Lt_0FEF
.Lt_0FEF:

	; label .Lt_0506
	br label %.Lt_0506
.Lt_0506:

	; call fb_Color()
	; arg -171
	; arg 0
	; arg 2
	%vr1454 = call i32 @fb_Color( i32 -171, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FF0:

	; label .Lt_0505
	br label %.Lt_0505
.Lt_0505:

	; branchbop V <> 15
	%vr1460 = load i64, i64* %V.111
	%vr1459 = icmp ne i64 %vr1460, 15
	br i1 %vr1459, label %.Lt_0507, label %.Lt_0FF1
.Lt_0FF1:

	; label .Lt_0508
	br label %.Lt_0508
.Lt_0508:

	; call fb_Color()
	; arg -1
	; arg 0
	; arg 2
	%vr1462 = call i32 @fb_Color( i32 -1, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FF2:

	; label .Lt_0507
	br label %.Lt_0507
.Lt_0507:

	; branchbop V <> 16
	%vr1468 = load i64, i64* %V.111
	%vr1467 = icmp ne i64 %vr1468, 16
	br i1 %vr1467, label %.Lt_0509, label %.Lt_0FF3
.Lt_0FF3:

	; label .Lt_050A
	br label %.Lt_050A
.Lt_050A:

	; call fb_Color()
	; arg -20480
	; arg 0
	; arg 2
	%vr1470 = call i32 @fb_Color( i32 -20480, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FF4:

	; label .Lt_0509
	br label %.Lt_0509
.Lt_0509:

	; branchbop V <> 17
	%vr1476 = load i64, i64* %V.111
	%vr1475 = icmp ne i64 %vr1476, 17
	br i1 %vr1475, label %.Lt_050B, label %.Lt_0FF5
.Lt_0FF5:

	; label .Lt_050C
	br label %.Lt_050C
.Lt_050C:

	; call fb_Color()
	; arg -13312
	; arg 0
	; arg 2
	%vr1478 = call i32 @fb_Color( i32 -13312, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FF6:

	; label .Lt_050B
	br label %.Lt_050B
.Lt_050B:

	; branchbop V <> 18
	%vr1484 = load i64, i64* %V.111
	%vr1483 = icmp ne i64 %vr1484, 18
	br i1 %vr1483, label %.Lt_050D, label %.Lt_0FF7
.Lt_0FF7:

	; label .Lt_050E
	br label %.Lt_050E
.Lt_050E:

	; call fb_Color()
	; arg -13369600
	; arg 0
	; arg 2
	%vr1486 = call i32 @fb_Color( i32 -13369600, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FF8:

	; label .Lt_050D
	br label %.Lt_050D
.Lt_050D:

	; branchbop V <> 19
	%vr1492 = load i64, i64* %V.111
	%vr1491 = icmp ne i64 %vr1492, 19
	br i1 %vr1491, label %.Lt_050F, label %.Lt_0FF9
.Lt_0FF9:

	; label .Lt_0510
	br label %.Lt_0510
.Lt_0510:

	; call fb_Color()
	; arg -13369549
	; arg 0
	; arg 2
	%vr1494 = call i32 @fb_Color( i32 -13369549, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FFA:

	; label .Lt_050F
	br label %.Lt_050F
.Lt_050F:

	; branchbop V <> 20
	%vr1500 = load i64, i64* %V.111
	%vr1499 = icmp ne i64 %vr1500, 20
	br i1 %vr1499, label %.Lt_0511, label %.Lt_0FFB
.Lt_0FFB:

	; label .Lt_0512
	br label %.Lt_0512
.Lt_0512:

	; call fb_Color()
	; arg -16711885
	; arg 0
	; arg 2
	%vr1502 = call i32 @fb_Color( i32 -16711885, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FFC:

	; label .Lt_0511
	br label %.Lt_0511
.Lt_0511:

	; branchbop V <> 21
	%vr1508 = load i64, i64* %V.111
	%vr1507 = icmp ne i64 %vr1508, 21
	br i1 %vr1507, label %.Lt_0513, label %.Lt_0FFD
.Lt_0FFD:

	; label .Lt_0514
	br label %.Lt_0514
.Lt_0514:

	; call fb_Color()
	; arg -10027162
	; arg 0
	; arg 2
	%vr1510 = call i32 @fb_Color( i32 -10027162, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_0FFE:

	; label .Lt_0513
	br label %.Lt_0513
.Lt_0513:

	; branchbop V <> 22
	%vr1516 = load i64, i64* %V.111
	%vr1515 = icmp ne i64 %vr1516, 22
	br i1 %vr1515, label %.Lt_0515, label %.Lt_0FFF
.Lt_0FFF:

	; label .Lt_0516
	br label %.Lt_0516
.Lt_0516:

	; call fb_Color()
	; arg -16711834
	; arg 0
	; arg 2
	%vr1518 = call i32 @fb_Color( i32 -16711834, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1000:

	; label .Lt_0515
	br label %.Lt_0515
.Lt_0515:

	; branchbop V <> 23
	%vr1524 = load i64, i64* %V.111
	%vr1523 = icmp ne i64 %vr1524, 23
	br i1 %vr1523, label %.Lt_0517, label %.Lt_1001
.Lt_1001:

	; label .Lt_0518
	br label %.Lt_0518
.Lt_0518:

	; call fb_Color()
	; arg -14145496
	; arg 0
	; arg 2
	%vr1526 = call i32 @fb_Color( i32 -14145496, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1002:

	; label .Lt_0517
	br label %.Lt_0517
.Lt_0517:

	; branchbop V <> 24
	%vr1532 = load i64, i64* %V.111
	%vr1531 = icmp ne i64 %vr1532, 24
	br i1 %vr1531, label %.Lt_0519, label %.Lt_1003
.Lt_1003:

	; label .Lt_051A
	br label %.Lt_051A
.Lt_051A:

	; call fb_Color()
	; arg -3407872
	; arg 0
	; arg 2
	%vr1534 = call i32 @fb_Color( i32 -3407872, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1004:

	; label .Lt_0519
	br label %.Lt_0519
.Lt_0519:

	; branchbop V <> 25
	%vr1540 = load i64, i64* %V.111
	%vr1539 = icmp ne i64 %vr1540, 25
	br i1 %vr1539, label %.Lt_051B, label %.Lt_1005
.Lt_1005:

	; label .Lt_051C
	br label %.Lt_051C
.Lt_051C:

	; call fb_Color()
	; arg -6029312
	; arg 0
	; arg 2
	%vr1542 = call i32 @fb_Color( i32 -6029312, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1006:

	; label .Lt_051B
	br label %.Lt_051B
.Lt_051B:

	; branchbop V <> 26
	%vr1548 = load i64, i64* %V.111
	%vr1547 = icmp ne i64 %vr1548, 26
	br i1 %vr1547, label %.Lt_051D, label %.Lt_1007
.Lt_1007:

	; label .Lt_051E
	br label %.Lt_051E
.Lt_051E:

	; call fb_Color()
	; arg -217282
	; arg 0
	; arg 2
	%vr1550 = call i32 @fb_Color( i32 -217282, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1008:

	; label .Lt_051D
	br label %.Lt_051D
.Lt_051D:

	; branchbop V <> 27
	%vr1556 = load i64, i64* %V.111
	%vr1555 = icmp ne i64 %vr1556, 27
	br i1 %vr1555, label %.Lt_051F, label %.Lt_1009
.Lt_1009:

	; label .Lt_0520
	br label %.Lt_0520
.Lt_0520:

	; call fb_Color()
	; arg -689920
	; arg 0
	; arg 2
	%vr1558 = call i32 @fb_Color( i32 -689920, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_100A:

	; label .Lt_051F
	br label %.Lt_051F
.Lt_051F:

	; branchbop V <> 28
	%vr1564 = load i64, i64* %V.111
	%vr1563 = icmp ne i64 %vr1564, 28
	br i1 %vr1563, label %.Lt_0521, label %.Lt_100B
.Lt_100B:

	; label .Lt_0522
	br label %.Lt_0522
.Lt_0522:

	; call fb_Color()
	; arg -3253248
	; arg 0
	; arg 2
	%vr1566 = call i32 @fb_Color( i32 -3253248, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_100C:

	; label .Lt_0521
	br label %.Lt_0521
.Lt_0521:

	; branchbop V <> 29
	%vr1572 = load i64, i64* %V.111
	%vr1571 = icmp ne i64 %vr1572, 29
	br i1 %vr1571, label %.Lt_0523, label %.Lt_100D
.Lt_100D:

	; label .Lt_0524
	br label %.Lt_0524
.Lt_0524:

	; call fb_Color()
	; arg -202417
	; arg 0
	; arg 2
	%vr1574 = call i32 @fb_Color( i32 -202417, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_100E:

	; label .Lt_0523
	br label %.Lt_0523
.Lt_0523:

	; branchbop V <> 30
	%vr1580 = load i64, i64* %V.111
	%vr1579 = icmp ne i64 %vr1580, 30
	br i1 %vr1579, label %.Lt_0525, label %.Lt_100F
.Lt_100F:

	; label .Lt_0526
	br label %.Lt_0526
.Lt_0526:

	; call fb_Color()
	; arg -1190912
	; arg 0
	; arg 2
	%vr1582 = call i32 @fb_Color( i32 -1190912, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1010:

	; label .Lt_0525
	br label %.Lt_0525
.Lt_0525:

	; branchbop V <> 32
	%vr1588 = load i64, i64* %V.111
	%vr1587 = icmp ne i64 %vr1588, 32
	br i1 %vr1587, label %.Lt_0527, label %.Lt_1011
.Lt_1011:

	; label .Lt_0528
	br label %.Lt_0528
.Lt_0528:

	; call fb_Color()
	; arg -3891200
	; arg 0
	; arg 2
	%vr1590 = call i32 @fb_Color( i32 -3891200, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1012:

	; label .Lt_0527
	br label %.Lt_0527
.Lt_0527:

	; branchbop V <> 33
	%vr1596 = load i64, i64* %V.111
	%vr1595 = icmp ne i64 %vr1596, 33
	br i1 %vr1595, label %.Lt_0529, label %.Lt_1013
.Lt_1013:

	; label .Lt_052A
	br label %.Lt_052A
.Lt_052A:

	; call fb_Color()
	; arg -4529612
	; arg 0
	; arg 2
	%vr1598 = call i32 @fb_Color( i32 -4529612, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1014:

	; label .Lt_0529
	br label %.Lt_0529
.Lt_0529:

	; branchbop V <> 34
	%vr1604 = load i64, i64* %V.111
	%vr1603 = icmp ne i64 %vr1604, 34
	br i1 %vr1603, label %.Lt_052B, label %.Lt_1015
.Lt_1015:

	; label .Lt_052C
	br label %.Lt_052C
.Lt_052C:

	; call fb_Color()
	; arg -9186794
	; arg 0
	; arg 2
	%vr1606 = call i32 @fb_Color( i32 -9186794, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1016:

	; label .Lt_052B
	br label %.Lt_052B
.Lt_052B:

	; branchbop V <> 35
	%vr1612 = load i64, i64* %V.111
	%vr1611 = icmp ne i64 %vr1612, 35
	br i1 %vr1611, label %.Lt_052D, label %.Lt_1017
.Lt_1017:

	; label .Lt_052E
	br label %.Lt_052E
.Lt_052E:

	; call fb_Color()
	; arg -11625978
	; arg 0
	; arg 2
	%vr1614 = call i32 @fb_Color( i32 -11625978, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1018:

	; label .Lt_052D
	br label %.Lt_052D
.Lt_052D:

	; branchbop V <> 36
	%vr1620 = load i64, i64* %V.111
	%vr1619 = icmp ne i64 %vr1620, 36
	br i1 %vr1619, label %.Lt_052F, label %.Lt_1019
.Lt_1019:

	; label .Lt_0530
	br label %.Lt_0530
.Lt_0530:

	; call fb_Color()
	; arg -9265201
	; arg 0
	; arg 2
	%vr1622 = call i32 @fb_Color( i32 -9265201, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_101A:

	; label .Lt_052F
	br label %.Lt_052F
.Lt_052F:

	; branchbop V <> 37
	%vr1628 = load i64, i64* %V.111
	%vr1627 = icmp ne i64 %vr1628, 37
	br i1 %vr1627, label %.Lt_0531, label %.Lt_101B
.Lt_101B:

	; label .Lt_0532
	br label %.Lt_0532
.Lt_0532:

	; call fb_Color()
	; arg -13343324
	; arg 0
	; arg 2
	%vr1630 = call i32 @fb_Color( i32 -13343324, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_101C:

	; label .Lt_0531
	br label %.Lt_0531
.Lt_0531:

	; branchbop V <> 38
	%vr1636 = load i64, i64* %V.111
	%vr1635 = icmp ne i64 %vr1636, 38
	br i1 %vr1635, label %.Lt_0533, label %.Lt_101D
.Lt_101D:

	; label .Lt_0534
	br label %.Lt_0534
.Lt_0534:

	; call fb_Color()
	; arg -14660985
	; arg 0
	; arg 2
	%vr1638 = call i32 @fb_Color( i32 -14660985, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_101E:

	; label .Lt_0533
	br label %.Lt_0533
.Lt_0533:

	; branchbop V <> 39
	%vr1644 = load i64, i64* %V.111
	%vr1643 = icmp ne i64 %vr1644, 39
	br i1 %vr1643, label %.Lt_0535, label %.Lt_101F
.Lt_101F:

	; label .Lt_0536
	br label %.Lt_0536
.Lt_0536:

	; call fb_Color()
	; arg -5406808
	; arg 0
	; arg 2
	%vr1646 = call i32 @fb_Color( i32 -5406808, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1020:

	; label .Lt_0535
	br label %.Lt_0535
.Lt_0535:

	; branchbop V <> 40
	%vr1652 = load i64, i64* %V.111
	%vr1651 = icmp ne i64 %vr1652, 40
	br i1 %vr1651, label %.Lt_0537, label %.Lt_1021
.Lt_1021:

	; label .Lt_0538
	br label %.Lt_0538
.Lt_0538:

	; call fb_Color()
	; arg -9088899
	; arg 0
	; arg 2
	%vr1654 = call i32 @fb_Color( i32 -9088899, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1022:

	; label .Lt_0537
	br label %.Lt_0537
.Lt_0537:

	; branchbop V <> 41
	%vr1660 = load i64, i64* %V.111
	%vr1659 = icmp ne i64 %vr1660, 41
	br i1 %vr1659, label %.Lt_0539, label %.Lt_1023
.Lt_1023:

	; label .Lt_053A
	br label %.Lt_053A
.Lt_053A:

	; call fb_Color()
	; arg -10734234
	; arg 0
	; arg 2
	%vr1662 = call i32 @fb_Color( i32 -10734234, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1024:

	; label .Lt_0539
	br label %.Lt_0539
.Lt_0539:

	; branchbop V <> 42
	%vr1668 = load i64, i64* %V.111
	%vr1667 = icmp ne i64 %vr1668, 42
	br i1 %vr1667, label %.Lt_053B, label %.Lt_1025
.Lt_1025:

	; label .Lt_053C
	br label %.Lt_053C
.Lt_053C:

	; call fb_Color()
	; arg -1459858
	; arg 0
	; arg 2
	%vr1670 = call i32 @fb_Color( i32 -1459858, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1026:

	; label .Lt_053B
	br label %.Lt_053B
.Lt_053B:

	; branchbop V <> 43
	%vr1676 = load i64, i64* %V.111
	%vr1675 = icmp ne i64 %vr1676, 43
	br i1 %vr1675, label %.Lt_053D, label %.Lt_1027
.Lt_1027:

	; label .Lt_053E
	br label %.Lt_053E
.Lt_053E:

	; call fb_Color()
	; arg -4096751
	; arg 0
	; arg 2
	%vr1678 = call i32 @fb_Color( i32 -4096751, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1028:

	; label .Lt_053D
	br label %.Lt_053D
.Lt_053D:

	; branchbop V <> 44
	%vr1684 = load i64, i64* %V.111
	%vr1683 = icmp ne i64 %vr1684, 44
	br i1 %vr1683, label %.Lt_053F, label %.Lt_1029
.Lt_1029:

	; label .Lt_0540
	br label %.Lt_0540
.Lt_0540:

	; call fb_Color()
	; arg -7382782
	; arg 0
	; arg 2
	%vr1686 = call i32 @fb_Color( i32 -7382782, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_102A:

	; label .Lt_053F
	br label %.Lt_053F
.Lt_053F:

	; branchbop V <> 45
	%vr1692 = load i64, i64* %V.111
	%vr1691 = icmp ne i64 %vr1692, 45
	br i1 %vr1691, label %.Lt_0541, label %.Lt_102B
.Lt_102B:

	; label .Lt_0542
	br label %.Lt_0542
.Lt_0542:

	; call fb_Color()
	; arg -7828859
	; arg 0
	; arg 2
	%vr1694 = call i32 @fb_Color( i32 -7828859, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_102C:

	; label .Lt_0541
	br label %.Lt_0541
.Lt_0541:

	; branchbop V <> 46
	%vr1700 = load i64, i64* %V.111
	%vr1699 = icmp ne i64 %vr1700, 46
	br i1 %vr1699, label %.Lt_0543, label %.Lt_102D
.Lt_102D:

	; label .Lt_0544
	br label %.Lt_0544
.Lt_0544:

	; call fb_Color()
	; arg -11184301
	; arg 0
	; arg 2
	%vr1702 = call i32 @fb_Color( i32 -11184301, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_102E:

	; label .Lt_0543
	br label %.Lt_0543
.Lt_0543:

	; branchbop V <> 47
	%vr1708 = load i64, i64* %V.111
	%vr1707 = icmp ne i64 %vr1708, 47
	br i1 %vr1707, label %.Lt_0545, label %.Lt_102F
.Lt_102F:

	; label .Lt_0546
	br label %.Lt_0546
.Lt_0546:

	; call fb_Color()
	; arg -13749194
	; arg 0
	; arg 2
	%vr1710 = call i32 @fb_Color( i32 -13749194, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1030:

	; label .Lt_0545
	br label %.Lt_0545
.Lt_0545:

	; branchbop V <> 48
	%vr1716 = load i64, i64* %V.111
	%vr1715 = icmp ne i64 %vr1716, 48
	br i1 %vr1715, label %.Lt_0547, label %.Lt_1031
.Lt_1031:

	; label .Lt_0548
	br label %.Lt_0548
.Lt_0548:

	; call fb_Color()
	; arg -1118484
	; arg 0
	; arg 2
	%vr1718 = call i32 @fb_Color( i32 -1118484, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1032:

	; label .Lt_0547
	br label %.Lt_0547
.Lt_0547:

	; branchbop V <> 49
	%vr1724 = load i64, i64* %V.111
	%vr1723 = icmp ne i64 %vr1724, 49
	br i1 %vr1723, label %.Lt_0549, label %.Lt_1033
.Lt_1033:

	; label .Lt_054A
	br label %.Lt_054A
.Lt_054A:

	; call fb_Color()
	; arg -2893873
	; arg 0
	; arg 2
	%vr1726 = call i32 @fb_Color( i32 -2893873, i32 0, i32 2 )

	; goto .Lt_04E8
	br label %.Lt_04E8
.Lt_1034:

	; label .Lt_0549
	br label %.Lt_0549
.Lt_0549:

	; branchbop V <> 50
	%vr1732 = load i64, i64* %V.111
	%vr1731 = icmp ne i64 %vr1732, 50
	br i1 %vr1731, label %.Lt_054B, label %.Lt_1035
.Lt_1035:

	; label .Lt_054C
	br label %.Lt_054C
.Lt_054C:

	; call fb_Color()
	; arg -4538954
	; arg 0
	; arg 2
	%vr1734 = call i32 @fb_Color( i32 -4538954, i32 0, i32 2 )

	; label .Lt_054B
	br label %.Lt_054B
.Lt_054B:

	; label .Lt_04E8
	br label %.Lt_04E8
.Lt_04E8:

	; call fb_GfxLine()
	; arg BGIMAGE
	%vr1738 = load i8*, i8** @BGIMAGE
	; arg 0
	%vr1739 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr1740 = fpext float 0x0000000000000000 to float
	; arg 1919
	%vr1741 = fpext float 0x409DFC0000000000 to float
	; arg 1079
	%vr1742 = fpext float 0x4090DC0000000000 to float
	; arg 0
	; arg 2
	; arg 65535
	; arg -2147483648
	call void @fb_GfxLine( i8* %vr1738, float %vr1739, float %vr1740, float %vr1741, float %vr1742, i32 0, i32 2, i32 65535, i32 -2147483648 )

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_1036:

	; label .Lt_04E7
	br label %.Lt_04E7
.Lt_04E7:

	; bop ADR == 53281
	%vr1749 = load i64, i64* %ADR.110
	%vr1750 = bitcast i64 %vr1749 to i64
	%vr1751 = bitcast i64 53281 to i64
	%vr1748 = icmp eq i64 %vr1750, %vr1751
	%vr1752 = sext i1 %vr1748 to i64

	; bop ADR == 53282
	%vr1755 = load i64, i64* %ADR.110
	%vr1756 = bitcast i64 %vr1755 to i64
	%vr1757 = bitcast i64 53282 to i64
	%vr1754 = icmp eq i64 %vr1756, %vr1757
	%vr1758 = sext i1 %vr1754 to i64

	; bop vr1752 OR vr1758
	%vr1759 = or i64 %vr1752, %vr1758

	; bop ADR == 53283
	%vr1762 = load i64, i64* %ADR.110
	%vr1763 = bitcast i64 %vr1762 to i64
	%vr1764 = bitcast i64 53283 to i64
	%vr1761 = icmp eq i64 %vr1763, %vr1764
	%vr1765 = sext i1 %vr1761 to i64

	; bop vr1759 OR vr1765
	%vr1766 = or i64 %vr1759, %vr1765

	; bop ADR == 53284
	%vr1769 = load i64, i64* %ADR.110
	%vr1770 = bitcast i64 %vr1769 to i64
	%vr1771 = bitcast i64 53284 to i64
	%vr1768 = icmp eq i64 %vr1770, %vr1771
	%vr1772 = sext i1 %vr1768 to i64

	; bop vr1766 OR vr1772
	%vr1773 = or i64 %vr1766, %vr1772

	; branchbop vr1773 == 0
	%vr1774 = icmp eq i64 %vr1773, 0
	br i1 %vr1774, label %.Lt_054D, label %.Lt_1037
.Lt_1037:

	; branchbop V <> 0
	%vr1777 = load i64, i64* %V.111
	%vr1776 = icmp ne i64 %vr1777, 0
	br i1 %vr1776, label %.Lt_054F, label %.Lt_1038
.Lt_1038:

	; label .Lt_0550
	br label %.Lt_0550
.Lt_0550:

	; bop SYS_OFFSET + 6
	%vr1780 = load double, double* @SYS_OFFSET
	%vr1779 = fadd double %vr1780, 0x4018000000000000

	; conv vr1779 => vr1781
	%vr1782 = call double @llvm.nearbyint.f64(double %vr1779)
	%vr1781 = fptoui double %vr1782 to i64

	; call POKE64()
	; arg THIS
	%vr1783 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1781
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1783, i64 %vr1781, i64 0 )

	; bop SYS_OFFSET + 7
	%vr1785 = load double, double* @SYS_OFFSET
	%vr1784 = fadd double %vr1785, 0x401C000000000000

	; conv vr1784 => vr1786
	%vr1787 = call double @llvm.nearbyint.f64(double %vr1784)
	%vr1786 = fptoui double %vr1787 to i64

	; call POKE64()
	; arg THIS
	%vr1788 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1786
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1788, i64 %vr1786, i64 0 )

	; bop SYS_OFFSET + 8
	%vr1790 = load double, double* @SYS_OFFSET
	%vr1789 = fadd double %vr1790, 0x4020000000000000

	; conv vr1789 => vr1791
	%vr1792 = call double @llvm.nearbyint.f64(double %vr1789)
	%vr1791 = fptoui double %vr1792 to i64

	; call POKE64()
	; arg THIS
	%vr1793 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1791
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1793, i64 %vr1791, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1039:

	; label .Lt_054F
	br label %.Lt_054F
.Lt_054F:

	; branchbop V <> 1
	%vr1796 = load i64, i64* %V.111
	%vr1795 = icmp ne i64 %vr1796, 1
	br i1 %vr1795, label %.Lt_0551, label %.Lt_103A
.Lt_103A:

	; label .Lt_0552
	br label %.Lt_0552
.Lt_0552:

	; bop SYS_OFFSET + 6
	%vr1799 = load double, double* @SYS_OFFSET
	%vr1798 = fadd double %vr1799, 0x4018000000000000

	; conv vr1798 => vr1800
	%vr1801 = call double @llvm.nearbyint.f64(double %vr1798)
	%vr1800 = fptoui double %vr1801 to i64

	; call POKE64()
	; arg THIS
	%vr1802 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1800
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1802, i64 %vr1800, i64 0 )

	; bop SYS_OFFSET + 7
	%vr1804 = load double, double* @SYS_OFFSET
	%vr1803 = fadd double %vr1804, 0x401C000000000000

	; conv vr1803 => vr1805
	%vr1806 = call double @llvm.nearbyint.f64(double %vr1803)
	%vr1805 = fptoui double %vr1806 to i64

	; call POKE64()
	; arg THIS
	%vr1807 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1805
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1807, i64 %vr1805, i64 0 )

	; bop SYS_OFFSET + 8
	%vr1809 = load double, double* @SYS_OFFSET
	%vr1808 = fadd double %vr1809, 0x4020000000000000

	; conv vr1808 => vr1810
	%vr1811 = call double @llvm.nearbyint.f64(double %vr1808)
	%vr1810 = fptoui double %vr1811 to i64

	; call POKE64()
	; arg THIS
	%vr1812 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1810
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1812, i64 %vr1810, i64 170 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_103B:

	; label .Lt_0551
	br label %.Lt_0551
.Lt_0551:

	; branchbop V <> 2
	%vr1815 = load i64, i64* %V.111
	%vr1814 = icmp ne i64 %vr1815, 2
	br i1 %vr1814, label %.Lt_0553, label %.Lt_103C
.Lt_103C:

	; label .Lt_0554
	br label %.Lt_0554
.Lt_0554:

	; bop SYS_OFFSET + 6
	%vr1818 = load double, double* @SYS_OFFSET
	%vr1817 = fadd double %vr1818, 0x4018000000000000

	; conv vr1817 => vr1819
	%vr1820 = call double @llvm.nearbyint.f64(double %vr1817)
	%vr1819 = fptoui double %vr1820 to i64

	; call POKE64()
	; arg THIS
	%vr1821 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1819
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1821, i64 %vr1819, i64 0 )

	; bop SYS_OFFSET + 7
	%vr1823 = load double, double* @SYS_OFFSET
	%vr1822 = fadd double %vr1823, 0x401C000000000000

	; conv vr1822 => vr1824
	%vr1825 = call double @llvm.nearbyint.f64(double %vr1822)
	%vr1824 = fptoui double %vr1825 to i64

	; call POKE64()
	; arg THIS
	%vr1826 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1824
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1826, i64 %vr1824, i64 170 )

	; bop SYS_OFFSET + 8
	%vr1828 = load double, double* @SYS_OFFSET
	%vr1827 = fadd double %vr1828, 0x4020000000000000

	; conv vr1827 => vr1829
	%vr1830 = call double @llvm.nearbyint.f64(double %vr1827)
	%vr1829 = fptoui double %vr1830 to i64

	; call POKE64()
	; arg THIS
	%vr1831 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1829
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1831, i64 %vr1829, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_103D:

	; label .Lt_0553
	br label %.Lt_0553
.Lt_0553:

	; branchbop V <> 3
	%vr1834 = load i64, i64* %V.111
	%vr1833 = icmp ne i64 %vr1834, 3
	br i1 %vr1833, label %.Lt_0555, label %.Lt_103E
.Lt_103E:

	; label .Lt_0556
	br label %.Lt_0556
.Lt_0556:

	; bop SYS_OFFSET + 6
	%vr1837 = load double, double* @SYS_OFFSET
	%vr1836 = fadd double %vr1837, 0x4018000000000000

	; conv vr1836 => vr1838
	%vr1839 = call double @llvm.nearbyint.f64(double %vr1836)
	%vr1838 = fptoui double %vr1839 to i64

	; call POKE64()
	; arg THIS
	%vr1840 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1838
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1840, i64 %vr1838, i64 0 )

	; bop SYS_OFFSET + 7
	%vr1842 = load double, double* @SYS_OFFSET
	%vr1841 = fadd double %vr1842, 0x401C000000000000

	; conv vr1841 => vr1843
	%vr1844 = call double @llvm.nearbyint.f64(double %vr1841)
	%vr1843 = fptoui double %vr1844 to i64

	; call POKE64()
	; arg THIS
	%vr1845 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1843
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1845, i64 %vr1843, i64 170 )

	; bop SYS_OFFSET + 8
	%vr1847 = load double, double* @SYS_OFFSET
	%vr1846 = fadd double %vr1847, 0x4020000000000000

	; conv vr1846 => vr1848
	%vr1849 = call double @llvm.nearbyint.f64(double %vr1846)
	%vr1848 = fptoui double %vr1849 to i64

	; call POKE64()
	; arg THIS
	%vr1850 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1848
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1850, i64 %vr1848, i64 170 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_103F:

	; label .Lt_0555
	br label %.Lt_0555
.Lt_0555:

	; branchbop V <> 4
	%vr1853 = load i64, i64* %V.111
	%vr1852 = icmp ne i64 %vr1853, 4
	br i1 %vr1852, label %.Lt_0557, label %.Lt_1040
.Lt_1040:

	; label .Lt_0558
	br label %.Lt_0558
.Lt_0558:

	; bop SYS_OFFSET + 6
	%vr1856 = load double, double* @SYS_OFFSET
	%vr1855 = fadd double %vr1856, 0x4018000000000000

	; conv vr1855 => vr1857
	%vr1858 = call double @llvm.nearbyint.f64(double %vr1855)
	%vr1857 = fptoui double %vr1858 to i64

	; call POKE64()
	; arg THIS
	%vr1859 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1857
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1859, i64 %vr1857, i64 170 )

	; bop SYS_OFFSET + 7
	%vr1861 = load double, double* @SYS_OFFSET
	%vr1860 = fadd double %vr1861, 0x401C000000000000

	; conv vr1860 => vr1862
	%vr1863 = call double @llvm.nearbyint.f64(double %vr1860)
	%vr1862 = fptoui double %vr1863 to i64

	; call POKE64()
	; arg THIS
	%vr1864 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1862
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1864, i64 %vr1862, i64 0 )

	; bop SYS_OFFSET + 8
	%vr1866 = load double, double* @SYS_OFFSET
	%vr1865 = fadd double %vr1866, 0x4020000000000000

	; conv vr1865 => vr1867
	%vr1868 = call double @llvm.nearbyint.f64(double %vr1865)
	%vr1867 = fptoui double %vr1868 to i64

	; call POKE64()
	; arg THIS
	%vr1869 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1867
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1869, i64 %vr1867, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1041:

	; label .Lt_0557
	br label %.Lt_0557
.Lt_0557:

	; branchbop V <> 5
	%vr1872 = load i64, i64* %V.111
	%vr1871 = icmp ne i64 %vr1872, 5
	br i1 %vr1871, label %.Lt_0559, label %.Lt_1042
.Lt_1042:

	; label .Lt_055A
	br label %.Lt_055A
.Lt_055A:

	; bop SYS_OFFSET + 6
	%vr1875 = load double, double* @SYS_OFFSET
	%vr1874 = fadd double %vr1875, 0x4018000000000000

	; conv vr1874 => vr1876
	%vr1877 = call double @llvm.nearbyint.f64(double %vr1874)
	%vr1876 = fptoui double %vr1877 to i64

	; call POKE64()
	; arg THIS
	%vr1878 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1876
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1878, i64 %vr1876, i64 170 )

	; bop SYS_OFFSET + 7
	%vr1880 = load double, double* @SYS_OFFSET
	%vr1879 = fadd double %vr1880, 0x401C000000000000

	; conv vr1879 => vr1881
	%vr1882 = call double @llvm.nearbyint.f64(double %vr1879)
	%vr1881 = fptoui double %vr1882 to i64

	; call POKE64()
	; arg THIS
	%vr1883 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1881
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1883, i64 %vr1881, i64 0 )

	; bop SYS_OFFSET + 8
	%vr1885 = load double, double* @SYS_OFFSET
	%vr1884 = fadd double %vr1885, 0x4020000000000000

	; conv vr1884 => vr1886
	%vr1887 = call double @llvm.nearbyint.f64(double %vr1884)
	%vr1886 = fptoui double %vr1887 to i64

	; call POKE64()
	; arg THIS
	%vr1888 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1886
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1888, i64 %vr1886, i64 170 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1043:

	; label .Lt_0559
	br label %.Lt_0559
.Lt_0559:

	; branchbop V <> 6
	%vr1891 = load i64, i64* %V.111
	%vr1890 = icmp ne i64 %vr1891, 6
	br i1 %vr1890, label %.Lt_055B, label %.Lt_1044
.Lt_1044:

	; label .Lt_055C
	br label %.Lt_055C
.Lt_055C:

	; bop SYS_OFFSET + 6
	%vr1894 = load double, double* @SYS_OFFSET
	%vr1893 = fadd double %vr1894, 0x4018000000000000

	; conv vr1893 => vr1895
	%vr1896 = call double @llvm.nearbyint.f64(double %vr1893)
	%vr1895 = fptoui double %vr1896 to i64

	; call POKE64()
	; arg THIS
	%vr1897 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1895
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1897, i64 %vr1895, i64 170 )

	; bop SYS_OFFSET + 7
	%vr1899 = load double, double* @SYS_OFFSET
	%vr1898 = fadd double %vr1899, 0x401C000000000000

	; conv vr1898 => vr1900
	%vr1901 = call double @llvm.nearbyint.f64(double %vr1898)
	%vr1900 = fptoui double %vr1901 to i64

	; call POKE64()
	; arg THIS
	%vr1902 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1900
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1902, i64 %vr1900, i64 85 )

	; bop SYS_OFFSET + 8
	%vr1904 = load double, double* @SYS_OFFSET
	%vr1903 = fadd double %vr1904, 0x4020000000000000

	; conv vr1903 => vr1905
	%vr1906 = call double @llvm.nearbyint.f64(double %vr1903)
	%vr1905 = fptoui double %vr1906 to i64

	; call POKE64()
	; arg THIS
	%vr1907 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1905
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1907, i64 %vr1905, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1045:

	; label .Lt_055B
	br label %.Lt_055B
.Lt_055B:

	; branchbop V <> 7
	%vr1910 = load i64, i64* %V.111
	%vr1909 = icmp ne i64 %vr1910, 7
	br i1 %vr1909, label %.Lt_055D, label %.Lt_1046
.Lt_1046:

	; label .Lt_055E
	br label %.Lt_055E
.Lt_055E:

	; bop SYS_OFFSET + 6
	%vr1913 = load double, double* @SYS_OFFSET
	%vr1912 = fadd double %vr1913, 0x4018000000000000

	; conv vr1912 => vr1914
	%vr1915 = call double @llvm.nearbyint.f64(double %vr1912)
	%vr1914 = fptoui double %vr1915 to i64

	; call POKE64()
	; arg THIS
	%vr1916 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1914
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1916, i64 %vr1914, i64 170 )

	; bop SYS_OFFSET + 7
	%vr1918 = load double, double* @SYS_OFFSET
	%vr1917 = fadd double %vr1918, 0x401C000000000000

	; conv vr1917 => vr1919
	%vr1920 = call double @llvm.nearbyint.f64(double %vr1917)
	%vr1919 = fptoui double %vr1920 to i64

	; call POKE64()
	; arg THIS
	%vr1921 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1919
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1921, i64 %vr1919, i64 170 )

	; bop SYS_OFFSET + 8
	%vr1923 = load double, double* @SYS_OFFSET
	%vr1922 = fadd double %vr1923, 0x4020000000000000

	; conv vr1922 => vr1924
	%vr1925 = call double @llvm.nearbyint.f64(double %vr1922)
	%vr1924 = fptoui double %vr1925 to i64

	; call POKE64()
	; arg THIS
	%vr1926 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1924
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1926, i64 %vr1924, i64 170 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1047:

	; label .Lt_055D
	br label %.Lt_055D
.Lt_055D:

	; branchbop V <> 8
	%vr1929 = load i64, i64* %V.111
	%vr1928 = icmp ne i64 %vr1929, 8
	br i1 %vr1928, label %.Lt_055F, label %.Lt_1048
.Lt_1048:

	; label .Lt_0560
	br label %.Lt_0560
.Lt_0560:

	; bop SYS_OFFSET + 6
	%vr1932 = load double, double* @SYS_OFFSET
	%vr1931 = fadd double %vr1932, 0x4018000000000000

	; conv vr1931 => vr1933
	%vr1934 = call double @llvm.nearbyint.f64(double %vr1931)
	%vr1933 = fptoui double %vr1934 to i64

	; call POKE64()
	; arg THIS
	%vr1935 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1933
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1935, i64 %vr1933, i64 85 )

	; bop SYS_OFFSET + 7
	%vr1937 = load double, double* @SYS_OFFSET
	%vr1936 = fadd double %vr1937, 0x401C000000000000

	; conv vr1936 => vr1938
	%vr1939 = call double @llvm.nearbyint.f64(double %vr1936)
	%vr1938 = fptoui double %vr1939 to i64

	; call POKE64()
	; arg THIS
	%vr1940 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1938
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1940, i64 %vr1938, i64 85 )

	; bop SYS_OFFSET + 8
	%vr1942 = load double, double* @SYS_OFFSET
	%vr1941 = fadd double %vr1942, 0x4020000000000000

	; conv vr1941 => vr1943
	%vr1944 = call double @llvm.nearbyint.f64(double %vr1941)
	%vr1943 = fptoui double %vr1944 to i64

	; call POKE64()
	; arg THIS
	%vr1945 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1943
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1945, i64 %vr1943, i64 85 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1049:

	; label .Lt_055F
	br label %.Lt_055F
.Lt_055F:

	; branchbop V <> 9
	%vr1948 = load i64, i64* %V.111
	%vr1947 = icmp ne i64 %vr1948, 9
	br i1 %vr1947, label %.Lt_0561, label %.Lt_104A
.Lt_104A:

	; label .Lt_0562
	br label %.Lt_0562
.Lt_0562:

	; bop SYS_OFFSET + 6
	%vr1951 = load double, double* @SYS_OFFSET
	%vr1950 = fadd double %vr1951, 0x4018000000000000

	; conv vr1950 => vr1952
	%vr1953 = call double @llvm.nearbyint.f64(double %vr1950)
	%vr1952 = fptoui double %vr1953 to i64

	; call POKE64()
	; arg THIS
	%vr1954 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1952
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1954, i64 %vr1952, i64 85 )

	; bop SYS_OFFSET + 7
	%vr1956 = load double, double* @SYS_OFFSET
	%vr1955 = fadd double %vr1956, 0x401C000000000000

	; conv vr1955 => vr1957
	%vr1958 = call double @llvm.nearbyint.f64(double %vr1955)
	%vr1957 = fptoui double %vr1958 to i64

	; call POKE64()
	; arg THIS
	%vr1959 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1957
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1959, i64 %vr1957, i64 85 )

	; bop SYS_OFFSET + 8
	%vr1961 = load double, double* @SYS_OFFSET
	%vr1960 = fadd double %vr1961, 0x4020000000000000

	; conv vr1960 => vr1962
	%vr1963 = call double @llvm.nearbyint.f64(double %vr1960)
	%vr1962 = fptoui double %vr1963 to i64

	; call POKE64()
	; arg THIS
	%vr1964 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1962
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1964, i64 %vr1962, i64 255 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_104B:

	; label .Lt_0561
	br label %.Lt_0561
.Lt_0561:

	; branchbop V <> 10
	%vr1967 = load i64, i64* %V.111
	%vr1966 = icmp ne i64 %vr1967, 10
	br i1 %vr1966, label %.Lt_0563, label %.Lt_104C
.Lt_104C:

	; label .Lt_0564
	br label %.Lt_0564
.Lt_0564:

	; bop SYS_OFFSET + 6
	%vr1970 = load double, double* @SYS_OFFSET
	%vr1969 = fadd double %vr1970, 0x4018000000000000

	; conv vr1969 => vr1971
	%vr1972 = call double @llvm.nearbyint.f64(double %vr1969)
	%vr1971 = fptoui double %vr1972 to i64

	; call POKE64()
	; arg THIS
	%vr1973 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1971
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1973, i64 %vr1971, i64 85 )

	; bop SYS_OFFSET + 7
	%vr1975 = load double, double* @SYS_OFFSET
	%vr1974 = fadd double %vr1975, 0x401C000000000000

	; conv vr1974 => vr1976
	%vr1977 = call double @llvm.nearbyint.f64(double %vr1974)
	%vr1976 = fptoui double %vr1977 to i64

	; call POKE64()
	; arg THIS
	%vr1978 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1976
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1978, i64 %vr1976, i64 255 )

	; bop SYS_OFFSET + 8
	%vr1980 = load double, double* @SYS_OFFSET
	%vr1979 = fadd double %vr1980, 0x4020000000000000

	; conv vr1979 => vr1981
	%vr1982 = call double @llvm.nearbyint.f64(double %vr1979)
	%vr1981 = fptoui double %vr1982 to i64

	; call POKE64()
	; arg THIS
	%vr1983 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1981
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1983, i64 %vr1981, i64 85 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_104D:

	; label .Lt_0563
	br label %.Lt_0563
.Lt_0563:

	; branchbop V <> 11
	%vr1986 = load i64, i64* %V.111
	%vr1985 = icmp ne i64 %vr1986, 11
	br i1 %vr1985, label %.Lt_0565, label %.Lt_104E
.Lt_104E:

	; label .Lt_0566
	br label %.Lt_0566
.Lt_0566:

	; bop SYS_OFFSET + 6
	%vr1989 = load double, double* @SYS_OFFSET
	%vr1988 = fadd double %vr1989, 0x4018000000000000

	; conv vr1988 => vr1990
	%vr1991 = call double @llvm.nearbyint.f64(double %vr1988)
	%vr1990 = fptoui double %vr1991 to i64

	; call POKE64()
	; arg THIS
	%vr1992 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1990
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1992, i64 %vr1990, i64 85 )

	; bop SYS_OFFSET + 7
	%vr1994 = load double, double* @SYS_OFFSET
	%vr1993 = fadd double %vr1994, 0x401C000000000000

	; conv vr1993 => vr1995
	%vr1996 = call double @llvm.nearbyint.f64(double %vr1993)
	%vr1995 = fptoui double %vr1996 to i64

	; call POKE64()
	; arg THIS
	%vr1997 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr1995
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1997, i64 %vr1995, i64 255 )

	; bop SYS_OFFSET + 8
	%vr1999 = load double, double* @SYS_OFFSET
	%vr1998 = fadd double %vr1999, 0x4020000000000000

	; conv vr1998 => vr2000
	%vr2001 = call double @llvm.nearbyint.f64(double %vr1998)
	%vr2000 = fptoui double %vr2001 to i64

	; call POKE64()
	; arg THIS
	%vr2002 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2000
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2002, i64 %vr2000, i64 255 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_104F:

	; label .Lt_0565
	br label %.Lt_0565
.Lt_0565:

	; branchbop V <> 12
	%vr2005 = load i64, i64* %V.111
	%vr2004 = icmp ne i64 %vr2005, 12
	br i1 %vr2004, label %.Lt_0567, label %.Lt_1050
.Lt_1050:

	; label .Lt_0568
	br label %.Lt_0568
.Lt_0568:

	; bop SYS_OFFSET + 6
	%vr2008 = load double, double* @SYS_OFFSET
	%vr2007 = fadd double %vr2008, 0x4018000000000000

	; conv vr2007 => vr2009
	%vr2010 = call double @llvm.nearbyint.f64(double %vr2007)
	%vr2009 = fptoui double %vr2010 to i64

	; call POKE64()
	; arg THIS
	%vr2011 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2009
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2011, i64 %vr2009, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2013 = load double, double* @SYS_OFFSET
	%vr2012 = fadd double %vr2013, 0x401C000000000000

	; conv vr2012 => vr2014
	%vr2015 = call double @llvm.nearbyint.f64(double %vr2012)
	%vr2014 = fptoui double %vr2015 to i64

	; call POKE64()
	; arg THIS
	%vr2016 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2014
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2016, i64 %vr2014, i64 85 )

	; bop SYS_OFFSET + 8
	%vr2018 = load double, double* @SYS_OFFSET
	%vr2017 = fadd double %vr2018, 0x4020000000000000

	; conv vr2017 => vr2019
	%vr2020 = call double @llvm.nearbyint.f64(double %vr2017)
	%vr2019 = fptoui double %vr2020 to i64

	; call POKE64()
	; arg THIS
	%vr2021 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2019
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2021, i64 %vr2019, i64 85 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1051:

	; label .Lt_0567
	br label %.Lt_0567
.Lt_0567:

	; branchbop V <> 13
	%vr2024 = load i64, i64* %V.111
	%vr2023 = icmp ne i64 %vr2024, 13
	br i1 %vr2023, label %.Lt_0569, label %.Lt_1052
.Lt_1052:

	; label .Lt_056A
	br label %.Lt_056A
.Lt_056A:

	; bop SYS_OFFSET + 6
	%vr2027 = load double, double* @SYS_OFFSET
	%vr2026 = fadd double %vr2027, 0x4018000000000000

	; conv vr2026 => vr2028
	%vr2029 = call double @llvm.nearbyint.f64(double %vr2026)
	%vr2028 = fptoui double %vr2029 to i64

	; call POKE64()
	; arg THIS
	%vr2030 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2028
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2030, i64 %vr2028, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2032 = load double, double* @SYS_OFFSET
	%vr2031 = fadd double %vr2032, 0x401C000000000000

	; conv vr2031 => vr2033
	%vr2034 = call double @llvm.nearbyint.f64(double %vr2031)
	%vr2033 = fptoui double %vr2034 to i64

	; call POKE64()
	; arg THIS
	%vr2035 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2033
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2035, i64 %vr2033, i64 85 )

	; bop SYS_OFFSET + 8
	%vr2037 = load double, double* @SYS_OFFSET
	%vr2036 = fadd double %vr2037, 0x4020000000000000

	; conv vr2036 => vr2038
	%vr2039 = call double @llvm.nearbyint.f64(double %vr2036)
	%vr2038 = fptoui double %vr2039 to i64

	; call POKE64()
	; arg THIS
	%vr2040 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2038
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2040, i64 %vr2038, i64 255 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1053:

	; label .Lt_0569
	br label %.Lt_0569
.Lt_0569:

	; branchbop V <> 14
	%vr2043 = load i64, i64* %V.111
	%vr2042 = icmp ne i64 %vr2043, 14
	br i1 %vr2042, label %.Lt_056B, label %.Lt_1054
.Lt_1054:

	; label .Lt_056C
	br label %.Lt_056C
.Lt_056C:

	; bop SYS_OFFSET + 6
	%vr2046 = load double, double* @SYS_OFFSET
	%vr2045 = fadd double %vr2046, 0x4018000000000000

	; conv vr2045 => vr2047
	%vr2048 = call double @llvm.nearbyint.f64(double %vr2045)
	%vr2047 = fptoui double %vr2048 to i64

	; call POKE64()
	; arg THIS
	%vr2049 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2047
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2049, i64 %vr2047, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2051 = load double, double* @SYS_OFFSET
	%vr2050 = fadd double %vr2051, 0x401C000000000000

	; conv vr2050 => vr2052
	%vr2053 = call double @llvm.nearbyint.f64(double %vr2050)
	%vr2052 = fptoui double %vr2053 to i64

	; call POKE64()
	; arg THIS
	%vr2054 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2052
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2054, i64 %vr2052, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2056 = load double, double* @SYS_OFFSET
	%vr2055 = fadd double %vr2056, 0x4020000000000000

	; conv vr2055 => vr2057
	%vr2058 = call double @llvm.nearbyint.f64(double %vr2055)
	%vr2057 = fptoui double %vr2058 to i64

	; call POKE64()
	; arg THIS
	%vr2059 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2057
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2059, i64 %vr2057, i64 85 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1055:

	; label .Lt_056B
	br label %.Lt_056B
.Lt_056B:

	; branchbop V <> 15
	%vr2062 = load i64, i64* %V.111
	%vr2061 = icmp ne i64 %vr2062, 15
	br i1 %vr2061, label %.Lt_056D, label %.Lt_1056
.Lt_1056:

	; label .Lt_056E
	br label %.Lt_056E
.Lt_056E:

	; bop SYS_OFFSET + 6
	%vr2065 = load double, double* @SYS_OFFSET
	%vr2064 = fadd double %vr2065, 0x4018000000000000

	; conv vr2064 => vr2066
	%vr2067 = call double @llvm.nearbyint.f64(double %vr2064)
	%vr2066 = fptoui double %vr2067 to i64

	; call POKE64()
	; arg THIS
	%vr2068 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2066
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2068, i64 %vr2066, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2070 = load double, double* @SYS_OFFSET
	%vr2069 = fadd double %vr2070, 0x401C000000000000

	; conv vr2069 => vr2071
	%vr2072 = call double @llvm.nearbyint.f64(double %vr2069)
	%vr2071 = fptoui double %vr2072 to i64

	; call POKE64()
	; arg THIS
	%vr2073 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2071
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2073, i64 %vr2071, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2075 = load double, double* @SYS_OFFSET
	%vr2074 = fadd double %vr2075, 0x4020000000000000

	; conv vr2074 => vr2076
	%vr2077 = call double @llvm.nearbyint.f64(double %vr2074)
	%vr2076 = fptoui double %vr2077 to i64

	; call POKE64()
	; arg THIS
	%vr2078 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2076
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2078, i64 %vr2076, i64 255 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1057:

	; label .Lt_056D
	br label %.Lt_056D
.Lt_056D:

	; branchbop V <> 16
	%vr2081 = load i64, i64* %V.111
	%vr2080 = icmp ne i64 %vr2081, 16
	br i1 %vr2080, label %.Lt_056F, label %.Lt_1058
.Lt_1058:

	; label .Lt_0570
	br label %.Lt_0570
.Lt_0570:

	; bop SYS_OFFSET + 6
	%vr2084 = load double, double* @SYS_OFFSET
	%vr2083 = fadd double %vr2084, 0x4018000000000000

	; conv vr2083 => vr2085
	%vr2086 = call double @llvm.nearbyint.f64(double %vr2083)
	%vr2085 = fptoui double %vr2086 to i64

	; call POKE64()
	; arg THIS
	%vr2087 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2085
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2087, i64 %vr2085, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2089 = load double, double* @SYS_OFFSET
	%vr2088 = fadd double %vr2089, 0x401C000000000000

	; conv vr2088 => vr2090
	%vr2091 = call double @llvm.nearbyint.f64(double %vr2088)
	%vr2090 = fptoui double %vr2091 to i64

	; call POKE64()
	; arg THIS
	%vr2092 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2090
	; arg 176
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2092, i64 %vr2090, i64 176 )

	; bop SYS_OFFSET + 8
	%vr2094 = load double, double* @SYS_OFFSET
	%vr2093 = fadd double %vr2094, 0x4020000000000000

	; conv vr2093 => vr2095
	%vr2096 = call double @llvm.nearbyint.f64(double %vr2093)
	%vr2095 = fptoui double %vr2096 to i64

	; call POKE64()
	; arg THIS
	%vr2097 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2095
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2097, i64 %vr2095, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1059:

	; label .Lt_056F
	br label %.Lt_056F
.Lt_056F:

	; branchbop V <> 17
	%vr2100 = load i64, i64* %V.111
	%vr2099 = icmp ne i64 %vr2100, 17
	br i1 %vr2099, label %.Lt_0571, label %.Lt_105A
.Lt_105A:

	; label .Lt_0572
	br label %.Lt_0572
.Lt_0572:

	; bop SYS_OFFSET + 6
	%vr2103 = load double, double* @SYS_OFFSET
	%vr2102 = fadd double %vr2103, 0x4018000000000000

	; conv vr2102 => vr2104
	%vr2105 = call double @llvm.nearbyint.f64(double %vr2102)
	%vr2104 = fptoui double %vr2105 to i64

	; call POKE64()
	; arg THIS
	%vr2106 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2104
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2106, i64 %vr2104, i64 255 )

	; bop SYS_OFFSET + 7
	%vr2108 = load double, double* @SYS_OFFSET
	%vr2107 = fadd double %vr2108, 0x401C000000000000

	; conv vr2107 => vr2109
	%vr2110 = call double @llvm.nearbyint.f64(double %vr2107)
	%vr2109 = fptoui double %vr2110 to i64

	; call POKE64()
	; arg THIS
	%vr2111 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2109
	; arg 204
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2111, i64 %vr2109, i64 204 )

	; bop SYS_OFFSET + 8
	%vr2113 = load double, double* @SYS_OFFSET
	%vr2112 = fadd double %vr2113, 0x4020000000000000

	; conv vr2112 => vr2114
	%vr2115 = call double @llvm.nearbyint.f64(double %vr2112)
	%vr2114 = fptoui double %vr2115 to i64

	; call POKE64()
	; arg THIS
	%vr2116 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2114
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2116, i64 %vr2114, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_105B:

	; label .Lt_0571
	br label %.Lt_0571
.Lt_0571:

	; branchbop V <> 18
	%vr2119 = load i64, i64* %V.111
	%vr2118 = icmp ne i64 %vr2119, 18
	br i1 %vr2118, label %.Lt_0573, label %.Lt_105C
.Lt_105C:

	; label .Lt_0574
	br label %.Lt_0574
.Lt_0574:

	; bop SYS_OFFSET + 6
	%vr2122 = load double, double* @SYS_OFFSET
	%vr2121 = fadd double %vr2122, 0x4018000000000000

	; conv vr2121 => vr2123
	%vr2124 = call double @llvm.nearbyint.f64(double %vr2121)
	%vr2123 = fptoui double %vr2124 to i64

	; call POKE64()
	; arg THIS
	%vr2125 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2123
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2125, i64 %vr2123, i64 51 )

	; bop SYS_OFFSET + 7
	%vr2127 = load double, double* @SYS_OFFSET
	%vr2126 = fadd double %vr2127, 0x401C000000000000

	; conv vr2126 => vr2128
	%vr2129 = call double @llvm.nearbyint.f64(double %vr2126)
	%vr2128 = fptoui double %vr2129 to i64

	; call POKE64()
	; arg THIS
	%vr2130 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2128
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2130, i64 %vr2128, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2132 = load double, double* @SYS_OFFSET
	%vr2131 = fadd double %vr2132, 0x4020000000000000

	; conv vr2131 => vr2133
	%vr2134 = call double @llvm.nearbyint.f64(double %vr2131)
	%vr2133 = fptoui double %vr2134 to i64

	; call POKE64()
	; arg THIS
	%vr2135 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2133
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2135, i64 %vr2133, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_105D:

	; label .Lt_0573
	br label %.Lt_0573
.Lt_0573:

	; branchbop V <> 19
	%vr2138 = load i64, i64* %V.111
	%vr2137 = icmp ne i64 %vr2138, 19
	br i1 %vr2137, label %.Lt_0575, label %.Lt_105E
.Lt_105E:

	; label .Lt_0576
	br label %.Lt_0576
.Lt_0576:

	; bop SYS_OFFSET + 6
	%vr2141 = load double, double* @SYS_OFFSET
	%vr2140 = fadd double %vr2141, 0x4018000000000000

	; conv vr2140 => vr2142
	%vr2143 = call double @llvm.nearbyint.f64(double %vr2140)
	%vr2142 = fptoui double %vr2143 to i64

	; call POKE64()
	; arg THIS
	%vr2144 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2142
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2144, i64 %vr2142, i64 51 )

	; bop SYS_OFFSET + 7
	%vr2146 = load double, double* @SYS_OFFSET
	%vr2145 = fadd double %vr2146, 0x401C000000000000

	; conv vr2145 => vr2147
	%vr2148 = call double @llvm.nearbyint.f64(double %vr2145)
	%vr2147 = fptoui double %vr2148 to i64

	; call POKE64()
	; arg THIS
	%vr2149 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2147
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2149, i64 %vr2147, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2151 = load double, double* @SYS_OFFSET
	%vr2150 = fadd double %vr2151, 0x4020000000000000

	; conv vr2150 => vr2152
	%vr2153 = call double @llvm.nearbyint.f64(double %vr2150)
	%vr2152 = fptoui double %vr2153 to i64

	; call POKE64()
	; arg THIS
	%vr2154 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2152
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2154, i64 %vr2152, i64 51 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_105F:

	; label .Lt_0575
	br label %.Lt_0575
.Lt_0575:

	; branchbop V <> 20
	%vr2157 = load i64, i64* %V.111
	%vr2156 = icmp ne i64 %vr2157, 20
	br i1 %vr2156, label %.Lt_0577, label %.Lt_1060
.Lt_1060:

	; label .Lt_0578
	br label %.Lt_0578
.Lt_0578:

	; bop SYS_OFFSET + 6
	%vr2160 = load double, double* @SYS_OFFSET
	%vr2159 = fadd double %vr2160, 0x4018000000000000

	; conv vr2159 => vr2161
	%vr2162 = call double @llvm.nearbyint.f64(double %vr2159)
	%vr2161 = fptoui double %vr2162 to i64

	; call POKE64()
	; arg THIS
	%vr2163 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2161
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2163, i64 %vr2161, i64 0 )

	; bop SYS_OFFSET + 7
	%vr2165 = load double, double* @SYS_OFFSET
	%vr2164 = fadd double %vr2165, 0x401C000000000000

	; conv vr2164 => vr2166
	%vr2167 = call double @llvm.nearbyint.f64(double %vr2164)
	%vr2166 = fptoui double %vr2167 to i64

	; call POKE64()
	; arg THIS
	%vr2168 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2166
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2168, i64 %vr2166, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2170 = load double, double* @SYS_OFFSET
	%vr2169 = fadd double %vr2170, 0x4020000000000000

	; conv vr2169 => vr2171
	%vr2172 = call double @llvm.nearbyint.f64(double %vr2169)
	%vr2171 = fptoui double %vr2172 to i64

	; call POKE64()
	; arg THIS
	%vr2173 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2171
	; arg 51
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2173, i64 %vr2171, i64 51 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1061:

	; label .Lt_0577
	br label %.Lt_0577
.Lt_0577:

	; branchbop V <> 21
	%vr2176 = load i64, i64* %V.111
	%vr2175 = icmp ne i64 %vr2176, 21
	br i1 %vr2175, label %.Lt_0579, label %.Lt_1062
.Lt_1062:

	; label .Lt_057A
	br label %.Lt_057A
.Lt_057A:

	; bop SYS_OFFSET + 6
	%vr2179 = load double, double* @SYS_OFFSET
	%vr2178 = fadd double %vr2179, 0x4018000000000000

	; conv vr2178 => vr2180
	%vr2181 = call double @llvm.nearbyint.f64(double %vr2178)
	%vr2180 = fptoui double %vr2181 to i64

	; call POKE64()
	; arg THIS
	%vr2182 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2180
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2182, i64 %vr2180, i64 102 )

	; bop SYS_OFFSET + 7
	%vr2184 = load double, double* @SYS_OFFSET
	%vr2183 = fadd double %vr2184, 0x401C000000000000

	; conv vr2183 => vr2185
	%vr2186 = call double @llvm.nearbyint.f64(double %vr2183)
	%vr2185 = fptoui double %vr2186 to i64

	; call POKE64()
	; arg THIS
	%vr2187 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2185
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2187, i64 %vr2185, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2189 = load double, double* @SYS_OFFSET
	%vr2188 = fadd double %vr2189, 0x4020000000000000

	; conv vr2188 => vr2190
	%vr2191 = call double @llvm.nearbyint.f64(double %vr2188)
	%vr2190 = fptoui double %vr2191 to i64

	; call POKE64()
	; arg THIS
	%vr2192 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2190
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2192, i64 %vr2190, i64 102 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1063:

	; label .Lt_0579
	br label %.Lt_0579
.Lt_0579:

	; branchbop V <> 22
	%vr2195 = load i64, i64* %V.111
	%vr2194 = icmp ne i64 %vr2195, 22
	br i1 %vr2194, label %.Lt_057B, label %.Lt_1064
.Lt_1064:

	; label .Lt_057C
	br label %.Lt_057C
.Lt_057C:

	; bop SYS_OFFSET + 6
	%vr2198 = load double, double* @SYS_OFFSET
	%vr2197 = fadd double %vr2198, 0x4018000000000000

	; conv vr2197 => vr2199
	%vr2200 = call double @llvm.nearbyint.f64(double %vr2197)
	%vr2199 = fptoui double %vr2200 to i64

	; call POKE64()
	; arg THIS
	%vr2201 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2199
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2201, i64 %vr2199, i64 0 )

	; bop SYS_OFFSET + 7
	%vr2203 = load double, double* @SYS_OFFSET
	%vr2202 = fadd double %vr2203, 0x401C000000000000

	; conv vr2202 => vr2204
	%vr2205 = call double @llvm.nearbyint.f64(double %vr2202)
	%vr2204 = fptoui double %vr2205 to i64

	; call POKE64()
	; arg THIS
	%vr2206 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2204
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2206, i64 %vr2204, i64 255 )

	; bop SYS_OFFSET + 8
	%vr2208 = load double, double* @SYS_OFFSET
	%vr2207 = fadd double %vr2208, 0x4020000000000000

	; conv vr2207 => vr2209
	%vr2210 = call double @llvm.nearbyint.f64(double %vr2207)
	%vr2209 = fptoui double %vr2210 to i64

	; call POKE64()
	; arg THIS
	%vr2211 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2209
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2211, i64 %vr2209, i64 102 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1065:

	; label .Lt_057B
	br label %.Lt_057B
.Lt_057B:

	; branchbop V <> 23
	%vr2214 = load i64, i64* %V.111
	%vr2213 = icmp ne i64 %vr2214, 23
	br i1 %vr2213, label %.Lt_057D, label %.Lt_1066
.Lt_1066:

	; label .Lt_057E
	br label %.Lt_057E
.Lt_057E:

	; bop SYS_OFFSET + 6
	%vr2217 = load double, double* @SYS_OFFSET
	%vr2216 = fadd double %vr2217, 0x4018000000000000

	; conv vr2216 => vr2218
	%vr2219 = call double @llvm.nearbyint.f64(double %vr2216)
	%vr2218 = fptoui double %vr2219 to i64

	; call POKE64()
	; arg THIS
	%vr2220 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2218
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2220, i64 %vr2218, i64 40 )

	; bop SYS_OFFSET + 7
	%vr2222 = load double, double* @SYS_OFFSET
	%vr2221 = fadd double %vr2222, 0x401C000000000000

	; conv vr2221 => vr2223
	%vr2224 = call double @llvm.nearbyint.f64(double %vr2221)
	%vr2223 = fptoui double %vr2224 to i64

	; call POKE64()
	; arg THIS
	%vr2225 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2223
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2225, i64 %vr2223, i64 40 )

	; bop SYS_OFFSET + 8
	%vr2227 = load double, double* @SYS_OFFSET
	%vr2226 = fadd double %vr2227, 0x4020000000000000

	; conv vr2226 => vr2228
	%vr2229 = call double @llvm.nearbyint.f64(double %vr2226)
	%vr2228 = fptoui double %vr2229 to i64

	; call POKE64()
	; arg THIS
	%vr2230 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2228
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2230, i64 %vr2228, i64 40 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1067:

	; label .Lt_057D
	br label %.Lt_057D
.Lt_057D:

	; branchbop V <> 24
	%vr2233 = load i64, i64* %V.111
	%vr2232 = icmp ne i64 %vr2233, 24
	br i1 %vr2232, label %.Lt_057F, label %.Lt_1068
.Lt_1068:

	; label .Lt_0580
	br label %.Lt_0580
.Lt_0580:

	; bop SYS_OFFSET + 6
	%vr2236 = load double, double* @SYS_OFFSET
	%vr2235 = fadd double %vr2236, 0x4018000000000000

	; conv vr2235 => vr2237
	%vr2238 = call double @llvm.nearbyint.f64(double %vr2235)
	%vr2237 = fptoui double %vr2238 to i64

	; call POKE64()
	; arg THIS
	%vr2239 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2237
	; arg 204
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2239, i64 %vr2237, i64 204 )

	; bop SYS_OFFSET + 7
	%vr2241 = load double, double* @SYS_OFFSET
	%vr2240 = fadd double %vr2241, 0x401C000000000000

	; conv vr2240 => vr2242
	%vr2243 = call double @llvm.nearbyint.f64(double %vr2240)
	%vr2242 = fptoui double %vr2243 to i64

	; call POKE64()
	; arg THIS
	%vr2244 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2242
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2244, i64 %vr2242, i64 0 )

	; bop SYS_OFFSET + 8
	%vr2246 = load double, double* @SYS_OFFSET
	%vr2245 = fadd double %vr2246, 0x4020000000000000

	; conv vr2245 => vr2247
	%vr2248 = call double @llvm.nearbyint.f64(double %vr2245)
	%vr2247 = fptoui double %vr2248 to i64

	; call POKE64()
	; arg THIS
	%vr2249 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2247
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2249, i64 %vr2247, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1069:

	; label .Lt_057F
	br label %.Lt_057F
.Lt_057F:

	; branchbop V <> 25
	%vr2252 = load i64, i64* %V.111
	%vr2251 = icmp ne i64 %vr2252, 25
	br i1 %vr2251, label %.Lt_0581, label %.Lt_106A
.Lt_106A:

	; label .Lt_0582
	br label %.Lt_0582
.Lt_0582:

	; bop SYS_OFFSET + 6
	%vr2255 = load double, double* @SYS_OFFSET
	%vr2254 = fadd double %vr2255, 0x4018000000000000

	; conv vr2254 => vr2256
	%vr2257 = call double @llvm.nearbyint.f64(double %vr2254)
	%vr2256 = fptoui double %vr2257 to i64

	; call POKE64()
	; arg THIS
	%vr2258 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2256
	; arg 164
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2258, i64 %vr2256, i64 164 )

	; bop SYS_OFFSET + 7
	%vr2260 = load double, double* @SYS_OFFSET
	%vr2259 = fadd double %vr2260, 0x401C000000000000

	; conv vr2259 => vr2261
	%vr2262 = call double @llvm.nearbyint.f64(double %vr2259)
	%vr2261 = fptoui double %vr2262 to i64

	; call POKE64()
	; arg THIS
	%vr2263 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2261
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2263, i64 %vr2261, i64 0 )

	; bop SYS_OFFSET + 8
	%vr2265 = load double, double* @SYS_OFFSET
	%vr2264 = fadd double %vr2265, 0x4020000000000000

	; conv vr2264 => vr2266
	%vr2267 = call double @llvm.nearbyint.f64(double %vr2264)
	%vr2266 = fptoui double %vr2267 to i64

	; call POKE64()
	; arg THIS
	%vr2268 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2266
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2268, i64 %vr2266, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_106B:

	; label .Lt_0581
	br label %.Lt_0581
.Lt_0581:

	; branchbop V <> 26
	%vr2271 = load i64, i64* %V.111
	%vr2270 = icmp ne i64 %vr2271, 26
	br i1 %vr2270, label %.Lt_0583, label %.Lt_106C
.Lt_106C:

	; label .Lt_0584
	br label %.Lt_0584
.Lt_0584:

	; bop SYS_OFFSET + 6
	%vr2274 = load double, double* @SYS_OFFSET
	%vr2273 = fadd double %vr2274, 0x4018000000000000

	; conv vr2273 => vr2275
	%vr2276 = call double @llvm.nearbyint.f64(double %vr2273)
	%vr2275 = fptoui double %vr2276 to i64

	; call POKE64()
	; arg THIS
	%vr2277 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2275
	; arg 252
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2277, i64 %vr2275, i64 252 )

	; bop SYS_OFFSET + 7
	%vr2279 = load double, double* @SYS_OFFSET
	%vr2278 = fadd double %vr2279, 0x401C000000000000

	; conv vr2278 => vr2280
	%vr2281 = call double @llvm.nearbyint.f64(double %vr2278)
	%vr2280 = fptoui double %vr2281 to i64

	; call POKE64()
	; arg THIS
	%vr2282 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2280
	; arg 175
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2282, i64 %vr2280, i64 175 )

	; bop SYS_OFFSET + 8
	%vr2284 = load double, double* @SYS_OFFSET
	%vr2283 = fadd double %vr2284, 0x4020000000000000

	; conv vr2283 => vr2285
	%vr2286 = call double @llvm.nearbyint.f64(double %vr2283)
	%vr2285 = fptoui double %vr2286 to i64

	; call POKE64()
	; arg THIS
	%vr2287 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2285
	; arg 62
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2287, i64 %vr2285, i64 62 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_106D:

	; label .Lt_0583
	br label %.Lt_0583
.Lt_0583:

	; branchbop V <> 27
	%vr2290 = load i64, i64* %V.111
	%vr2289 = icmp ne i64 %vr2290, 27
	br i1 %vr2289, label %.Lt_0585, label %.Lt_106E
.Lt_106E:

	; label .Lt_0586
	br label %.Lt_0586
.Lt_0586:

	; bop SYS_OFFSET + 6
	%vr2293 = load double, double* @SYS_OFFSET
	%vr2292 = fadd double %vr2293, 0x4018000000000000

	; conv vr2292 => vr2294
	%vr2295 = call double @llvm.nearbyint.f64(double %vr2292)
	%vr2294 = fptoui double %vr2295 to i64

	; call POKE64()
	; arg THIS
	%vr2296 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2294
	; arg 245
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2296, i64 %vr2294, i64 245 )

	; bop SYS_OFFSET + 7
	%vr2298 = load double, double* @SYS_OFFSET
	%vr2297 = fadd double %vr2298, 0x401C000000000000

	; conv vr2297 => vr2299
	%vr2300 = call double @llvm.nearbyint.f64(double %vr2297)
	%vr2299 = fptoui double %vr2300 to i64

	; call POKE64()
	; arg THIS
	%vr2301 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2299
	; arg 121
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2301, i64 %vr2299, i64 121 )

	; bop SYS_OFFSET + 8
	%vr2303 = load double, double* @SYS_OFFSET
	%vr2302 = fadd double %vr2303, 0x4020000000000000

	; conv vr2302 => vr2304
	%vr2305 = call double @llvm.nearbyint.f64(double %vr2302)
	%vr2304 = fptoui double %vr2305 to i64

	; call POKE64()
	; arg THIS
	%vr2306 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2304
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2306, i64 %vr2304, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_106F:

	; label .Lt_0585
	br label %.Lt_0585
.Lt_0585:

	; branchbop V <> 28
	%vr2309 = load i64, i64* %V.111
	%vr2308 = icmp ne i64 %vr2309, 28
	br i1 %vr2308, label %.Lt_0587, label %.Lt_1070
.Lt_1070:

	; label .Lt_0588
	br label %.Lt_0588
.Lt_0588:

	; bop SYS_OFFSET + 6
	%vr2312 = load double, double* @SYS_OFFSET
	%vr2311 = fadd double %vr2312, 0x4018000000000000

	; conv vr2311 => vr2313
	%vr2314 = call double @llvm.nearbyint.f64(double %vr2311)
	%vr2313 = fptoui double %vr2314 to i64

	; call POKE64()
	; arg THIS
	%vr2315 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2313
	; arg 206
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2315, i64 %vr2313, i64 206 )

	; bop SYS_OFFSET + 7
	%vr2317 = load double, double* @SYS_OFFSET
	%vr2316 = fadd double %vr2317, 0x401C000000000000

	; conv vr2316 => vr2318
	%vr2319 = call double @llvm.nearbyint.f64(double %vr2316)
	%vr2318 = fptoui double %vr2319 to i64

	; call POKE64()
	; arg THIS
	%vr2320 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2318
	; arg 92
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2320, i64 %vr2318, i64 92 )

	; bop SYS_OFFSET + 8
	%vr2322 = load double, double* @SYS_OFFSET
	%vr2321 = fadd double %vr2322, 0x4020000000000000

	; conv vr2321 => vr2323
	%vr2324 = call double @llvm.nearbyint.f64(double %vr2321)
	%vr2323 = fptoui double %vr2324 to i64

	; call POKE64()
	; arg THIS
	%vr2325 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2323
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2325, i64 %vr2323, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1071:

	; label .Lt_0587
	br label %.Lt_0587
.Lt_0587:

	; branchbop V <> 29
	%vr2328 = load i64, i64* %V.111
	%vr2327 = icmp ne i64 %vr2328, 29
	br i1 %vr2327, label %.Lt_0589, label %.Lt_1072
.Lt_1072:

	; label .Lt_058A
	br label %.Lt_058A
.Lt_058A:

	; bop SYS_OFFSET + 6
	%vr2331 = load double, double* @SYS_OFFSET
	%vr2330 = fadd double %vr2331, 0x4018000000000000

	; conv vr2330 => vr2332
	%vr2333 = call double @llvm.nearbyint.f64(double %vr2330)
	%vr2332 = fptoui double %vr2333 to i64

	; call POKE64()
	; arg THIS
	%vr2334 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2332
	; arg 252
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2334, i64 %vr2332, i64 252 )

	; bop SYS_OFFSET + 7
	%vr2336 = load double, double* @SYS_OFFSET
	%vr2335 = fadd double %vr2336, 0x401C000000000000

	; conv vr2335 => vr2337
	%vr2338 = call double @llvm.nearbyint.f64(double %vr2335)
	%vr2337 = fptoui double %vr2338 to i64

	; call POKE64()
	; arg THIS
	%vr2339 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2337
	; arg 233
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2339, i64 %vr2337, i64 233 )

	; bop SYS_OFFSET + 8
	%vr2341 = load double, double* @SYS_OFFSET
	%vr2340 = fadd double %vr2341, 0x4020000000000000

	; conv vr2340 => vr2342
	%vr2343 = call double @llvm.nearbyint.f64(double %vr2340)
	%vr2342 = fptoui double %vr2343 to i64

	; call POKE64()
	; arg THIS
	%vr2344 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2342
	; arg 79
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2344, i64 %vr2342, i64 79 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1073:

	; label .Lt_0589
	br label %.Lt_0589
.Lt_0589:

	; branchbop V <> 30
	%vr2347 = load i64, i64* %V.111
	%vr2346 = icmp ne i64 %vr2347, 30
	br i1 %vr2346, label %.Lt_058B, label %.Lt_1074
.Lt_1074:

	; label .Lt_058C
	br label %.Lt_058C
.Lt_058C:

	; bop SYS_OFFSET + 6
	%vr2350 = load double, double* @SYS_OFFSET
	%vr2349 = fadd double %vr2350, 0x4018000000000000

	; conv vr2349 => vr2351
	%vr2352 = call double @llvm.nearbyint.f64(double %vr2349)
	%vr2351 = fptoui double %vr2352 to i64

	; call POKE64()
	; arg THIS
	%vr2353 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2351
	; arg 237
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2353, i64 %vr2351, i64 237 )

	; bop SYS_OFFSET + 7
	%vr2355 = load double, double* @SYS_OFFSET
	%vr2354 = fadd double %vr2355, 0x401C000000000000

	; conv vr2354 => vr2356
	%vr2357 = call double @llvm.nearbyint.f64(double %vr2354)
	%vr2356 = fptoui double %vr2357 to i64

	; call POKE64()
	; arg THIS
	%vr2358 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2356
	; arg 212
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2358, i64 %vr2356, i64 212 )

	; bop SYS_OFFSET + 8
	%vr2360 = load double, double* @SYS_OFFSET
	%vr2359 = fadd double %vr2360, 0x4020000000000000

	; conv vr2359 => vr2361
	%vr2362 = call double @llvm.nearbyint.f64(double %vr2359)
	%vr2361 = fptoui double %vr2362 to i64

	; call POKE64()
	; arg THIS
	%vr2363 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2361
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2363, i64 %vr2361, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1075:

	; label .Lt_058B
	br label %.Lt_058B
.Lt_058B:

	; branchbop V <> 32
	%vr2366 = load i64, i64* %V.111
	%vr2365 = icmp ne i64 %vr2366, 32
	br i1 %vr2365, label %.Lt_058D, label %.Lt_1076
.Lt_1076:

	; label .Lt_058E
	br label %.Lt_058E
.Lt_058E:

	; bop SYS_OFFSET + 6
	%vr2369 = load double, double* @SYS_OFFSET
	%vr2368 = fadd double %vr2369, 0x4018000000000000

	; conv vr2368 => vr2370
	%vr2371 = call double @llvm.nearbyint.f64(double %vr2368)
	%vr2370 = fptoui double %vr2371 to i64

	; call POKE64()
	; arg THIS
	%vr2372 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2370
	; arg 196
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2372, i64 %vr2370, i64 196 )

	; bop SYS_OFFSET + 7
	%vr2374 = load double, double* @SYS_OFFSET
	%vr2373 = fadd double %vr2374, 0x401C000000000000

	; conv vr2373 => vr2375
	%vr2376 = call double @llvm.nearbyint.f64(double %vr2373)
	%vr2375 = fptoui double %vr2376 to i64

	; call POKE64()
	; arg THIS
	%vr2377 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2375
	; arg 160
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2377, i64 %vr2375, i64 160 )

	; bop SYS_OFFSET + 8
	%vr2379 = load double, double* @SYS_OFFSET
	%vr2378 = fadd double %vr2379, 0x4020000000000000

	; conv vr2378 => vr2380
	%vr2381 = call double @llvm.nearbyint.f64(double %vr2378)
	%vr2380 = fptoui double %vr2381 to i64

	; call POKE64()
	; arg THIS
	%vr2382 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2380
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2382, i64 %vr2380, i64 0 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1077:

	; label .Lt_058D
	br label %.Lt_058D
.Lt_058D:

	; branchbop V <> 33
	%vr2385 = load i64, i64* %V.111
	%vr2384 = icmp ne i64 %vr2385, 33
	br i1 %vr2384, label %.Lt_058F, label %.Lt_1078
.Lt_1078:

	; label .Lt_0590
	br label %.Lt_0590
.Lt_0590:

	; bop SYS_OFFSET + 6
	%vr2388 = load double, double* @SYS_OFFSET
	%vr2387 = fadd double %vr2388, 0x4018000000000000

	; conv vr2387 => vr2389
	%vr2390 = call double @llvm.nearbyint.f64(double %vr2387)
	%vr2389 = fptoui double %vr2390 to i64

	; call POKE64()
	; arg THIS
	%vr2391 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2389
	; arg 186
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2391, i64 %vr2389, i64 186 )

	; bop SYS_OFFSET + 7
	%vr2393 = load double, double* @SYS_OFFSET
	%vr2392 = fadd double %vr2393, 0x401C000000000000

	; conv vr2392 => vr2394
	%vr2395 = call double @llvm.nearbyint.f64(double %vr2392)
	%vr2394 = fptoui double %vr2395 to i64

	; call POKE64()
	; arg THIS
	%vr2396 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2394
	; arg 226
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2396, i64 %vr2394, i64 226 )

	; bop SYS_OFFSET + 8
	%vr2398 = load double, double* @SYS_OFFSET
	%vr2397 = fadd double %vr2398, 0x4020000000000000

	; conv vr2397 => vr2399
	%vr2400 = call double @llvm.nearbyint.f64(double %vr2397)
	%vr2399 = fptoui double %vr2400 to i64

	; call POKE64()
	; arg THIS
	%vr2401 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2399
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2401, i64 %vr2399, i64 52 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1079:

	; label .Lt_058F
	br label %.Lt_058F
.Lt_058F:

	; branchbop V <> 34
	%vr2404 = load i64, i64* %V.111
	%vr2403 = icmp ne i64 %vr2404, 34
	br i1 %vr2403, label %.Lt_0591, label %.Lt_107A
.Lt_107A:

	; label .Lt_0592
	br label %.Lt_0592
.Lt_0592:

	; bop SYS_OFFSET + 6
	%vr2407 = load double, double* @SYS_OFFSET
	%vr2406 = fadd double %vr2407, 0x4018000000000000

	; conv vr2406 => vr2408
	%vr2409 = call double @llvm.nearbyint.f64(double %vr2406)
	%vr2408 = fptoui double %vr2409 to i64

	; call POKE64()
	; arg THIS
	%vr2410 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2408
	; arg 115
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2410, i64 %vr2408, i64 115 )

	; bop SYS_OFFSET + 7
	%vr2412 = load double, double* @SYS_OFFSET
	%vr2411 = fadd double %vr2412, 0x401C000000000000

	; conv vr2411 => vr2413
	%vr2414 = call double @llvm.nearbyint.f64(double %vr2411)
	%vr2413 = fptoui double %vr2414 to i64

	; call POKE64()
	; arg THIS
	%vr2415 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2413
	; arg 210
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2415, i64 %vr2413, i64 210 )

	; bop SYS_OFFSET + 8
	%vr2417 = load double, double* @SYS_OFFSET
	%vr2416 = fadd double %vr2417, 0x4020000000000000

	; conv vr2416 => vr2418
	%vr2419 = call double @llvm.nearbyint.f64(double %vr2416)
	%vr2418 = fptoui double %vr2419 to i64

	; call POKE64()
	; arg THIS
	%vr2420 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2418
	; arg 22
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2420, i64 %vr2418, i64 22 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_107B:

	; label .Lt_0591
	br label %.Lt_0591
.Lt_0591:

	; branchbop V <> 35
	%vr2423 = load i64, i64* %V.111
	%vr2422 = icmp ne i64 %vr2423, 35
	br i1 %vr2422, label %.Lt_0593, label %.Lt_107C
.Lt_107C:

	; label .Lt_0594
	br label %.Lt_0594
.Lt_0594:

	; bop SYS_OFFSET + 6
	%vr2426 = load double, double* @SYS_OFFSET
	%vr2425 = fadd double %vr2426, 0x4018000000000000

	; conv vr2425 => vr2427
	%vr2428 = call double @llvm.nearbyint.f64(double %vr2425)
	%vr2427 = fptoui double %vr2428 to i64

	; call POKE64()
	; arg THIS
	%vr2429 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2427
	; arg 78
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2429, i64 %vr2427, i64 78 )

	; bop SYS_OFFSET + 7
	%vr2431 = load double, double* @SYS_OFFSET
	%vr2430 = fadd double %vr2431, 0x401C000000000000

	; conv vr2430 => vr2432
	%vr2433 = call double @llvm.nearbyint.f64(double %vr2430)
	%vr2432 = fptoui double %vr2433 to i64

	; call POKE64()
	; arg THIS
	%vr2434 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2432
	; arg 154
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2434, i64 %vr2432, i64 154 )

	; bop SYS_OFFSET + 8
	%vr2436 = load double, double* @SYS_OFFSET
	%vr2435 = fadd double %vr2436, 0x4020000000000000

	; conv vr2435 => vr2437
	%vr2438 = call double @llvm.nearbyint.f64(double %vr2435)
	%vr2437 = fptoui double %vr2438 to i64

	; call POKE64()
	; arg THIS
	%vr2439 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2437
	; arg 6
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2439, i64 %vr2437, i64 6 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_107D:

	; label .Lt_0593
	br label %.Lt_0593
.Lt_0593:

	; branchbop V <> 36
	%vr2442 = load i64, i64* %V.111
	%vr2441 = icmp ne i64 %vr2442, 36
	br i1 %vr2441, label %.Lt_0595, label %.Lt_107E
.Lt_107E:

	; label .Lt_0596
	br label %.Lt_0596
.Lt_0596:

	; bop SYS_OFFSET + 6
	%vr2445 = load double, double* @SYS_OFFSET
	%vr2444 = fadd double %vr2445, 0x4018000000000000

	; conv vr2444 => vr2446
	%vr2447 = call double @llvm.nearbyint.f64(double %vr2444)
	%vr2446 = fptoui double %vr2447 to i64

	; call POKE64()
	; arg THIS
	%vr2448 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2446
	; arg 114
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2448, i64 %vr2446, i64 114 )

	; bop SYS_OFFSET + 7
	%vr2450 = load double, double* @SYS_OFFSET
	%vr2449 = fadd double %vr2450, 0x401C000000000000

	; conv vr2449 => vr2451
	%vr2452 = call double @llvm.nearbyint.f64(double %vr2449)
	%vr2451 = fptoui double %vr2452 to i64

	; call POKE64()
	; arg THIS
	%vr2453 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2451
	; arg 159
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2453, i64 %vr2451, i64 159 )

	; bop SYS_OFFSET + 8
	%vr2455 = load double, double* @SYS_OFFSET
	%vr2454 = fadd double %vr2455, 0x4020000000000000

	; conv vr2454 => vr2456
	%vr2457 = call double @llvm.nearbyint.f64(double %vr2454)
	%vr2456 = fptoui double %vr2457 to i64

	; call POKE64()
	; arg THIS
	%vr2458 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2456
	; arg 207
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2458, i64 %vr2456, i64 207 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_107F:

	; label .Lt_0595
	br label %.Lt_0595
.Lt_0595:

	; branchbop V <> 37
	%vr2461 = load i64, i64* %V.111
	%vr2460 = icmp ne i64 %vr2461, 37
	br i1 %vr2460, label %.Lt_0597, label %.Lt_1080
.Lt_1080:

	; label .Lt_0598
	br label %.Lt_0598
.Lt_0598:

	; bop SYS_OFFSET + 6
	%vr2464 = load double, double* @SYS_OFFSET
	%vr2463 = fadd double %vr2464, 0x4018000000000000

	; conv vr2463 => vr2465
	%vr2466 = call double @llvm.nearbyint.f64(double %vr2463)
	%vr2465 = fptoui double %vr2466 to i64

	; call POKE64()
	; arg THIS
	%vr2467 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2465
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2467, i64 %vr2465, i64 52 )

	; bop SYS_OFFSET + 7
	%vr2469 = load double, double* @SYS_OFFSET
	%vr2468 = fadd double %vr2469, 0x401C000000000000

	; conv vr2468 => vr2470
	%vr2471 = call double @llvm.nearbyint.f64(double %vr2468)
	%vr2470 = fptoui double %vr2471 to i64

	; call POKE64()
	; arg THIS
	%vr2472 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2470
	; arg 101
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2472, i64 %vr2470, i64 101 )

	; bop SYS_OFFSET + 8
	%vr2474 = load double, double* @SYS_OFFSET
	%vr2473 = fadd double %vr2474, 0x4020000000000000

	; conv vr2473 => vr2475
	%vr2476 = call double @llvm.nearbyint.f64(double %vr2473)
	%vr2475 = fptoui double %vr2476 to i64

	; call POKE64()
	; arg THIS
	%vr2477 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2475
	; arg 164
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2477, i64 %vr2475, i64 164 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1081:

	; label .Lt_0597
	br label %.Lt_0597
.Lt_0597:

	; branchbop V <> 38
	%vr2480 = load i64, i64* %V.111
	%vr2479 = icmp ne i64 %vr2480, 38
	br i1 %vr2479, label %.Lt_0599, label %.Lt_1082
.Lt_1082:

	; label .Lt_059A
	br label %.Lt_059A
.Lt_059A:

	; bop SYS_OFFSET + 6
	%vr2483 = load double, double* @SYS_OFFSET
	%vr2482 = fadd double %vr2483, 0x4018000000000000

	; conv vr2482 => vr2484
	%vr2485 = call double @llvm.nearbyint.f64(double %vr2482)
	%vr2484 = fptoui double %vr2485 to i64

	; call POKE64()
	; arg THIS
	%vr2486 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2484
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2486, i64 %vr2484, i64 32 )

	; bop SYS_OFFSET + 7
	%vr2488 = load double, double* @SYS_OFFSET
	%vr2487 = fadd double %vr2488, 0x401C000000000000

	; conv vr2487 => vr2489
	%vr2490 = call double @llvm.nearbyint.f64(double %vr2487)
	%vr2489 = fptoui double %vr2490 to i64

	; call POKE64()
	; arg THIS
	%vr2491 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2489
	; arg 74
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2491, i64 %vr2489, i64 74 )

	; bop SYS_OFFSET + 8
	%vr2493 = load double, double* @SYS_OFFSET
	%vr2492 = fadd double %vr2493, 0x4020000000000000

	; conv vr2492 => vr2494
	%vr2495 = call double @llvm.nearbyint.f64(double %vr2492)
	%vr2494 = fptoui double %vr2495 to i64

	; call POKE64()
	; arg THIS
	%vr2496 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2494
	; arg 135
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2496, i64 %vr2494, i64 135 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1083:

	; label .Lt_0599
	br label %.Lt_0599
.Lt_0599:

	; branchbop V <> 39
	%vr2499 = load i64, i64* %V.111
	%vr2498 = icmp ne i64 %vr2499, 39
	br i1 %vr2498, label %.Lt_059B, label %.Lt_1084
.Lt_1084:

	; label .Lt_059C
	br label %.Lt_059C
.Lt_059C:

	; bop SYS_OFFSET + 6
	%vr2502 = load double, double* @SYS_OFFSET
	%vr2501 = fadd double %vr2502, 0x4018000000000000

	; conv vr2501 => vr2503
	%vr2504 = call double @llvm.nearbyint.f64(double %vr2501)
	%vr2503 = fptoui double %vr2504 to i64

	; call POKE64()
	; arg THIS
	%vr2505 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2503
	; arg 173
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2505, i64 %vr2503, i64 173 )

	; bop SYS_OFFSET + 7
	%vr2507 = load double, double* @SYS_OFFSET
	%vr2506 = fadd double %vr2507, 0x401C000000000000

	; conv vr2506 => vr2508
	%vr2509 = call double @llvm.nearbyint.f64(double %vr2506)
	%vr2508 = fptoui double %vr2509 to i64

	; call POKE64()
	; arg THIS
	%vr2510 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2508
	; arg 127
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2510, i64 %vr2508, i64 127 )

	; bop SYS_OFFSET + 8
	%vr2512 = load double, double* @SYS_OFFSET
	%vr2511 = fadd double %vr2512, 0x4020000000000000

	; conv vr2511 => vr2513
	%vr2514 = call double @llvm.nearbyint.f64(double %vr2511)
	%vr2513 = fptoui double %vr2514 to i64

	; call POKE64()
	; arg THIS
	%vr2515 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2513
	; arg 168
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2515, i64 %vr2513, i64 168 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1085:

	; label .Lt_059B
	br label %.Lt_059B
.Lt_059B:

	; branchbop V <> 40
	%vr2518 = load i64, i64* %V.111
	%vr2517 = icmp ne i64 %vr2518, 40
	br i1 %vr2517, label %.Lt_059D, label %.Lt_1086
.Lt_1086:

	; label .Lt_059E
	br label %.Lt_059E
.Lt_059E:

	; bop SYS_OFFSET + 6
	%vr2521 = load double, double* @SYS_OFFSET
	%vr2520 = fadd double %vr2521, 0x4018000000000000

	; conv vr2520 => vr2522
	%vr2523 = call double @llvm.nearbyint.f64(double %vr2520)
	%vr2522 = fptoui double %vr2523 to i64

	; call POKE64()
	; arg THIS
	%vr2524 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2522
	; arg 117
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2524, i64 %vr2522, i64 117 )

	; bop SYS_OFFSET + 7
	%vr2526 = load double, double* @SYS_OFFSET
	%vr2525 = fadd double %vr2526, 0x401C000000000000

	; conv vr2525 => vr2527
	%vr2528 = call double @llvm.nearbyint.f64(double %vr2525)
	%vr2527 = fptoui double %vr2528 to i64

	; call POKE64()
	; arg THIS
	%vr2529 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2527
	; arg 80
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2529, i64 %vr2527, i64 80 )

	; bop SYS_OFFSET + 8
	%vr2531 = load double, double* @SYS_OFFSET
	%vr2530 = fadd double %vr2531, 0x4020000000000000

	; conv vr2530 => vr2532
	%vr2533 = call double @llvm.nearbyint.f64(double %vr2530)
	%vr2532 = fptoui double %vr2533 to i64

	; call POKE64()
	; arg THIS
	%vr2534 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2532
	; arg 125
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2534, i64 %vr2532, i64 125 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1087:

	; label .Lt_059D
	br label %.Lt_059D
.Lt_059D:

	; branchbop V <> 41
	%vr2537 = load i64, i64* %V.111
	%vr2536 = icmp ne i64 %vr2537, 41
	br i1 %vr2536, label %.Lt_059F, label %.Lt_1088
.Lt_1088:

	; label .Lt_05A0
	br label %.Lt_05A0
.Lt_05A0:

	; bop SYS_OFFSET + 6
	%vr2540 = load double, double* @SYS_OFFSET
	%vr2539 = fadd double %vr2540, 0x4018000000000000

	; conv vr2539 => vr2541
	%vr2542 = call double @llvm.nearbyint.f64(double %vr2539)
	%vr2541 = fptoui double %vr2542 to i64

	; call POKE64()
	; arg THIS
	%vr2543 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2541
	; arg 92
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2543, i64 %vr2541, i64 92 )

	; bop SYS_OFFSET + 7
	%vr2545 = load double, double* @SYS_OFFSET
	%vr2544 = fadd double %vr2545, 0x401C000000000000

	; conv vr2544 => vr2546
	%vr2547 = call double @llvm.nearbyint.f64(double %vr2544)
	%vr2546 = fptoui double %vr2547 to i64

	; call POKE64()
	; arg THIS
	%vr2548 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2546
	; arg 53
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2548, i64 %vr2546, i64 53 )

	; bop SYS_OFFSET + 8
	%vr2550 = load double, double* @SYS_OFFSET
	%vr2549 = fadd double %vr2550, 0x4020000000000000

	; conv vr2549 => vr2551
	%vr2552 = call double @llvm.nearbyint.f64(double %vr2549)
	%vr2551 = fptoui double %vr2552 to i64

	; call POKE64()
	; arg THIS
	%vr2553 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2551
	; arg 102
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2553, i64 %vr2551, i64 102 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1089:

	; label .Lt_059F
	br label %.Lt_059F
.Lt_059F:

	; branchbop V <> 42
	%vr2556 = load i64, i64* %V.111
	%vr2555 = icmp ne i64 %vr2556, 42
	br i1 %vr2555, label %.Lt_05A1, label %.Lt_108A
.Lt_108A:

	; label .Lt_05A2
	br label %.Lt_05A2
.Lt_05A2:

	; bop SYS_OFFSET + 6
	%vr2559 = load double, double* @SYS_OFFSET
	%vr2558 = fadd double %vr2559, 0x4018000000000000

	; conv vr2558 => vr2560
	%vr2561 = call double @llvm.nearbyint.f64(double %vr2558)
	%vr2560 = fptoui double %vr2561 to i64

	; call POKE64()
	; arg THIS
	%vr2562 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2560
	; arg 233
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2562, i64 %vr2560, i64 233 )

	; bop SYS_OFFSET + 7
	%vr2564 = load double, double* @SYS_OFFSET
	%vr2563 = fadd double %vr2564, 0x401C000000000000

	; conv vr2563 => vr2565
	%vr2566 = call double @llvm.nearbyint.f64(double %vr2563)
	%vr2565 = fptoui double %vr2566 to i64

	; call POKE64()
	; arg THIS
	%vr2567 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2565
	; arg 185
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2567, i64 %vr2565, i64 185 )

	; bop SYS_OFFSET + 8
	%vr2569 = load double, double* @SYS_OFFSET
	%vr2568 = fadd double %vr2569, 0x4020000000000000

	; conv vr2568 => vr2570
	%vr2571 = call double @llvm.nearbyint.f64(double %vr2568)
	%vr2570 = fptoui double %vr2571 to i64

	; call POKE64()
	; arg THIS
	%vr2572 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2570
	; arg 110
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2572, i64 %vr2570, i64 110 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_108B:

	; label .Lt_05A1
	br label %.Lt_05A1
.Lt_05A1:

	; branchbop V <> 43
	%vr2575 = load i64, i64* %V.111
	%vr2574 = icmp ne i64 %vr2575, 43
	br i1 %vr2574, label %.Lt_05A3, label %.Lt_108C
.Lt_108C:

	; label .Lt_05A4
	br label %.Lt_05A4
.Lt_05A4:

	; bop SYS_OFFSET + 6
	%vr2578 = load double, double* @SYS_OFFSET
	%vr2577 = fadd double %vr2578, 0x4018000000000000

	; conv vr2577 => vr2579
	%vr2580 = call double @llvm.nearbyint.f64(double %vr2577)
	%vr2579 = fptoui double %vr2580 to i64

	; call POKE64()
	; arg THIS
	%vr2581 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2579
	; arg 193
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2581, i64 %vr2579, i64 193 )

	; bop SYS_OFFSET + 7
	%vr2583 = load double, double* @SYS_OFFSET
	%vr2582 = fadd double %vr2583, 0x401C000000000000

	; conv vr2582 => vr2584
	%vr2585 = call double @llvm.nearbyint.f64(double %vr2582)
	%vr2584 = fptoui double %vr2585 to i64

	; call POKE64()
	; arg THIS
	%vr2586 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2584
	; arg 125
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2586, i64 %vr2584, i64 125 )

	; bop SYS_OFFSET + 8
	%vr2588 = load double, double* @SYS_OFFSET
	%vr2587 = fadd double %vr2588, 0x4020000000000000

	; conv vr2587 => vr2589
	%vr2590 = call double @llvm.nearbyint.f64(double %vr2587)
	%vr2589 = fptoui double %vr2590 to i64

	; call POKE64()
	; arg THIS
	%vr2591 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2589
	; arg 17
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2591, i64 %vr2589, i64 17 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_108D:

	; label .Lt_05A3
	br label %.Lt_05A3
.Lt_05A3:

	; branchbop V <> 44
	%vr2594 = load i64, i64* %V.111
	%vr2593 = icmp ne i64 %vr2594, 44
	br i1 %vr2593, label %.Lt_05A5, label %.Lt_108E
.Lt_108E:

	; label .Lt_05A6
	br label %.Lt_05A6
.Lt_05A6:

	; bop SYS_OFFSET + 6
	%vr2597 = load double, double* @SYS_OFFSET
	%vr2596 = fadd double %vr2597, 0x4018000000000000

	; conv vr2596 => vr2598
	%vr2599 = call double @llvm.nearbyint.f64(double %vr2596)
	%vr2598 = fptoui double %vr2599 to i64

	; call POKE64()
	; arg THIS
	%vr2600 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2598
	; arg 143
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2600, i64 %vr2598, i64 143 )

	; bop SYS_OFFSET + 7
	%vr2602 = load double, double* @SYS_OFFSET
	%vr2601 = fadd double %vr2602, 0x401C000000000000

	; conv vr2601 => vr2603
	%vr2604 = call double @llvm.nearbyint.f64(double %vr2601)
	%vr2603 = fptoui double %vr2604 to i64

	; call POKE64()
	; arg THIS
	%vr2605 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2603
	; arg 89
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2605, i64 %vr2603, i64 89 )

	; bop SYS_OFFSET + 8
	%vr2607 = load double, double* @SYS_OFFSET
	%vr2606 = fadd double %vr2607, 0x4020000000000000

	; conv vr2606 => vr2608
	%vr2609 = call double @llvm.nearbyint.f64(double %vr2606)
	%vr2608 = fptoui double %vr2609 to i64

	; call POKE64()
	; arg THIS
	%vr2610 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2608
	; arg 2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2610, i64 %vr2608, i64 2 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_108F:

	; label .Lt_05A5
	br label %.Lt_05A5
.Lt_05A5:

	; branchbop V <> 45
	%vr2613 = load i64, i64* %V.111
	%vr2612 = icmp ne i64 %vr2613, 45
	br i1 %vr2612, label %.Lt_05A7, label %.Lt_1090
.Lt_1090:

	; label .Lt_05A8
	br label %.Lt_05A8
.Lt_05A8:

	; bop SYS_OFFSET + 6
	%vr2616 = load double, double* @SYS_OFFSET
	%vr2615 = fadd double %vr2616, 0x4018000000000000

	; conv vr2615 => vr2617
	%vr2618 = call double @llvm.nearbyint.f64(double %vr2615)
	%vr2617 = fptoui double %vr2618 to i64

	; call POKE64()
	; arg THIS
	%vr2619 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2617
	; arg 136
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2619, i64 %vr2617, i64 136 )

	; bop SYS_OFFSET + 7
	%vr2621 = load double, double* @SYS_OFFSET
	%vr2620 = fadd double %vr2621, 0x401C000000000000

	; conv vr2620 => vr2622
	%vr2623 = call double @llvm.nearbyint.f64(double %vr2620)
	%vr2622 = fptoui double %vr2623 to i64

	; call POKE64()
	; arg THIS
	%vr2624 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2622
	; arg 138
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2624, i64 %vr2622, i64 138 )

	; bop SYS_OFFSET + 8
	%vr2626 = load double, double* @SYS_OFFSET
	%vr2625 = fadd double %vr2626, 0x4020000000000000

	; conv vr2625 => vr2627
	%vr2628 = call double @llvm.nearbyint.f64(double %vr2625)
	%vr2627 = fptoui double %vr2628 to i64

	; call POKE64()
	; arg THIS
	%vr2629 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2627
	; arg 133
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2629, i64 %vr2627, i64 133 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1091:

	; label .Lt_05A7
	br label %.Lt_05A7
.Lt_05A7:

	; branchbop V <> 46
	%vr2632 = load i64, i64* %V.111
	%vr2631 = icmp ne i64 %vr2632, 46
	br i1 %vr2631, label %.Lt_05A9, label %.Lt_1092
.Lt_1092:

	; label .Lt_05AA
	br label %.Lt_05AA
.Lt_05AA:

	; bop SYS_OFFSET + 6
	%vr2635 = load double, double* @SYS_OFFSET
	%vr2634 = fadd double %vr2635, 0x4018000000000000

	; conv vr2634 => vr2636
	%vr2637 = call double @llvm.nearbyint.f64(double %vr2634)
	%vr2636 = fptoui double %vr2637 to i64

	; call POKE64()
	; arg THIS
	%vr2638 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2636
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2638, i64 %vr2636, i64 85 )

	; bop SYS_OFFSET + 7
	%vr2640 = load double, double* @SYS_OFFSET
	%vr2639 = fadd double %vr2640, 0x401C000000000000

	; conv vr2639 => vr2641
	%vr2642 = call double @llvm.nearbyint.f64(double %vr2639)
	%vr2641 = fptoui double %vr2642 to i64

	; call POKE64()
	; arg THIS
	%vr2643 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2641
	; arg 87
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2643, i64 %vr2641, i64 87 )

	; bop SYS_OFFSET + 8
	%vr2645 = load double, double* @SYS_OFFSET
	%vr2644 = fadd double %vr2645, 0x4020000000000000

	; conv vr2644 => vr2646
	%vr2647 = call double @llvm.nearbyint.f64(double %vr2644)
	%vr2646 = fptoui double %vr2647 to i64

	; call POKE64()
	; arg THIS
	%vr2648 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2646
	; arg 83
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2648, i64 %vr2646, i64 83 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1093:

	; label .Lt_05A9
	br label %.Lt_05A9
.Lt_05A9:

	; branchbop V <> 47
	%vr2651 = load i64, i64* %V.111
	%vr2650 = icmp ne i64 %vr2651, 47
	br i1 %vr2650, label %.Lt_05AB, label %.Lt_1094
.Lt_1094:

	; label .Lt_05AC
	br label %.Lt_05AC
.Lt_05AC:

	; bop SYS_OFFSET + 6
	%vr2654 = load double, double* @SYS_OFFSET
	%vr2653 = fadd double %vr2654, 0x4018000000000000

	; conv vr2653 => vr2655
	%vr2656 = call double @llvm.nearbyint.f64(double %vr2653)
	%vr2655 = fptoui double %vr2656 to i64

	; call POKE64()
	; arg THIS
	%vr2657 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2655
	; arg 46
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2657, i64 %vr2655, i64 46 )

	; bop SYS_OFFSET + 7
	%vr2659 = load double, double* @SYS_OFFSET
	%vr2658 = fadd double %vr2659, 0x401C000000000000

	; conv vr2658 => vr2660
	%vr2661 = call double @llvm.nearbyint.f64(double %vr2658)
	%vr2660 = fptoui double %vr2661 to i64

	; call POKE64()
	; arg THIS
	%vr2662 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2660
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2662, i64 %vr2660, i64 52 )

	; bop SYS_OFFSET + 8
	%vr2664 = load double, double* @SYS_OFFSET
	%vr2663 = fadd double %vr2664, 0x4020000000000000

	; conv vr2663 => vr2665
	%vr2666 = call double @llvm.nearbyint.f64(double %vr2663)
	%vr2665 = fptoui double %vr2666 to i64

	; call POKE64()
	; arg THIS
	%vr2667 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2665
	; arg 54
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2667, i64 %vr2665, i64 54 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1095:

	; label .Lt_05AB
	br label %.Lt_05AB
.Lt_05AB:

	; branchbop V <> 48
	%vr2670 = load i64, i64* %V.111
	%vr2669 = icmp ne i64 %vr2670, 48
	br i1 %vr2669, label %.Lt_05AD, label %.Lt_1096
.Lt_1096:

	; label .Lt_05AE
	br label %.Lt_05AE
.Lt_05AE:

	; bop SYS_OFFSET + 6
	%vr2673 = load double, double* @SYS_OFFSET
	%vr2672 = fadd double %vr2673, 0x4018000000000000

	; conv vr2672 => vr2674
	%vr2675 = call double @llvm.nearbyint.f64(double %vr2672)
	%vr2674 = fptoui double %vr2675 to i64

	; call POKE64()
	; arg THIS
	%vr2676 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2674
	; arg 238
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2676, i64 %vr2674, i64 238 )

	; bop SYS_OFFSET + 7
	%vr2678 = load double, double* @SYS_OFFSET
	%vr2677 = fadd double %vr2678, 0x401C000000000000

	; conv vr2677 => vr2679
	%vr2680 = call double @llvm.nearbyint.f64(double %vr2677)
	%vr2679 = fptoui double %vr2680 to i64

	; call POKE64()
	; arg THIS
	%vr2681 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2679
	; arg 238
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2681, i64 %vr2679, i64 238 )

	; bop SYS_OFFSET + 8
	%vr2683 = load double, double* @SYS_OFFSET
	%vr2682 = fadd double %vr2683, 0x4020000000000000

	; conv vr2682 => vr2684
	%vr2685 = call double @llvm.nearbyint.f64(double %vr2682)
	%vr2684 = fptoui double %vr2685 to i64

	; call POKE64()
	; arg THIS
	%vr2686 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2684
	; arg 236
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2686, i64 %vr2684, i64 236 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1097:

	; label .Lt_05AD
	br label %.Lt_05AD
.Lt_05AD:

	; branchbop V <> 49
	%vr2689 = load i64, i64* %V.111
	%vr2688 = icmp ne i64 %vr2689, 49
	br i1 %vr2688, label %.Lt_05AF, label %.Lt_1098
.Lt_1098:

	; label .Lt_05B0
	br label %.Lt_05B0
.Lt_05B0:

	; bop SYS_OFFSET + 6
	%vr2692 = load double, double* @SYS_OFFSET
	%vr2691 = fadd double %vr2692, 0x4018000000000000

	; conv vr2691 => vr2693
	%vr2694 = call double @llvm.nearbyint.f64(double %vr2691)
	%vr2693 = fptoui double %vr2694 to i64

	; call POKE64()
	; arg THIS
	%vr2695 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2693
	; arg 211
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2695, i64 %vr2693, i64 211 )

	; bop SYS_OFFSET + 7
	%vr2697 = load double, double* @SYS_OFFSET
	%vr2696 = fadd double %vr2697, 0x401C000000000000

	; conv vr2696 => vr2698
	%vr2699 = call double @llvm.nearbyint.f64(double %vr2696)
	%vr2698 = fptoui double %vr2699 to i64

	; call POKE64()
	; arg THIS
	%vr2700 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2698
	; arg 215
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2700, i64 %vr2698, i64 215 )

	; bop SYS_OFFSET + 8
	%vr2702 = load double, double* @SYS_OFFSET
	%vr2701 = fadd double %vr2702, 0x4020000000000000

	; conv vr2701 => vr2703
	%vr2704 = call double @llvm.nearbyint.f64(double %vr2701)
	%vr2703 = fptoui double %vr2704 to i64

	; call POKE64()
	; arg THIS
	%vr2705 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2703
	; arg 207
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2705, i64 %vr2703, i64 207 )

	; goto .Lt_054E
	br label %.Lt_054E
.Lt_1099:

	; label .Lt_05AF
	br label %.Lt_05AF
.Lt_05AF:

	; branchbop V <> 50
	%vr2708 = load i64, i64* %V.111
	%vr2707 = icmp ne i64 %vr2708, 50
	br i1 %vr2707, label %.Lt_05B1, label %.Lt_109A
.Lt_109A:

	; label .Lt_05B2
	br label %.Lt_05B2
.Lt_05B2:

	; bop SYS_OFFSET + 6
	%vr2711 = load double, double* @SYS_OFFSET
	%vr2710 = fadd double %vr2711, 0x4018000000000000

	; conv vr2710 => vr2712
	%vr2713 = call double @llvm.nearbyint.f64(double %vr2710)
	%vr2712 = fptoui double %vr2713 to i64

	; call POKE64()
	; arg THIS
	%vr2714 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2712
	; arg 186
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2714, i64 %vr2712, i64 186 )

	; bop SYS_OFFSET + 7
	%vr2716 = load double, double* @SYS_OFFSET
	%vr2715 = fadd double %vr2716, 0x401C000000000000

	; conv vr2715 => vr2717
	%vr2718 = call double @llvm.nearbyint.f64(double %vr2715)
	%vr2717 = fptoui double %vr2718 to i64

	; call POKE64()
	; arg THIS
	%vr2719 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2717
	; arg 189
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2719, i64 %vr2717, i64 189 )

	; bop SYS_OFFSET + 8
	%vr2721 = load double, double* @SYS_OFFSET
	%vr2720 = fadd double %vr2721, 0x4020000000000000

	; conv vr2720 => vr2722
	%vr2723 = call double @llvm.nearbyint.f64(double %vr2720)
	%vr2722 = fptoui double %vr2723 to i64

	; call POKE64()
	; arg THIS
	%vr2724 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr2722
	; arg 182
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2724, i64 %vr2722, i64 182 )

	; label .Lt_05B1
	br label %.Lt_05B1
.Lt_05B1:

	; label .Lt_054E
	br label %.Lt_054E
.Lt_054E:

	; goto .Lt_0459
	br label %.Lt_0459
.Lt_109B:

	; label .Lt_054D
	br label %.Lt_054D
.Lt_054D:

	; branchbop ADR <> 55487
	%vr2727 = load i64, i64* %ADR.110
	%vr2726 = icmp ne i64 %vr2727, 55487
	br i1 %vr2726, label %.Lt_05B3, label %.Lt_109C
.Lt_109C:

	; call POKE64()
	; arg THIS
	%vr2729 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 646
	; arg V
	%vr2730 = load i64, i64* %V.111
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr2729, i64 646, i64 %vr2730 )

	; label .Lt_05B3
	br label %.Lt_05B3
.Lt_05B3:

	; label .Lt_0459
	br label %.Lt_0459
.Lt_0459:

	; branchbop ADR <> 0
	%vr2733 = load i64, i64* %ADR.110
	%vr2732 = icmp ne i64 %vr2733, 0
	br i1 %vr2732, label %.Lt_05B5, label %.Lt_109D
.Lt_109D:

	; label .Lt_05B6
	br label %.Lt_05B6
.Lt_05B6:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_109E:

	; label .Lt_05B5
	br label %.Lt_05B5
.Lt_05B5:

	; conv ADR => vr2736
	%vr2737 = load i64, i64* %ADR.110
	%vr2736 = uitofp i64 %vr2737 to double

	; branchbop vr2736 <> SYS_OFFSET
	%vr2739 = load double, double* @SYS_OFFSET
	%vr2738 = icmp ne double %vr2736, %vr2739
	br i1 %vr2738, label %.Lt_05B7, label %.Lt_109F
.Lt_109F:

	; label .Lt_05B8
	br label %.Lt_05B8
.Lt_05B8:

	; localvar LT_05BB
	%LT_05BB.112 = alloca %FBSTRING

	; localvar LT_05BC
	%LT_05BC.113 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr2740 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr2746 = bitcast i8* bitcast ([22 x i8]* @Lt_05BA to i8*) to i8*

	; call fb_ULongintToStr()
	; arg V
	%vr2748 = load i64, i64* %V.111
	%vr2747 = call %FBSTRING* @fb_ULongintToStr( i64 %vr2748 )
	%vr2750 = bitcast i8* bitcast ([36 x i8]* @Lt_05B9 to i8*) to i8*

	; addrof LT_05BB

	; memclear LT_05BB
	%vr2752 = bitcast %FBSTRING* %LT_05BB.112 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr2752, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_05BB

	; call fb_StrConcat()
	; arg LT_05BB
	; arg vr2750
	; arg 36
	; arg vr2747
	%vr2756 = bitcast %FBSTRING* %vr2747 to i8*
	; arg -1
	%vr2754 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_05BB.112, i8* %vr2750, i64 36, i8* %vr2756, i64 -1 )

	; addrof LT_05BC

	; memclear LT_05BC
	%vr2759 = bitcast %FBSTRING* %LT_05BC.113 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr2759, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_05BC

	; call fb_StrConcat()
	; arg LT_05BC
	; arg vr2754
	%vr2762 = bitcast %FBSTRING* %vr2754 to i8*
	; arg -1
	; arg vr2746
	; arg 22
	%vr2761 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_05BC.113, i8* %vr2762, i64 -1, i8* %vr2746, i64 22 )

	; call fb_Shell()
	; arg vr2761
	%vr2766 = bitcast %FBSTRING* %vr2761 to %FBSTRING*
	%vr2765 = call i32 @fb_Shell( %FBSTRING* %vr2766 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr2767 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr2776 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr2775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr2776, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr2778 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr2779 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr2775
	%vr2782 = bitcast %FBSTRING* %vr2775 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr2778, float %vr2779, i32 4278190080, i32 0, %FBSTRING* %vr2782, i32 0, i32 1073741828 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10A0:

	; label .Lt_05B7
	br label %.Lt_05B7
.Lt_05B7:

	; conv ADR => vr2786
	%vr2787 = load i64, i64* %ADR.110
	%vr2786 = uitofp i64 %vr2787 to double

	; bop SYS_OFFSET + 1
	%vr2789 = load double, double* @SYS_OFFSET
	%vr2788 = fadd double %vr2789, 0x3FF0000000000000

	; branchbop vr2786 <> vr2788
	%vr2790 = icmp ne double %vr2786, %vr2788
	br i1 %vr2790, label %.Lt_05BD, label %.Lt_10A1
.Lt_10A1:

	; label .Lt_05BE
	br label %.Lt_05BE
.Lt_05BE:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr2791 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BF
	%vr2798 = bitcast i8* bitcast ([67 x i8]* @Lt_05BF to i8*) to i8*
	; arg 66
	%vr2797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr2798, i64 66 )

	; call fb_Shell()
	; arg vr2797
	%vr2801 = bitcast %FBSTRING* %vr2797 to %FBSTRING*
	%vr2800 = call i32 @fb_Shell( %FBSTRING* %vr2801 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr2802 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr2811 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr2810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr2811, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr2813 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr2814 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr2810
	%vr2817 = bitcast %FBSTRING* %vr2810 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr2813, float %vr2814, i32 4278190080, i32 0, %FBSTRING* %vr2817, i32 0, i32 1073741828 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10A2:

	; label .Lt_05BD
	br label %.Lt_05BD
.Lt_05BD:

	; conv ADR => vr2821
	%vr2822 = load i64, i64* %ADR.110
	%vr2821 = uitofp i64 %vr2822 to double

	; bop SYS_OFFSET + 2
	%vr2824 = load double, double* @SYS_OFFSET
	%vr2823 = fadd double %vr2824, 0x4000000000000000

	; branchbop vr2821 <> vr2823
	%vr2825 = icmp ne double %vr2821, %vr2823
	br i1 %vr2825, label %.Lt_05C0, label %.Lt_10A3
.Lt_10A3:

	; label .Lt_05C1
	br label %.Lt_05C1
.Lt_05C1:

	; bop SYS_OFFSET + 2
	%vr2827 = load double, double* @SYS_OFFSET
	%vr2826 = fadd double %vr2827, 0x4000000000000000

	; conv vr2826 => vr2828
	%vr2829 = call double @llvm.nearbyint.f64(double %vr2826)
	%vr2828 = fptosi double %vr2829 to i64

	; bop vr2828 SHL 3
	%vr2830 = shl i64 %vr2828, 3

	; bop THIS + vr2830
	%vr2832 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2833 = inttoptr i64 %vr2830 to %MEMORY_T*
	%vr2831 = add %MEMORY_T* %vr2832, %vr2833

	; conv vr2831 => vr2834
	%vr2836 = ptrtoint %MEMORY_T* %vr2831 to i64
	%vr2837 = inttoptr i64 %vr2836 to double*
	%vr2838 = load double, double* %vr2837
	%vr2835 = call double @llvm.nearbyint.f64(double %vr2838)
	%vr2834 = fptoui double %vr2835 to i64

	; bop vr2834 SHL 16
	%vr2840 = bitcast i64 16 to i64
	%vr2839 = shl i64 %vr2834, %vr2840

	; bop SYS_OFFSET + 3
	%vr2842 = load double, double* @SYS_OFFSET
	%vr2841 = fadd double %vr2842, 0x4008000000000000

	; conv vr2841 => vr2843
	%vr2844 = call double @llvm.nearbyint.f64(double %vr2841)
	%vr2843 = fptosi double %vr2844 to i64

	; bop vr2843 SHL 3
	%vr2845 = shl i64 %vr2843, 3

	; bop THIS + vr2845
	%vr2847 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2848 = inttoptr i64 %vr2845 to %MEMORY_T*
	%vr2846 = add %MEMORY_T* %vr2847, %vr2848

	; conv vr2846 => vr2849
	%vr2851 = ptrtoint %MEMORY_T* %vr2846 to i64
	%vr2852 = inttoptr i64 %vr2851 to double*
	%vr2853 = load double, double* %vr2852
	%vr2850 = call double @llvm.nearbyint.f64(double %vr2853)
	%vr2849 = fptoui double %vr2850 to i64

	; bop vr2849 SHL 8
	%vr2855 = bitcast i64 8 to i64
	%vr2854 = shl i64 %vr2849, %vr2855

	; bop vr2839 OR vr2854
	%vr2856 = or i64 %vr2839, %vr2854

	; bop SYS_OFFSET + 4
	%vr2858 = load double, double* @SYS_OFFSET
	%vr2857 = fadd double %vr2858, 0x4010000000000000

	; conv vr2857 => vr2859
	%vr2860 = call double @llvm.nearbyint.f64(double %vr2857)
	%vr2859 = fptosi double %vr2860 to i64

	; bop vr2859 SHL 3
	%vr2861 = shl i64 %vr2859, 3

	; bop THIS + vr2861
	%vr2863 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2864 = inttoptr i64 %vr2861 to %MEMORY_T*
	%vr2862 = add %MEMORY_T* %vr2863, %vr2864

	; conv vr2862 => vr2865
	%vr2867 = ptrtoint %MEMORY_T* %vr2862 to i64
	%vr2868 = inttoptr i64 %vr2867 to double*
	%vr2869 = load double, double* %vr2868
	%vr2866 = call double @llvm.nearbyint.f64(double %vr2869)
	%vr2865 = fptoui double %vr2866 to i64

	; bop vr2856 OR vr2865
	%vr2870 = or i64 %vr2856, %vr2865

	; bop SYS_OFFSET + 5
	%vr2872 = load double, double* @SYS_OFFSET
	%vr2871 = fadd double %vr2872, 0x4014000000000000

	; conv vr2871 => vr2873
	%vr2874 = call double @llvm.nearbyint.f64(double %vr2871)
	%vr2873 = fptosi double %vr2874 to i64

	; bop vr2873 SHL 3
	%vr2875 = shl i64 %vr2873, 3

	; bop THIS + vr2875
	%vr2877 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2878 = inttoptr i64 %vr2875 to %MEMORY_T*
	%vr2876 = add %MEMORY_T* %vr2877, %vr2878

	; conv vr2876 => vr2879
	%vr2881 = ptrtoint %MEMORY_T* %vr2876 to i64
	%vr2882 = inttoptr i64 %vr2881 to double*
	%vr2883 = load double, double* %vr2882
	%vr2880 = call double @llvm.nearbyint.f64(double %vr2883)
	%vr2879 = fptoui double %vr2880 to i64

	; bop vr2879 SHL 24
	%vr2885 = bitcast i64 24 to i64
	%vr2884 = shl i64 %vr2879, %vr2885

	; bop vr2870 OR vr2884
	%vr2886 = or i64 %vr2870, %vr2884

	; conv vr2886 => vr2887
	%vr2887 = uitofp i64 %vr2886 to double

	; bop SYS_OFFSET + 201
	%vr2889 = load double, double* @SYS_OFFSET
	%vr2888 = fadd double %vr2889, 0x4069200000000000

	; conv vr2888 => vr2890
	%vr2891 = call double @llvm.nearbyint.f64(double %vr2888)
	%vr2890 = fptosi double %vr2891 to i64

	; bop vr2890 SHL 3
	%vr2892 = shl i64 %vr2890, 3

	; bop THIS + vr2892
	%vr2894 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2895 = inttoptr i64 %vr2892 to %MEMORY_T*
	%vr2893 = add %MEMORY_T* %vr2894, %vr2895

	; store vr2893 := vr2887
	%vr2896 = ptrtoint %MEMORY_T* %vr2893 to i64
	%vr2897 = inttoptr i64 %vr2896 to double*
	store double %vr2887, double* %vr2897

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10A4:

	; label .Lt_05C0
	br label %.Lt_05C0
.Lt_05C0:

	; conv ADR => vr2899
	%vr2900 = load i64, i64* %ADR.110
	%vr2899 = uitofp i64 %vr2900 to double

	; bop SYS_OFFSET + 3
	%vr2902 = load double, double* @SYS_OFFSET
	%vr2901 = fadd double %vr2902, 0x4008000000000000

	; branchbop vr2899 <> vr2901
	%vr2903 = icmp ne double %vr2899, %vr2901
	br i1 %vr2903, label %.Lt_05C2, label %.Lt_10A5
.Lt_10A5:

	; label .Lt_05C3
	br label %.Lt_05C3
.Lt_05C3:

	; bop SYS_OFFSET + 2
	%vr2905 = load double, double* @SYS_OFFSET
	%vr2904 = fadd double %vr2905, 0x4000000000000000

	; conv vr2904 => vr2906
	%vr2907 = call double @llvm.nearbyint.f64(double %vr2904)
	%vr2906 = fptosi double %vr2907 to i64

	; bop vr2906 SHL 3
	%vr2908 = shl i64 %vr2906, 3

	; bop THIS + vr2908
	%vr2910 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2911 = inttoptr i64 %vr2908 to %MEMORY_T*
	%vr2909 = add %MEMORY_T* %vr2910, %vr2911

	; conv vr2909 => vr2912
	%vr2914 = ptrtoint %MEMORY_T* %vr2909 to i64
	%vr2915 = inttoptr i64 %vr2914 to double*
	%vr2916 = load double, double* %vr2915
	%vr2913 = call double @llvm.nearbyint.f64(double %vr2916)
	%vr2912 = fptoui double %vr2913 to i64

	; bop vr2912 SHL 16
	%vr2918 = bitcast i64 16 to i64
	%vr2917 = shl i64 %vr2912, %vr2918

	; bop SYS_OFFSET + 3
	%vr2920 = load double, double* @SYS_OFFSET
	%vr2919 = fadd double %vr2920, 0x4008000000000000

	; conv vr2919 => vr2921
	%vr2922 = call double @llvm.nearbyint.f64(double %vr2919)
	%vr2921 = fptosi double %vr2922 to i64

	; bop vr2921 SHL 3
	%vr2923 = shl i64 %vr2921, 3

	; bop THIS + vr2923
	%vr2925 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2926 = inttoptr i64 %vr2923 to %MEMORY_T*
	%vr2924 = add %MEMORY_T* %vr2925, %vr2926

	; conv vr2924 => vr2927
	%vr2929 = ptrtoint %MEMORY_T* %vr2924 to i64
	%vr2930 = inttoptr i64 %vr2929 to double*
	%vr2931 = load double, double* %vr2930
	%vr2928 = call double @llvm.nearbyint.f64(double %vr2931)
	%vr2927 = fptoui double %vr2928 to i64

	; bop vr2927 SHL 8
	%vr2933 = bitcast i64 8 to i64
	%vr2932 = shl i64 %vr2927, %vr2933

	; bop vr2917 OR vr2932
	%vr2934 = or i64 %vr2917, %vr2932

	; bop SYS_OFFSET + 4
	%vr2936 = load double, double* @SYS_OFFSET
	%vr2935 = fadd double %vr2936, 0x4010000000000000

	; conv vr2935 => vr2937
	%vr2938 = call double @llvm.nearbyint.f64(double %vr2935)
	%vr2937 = fptosi double %vr2938 to i64

	; bop vr2937 SHL 3
	%vr2939 = shl i64 %vr2937, 3

	; bop THIS + vr2939
	%vr2941 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2942 = inttoptr i64 %vr2939 to %MEMORY_T*
	%vr2940 = add %MEMORY_T* %vr2941, %vr2942

	; conv vr2940 => vr2943
	%vr2945 = ptrtoint %MEMORY_T* %vr2940 to i64
	%vr2946 = inttoptr i64 %vr2945 to double*
	%vr2947 = load double, double* %vr2946
	%vr2944 = call double @llvm.nearbyint.f64(double %vr2947)
	%vr2943 = fptoui double %vr2944 to i64

	; bop vr2934 OR vr2943
	%vr2948 = or i64 %vr2934, %vr2943

	; bop SYS_OFFSET + 5
	%vr2950 = load double, double* @SYS_OFFSET
	%vr2949 = fadd double %vr2950, 0x4014000000000000

	; conv vr2949 => vr2951
	%vr2952 = call double @llvm.nearbyint.f64(double %vr2949)
	%vr2951 = fptosi double %vr2952 to i64

	; bop vr2951 SHL 3
	%vr2953 = shl i64 %vr2951, 3

	; bop THIS + vr2953
	%vr2955 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2956 = inttoptr i64 %vr2953 to %MEMORY_T*
	%vr2954 = add %MEMORY_T* %vr2955, %vr2956

	; conv vr2954 => vr2957
	%vr2959 = ptrtoint %MEMORY_T* %vr2954 to i64
	%vr2960 = inttoptr i64 %vr2959 to double*
	%vr2961 = load double, double* %vr2960
	%vr2958 = call double @llvm.nearbyint.f64(double %vr2961)
	%vr2957 = fptoui double %vr2958 to i64

	; bop vr2957 SHL 24
	%vr2963 = bitcast i64 24 to i64
	%vr2962 = shl i64 %vr2957, %vr2963

	; bop vr2948 OR vr2962
	%vr2964 = or i64 %vr2948, %vr2962

	; conv vr2964 => vr2965
	%vr2965 = uitofp i64 %vr2964 to double

	; bop SYS_OFFSET + 201
	%vr2967 = load double, double* @SYS_OFFSET
	%vr2966 = fadd double %vr2967, 0x4069200000000000

	; conv vr2966 => vr2968
	%vr2969 = call double @llvm.nearbyint.f64(double %vr2966)
	%vr2968 = fptosi double %vr2969 to i64

	; bop vr2968 SHL 3
	%vr2970 = shl i64 %vr2968, 3

	; bop THIS + vr2970
	%vr2972 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2973 = inttoptr i64 %vr2970 to %MEMORY_T*
	%vr2971 = add %MEMORY_T* %vr2972, %vr2973

	; store vr2971 := vr2965
	%vr2974 = ptrtoint %MEMORY_T* %vr2971 to i64
	%vr2975 = inttoptr i64 %vr2974 to double*
	store double %vr2965, double* %vr2975

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10A6:

	; label .Lt_05C2
	br label %.Lt_05C2
.Lt_05C2:

	; conv ADR => vr2977
	%vr2978 = load i64, i64* %ADR.110
	%vr2977 = uitofp i64 %vr2978 to double

	; bop SYS_OFFSET + 4
	%vr2980 = load double, double* @SYS_OFFSET
	%vr2979 = fadd double %vr2980, 0x4010000000000000

	; branchbop vr2977 <> vr2979
	%vr2981 = icmp ne double %vr2977, %vr2979
	br i1 %vr2981, label %.Lt_05C4, label %.Lt_10A7
.Lt_10A7:

	; label .Lt_05C5
	br label %.Lt_05C5
.Lt_05C5:

	; bop SYS_OFFSET + 2
	%vr2983 = load double, double* @SYS_OFFSET
	%vr2982 = fadd double %vr2983, 0x4000000000000000

	; conv vr2982 => vr2984
	%vr2985 = call double @llvm.nearbyint.f64(double %vr2982)
	%vr2984 = fptosi double %vr2985 to i64

	; bop vr2984 SHL 3
	%vr2986 = shl i64 %vr2984, 3

	; bop THIS + vr2986
	%vr2988 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr2989 = inttoptr i64 %vr2986 to %MEMORY_T*
	%vr2987 = add %MEMORY_T* %vr2988, %vr2989

	; conv vr2987 => vr2990
	%vr2992 = ptrtoint %MEMORY_T* %vr2987 to i64
	%vr2993 = inttoptr i64 %vr2992 to double*
	%vr2994 = load double, double* %vr2993
	%vr2991 = call double @llvm.nearbyint.f64(double %vr2994)
	%vr2990 = fptoui double %vr2991 to i64

	; bop vr2990 SHL 16
	%vr2996 = bitcast i64 16 to i64
	%vr2995 = shl i64 %vr2990, %vr2996

	; bop SYS_OFFSET + 3
	%vr2998 = load double, double* @SYS_OFFSET
	%vr2997 = fadd double %vr2998, 0x4008000000000000

	; conv vr2997 => vr2999
	%vr3000 = call double @llvm.nearbyint.f64(double %vr2997)
	%vr2999 = fptosi double %vr3000 to i64

	; bop vr2999 SHL 3
	%vr3001 = shl i64 %vr2999, 3

	; bop THIS + vr3001
	%vr3003 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3004 = inttoptr i64 %vr3001 to %MEMORY_T*
	%vr3002 = add %MEMORY_T* %vr3003, %vr3004

	; conv vr3002 => vr3005
	%vr3007 = ptrtoint %MEMORY_T* %vr3002 to i64
	%vr3008 = inttoptr i64 %vr3007 to double*
	%vr3009 = load double, double* %vr3008
	%vr3006 = call double @llvm.nearbyint.f64(double %vr3009)
	%vr3005 = fptoui double %vr3006 to i64

	; bop vr3005 SHL 8
	%vr3011 = bitcast i64 8 to i64
	%vr3010 = shl i64 %vr3005, %vr3011

	; bop vr2995 OR vr3010
	%vr3012 = or i64 %vr2995, %vr3010

	; bop SYS_OFFSET + 4
	%vr3014 = load double, double* @SYS_OFFSET
	%vr3013 = fadd double %vr3014, 0x4010000000000000

	; conv vr3013 => vr3015
	%vr3016 = call double @llvm.nearbyint.f64(double %vr3013)
	%vr3015 = fptosi double %vr3016 to i64

	; bop vr3015 SHL 3
	%vr3017 = shl i64 %vr3015, 3

	; bop THIS + vr3017
	%vr3019 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3020 = inttoptr i64 %vr3017 to %MEMORY_T*
	%vr3018 = add %MEMORY_T* %vr3019, %vr3020

	; conv vr3018 => vr3021
	%vr3023 = ptrtoint %MEMORY_T* %vr3018 to i64
	%vr3024 = inttoptr i64 %vr3023 to double*
	%vr3025 = load double, double* %vr3024
	%vr3022 = call double @llvm.nearbyint.f64(double %vr3025)
	%vr3021 = fptoui double %vr3022 to i64

	; bop vr3012 OR vr3021
	%vr3026 = or i64 %vr3012, %vr3021

	; bop SYS_OFFSET + 5
	%vr3028 = load double, double* @SYS_OFFSET
	%vr3027 = fadd double %vr3028, 0x4014000000000000

	; conv vr3027 => vr3029
	%vr3030 = call double @llvm.nearbyint.f64(double %vr3027)
	%vr3029 = fptosi double %vr3030 to i64

	; bop vr3029 SHL 3
	%vr3031 = shl i64 %vr3029, 3

	; bop THIS + vr3031
	%vr3033 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3034 = inttoptr i64 %vr3031 to %MEMORY_T*
	%vr3032 = add %MEMORY_T* %vr3033, %vr3034

	; conv vr3032 => vr3035
	%vr3037 = ptrtoint %MEMORY_T* %vr3032 to i64
	%vr3038 = inttoptr i64 %vr3037 to double*
	%vr3039 = load double, double* %vr3038
	%vr3036 = call double @llvm.nearbyint.f64(double %vr3039)
	%vr3035 = fptoui double %vr3036 to i64

	; bop vr3035 SHL 24
	%vr3041 = bitcast i64 24 to i64
	%vr3040 = shl i64 %vr3035, %vr3041

	; bop vr3026 OR vr3040
	%vr3042 = or i64 %vr3026, %vr3040

	; conv vr3042 => vr3043
	%vr3043 = uitofp i64 %vr3042 to double

	; bop SYS_OFFSET + 201
	%vr3045 = load double, double* @SYS_OFFSET
	%vr3044 = fadd double %vr3045, 0x4069200000000000

	; conv vr3044 => vr3046
	%vr3047 = call double @llvm.nearbyint.f64(double %vr3044)
	%vr3046 = fptosi double %vr3047 to i64

	; bop vr3046 SHL 3
	%vr3048 = shl i64 %vr3046, 3

	; bop THIS + vr3048
	%vr3050 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3051 = inttoptr i64 %vr3048 to %MEMORY_T*
	%vr3049 = add %MEMORY_T* %vr3050, %vr3051

	; store vr3049 := vr3043
	%vr3052 = ptrtoint %MEMORY_T* %vr3049 to i64
	%vr3053 = inttoptr i64 %vr3052 to double*
	store double %vr3043, double* %vr3053

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10A8:

	; label .Lt_05C4
	br label %.Lt_05C4
.Lt_05C4:

	; conv ADR => vr3055
	%vr3056 = load i64, i64* %ADR.110
	%vr3055 = uitofp i64 %vr3056 to double

	; bop SYS_OFFSET + 5
	%vr3058 = load double, double* @SYS_OFFSET
	%vr3057 = fadd double %vr3058, 0x4014000000000000

	; branchbop vr3055 <> vr3057
	%vr3059 = icmp ne double %vr3055, %vr3057
	br i1 %vr3059, label %.Lt_05C6, label %.Lt_10A9
.Lt_10A9:

	; label .Lt_05C7
	br label %.Lt_05C7
.Lt_05C7:

	; bop SYS_OFFSET + 2
	%vr3061 = load double, double* @SYS_OFFSET
	%vr3060 = fadd double %vr3061, 0x4000000000000000

	; conv vr3060 => vr3062
	%vr3063 = call double @llvm.nearbyint.f64(double %vr3060)
	%vr3062 = fptosi double %vr3063 to i64

	; bop vr3062 SHL 3
	%vr3064 = shl i64 %vr3062, 3

	; bop THIS + vr3064
	%vr3066 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3067 = inttoptr i64 %vr3064 to %MEMORY_T*
	%vr3065 = add %MEMORY_T* %vr3066, %vr3067

	; conv vr3065 => vr3068
	%vr3070 = ptrtoint %MEMORY_T* %vr3065 to i64
	%vr3071 = inttoptr i64 %vr3070 to double*
	%vr3072 = load double, double* %vr3071
	%vr3069 = call double @llvm.nearbyint.f64(double %vr3072)
	%vr3068 = fptoui double %vr3069 to i64

	; bop vr3068 SHL 16
	%vr3074 = bitcast i64 16 to i64
	%vr3073 = shl i64 %vr3068, %vr3074

	; bop SYS_OFFSET + 3
	%vr3076 = load double, double* @SYS_OFFSET
	%vr3075 = fadd double %vr3076, 0x4008000000000000

	; conv vr3075 => vr3077
	%vr3078 = call double @llvm.nearbyint.f64(double %vr3075)
	%vr3077 = fptosi double %vr3078 to i64

	; bop vr3077 SHL 3
	%vr3079 = shl i64 %vr3077, 3

	; bop THIS + vr3079
	%vr3081 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3082 = inttoptr i64 %vr3079 to %MEMORY_T*
	%vr3080 = add %MEMORY_T* %vr3081, %vr3082

	; conv vr3080 => vr3083
	%vr3085 = ptrtoint %MEMORY_T* %vr3080 to i64
	%vr3086 = inttoptr i64 %vr3085 to double*
	%vr3087 = load double, double* %vr3086
	%vr3084 = call double @llvm.nearbyint.f64(double %vr3087)
	%vr3083 = fptoui double %vr3084 to i64

	; bop vr3083 SHL 8
	%vr3089 = bitcast i64 8 to i64
	%vr3088 = shl i64 %vr3083, %vr3089

	; bop vr3073 OR vr3088
	%vr3090 = or i64 %vr3073, %vr3088

	; bop SYS_OFFSET + 4
	%vr3092 = load double, double* @SYS_OFFSET
	%vr3091 = fadd double %vr3092, 0x4010000000000000

	; conv vr3091 => vr3093
	%vr3094 = call double @llvm.nearbyint.f64(double %vr3091)
	%vr3093 = fptosi double %vr3094 to i64

	; bop vr3093 SHL 3
	%vr3095 = shl i64 %vr3093, 3

	; bop THIS + vr3095
	%vr3097 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3098 = inttoptr i64 %vr3095 to %MEMORY_T*
	%vr3096 = add %MEMORY_T* %vr3097, %vr3098

	; conv vr3096 => vr3099
	%vr3101 = ptrtoint %MEMORY_T* %vr3096 to i64
	%vr3102 = inttoptr i64 %vr3101 to double*
	%vr3103 = load double, double* %vr3102
	%vr3100 = call double @llvm.nearbyint.f64(double %vr3103)
	%vr3099 = fptoui double %vr3100 to i64

	; bop vr3090 OR vr3099
	%vr3104 = or i64 %vr3090, %vr3099

	; bop SYS_OFFSET + 5
	%vr3106 = load double, double* @SYS_OFFSET
	%vr3105 = fadd double %vr3106, 0x4014000000000000

	; conv vr3105 => vr3107
	%vr3108 = call double @llvm.nearbyint.f64(double %vr3105)
	%vr3107 = fptosi double %vr3108 to i64

	; bop vr3107 SHL 3
	%vr3109 = shl i64 %vr3107, 3

	; bop THIS + vr3109
	%vr3111 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3112 = inttoptr i64 %vr3109 to %MEMORY_T*
	%vr3110 = add %MEMORY_T* %vr3111, %vr3112

	; conv vr3110 => vr3113
	%vr3115 = ptrtoint %MEMORY_T* %vr3110 to i64
	%vr3116 = inttoptr i64 %vr3115 to double*
	%vr3117 = load double, double* %vr3116
	%vr3114 = call double @llvm.nearbyint.f64(double %vr3117)
	%vr3113 = fptoui double %vr3114 to i64

	; bop vr3113 SHL 24
	%vr3119 = bitcast i64 24 to i64
	%vr3118 = shl i64 %vr3113, %vr3119

	; bop vr3104 OR vr3118
	%vr3120 = or i64 %vr3104, %vr3118

	; conv vr3120 => vr3121
	%vr3121 = uitofp i64 %vr3120 to double

	; bop SYS_OFFSET + 201
	%vr3123 = load double, double* @SYS_OFFSET
	%vr3122 = fadd double %vr3123, 0x4069200000000000

	; conv vr3122 => vr3124
	%vr3125 = call double @llvm.nearbyint.f64(double %vr3122)
	%vr3124 = fptosi double %vr3125 to i64

	; bop vr3124 SHL 3
	%vr3126 = shl i64 %vr3124, 3

	; bop THIS + vr3126
	%vr3128 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3129 = inttoptr i64 %vr3126 to %MEMORY_T*
	%vr3127 = add %MEMORY_T* %vr3128, %vr3129

	; store vr3127 := vr3121
	%vr3130 = ptrtoint %MEMORY_T* %vr3127 to i64
	%vr3131 = inttoptr i64 %vr3130 to double*
	store double %vr3121, double* %vr3131

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10AA:

	; label .Lt_05C6
	br label %.Lt_05C6
.Lt_05C6:

	; conv ADR => vr3133
	%vr3134 = load i64, i64* %ADR.110
	%vr3133 = uitofp i64 %vr3134 to double

	; bop SYS_OFFSET + 6
	%vr3136 = load double, double* @SYS_OFFSET
	%vr3135 = fadd double %vr3136, 0x4018000000000000

	; branchbop vr3133 <> vr3135
	%vr3137 = icmp ne double %vr3133, %vr3135
	br i1 %vr3137, label %.Lt_05C8, label %.Lt_10AB
.Lt_10AB:

	; label .Lt_05C9
	br label %.Lt_05C9
.Lt_05C9:

	; bop SYS_OFFSET + 6
	%vr3139 = load double, double* @SYS_OFFSET
	%vr3138 = fadd double %vr3139, 0x4018000000000000

	; conv vr3138 => vr3140
	%vr3141 = call double @llvm.nearbyint.f64(double %vr3138)
	%vr3140 = fptosi double %vr3141 to i64

	; bop vr3140 SHL 3
	%vr3142 = shl i64 %vr3140, 3

	; bop THIS + vr3142
	%vr3144 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3145 = inttoptr i64 %vr3142 to %MEMORY_T*
	%vr3143 = add %MEMORY_T* %vr3144, %vr3145

	; conv vr3143 => vr3146
	%vr3148 = ptrtoint %MEMORY_T* %vr3143 to i64
	%vr3149 = inttoptr i64 %vr3148 to double*
	%vr3150 = load double, double* %vr3149
	%vr3147 = call double @llvm.nearbyint.f64(double %vr3150)
	%vr3146 = fptoui double %vr3147 to i64

	; bop vr3146 SHL 16
	%vr3152 = bitcast i64 16 to i64
	%vr3151 = shl i64 %vr3146, %vr3152

	; bop SYS_OFFSET + 7
	%vr3154 = load double, double* @SYS_OFFSET
	%vr3153 = fadd double %vr3154, 0x401C000000000000

	; conv vr3153 => vr3155
	%vr3156 = call double @llvm.nearbyint.f64(double %vr3153)
	%vr3155 = fptosi double %vr3156 to i64

	; bop vr3155 SHL 3
	%vr3157 = shl i64 %vr3155, 3

	; bop THIS + vr3157
	%vr3159 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3160 = inttoptr i64 %vr3157 to %MEMORY_T*
	%vr3158 = add %MEMORY_T* %vr3159, %vr3160

	; conv vr3158 => vr3161
	%vr3163 = ptrtoint %MEMORY_T* %vr3158 to i64
	%vr3164 = inttoptr i64 %vr3163 to double*
	%vr3165 = load double, double* %vr3164
	%vr3162 = call double @llvm.nearbyint.f64(double %vr3165)
	%vr3161 = fptoui double %vr3162 to i64

	; bop vr3161 SHL 8
	%vr3167 = bitcast i64 8 to i64
	%vr3166 = shl i64 %vr3161, %vr3167

	; bop vr3151 OR vr3166
	%vr3168 = or i64 %vr3151, %vr3166

	; bop SYS_OFFSET + 8
	%vr3170 = load double, double* @SYS_OFFSET
	%vr3169 = fadd double %vr3170, 0x4020000000000000

	; conv vr3169 => vr3171
	%vr3172 = call double @llvm.nearbyint.f64(double %vr3169)
	%vr3171 = fptosi double %vr3172 to i64

	; bop vr3171 SHL 3
	%vr3173 = shl i64 %vr3171, 3

	; bop THIS + vr3173
	%vr3175 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3176 = inttoptr i64 %vr3173 to %MEMORY_T*
	%vr3174 = add %MEMORY_T* %vr3175, %vr3176

	; conv vr3174 => vr3177
	%vr3179 = ptrtoint %MEMORY_T* %vr3174 to i64
	%vr3180 = inttoptr i64 %vr3179 to double*
	%vr3181 = load double, double* %vr3180
	%vr3178 = call double @llvm.nearbyint.f64(double %vr3181)
	%vr3177 = fptoui double %vr3178 to i64

	; bop vr3168 OR vr3177
	%vr3182 = or i64 %vr3168, %vr3177

	; bop SYS_OFFSET + 9
	%vr3184 = load double, double* @SYS_OFFSET
	%vr3183 = fadd double %vr3184, 0x4022000000000000

	; conv vr3183 => vr3185
	%vr3186 = call double @llvm.nearbyint.f64(double %vr3183)
	%vr3185 = fptosi double %vr3186 to i64

	; bop vr3185 SHL 3
	%vr3187 = shl i64 %vr3185, 3

	; bop THIS + vr3187
	%vr3189 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3190 = inttoptr i64 %vr3187 to %MEMORY_T*
	%vr3188 = add %MEMORY_T* %vr3189, %vr3190

	; conv vr3188 => vr3191
	%vr3193 = ptrtoint %MEMORY_T* %vr3188 to i64
	%vr3194 = inttoptr i64 %vr3193 to double*
	%vr3195 = load double, double* %vr3194
	%vr3192 = call double @llvm.nearbyint.f64(double %vr3195)
	%vr3191 = fptoui double %vr3192 to i64

	; bop vr3191 SHL 24
	%vr3197 = bitcast i64 24 to i64
	%vr3196 = shl i64 %vr3191, %vr3197

	; bop vr3182 OR vr3196
	%vr3198 = or i64 %vr3182, %vr3196

	; conv vr3198 => vr3199
	%vr3199 = uitofp i64 %vr3198 to double

	; bop SYS_OFFSET + 202
	%vr3201 = load double, double* @SYS_OFFSET
	%vr3200 = fadd double %vr3201, 0x4069400000000000

	; conv vr3200 => vr3202
	%vr3203 = call double @llvm.nearbyint.f64(double %vr3200)
	%vr3202 = fptosi double %vr3203 to i64

	; bop vr3202 SHL 3
	%vr3204 = shl i64 %vr3202, 3

	; bop THIS + vr3204
	%vr3206 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3207 = inttoptr i64 %vr3204 to %MEMORY_T*
	%vr3205 = add %MEMORY_T* %vr3206, %vr3207

	; store vr3205 := vr3199
	%vr3208 = ptrtoint %MEMORY_T* %vr3205 to i64
	%vr3209 = inttoptr i64 %vr3208 to double*
	store double %vr3199, double* %vr3209

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10AC:

	; label .Lt_05C8
	br label %.Lt_05C8
.Lt_05C8:

	; conv ADR => vr3211
	%vr3212 = load i64, i64* %ADR.110
	%vr3211 = uitofp i64 %vr3212 to double

	; bop SYS_OFFSET + 7
	%vr3214 = load double, double* @SYS_OFFSET
	%vr3213 = fadd double %vr3214, 0x401C000000000000

	; branchbop vr3211 <> vr3213
	%vr3215 = icmp ne double %vr3211, %vr3213
	br i1 %vr3215, label %.Lt_05CA, label %.Lt_10AD
.Lt_10AD:

	; label .Lt_05CB
	br label %.Lt_05CB
.Lt_05CB:

	; bop SYS_OFFSET + 6
	%vr3217 = load double, double* @SYS_OFFSET
	%vr3216 = fadd double %vr3217, 0x4018000000000000

	; conv vr3216 => vr3218
	%vr3219 = call double @llvm.nearbyint.f64(double %vr3216)
	%vr3218 = fptosi double %vr3219 to i64

	; bop vr3218 SHL 3
	%vr3220 = shl i64 %vr3218, 3

	; bop THIS + vr3220
	%vr3222 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3223 = inttoptr i64 %vr3220 to %MEMORY_T*
	%vr3221 = add %MEMORY_T* %vr3222, %vr3223

	; conv vr3221 => vr3224
	%vr3226 = ptrtoint %MEMORY_T* %vr3221 to i64
	%vr3227 = inttoptr i64 %vr3226 to double*
	%vr3228 = load double, double* %vr3227
	%vr3225 = call double @llvm.nearbyint.f64(double %vr3228)
	%vr3224 = fptoui double %vr3225 to i64

	; bop vr3224 SHL 16
	%vr3230 = bitcast i64 16 to i64
	%vr3229 = shl i64 %vr3224, %vr3230

	; bop SYS_OFFSET + 7
	%vr3232 = load double, double* @SYS_OFFSET
	%vr3231 = fadd double %vr3232, 0x401C000000000000

	; conv vr3231 => vr3233
	%vr3234 = call double @llvm.nearbyint.f64(double %vr3231)
	%vr3233 = fptosi double %vr3234 to i64

	; bop vr3233 SHL 3
	%vr3235 = shl i64 %vr3233, 3

	; bop THIS + vr3235
	%vr3237 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3238 = inttoptr i64 %vr3235 to %MEMORY_T*
	%vr3236 = add %MEMORY_T* %vr3237, %vr3238

	; conv vr3236 => vr3239
	%vr3241 = ptrtoint %MEMORY_T* %vr3236 to i64
	%vr3242 = inttoptr i64 %vr3241 to double*
	%vr3243 = load double, double* %vr3242
	%vr3240 = call double @llvm.nearbyint.f64(double %vr3243)
	%vr3239 = fptoui double %vr3240 to i64

	; bop vr3239 SHL 8
	%vr3245 = bitcast i64 8 to i64
	%vr3244 = shl i64 %vr3239, %vr3245

	; bop vr3229 OR vr3244
	%vr3246 = or i64 %vr3229, %vr3244

	; bop SYS_OFFSET + 8
	%vr3248 = load double, double* @SYS_OFFSET
	%vr3247 = fadd double %vr3248, 0x4020000000000000

	; conv vr3247 => vr3249
	%vr3250 = call double @llvm.nearbyint.f64(double %vr3247)
	%vr3249 = fptosi double %vr3250 to i64

	; bop vr3249 SHL 3
	%vr3251 = shl i64 %vr3249, 3

	; bop THIS + vr3251
	%vr3253 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3254 = inttoptr i64 %vr3251 to %MEMORY_T*
	%vr3252 = add %MEMORY_T* %vr3253, %vr3254

	; conv vr3252 => vr3255
	%vr3257 = ptrtoint %MEMORY_T* %vr3252 to i64
	%vr3258 = inttoptr i64 %vr3257 to double*
	%vr3259 = load double, double* %vr3258
	%vr3256 = call double @llvm.nearbyint.f64(double %vr3259)
	%vr3255 = fptoui double %vr3256 to i64

	; bop vr3246 OR vr3255
	%vr3260 = or i64 %vr3246, %vr3255

	; bop SYS_OFFSET + 9
	%vr3262 = load double, double* @SYS_OFFSET
	%vr3261 = fadd double %vr3262, 0x4022000000000000

	; conv vr3261 => vr3263
	%vr3264 = call double @llvm.nearbyint.f64(double %vr3261)
	%vr3263 = fptosi double %vr3264 to i64

	; bop vr3263 SHL 3
	%vr3265 = shl i64 %vr3263, 3

	; bop THIS + vr3265
	%vr3267 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3268 = inttoptr i64 %vr3265 to %MEMORY_T*
	%vr3266 = add %MEMORY_T* %vr3267, %vr3268

	; conv vr3266 => vr3269
	%vr3271 = ptrtoint %MEMORY_T* %vr3266 to i64
	%vr3272 = inttoptr i64 %vr3271 to double*
	%vr3273 = load double, double* %vr3272
	%vr3270 = call double @llvm.nearbyint.f64(double %vr3273)
	%vr3269 = fptoui double %vr3270 to i64

	; bop vr3269 SHL 24
	%vr3275 = bitcast i64 24 to i64
	%vr3274 = shl i64 %vr3269, %vr3275

	; bop vr3260 OR vr3274
	%vr3276 = or i64 %vr3260, %vr3274

	; conv vr3276 => vr3277
	%vr3277 = uitofp i64 %vr3276 to double

	; bop SYS_OFFSET + 202
	%vr3279 = load double, double* @SYS_OFFSET
	%vr3278 = fadd double %vr3279, 0x4069400000000000

	; conv vr3278 => vr3280
	%vr3281 = call double @llvm.nearbyint.f64(double %vr3278)
	%vr3280 = fptosi double %vr3281 to i64

	; bop vr3280 SHL 3
	%vr3282 = shl i64 %vr3280, 3

	; bop THIS + vr3282
	%vr3284 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3285 = inttoptr i64 %vr3282 to %MEMORY_T*
	%vr3283 = add %MEMORY_T* %vr3284, %vr3285

	; store vr3283 := vr3277
	%vr3286 = ptrtoint %MEMORY_T* %vr3283 to i64
	%vr3287 = inttoptr i64 %vr3286 to double*
	store double %vr3277, double* %vr3287

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10AE:

	; label .Lt_05CA
	br label %.Lt_05CA
.Lt_05CA:

	; conv ADR => vr3289
	%vr3290 = load i64, i64* %ADR.110
	%vr3289 = uitofp i64 %vr3290 to double

	; bop SYS_OFFSET + 8
	%vr3292 = load double, double* @SYS_OFFSET
	%vr3291 = fadd double %vr3292, 0x4020000000000000

	; branchbop vr3289 <> vr3291
	%vr3293 = icmp ne double %vr3289, %vr3291
	br i1 %vr3293, label %.Lt_05CC, label %.Lt_10AF
.Lt_10AF:

	; label .Lt_05CD
	br label %.Lt_05CD
.Lt_05CD:

	; bop SYS_OFFSET + 6
	%vr3295 = load double, double* @SYS_OFFSET
	%vr3294 = fadd double %vr3295, 0x4018000000000000

	; conv vr3294 => vr3296
	%vr3297 = call double @llvm.nearbyint.f64(double %vr3294)
	%vr3296 = fptosi double %vr3297 to i64

	; bop vr3296 SHL 3
	%vr3298 = shl i64 %vr3296, 3

	; bop THIS + vr3298
	%vr3300 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3301 = inttoptr i64 %vr3298 to %MEMORY_T*
	%vr3299 = add %MEMORY_T* %vr3300, %vr3301

	; conv vr3299 => vr3302
	%vr3304 = ptrtoint %MEMORY_T* %vr3299 to i64
	%vr3305 = inttoptr i64 %vr3304 to double*
	%vr3306 = load double, double* %vr3305
	%vr3303 = call double @llvm.nearbyint.f64(double %vr3306)
	%vr3302 = fptoui double %vr3303 to i64

	; bop vr3302 SHL 16
	%vr3308 = bitcast i64 16 to i64
	%vr3307 = shl i64 %vr3302, %vr3308

	; bop SYS_OFFSET + 7
	%vr3310 = load double, double* @SYS_OFFSET
	%vr3309 = fadd double %vr3310, 0x401C000000000000

	; conv vr3309 => vr3311
	%vr3312 = call double @llvm.nearbyint.f64(double %vr3309)
	%vr3311 = fptosi double %vr3312 to i64

	; bop vr3311 SHL 3
	%vr3313 = shl i64 %vr3311, 3

	; bop THIS + vr3313
	%vr3315 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3316 = inttoptr i64 %vr3313 to %MEMORY_T*
	%vr3314 = add %MEMORY_T* %vr3315, %vr3316

	; conv vr3314 => vr3317
	%vr3319 = ptrtoint %MEMORY_T* %vr3314 to i64
	%vr3320 = inttoptr i64 %vr3319 to double*
	%vr3321 = load double, double* %vr3320
	%vr3318 = call double @llvm.nearbyint.f64(double %vr3321)
	%vr3317 = fptoui double %vr3318 to i64

	; bop vr3317 SHL 8
	%vr3323 = bitcast i64 8 to i64
	%vr3322 = shl i64 %vr3317, %vr3323

	; bop vr3307 OR vr3322
	%vr3324 = or i64 %vr3307, %vr3322

	; bop SYS_OFFSET + 8
	%vr3326 = load double, double* @SYS_OFFSET
	%vr3325 = fadd double %vr3326, 0x4020000000000000

	; conv vr3325 => vr3327
	%vr3328 = call double @llvm.nearbyint.f64(double %vr3325)
	%vr3327 = fptosi double %vr3328 to i64

	; bop vr3327 SHL 3
	%vr3329 = shl i64 %vr3327, 3

	; bop THIS + vr3329
	%vr3331 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3332 = inttoptr i64 %vr3329 to %MEMORY_T*
	%vr3330 = add %MEMORY_T* %vr3331, %vr3332

	; conv vr3330 => vr3333
	%vr3335 = ptrtoint %MEMORY_T* %vr3330 to i64
	%vr3336 = inttoptr i64 %vr3335 to double*
	%vr3337 = load double, double* %vr3336
	%vr3334 = call double @llvm.nearbyint.f64(double %vr3337)
	%vr3333 = fptoui double %vr3334 to i64

	; bop vr3324 OR vr3333
	%vr3338 = or i64 %vr3324, %vr3333

	; bop SYS_OFFSET + 9
	%vr3340 = load double, double* @SYS_OFFSET
	%vr3339 = fadd double %vr3340, 0x4022000000000000

	; conv vr3339 => vr3341
	%vr3342 = call double @llvm.nearbyint.f64(double %vr3339)
	%vr3341 = fptosi double %vr3342 to i64

	; bop vr3341 SHL 3
	%vr3343 = shl i64 %vr3341, 3

	; bop THIS + vr3343
	%vr3345 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3346 = inttoptr i64 %vr3343 to %MEMORY_T*
	%vr3344 = add %MEMORY_T* %vr3345, %vr3346

	; conv vr3344 => vr3347
	%vr3349 = ptrtoint %MEMORY_T* %vr3344 to i64
	%vr3350 = inttoptr i64 %vr3349 to double*
	%vr3351 = load double, double* %vr3350
	%vr3348 = call double @llvm.nearbyint.f64(double %vr3351)
	%vr3347 = fptoui double %vr3348 to i64

	; bop vr3347 SHL 24
	%vr3353 = bitcast i64 24 to i64
	%vr3352 = shl i64 %vr3347, %vr3353

	; bop vr3338 OR vr3352
	%vr3354 = or i64 %vr3338, %vr3352

	; conv vr3354 => vr3355
	%vr3355 = uitofp i64 %vr3354 to double

	; bop SYS_OFFSET + 202
	%vr3357 = load double, double* @SYS_OFFSET
	%vr3356 = fadd double %vr3357, 0x4069400000000000

	; conv vr3356 => vr3358
	%vr3359 = call double @llvm.nearbyint.f64(double %vr3356)
	%vr3358 = fptosi double %vr3359 to i64

	; bop vr3358 SHL 3
	%vr3360 = shl i64 %vr3358, 3

	; bop THIS + vr3360
	%vr3362 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3363 = inttoptr i64 %vr3360 to %MEMORY_T*
	%vr3361 = add %MEMORY_T* %vr3362, %vr3363

	; store vr3361 := vr3355
	%vr3364 = ptrtoint %MEMORY_T* %vr3361 to i64
	%vr3365 = inttoptr i64 %vr3364 to double*
	store double %vr3355, double* %vr3365

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10B0:

	; label .Lt_05CC
	br label %.Lt_05CC
.Lt_05CC:

	; conv ADR => vr3367
	%vr3368 = load i64, i64* %ADR.110
	%vr3367 = uitofp i64 %vr3368 to double

	; bop SYS_OFFSET + 9
	%vr3370 = load double, double* @SYS_OFFSET
	%vr3369 = fadd double %vr3370, 0x4022000000000000

	; branchbop vr3367 <> vr3369
	%vr3371 = icmp ne double %vr3367, %vr3369
	br i1 %vr3371, label %.Lt_05CE, label %.Lt_10B1
.Lt_10B1:

	; label .Lt_05CF
	br label %.Lt_05CF
.Lt_05CF:

	; bop SYS_OFFSET + 6
	%vr3373 = load double, double* @SYS_OFFSET
	%vr3372 = fadd double %vr3373, 0x4018000000000000

	; conv vr3372 => vr3374
	%vr3375 = call double @llvm.nearbyint.f64(double %vr3372)
	%vr3374 = fptosi double %vr3375 to i64

	; bop vr3374 SHL 3
	%vr3376 = shl i64 %vr3374, 3

	; bop THIS + vr3376
	%vr3378 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3379 = inttoptr i64 %vr3376 to %MEMORY_T*
	%vr3377 = add %MEMORY_T* %vr3378, %vr3379

	; conv vr3377 => vr3380
	%vr3382 = ptrtoint %MEMORY_T* %vr3377 to i64
	%vr3383 = inttoptr i64 %vr3382 to double*
	%vr3384 = load double, double* %vr3383
	%vr3381 = call double @llvm.nearbyint.f64(double %vr3384)
	%vr3380 = fptoui double %vr3381 to i64

	; bop vr3380 SHL 16
	%vr3386 = bitcast i64 16 to i64
	%vr3385 = shl i64 %vr3380, %vr3386

	; bop SYS_OFFSET + 7
	%vr3388 = load double, double* @SYS_OFFSET
	%vr3387 = fadd double %vr3388, 0x401C000000000000

	; conv vr3387 => vr3389
	%vr3390 = call double @llvm.nearbyint.f64(double %vr3387)
	%vr3389 = fptosi double %vr3390 to i64

	; bop vr3389 SHL 3
	%vr3391 = shl i64 %vr3389, 3

	; bop THIS + vr3391
	%vr3393 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3394 = inttoptr i64 %vr3391 to %MEMORY_T*
	%vr3392 = add %MEMORY_T* %vr3393, %vr3394

	; conv vr3392 => vr3395
	%vr3397 = ptrtoint %MEMORY_T* %vr3392 to i64
	%vr3398 = inttoptr i64 %vr3397 to double*
	%vr3399 = load double, double* %vr3398
	%vr3396 = call double @llvm.nearbyint.f64(double %vr3399)
	%vr3395 = fptoui double %vr3396 to i64

	; bop vr3395 SHL 8
	%vr3401 = bitcast i64 8 to i64
	%vr3400 = shl i64 %vr3395, %vr3401

	; bop vr3385 OR vr3400
	%vr3402 = or i64 %vr3385, %vr3400

	; bop SYS_OFFSET + 8
	%vr3404 = load double, double* @SYS_OFFSET
	%vr3403 = fadd double %vr3404, 0x4020000000000000

	; conv vr3403 => vr3405
	%vr3406 = call double @llvm.nearbyint.f64(double %vr3403)
	%vr3405 = fptosi double %vr3406 to i64

	; bop vr3405 SHL 3
	%vr3407 = shl i64 %vr3405, 3

	; bop THIS + vr3407
	%vr3409 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3410 = inttoptr i64 %vr3407 to %MEMORY_T*
	%vr3408 = add %MEMORY_T* %vr3409, %vr3410

	; conv vr3408 => vr3411
	%vr3413 = ptrtoint %MEMORY_T* %vr3408 to i64
	%vr3414 = inttoptr i64 %vr3413 to double*
	%vr3415 = load double, double* %vr3414
	%vr3412 = call double @llvm.nearbyint.f64(double %vr3415)
	%vr3411 = fptoui double %vr3412 to i64

	; bop vr3402 OR vr3411
	%vr3416 = or i64 %vr3402, %vr3411

	; bop SYS_OFFSET + 9
	%vr3418 = load double, double* @SYS_OFFSET
	%vr3417 = fadd double %vr3418, 0x4022000000000000

	; conv vr3417 => vr3419
	%vr3420 = call double @llvm.nearbyint.f64(double %vr3417)
	%vr3419 = fptosi double %vr3420 to i64

	; bop vr3419 SHL 3
	%vr3421 = shl i64 %vr3419, 3

	; bop THIS + vr3421
	%vr3423 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3424 = inttoptr i64 %vr3421 to %MEMORY_T*
	%vr3422 = add %MEMORY_T* %vr3423, %vr3424

	; conv vr3422 => vr3425
	%vr3427 = ptrtoint %MEMORY_T* %vr3422 to i64
	%vr3428 = inttoptr i64 %vr3427 to double*
	%vr3429 = load double, double* %vr3428
	%vr3426 = call double @llvm.nearbyint.f64(double %vr3429)
	%vr3425 = fptoui double %vr3426 to i64

	; bop vr3425 SHL 24
	%vr3431 = bitcast i64 24 to i64
	%vr3430 = shl i64 %vr3425, %vr3431

	; bop vr3416 OR vr3430
	%vr3432 = or i64 %vr3416, %vr3430

	; conv vr3432 => vr3433
	%vr3433 = uitofp i64 %vr3432 to double

	; bop SYS_OFFSET + 202
	%vr3435 = load double, double* @SYS_OFFSET
	%vr3434 = fadd double %vr3435, 0x4069400000000000

	; conv vr3434 => vr3436
	%vr3437 = call double @llvm.nearbyint.f64(double %vr3434)
	%vr3436 = fptosi double %vr3437 to i64

	; bop vr3436 SHL 3
	%vr3438 = shl i64 %vr3436, 3

	; bop THIS + vr3438
	%vr3440 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3441 = inttoptr i64 %vr3438 to %MEMORY_T*
	%vr3439 = add %MEMORY_T* %vr3440, %vr3441

	; store vr3439 := vr3433
	%vr3442 = ptrtoint %MEMORY_T* %vr3439 to i64
	%vr3443 = inttoptr i64 %vr3442 to double*
	store double %vr3433, double* %vr3443

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10B2:

	; label .Lt_05CE
	br label %.Lt_05CE
.Lt_05CE:

	; conv ADR => vr3445
	%vr3446 = load i64, i64* %ADR.110
	%vr3445 = uitofp i64 %vr3446 to double

	; bop SYS_OFFSET + 10
	%vr3448 = load double, double* @SYS_OFFSET
	%vr3447 = fadd double %vr3448, 0x4024000000000000

	; branchbop vr3445 <> vr3447
	%vr3449 = icmp ne double %vr3445, %vr3447
	br i1 %vr3449, label %.Lt_05D0, label %.Lt_10B3
.Lt_10B3:

	; label .Lt_05D1
	br label %.Lt_05D1
.Lt_05D1:

	; bop SYS_OFFSET + 11
	%vr3451 = load double, double* @SYS_OFFSET
	%vr3450 = fadd double %vr3451, 0x4026000000000000

	; conv vr3450 => vr3452
	%vr3453 = call double @llvm.nearbyint.f64(double %vr3450)
	%vr3452 = fptosi double %vr3453 to i64

	; bop vr3452 SHL 3
	%vr3454 = shl i64 %vr3452, 3

	; bop THIS + vr3454
	%vr3456 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3457 = inttoptr i64 %vr3454 to %MEMORY_T*
	%vr3455 = add %MEMORY_T* %vr3456, %vr3457

	; conv vr3455 => vr3458
	%vr3460 = ptrtoint %MEMORY_T* %vr3455 to i64
	%vr3461 = inttoptr i64 %vr3460 to double*
	%vr3462 = load double, double* %vr3461
	%vr3459 = call double @llvm.nearbyint.f64(double %vr3462)
	%vr3458 = fptosi double %vr3459 to i64

	; bop vr3458 SHL 32
	%vr3463 = shl i64 %vr3458, 32

	; bop SYS_OFFSET + 12
	%vr3465 = load double, double* @SYS_OFFSET
	%vr3464 = fadd double %vr3465, 0x4028000000000000

	; conv vr3464 => vr3466
	%vr3467 = call double @llvm.nearbyint.f64(double %vr3464)
	%vr3466 = fptosi double %vr3467 to i64

	; bop vr3466 SHL 3
	%vr3468 = shl i64 %vr3466, 3

	; bop THIS + vr3468
	%vr3470 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3471 = inttoptr i64 %vr3468 to %MEMORY_T*
	%vr3469 = add %MEMORY_T* %vr3470, %vr3471

	; conv vr3469 => vr3472
	%vr3474 = ptrtoint %MEMORY_T* %vr3469 to i64
	%vr3475 = inttoptr i64 %vr3474 to double*
	%vr3476 = load double, double* %vr3475
	%vr3473 = call double @llvm.nearbyint.f64(double %vr3476)
	%vr3472 = fptosi double %vr3473 to i64

	; bop vr3472 SHL 24
	%vr3477 = shl i64 %vr3472, 24

	; bop vr3463 + vr3477
	%vr3478 = add i64 %vr3463, %vr3477

	; bop SYS_OFFSET + 13
	%vr3480 = load double, double* @SYS_OFFSET
	%vr3479 = fadd double %vr3480, 0x402A000000000000

	; conv vr3479 => vr3481
	%vr3482 = call double @llvm.nearbyint.f64(double %vr3479)
	%vr3481 = fptosi double %vr3482 to i64

	; bop vr3481 SHL 3
	%vr3483 = shl i64 %vr3481, 3

	; bop THIS + vr3483
	%vr3485 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3486 = inttoptr i64 %vr3483 to %MEMORY_T*
	%vr3484 = add %MEMORY_T* %vr3485, %vr3486

	; conv vr3484 => vr3487
	%vr3489 = ptrtoint %MEMORY_T* %vr3484 to i64
	%vr3490 = inttoptr i64 %vr3489 to double*
	%vr3491 = load double, double* %vr3490
	%vr3488 = call double @llvm.nearbyint.f64(double %vr3491)
	%vr3487 = fptosi double %vr3488 to i64

	; bop vr3487 SHL 16
	%vr3492 = shl i64 %vr3487, 16

	; bop vr3478 + vr3492
	%vr3493 = add i64 %vr3478, %vr3492

	; bop SYS_OFFSET + 14
	%vr3495 = load double, double* @SYS_OFFSET
	%vr3494 = fadd double %vr3495, 0x402C000000000000

	; conv vr3494 => vr3496
	%vr3497 = call double @llvm.nearbyint.f64(double %vr3494)
	%vr3496 = fptosi double %vr3497 to i64

	; bop vr3496 SHL 3
	%vr3498 = shl i64 %vr3496, 3

	; bop THIS + vr3498
	%vr3500 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3501 = inttoptr i64 %vr3498 to %MEMORY_T*
	%vr3499 = add %MEMORY_T* %vr3500, %vr3501

	; conv vr3499 => vr3502
	%vr3504 = ptrtoint %MEMORY_T* %vr3499 to i64
	%vr3505 = inttoptr i64 %vr3504 to double*
	%vr3506 = load double, double* %vr3505
	%vr3503 = call double @llvm.nearbyint.f64(double %vr3506)
	%vr3502 = fptosi double %vr3503 to i64

	; bop vr3502 SHL 8
	%vr3507 = shl i64 %vr3502, 8

	; bop vr3493 + vr3507
	%vr3508 = add i64 %vr3493, %vr3507

	; conv vr3508 => vr3509
	%vr3509 = sitofp i64 %vr3508 to double

	; bop SYS_OFFSET + 15
	%vr3511 = load double, double* @SYS_OFFSET
	%vr3510 = fadd double %vr3511, 0x402E000000000000

	; conv vr3510 => vr3512
	%vr3513 = call double @llvm.nearbyint.f64(double %vr3510)
	%vr3512 = fptosi double %vr3513 to i64

	; bop vr3512 SHL 3
	%vr3514 = shl i64 %vr3512, 3

	; bop THIS + vr3514
	%vr3516 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3517 = inttoptr i64 %vr3514 to %MEMORY_T*
	%vr3515 = add %MEMORY_T* %vr3516, %vr3517

	; bop vr3509 + vr3515
	%vr3519 = ptrtoint %MEMORY_T* %vr3515 to i64
	%vr3520 = inttoptr i64 %vr3519 to double*
	%vr3521 = load double, double* %vr3520
	%vr3518 = fadd double %vr3509, %vr3521

	; bop SYS_OFFSET + 203
	%vr3523 = load double, double* @SYS_OFFSET
	%vr3522 = fadd double %vr3523, 0x4069600000000000

	; conv vr3522 => vr3524
	%vr3525 = call double @llvm.nearbyint.f64(double %vr3522)
	%vr3524 = fptosi double %vr3525 to i64

	; bop vr3524 SHL 3
	%vr3526 = shl i64 %vr3524, 3

	; bop THIS + vr3526
	%vr3528 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3529 = inttoptr i64 %vr3526 to %MEMORY_T*
	%vr3527 = add %MEMORY_T* %vr3528, %vr3529

	; store vr3527 := vr3518
	%vr3530 = ptrtoint %MEMORY_T* %vr3527 to i64
	%vr3531 = inttoptr i64 %vr3530 to double*
	store double %vr3518, double* %vr3531

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10B4:

	; label .Lt_05D0
	br label %.Lt_05D0
.Lt_05D0:

	; conv ADR => vr3533
	%vr3534 = load i64, i64* %ADR.110
	%vr3533 = uitofp i64 %vr3534 to double

	; bop SYS_OFFSET + 16
	%vr3536 = load double, double* @SYS_OFFSET
	%vr3535 = fadd double %vr3536, 0x4030000000000000

	; branchbop vr3533 <> vr3535
	%vr3537 = icmp ne double %vr3533, %vr3535
	br i1 %vr3537, label %.Lt_05D2, label %.Lt_10B5
.Lt_10B5:

	; label .Lt_05D3
	br label %.Lt_05D3
.Lt_05D3:

	; bop SYS_OFFSET + 17
	%vr3539 = load double, double* @SYS_OFFSET
	%vr3538 = fadd double %vr3539, 0x4031000000000000

	; conv vr3538 => vr3540
	%vr3541 = call double @llvm.nearbyint.f64(double %vr3538)
	%vr3540 = fptosi double %vr3541 to i64

	; bop vr3540 SHL 3
	%vr3542 = shl i64 %vr3540, 3

	; bop THIS + vr3542
	%vr3544 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3545 = inttoptr i64 %vr3542 to %MEMORY_T*
	%vr3543 = add %MEMORY_T* %vr3544, %vr3545

	; conv vr3543 => vr3546
	%vr3548 = ptrtoint %MEMORY_T* %vr3543 to i64
	%vr3549 = inttoptr i64 %vr3548 to double*
	%vr3550 = load double, double* %vr3549
	%vr3547 = call double @llvm.nearbyint.f64(double %vr3550)
	%vr3546 = fptosi double %vr3547 to i64

	; bop vr3546 SHL 32
	%vr3551 = shl i64 %vr3546, 32

	; bop SYS_OFFSET + 18
	%vr3553 = load double, double* @SYS_OFFSET
	%vr3552 = fadd double %vr3553, 0x4032000000000000

	; conv vr3552 => vr3554
	%vr3555 = call double @llvm.nearbyint.f64(double %vr3552)
	%vr3554 = fptosi double %vr3555 to i64

	; bop vr3554 SHL 3
	%vr3556 = shl i64 %vr3554, 3

	; bop THIS + vr3556
	%vr3558 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3559 = inttoptr i64 %vr3556 to %MEMORY_T*
	%vr3557 = add %MEMORY_T* %vr3558, %vr3559

	; conv vr3557 => vr3560
	%vr3562 = ptrtoint %MEMORY_T* %vr3557 to i64
	%vr3563 = inttoptr i64 %vr3562 to double*
	%vr3564 = load double, double* %vr3563
	%vr3561 = call double @llvm.nearbyint.f64(double %vr3564)
	%vr3560 = fptosi double %vr3561 to i64

	; bop vr3560 SHL 24
	%vr3565 = shl i64 %vr3560, 24

	; bop vr3551 + vr3565
	%vr3566 = add i64 %vr3551, %vr3565

	; bop SYS_OFFSET + 19
	%vr3568 = load double, double* @SYS_OFFSET
	%vr3567 = fadd double %vr3568, 0x4033000000000000

	; conv vr3567 => vr3569
	%vr3570 = call double @llvm.nearbyint.f64(double %vr3567)
	%vr3569 = fptosi double %vr3570 to i64

	; bop vr3569 SHL 3
	%vr3571 = shl i64 %vr3569, 3

	; bop THIS + vr3571
	%vr3573 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3574 = inttoptr i64 %vr3571 to %MEMORY_T*
	%vr3572 = add %MEMORY_T* %vr3573, %vr3574

	; conv vr3572 => vr3575
	%vr3577 = ptrtoint %MEMORY_T* %vr3572 to i64
	%vr3578 = inttoptr i64 %vr3577 to double*
	%vr3579 = load double, double* %vr3578
	%vr3576 = call double @llvm.nearbyint.f64(double %vr3579)
	%vr3575 = fptosi double %vr3576 to i64

	; bop vr3575 SHL 16
	%vr3580 = shl i64 %vr3575, 16

	; bop vr3566 + vr3580
	%vr3581 = add i64 %vr3566, %vr3580

	; bop SYS_OFFSET + 20
	%vr3583 = load double, double* @SYS_OFFSET
	%vr3582 = fadd double %vr3583, 0x4034000000000000

	; conv vr3582 => vr3584
	%vr3585 = call double @llvm.nearbyint.f64(double %vr3582)
	%vr3584 = fptosi double %vr3585 to i64

	; bop vr3584 SHL 3
	%vr3586 = shl i64 %vr3584, 3

	; bop THIS + vr3586
	%vr3588 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3589 = inttoptr i64 %vr3586 to %MEMORY_T*
	%vr3587 = add %MEMORY_T* %vr3588, %vr3589

	; conv vr3587 => vr3590
	%vr3592 = ptrtoint %MEMORY_T* %vr3587 to i64
	%vr3593 = inttoptr i64 %vr3592 to double*
	%vr3594 = load double, double* %vr3593
	%vr3591 = call double @llvm.nearbyint.f64(double %vr3594)
	%vr3590 = fptosi double %vr3591 to i64

	; bop vr3590 SHL 8
	%vr3595 = shl i64 %vr3590, 8

	; bop vr3581 + vr3595
	%vr3596 = add i64 %vr3581, %vr3595

	; conv vr3596 => vr3597
	%vr3597 = sitofp i64 %vr3596 to double

	; bop SYS_OFFSET + 21
	%vr3599 = load double, double* @SYS_OFFSET
	%vr3598 = fadd double %vr3599, 0x4035000000000000

	; conv vr3598 => vr3600
	%vr3601 = call double @llvm.nearbyint.f64(double %vr3598)
	%vr3600 = fptosi double %vr3601 to i64

	; bop vr3600 SHL 3
	%vr3602 = shl i64 %vr3600, 3

	; bop THIS + vr3602
	%vr3604 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3605 = inttoptr i64 %vr3602 to %MEMORY_T*
	%vr3603 = add %MEMORY_T* %vr3604, %vr3605

	; bop vr3597 + vr3603
	%vr3607 = ptrtoint %MEMORY_T* %vr3603 to i64
	%vr3608 = inttoptr i64 %vr3607 to double*
	%vr3609 = load double, double* %vr3608
	%vr3606 = fadd double %vr3597, %vr3609

	; bop SYS_OFFSET + 204
	%vr3611 = load double, double* @SYS_OFFSET
	%vr3610 = fadd double %vr3611, 0x4069800000000000

	; conv vr3610 => vr3612
	%vr3613 = call double @llvm.nearbyint.f64(double %vr3610)
	%vr3612 = fptosi double %vr3613 to i64

	; bop vr3612 SHL 3
	%vr3614 = shl i64 %vr3612, 3

	; bop THIS + vr3614
	%vr3616 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3617 = inttoptr i64 %vr3614 to %MEMORY_T*
	%vr3615 = add %MEMORY_T* %vr3616, %vr3617

	; store vr3615 := vr3606
	%vr3618 = ptrtoint %MEMORY_T* %vr3615 to i64
	%vr3619 = inttoptr i64 %vr3618 to double*
	store double %vr3606, double* %vr3619

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10B6:

	; label .Lt_05D2
	br label %.Lt_05D2
.Lt_05D2:

	; conv ADR => vr3621
	%vr3622 = load i64, i64* %ADR.110
	%vr3621 = uitofp i64 %vr3622 to double

	; bop SYS_OFFSET + 22
	%vr3624 = load double, double* @SYS_OFFSET
	%vr3623 = fadd double %vr3624, 0x4036000000000000

	; branchbop vr3621 <> vr3623
	%vr3625 = icmp ne double %vr3621, %vr3623
	br i1 %vr3625, label %.Lt_05D4, label %.Lt_10B7
.Lt_10B7:

	; label .Lt_05D5
	br label %.Lt_05D5
.Lt_05D5:

	; bop SYS_OFFSET + 23
	%vr3627 = load double, double* @SYS_OFFSET
	%vr3626 = fadd double %vr3627, 0x4037000000000000

	; conv vr3626 => vr3628
	%vr3629 = call double @llvm.nearbyint.f64(double %vr3626)
	%vr3628 = fptosi double %vr3629 to i64

	; bop vr3628 SHL 3
	%vr3630 = shl i64 %vr3628, 3

	; bop THIS + vr3630
	%vr3632 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3633 = inttoptr i64 %vr3630 to %MEMORY_T*
	%vr3631 = add %MEMORY_T* %vr3632, %vr3633

	; conv vr3631 => vr3634
	%vr3636 = ptrtoint %MEMORY_T* %vr3631 to i64
	%vr3637 = inttoptr i64 %vr3636 to double*
	%vr3638 = load double, double* %vr3637
	%vr3635 = call double @llvm.nearbyint.f64(double %vr3638)
	%vr3634 = fptosi double %vr3635 to i64

	; bop vr3634 SHL 32
	%vr3639 = shl i64 %vr3634, 32

	; bop SYS_OFFSET + 24
	%vr3641 = load double, double* @SYS_OFFSET
	%vr3640 = fadd double %vr3641, 0x4038000000000000

	; conv vr3640 => vr3642
	%vr3643 = call double @llvm.nearbyint.f64(double %vr3640)
	%vr3642 = fptosi double %vr3643 to i64

	; bop vr3642 SHL 3
	%vr3644 = shl i64 %vr3642, 3

	; bop THIS + vr3644
	%vr3646 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3647 = inttoptr i64 %vr3644 to %MEMORY_T*
	%vr3645 = add %MEMORY_T* %vr3646, %vr3647

	; conv vr3645 => vr3648
	%vr3650 = ptrtoint %MEMORY_T* %vr3645 to i64
	%vr3651 = inttoptr i64 %vr3650 to double*
	%vr3652 = load double, double* %vr3651
	%vr3649 = call double @llvm.nearbyint.f64(double %vr3652)
	%vr3648 = fptosi double %vr3649 to i64

	; bop vr3648 SHL 24
	%vr3653 = shl i64 %vr3648, 24

	; bop vr3639 + vr3653
	%vr3654 = add i64 %vr3639, %vr3653

	; bop SYS_OFFSET + 25
	%vr3656 = load double, double* @SYS_OFFSET
	%vr3655 = fadd double %vr3656, 0x4039000000000000

	; conv vr3655 => vr3657
	%vr3658 = call double @llvm.nearbyint.f64(double %vr3655)
	%vr3657 = fptosi double %vr3658 to i64

	; bop vr3657 SHL 3
	%vr3659 = shl i64 %vr3657, 3

	; bop THIS + vr3659
	%vr3661 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3662 = inttoptr i64 %vr3659 to %MEMORY_T*
	%vr3660 = add %MEMORY_T* %vr3661, %vr3662

	; conv vr3660 => vr3663
	%vr3665 = ptrtoint %MEMORY_T* %vr3660 to i64
	%vr3666 = inttoptr i64 %vr3665 to double*
	%vr3667 = load double, double* %vr3666
	%vr3664 = call double @llvm.nearbyint.f64(double %vr3667)
	%vr3663 = fptosi double %vr3664 to i64

	; bop vr3663 SHL 16
	%vr3668 = shl i64 %vr3663, 16

	; bop vr3654 + vr3668
	%vr3669 = add i64 %vr3654, %vr3668

	; bop SYS_OFFSET + 26
	%vr3671 = load double, double* @SYS_OFFSET
	%vr3670 = fadd double %vr3671, 0x403A000000000000

	; conv vr3670 => vr3672
	%vr3673 = call double @llvm.nearbyint.f64(double %vr3670)
	%vr3672 = fptosi double %vr3673 to i64

	; bop vr3672 SHL 3
	%vr3674 = shl i64 %vr3672, 3

	; bop THIS + vr3674
	%vr3676 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3677 = inttoptr i64 %vr3674 to %MEMORY_T*
	%vr3675 = add %MEMORY_T* %vr3676, %vr3677

	; conv vr3675 => vr3678
	%vr3680 = ptrtoint %MEMORY_T* %vr3675 to i64
	%vr3681 = inttoptr i64 %vr3680 to double*
	%vr3682 = load double, double* %vr3681
	%vr3679 = call double @llvm.nearbyint.f64(double %vr3682)
	%vr3678 = fptosi double %vr3679 to i64

	; bop vr3678 SHL 8
	%vr3683 = shl i64 %vr3678, 8

	; bop vr3669 + vr3683
	%vr3684 = add i64 %vr3669, %vr3683

	; conv vr3684 => vr3685
	%vr3685 = sitofp i64 %vr3684 to double

	; bop SYS_OFFSET + 27
	%vr3687 = load double, double* @SYS_OFFSET
	%vr3686 = fadd double %vr3687, 0x403B000000000000

	; conv vr3686 => vr3688
	%vr3689 = call double @llvm.nearbyint.f64(double %vr3686)
	%vr3688 = fptosi double %vr3689 to i64

	; bop vr3688 SHL 3
	%vr3690 = shl i64 %vr3688, 3

	; bop THIS + vr3690
	%vr3692 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3693 = inttoptr i64 %vr3690 to %MEMORY_T*
	%vr3691 = add %MEMORY_T* %vr3692, %vr3693

	; bop vr3685 + vr3691
	%vr3695 = ptrtoint %MEMORY_T* %vr3691 to i64
	%vr3696 = inttoptr i64 %vr3695 to double*
	%vr3697 = load double, double* %vr3696
	%vr3694 = fadd double %vr3685, %vr3697

	; bop SYS_OFFSET + 205
	%vr3699 = load double, double* @SYS_OFFSET
	%vr3698 = fadd double %vr3699, 0x4069A00000000000

	; conv vr3698 => vr3700
	%vr3701 = call double @llvm.nearbyint.f64(double %vr3698)
	%vr3700 = fptosi double %vr3701 to i64

	; bop vr3700 SHL 3
	%vr3702 = shl i64 %vr3700, 3

	; bop THIS + vr3702
	%vr3704 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3705 = inttoptr i64 %vr3702 to %MEMORY_T*
	%vr3703 = add %MEMORY_T* %vr3704, %vr3705

	; store vr3703 := vr3694
	%vr3706 = ptrtoint %MEMORY_T* %vr3703 to i64
	%vr3707 = inttoptr i64 %vr3706 to double*
	store double %vr3694, double* %vr3707

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10B8:

	; label .Lt_05D4
	br label %.Lt_05D4
.Lt_05D4:

	; conv ADR => vr3709
	%vr3710 = load i64, i64* %ADR.110
	%vr3709 = uitofp i64 %vr3710 to double

	; bop SYS_OFFSET + 28
	%vr3712 = load double, double* @SYS_OFFSET
	%vr3711 = fadd double %vr3712, 0x403C000000000000

	; branchbop vr3709 <> vr3711
	%vr3713 = icmp ne double %vr3709, %vr3711
	br i1 %vr3713, label %.Lt_05D6, label %.Lt_10B9
.Lt_10B9:

	; label .Lt_05D7
	br label %.Lt_05D7
.Lt_05D7:

	; bop SYS_OFFSET + 29
	%vr3715 = load double, double* @SYS_OFFSET
	%vr3714 = fadd double %vr3715, 0x403D000000000000

	; conv vr3714 => vr3716
	%vr3717 = call double @llvm.nearbyint.f64(double %vr3714)
	%vr3716 = fptosi double %vr3717 to i64

	; bop vr3716 SHL 3
	%vr3718 = shl i64 %vr3716, 3

	; bop THIS + vr3718
	%vr3720 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3721 = inttoptr i64 %vr3718 to %MEMORY_T*
	%vr3719 = add %MEMORY_T* %vr3720, %vr3721

	; conv vr3719 => vr3722
	%vr3724 = ptrtoint %MEMORY_T* %vr3719 to i64
	%vr3725 = inttoptr i64 %vr3724 to double*
	%vr3726 = load double, double* %vr3725
	%vr3723 = call double @llvm.nearbyint.f64(double %vr3726)
	%vr3722 = fptosi double %vr3723 to i64

	; bop vr3722 SHL 32
	%vr3727 = shl i64 %vr3722, 32

	; bop SYS_OFFSET + 30
	%vr3729 = load double, double* @SYS_OFFSET
	%vr3728 = fadd double %vr3729, 0x403E000000000000

	; conv vr3728 => vr3730
	%vr3731 = call double @llvm.nearbyint.f64(double %vr3728)
	%vr3730 = fptosi double %vr3731 to i64

	; bop vr3730 SHL 3
	%vr3732 = shl i64 %vr3730, 3

	; bop THIS + vr3732
	%vr3734 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3735 = inttoptr i64 %vr3732 to %MEMORY_T*
	%vr3733 = add %MEMORY_T* %vr3734, %vr3735

	; conv vr3733 => vr3736
	%vr3738 = ptrtoint %MEMORY_T* %vr3733 to i64
	%vr3739 = inttoptr i64 %vr3738 to double*
	%vr3740 = load double, double* %vr3739
	%vr3737 = call double @llvm.nearbyint.f64(double %vr3740)
	%vr3736 = fptosi double %vr3737 to i64

	; bop vr3736 SHL 24
	%vr3741 = shl i64 %vr3736, 24

	; bop vr3727 + vr3741
	%vr3742 = add i64 %vr3727, %vr3741

	; bop SYS_OFFSET + 31
	%vr3744 = load double, double* @SYS_OFFSET
	%vr3743 = fadd double %vr3744, 0x403F000000000000

	; conv vr3743 => vr3745
	%vr3746 = call double @llvm.nearbyint.f64(double %vr3743)
	%vr3745 = fptosi double %vr3746 to i64

	; bop vr3745 SHL 3
	%vr3747 = shl i64 %vr3745, 3

	; bop THIS + vr3747
	%vr3749 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3750 = inttoptr i64 %vr3747 to %MEMORY_T*
	%vr3748 = add %MEMORY_T* %vr3749, %vr3750

	; conv vr3748 => vr3751
	%vr3753 = ptrtoint %MEMORY_T* %vr3748 to i64
	%vr3754 = inttoptr i64 %vr3753 to double*
	%vr3755 = load double, double* %vr3754
	%vr3752 = call double @llvm.nearbyint.f64(double %vr3755)
	%vr3751 = fptosi double %vr3752 to i64

	; bop vr3751 SHL 16
	%vr3756 = shl i64 %vr3751, 16

	; bop vr3742 + vr3756
	%vr3757 = add i64 %vr3742, %vr3756

	; bop SYS_OFFSET + 32
	%vr3759 = load double, double* @SYS_OFFSET
	%vr3758 = fadd double %vr3759, 0x4040000000000000

	; conv vr3758 => vr3760
	%vr3761 = call double @llvm.nearbyint.f64(double %vr3758)
	%vr3760 = fptosi double %vr3761 to i64

	; bop vr3760 SHL 3
	%vr3762 = shl i64 %vr3760, 3

	; bop THIS + vr3762
	%vr3764 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3765 = inttoptr i64 %vr3762 to %MEMORY_T*
	%vr3763 = add %MEMORY_T* %vr3764, %vr3765

	; conv vr3763 => vr3766
	%vr3768 = ptrtoint %MEMORY_T* %vr3763 to i64
	%vr3769 = inttoptr i64 %vr3768 to double*
	%vr3770 = load double, double* %vr3769
	%vr3767 = call double @llvm.nearbyint.f64(double %vr3770)
	%vr3766 = fptosi double %vr3767 to i64

	; bop vr3766 SHL 8
	%vr3771 = shl i64 %vr3766, 8

	; bop vr3757 + vr3771
	%vr3772 = add i64 %vr3757, %vr3771

	; conv vr3772 => vr3773
	%vr3773 = sitofp i64 %vr3772 to double

	; bop SYS_OFFSET + 33
	%vr3775 = load double, double* @SYS_OFFSET
	%vr3774 = fadd double %vr3775, 0x4040800000000000

	; conv vr3774 => vr3776
	%vr3777 = call double @llvm.nearbyint.f64(double %vr3774)
	%vr3776 = fptosi double %vr3777 to i64

	; bop vr3776 SHL 3
	%vr3778 = shl i64 %vr3776, 3

	; bop THIS + vr3778
	%vr3780 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3781 = inttoptr i64 %vr3778 to %MEMORY_T*
	%vr3779 = add %MEMORY_T* %vr3780, %vr3781

	; bop vr3773 + vr3779
	%vr3783 = ptrtoint %MEMORY_T* %vr3779 to i64
	%vr3784 = inttoptr i64 %vr3783 to double*
	%vr3785 = load double, double* %vr3784
	%vr3782 = fadd double %vr3773, %vr3785

	; bop SYS_OFFSET + 206
	%vr3787 = load double, double* @SYS_OFFSET
	%vr3786 = fadd double %vr3787, 0x4069C00000000000

	; conv vr3786 => vr3788
	%vr3789 = call double @llvm.nearbyint.f64(double %vr3786)
	%vr3788 = fptosi double %vr3789 to i64

	; bop vr3788 SHL 3
	%vr3790 = shl i64 %vr3788, 3

	; bop THIS + vr3790
	%vr3792 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3793 = inttoptr i64 %vr3790 to %MEMORY_T*
	%vr3791 = add %MEMORY_T* %vr3792, %vr3793

	; store vr3791 := vr3782
	%vr3794 = ptrtoint %MEMORY_T* %vr3791 to i64
	%vr3795 = inttoptr i64 %vr3794 to double*
	store double %vr3782, double* %vr3795

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10BA:

	; label .Lt_05D6
	br label %.Lt_05D6
.Lt_05D6:

	; conv ADR => vr3797
	%vr3798 = load i64, i64* %ADR.110
	%vr3797 = uitofp i64 %vr3798 to double

	; bop SYS_OFFSET + 34
	%vr3800 = load double, double* @SYS_OFFSET
	%vr3799 = fadd double %vr3800, 0x4041000000000000

	; branchbop vr3797 <> vr3799
	%vr3801 = icmp ne double %vr3797, %vr3799
	br i1 %vr3801, label %.Lt_05D8, label %.Lt_10BB
.Lt_10BB:

	; label .Lt_05D9
	br label %.Lt_05D9
.Lt_05D9:

	; bop SYS_OFFSET + 35
	%vr3803 = load double, double* @SYS_OFFSET
	%vr3802 = fadd double %vr3803, 0x4041800000000000

	; conv vr3802 => vr3804
	%vr3805 = call double @llvm.nearbyint.f64(double %vr3802)
	%vr3804 = fptosi double %vr3805 to i64

	; bop vr3804 SHL 3
	%vr3806 = shl i64 %vr3804, 3

	; bop THIS + vr3806
	%vr3808 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3809 = inttoptr i64 %vr3806 to %MEMORY_T*
	%vr3807 = add %MEMORY_T* %vr3808, %vr3809

	; conv vr3807 => vr3810
	%vr3812 = ptrtoint %MEMORY_T* %vr3807 to i64
	%vr3813 = inttoptr i64 %vr3812 to double*
	%vr3814 = load double, double* %vr3813
	%vr3811 = call double @llvm.nearbyint.f64(double %vr3814)
	%vr3810 = fptosi double %vr3811 to i64

	; bop vr3810 SHL 32
	%vr3815 = shl i64 %vr3810, 32

	; bop SYS_OFFSET + 36
	%vr3817 = load double, double* @SYS_OFFSET
	%vr3816 = fadd double %vr3817, 0x4042000000000000

	; conv vr3816 => vr3818
	%vr3819 = call double @llvm.nearbyint.f64(double %vr3816)
	%vr3818 = fptosi double %vr3819 to i64

	; bop vr3818 SHL 3
	%vr3820 = shl i64 %vr3818, 3

	; bop THIS + vr3820
	%vr3822 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3823 = inttoptr i64 %vr3820 to %MEMORY_T*
	%vr3821 = add %MEMORY_T* %vr3822, %vr3823

	; conv vr3821 => vr3824
	%vr3826 = ptrtoint %MEMORY_T* %vr3821 to i64
	%vr3827 = inttoptr i64 %vr3826 to double*
	%vr3828 = load double, double* %vr3827
	%vr3825 = call double @llvm.nearbyint.f64(double %vr3828)
	%vr3824 = fptosi double %vr3825 to i64

	; bop vr3824 SHL 24
	%vr3829 = shl i64 %vr3824, 24

	; bop vr3815 + vr3829
	%vr3830 = add i64 %vr3815, %vr3829

	; bop SYS_OFFSET + 37
	%vr3832 = load double, double* @SYS_OFFSET
	%vr3831 = fadd double %vr3832, 0x4042800000000000

	; conv vr3831 => vr3833
	%vr3834 = call double @llvm.nearbyint.f64(double %vr3831)
	%vr3833 = fptosi double %vr3834 to i64

	; bop vr3833 SHL 3
	%vr3835 = shl i64 %vr3833, 3

	; bop THIS + vr3835
	%vr3837 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3838 = inttoptr i64 %vr3835 to %MEMORY_T*
	%vr3836 = add %MEMORY_T* %vr3837, %vr3838

	; conv vr3836 => vr3839
	%vr3841 = ptrtoint %MEMORY_T* %vr3836 to i64
	%vr3842 = inttoptr i64 %vr3841 to double*
	%vr3843 = load double, double* %vr3842
	%vr3840 = call double @llvm.nearbyint.f64(double %vr3843)
	%vr3839 = fptosi double %vr3840 to i64

	; bop vr3839 SHL 16
	%vr3844 = shl i64 %vr3839, 16

	; bop vr3830 + vr3844
	%vr3845 = add i64 %vr3830, %vr3844

	; bop SYS_OFFSET + 38
	%vr3847 = load double, double* @SYS_OFFSET
	%vr3846 = fadd double %vr3847, 0x4043000000000000

	; conv vr3846 => vr3848
	%vr3849 = call double @llvm.nearbyint.f64(double %vr3846)
	%vr3848 = fptosi double %vr3849 to i64

	; bop vr3848 SHL 3
	%vr3850 = shl i64 %vr3848, 3

	; bop THIS + vr3850
	%vr3852 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3853 = inttoptr i64 %vr3850 to %MEMORY_T*
	%vr3851 = add %MEMORY_T* %vr3852, %vr3853

	; conv vr3851 => vr3854
	%vr3856 = ptrtoint %MEMORY_T* %vr3851 to i64
	%vr3857 = inttoptr i64 %vr3856 to double*
	%vr3858 = load double, double* %vr3857
	%vr3855 = call double @llvm.nearbyint.f64(double %vr3858)
	%vr3854 = fptosi double %vr3855 to i64

	; bop vr3854 SHL 8
	%vr3859 = shl i64 %vr3854, 8

	; bop vr3845 + vr3859
	%vr3860 = add i64 %vr3845, %vr3859

	; conv vr3860 => vr3861
	%vr3861 = sitofp i64 %vr3860 to double

	; bop SYS_OFFSET + 39
	%vr3863 = load double, double* @SYS_OFFSET
	%vr3862 = fadd double %vr3863, 0x4043800000000000

	; conv vr3862 => vr3864
	%vr3865 = call double @llvm.nearbyint.f64(double %vr3862)
	%vr3864 = fptosi double %vr3865 to i64

	; bop vr3864 SHL 3
	%vr3866 = shl i64 %vr3864, 3

	; bop THIS + vr3866
	%vr3868 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3869 = inttoptr i64 %vr3866 to %MEMORY_T*
	%vr3867 = add %MEMORY_T* %vr3868, %vr3869

	; bop vr3861 + vr3867
	%vr3871 = ptrtoint %MEMORY_T* %vr3867 to i64
	%vr3872 = inttoptr i64 %vr3871 to double*
	%vr3873 = load double, double* %vr3872
	%vr3870 = fadd double %vr3861, %vr3873

	; bop SYS_OFFSET + 207
	%vr3875 = load double, double* @SYS_OFFSET
	%vr3874 = fadd double %vr3875, 0x4069E00000000000

	; conv vr3874 => vr3876
	%vr3877 = call double @llvm.nearbyint.f64(double %vr3874)
	%vr3876 = fptosi double %vr3877 to i64

	; bop vr3876 SHL 3
	%vr3878 = shl i64 %vr3876, 3

	; bop THIS + vr3878
	%vr3880 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3881 = inttoptr i64 %vr3878 to %MEMORY_T*
	%vr3879 = add %MEMORY_T* %vr3880, %vr3881

	; store vr3879 := vr3870
	%vr3882 = ptrtoint %MEMORY_T* %vr3879 to i64
	%vr3883 = inttoptr i64 %vr3882 to double*
	store double %vr3870, double* %vr3883

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10BC:

	; label .Lt_05D8
	br label %.Lt_05D8
.Lt_05D8:

	; conv ADR => vr3885
	%vr3886 = load i64, i64* %ADR.110
	%vr3885 = uitofp i64 %vr3886 to double

	; bop SYS_OFFSET + 40
	%vr3888 = load double, double* @SYS_OFFSET
	%vr3887 = fadd double %vr3888, 0x4044000000000000

	; branchbop vr3885 <> vr3887
	%vr3889 = icmp ne double %vr3885, %vr3887
	br i1 %vr3889, label %.Lt_05DA, label %.Lt_10BD
.Lt_10BD:

	; label .Lt_05DB
	br label %.Lt_05DB
.Lt_05DB:

	; bop SYS_OFFSET + 40
	%vr3891 = load double, double* @SYS_OFFSET
	%vr3890 = fadd double %vr3891, 0x4044000000000000

	; conv vr3890 => vr3892
	%vr3893 = call double @llvm.nearbyint.f64(double %vr3890)
	%vr3892 = fptosi double %vr3893 to i64

	; bop vr3892 SHL 3
	%vr3894 = shl i64 %vr3892, 3

	; bop THIS + vr3894
	%vr3896 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3897 = inttoptr i64 %vr3894 to %MEMORY_T*
	%vr3895 = add %MEMORY_T* %vr3896, %vr3897

	; conv vr3895 => vr3898
	%vr3900 = ptrtoint %MEMORY_T* %vr3895 to i64
	%vr3901 = inttoptr i64 %vr3900 to double*
	%vr3902 = load double, double* %vr3901
	%vr3899 = call double @llvm.nearbyint.f64(double %vr3902)
	%vr3898 = fptosi double %vr3899 to i64

	; bop vr3898 SHL 32
	%vr3903 = shl i64 %vr3898, 32

	; bop SYS_OFFSET + 41
	%vr3905 = load double, double* @SYS_OFFSET
	%vr3904 = fadd double %vr3905, 0x4044800000000000

	; conv vr3904 => vr3906
	%vr3907 = call double @llvm.nearbyint.f64(double %vr3904)
	%vr3906 = fptosi double %vr3907 to i64

	; bop vr3906 SHL 3
	%vr3908 = shl i64 %vr3906, 3

	; bop THIS + vr3908
	%vr3910 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3911 = inttoptr i64 %vr3908 to %MEMORY_T*
	%vr3909 = add %MEMORY_T* %vr3910, %vr3911

	; conv vr3909 => vr3912
	%vr3914 = ptrtoint %MEMORY_T* %vr3909 to i64
	%vr3915 = inttoptr i64 %vr3914 to double*
	%vr3916 = load double, double* %vr3915
	%vr3913 = call double @llvm.nearbyint.f64(double %vr3916)
	%vr3912 = fptosi double %vr3913 to i64

	; bop vr3912 SHL 24
	%vr3917 = shl i64 %vr3912, 24

	; bop vr3903 + vr3917
	%vr3918 = add i64 %vr3903, %vr3917

	; bop SYS_OFFSET + 42
	%vr3920 = load double, double* @SYS_OFFSET
	%vr3919 = fadd double %vr3920, 0x4045000000000000

	; conv vr3919 => vr3921
	%vr3922 = call double @llvm.nearbyint.f64(double %vr3919)
	%vr3921 = fptosi double %vr3922 to i64

	; bop vr3921 SHL 3
	%vr3923 = shl i64 %vr3921, 3

	; bop THIS + vr3923
	%vr3925 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3926 = inttoptr i64 %vr3923 to %MEMORY_T*
	%vr3924 = add %MEMORY_T* %vr3925, %vr3926

	; conv vr3924 => vr3927
	%vr3929 = ptrtoint %MEMORY_T* %vr3924 to i64
	%vr3930 = inttoptr i64 %vr3929 to double*
	%vr3931 = load double, double* %vr3930
	%vr3928 = call double @llvm.nearbyint.f64(double %vr3931)
	%vr3927 = fptosi double %vr3928 to i64

	; bop vr3927 SHL 16
	%vr3932 = shl i64 %vr3927, 16

	; bop vr3918 + vr3932
	%vr3933 = add i64 %vr3918, %vr3932

	; bop SYS_OFFSET + 44
	%vr3935 = load double, double* @SYS_OFFSET
	%vr3934 = fadd double %vr3935, 0x4046000000000000

	; conv vr3934 => vr3936
	%vr3937 = call double @llvm.nearbyint.f64(double %vr3934)
	%vr3936 = fptosi double %vr3937 to i64

	; bop vr3936 SHL 3
	%vr3938 = shl i64 %vr3936, 3

	; bop THIS + vr3938
	%vr3940 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3941 = inttoptr i64 %vr3938 to %MEMORY_T*
	%vr3939 = add %MEMORY_T* %vr3940, %vr3941

	; conv vr3939 => vr3942
	%vr3944 = ptrtoint %MEMORY_T* %vr3939 to i64
	%vr3945 = inttoptr i64 %vr3944 to double*
	%vr3946 = load double, double* %vr3945
	%vr3943 = call double @llvm.nearbyint.f64(double %vr3946)
	%vr3942 = fptosi double %vr3943 to i64

	; bop vr3942 SHL 8
	%vr3947 = shl i64 %vr3942, 8

	; bop vr3933 + vr3947
	%vr3948 = add i64 %vr3933, %vr3947

	; conv vr3948 => vr3949
	%vr3949 = sitofp i64 %vr3948 to double

	; bop SYS_OFFSET + 45
	%vr3951 = load double, double* @SYS_OFFSET
	%vr3950 = fadd double %vr3951, 0x4046800000000000

	; conv vr3950 => vr3952
	%vr3953 = call double @llvm.nearbyint.f64(double %vr3950)
	%vr3952 = fptosi double %vr3953 to i64

	; bop vr3952 SHL 3
	%vr3954 = shl i64 %vr3952, 3

	; bop THIS + vr3954
	%vr3956 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3957 = inttoptr i64 %vr3954 to %MEMORY_T*
	%vr3955 = add %MEMORY_T* %vr3956, %vr3957

	; bop vr3949 + vr3955
	%vr3959 = ptrtoint %MEMORY_T* %vr3955 to i64
	%vr3960 = inttoptr i64 %vr3959 to double*
	%vr3961 = load double, double* %vr3960
	%vr3958 = fadd double %vr3949, %vr3961

	; bop SYS_OFFSET + 208
	%vr3963 = load double, double* @SYS_OFFSET
	%vr3962 = fadd double %vr3963, 0x406A000000000000

	; conv vr3962 => vr3964
	%vr3965 = call double @llvm.nearbyint.f64(double %vr3962)
	%vr3964 = fptosi double %vr3965 to i64

	; bop vr3964 SHL 3
	%vr3966 = shl i64 %vr3964, 3

	; bop THIS + vr3966
	%vr3968 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3969 = inttoptr i64 %vr3966 to %MEMORY_T*
	%vr3967 = add %MEMORY_T* %vr3968, %vr3969

	; store vr3967 := vr3958
	%vr3970 = ptrtoint %MEMORY_T* %vr3967 to i64
	%vr3971 = inttoptr i64 %vr3970 to double*
	store double %vr3958, double* %vr3971

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10BE:

	; label .Lt_05DA
	br label %.Lt_05DA
.Lt_05DA:

	; conv ADR => vr3973
	%vr3974 = load i64, i64* %ADR.110
	%vr3973 = uitofp i64 %vr3974 to double

	; bop SYS_OFFSET + 46
	%vr3976 = load double, double* @SYS_OFFSET
	%vr3975 = fadd double %vr3976, 0x4047000000000000

	; branchbop vr3973 <> vr3975
	%vr3977 = icmp ne double %vr3973, %vr3975
	br i1 %vr3977, label %.Lt_05DC, label %.Lt_10BF
.Lt_10BF:

	; label .Lt_05DD
	br label %.Lt_05DD
.Lt_05DD:

	; bop SYS_OFFSET + 47
	%vr3979 = load double, double* @SYS_OFFSET
	%vr3978 = fadd double %vr3979, 0x4047800000000000

	; conv vr3978 => vr3980
	%vr3981 = call double @llvm.nearbyint.f64(double %vr3978)
	%vr3980 = fptosi double %vr3981 to i64

	; bop vr3980 SHL 3
	%vr3982 = shl i64 %vr3980, 3

	; bop THIS + vr3982
	%vr3984 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3985 = inttoptr i64 %vr3982 to %MEMORY_T*
	%vr3983 = add %MEMORY_T* %vr3984, %vr3985

	; conv vr3983 => vr3986
	%vr3988 = ptrtoint %MEMORY_T* %vr3983 to i64
	%vr3989 = inttoptr i64 %vr3988 to double*
	%vr3990 = load double, double* %vr3989
	%vr3987 = call double @llvm.nearbyint.f64(double %vr3990)
	%vr3986 = fptosi double %vr3987 to i64

	; bop vr3986 SHL 32
	%vr3991 = shl i64 %vr3986, 32

	; bop SYS_OFFSET + 48
	%vr3993 = load double, double* @SYS_OFFSET
	%vr3992 = fadd double %vr3993, 0x4048000000000000

	; conv vr3992 => vr3994
	%vr3995 = call double @llvm.nearbyint.f64(double %vr3992)
	%vr3994 = fptosi double %vr3995 to i64

	; bop vr3994 SHL 3
	%vr3996 = shl i64 %vr3994, 3

	; bop THIS + vr3996
	%vr3998 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr3999 = inttoptr i64 %vr3996 to %MEMORY_T*
	%vr3997 = add %MEMORY_T* %vr3998, %vr3999

	; conv vr3997 => vr4000
	%vr4002 = ptrtoint %MEMORY_T* %vr3997 to i64
	%vr4003 = inttoptr i64 %vr4002 to double*
	%vr4004 = load double, double* %vr4003
	%vr4001 = call double @llvm.nearbyint.f64(double %vr4004)
	%vr4000 = fptosi double %vr4001 to i64

	; bop vr4000 SHL 24
	%vr4005 = shl i64 %vr4000, 24

	; bop vr3991 + vr4005
	%vr4006 = add i64 %vr3991, %vr4005

	; bop SYS_OFFSET + 49
	%vr4008 = load double, double* @SYS_OFFSET
	%vr4007 = fadd double %vr4008, 0x4048800000000000

	; conv vr4007 => vr4009
	%vr4010 = call double @llvm.nearbyint.f64(double %vr4007)
	%vr4009 = fptosi double %vr4010 to i64

	; bop vr4009 SHL 3
	%vr4011 = shl i64 %vr4009, 3

	; bop THIS + vr4011
	%vr4013 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4014 = inttoptr i64 %vr4011 to %MEMORY_T*
	%vr4012 = add %MEMORY_T* %vr4013, %vr4014

	; conv vr4012 => vr4015
	%vr4017 = ptrtoint %MEMORY_T* %vr4012 to i64
	%vr4018 = inttoptr i64 %vr4017 to double*
	%vr4019 = load double, double* %vr4018
	%vr4016 = call double @llvm.nearbyint.f64(double %vr4019)
	%vr4015 = fptosi double %vr4016 to i64

	; bop vr4015 SHL 16
	%vr4020 = shl i64 %vr4015, 16

	; bop vr4006 + vr4020
	%vr4021 = add i64 %vr4006, %vr4020

	; bop SYS_OFFSET + 50
	%vr4023 = load double, double* @SYS_OFFSET
	%vr4022 = fadd double %vr4023, 0x4049000000000000

	; conv vr4022 => vr4024
	%vr4025 = call double @llvm.nearbyint.f64(double %vr4022)
	%vr4024 = fptosi double %vr4025 to i64

	; bop vr4024 SHL 3
	%vr4026 = shl i64 %vr4024, 3

	; bop THIS + vr4026
	%vr4028 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4029 = inttoptr i64 %vr4026 to %MEMORY_T*
	%vr4027 = add %MEMORY_T* %vr4028, %vr4029

	; conv vr4027 => vr4030
	%vr4032 = ptrtoint %MEMORY_T* %vr4027 to i64
	%vr4033 = inttoptr i64 %vr4032 to double*
	%vr4034 = load double, double* %vr4033
	%vr4031 = call double @llvm.nearbyint.f64(double %vr4034)
	%vr4030 = fptosi double %vr4031 to i64

	; bop vr4030 SHL 8
	%vr4035 = shl i64 %vr4030, 8

	; bop vr4021 + vr4035
	%vr4036 = add i64 %vr4021, %vr4035

	; conv vr4036 => vr4037
	%vr4037 = sitofp i64 %vr4036 to double

	; bop SYS_OFFSET + 51
	%vr4039 = load double, double* @SYS_OFFSET
	%vr4038 = fadd double %vr4039, 0x4049800000000000

	; conv vr4038 => vr4040
	%vr4041 = call double @llvm.nearbyint.f64(double %vr4038)
	%vr4040 = fptosi double %vr4041 to i64

	; bop vr4040 SHL 3
	%vr4042 = shl i64 %vr4040, 3

	; bop THIS + vr4042
	%vr4044 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4045 = inttoptr i64 %vr4042 to %MEMORY_T*
	%vr4043 = add %MEMORY_T* %vr4044, %vr4045

	; bop vr4037 + vr4043
	%vr4047 = ptrtoint %MEMORY_T* %vr4043 to i64
	%vr4048 = inttoptr i64 %vr4047 to double*
	%vr4049 = load double, double* %vr4048
	%vr4046 = fadd double %vr4037, %vr4049

	; bop SYS_OFFSET + 209
	%vr4051 = load double, double* @SYS_OFFSET
	%vr4050 = fadd double %vr4051, 0x406A200000000000

	; conv vr4050 => vr4052
	%vr4053 = call double @llvm.nearbyint.f64(double %vr4050)
	%vr4052 = fptosi double %vr4053 to i64

	; bop vr4052 SHL 3
	%vr4054 = shl i64 %vr4052, 3

	; bop THIS + vr4054
	%vr4056 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4057 = inttoptr i64 %vr4054 to %MEMORY_T*
	%vr4055 = add %MEMORY_T* %vr4056, %vr4057

	; store vr4055 := vr4046
	%vr4058 = ptrtoint %MEMORY_T* %vr4055 to i64
	%vr4059 = inttoptr i64 %vr4058 to double*
	store double %vr4046, double* %vr4059

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10C0:

	; label .Lt_05DC
	br label %.Lt_05DC
.Lt_05DC:

	; conv ADR => vr4061
	%vr4062 = load i64, i64* %ADR.110
	%vr4061 = uitofp i64 %vr4062 to double

	; bop SYS_OFFSET + 52
	%vr4064 = load double, double* @SYS_OFFSET
	%vr4063 = fadd double %vr4064, 0x404A000000000000

	; branchbop vr4061 <> vr4063
	%vr4065 = icmp ne double %vr4061, %vr4063
	br i1 %vr4065, label %.Lt_05DE, label %.Lt_10C1
.Lt_10C1:

	; label .Lt_05DF
	br label %.Lt_05DF
.Lt_05DF:

	; bop SYS_OFFSET + 53
	%vr4067 = load double, double* @SYS_OFFSET
	%vr4066 = fadd double %vr4067, 0x404A800000000000

	; conv vr4066 => vr4068
	%vr4069 = call double @llvm.nearbyint.f64(double %vr4066)
	%vr4068 = fptosi double %vr4069 to i64

	; bop vr4068 SHL 3
	%vr4070 = shl i64 %vr4068, 3

	; bop THIS + vr4070
	%vr4072 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4073 = inttoptr i64 %vr4070 to %MEMORY_T*
	%vr4071 = add %MEMORY_T* %vr4072, %vr4073

	; conv vr4071 => vr4074
	%vr4076 = ptrtoint %MEMORY_T* %vr4071 to i64
	%vr4077 = inttoptr i64 %vr4076 to double*
	%vr4078 = load double, double* %vr4077
	%vr4075 = call double @llvm.nearbyint.f64(double %vr4078)
	%vr4074 = fptosi double %vr4075 to i64

	; bop vr4074 SHL 32
	%vr4079 = shl i64 %vr4074, 32

	; bop SYS_OFFSET + 54
	%vr4081 = load double, double* @SYS_OFFSET
	%vr4080 = fadd double %vr4081, 0x404B000000000000

	; conv vr4080 => vr4082
	%vr4083 = call double @llvm.nearbyint.f64(double %vr4080)
	%vr4082 = fptosi double %vr4083 to i64

	; bop vr4082 SHL 3
	%vr4084 = shl i64 %vr4082, 3

	; bop THIS + vr4084
	%vr4086 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4087 = inttoptr i64 %vr4084 to %MEMORY_T*
	%vr4085 = add %MEMORY_T* %vr4086, %vr4087

	; conv vr4085 => vr4088
	%vr4090 = ptrtoint %MEMORY_T* %vr4085 to i64
	%vr4091 = inttoptr i64 %vr4090 to double*
	%vr4092 = load double, double* %vr4091
	%vr4089 = call double @llvm.nearbyint.f64(double %vr4092)
	%vr4088 = fptosi double %vr4089 to i64

	; bop vr4088 SHL 24
	%vr4093 = shl i64 %vr4088, 24

	; bop vr4079 + vr4093
	%vr4094 = add i64 %vr4079, %vr4093

	; bop SYS_OFFSET + 55
	%vr4096 = load double, double* @SYS_OFFSET
	%vr4095 = fadd double %vr4096, 0x404B800000000000

	; conv vr4095 => vr4097
	%vr4098 = call double @llvm.nearbyint.f64(double %vr4095)
	%vr4097 = fptosi double %vr4098 to i64

	; bop vr4097 SHL 3
	%vr4099 = shl i64 %vr4097, 3

	; bop THIS + vr4099
	%vr4101 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4102 = inttoptr i64 %vr4099 to %MEMORY_T*
	%vr4100 = add %MEMORY_T* %vr4101, %vr4102

	; conv vr4100 => vr4103
	%vr4105 = ptrtoint %MEMORY_T* %vr4100 to i64
	%vr4106 = inttoptr i64 %vr4105 to double*
	%vr4107 = load double, double* %vr4106
	%vr4104 = call double @llvm.nearbyint.f64(double %vr4107)
	%vr4103 = fptosi double %vr4104 to i64

	; bop vr4103 SHL 16
	%vr4108 = shl i64 %vr4103, 16

	; bop vr4094 + vr4108
	%vr4109 = add i64 %vr4094, %vr4108

	; bop SYS_OFFSET + 56
	%vr4111 = load double, double* @SYS_OFFSET
	%vr4110 = fadd double %vr4111, 0x404C000000000000

	; conv vr4110 => vr4112
	%vr4113 = call double @llvm.nearbyint.f64(double %vr4110)
	%vr4112 = fptosi double %vr4113 to i64

	; bop vr4112 SHL 3
	%vr4114 = shl i64 %vr4112, 3

	; bop THIS + vr4114
	%vr4116 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4117 = inttoptr i64 %vr4114 to %MEMORY_T*
	%vr4115 = add %MEMORY_T* %vr4116, %vr4117

	; conv vr4115 => vr4118
	%vr4120 = ptrtoint %MEMORY_T* %vr4115 to i64
	%vr4121 = inttoptr i64 %vr4120 to double*
	%vr4122 = load double, double* %vr4121
	%vr4119 = call double @llvm.nearbyint.f64(double %vr4122)
	%vr4118 = fptosi double %vr4119 to i64

	; bop vr4118 SHL 8
	%vr4123 = shl i64 %vr4118, 8

	; bop vr4109 + vr4123
	%vr4124 = add i64 %vr4109, %vr4123

	; conv vr4124 => vr4125
	%vr4125 = sitofp i64 %vr4124 to double

	; bop SYS_OFFSET + 57
	%vr4127 = load double, double* @SYS_OFFSET
	%vr4126 = fadd double %vr4127, 0x404C800000000000

	; conv vr4126 => vr4128
	%vr4129 = call double @llvm.nearbyint.f64(double %vr4126)
	%vr4128 = fptosi double %vr4129 to i64

	; bop vr4128 SHL 3
	%vr4130 = shl i64 %vr4128, 3

	; bop THIS + vr4130
	%vr4132 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4133 = inttoptr i64 %vr4130 to %MEMORY_T*
	%vr4131 = add %MEMORY_T* %vr4132, %vr4133

	; bop vr4125 + vr4131
	%vr4135 = ptrtoint %MEMORY_T* %vr4131 to i64
	%vr4136 = inttoptr i64 %vr4135 to double*
	%vr4137 = load double, double* %vr4136
	%vr4134 = fadd double %vr4125, %vr4137

	; bop SYS_OFFSET + 210
	%vr4139 = load double, double* @SYS_OFFSET
	%vr4138 = fadd double %vr4139, 0x406A400000000000

	; conv vr4138 => vr4140
	%vr4141 = call double @llvm.nearbyint.f64(double %vr4138)
	%vr4140 = fptosi double %vr4141 to i64

	; bop vr4140 SHL 3
	%vr4142 = shl i64 %vr4140, 3

	; bop THIS + vr4142
	%vr4144 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4145 = inttoptr i64 %vr4142 to %MEMORY_T*
	%vr4143 = add %MEMORY_T* %vr4144, %vr4145

	; store vr4143 := vr4134
	%vr4146 = ptrtoint %MEMORY_T* %vr4143 to i64
	%vr4147 = inttoptr i64 %vr4146 to double*
	store double %vr4134, double* %vr4147

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10C2:

	; label .Lt_05DE
	br label %.Lt_05DE
.Lt_05DE:

	; conv ADR => vr4149
	%vr4150 = load i64, i64* %ADR.110
	%vr4149 = uitofp i64 %vr4150 to double

	; bop SYS_OFFSET + 58
	%vr4152 = load double, double* @SYS_OFFSET
	%vr4151 = fadd double %vr4152, 0x404D000000000000

	; branchbop vr4149 <> vr4151
	%vr4153 = icmp ne double %vr4149, %vr4151
	br i1 %vr4153, label %.Lt_05E0, label %.Lt_10C3
.Lt_10C3:

	; label .Lt_05E1
	br label %.Lt_05E1
.Lt_05E1:

	; bop SYS_OFFSET + 59
	%vr4155 = load double, double* @SYS_OFFSET
	%vr4154 = fadd double %vr4155, 0x404D800000000000

	; conv vr4154 => vr4156
	%vr4157 = call double @llvm.nearbyint.f64(double %vr4154)
	%vr4156 = fptosi double %vr4157 to i64

	; bop vr4156 SHL 3
	%vr4158 = shl i64 %vr4156, 3

	; bop THIS + vr4158
	%vr4160 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4161 = inttoptr i64 %vr4158 to %MEMORY_T*
	%vr4159 = add %MEMORY_T* %vr4160, %vr4161

	; conv vr4159 => vr4162
	%vr4164 = ptrtoint %MEMORY_T* %vr4159 to i64
	%vr4165 = inttoptr i64 %vr4164 to double*
	%vr4166 = load double, double* %vr4165
	%vr4163 = call double @llvm.nearbyint.f64(double %vr4166)
	%vr4162 = fptosi double %vr4163 to i64

	; bop vr4162 SHL 32
	%vr4167 = shl i64 %vr4162, 32

	; bop SYS_OFFSET + 60
	%vr4169 = load double, double* @SYS_OFFSET
	%vr4168 = fadd double %vr4169, 0x404E000000000000

	; conv vr4168 => vr4170
	%vr4171 = call double @llvm.nearbyint.f64(double %vr4168)
	%vr4170 = fptosi double %vr4171 to i64

	; bop vr4170 SHL 3
	%vr4172 = shl i64 %vr4170, 3

	; bop THIS + vr4172
	%vr4174 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4175 = inttoptr i64 %vr4172 to %MEMORY_T*
	%vr4173 = add %MEMORY_T* %vr4174, %vr4175

	; conv vr4173 => vr4176
	%vr4178 = ptrtoint %MEMORY_T* %vr4173 to i64
	%vr4179 = inttoptr i64 %vr4178 to double*
	%vr4180 = load double, double* %vr4179
	%vr4177 = call double @llvm.nearbyint.f64(double %vr4180)
	%vr4176 = fptosi double %vr4177 to i64

	; bop vr4176 SHL 24
	%vr4181 = shl i64 %vr4176, 24

	; bop vr4167 + vr4181
	%vr4182 = add i64 %vr4167, %vr4181

	; bop SYS_OFFSET + 61
	%vr4184 = load double, double* @SYS_OFFSET
	%vr4183 = fadd double %vr4184, 0x404E800000000000

	; conv vr4183 => vr4185
	%vr4186 = call double @llvm.nearbyint.f64(double %vr4183)
	%vr4185 = fptosi double %vr4186 to i64

	; bop vr4185 SHL 3
	%vr4187 = shl i64 %vr4185, 3

	; bop THIS + vr4187
	%vr4189 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4190 = inttoptr i64 %vr4187 to %MEMORY_T*
	%vr4188 = add %MEMORY_T* %vr4189, %vr4190

	; conv vr4188 => vr4191
	%vr4193 = ptrtoint %MEMORY_T* %vr4188 to i64
	%vr4194 = inttoptr i64 %vr4193 to double*
	%vr4195 = load double, double* %vr4194
	%vr4192 = call double @llvm.nearbyint.f64(double %vr4195)
	%vr4191 = fptosi double %vr4192 to i64

	; bop vr4191 SHL 16
	%vr4196 = shl i64 %vr4191, 16

	; bop vr4182 + vr4196
	%vr4197 = add i64 %vr4182, %vr4196

	; bop SYS_OFFSET + 62
	%vr4199 = load double, double* @SYS_OFFSET
	%vr4198 = fadd double %vr4199, 0x404F000000000000

	; conv vr4198 => vr4200
	%vr4201 = call double @llvm.nearbyint.f64(double %vr4198)
	%vr4200 = fptosi double %vr4201 to i64

	; bop vr4200 SHL 3
	%vr4202 = shl i64 %vr4200, 3

	; bop THIS + vr4202
	%vr4204 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4205 = inttoptr i64 %vr4202 to %MEMORY_T*
	%vr4203 = add %MEMORY_T* %vr4204, %vr4205

	; conv vr4203 => vr4206
	%vr4208 = ptrtoint %MEMORY_T* %vr4203 to i64
	%vr4209 = inttoptr i64 %vr4208 to double*
	%vr4210 = load double, double* %vr4209
	%vr4207 = call double @llvm.nearbyint.f64(double %vr4210)
	%vr4206 = fptosi double %vr4207 to i64

	; bop vr4206 SHL 8
	%vr4211 = shl i64 %vr4206, 8

	; bop vr4197 + vr4211
	%vr4212 = add i64 %vr4197, %vr4211

	; conv vr4212 => vr4213
	%vr4213 = sitofp i64 %vr4212 to double

	; bop SYS_OFFSET + 63
	%vr4215 = load double, double* @SYS_OFFSET
	%vr4214 = fadd double %vr4215, 0x404F800000000000

	; conv vr4214 => vr4216
	%vr4217 = call double @llvm.nearbyint.f64(double %vr4214)
	%vr4216 = fptosi double %vr4217 to i64

	; bop vr4216 SHL 3
	%vr4218 = shl i64 %vr4216, 3

	; bop THIS + vr4218
	%vr4220 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4221 = inttoptr i64 %vr4218 to %MEMORY_T*
	%vr4219 = add %MEMORY_T* %vr4220, %vr4221

	; bop vr4213 + vr4219
	%vr4223 = ptrtoint %MEMORY_T* %vr4219 to i64
	%vr4224 = inttoptr i64 %vr4223 to double*
	%vr4225 = load double, double* %vr4224
	%vr4222 = fadd double %vr4213, %vr4225

	; bop SYS_OFFSET + 211
	%vr4227 = load double, double* @SYS_OFFSET
	%vr4226 = fadd double %vr4227, 0x406A600000000000

	; conv vr4226 => vr4228
	%vr4229 = call double @llvm.nearbyint.f64(double %vr4226)
	%vr4228 = fptosi double %vr4229 to i64

	; bop vr4228 SHL 3
	%vr4230 = shl i64 %vr4228, 3

	; bop THIS + vr4230
	%vr4232 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4233 = inttoptr i64 %vr4230 to %MEMORY_T*
	%vr4231 = add %MEMORY_T* %vr4232, %vr4233

	; store vr4231 := vr4222
	%vr4234 = ptrtoint %MEMORY_T* %vr4231 to i64
	%vr4235 = inttoptr i64 %vr4234 to double*
	store double %vr4222, double* %vr4235

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10C4:

	; label .Lt_05E0
	br label %.Lt_05E0
.Lt_05E0:

	; conv ADR => vr4237
	%vr4238 = load i64, i64* %ADR.110
	%vr4237 = uitofp i64 %vr4238 to double

	; bop SYS_OFFSET + 64
	%vr4240 = load double, double* @SYS_OFFSET
	%vr4239 = fadd double %vr4240, 0x4050000000000000

	; branchbop vr4237 <> vr4239
	%vr4241 = icmp ne double %vr4237, %vr4239
	br i1 %vr4241, label %.Lt_05E2, label %.Lt_10C5
.Lt_10C5:

	; label .Lt_05E3
	br label %.Lt_05E3
.Lt_05E3:

	; bop SYS_OFFSET + 65
	%vr4243 = load double, double* @SYS_OFFSET
	%vr4242 = fadd double %vr4243, 0x4050400000000000

	; conv vr4242 => vr4244
	%vr4245 = call double @llvm.nearbyint.f64(double %vr4242)
	%vr4244 = fptosi double %vr4245 to i64

	; bop vr4244 SHL 3
	%vr4246 = shl i64 %vr4244, 3

	; bop THIS + vr4246
	%vr4248 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4249 = inttoptr i64 %vr4246 to %MEMORY_T*
	%vr4247 = add %MEMORY_T* %vr4248, %vr4249

	; conv vr4247 => vr4250
	%vr4252 = ptrtoint %MEMORY_T* %vr4247 to i64
	%vr4253 = inttoptr i64 %vr4252 to double*
	%vr4254 = load double, double* %vr4253
	%vr4251 = call double @llvm.nearbyint.f64(double %vr4254)
	%vr4250 = fptosi double %vr4251 to i64

	; bop vr4250 SHL 32
	%vr4255 = shl i64 %vr4250, 32

	; bop SYS_OFFSET + 66
	%vr4257 = load double, double* @SYS_OFFSET
	%vr4256 = fadd double %vr4257, 0x4050800000000000

	; conv vr4256 => vr4258
	%vr4259 = call double @llvm.nearbyint.f64(double %vr4256)
	%vr4258 = fptosi double %vr4259 to i64

	; bop vr4258 SHL 3
	%vr4260 = shl i64 %vr4258, 3

	; bop THIS + vr4260
	%vr4262 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4263 = inttoptr i64 %vr4260 to %MEMORY_T*
	%vr4261 = add %MEMORY_T* %vr4262, %vr4263

	; conv vr4261 => vr4264
	%vr4266 = ptrtoint %MEMORY_T* %vr4261 to i64
	%vr4267 = inttoptr i64 %vr4266 to double*
	%vr4268 = load double, double* %vr4267
	%vr4265 = call double @llvm.nearbyint.f64(double %vr4268)
	%vr4264 = fptosi double %vr4265 to i64

	; bop vr4264 SHL 24
	%vr4269 = shl i64 %vr4264, 24

	; bop vr4255 + vr4269
	%vr4270 = add i64 %vr4255, %vr4269

	; bop SYS_OFFSET + 67
	%vr4272 = load double, double* @SYS_OFFSET
	%vr4271 = fadd double %vr4272, 0x4050C00000000000

	; conv vr4271 => vr4273
	%vr4274 = call double @llvm.nearbyint.f64(double %vr4271)
	%vr4273 = fptosi double %vr4274 to i64

	; bop vr4273 SHL 3
	%vr4275 = shl i64 %vr4273, 3

	; bop THIS + vr4275
	%vr4277 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4278 = inttoptr i64 %vr4275 to %MEMORY_T*
	%vr4276 = add %MEMORY_T* %vr4277, %vr4278

	; conv vr4276 => vr4279
	%vr4281 = ptrtoint %MEMORY_T* %vr4276 to i64
	%vr4282 = inttoptr i64 %vr4281 to double*
	%vr4283 = load double, double* %vr4282
	%vr4280 = call double @llvm.nearbyint.f64(double %vr4283)
	%vr4279 = fptosi double %vr4280 to i64

	; bop vr4279 SHL 16
	%vr4284 = shl i64 %vr4279, 16

	; bop vr4270 + vr4284
	%vr4285 = add i64 %vr4270, %vr4284

	; bop SYS_OFFSET + 68
	%vr4287 = load double, double* @SYS_OFFSET
	%vr4286 = fadd double %vr4287, 0x4051000000000000

	; conv vr4286 => vr4288
	%vr4289 = call double @llvm.nearbyint.f64(double %vr4286)
	%vr4288 = fptosi double %vr4289 to i64

	; bop vr4288 SHL 3
	%vr4290 = shl i64 %vr4288, 3

	; bop THIS + vr4290
	%vr4292 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4293 = inttoptr i64 %vr4290 to %MEMORY_T*
	%vr4291 = add %MEMORY_T* %vr4292, %vr4293

	; conv vr4291 => vr4294
	%vr4296 = ptrtoint %MEMORY_T* %vr4291 to i64
	%vr4297 = inttoptr i64 %vr4296 to double*
	%vr4298 = load double, double* %vr4297
	%vr4295 = call double @llvm.nearbyint.f64(double %vr4298)
	%vr4294 = fptosi double %vr4295 to i64

	; bop vr4294 SHL 8
	%vr4299 = shl i64 %vr4294, 8

	; bop vr4285 + vr4299
	%vr4300 = add i64 %vr4285, %vr4299

	; conv vr4300 => vr4301
	%vr4301 = sitofp i64 %vr4300 to double

	; bop SYS_OFFSET + 69
	%vr4303 = load double, double* @SYS_OFFSET
	%vr4302 = fadd double %vr4303, 0x4051400000000000

	; conv vr4302 => vr4304
	%vr4305 = call double @llvm.nearbyint.f64(double %vr4302)
	%vr4304 = fptosi double %vr4305 to i64

	; bop vr4304 SHL 3
	%vr4306 = shl i64 %vr4304, 3

	; bop THIS + vr4306
	%vr4308 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4309 = inttoptr i64 %vr4306 to %MEMORY_T*
	%vr4307 = add %MEMORY_T* %vr4308, %vr4309

	; bop vr4301 + vr4307
	%vr4311 = ptrtoint %MEMORY_T* %vr4307 to i64
	%vr4312 = inttoptr i64 %vr4311 to double*
	%vr4313 = load double, double* %vr4312
	%vr4310 = fadd double %vr4301, %vr4313

	; bop SYS_OFFSET + 212
	%vr4315 = load double, double* @SYS_OFFSET
	%vr4314 = fadd double %vr4315, 0x406A800000000000

	; conv vr4314 => vr4316
	%vr4317 = call double @llvm.nearbyint.f64(double %vr4314)
	%vr4316 = fptosi double %vr4317 to i64

	; bop vr4316 SHL 3
	%vr4318 = shl i64 %vr4316, 3

	; bop THIS + vr4318
	%vr4320 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4321 = inttoptr i64 %vr4318 to %MEMORY_T*
	%vr4319 = add %MEMORY_T* %vr4320, %vr4321

	; store vr4319 := vr4310
	%vr4322 = ptrtoint %MEMORY_T* %vr4319 to i64
	%vr4323 = inttoptr i64 %vr4322 to double*
	store double %vr4310, double* %vr4323

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10C6:

	; label .Lt_05E2
	br label %.Lt_05E2
.Lt_05E2:

	; conv ADR => vr4325
	%vr4326 = load i64, i64* %ADR.110
	%vr4325 = uitofp i64 %vr4326 to double

	; bop SYS_OFFSET + 70
	%vr4328 = load double, double* @SYS_OFFSET
	%vr4327 = fadd double %vr4328, 0x4051800000000000

	; branchbop vr4325 <> vr4327
	%vr4329 = icmp ne double %vr4325, %vr4327
	br i1 %vr4329, label %.Lt_05E4, label %.Lt_10C7
.Lt_10C7:

	; label .Lt_05E5
	br label %.Lt_05E5
.Lt_05E5:

	; bop SYS_OFFSET + 71
	%vr4331 = load double, double* @SYS_OFFSET
	%vr4330 = fadd double %vr4331, 0x4051C00000000000

	; conv vr4330 => vr4332
	%vr4333 = call double @llvm.nearbyint.f64(double %vr4330)
	%vr4332 = fptosi double %vr4333 to i64

	; bop vr4332 SHL 3
	%vr4334 = shl i64 %vr4332, 3

	; bop THIS + vr4334
	%vr4336 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4337 = inttoptr i64 %vr4334 to %MEMORY_T*
	%vr4335 = add %MEMORY_T* %vr4336, %vr4337

	; conv vr4335 => vr4338
	%vr4340 = ptrtoint %MEMORY_T* %vr4335 to i64
	%vr4341 = inttoptr i64 %vr4340 to double*
	%vr4342 = load double, double* %vr4341
	%vr4339 = call double @llvm.nearbyint.f64(double %vr4342)
	%vr4338 = fptosi double %vr4339 to i64

	; bop vr4338 SHL 32
	%vr4343 = shl i64 %vr4338, 32

	; bop SYS_OFFSET + 72
	%vr4345 = load double, double* @SYS_OFFSET
	%vr4344 = fadd double %vr4345, 0x4052000000000000

	; conv vr4344 => vr4346
	%vr4347 = call double @llvm.nearbyint.f64(double %vr4344)
	%vr4346 = fptosi double %vr4347 to i64

	; bop vr4346 SHL 3
	%vr4348 = shl i64 %vr4346, 3

	; bop THIS + vr4348
	%vr4350 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4351 = inttoptr i64 %vr4348 to %MEMORY_T*
	%vr4349 = add %MEMORY_T* %vr4350, %vr4351

	; conv vr4349 => vr4352
	%vr4354 = ptrtoint %MEMORY_T* %vr4349 to i64
	%vr4355 = inttoptr i64 %vr4354 to double*
	%vr4356 = load double, double* %vr4355
	%vr4353 = call double @llvm.nearbyint.f64(double %vr4356)
	%vr4352 = fptosi double %vr4353 to i64

	; bop vr4352 SHL 24
	%vr4357 = shl i64 %vr4352, 24

	; bop vr4343 + vr4357
	%vr4358 = add i64 %vr4343, %vr4357

	; bop SYS_OFFSET + 73
	%vr4360 = load double, double* @SYS_OFFSET
	%vr4359 = fadd double %vr4360, 0x4052400000000000

	; conv vr4359 => vr4361
	%vr4362 = call double @llvm.nearbyint.f64(double %vr4359)
	%vr4361 = fptosi double %vr4362 to i64

	; bop vr4361 SHL 3
	%vr4363 = shl i64 %vr4361, 3

	; bop THIS + vr4363
	%vr4365 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4366 = inttoptr i64 %vr4363 to %MEMORY_T*
	%vr4364 = add %MEMORY_T* %vr4365, %vr4366

	; conv vr4364 => vr4367
	%vr4369 = ptrtoint %MEMORY_T* %vr4364 to i64
	%vr4370 = inttoptr i64 %vr4369 to double*
	%vr4371 = load double, double* %vr4370
	%vr4368 = call double @llvm.nearbyint.f64(double %vr4371)
	%vr4367 = fptosi double %vr4368 to i64

	; bop vr4367 SHL 16
	%vr4372 = shl i64 %vr4367, 16

	; bop vr4358 + vr4372
	%vr4373 = add i64 %vr4358, %vr4372

	; bop SYS_OFFSET + 74
	%vr4375 = load double, double* @SYS_OFFSET
	%vr4374 = fadd double %vr4375, 0x4052800000000000

	; conv vr4374 => vr4376
	%vr4377 = call double @llvm.nearbyint.f64(double %vr4374)
	%vr4376 = fptosi double %vr4377 to i64

	; bop vr4376 SHL 3
	%vr4378 = shl i64 %vr4376, 3

	; bop THIS + vr4378
	%vr4380 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4381 = inttoptr i64 %vr4378 to %MEMORY_T*
	%vr4379 = add %MEMORY_T* %vr4380, %vr4381

	; conv vr4379 => vr4382
	%vr4384 = ptrtoint %MEMORY_T* %vr4379 to i64
	%vr4385 = inttoptr i64 %vr4384 to double*
	%vr4386 = load double, double* %vr4385
	%vr4383 = call double @llvm.nearbyint.f64(double %vr4386)
	%vr4382 = fptosi double %vr4383 to i64

	; bop vr4382 SHL 8
	%vr4387 = shl i64 %vr4382, 8

	; bop vr4373 + vr4387
	%vr4388 = add i64 %vr4373, %vr4387

	; conv vr4388 => vr4389
	%vr4389 = sitofp i64 %vr4388 to double

	; bop SYS_OFFSET + 75
	%vr4391 = load double, double* @SYS_OFFSET
	%vr4390 = fadd double %vr4391, 0x4052C00000000000

	; conv vr4390 => vr4392
	%vr4393 = call double @llvm.nearbyint.f64(double %vr4390)
	%vr4392 = fptosi double %vr4393 to i64

	; bop vr4392 SHL 3
	%vr4394 = shl i64 %vr4392, 3

	; bop THIS + vr4394
	%vr4396 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4397 = inttoptr i64 %vr4394 to %MEMORY_T*
	%vr4395 = add %MEMORY_T* %vr4396, %vr4397

	; bop vr4389 + vr4395
	%vr4399 = ptrtoint %MEMORY_T* %vr4395 to i64
	%vr4400 = inttoptr i64 %vr4399 to double*
	%vr4401 = load double, double* %vr4400
	%vr4398 = fadd double %vr4389, %vr4401

	; bop SYS_OFFSET + 213
	%vr4403 = load double, double* @SYS_OFFSET
	%vr4402 = fadd double %vr4403, 0x406AA00000000000

	; conv vr4402 => vr4404
	%vr4405 = call double @llvm.nearbyint.f64(double %vr4402)
	%vr4404 = fptosi double %vr4405 to i64

	; bop vr4404 SHL 3
	%vr4406 = shl i64 %vr4404, 3

	; bop THIS + vr4406
	%vr4408 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4409 = inttoptr i64 %vr4406 to %MEMORY_T*
	%vr4407 = add %MEMORY_T* %vr4408, %vr4409

	; store vr4407 := vr4398
	%vr4410 = ptrtoint %MEMORY_T* %vr4407 to i64
	%vr4411 = inttoptr i64 %vr4410 to double*
	store double %vr4398, double* %vr4411

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10C8:

	; label .Lt_05E4
	br label %.Lt_05E4
.Lt_05E4:

	; conv ADR => vr4413
	%vr4414 = load i64, i64* %ADR.110
	%vr4413 = uitofp i64 %vr4414 to double

	; bop SYS_OFFSET + 76
	%vr4416 = load double, double* @SYS_OFFSET
	%vr4415 = fadd double %vr4416, 0x4053000000000000

	; branchbop vr4413 <> vr4415
	%vr4417 = icmp ne double %vr4413, %vr4415
	br i1 %vr4417, label %.Lt_05E6, label %.Lt_10C9
.Lt_10C9:

	; label .Lt_05E7
	br label %.Lt_05E7
.Lt_05E7:

	; bop SYS_OFFSET + 77
	%vr4419 = load double, double* @SYS_OFFSET
	%vr4418 = fadd double %vr4419, 0x4053400000000000

	; conv vr4418 => vr4420
	%vr4421 = call double @llvm.nearbyint.f64(double %vr4418)
	%vr4420 = fptosi double %vr4421 to i64

	; bop vr4420 SHL 3
	%vr4422 = shl i64 %vr4420, 3

	; bop THIS + vr4422
	%vr4424 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4425 = inttoptr i64 %vr4422 to %MEMORY_T*
	%vr4423 = add %MEMORY_T* %vr4424, %vr4425

	; conv vr4423 => vr4426
	%vr4428 = ptrtoint %MEMORY_T* %vr4423 to i64
	%vr4429 = inttoptr i64 %vr4428 to double*
	%vr4430 = load double, double* %vr4429
	%vr4427 = call double @llvm.nearbyint.f64(double %vr4430)
	%vr4426 = fptosi double %vr4427 to i64

	; bop vr4426 SHL 32
	%vr4431 = shl i64 %vr4426, 32

	; bop SYS_OFFSET + 78
	%vr4433 = load double, double* @SYS_OFFSET
	%vr4432 = fadd double %vr4433, 0x4053800000000000

	; conv vr4432 => vr4434
	%vr4435 = call double @llvm.nearbyint.f64(double %vr4432)
	%vr4434 = fptosi double %vr4435 to i64

	; bop vr4434 SHL 3
	%vr4436 = shl i64 %vr4434, 3

	; bop THIS + vr4436
	%vr4438 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4439 = inttoptr i64 %vr4436 to %MEMORY_T*
	%vr4437 = add %MEMORY_T* %vr4438, %vr4439

	; conv vr4437 => vr4440
	%vr4442 = ptrtoint %MEMORY_T* %vr4437 to i64
	%vr4443 = inttoptr i64 %vr4442 to double*
	%vr4444 = load double, double* %vr4443
	%vr4441 = call double @llvm.nearbyint.f64(double %vr4444)
	%vr4440 = fptosi double %vr4441 to i64

	; bop vr4440 SHL 24
	%vr4445 = shl i64 %vr4440, 24

	; bop vr4431 + vr4445
	%vr4446 = add i64 %vr4431, %vr4445

	; bop SYS_OFFSET + 79
	%vr4448 = load double, double* @SYS_OFFSET
	%vr4447 = fadd double %vr4448, 0x4053C00000000000

	; conv vr4447 => vr4449
	%vr4450 = call double @llvm.nearbyint.f64(double %vr4447)
	%vr4449 = fptosi double %vr4450 to i64

	; bop vr4449 SHL 3
	%vr4451 = shl i64 %vr4449, 3

	; bop THIS + vr4451
	%vr4453 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4454 = inttoptr i64 %vr4451 to %MEMORY_T*
	%vr4452 = add %MEMORY_T* %vr4453, %vr4454

	; conv vr4452 => vr4455
	%vr4457 = ptrtoint %MEMORY_T* %vr4452 to i64
	%vr4458 = inttoptr i64 %vr4457 to double*
	%vr4459 = load double, double* %vr4458
	%vr4456 = call double @llvm.nearbyint.f64(double %vr4459)
	%vr4455 = fptosi double %vr4456 to i64

	; bop vr4455 SHL 16
	%vr4460 = shl i64 %vr4455, 16

	; bop vr4446 + vr4460
	%vr4461 = add i64 %vr4446, %vr4460

	; bop SYS_OFFSET + 80
	%vr4463 = load double, double* @SYS_OFFSET
	%vr4462 = fadd double %vr4463, 0x4054000000000000

	; conv vr4462 => vr4464
	%vr4465 = call double @llvm.nearbyint.f64(double %vr4462)
	%vr4464 = fptosi double %vr4465 to i64

	; bop vr4464 SHL 3
	%vr4466 = shl i64 %vr4464, 3

	; bop THIS + vr4466
	%vr4468 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4469 = inttoptr i64 %vr4466 to %MEMORY_T*
	%vr4467 = add %MEMORY_T* %vr4468, %vr4469

	; conv vr4467 => vr4470
	%vr4472 = ptrtoint %MEMORY_T* %vr4467 to i64
	%vr4473 = inttoptr i64 %vr4472 to double*
	%vr4474 = load double, double* %vr4473
	%vr4471 = call double @llvm.nearbyint.f64(double %vr4474)
	%vr4470 = fptosi double %vr4471 to i64

	; bop vr4470 SHL 8
	%vr4475 = shl i64 %vr4470, 8

	; bop vr4461 + vr4475
	%vr4476 = add i64 %vr4461, %vr4475

	; conv vr4476 => vr4477
	%vr4477 = sitofp i64 %vr4476 to double

	; bop SYS_OFFSET + 81
	%vr4479 = load double, double* @SYS_OFFSET
	%vr4478 = fadd double %vr4479, 0x4054400000000000

	; conv vr4478 => vr4480
	%vr4481 = call double @llvm.nearbyint.f64(double %vr4478)
	%vr4480 = fptosi double %vr4481 to i64

	; bop vr4480 SHL 3
	%vr4482 = shl i64 %vr4480, 3

	; bop THIS + vr4482
	%vr4484 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4485 = inttoptr i64 %vr4482 to %MEMORY_T*
	%vr4483 = add %MEMORY_T* %vr4484, %vr4485

	; bop vr4477 + vr4483
	%vr4487 = ptrtoint %MEMORY_T* %vr4483 to i64
	%vr4488 = inttoptr i64 %vr4487 to double*
	%vr4489 = load double, double* %vr4488
	%vr4486 = fadd double %vr4477, %vr4489

	; bop SYS_OFFSET + 214
	%vr4491 = load double, double* @SYS_OFFSET
	%vr4490 = fadd double %vr4491, 0x406AC00000000000

	; conv vr4490 => vr4492
	%vr4493 = call double @llvm.nearbyint.f64(double %vr4490)
	%vr4492 = fptosi double %vr4493 to i64

	; bop vr4492 SHL 3
	%vr4494 = shl i64 %vr4492, 3

	; bop THIS + vr4494
	%vr4496 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4497 = inttoptr i64 %vr4494 to %MEMORY_T*
	%vr4495 = add %MEMORY_T* %vr4496, %vr4497

	; store vr4495 := vr4486
	%vr4498 = ptrtoint %MEMORY_T* %vr4495 to i64
	%vr4499 = inttoptr i64 %vr4498 to double*
	store double %vr4486, double* %vr4499

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10CA:

	; label .Lt_05E6
	br label %.Lt_05E6
.Lt_05E6:

	; conv ADR => vr4501
	%vr4502 = load i64, i64* %ADR.110
	%vr4501 = uitofp i64 %vr4502 to double

	; bop SYS_OFFSET + 82
	%vr4504 = load double, double* @SYS_OFFSET
	%vr4503 = fadd double %vr4504, 0x4054800000000000

	; branchbop vr4501 <> vr4503
	%vr4505 = icmp ne double %vr4501, %vr4503
	br i1 %vr4505, label %.Lt_05E8, label %.Lt_10CB
.Lt_10CB:

	; label .Lt_05E9
	br label %.Lt_05E9
.Lt_05E9:

	; bop SYS_OFFSET + 83
	%vr4507 = load double, double* @SYS_OFFSET
	%vr4506 = fadd double %vr4507, 0x4054C00000000000

	; conv vr4506 => vr4508
	%vr4509 = call double @llvm.nearbyint.f64(double %vr4506)
	%vr4508 = fptosi double %vr4509 to i64

	; bop vr4508 SHL 3
	%vr4510 = shl i64 %vr4508, 3

	; bop THIS + vr4510
	%vr4512 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4513 = inttoptr i64 %vr4510 to %MEMORY_T*
	%vr4511 = add %MEMORY_T* %vr4512, %vr4513

	; conv vr4511 => vr4514
	%vr4516 = ptrtoint %MEMORY_T* %vr4511 to i64
	%vr4517 = inttoptr i64 %vr4516 to double*
	%vr4518 = load double, double* %vr4517
	%vr4515 = call double @llvm.nearbyint.f64(double %vr4518)
	%vr4514 = fptosi double %vr4515 to i64

	; bop vr4514 SHL 32
	%vr4519 = shl i64 %vr4514, 32

	; bop SYS_OFFSET + 84
	%vr4521 = load double, double* @SYS_OFFSET
	%vr4520 = fadd double %vr4521, 0x4055000000000000

	; conv vr4520 => vr4522
	%vr4523 = call double @llvm.nearbyint.f64(double %vr4520)
	%vr4522 = fptosi double %vr4523 to i64

	; bop vr4522 SHL 3
	%vr4524 = shl i64 %vr4522, 3

	; bop THIS + vr4524
	%vr4526 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4527 = inttoptr i64 %vr4524 to %MEMORY_T*
	%vr4525 = add %MEMORY_T* %vr4526, %vr4527

	; conv vr4525 => vr4528
	%vr4530 = ptrtoint %MEMORY_T* %vr4525 to i64
	%vr4531 = inttoptr i64 %vr4530 to double*
	%vr4532 = load double, double* %vr4531
	%vr4529 = call double @llvm.nearbyint.f64(double %vr4532)
	%vr4528 = fptosi double %vr4529 to i64

	; bop vr4528 SHL 24
	%vr4533 = shl i64 %vr4528, 24

	; bop vr4519 + vr4533
	%vr4534 = add i64 %vr4519, %vr4533

	; bop SYS_OFFSET + 85
	%vr4536 = load double, double* @SYS_OFFSET
	%vr4535 = fadd double %vr4536, 0x4055400000000000

	; conv vr4535 => vr4537
	%vr4538 = call double @llvm.nearbyint.f64(double %vr4535)
	%vr4537 = fptosi double %vr4538 to i64

	; bop vr4537 SHL 3
	%vr4539 = shl i64 %vr4537, 3

	; bop THIS + vr4539
	%vr4541 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4542 = inttoptr i64 %vr4539 to %MEMORY_T*
	%vr4540 = add %MEMORY_T* %vr4541, %vr4542

	; conv vr4540 => vr4543
	%vr4545 = ptrtoint %MEMORY_T* %vr4540 to i64
	%vr4546 = inttoptr i64 %vr4545 to double*
	%vr4547 = load double, double* %vr4546
	%vr4544 = call double @llvm.nearbyint.f64(double %vr4547)
	%vr4543 = fptosi double %vr4544 to i64

	; bop vr4543 SHL 16
	%vr4548 = shl i64 %vr4543, 16

	; bop vr4534 + vr4548
	%vr4549 = add i64 %vr4534, %vr4548

	; bop SYS_OFFSET + 86
	%vr4551 = load double, double* @SYS_OFFSET
	%vr4550 = fadd double %vr4551, 0x4055800000000000

	; conv vr4550 => vr4552
	%vr4553 = call double @llvm.nearbyint.f64(double %vr4550)
	%vr4552 = fptosi double %vr4553 to i64

	; bop vr4552 SHL 3
	%vr4554 = shl i64 %vr4552, 3

	; bop THIS + vr4554
	%vr4556 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4557 = inttoptr i64 %vr4554 to %MEMORY_T*
	%vr4555 = add %MEMORY_T* %vr4556, %vr4557

	; conv vr4555 => vr4558
	%vr4560 = ptrtoint %MEMORY_T* %vr4555 to i64
	%vr4561 = inttoptr i64 %vr4560 to double*
	%vr4562 = load double, double* %vr4561
	%vr4559 = call double @llvm.nearbyint.f64(double %vr4562)
	%vr4558 = fptosi double %vr4559 to i64

	; bop vr4558 SHL 8
	%vr4563 = shl i64 %vr4558, 8

	; bop vr4549 + vr4563
	%vr4564 = add i64 %vr4549, %vr4563

	; conv vr4564 => vr4565
	%vr4565 = sitofp i64 %vr4564 to double

	; bop SYS_OFFSET + 87
	%vr4567 = load double, double* @SYS_OFFSET
	%vr4566 = fadd double %vr4567, 0x4055C00000000000

	; conv vr4566 => vr4568
	%vr4569 = call double @llvm.nearbyint.f64(double %vr4566)
	%vr4568 = fptosi double %vr4569 to i64

	; bop vr4568 SHL 3
	%vr4570 = shl i64 %vr4568, 3

	; bop THIS + vr4570
	%vr4572 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4573 = inttoptr i64 %vr4570 to %MEMORY_T*
	%vr4571 = add %MEMORY_T* %vr4572, %vr4573

	; bop vr4565 + vr4571
	%vr4575 = ptrtoint %MEMORY_T* %vr4571 to i64
	%vr4576 = inttoptr i64 %vr4575 to double*
	%vr4577 = load double, double* %vr4576
	%vr4574 = fadd double %vr4565, %vr4577

	; bop SYS_OFFSET + 215
	%vr4579 = load double, double* @SYS_OFFSET
	%vr4578 = fadd double %vr4579, 0x406AE00000000000

	; conv vr4578 => vr4580
	%vr4581 = call double @llvm.nearbyint.f64(double %vr4578)
	%vr4580 = fptosi double %vr4581 to i64

	; bop vr4580 SHL 3
	%vr4582 = shl i64 %vr4580, 3

	; bop THIS + vr4582
	%vr4584 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4585 = inttoptr i64 %vr4582 to %MEMORY_T*
	%vr4583 = add %MEMORY_T* %vr4584, %vr4585

	; store vr4583 := vr4574
	%vr4586 = ptrtoint %MEMORY_T* %vr4583 to i64
	%vr4587 = inttoptr i64 %vr4586 to double*
	store double %vr4574, double* %vr4587

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10CC:

	; label .Lt_05E8
	br label %.Lt_05E8
.Lt_05E8:

	; conv ADR => vr4589
	%vr4590 = load i64, i64* %ADR.110
	%vr4589 = uitofp i64 %vr4590 to double

	; bop SYS_OFFSET + 88
	%vr4592 = load double, double* @SYS_OFFSET
	%vr4591 = fadd double %vr4592, 0x4056000000000000

	; branchbop vr4589 <> vr4591
	%vr4593 = icmp ne double %vr4589, %vr4591
	br i1 %vr4593, label %.Lt_05EA, label %.Lt_10CD
.Lt_10CD:

	; label .Lt_05EB
	br label %.Lt_05EB
.Lt_05EB:

	; bop SYS_OFFSET + 89
	%vr4595 = load double, double* @SYS_OFFSET
	%vr4594 = fadd double %vr4595, 0x4056400000000000

	; conv vr4594 => vr4596
	%vr4597 = call double @llvm.nearbyint.f64(double %vr4594)
	%vr4596 = fptosi double %vr4597 to i64

	; bop vr4596 SHL 3
	%vr4598 = shl i64 %vr4596, 3

	; bop THIS + vr4598
	%vr4600 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4601 = inttoptr i64 %vr4598 to %MEMORY_T*
	%vr4599 = add %MEMORY_T* %vr4600, %vr4601

	; conv vr4599 => vr4602
	%vr4604 = ptrtoint %MEMORY_T* %vr4599 to i64
	%vr4605 = inttoptr i64 %vr4604 to double*
	%vr4606 = load double, double* %vr4605
	%vr4603 = call double @llvm.nearbyint.f64(double %vr4606)
	%vr4602 = fptosi double %vr4603 to i64

	; bop vr4602 SHL 32
	%vr4607 = shl i64 %vr4602, 32

	; bop SYS_OFFSET + 90
	%vr4609 = load double, double* @SYS_OFFSET
	%vr4608 = fadd double %vr4609, 0x4056800000000000

	; conv vr4608 => vr4610
	%vr4611 = call double @llvm.nearbyint.f64(double %vr4608)
	%vr4610 = fptosi double %vr4611 to i64

	; bop vr4610 SHL 3
	%vr4612 = shl i64 %vr4610, 3

	; bop THIS + vr4612
	%vr4614 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4615 = inttoptr i64 %vr4612 to %MEMORY_T*
	%vr4613 = add %MEMORY_T* %vr4614, %vr4615

	; conv vr4613 => vr4616
	%vr4618 = ptrtoint %MEMORY_T* %vr4613 to i64
	%vr4619 = inttoptr i64 %vr4618 to double*
	%vr4620 = load double, double* %vr4619
	%vr4617 = call double @llvm.nearbyint.f64(double %vr4620)
	%vr4616 = fptosi double %vr4617 to i64

	; bop vr4616 SHL 24
	%vr4621 = shl i64 %vr4616, 24

	; bop vr4607 + vr4621
	%vr4622 = add i64 %vr4607, %vr4621

	; bop SYS_OFFSET + 91
	%vr4624 = load double, double* @SYS_OFFSET
	%vr4623 = fadd double %vr4624, 0x4056C00000000000

	; conv vr4623 => vr4625
	%vr4626 = call double @llvm.nearbyint.f64(double %vr4623)
	%vr4625 = fptosi double %vr4626 to i64

	; bop vr4625 SHL 3
	%vr4627 = shl i64 %vr4625, 3

	; bop THIS + vr4627
	%vr4629 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4630 = inttoptr i64 %vr4627 to %MEMORY_T*
	%vr4628 = add %MEMORY_T* %vr4629, %vr4630

	; conv vr4628 => vr4631
	%vr4633 = ptrtoint %MEMORY_T* %vr4628 to i64
	%vr4634 = inttoptr i64 %vr4633 to double*
	%vr4635 = load double, double* %vr4634
	%vr4632 = call double @llvm.nearbyint.f64(double %vr4635)
	%vr4631 = fptosi double %vr4632 to i64

	; bop vr4631 SHL 16
	%vr4636 = shl i64 %vr4631, 16

	; bop vr4622 + vr4636
	%vr4637 = add i64 %vr4622, %vr4636

	; bop SYS_OFFSET + 92
	%vr4639 = load double, double* @SYS_OFFSET
	%vr4638 = fadd double %vr4639, 0x4057000000000000

	; conv vr4638 => vr4640
	%vr4641 = call double @llvm.nearbyint.f64(double %vr4638)
	%vr4640 = fptosi double %vr4641 to i64

	; bop vr4640 SHL 3
	%vr4642 = shl i64 %vr4640, 3

	; bop THIS + vr4642
	%vr4644 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4645 = inttoptr i64 %vr4642 to %MEMORY_T*
	%vr4643 = add %MEMORY_T* %vr4644, %vr4645

	; conv vr4643 => vr4646
	%vr4648 = ptrtoint %MEMORY_T* %vr4643 to i64
	%vr4649 = inttoptr i64 %vr4648 to double*
	%vr4650 = load double, double* %vr4649
	%vr4647 = call double @llvm.nearbyint.f64(double %vr4650)
	%vr4646 = fptosi double %vr4647 to i64

	; bop vr4646 SHL 8
	%vr4651 = shl i64 %vr4646, 8

	; bop vr4637 + vr4651
	%vr4652 = add i64 %vr4637, %vr4651

	; conv vr4652 => vr4653
	%vr4653 = sitofp i64 %vr4652 to double

	; bop SYS_OFFSET + 93
	%vr4655 = load double, double* @SYS_OFFSET
	%vr4654 = fadd double %vr4655, 0x4057400000000000

	; conv vr4654 => vr4656
	%vr4657 = call double @llvm.nearbyint.f64(double %vr4654)
	%vr4656 = fptosi double %vr4657 to i64

	; bop vr4656 SHL 3
	%vr4658 = shl i64 %vr4656, 3

	; bop THIS + vr4658
	%vr4660 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4661 = inttoptr i64 %vr4658 to %MEMORY_T*
	%vr4659 = add %MEMORY_T* %vr4660, %vr4661

	; bop vr4653 + vr4659
	%vr4663 = ptrtoint %MEMORY_T* %vr4659 to i64
	%vr4664 = inttoptr i64 %vr4663 to double*
	%vr4665 = load double, double* %vr4664
	%vr4662 = fadd double %vr4653, %vr4665

	; bop SYS_OFFSET + 216
	%vr4667 = load double, double* @SYS_OFFSET
	%vr4666 = fadd double %vr4667, 0x406B000000000000

	; conv vr4666 => vr4668
	%vr4669 = call double @llvm.nearbyint.f64(double %vr4666)
	%vr4668 = fptosi double %vr4669 to i64

	; bop vr4668 SHL 3
	%vr4670 = shl i64 %vr4668, 3

	; bop THIS + vr4670
	%vr4672 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4673 = inttoptr i64 %vr4670 to %MEMORY_T*
	%vr4671 = add %MEMORY_T* %vr4672, %vr4673

	; store vr4671 := vr4662
	%vr4674 = ptrtoint %MEMORY_T* %vr4671 to i64
	%vr4675 = inttoptr i64 %vr4674 to double*
	store double %vr4662, double* %vr4675

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10CE:

	; label .Lt_05EA
	br label %.Lt_05EA
.Lt_05EA:

	; conv ADR => vr4677
	%vr4678 = load i64, i64* %ADR.110
	%vr4677 = uitofp i64 %vr4678 to double

	; bop SYS_OFFSET + 94
	%vr4680 = load double, double* @SYS_OFFSET
	%vr4679 = fadd double %vr4680, 0x4057800000000000

	; branchbop vr4677 <> vr4679
	%vr4681 = icmp ne double %vr4677, %vr4679
	br i1 %vr4681, label %.Lt_05EC, label %.Lt_10CF
.Lt_10CF:

	; label .Lt_05ED
	br label %.Lt_05ED
.Lt_05ED:

	; bop SYS_OFFSET + 95
	%vr4683 = load double, double* @SYS_OFFSET
	%vr4682 = fadd double %vr4683, 0x4057C00000000000

	; conv vr4682 => vr4684
	%vr4685 = call double @llvm.nearbyint.f64(double %vr4682)
	%vr4684 = fptosi double %vr4685 to i64

	; bop vr4684 SHL 3
	%vr4686 = shl i64 %vr4684, 3

	; bop THIS + vr4686
	%vr4688 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4689 = inttoptr i64 %vr4686 to %MEMORY_T*
	%vr4687 = add %MEMORY_T* %vr4688, %vr4689

	; conv vr4687 => vr4690
	%vr4692 = ptrtoint %MEMORY_T* %vr4687 to i64
	%vr4693 = inttoptr i64 %vr4692 to double*
	%vr4694 = load double, double* %vr4693
	%vr4691 = call double @llvm.nearbyint.f64(double %vr4694)
	%vr4690 = fptosi double %vr4691 to i64

	; bop vr4690 SHL 32
	%vr4695 = shl i64 %vr4690, 32

	; bop SYS_OFFSET + 96
	%vr4697 = load double, double* @SYS_OFFSET
	%vr4696 = fadd double %vr4697, 0x4058000000000000

	; conv vr4696 => vr4698
	%vr4699 = call double @llvm.nearbyint.f64(double %vr4696)
	%vr4698 = fptosi double %vr4699 to i64

	; bop vr4698 SHL 3
	%vr4700 = shl i64 %vr4698, 3

	; bop THIS + vr4700
	%vr4702 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4703 = inttoptr i64 %vr4700 to %MEMORY_T*
	%vr4701 = add %MEMORY_T* %vr4702, %vr4703

	; conv vr4701 => vr4704
	%vr4706 = ptrtoint %MEMORY_T* %vr4701 to i64
	%vr4707 = inttoptr i64 %vr4706 to double*
	%vr4708 = load double, double* %vr4707
	%vr4705 = call double @llvm.nearbyint.f64(double %vr4708)
	%vr4704 = fptosi double %vr4705 to i64

	; bop vr4704 SHL 24
	%vr4709 = shl i64 %vr4704, 24

	; bop vr4695 + vr4709
	%vr4710 = add i64 %vr4695, %vr4709

	; bop SYS_OFFSET + 97
	%vr4712 = load double, double* @SYS_OFFSET
	%vr4711 = fadd double %vr4712, 0x4058400000000000

	; conv vr4711 => vr4713
	%vr4714 = call double @llvm.nearbyint.f64(double %vr4711)
	%vr4713 = fptosi double %vr4714 to i64

	; bop vr4713 SHL 3
	%vr4715 = shl i64 %vr4713, 3

	; bop THIS + vr4715
	%vr4717 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4718 = inttoptr i64 %vr4715 to %MEMORY_T*
	%vr4716 = add %MEMORY_T* %vr4717, %vr4718

	; conv vr4716 => vr4719
	%vr4721 = ptrtoint %MEMORY_T* %vr4716 to i64
	%vr4722 = inttoptr i64 %vr4721 to double*
	%vr4723 = load double, double* %vr4722
	%vr4720 = call double @llvm.nearbyint.f64(double %vr4723)
	%vr4719 = fptosi double %vr4720 to i64

	; bop vr4719 SHL 16
	%vr4724 = shl i64 %vr4719, 16

	; bop vr4710 + vr4724
	%vr4725 = add i64 %vr4710, %vr4724

	; bop SYS_OFFSET + 98
	%vr4727 = load double, double* @SYS_OFFSET
	%vr4726 = fadd double %vr4727, 0x4058800000000000

	; conv vr4726 => vr4728
	%vr4729 = call double @llvm.nearbyint.f64(double %vr4726)
	%vr4728 = fptosi double %vr4729 to i64

	; bop vr4728 SHL 3
	%vr4730 = shl i64 %vr4728, 3

	; bop THIS + vr4730
	%vr4732 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4733 = inttoptr i64 %vr4730 to %MEMORY_T*
	%vr4731 = add %MEMORY_T* %vr4732, %vr4733

	; conv vr4731 => vr4734
	%vr4736 = ptrtoint %MEMORY_T* %vr4731 to i64
	%vr4737 = inttoptr i64 %vr4736 to double*
	%vr4738 = load double, double* %vr4737
	%vr4735 = call double @llvm.nearbyint.f64(double %vr4738)
	%vr4734 = fptosi double %vr4735 to i64

	; bop vr4734 SHL 8
	%vr4739 = shl i64 %vr4734, 8

	; bop vr4725 + vr4739
	%vr4740 = add i64 %vr4725, %vr4739

	; conv vr4740 => vr4741
	%vr4741 = sitofp i64 %vr4740 to double

	; bop SYS_OFFSET + 99
	%vr4743 = load double, double* @SYS_OFFSET
	%vr4742 = fadd double %vr4743, 0x4058C00000000000

	; conv vr4742 => vr4744
	%vr4745 = call double @llvm.nearbyint.f64(double %vr4742)
	%vr4744 = fptosi double %vr4745 to i64

	; bop vr4744 SHL 3
	%vr4746 = shl i64 %vr4744, 3

	; bop THIS + vr4746
	%vr4748 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4749 = inttoptr i64 %vr4746 to %MEMORY_T*
	%vr4747 = add %MEMORY_T* %vr4748, %vr4749

	; bop vr4741 + vr4747
	%vr4751 = ptrtoint %MEMORY_T* %vr4747 to i64
	%vr4752 = inttoptr i64 %vr4751 to double*
	%vr4753 = load double, double* %vr4752
	%vr4750 = fadd double %vr4741, %vr4753

	; bop SYS_OFFSET + 217
	%vr4755 = load double, double* @SYS_OFFSET
	%vr4754 = fadd double %vr4755, 0x406B200000000000

	; conv vr4754 => vr4756
	%vr4757 = call double @llvm.nearbyint.f64(double %vr4754)
	%vr4756 = fptosi double %vr4757 to i64

	; bop vr4756 SHL 3
	%vr4758 = shl i64 %vr4756, 3

	; bop THIS + vr4758
	%vr4760 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4761 = inttoptr i64 %vr4758 to %MEMORY_T*
	%vr4759 = add %MEMORY_T* %vr4760, %vr4761

	; store vr4759 := vr4750
	%vr4762 = ptrtoint %MEMORY_T* %vr4759 to i64
	%vr4763 = inttoptr i64 %vr4762 to double*
	store double %vr4750, double* %vr4763

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10D0:

	; label .Lt_05EC
	br label %.Lt_05EC
.Lt_05EC:

	; conv ADR => vr4765
	%vr4766 = load i64, i64* %ADR.110
	%vr4765 = uitofp i64 %vr4766 to double

	; bop SYS_OFFSET + 100
	%vr4768 = load double, double* @SYS_OFFSET
	%vr4767 = fadd double %vr4768, 0x4059000000000000

	; branchbop vr4765 <> vr4767
	%vr4769 = icmp ne double %vr4765, %vr4767
	br i1 %vr4769, label %.Lt_05EE, label %.Lt_10D1
.Lt_10D1:

	; label .Lt_05EF
	br label %.Lt_05EF
.Lt_05EF:

	; bop SYS_OFFSET + 101
	%vr4771 = load double, double* @SYS_OFFSET
	%vr4770 = fadd double %vr4771, 0x4059400000000000

	; conv vr4770 => vr4772
	%vr4773 = call double @llvm.nearbyint.f64(double %vr4770)
	%vr4772 = fptosi double %vr4773 to i64

	; bop vr4772 SHL 3
	%vr4774 = shl i64 %vr4772, 3

	; bop THIS + vr4774
	%vr4776 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4777 = inttoptr i64 %vr4774 to %MEMORY_T*
	%vr4775 = add %MEMORY_T* %vr4776, %vr4777

	; conv vr4775 => vr4778
	%vr4780 = ptrtoint %MEMORY_T* %vr4775 to i64
	%vr4781 = inttoptr i64 %vr4780 to double*
	%vr4782 = load double, double* %vr4781
	%vr4779 = call double @llvm.nearbyint.f64(double %vr4782)
	%vr4778 = fptosi double %vr4779 to i64

	; bop vr4778 SHL 32
	%vr4783 = shl i64 %vr4778, 32

	; bop SYS_OFFSET + 102
	%vr4785 = load double, double* @SYS_OFFSET
	%vr4784 = fadd double %vr4785, 0x4059800000000000

	; conv vr4784 => vr4786
	%vr4787 = call double @llvm.nearbyint.f64(double %vr4784)
	%vr4786 = fptosi double %vr4787 to i64

	; bop vr4786 SHL 3
	%vr4788 = shl i64 %vr4786, 3

	; bop THIS + vr4788
	%vr4790 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4791 = inttoptr i64 %vr4788 to %MEMORY_T*
	%vr4789 = add %MEMORY_T* %vr4790, %vr4791

	; conv vr4789 => vr4792
	%vr4794 = ptrtoint %MEMORY_T* %vr4789 to i64
	%vr4795 = inttoptr i64 %vr4794 to double*
	%vr4796 = load double, double* %vr4795
	%vr4793 = call double @llvm.nearbyint.f64(double %vr4796)
	%vr4792 = fptosi double %vr4793 to i64

	; bop vr4792 SHL 24
	%vr4797 = shl i64 %vr4792, 24

	; bop vr4783 + vr4797
	%vr4798 = add i64 %vr4783, %vr4797

	; bop SYS_OFFSET + 103
	%vr4800 = load double, double* @SYS_OFFSET
	%vr4799 = fadd double %vr4800, 0x4059C00000000000

	; conv vr4799 => vr4801
	%vr4802 = call double @llvm.nearbyint.f64(double %vr4799)
	%vr4801 = fptosi double %vr4802 to i64

	; bop vr4801 SHL 3
	%vr4803 = shl i64 %vr4801, 3

	; bop THIS + vr4803
	%vr4805 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4806 = inttoptr i64 %vr4803 to %MEMORY_T*
	%vr4804 = add %MEMORY_T* %vr4805, %vr4806

	; conv vr4804 => vr4807
	%vr4809 = ptrtoint %MEMORY_T* %vr4804 to i64
	%vr4810 = inttoptr i64 %vr4809 to double*
	%vr4811 = load double, double* %vr4810
	%vr4808 = call double @llvm.nearbyint.f64(double %vr4811)
	%vr4807 = fptosi double %vr4808 to i64

	; bop vr4807 SHL 16
	%vr4812 = shl i64 %vr4807, 16

	; bop vr4798 + vr4812
	%vr4813 = add i64 %vr4798, %vr4812

	; bop SYS_OFFSET + 104
	%vr4815 = load double, double* @SYS_OFFSET
	%vr4814 = fadd double %vr4815, 0x405A000000000000

	; conv vr4814 => vr4816
	%vr4817 = call double @llvm.nearbyint.f64(double %vr4814)
	%vr4816 = fptosi double %vr4817 to i64

	; bop vr4816 SHL 3
	%vr4818 = shl i64 %vr4816, 3

	; bop THIS + vr4818
	%vr4820 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4821 = inttoptr i64 %vr4818 to %MEMORY_T*
	%vr4819 = add %MEMORY_T* %vr4820, %vr4821

	; conv vr4819 => vr4822
	%vr4824 = ptrtoint %MEMORY_T* %vr4819 to i64
	%vr4825 = inttoptr i64 %vr4824 to double*
	%vr4826 = load double, double* %vr4825
	%vr4823 = call double @llvm.nearbyint.f64(double %vr4826)
	%vr4822 = fptosi double %vr4823 to i64

	; bop vr4822 SHL 8
	%vr4827 = shl i64 %vr4822, 8

	; bop vr4813 + vr4827
	%vr4828 = add i64 %vr4813, %vr4827

	; conv vr4828 => vr4829
	%vr4829 = sitofp i64 %vr4828 to double

	; bop SYS_OFFSET + 105
	%vr4831 = load double, double* @SYS_OFFSET
	%vr4830 = fadd double %vr4831, 0x405A400000000000

	; conv vr4830 => vr4832
	%vr4833 = call double @llvm.nearbyint.f64(double %vr4830)
	%vr4832 = fptosi double %vr4833 to i64

	; bop vr4832 SHL 3
	%vr4834 = shl i64 %vr4832, 3

	; bop THIS + vr4834
	%vr4836 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4837 = inttoptr i64 %vr4834 to %MEMORY_T*
	%vr4835 = add %MEMORY_T* %vr4836, %vr4837

	; bop vr4829 + vr4835
	%vr4839 = ptrtoint %MEMORY_T* %vr4835 to i64
	%vr4840 = inttoptr i64 %vr4839 to double*
	%vr4841 = load double, double* %vr4840
	%vr4838 = fadd double %vr4829, %vr4841

	; bop SYS_OFFSET + 218
	%vr4843 = load double, double* @SYS_OFFSET
	%vr4842 = fadd double %vr4843, 0x406B400000000000

	; conv vr4842 => vr4844
	%vr4845 = call double @llvm.nearbyint.f64(double %vr4842)
	%vr4844 = fptosi double %vr4845 to i64

	; bop vr4844 SHL 3
	%vr4846 = shl i64 %vr4844, 3

	; bop THIS + vr4846
	%vr4848 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4849 = inttoptr i64 %vr4846 to %MEMORY_T*
	%vr4847 = add %MEMORY_T* %vr4848, %vr4849

	; store vr4847 := vr4838
	%vr4850 = ptrtoint %MEMORY_T* %vr4847 to i64
	%vr4851 = inttoptr i64 %vr4850 to double*
	store double %vr4838, double* %vr4851

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10D2:

	; label .Lt_05EE
	br label %.Lt_05EE
.Lt_05EE:

	; conv ADR => vr4853
	%vr4854 = load i64, i64* %ADR.110
	%vr4853 = uitofp i64 %vr4854 to double

	; bop SYS_OFFSET + 106
	%vr4856 = load double, double* @SYS_OFFSET
	%vr4855 = fadd double %vr4856, 0x405A800000000000

	; branchbop vr4853 <> vr4855
	%vr4857 = icmp ne double %vr4853, %vr4855
	br i1 %vr4857, label %.Lt_05F0, label %.Lt_10D3
.Lt_10D3:

	; label .Lt_05F1
	br label %.Lt_05F1
.Lt_05F1:

	; bop SYS_OFFSET + 107
	%vr4859 = load double, double* @SYS_OFFSET
	%vr4858 = fadd double %vr4859, 0x405AC00000000000

	; conv vr4858 => vr4860
	%vr4861 = call double @llvm.nearbyint.f64(double %vr4858)
	%vr4860 = fptosi double %vr4861 to i64

	; bop vr4860 SHL 3
	%vr4862 = shl i64 %vr4860, 3

	; bop THIS + vr4862
	%vr4864 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4865 = inttoptr i64 %vr4862 to %MEMORY_T*
	%vr4863 = add %MEMORY_T* %vr4864, %vr4865

	; conv vr4863 => vr4866
	%vr4868 = ptrtoint %MEMORY_T* %vr4863 to i64
	%vr4869 = inttoptr i64 %vr4868 to double*
	%vr4870 = load double, double* %vr4869
	%vr4867 = call double @llvm.nearbyint.f64(double %vr4870)
	%vr4866 = fptosi double %vr4867 to i64

	; bop vr4866 SHL 32
	%vr4871 = shl i64 %vr4866, 32

	; bop SYS_OFFSET + 108
	%vr4873 = load double, double* @SYS_OFFSET
	%vr4872 = fadd double %vr4873, 0x405B000000000000

	; conv vr4872 => vr4874
	%vr4875 = call double @llvm.nearbyint.f64(double %vr4872)
	%vr4874 = fptosi double %vr4875 to i64

	; bop vr4874 SHL 3
	%vr4876 = shl i64 %vr4874, 3

	; bop THIS + vr4876
	%vr4878 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4879 = inttoptr i64 %vr4876 to %MEMORY_T*
	%vr4877 = add %MEMORY_T* %vr4878, %vr4879

	; conv vr4877 => vr4880
	%vr4882 = ptrtoint %MEMORY_T* %vr4877 to i64
	%vr4883 = inttoptr i64 %vr4882 to double*
	%vr4884 = load double, double* %vr4883
	%vr4881 = call double @llvm.nearbyint.f64(double %vr4884)
	%vr4880 = fptosi double %vr4881 to i64

	; bop vr4880 SHL 24
	%vr4885 = shl i64 %vr4880, 24

	; bop vr4871 + vr4885
	%vr4886 = add i64 %vr4871, %vr4885

	; bop SYS_OFFSET + 109
	%vr4888 = load double, double* @SYS_OFFSET
	%vr4887 = fadd double %vr4888, 0x405B400000000000

	; conv vr4887 => vr4889
	%vr4890 = call double @llvm.nearbyint.f64(double %vr4887)
	%vr4889 = fptosi double %vr4890 to i64

	; bop vr4889 SHL 3
	%vr4891 = shl i64 %vr4889, 3

	; bop THIS + vr4891
	%vr4893 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4894 = inttoptr i64 %vr4891 to %MEMORY_T*
	%vr4892 = add %MEMORY_T* %vr4893, %vr4894

	; conv vr4892 => vr4895
	%vr4897 = ptrtoint %MEMORY_T* %vr4892 to i64
	%vr4898 = inttoptr i64 %vr4897 to double*
	%vr4899 = load double, double* %vr4898
	%vr4896 = call double @llvm.nearbyint.f64(double %vr4899)
	%vr4895 = fptosi double %vr4896 to i64

	; bop vr4895 SHL 16
	%vr4900 = shl i64 %vr4895, 16

	; bop vr4886 + vr4900
	%vr4901 = add i64 %vr4886, %vr4900

	; bop SYS_OFFSET + 110
	%vr4903 = load double, double* @SYS_OFFSET
	%vr4902 = fadd double %vr4903, 0x405B800000000000

	; conv vr4902 => vr4904
	%vr4905 = call double @llvm.nearbyint.f64(double %vr4902)
	%vr4904 = fptosi double %vr4905 to i64

	; bop vr4904 SHL 3
	%vr4906 = shl i64 %vr4904, 3

	; bop THIS + vr4906
	%vr4908 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4909 = inttoptr i64 %vr4906 to %MEMORY_T*
	%vr4907 = add %MEMORY_T* %vr4908, %vr4909

	; conv vr4907 => vr4910
	%vr4912 = ptrtoint %MEMORY_T* %vr4907 to i64
	%vr4913 = inttoptr i64 %vr4912 to double*
	%vr4914 = load double, double* %vr4913
	%vr4911 = call double @llvm.nearbyint.f64(double %vr4914)
	%vr4910 = fptosi double %vr4911 to i64

	; bop vr4910 SHL 8
	%vr4915 = shl i64 %vr4910, 8

	; bop vr4901 + vr4915
	%vr4916 = add i64 %vr4901, %vr4915

	; conv vr4916 => vr4917
	%vr4917 = sitofp i64 %vr4916 to double

	; bop SYS_OFFSET + 111
	%vr4919 = load double, double* @SYS_OFFSET
	%vr4918 = fadd double %vr4919, 0x405BC00000000000

	; conv vr4918 => vr4920
	%vr4921 = call double @llvm.nearbyint.f64(double %vr4918)
	%vr4920 = fptosi double %vr4921 to i64

	; bop vr4920 SHL 3
	%vr4922 = shl i64 %vr4920, 3

	; bop THIS + vr4922
	%vr4924 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4925 = inttoptr i64 %vr4922 to %MEMORY_T*
	%vr4923 = add %MEMORY_T* %vr4924, %vr4925

	; bop vr4917 + vr4923
	%vr4927 = ptrtoint %MEMORY_T* %vr4923 to i64
	%vr4928 = inttoptr i64 %vr4927 to double*
	%vr4929 = load double, double* %vr4928
	%vr4926 = fadd double %vr4917, %vr4929

	; bop SYS_OFFSET + 219
	%vr4931 = load double, double* @SYS_OFFSET
	%vr4930 = fadd double %vr4931, 0x406B600000000000

	; conv vr4930 => vr4932
	%vr4933 = call double @llvm.nearbyint.f64(double %vr4930)
	%vr4932 = fptosi double %vr4933 to i64

	; bop vr4932 SHL 3
	%vr4934 = shl i64 %vr4932, 3

	; bop THIS + vr4934
	%vr4936 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4937 = inttoptr i64 %vr4934 to %MEMORY_T*
	%vr4935 = add %MEMORY_T* %vr4936, %vr4937

	; store vr4935 := vr4926
	%vr4938 = ptrtoint %MEMORY_T* %vr4935 to i64
	%vr4939 = inttoptr i64 %vr4938 to double*
	store double %vr4926, double* %vr4939

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10D4:

	; label .Lt_05F0
	br label %.Lt_05F0
.Lt_05F0:

	; conv ADR => vr4941
	%vr4942 = load i64, i64* %ADR.110
	%vr4941 = uitofp i64 %vr4942 to double

	; bop SYS_OFFSET + 112
	%vr4944 = load double, double* @SYS_OFFSET
	%vr4943 = fadd double %vr4944, 0x405C000000000000

	; branchbop vr4941 <> vr4943
	%vr4945 = icmp ne double %vr4941, %vr4943
	br i1 %vr4945, label %.Lt_05F2, label %.Lt_10D5
.Lt_10D5:

	; label .Lt_05F3
	br label %.Lt_05F3
.Lt_05F3:

	; bop SYS_OFFSET + 113
	%vr4947 = load double, double* @SYS_OFFSET
	%vr4946 = fadd double %vr4947, 0x405C400000000000

	; conv vr4946 => vr4948
	%vr4949 = call double @llvm.nearbyint.f64(double %vr4946)
	%vr4948 = fptosi double %vr4949 to i64

	; bop vr4948 SHL 3
	%vr4950 = shl i64 %vr4948, 3

	; bop THIS + vr4950
	%vr4952 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4953 = inttoptr i64 %vr4950 to %MEMORY_T*
	%vr4951 = add %MEMORY_T* %vr4952, %vr4953

	; conv vr4951 => vr4954
	%vr4956 = ptrtoint %MEMORY_T* %vr4951 to i64
	%vr4957 = inttoptr i64 %vr4956 to double*
	%vr4958 = load double, double* %vr4957
	%vr4955 = call double @llvm.nearbyint.f64(double %vr4958)
	%vr4954 = fptosi double %vr4955 to i64

	; bop vr4954 SHL 32
	%vr4959 = shl i64 %vr4954, 32

	; bop SYS_OFFSET + 114
	%vr4961 = load double, double* @SYS_OFFSET
	%vr4960 = fadd double %vr4961, 0x405C800000000000

	; conv vr4960 => vr4962
	%vr4963 = call double @llvm.nearbyint.f64(double %vr4960)
	%vr4962 = fptosi double %vr4963 to i64

	; bop vr4962 SHL 3
	%vr4964 = shl i64 %vr4962, 3

	; bop THIS + vr4964
	%vr4966 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4967 = inttoptr i64 %vr4964 to %MEMORY_T*
	%vr4965 = add %MEMORY_T* %vr4966, %vr4967

	; conv vr4965 => vr4968
	%vr4970 = ptrtoint %MEMORY_T* %vr4965 to i64
	%vr4971 = inttoptr i64 %vr4970 to double*
	%vr4972 = load double, double* %vr4971
	%vr4969 = call double @llvm.nearbyint.f64(double %vr4972)
	%vr4968 = fptosi double %vr4969 to i64

	; bop vr4968 SHL 24
	%vr4973 = shl i64 %vr4968, 24

	; bop vr4959 + vr4973
	%vr4974 = add i64 %vr4959, %vr4973

	; bop SYS_OFFSET + 115
	%vr4976 = load double, double* @SYS_OFFSET
	%vr4975 = fadd double %vr4976, 0x405CC00000000000

	; conv vr4975 => vr4977
	%vr4978 = call double @llvm.nearbyint.f64(double %vr4975)
	%vr4977 = fptosi double %vr4978 to i64

	; bop vr4977 SHL 3
	%vr4979 = shl i64 %vr4977, 3

	; bop THIS + vr4979
	%vr4981 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4982 = inttoptr i64 %vr4979 to %MEMORY_T*
	%vr4980 = add %MEMORY_T* %vr4981, %vr4982

	; conv vr4980 => vr4983
	%vr4985 = ptrtoint %MEMORY_T* %vr4980 to i64
	%vr4986 = inttoptr i64 %vr4985 to double*
	%vr4987 = load double, double* %vr4986
	%vr4984 = call double @llvm.nearbyint.f64(double %vr4987)
	%vr4983 = fptosi double %vr4984 to i64

	; bop vr4983 SHL 16
	%vr4988 = shl i64 %vr4983, 16

	; bop vr4974 + vr4988
	%vr4989 = add i64 %vr4974, %vr4988

	; bop SYS_OFFSET + 116
	%vr4991 = load double, double* @SYS_OFFSET
	%vr4990 = fadd double %vr4991, 0x405D000000000000

	; conv vr4990 => vr4992
	%vr4993 = call double @llvm.nearbyint.f64(double %vr4990)
	%vr4992 = fptosi double %vr4993 to i64

	; bop vr4992 SHL 3
	%vr4994 = shl i64 %vr4992, 3

	; bop THIS + vr4994
	%vr4996 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr4997 = inttoptr i64 %vr4994 to %MEMORY_T*
	%vr4995 = add %MEMORY_T* %vr4996, %vr4997

	; conv vr4995 => vr4998
	%vr5000 = ptrtoint %MEMORY_T* %vr4995 to i64
	%vr5001 = inttoptr i64 %vr5000 to double*
	%vr5002 = load double, double* %vr5001
	%vr4999 = call double @llvm.nearbyint.f64(double %vr5002)
	%vr4998 = fptosi double %vr4999 to i64

	; bop vr4998 SHL 8
	%vr5003 = shl i64 %vr4998, 8

	; bop vr4989 + vr5003
	%vr5004 = add i64 %vr4989, %vr5003

	; conv vr5004 => vr5005
	%vr5005 = sitofp i64 %vr5004 to double

	; bop SYS_OFFSET + 117
	%vr5007 = load double, double* @SYS_OFFSET
	%vr5006 = fadd double %vr5007, 0x405D400000000000

	; conv vr5006 => vr5008
	%vr5009 = call double @llvm.nearbyint.f64(double %vr5006)
	%vr5008 = fptosi double %vr5009 to i64

	; bop vr5008 SHL 3
	%vr5010 = shl i64 %vr5008, 3

	; bop THIS + vr5010
	%vr5012 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5013 = inttoptr i64 %vr5010 to %MEMORY_T*
	%vr5011 = add %MEMORY_T* %vr5012, %vr5013

	; bop vr5005 + vr5011
	%vr5015 = ptrtoint %MEMORY_T* %vr5011 to i64
	%vr5016 = inttoptr i64 %vr5015 to double*
	%vr5017 = load double, double* %vr5016
	%vr5014 = fadd double %vr5005, %vr5017

	; bop SYS_OFFSET + 220
	%vr5019 = load double, double* @SYS_OFFSET
	%vr5018 = fadd double %vr5019, 0x406B800000000000

	; conv vr5018 => vr5020
	%vr5021 = call double @llvm.nearbyint.f64(double %vr5018)
	%vr5020 = fptosi double %vr5021 to i64

	; bop vr5020 SHL 3
	%vr5022 = shl i64 %vr5020, 3

	; bop THIS + vr5022
	%vr5024 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5025 = inttoptr i64 %vr5022 to %MEMORY_T*
	%vr5023 = add %MEMORY_T* %vr5024, %vr5025

	; store vr5023 := vr5014
	%vr5026 = ptrtoint %MEMORY_T* %vr5023 to i64
	%vr5027 = inttoptr i64 %vr5026 to double*
	store double %vr5014, double* %vr5027

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10D6:

	; label .Lt_05F2
	br label %.Lt_05F2
.Lt_05F2:

	; conv ADR => vr5029
	%vr5030 = load i64, i64* %ADR.110
	%vr5029 = uitofp i64 %vr5030 to double

	; bop SYS_OFFSET + 118
	%vr5032 = load double, double* @SYS_OFFSET
	%vr5031 = fadd double %vr5032, 0x405D800000000000

	; branchbop vr5029 <> vr5031
	%vr5033 = icmp ne double %vr5029, %vr5031
	br i1 %vr5033, label %.Lt_05F4, label %.Lt_10D7
.Lt_10D7:

	; label .Lt_05F5
	br label %.Lt_05F5
.Lt_05F5:

	; bop SYS_OFFSET + 119
	%vr5035 = load double, double* @SYS_OFFSET
	%vr5034 = fadd double %vr5035, 0x405DC00000000000

	; conv vr5034 => vr5036
	%vr5037 = call double @llvm.nearbyint.f64(double %vr5034)
	%vr5036 = fptosi double %vr5037 to i64

	; bop vr5036 SHL 3
	%vr5038 = shl i64 %vr5036, 3

	; bop THIS + vr5038
	%vr5040 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5041 = inttoptr i64 %vr5038 to %MEMORY_T*
	%vr5039 = add %MEMORY_T* %vr5040, %vr5041

	; conv vr5039 => vr5042
	%vr5044 = ptrtoint %MEMORY_T* %vr5039 to i64
	%vr5045 = inttoptr i64 %vr5044 to double*
	%vr5046 = load double, double* %vr5045
	%vr5043 = call double @llvm.nearbyint.f64(double %vr5046)
	%vr5042 = fptosi double %vr5043 to i64

	; bop vr5042 SHL 32
	%vr5047 = shl i64 %vr5042, 32

	; bop SYS_OFFSET + 120
	%vr5049 = load double, double* @SYS_OFFSET
	%vr5048 = fadd double %vr5049, 0x405E000000000000

	; conv vr5048 => vr5050
	%vr5051 = call double @llvm.nearbyint.f64(double %vr5048)
	%vr5050 = fptosi double %vr5051 to i64

	; bop vr5050 SHL 3
	%vr5052 = shl i64 %vr5050, 3

	; bop THIS + vr5052
	%vr5054 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5055 = inttoptr i64 %vr5052 to %MEMORY_T*
	%vr5053 = add %MEMORY_T* %vr5054, %vr5055

	; conv vr5053 => vr5056
	%vr5058 = ptrtoint %MEMORY_T* %vr5053 to i64
	%vr5059 = inttoptr i64 %vr5058 to double*
	%vr5060 = load double, double* %vr5059
	%vr5057 = call double @llvm.nearbyint.f64(double %vr5060)
	%vr5056 = fptosi double %vr5057 to i64

	; bop vr5056 SHL 24
	%vr5061 = shl i64 %vr5056, 24

	; bop vr5047 + vr5061
	%vr5062 = add i64 %vr5047, %vr5061

	; bop SYS_OFFSET + 121
	%vr5064 = load double, double* @SYS_OFFSET
	%vr5063 = fadd double %vr5064, 0x405E400000000000

	; conv vr5063 => vr5065
	%vr5066 = call double @llvm.nearbyint.f64(double %vr5063)
	%vr5065 = fptosi double %vr5066 to i64

	; bop vr5065 SHL 3
	%vr5067 = shl i64 %vr5065, 3

	; bop THIS + vr5067
	%vr5069 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5070 = inttoptr i64 %vr5067 to %MEMORY_T*
	%vr5068 = add %MEMORY_T* %vr5069, %vr5070

	; conv vr5068 => vr5071
	%vr5073 = ptrtoint %MEMORY_T* %vr5068 to i64
	%vr5074 = inttoptr i64 %vr5073 to double*
	%vr5075 = load double, double* %vr5074
	%vr5072 = call double @llvm.nearbyint.f64(double %vr5075)
	%vr5071 = fptosi double %vr5072 to i64

	; bop vr5071 SHL 16
	%vr5076 = shl i64 %vr5071, 16

	; bop vr5062 + vr5076
	%vr5077 = add i64 %vr5062, %vr5076

	; bop SYS_OFFSET + 122
	%vr5079 = load double, double* @SYS_OFFSET
	%vr5078 = fadd double %vr5079, 0x405E800000000000

	; conv vr5078 => vr5080
	%vr5081 = call double @llvm.nearbyint.f64(double %vr5078)
	%vr5080 = fptosi double %vr5081 to i64

	; bop vr5080 SHL 3
	%vr5082 = shl i64 %vr5080, 3

	; bop THIS + vr5082
	%vr5084 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5085 = inttoptr i64 %vr5082 to %MEMORY_T*
	%vr5083 = add %MEMORY_T* %vr5084, %vr5085

	; conv vr5083 => vr5086
	%vr5088 = ptrtoint %MEMORY_T* %vr5083 to i64
	%vr5089 = inttoptr i64 %vr5088 to double*
	%vr5090 = load double, double* %vr5089
	%vr5087 = call double @llvm.nearbyint.f64(double %vr5090)
	%vr5086 = fptosi double %vr5087 to i64

	; bop vr5086 SHL 8
	%vr5091 = shl i64 %vr5086, 8

	; bop vr5077 + vr5091
	%vr5092 = add i64 %vr5077, %vr5091

	; conv vr5092 => vr5093
	%vr5093 = sitofp i64 %vr5092 to double

	; bop SYS_OFFSET + 123
	%vr5095 = load double, double* @SYS_OFFSET
	%vr5094 = fadd double %vr5095, 0x405EC00000000000

	; conv vr5094 => vr5096
	%vr5097 = call double @llvm.nearbyint.f64(double %vr5094)
	%vr5096 = fptosi double %vr5097 to i64

	; bop vr5096 SHL 3
	%vr5098 = shl i64 %vr5096, 3

	; bop THIS + vr5098
	%vr5100 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5101 = inttoptr i64 %vr5098 to %MEMORY_T*
	%vr5099 = add %MEMORY_T* %vr5100, %vr5101

	; bop vr5093 + vr5099
	%vr5103 = ptrtoint %MEMORY_T* %vr5099 to i64
	%vr5104 = inttoptr i64 %vr5103 to double*
	%vr5105 = load double, double* %vr5104
	%vr5102 = fadd double %vr5093, %vr5105

	; bop SYS_OFFSET + 221
	%vr5107 = load double, double* @SYS_OFFSET
	%vr5106 = fadd double %vr5107, 0x406BA00000000000

	; conv vr5106 => vr5108
	%vr5109 = call double @llvm.nearbyint.f64(double %vr5106)
	%vr5108 = fptosi double %vr5109 to i64

	; bop vr5108 SHL 3
	%vr5110 = shl i64 %vr5108, 3

	; bop THIS + vr5110
	%vr5112 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5113 = inttoptr i64 %vr5110 to %MEMORY_T*
	%vr5111 = add %MEMORY_T* %vr5112, %vr5113

	; store vr5111 := vr5102
	%vr5114 = ptrtoint %MEMORY_T* %vr5111 to i64
	%vr5115 = inttoptr i64 %vr5114 to double*
	store double %vr5102, double* %vr5115

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10D8:

	; label .Lt_05F4
	br label %.Lt_05F4
.Lt_05F4:

	; conv ADR => vr5117
	%vr5118 = load i64, i64* %ADR.110
	%vr5117 = uitofp i64 %vr5118 to double

	; bop SYS_OFFSET + 124
	%vr5120 = load double, double* @SYS_OFFSET
	%vr5119 = fadd double %vr5120, 0x405F000000000000

	; branchbop vr5117 <> vr5119
	%vr5121 = icmp ne double %vr5117, %vr5119
	br i1 %vr5121, label %.Lt_05F6, label %.Lt_10D9
.Lt_10D9:

	; label .Lt_05F7
	br label %.Lt_05F7
.Lt_05F7:

	; bop SYS_OFFSET + 125
	%vr5123 = load double, double* @SYS_OFFSET
	%vr5122 = fadd double %vr5123, 0x405F400000000000

	; conv vr5122 => vr5124
	%vr5125 = call double @llvm.nearbyint.f64(double %vr5122)
	%vr5124 = fptosi double %vr5125 to i64

	; bop vr5124 SHL 3
	%vr5126 = shl i64 %vr5124, 3

	; bop THIS + vr5126
	%vr5128 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5129 = inttoptr i64 %vr5126 to %MEMORY_T*
	%vr5127 = add %MEMORY_T* %vr5128, %vr5129

	; conv vr5127 => vr5130
	%vr5132 = ptrtoint %MEMORY_T* %vr5127 to i64
	%vr5133 = inttoptr i64 %vr5132 to double*
	%vr5134 = load double, double* %vr5133
	%vr5131 = call double @llvm.nearbyint.f64(double %vr5134)
	%vr5130 = fptosi double %vr5131 to i64

	; bop vr5130 SHL 32
	%vr5135 = shl i64 %vr5130, 32

	; bop SYS_OFFSET + 126
	%vr5137 = load double, double* @SYS_OFFSET
	%vr5136 = fadd double %vr5137, 0x405F800000000000

	; conv vr5136 => vr5138
	%vr5139 = call double @llvm.nearbyint.f64(double %vr5136)
	%vr5138 = fptosi double %vr5139 to i64

	; bop vr5138 SHL 3
	%vr5140 = shl i64 %vr5138, 3

	; bop THIS + vr5140
	%vr5142 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5143 = inttoptr i64 %vr5140 to %MEMORY_T*
	%vr5141 = add %MEMORY_T* %vr5142, %vr5143

	; conv vr5141 => vr5144
	%vr5146 = ptrtoint %MEMORY_T* %vr5141 to i64
	%vr5147 = inttoptr i64 %vr5146 to double*
	%vr5148 = load double, double* %vr5147
	%vr5145 = call double @llvm.nearbyint.f64(double %vr5148)
	%vr5144 = fptosi double %vr5145 to i64

	; bop vr5144 SHL 24
	%vr5149 = shl i64 %vr5144, 24

	; bop vr5135 + vr5149
	%vr5150 = add i64 %vr5135, %vr5149

	; bop SYS_OFFSET + 127
	%vr5152 = load double, double* @SYS_OFFSET
	%vr5151 = fadd double %vr5152, 0x405FC00000000000

	; conv vr5151 => vr5153
	%vr5154 = call double @llvm.nearbyint.f64(double %vr5151)
	%vr5153 = fptosi double %vr5154 to i64

	; bop vr5153 SHL 3
	%vr5155 = shl i64 %vr5153, 3

	; bop THIS + vr5155
	%vr5157 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5158 = inttoptr i64 %vr5155 to %MEMORY_T*
	%vr5156 = add %MEMORY_T* %vr5157, %vr5158

	; conv vr5156 => vr5159
	%vr5161 = ptrtoint %MEMORY_T* %vr5156 to i64
	%vr5162 = inttoptr i64 %vr5161 to double*
	%vr5163 = load double, double* %vr5162
	%vr5160 = call double @llvm.nearbyint.f64(double %vr5163)
	%vr5159 = fptosi double %vr5160 to i64

	; bop vr5159 SHL 16
	%vr5164 = shl i64 %vr5159, 16

	; bop vr5150 + vr5164
	%vr5165 = add i64 %vr5150, %vr5164

	; bop SYS_OFFSET + 128
	%vr5167 = load double, double* @SYS_OFFSET
	%vr5166 = fadd double %vr5167, 0x4060000000000000

	; conv vr5166 => vr5168
	%vr5169 = call double @llvm.nearbyint.f64(double %vr5166)
	%vr5168 = fptosi double %vr5169 to i64

	; bop vr5168 SHL 3
	%vr5170 = shl i64 %vr5168, 3

	; bop THIS + vr5170
	%vr5172 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5173 = inttoptr i64 %vr5170 to %MEMORY_T*
	%vr5171 = add %MEMORY_T* %vr5172, %vr5173

	; conv vr5171 => vr5174
	%vr5176 = ptrtoint %MEMORY_T* %vr5171 to i64
	%vr5177 = inttoptr i64 %vr5176 to double*
	%vr5178 = load double, double* %vr5177
	%vr5175 = call double @llvm.nearbyint.f64(double %vr5178)
	%vr5174 = fptosi double %vr5175 to i64

	; bop vr5174 SHL 8
	%vr5179 = shl i64 %vr5174, 8

	; bop vr5165 + vr5179
	%vr5180 = add i64 %vr5165, %vr5179

	; conv vr5180 => vr5181
	%vr5181 = sitofp i64 %vr5180 to double

	; bop SYS_OFFSET + 129
	%vr5183 = load double, double* @SYS_OFFSET
	%vr5182 = fadd double %vr5183, 0x4060200000000000

	; conv vr5182 => vr5184
	%vr5185 = call double @llvm.nearbyint.f64(double %vr5182)
	%vr5184 = fptosi double %vr5185 to i64

	; bop vr5184 SHL 3
	%vr5186 = shl i64 %vr5184, 3

	; bop THIS + vr5186
	%vr5188 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5189 = inttoptr i64 %vr5186 to %MEMORY_T*
	%vr5187 = add %MEMORY_T* %vr5188, %vr5189

	; bop vr5181 + vr5187
	%vr5191 = ptrtoint %MEMORY_T* %vr5187 to i64
	%vr5192 = inttoptr i64 %vr5191 to double*
	%vr5193 = load double, double* %vr5192
	%vr5190 = fadd double %vr5181, %vr5193

	; bop SYS_OFFSET + 222
	%vr5195 = load double, double* @SYS_OFFSET
	%vr5194 = fadd double %vr5195, 0x406BC00000000000

	; conv vr5194 => vr5196
	%vr5197 = call double @llvm.nearbyint.f64(double %vr5194)
	%vr5196 = fptosi double %vr5197 to i64

	; bop vr5196 SHL 3
	%vr5198 = shl i64 %vr5196, 3

	; bop THIS + vr5198
	%vr5200 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5201 = inttoptr i64 %vr5198 to %MEMORY_T*
	%vr5199 = add %MEMORY_T* %vr5200, %vr5201

	; store vr5199 := vr5190
	%vr5202 = ptrtoint %MEMORY_T* %vr5199 to i64
	%vr5203 = inttoptr i64 %vr5202 to double*
	store double %vr5190, double* %vr5203

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10DA:

	; label .Lt_05F6
	br label %.Lt_05F6
.Lt_05F6:

	; conv ADR => vr5205
	%vr5206 = load i64, i64* %ADR.110
	%vr5205 = uitofp i64 %vr5206 to double

	; bop SYS_OFFSET + 130
	%vr5208 = load double, double* @SYS_OFFSET
	%vr5207 = fadd double %vr5208, 0x4060400000000000

	; branchbop vr5205 <> vr5207
	%vr5209 = icmp ne double %vr5205, %vr5207
	br i1 %vr5209, label %.Lt_05F8, label %.Lt_10DB
.Lt_10DB:

	; label .Lt_05F9
	br label %.Lt_05F9
.Lt_05F9:

	; bop SYS_OFFSET + 131
	%vr5211 = load double, double* @SYS_OFFSET
	%vr5210 = fadd double %vr5211, 0x4060600000000000

	; conv vr5210 => vr5212
	%vr5213 = call double @llvm.nearbyint.f64(double %vr5210)
	%vr5212 = fptosi double %vr5213 to i64

	; bop vr5212 SHL 3
	%vr5214 = shl i64 %vr5212, 3

	; bop THIS + vr5214
	%vr5216 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5217 = inttoptr i64 %vr5214 to %MEMORY_T*
	%vr5215 = add %MEMORY_T* %vr5216, %vr5217

	; conv vr5215 => vr5218
	%vr5220 = ptrtoint %MEMORY_T* %vr5215 to i64
	%vr5221 = inttoptr i64 %vr5220 to double*
	%vr5222 = load double, double* %vr5221
	%vr5219 = call double @llvm.nearbyint.f64(double %vr5222)
	%vr5218 = fptosi double %vr5219 to i64

	; bop vr5218 SHL 32
	%vr5223 = shl i64 %vr5218, 32

	; bop SYS_OFFSET + 132
	%vr5225 = load double, double* @SYS_OFFSET
	%vr5224 = fadd double %vr5225, 0x4060800000000000

	; conv vr5224 => vr5226
	%vr5227 = call double @llvm.nearbyint.f64(double %vr5224)
	%vr5226 = fptosi double %vr5227 to i64

	; bop vr5226 SHL 3
	%vr5228 = shl i64 %vr5226, 3

	; bop THIS + vr5228
	%vr5230 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5231 = inttoptr i64 %vr5228 to %MEMORY_T*
	%vr5229 = add %MEMORY_T* %vr5230, %vr5231

	; conv vr5229 => vr5232
	%vr5234 = ptrtoint %MEMORY_T* %vr5229 to i64
	%vr5235 = inttoptr i64 %vr5234 to double*
	%vr5236 = load double, double* %vr5235
	%vr5233 = call double @llvm.nearbyint.f64(double %vr5236)
	%vr5232 = fptosi double %vr5233 to i64

	; bop vr5232 SHL 24
	%vr5237 = shl i64 %vr5232, 24

	; bop vr5223 + vr5237
	%vr5238 = add i64 %vr5223, %vr5237

	; bop SYS_OFFSET + 133
	%vr5240 = load double, double* @SYS_OFFSET
	%vr5239 = fadd double %vr5240, 0x4060A00000000000

	; conv vr5239 => vr5241
	%vr5242 = call double @llvm.nearbyint.f64(double %vr5239)
	%vr5241 = fptosi double %vr5242 to i64

	; bop vr5241 SHL 3
	%vr5243 = shl i64 %vr5241, 3

	; bop THIS + vr5243
	%vr5245 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5246 = inttoptr i64 %vr5243 to %MEMORY_T*
	%vr5244 = add %MEMORY_T* %vr5245, %vr5246

	; conv vr5244 => vr5247
	%vr5249 = ptrtoint %MEMORY_T* %vr5244 to i64
	%vr5250 = inttoptr i64 %vr5249 to double*
	%vr5251 = load double, double* %vr5250
	%vr5248 = call double @llvm.nearbyint.f64(double %vr5251)
	%vr5247 = fptosi double %vr5248 to i64

	; bop vr5247 SHL 16
	%vr5252 = shl i64 %vr5247, 16

	; bop vr5238 + vr5252
	%vr5253 = add i64 %vr5238, %vr5252

	; bop SYS_OFFSET + 134
	%vr5255 = load double, double* @SYS_OFFSET
	%vr5254 = fadd double %vr5255, 0x4060C00000000000

	; conv vr5254 => vr5256
	%vr5257 = call double @llvm.nearbyint.f64(double %vr5254)
	%vr5256 = fptosi double %vr5257 to i64

	; bop vr5256 SHL 3
	%vr5258 = shl i64 %vr5256, 3

	; bop THIS + vr5258
	%vr5260 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5261 = inttoptr i64 %vr5258 to %MEMORY_T*
	%vr5259 = add %MEMORY_T* %vr5260, %vr5261

	; conv vr5259 => vr5262
	%vr5264 = ptrtoint %MEMORY_T* %vr5259 to i64
	%vr5265 = inttoptr i64 %vr5264 to double*
	%vr5266 = load double, double* %vr5265
	%vr5263 = call double @llvm.nearbyint.f64(double %vr5266)
	%vr5262 = fptosi double %vr5263 to i64

	; bop vr5262 SHL 8
	%vr5267 = shl i64 %vr5262, 8

	; bop vr5253 + vr5267
	%vr5268 = add i64 %vr5253, %vr5267

	; conv vr5268 => vr5269
	%vr5269 = sitofp i64 %vr5268 to double

	; bop SYS_OFFSET + 135
	%vr5271 = load double, double* @SYS_OFFSET
	%vr5270 = fadd double %vr5271, 0x4060E00000000000

	; conv vr5270 => vr5272
	%vr5273 = call double @llvm.nearbyint.f64(double %vr5270)
	%vr5272 = fptosi double %vr5273 to i64

	; bop vr5272 SHL 3
	%vr5274 = shl i64 %vr5272, 3

	; bop THIS + vr5274
	%vr5276 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5277 = inttoptr i64 %vr5274 to %MEMORY_T*
	%vr5275 = add %MEMORY_T* %vr5276, %vr5277

	; bop vr5269 + vr5275
	%vr5279 = ptrtoint %MEMORY_T* %vr5275 to i64
	%vr5280 = inttoptr i64 %vr5279 to double*
	%vr5281 = load double, double* %vr5280
	%vr5278 = fadd double %vr5269, %vr5281

	; bop SYS_OFFSET + 223
	%vr5283 = load double, double* @SYS_OFFSET
	%vr5282 = fadd double %vr5283, 0x406BE00000000000

	; conv vr5282 => vr5284
	%vr5285 = call double @llvm.nearbyint.f64(double %vr5282)
	%vr5284 = fptosi double %vr5285 to i64

	; bop vr5284 SHL 3
	%vr5286 = shl i64 %vr5284, 3

	; bop THIS + vr5286
	%vr5288 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5289 = inttoptr i64 %vr5286 to %MEMORY_T*
	%vr5287 = add %MEMORY_T* %vr5288, %vr5289

	; store vr5287 := vr5278
	%vr5290 = ptrtoint %MEMORY_T* %vr5287 to i64
	%vr5291 = inttoptr i64 %vr5290 to double*
	store double %vr5278, double* %vr5291

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10DC:

	; label .Lt_05F8
	br label %.Lt_05F8
.Lt_05F8:

	; conv ADR => vr5293
	%vr5294 = load i64, i64* %ADR.110
	%vr5293 = uitofp i64 %vr5294 to double

	; bop SYS_OFFSET + 136
	%vr5296 = load double, double* @SYS_OFFSET
	%vr5295 = fadd double %vr5296, 0x4061000000000000

	; branchbop vr5293 <> vr5295
	%vr5297 = icmp ne double %vr5293, %vr5295
	br i1 %vr5297, label %.Lt_05FA, label %.Lt_10DD
.Lt_10DD:

	; label .Lt_05FB
	br label %.Lt_05FB
.Lt_05FB:

	; bop SYS_OFFSET + 137
	%vr5299 = load double, double* @SYS_OFFSET
	%vr5298 = fadd double %vr5299, 0x4061200000000000

	; conv vr5298 => vr5300
	%vr5301 = call double @llvm.nearbyint.f64(double %vr5298)
	%vr5300 = fptosi double %vr5301 to i64

	; bop vr5300 SHL 3
	%vr5302 = shl i64 %vr5300, 3

	; bop THIS + vr5302
	%vr5304 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5305 = inttoptr i64 %vr5302 to %MEMORY_T*
	%vr5303 = add %MEMORY_T* %vr5304, %vr5305

	; conv vr5303 => vr5306
	%vr5308 = ptrtoint %MEMORY_T* %vr5303 to i64
	%vr5309 = inttoptr i64 %vr5308 to double*
	%vr5310 = load double, double* %vr5309
	%vr5307 = call double @llvm.nearbyint.f64(double %vr5310)
	%vr5306 = fptosi double %vr5307 to i64

	; bop vr5306 SHL 32
	%vr5311 = shl i64 %vr5306, 32

	; bop SYS_OFFSET + 138
	%vr5313 = load double, double* @SYS_OFFSET
	%vr5312 = fadd double %vr5313, 0x4061400000000000

	; conv vr5312 => vr5314
	%vr5315 = call double @llvm.nearbyint.f64(double %vr5312)
	%vr5314 = fptosi double %vr5315 to i64

	; bop vr5314 SHL 3
	%vr5316 = shl i64 %vr5314, 3

	; bop THIS + vr5316
	%vr5318 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5319 = inttoptr i64 %vr5316 to %MEMORY_T*
	%vr5317 = add %MEMORY_T* %vr5318, %vr5319

	; conv vr5317 => vr5320
	%vr5322 = ptrtoint %MEMORY_T* %vr5317 to i64
	%vr5323 = inttoptr i64 %vr5322 to double*
	%vr5324 = load double, double* %vr5323
	%vr5321 = call double @llvm.nearbyint.f64(double %vr5324)
	%vr5320 = fptosi double %vr5321 to i64

	; bop vr5320 SHL 24
	%vr5325 = shl i64 %vr5320, 24

	; bop vr5311 + vr5325
	%vr5326 = add i64 %vr5311, %vr5325

	; bop SYS_OFFSET + 139
	%vr5328 = load double, double* @SYS_OFFSET
	%vr5327 = fadd double %vr5328, 0x4061600000000000

	; conv vr5327 => vr5329
	%vr5330 = call double @llvm.nearbyint.f64(double %vr5327)
	%vr5329 = fptosi double %vr5330 to i64

	; bop vr5329 SHL 3
	%vr5331 = shl i64 %vr5329, 3

	; bop THIS + vr5331
	%vr5333 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5334 = inttoptr i64 %vr5331 to %MEMORY_T*
	%vr5332 = add %MEMORY_T* %vr5333, %vr5334

	; conv vr5332 => vr5335
	%vr5337 = ptrtoint %MEMORY_T* %vr5332 to i64
	%vr5338 = inttoptr i64 %vr5337 to double*
	%vr5339 = load double, double* %vr5338
	%vr5336 = call double @llvm.nearbyint.f64(double %vr5339)
	%vr5335 = fptosi double %vr5336 to i64

	; bop vr5335 SHL 16
	%vr5340 = shl i64 %vr5335, 16

	; bop vr5326 + vr5340
	%vr5341 = add i64 %vr5326, %vr5340

	; bop SYS_OFFSET + 140
	%vr5343 = load double, double* @SYS_OFFSET
	%vr5342 = fadd double %vr5343, 0x4061800000000000

	; conv vr5342 => vr5344
	%vr5345 = call double @llvm.nearbyint.f64(double %vr5342)
	%vr5344 = fptosi double %vr5345 to i64

	; bop vr5344 SHL 3
	%vr5346 = shl i64 %vr5344, 3

	; bop THIS + vr5346
	%vr5348 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5349 = inttoptr i64 %vr5346 to %MEMORY_T*
	%vr5347 = add %MEMORY_T* %vr5348, %vr5349

	; conv vr5347 => vr5350
	%vr5352 = ptrtoint %MEMORY_T* %vr5347 to i64
	%vr5353 = inttoptr i64 %vr5352 to double*
	%vr5354 = load double, double* %vr5353
	%vr5351 = call double @llvm.nearbyint.f64(double %vr5354)
	%vr5350 = fptosi double %vr5351 to i64

	; bop vr5350 SHL 8
	%vr5355 = shl i64 %vr5350, 8

	; bop vr5341 + vr5355
	%vr5356 = add i64 %vr5341, %vr5355

	; conv vr5356 => vr5357
	%vr5357 = sitofp i64 %vr5356 to double

	; bop SYS_OFFSET + 141
	%vr5359 = load double, double* @SYS_OFFSET
	%vr5358 = fadd double %vr5359, 0x4061A00000000000

	; conv vr5358 => vr5360
	%vr5361 = call double @llvm.nearbyint.f64(double %vr5358)
	%vr5360 = fptosi double %vr5361 to i64

	; bop vr5360 SHL 3
	%vr5362 = shl i64 %vr5360, 3

	; bop THIS + vr5362
	%vr5364 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5365 = inttoptr i64 %vr5362 to %MEMORY_T*
	%vr5363 = add %MEMORY_T* %vr5364, %vr5365

	; bop vr5357 + vr5363
	%vr5367 = ptrtoint %MEMORY_T* %vr5363 to i64
	%vr5368 = inttoptr i64 %vr5367 to double*
	%vr5369 = load double, double* %vr5368
	%vr5366 = fadd double %vr5357, %vr5369

	; bop SYS_OFFSET + 224
	%vr5371 = load double, double* @SYS_OFFSET
	%vr5370 = fadd double %vr5371, 0x406C000000000000

	; conv vr5370 => vr5372
	%vr5373 = call double @llvm.nearbyint.f64(double %vr5370)
	%vr5372 = fptosi double %vr5373 to i64

	; bop vr5372 SHL 3
	%vr5374 = shl i64 %vr5372, 3

	; bop THIS + vr5374
	%vr5376 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5377 = inttoptr i64 %vr5374 to %MEMORY_T*
	%vr5375 = add %MEMORY_T* %vr5376, %vr5377

	; store vr5375 := vr5366
	%vr5378 = ptrtoint %MEMORY_T* %vr5375 to i64
	%vr5379 = inttoptr i64 %vr5378 to double*
	store double %vr5366, double* %vr5379

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10DE:

	; label .Lt_05FA
	br label %.Lt_05FA
.Lt_05FA:

	; conv ADR => vr5381
	%vr5382 = load i64, i64* %ADR.110
	%vr5381 = uitofp i64 %vr5382 to double

	; bop SYS_OFFSET + 142
	%vr5384 = load double, double* @SYS_OFFSET
	%vr5383 = fadd double %vr5384, 0x4061C00000000000

	; branchbop vr5381 <> vr5383
	%vr5385 = icmp ne double %vr5381, %vr5383
	br i1 %vr5385, label %.Lt_05FC, label %.Lt_10DF
.Lt_10DF:

	; label .Lt_05FD
	br label %.Lt_05FD
.Lt_05FD:

	; bop SYS_OFFSET + 143
	%vr5387 = load double, double* @SYS_OFFSET
	%vr5386 = fadd double %vr5387, 0x4061E00000000000

	; conv vr5386 => vr5388
	%vr5389 = call double @llvm.nearbyint.f64(double %vr5386)
	%vr5388 = fptosi double %vr5389 to i64

	; bop vr5388 SHL 3
	%vr5390 = shl i64 %vr5388, 3

	; bop THIS + vr5390
	%vr5392 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5393 = inttoptr i64 %vr5390 to %MEMORY_T*
	%vr5391 = add %MEMORY_T* %vr5392, %vr5393

	; conv vr5391 => vr5394
	%vr5396 = ptrtoint %MEMORY_T* %vr5391 to i64
	%vr5397 = inttoptr i64 %vr5396 to double*
	%vr5398 = load double, double* %vr5397
	%vr5395 = call double @llvm.nearbyint.f64(double %vr5398)
	%vr5394 = fptosi double %vr5395 to i64

	; bop vr5394 SHL 32
	%vr5399 = shl i64 %vr5394, 32

	; bop SYS_OFFSET + 144
	%vr5401 = load double, double* @SYS_OFFSET
	%vr5400 = fadd double %vr5401, 0x4062000000000000

	; conv vr5400 => vr5402
	%vr5403 = call double @llvm.nearbyint.f64(double %vr5400)
	%vr5402 = fptosi double %vr5403 to i64

	; bop vr5402 SHL 3
	%vr5404 = shl i64 %vr5402, 3

	; bop THIS + vr5404
	%vr5406 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5407 = inttoptr i64 %vr5404 to %MEMORY_T*
	%vr5405 = add %MEMORY_T* %vr5406, %vr5407

	; conv vr5405 => vr5408
	%vr5410 = ptrtoint %MEMORY_T* %vr5405 to i64
	%vr5411 = inttoptr i64 %vr5410 to double*
	%vr5412 = load double, double* %vr5411
	%vr5409 = call double @llvm.nearbyint.f64(double %vr5412)
	%vr5408 = fptosi double %vr5409 to i64

	; bop vr5408 SHL 24
	%vr5413 = shl i64 %vr5408, 24

	; bop vr5399 + vr5413
	%vr5414 = add i64 %vr5399, %vr5413

	; bop SYS_OFFSET + 145
	%vr5416 = load double, double* @SYS_OFFSET
	%vr5415 = fadd double %vr5416, 0x4062200000000000

	; conv vr5415 => vr5417
	%vr5418 = call double @llvm.nearbyint.f64(double %vr5415)
	%vr5417 = fptosi double %vr5418 to i64

	; bop vr5417 SHL 3
	%vr5419 = shl i64 %vr5417, 3

	; bop THIS + vr5419
	%vr5421 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5422 = inttoptr i64 %vr5419 to %MEMORY_T*
	%vr5420 = add %MEMORY_T* %vr5421, %vr5422

	; conv vr5420 => vr5423
	%vr5425 = ptrtoint %MEMORY_T* %vr5420 to i64
	%vr5426 = inttoptr i64 %vr5425 to double*
	%vr5427 = load double, double* %vr5426
	%vr5424 = call double @llvm.nearbyint.f64(double %vr5427)
	%vr5423 = fptosi double %vr5424 to i64

	; bop vr5423 SHL 16
	%vr5428 = shl i64 %vr5423, 16

	; bop vr5414 + vr5428
	%vr5429 = add i64 %vr5414, %vr5428

	; bop SYS_OFFSET + 146
	%vr5431 = load double, double* @SYS_OFFSET
	%vr5430 = fadd double %vr5431, 0x4062400000000000

	; conv vr5430 => vr5432
	%vr5433 = call double @llvm.nearbyint.f64(double %vr5430)
	%vr5432 = fptosi double %vr5433 to i64

	; bop vr5432 SHL 3
	%vr5434 = shl i64 %vr5432, 3

	; bop THIS + vr5434
	%vr5436 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5437 = inttoptr i64 %vr5434 to %MEMORY_T*
	%vr5435 = add %MEMORY_T* %vr5436, %vr5437

	; conv vr5435 => vr5438
	%vr5440 = ptrtoint %MEMORY_T* %vr5435 to i64
	%vr5441 = inttoptr i64 %vr5440 to double*
	%vr5442 = load double, double* %vr5441
	%vr5439 = call double @llvm.nearbyint.f64(double %vr5442)
	%vr5438 = fptosi double %vr5439 to i64

	; bop vr5438 SHL 8
	%vr5443 = shl i64 %vr5438, 8

	; bop vr5429 + vr5443
	%vr5444 = add i64 %vr5429, %vr5443

	; conv vr5444 => vr5445
	%vr5445 = sitofp i64 %vr5444 to double

	; bop SYS_OFFSET + 147
	%vr5447 = load double, double* @SYS_OFFSET
	%vr5446 = fadd double %vr5447, 0x4062600000000000

	; conv vr5446 => vr5448
	%vr5449 = call double @llvm.nearbyint.f64(double %vr5446)
	%vr5448 = fptosi double %vr5449 to i64

	; bop vr5448 SHL 3
	%vr5450 = shl i64 %vr5448, 3

	; bop THIS + vr5450
	%vr5452 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5453 = inttoptr i64 %vr5450 to %MEMORY_T*
	%vr5451 = add %MEMORY_T* %vr5452, %vr5453

	; bop vr5445 + vr5451
	%vr5455 = ptrtoint %MEMORY_T* %vr5451 to i64
	%vr5456 = inttoptr i64 %vr5455 to double*
	%vr5457 = load double, double* %vr5456
	%vr5454 = fadd double %vr5445, %vr5457

	; bop SYS_OFFSET + 225
	%vr5459 = load double, double* @SYS_OFFSET
	%vr5458 = fadd double %vr5459, 0x406C200000000000

	; conv vr5458 => vr5460
	%vr5461 = call double @llvm.nearbyint.f64(double %vr5458)
	%vr5460 = fptosi double %vr5461 to i64

	; bop vr5460 SHL 3
	%vr5462 = shl i64 %vr5460, 3

	; bop THIS + vr5462
	%vr5464 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5465 = inttoptr i64 %vr5462 to %MEMORY_T*
	%vr5463 = add %MEMORY_T* %vr5464, %vr5465

	; store vr5463 := vr5454
	%vr5466 = ptrtoint %MEMORY_T* %vr5463 to i64
	%vr5467 = inttoptr i64 %vr5466 to double*
	store double %vr5454, double* %vr5467

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10E0:

	; label .Lt_05FC
	br label %.Lt_05FC
.Lt_05FC:

	; conv ADR => vr5469
	%vr5470 = load i64, i64* %ADR.110
	%vr5469 = uitofp i64 %vr5470 to double

	; bop SYS_OFFSET + 148
	%vr5472 = load double, double* @SYS_OFFSET
	%vr5471 = fadd double %vr5472, 0x4062800000000000

	; branchbop vr5469 <> vr5471
	%vr5473 = icmp ne double %vr5469, %vr5471
	br i1 %vr5473, label %.Lt_05FE, label %.Lt_10E1
.Lt_10E1:

	; label .Lt_05FF
	br label %.Lt_05FF
.Lt_05FF:

	; bop SYS_OFFSET + 149
	%vr5475 = load double, double* @SYS_OFFSET
	%vr5474 = fadd double %vr5475, 0x4062A00000000000

	; conv vr5474 => vr5476
	%vr5477 = call double @llvm.nearbyint.f64(double %vr5474)
	%vr5476 = fptosi double %vr5477 to i64

	; bop vr5476 SHL 3
	%vr5478 = shl i64 %vr5476, 3

	; bop THIS + vr5478
	%vr5480 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5481 = inttoptr i64 %vr5478 to %MEMORY_T*
	%vr5479 = add %MEMORY_T* %vr5480, %vr5481

	; conv vr5479 => vr5482
	%vr5484 = ptrtoint %MEMORY_T* %vr5479 to i64
	%vr5485 = inttoptr i64 %vr5484 to double*
	%vr5486 = load double, double* %vr5485
	%vr5483 = call double @llvm.nearbyint.f64(double %vr5486)
	%vr5482 = fptosi double %vr5483 to i64

	; bop vr5482 SHL 32
	%vr5487 = shl i64 %vr5482, 32

	; bop SYS_OFFSET + 150
	%vr5489 = load double, double* @SYS_OFFSET
	%vr5488 = fadd double %vr5489, 0x4062C00000000000

	; conv vr5488 => vr5490
	%vr5491 = call double @llvm.nearbyint.f64(double %vr5488)
	%vr5490 = fptosi double %vr5491 to i64

	; bop vr5490 SHL 3
	%vr5492 = shl i64 %vr5490, 3

	; bop THIS + vr5492
	%vr5494 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5495 = inttoptr i64 %vr5492 to %MEMORY_T*
	%vr5493 = add %MEMORY_T* %vr5494, %vr5495

	; conv vr5493 => vr5496
	%vr5498 = ptrtoint %MEMORY_T* %vr5493 to i64
	%vr5499 = inttoptr i64 %vr5498 to double*
	%vr5500 = load double, double* %vr5499
	%vr5497 = call double @llvm.nearbyint.f64(double %vr5500)
	%vr5496 = fptosi double %vr5497 to i64

	; bop vr5496 SHL 24
	%vr5501 = shl i64 %vr5496, 24

	; bop vr5487 + vr5501
	%vr5502 = add i64 %vr5487, %vr5501

	; bop SYS_OFFSET + 151
	%vr5504 = load double, double* @SYS_OFFSET
	%vr5503 = fadd double %vr5504, 0x4062E00000000000

	; conv vr5503 => vr5505
	%vr5506 = call double @llvm.nearbyint.f64(double %vr5503)
	%vr5505 = fptosi double %vr5506 to i64

	; bop vr5505 SHL 3
	%vr5507 = shl i64 %vr5505, 3

	; bop THIS + vr5507
	%vr5509 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5510 = inttoptr i64 %vr5507 to %MEMORY_T*
	%vr5508 = add %MEMORY_T* %vr5509, %vr5510

	; conv vr5508 => vr5511
	%vr5513 = ptrtoint %MEMORY_T* %vr5508 to i64
	%vr5514 = inttoptr i64 %vr5513 to double*
	%vr5515 = load double, double* %vr5514
	%vr5512 = call double @llvm.nearbyint.f64(double %vr5515)
	%vr5511 = fptosi double %vr5512 to i64

	; bop vr5511 SHL 16
	%vr5516 = shl i64 %vr5511, 16

	; bop vr5502 + vr5516
	%vr5517 = add i64 %vr5502, %vr5516

	; bop SYS_OFFSET + 152
	%vr5519 = load double, double* @SYS_OFFSET
	%vr5518 = fadd double %vr5519, 0x4063000000000000

	; conv vr5518 => vr5520
	%vr5521 = call double @llvm.nearbyint.f64(double %vr5518)
	%vr5520 = fptosi double %vr5521 to i64

	; bop vr5520 SHL 3
	%vr5522 = shl i64 %vr5520, 3

	; bop THIS + vr5522
	%vr5524 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5525 = inttoptr i64 %vr5522 to %MEMORY_T*
	%vr5523 = add %MEMORY_T* %vr5524, %vr5525

	; conv vr5523 => vr5526
	%vr5528 = ptrtoint %MEMORY_T* %vr5523 to i64
	%vr5529 = inttoptr i64 %vr5528 to double*
	%vr5530 = load double, double* %vr5529
	%vr5527 = call double @llvm.nearbyint.f64(double %vr5530)
	%vr5526 = fptosi double %vr5527 to i64

	; bop vr5526 SHL 8
	%vr5531 = shl i64 %vr5526, 8

	; bop vr5517 + vr5531
	%vr5532 = add i64 %vr5517, %vr5531

	; conv vr5532 => vr5533
	%vr5533 = sitofp i64 %vr5532 to double

	; bop SYS_OFFSET + 153
	%vr5535 = load double, double* @SYS_OFFSET
	%vr5534 = fadd double %vr5535, 0x4063200000000000

	; conv vr5534 => vr5536
	%vr5537 = call double @llvm.nearbyint.f64(double %vr5534)
	%vr5536 = fptosi double %vr5537 to i64

	; bop vr5536 SHL 3
	%vr5538 = shl i64 %vr5536, 3

	; bop THIS + vr5538
	%vr5540 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5541 = inttoptr i64 %vr5538 to %MEMORY_T*
	%vr5539 = add %MEMORY_T* %vr5540, %vr5541

	; bop vr5533 + vr5539
	%vr5543 = ptrtoint %MEMORY_T* %vr5539 to i64
	%vr5544 = inttoptr i64 %vr5543 to double*
	%vr5545 = load double, double* %vr5544
	%vr5542 = fadd double %vr5533, %vr5545

	; bop SYS_OFFSET + 226
	%vr5547 = load double, double* @SYS_OFFSET
	%vr5546 = fadd double %vr5547, 0x406C400000000000

	; conv vr5546 => vr5548
	%vr5549 = call double @llvm.nearbyint.f64(double %vr5546)
	%vr5548 = fptosi double %vr5549 to i64

	; bop vr5548 SHL 3
	%vr5550 = shl i64 %vr5548, 3

	; bop THIS + vr5550
	%vr5552 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5553 = inttoptr i64 %vr5550 to %MEMORY_T*
	%vr5551 = add %MEMORY_T* %vr5552, %vr5553

	; store vr5551 := vr5542
	%vr5554 = ptrtoint %MEMORY_T* %vr5551 to i64
	%vr5555 = inttoptr i64 %vr5554 to double*
	store double %vr5542, double* %vr5555

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10E2:

	; label .Lt_05FE
	br label %.Lt_05FE
.Lt_05FE:

	; conv ADR => vr5557
	%vr5558 = load i64, i64* %ADR.110
	%vr5557 = uitofp i64 %vr5558 to double

	; bop SYS_OFFSET + 154
	%vr5560 = load double, double* @SYS_OFFSET
	%vr5559 = fadd double %vr5560, 0x4063400000000000

	; branchbop vr5557 <> vr5559
	%vr5561 = icmp ne double %vr5557, %vr5559
	br i1 %vr5561, label %.Lt_0600, label %.Lt_10E3
.Lt_10E3:

	; label .Lt_0601
	br label %.Lt_0601
.Lt_0601:

	; bop SYS_OFFSET + 155
	%vr5563 = load double, double* @SYS_OFFSET
	%vr5562 = fadd double %vr5563, 0x4063600000000000

	; conv vr5562 => vr5564
	%vr5565 = call double @llvm.nearbyint.f64(double %vr5562)
	%vr5564 = fptosi double %vr5565 to i64

	; bop vr5564 SHL 3
	%vr5566 = shl i64 %vr5564, 3

	; bop THIS + vr5566
	%vr5568 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5569 = inttoptr i64 %vr5566 to %MEMORY_T*
	%vr5567 = add %MEMORY_T* %vr5568, %vr5569

	; conv vr5567 => vr5570
	%vr5572 = ptrtoint %MEMORY_T* %vr5567 to i64
	%vr5573 = inttoptr i64 %vr5572 to double*
	%vr5574 = load double, double* %vr5573
	%vr5571 = call double @llvm.nearbyint.f64(double %vr5574)
	%vr5570 = fptosi double %vr5571 to i64

	; bop vr5570 SHL 32
	%vr5575 = shl i64 %vr5570, 32

	; bop SYS_OFFSET + 156
	%vr5577 = load double, double* @SYS_OFFSET
	%vr5576 = fadd double %vr5577, 0x4063800000000000

	; conv vr5576 => vr5578
	%vr5579 = call double @llvm.nearbyint.f64(double %vr5576)
	%vr5578 = fptosi double %vr5579 to i64

	; bop vr5578 SHL 3
	%vr5580 = shl i64 %vr5578, 3

	; bop THIS + vr5580
	%vr5582 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5583 = inttoptr i64 %vr5580 to %MEMORY_T*
	%vr5581 = add %MEMORY_T* %vr5582, %vr5583

	; conv vr5581 => vr5584
	%vr5586 = ptrtoint %MEMORY_T* %vr5581 to i64
	%vr5587 = inttoptr i64 %vr5586 to double*
	%vr5588 = load double, double* %vr5587
	%vr5585 = call double @llvm.nearbyint.f64(double %vr5588)
	%vr5584 = fptosi double %vr5585 to i64

	; bop vr5584 SHL 24
	%vr5589 = shl i64 %vr5584, 24

	; bop vr5575 + vr5589
	%vr5590 = add i64 %vr5575, %vr5589

	; bop SYS_OFFSET + 157
	%vr5592 = load double, double* @SYS_OFFSET
	%vr5591 = fadd double %vr5592, 0x4063A00000000000

	; conv vr5591 => vr5593
	%vr5594 = call double @llvm.nearbyint.f64(double %vr5591)
	%vr5593 = fptosi double %vr5594 to i64

	; bop vr5593 SHL 3
	%vr5595 = shl i64 %vr5593, 3

	; bop THIS + vr5595
	%vr5597 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5598 = inttoptr i64 %vr5595 to %MEMORY_T*
	%vr5596 = add %MEMORY_T* %vr5597, %vr5598

	; conv vr5596 => vr5599
	%vr5601 = ptrtoint %MEMORY_T* %vr5596 to i64
	%vr5602 = inttoptr i64 %vr5601 to double*
	%vr5603 = load double, double* %vr5602
	%vr5600 = call double @llvm.nearbyint.f64(double %vr5603)
	%vr5599 = fptosi double %vr5600 to i64

	; bop vr5599 SHL 16
	%vr5604 = shl i64 %vr5599, 16

	; bop vr5590 + vr5604
	%vr5605 = add i64 %vr5590, %vr5604

	; bop SYS_OFFSET + 158
	%vr5607 = load double, double* @SYS_OFFSET
	%vr5606 = fadd double %vr5607, 0x4063C00000000000

	; conv vr5606 => vr5608
	%vr5609 = call double @llvm.nearbyint.f64(double %vr5606)
	%vr5608 = fptosi double %vr5609 to i64

	; bop vr5608 SHL 3
	%vr5610 = shl i64 %vr5608, 3

	; bop THIS + vr5610
	%vr5612 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5613 = inttoptr i64 %vr5610 to %MEMORY_T*
	%vr5611 = add %MEMORY_T* %vr5612, %vr5613

	; conv vr5611 => vr5614
	%vr5616 = ptrtoint %MEMORY_T* %vr5611 to i64
	%vr5617 = inttoptr i64 %vr5616 to double*
	%vr5618 = load double, double* %vr5617
	%vr5615 = call double @llvm.nearbyint.f64(double %vr5618)
	%vr5614 = fptosi double %vr5615 to i64

	; bop vr5614 SHL 8
	%vr5619 = shl i64 %vr5614, 8

	; bop vr5605 + vr5619
	%vr5620 = add i64 %vr5605, %vr5619

	; conv vr5620 => vr5621
	%vr5621 = sitofp i64 %vr5620 to double

	; bop SYS_OFFSET + 159
	%vr5623 = load double, double* @SYS_OFFSET
	%vr5622 = fadd double %vr5623, 0x4063E00000000000

	; conv vr5622 => vr5624
	%vr5625 = call double @llvm.nearbyint.f64(double %vr5622)
	%vr5624 = fptosi double %vr5625 to i64

	; bop vr5624 SHL 3
	%vr5626 = shl i64 %vr5624, 3

	; bop THIS + vr5626
	%vr5628 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5629 = inttoptr i64 %vr5626 to %MEMORY_T*
	%vr5627 = add %MEMORY_T* %vr5628, %vr5629

	; bop vr5621 + vr5627
	%vr5631 = ptrtoint %MEMORY_T* %vr5627 to i64
	%vr5632 = inttoptr i64 %vr5631 to double*
	%vr5633 = load double, double* %vr5632
	%vr5630 = fadd double %vr5621, %vr5633

	; bop SYS_OFFSET + 227
	%vr5635 = load double, double* @SYS_OFFSET
	%vr5634 = fadd double %vr5635, 0x406C600000000000

	; conv vr5634 => vr5636
	%vr5637 = call double @llvm.nearbyint.f64(double %vr5634)
	%vr5636 = fptosi double %vr5637 to i64

	; bop vr5636 SHL 3
	%vr5638 = shl i64 %vr5636, 3

	; bop THIS + vr5638
	%vr5640 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5641 = inttoptr i64 %vr5638 to %MEMORY_T*
	%vr5639 = add %MEMORY_T* %vr5640, %vr5641

	; store vr5639 := vr5630
	%vr5642 = ptrtoint %MEMORY_T* %vr5639 to i64
	%vr5643 = inttoptr i64 %vr5642 to double*
	store double %vr5630, double* %vr5643

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10E4:

	; label .Lt_0600
	br label %.Lt_0600
.Lt_0600:

	; conv ADR => vr5645
	%vr5646 = load i64, i64* %ADR.110
	%vr5645 = uitofp i64 %vr5646 to double

	; bop SYS_OFFSET + 160
	%vr5648 = load double, double* @SYS_OFFSET
	%vr5647 = fadd double %vr5648, 0x4064000000000000

	; branchbop vr5645 <> vr5647
	%vr5649 = icmp ne double %vr5645, %vr5647
	br i1 %vr5649, label %.Lt_0602, label %.Lt_10E5
.Lt_10E5:

	; label .Lt_0603
	br label %.Lt_0603
.Lt_0603:

	; bop SYS_OFFSET + 161
	%vr5651 = load double, double* @SYS_OFFSET
	%vr5650 = fadd double %vr5651, 0x4064200000000000

	; conv vr5650 => vr5652
	%vr5653 = call double @llvm.nearbyint.f64(double %vr5650)
	%vr5652 = fptosi double %vr5653 to i64

	; bop vr5652 SHL 3
	%vr5654 = shl i64 %vr5652, 3

	; bop THIS + vr5654
	%vr5656 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5657 = inttoptr i64 %vr5654 to %MEMORY_T*
	%vr5655 = add %MEMORY_T* %vr5656, %vr5657

	; conv vr5655 => vr5658
	%vr5660 = ptrtoint %MEMORY_T* %vr5655 to i64
	%vr5661 = inttoptr i64 %vr5660 to double*
	%vr5662 = load double, double* %vr5661
	%vr5659 = call double @llvm.nearbyint.f64(double %vr5662)
	%vr5658 = fptosi double %vr5659 to i64

	; bop vr5658 SHL 32
	%vr5663 = shl i64 %vr5658, 32

	; bop SYS_OFFSET + 162
	%vr5665 = load double, double* @SYS_OFFSET
	%vr5664 = fadd double %vr5665, 0x4064400000000000

	; conv vr5664 => vr5666
	%vr5667 = call double @llvm.nearbyint.f64(double %vr5664)
	%vr5666 = fptosi double %vr5667 to i64

	; bop vr5666 SHL 3
	%vr5668 = shl i64 %vr5666, 3

	; bop THIS + vr5668
	%vr5670 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5671 = inttoptr i64 %vr5668 to %MEMORY_T*
	%vr5669 = add %MEMORY_T* %vr5670, %vr5671

	; conv vr5669 => vr5672
	%vr5674 = ptrtoint %MEMORY_T* %vr5669 to i64
	%vr5675 = inttoptr i64 %vr5674 to double*
	%vr5676 = load double, double* %vr5675
	%vr5673 = call double @llvm.nearbyint.f64(double %vr5676)
	%vr5672 = fptosi double %vr5673 to i64

	; bop vr5672 SHL 24
	%vr5677 = shl i64 %vr5672, 24

	; bop vr5663 + vr5677
	%vr5678 = add i64 %vr5663, %vr5677

	; bop SYS_OFFSET + 163
	%vr5680 = load double, double* @SYS_OFFSET
	%vr5679 = fadd double %vr5680, 0x4064600000000000

	; conv vr5679 => vr5681
	%vr5682 = call double @llvm.nearbyint.f64(double %vr5679)
	%vr5681 = fptosi double %vr5682 to i64

	; bop vr5681 SHL 3
	%vr5683 = shl i64 %vr5681, 3

	; bop THIS + vr5683
	%vr5685 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5686 = inttoptr i64 %vr5683 to %MEMORY_T*
	%vr5684 = add %MEMORY_T* %vr5685, %vr5686

	; conv vr5684 => vr5687
	%vr5689 = ptrtoint %MEMORY_T* %vr5684 to i64
	%vr5690 = inttoptr i64 %vr5689 to double*
	%vr5691 = load double, double* %vr5690
	%vr5688 = call double @llvm.nearbyint.f64(double %vr5691)
	%vr5687 = fptosi double %vr5688 to i64

	; bop vr5687 SHL 16
	%vr5692 = shl i64 %vr5687, 16

	; bop vr5678 + vr5692
	%vr5693 = add i64 %vr5678, %vr5692

	; bop SYS_OFFSET + 164
	%vr5695 = load double, double* @SYS_OFFSET
	%vr5694 = fadd double %vr5695, 0x4064800000000000

	; conv vr5694 => vr5696
	%vr5697 = call double @llvm.nearbyint.f64(double %vr5694)
	%vr5696 = fptosi double %vr5697 to i64

	; bop vr5696 SHL 3
	%vr5698 = shl i64 %vr5696, 3

	; bop THIS + vr5698
	%vr5700 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5701 = inttoptr i64 %vr5698 to %MEMORY_T*
	%vr5699 = add %MEMORY_T* %vr5700, %vr5701

	; conv vr5699 => vr5702
	%vr5704 = ptrtoint %MEMORY_T* %vr5699 to i64
	%vr5705 = inttoptr i64 %vr5704 to double*
	%vr5706 = load double, double* %vr5705
	%vr5703 = call double @llvm.nearbyint.f64(double %vr5706)
	%vr5702 = fptosi double %vr5703 to i64

	; bop vr5702 SHL 8
	%vr5707 = shl i64 %vr5702, 8

	; bop vr5693 + vr5707
	%vr5708 = add i64 %vr5693, %vr5707

	; conv vr5708 => vr5709
	%vr5709 = sitofp i64 %vr5708 to double

	; bop SYS_OFFSET + 165
	%vr5711 = load double, double* @SYS_OFFSET
	%vr5710 = fadd double %vr5711, 0x4064A00000000000

	; conv vr5710 => vr5712
	%vr5713 = call double @llvm.nearbyint.f64(double %vr5710)
	%vr5712 = fptosi double %vr5713 to i64

	; bop vr5712 SHL 3
	%vr5714 = shl i64 %vr5712, 3

	; bop THIS + vr5714
	%vr5716 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5717 = inttoptr i64 %vr5714 to %MEMORY_T*
	%vr5715 = add %MEMORY_T* %vr5716, %vr5717

	; bop vr5709 + vr5715
	%vr5719 = ptrtoint %MEMORY_T* %vr5715 to i64
	%vr5720 = inttoptr i64 %vr5719 to double*
	%vr5721 = load double, double* %vr5720
	%vr5718 = fadd double %vr5709, %vr5721

	; bop SYS_OFFSET + 228
	%vr5723 = load double, double* @SYS_OFFSET
	%vr5722 = fadd double %vr5723, 0x406C800000000000

	; conv vr5722 => vr5724
	%vr5725 = call double @llvm.nearbyint.f64(double %vr5722)
	%vr5724 = fptosi double %vr5725 to i64

	; bop vr5724 SHL 3
	%vr5726 = shl i64 %vr5724, 3

	; bop THIS + vr5726
	%vr5728 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr5729 = inttoptr i64 %vr5726 to %MEMORY_T*
	%vr5727 = add %MEMORY_T* %vr5728, %vr5729

	; store vr5727 := vr5718
	%vr5730 = ptrtoint %MEMORY_T* %vr5727 to i64
	%vr5731 = inttoptr i64 %vr5730 to double*
	store double %vr5718, double* %vr5731

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_10E6:

	; label .Lt_0602
	br label %.Lt_0602
.Lt_0602:

	; conv ADR => vr5733
	%vr5734 = load i64, i64* %ADR.110
	%vr5733 = uitofp i64 %vr5734 to double

	; bop SYS_OFFSET + 161
	%vr5736 = load double, double* @SYS_OFFSET
	%vr5735 = fadd double %vr5736, 0x4064200000000000

	; branchbop vr5733 <> vr5735
	%vr5737 = icmp ne double %vr5733, %vr5735
	br i1 %vr5737, label %.Lt_0604, label %.Lt_10E7
.Lt_10E7:

	; label .Lt_0605
	br label %.Lt_0605
.Lt_0605:

	; localvar BFULLSCREEN
	%BFULLSCREEN.114 = alloca i8

	; localvar BTEXTURED
	%BTEXTURED.115 = alloca i8

	; localvar BNOISE
	%BNOISE.116 = alloca i8

	; localvar BLINEAR
	%BLINEAR.117 = alloca i8

	; localvar BNEAREST
	%BNEAREST.118 = alloca i8

	; localvar BNEARESTLINEAR
	%BNEARESTLINEAR.119 = alloca i8

	; localvar BLINEARNEAREST
	%BLINEARNEAREST.120 = alloca i8

	; localvar BMIPMAP
	%BMIPMAP.121 = alloca i8

	; localvar BREPEAT
	%BREPEAT.122 = alloca i8

	; localvar IMG
	%IMG.123 = alloca i8*

	; localvar SCR_W
	%SCR_W.124 = alloca i64

	; localvar SCR_H
	%SCR_H.125 = alloca i64

	; localvar LT_0606
	%LT_0606.126 = alloca i64

	; localvar LT_0607
	%LT_0607.127 = alloca i64

	; localvar LT_0608
	%LT_0608.128 = alloca i64

	; localvar LT_0609
	%LT_0609.129 = alloca i64

	; localvar V3
	%V3.130 = alloca %VEC3

	; localvar SHADER
	%SHADER.131 = alloca %SHADERTOY

	; localvar LT_0616
	%LT_0616.132 = alloca %FBSTRING

	; localvar TEXTURES
	%TEXTURES.133 = alloca [4 x i32]

	; localvar Lt_0617
	%MEMORY_T.FBARRAY1 = type { i32*, i32*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_0617.134 = alloca %MEMORY_T.FBARRAY1

	; localvar ICHANNEL0
	%ICHANNEL0.135 = alloca i32

	; localvar IGLOBALTIME
	%IGLOBALTIME.136 = alloca i32

	; localvar ITIME
	%ITIME.137 = alloca i32

	; localvar IRESOLUTION
	%IRESOLUTION.138 = alloca i32

	; localvar IMOUSE
	%IMOUSE.139 = alloca i32

	; localvar IFRAME
	%IFRAME.140 = alloca i32

	; localvar OX
	%OX.141 = alloca i64

	; localvar OY
	%OY.142 = alloca i64

	; localvar OB
	%OB.143 = alloca i64

	; localvar MX
	%MX.144 = alloca i64

	; localvar MY
	%MY.145 = alloca i64

	; localvar MB
	%MB.146 = alloca i64

	; localvar FRAMES
	%FRAMES.147 = alloca i64

	; localvar FPS
	%FPS.148 = alloca i64

	; localvar TRUNTIME
	%TRUNTIME.149 = alloca double

	; localvar TSTART
	%TSTART.150 = alloca double

	; localvar TNOW
	%TNOW.151 = alloca double

	; localvar TLAST
	%TLAST.152 = alloca double

	; addrof BFULLSCREEN

	; memclear BFULLSCREEN
	%vr5739 = bitcast i8* %BFULLSCREEN.114 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5739, i8 0, i32 1, i32 1, i1 false )

	; addrof BTEXTURED

	; memclear BTEXTURED
	%vr5741 = bitcast i8* %BTEXTURED.115 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5741, i8 0, i32 1, i32 1, i1 false )

	; addrof BNOISE

	; memclear BNOISE
	%vr5743 = bitcast i8* %BNOISE.116 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5743, i8 0, i32 1, i32 1, i1 false )

	; addrof BLINEAR

	; memclear BLINEAR
	%vr5745 = bitcast i8* %BLINEAR.117 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5745, i8 0, i32 1, i32 1, i1 false )

	; addrof BNEAREST

	; memclear BNEAREST
	%vr5747 = bitcast i8* %BNEAREST.118 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5747, i8 0, i32 1, i32 1, i1 false )

	; addrof BNEARESTLINEAR

	; memclear BNEARESTLINEAR
	%vr5749 = bitcast i8* %BNEARESTLINEAR.119 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5749, i8 0, i32 1, i32 1, i1 false )

	; addrof BLINEARNEAREST

	; memclear BLINEARNEAREST
	%vr5751 = bitcast i8* %BLINEARNEAREST.120 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5751, i8 0, i32 1, i32 1, i1 false )

	; addrof BMIPMAP

	; memclear BMIPMAP
	%vr5753 = bitcast i8* %BMIPMAP.121 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5753, i8 0, i32 1, i32 1, i1 false )

	; addrof BREPEAT

	; memclear BREPEAT
	%vr5755 = bitcast i8* %BREPEAT.122 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5755, i8 0, i32 1, i32 1, i1 false )

	; store IMG := 0
	store i8* 0, i8** %IMG.123

	; call GLSCREEN()
	; arg 1920
	; arg 1080
	; arg -1
	; arg -1
	; arg -1
	call void @GLSCREEN( i64 1920, i64 1080, i64 -1, i64 -1, i8 trunc (i64 -1 to i8) )

	; addrof SCR_W

	; memclear SCR_W
	%vr5757 = bitcast i64* %SCR_W.124 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5757, i8 0, i32 8, i32 1, i1 false )

	; addrof SCR_H

	; memclear SCR_H
	%vr5759 = bitcast i64* %SCR_H.125 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5759, i8 0, i32 8, i32 1, i1 false )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5761 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5760 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5761, i64 0 )

	; store LT_0609 := 0
	store i64 0, i64* %LT_0609.129

	; store LT_0608 := 0
	store i64 0, i64* %LT_0608.128

	; store LT_0607 := 0
	store i64 0, i64* %LT_0607.127

	; store LT_0606 := 0
	store i64 0, i64* %LT_0606.126

	; addrof SCR_H

	; addrof SCR_W

	; call fb_GfxScreenInfo()
	; arg SCR_W
	; arg SCR_H
	; arg LT_0606
	; arg LT_0607
	; arg LT_0608
	; arg LT_0609
	; arg vr5760
	call void @fb_GfxScreenInfo( i64* %SCR_W.124, i64* %SCR_H.125, i64* %LT_0606.126, i64* %LT_0607.127, i64* %LT_0608.128, i64* %LT_0609.129, %FBSTRING* %vr5760 )

	; addrof V3

	; memclear V3
	%vr5766 = bitcast %VEC3* %V3.130 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5766, i8 0, i32 12, i32 1, i1 false )

	; conv SCR_W => vr5767
	%vr5768 = load i64, i64* %SCR_W.124
	%vr5767 = sitofp i64 %vr5768 to float

	; store V3 := vr5767
	%vr5769 = bitcast %VEC3* %V3.130 to float*
	store float %vr5767, float* %vr5769

	; conv SCR_H => vr5770
	%vr5771 = load i64, i64* %SCR_H.125
	%vr5770 = sitofp i64 %vr5771 to float

	; store V3+4 := vr5770
	%vr5772 = bitcast %VEC3* %V3.130 to float*
	%vr5773 = ptrtoint float* %vr5772 to i64
	%vr5774 = add i64 %vr5773, 4
	%vr5775 = inttoptr i64 %vr5774 to float*
	store float %vr5770, float* %vr5775

	; bop V3 / V3+4
	%vr5777 = bitcast %VEC3* %V3.130 to float*
	%vr5778 = load float, float* %vr5777
	%vr5779 = bitcast %VEC3* %V3.130 to float*
	%vr5780 = ptrtoint float* %vr5779 to i64
	%vr5781 = add i64 %vr5780, 4
	%vr5782 = inttoptr i64 %vr5781 to float*
	%vr5783 = load float, float* %vr5782
	%vr5776 = fdiv float %vr5778, %vr5783

	; store V3+8 := vr5776
	%vr5784 = bitcast %VEC3* %V3.130 to float*
	%vr5785 = ptrtoint float* %vr5784 to i64
	%vr5786 = add i64 %vr5785, 8
	%vr5787 = inttoptr i64 %vr5786 to float*
	store float %vr5776, float* %vr5787

	; addrof SHADER

	; call ()
	; arg SHADER
	call void @_ZN9SHADERTOYC1Ev( %SHADERTOY* %SHADER.131 )
	%vr5789 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrLen()
	; arg vr5789
	; arg -1
	%vr5790 = call i64 @fb_StrLen( i8* %vr5789, i64 -1 )

	; branchbop vr5790 <> 0
	%vr5792 = icmp ne i64 %vr5790, 0
	br i1 %vr5792, label %.Lt_060B, label %.Lt_10E8
.Lt_10E8:

	; store BTEXTURED := 0
	store i8 trunc (i64 0 to i8), i8* %BTEXTURED.115
	%vr5793 = bitcast i8* bitcast ([23 x i8]* @Lt_060C to i8*) to i8*
	%vr5794 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr5794
	; arg -1
	; arg vr5793
	; arg 23
	; arg 0
	%vr5795 = call %FBSTRING* @fb_StrAssign( i8* %vr5794, i64 -1, i8* %vr5793, i64 23, i32 0 )

	; label .Lt_060B
	br label %.Lt_060B
.Lt_060B:

	; label .Lt_060A
	br label %.Lt_060A
.Lt_060A:

	; addrof SHADER

	; call COMPILEFILE()
	; arg SHADER
	; arg FILENAME
	%vr5800 = call i8 @_ZN9SHADERTOY11COMPILEFILEER8FBSTRING( %SHADERTOY* %SHADER.131, %FBSTRING* @FILENAME )

	; branchbop vr5800 <> 0
	%vr5801 = icmp ne i8 %vr5800, trunc (i64 0 to i8)
	br i1 %vr5801, label %.Lt_060E, label %.Lt_10E9
.Lt_10E9:

	; localvar LT_0611
	%LT_0611.153 = alloca %FBSTRING

	; localvar LT_0612
	%LT_0612.154 = alloca %FBSTRING

	; localvar LT_0613
	%LT_0613.155 = alloca %FBSTRING

	; localvar LT_0614
	%LT_0614.156 = alloca %FBSTRING

	; addrof LT_0614

	; memclear LT_0614
	%vr5803 = bitcast %FBSTRING* %LT_0614.156 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5803, i8 0, i32 24, i32 1, i1 false )

	; addrof SHADER+8
	%vr5805 = bitcast %SHADERTOY* %SHADER.131 to %FBSTRING*
	%vr5806 = ptrtoint %FBSTRING* %vr5805 to i64
	%vr5807 = add i64 %vr5806, 8
	%vr5808 = inttoptr i64 %vr5807 to %FBSTRING*
	%vr5809 = bitcast %FBSTRING* %vr5808 to i8*
	%vr5810 = bitcast i8* bitcast ([3 x i8]* @Lt_0610 to i8*) to i8*
	%vr5811 = bitcast %FBSTRING* @FILENAME to i8*
	%vr5812 = bitcast i8* bitcast ([7 x i8]* @Lt_060F to i8*) to i8*

	; addrof LT_0611

	; memclear LT_0611
	%vr5814 = bitcast %FBSTRING* %LT_0611.153 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5814, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0611

	; call fb_StrConcat()
	; arg LT_0611
	; arg vr5812
	; arg 7
	; arg vr5811
	; arg -1
	%vr5816 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0611.153, i8* %vr5812, i64 7, i8* %vr5811, i64 -1 )

	; addrof LT_0612

	; memclear LT_0612
	%vr5820 = bitcast %FBSTRING* %LT_0612.154 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5820, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0612

	; call fb_StrConcat()
	; arg LT_0612
	; arg vr5816
	%vr5823 = bitcast %FBSTRING* %vr5816 to i8*
	; arg -1
	; arg vr5810
	; arg 3
	%vr5822 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0612.154, i8* %vr5823, i64 -1, i8* %vr5810, i64 3 )

	; addrof LT_0613

	; memclear LT_0613
	%vr5827 = bitcast %FBSTRING* %LT_0613.155 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5827, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0613

	; call fb_StrConcat()
	; arg LT_0613
	; arg vr5822
	%vr5830 = bitcast %FBSTRING* %vr5822 to i8*
	; arg -1
	; arg vr5809
	; arg -1
	%vr5829 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0613.155, i8* %vr5830, i64 -1, i8* %vr5809, i64 -1 )

	; addrof LT_0614
	%vr5834 = bitcast %FBSTRING* %LT_0614.156 to i8*

	; call fb_StrAssign()
	; arg vr5834
	; arg -1
	; arg vr5829
	%vr5837 = bitcast %FBSTRING* %vr5829 to i8*
	; arg -1
	; arg 0
	%vr5835 = call %FBSTRING* @fb_StrAssign( i8* %vr5834, i64 -1, i8* %vr5837, i64 -1, i32 0 )

	; addrof LT_0614

	; call ERROREXIT()
	; arg LT_0614
	call void @ERROREXIT( %FBSTRING* %LT_0614.156 )

	; addrof LT_0614
	%vr5842 = bitcast %FBSTRING* %LT_0614.156 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr5842
	call void @fb_StrDelete( %FBSTRING* %vr5842 )

	; label .Lt_060E
	br label %.Lt_060E
.Lt_060E:

	; label .Lt_060D
	br label %.Lt_060D
.Lt_060D:
	%vr5843 = bitcast i8* bitcast ([8 x i8]* @Lt_0615 to i8*) to i8*
	%vr5844 = bitcast %FBSTRING* @FILENAME to i8*

	; addrof LT_0616

	; memclear LT_0616
	%vr5846 = bitcast %FBSTRING* %LT_0616.132 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5846, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0616

	; call fb_StrConcat()
	; arg LT_0616
	; arg vr5844
	; arg -1
	; arg vr5843
	; arg 8
	%vr5848 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0616.132, i8* %vr5844, i64 -1, i8* %vr5843, i64 8 )

	; call fb_GfxSetWindowTitle()
	; arg vr5848
	%vr5851 = bitcast %FBSTRING* %vr5848 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr5851 )

	; callptr GLUSEPROGRAM
	%vr5852 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	; arg SHADER+4
	%vr5853 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr5854 = ptrtoint i32* %vr5853 to i64
	%vr5855 = add i64 %vr5854, 4
	%vr5856 = inttoptr i64 %vr5855 to i32*
	%vr5857 = load i32, i32* %vr5856
	call void %vr5852( i32 %vr5857 )

	; addrof TEXTURES

	; memclear TEXTURES
	%vr5859 = bitcast i32* %TEXTURES.133 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5859, i8 0, i32 16, i32 1, i1 false )

	; addrof TEXTURES

	; store Lt_0617 := TEXTURES
	%vr5861 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i32**
	store i32* %TEXTURES.133, i32** %vr5861

	; addrof TEXTURES

	; store Lt_0617+8 := TEXTURES
	%vr5863 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i32**
	%vr5864 = ptrtoint i32** %vr5863 to i64
	%vr5865 = add i64 %vr5864, 8
	%vr5866 = inttoptr i64 %vr5865 to i32**
	store i32* %TEXTURES.133, i32** %vr5866

	; store Lt_0617+16 := 16
	%vr5867 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5868 = ptrtoint i64* %vr5867 to i64
	%vr5869 = add i64 %vr5868, 16
	%vr5870 = inttoptr i64 %vr5869 to i64*
	store i64 16, i64* %vr5870

	; store Lt_0617+24 := 4
	%vr5871 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5872 = ptrtoint i64* %vr5871 to i64
	%vr5873 = add i64 %vr5872, 24
	%vr5874 = inttoptr i64 %vr5873 to i64*
	store i64 4, i64* %vr5874

	; store Lt_0617+32 := 1
	%vr5875 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5876 = ptrtoint i64* %vr5875 to i64
	%vr5877 = add i64 %vr5876, 32
	%vr5878 = inttoptr i64 %vr5877 to i64*
	store i64 1, i64* %vr5878

	; store Lt_0617+40 := 4
	%vr5879 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5880 = ptrtoint i64* %vr5879 to i64
	%vr5881 = add i64 %vr5880, 40
	%vr5882 = inttoptr i64 %vr5881 to i64*
	store i64 4, i64* %vr5882

	; store Lt_0617+48 := 0
	%vr5883 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5884 = ptrtoint i64* %vr5883 to i64
	%vr5885 = add i64 %vr5884, 48
	%vr5886 = inttoptr i64 %vr5885 to i64*
	store i64 0, i64* %vr5886

	; store Lt_0617+56 := 3
	%vr5887 = bitcast %MEMORY_T.FBARRAY1* %Lt_0617.134 to i64*
	%vr5888 = ptrtoint i64* %vr5887 to i64
	%vr5889 = add i64 %vr5888, 56
	%vr5890 = inttoptr i64 %vr5889 to i64*
	store i64 3, i64* %vr5890

	; addrof TEXTURES
	%vr5892 = bitcast i32* %TEXTURES.133 to i32*

	; call glGenTextures()
	; arg 4
	; arg vr5892
	call void @glGenTextures( i32 4, i32* %vr5892 )

	; branchbop BTEXTURED == 0
	%vr5894 = load i8, i8* %BTEXTURED.115
	%vr5893 = icmp eq i8 %vr5894, trunc (i64 0 to i8)
	br i1 %vr5893, label %.Lt_0619, label %.Lt_10EA
.Lt_10EA:

	; localvar TW
	%TW.157 = alloca i64

	; localvar TH
	%TH.158 = alloca i64

	; localvar TB
	%TB.159 = alloca i64

	; localvar TP
	%TP.160 = alloca i64

	; localvar PIXELS
	%PIXELS.161 = alloca i8*

	; localvar LT_0632
	%LT_0632.162 = alloca i64

	; branchbop IMG <> 0
	%vr5896 = load i8*, i8** %IMG.123
	%vr5895 = icmp ne i8* %vr5896, 0
	br i1 %vr5895, label %.Lt_061B, label %.Lt_10EB
.Lt_10EB:

	; call fb_GfxImageCreate()
	; arg 512
	; arg 512
	; arg 4278190080
	; arg 32
	; arg 0
	%vr5897 = call i8* @fb_GfxImageCreate( i32 512, i32 512, i32 4278190080, i32 32, i32 0 )

	; store IMG := vr5897
	store i8* %vr5897, i8** %IMG.123

	; branchbop BNOISE <> -1
	%vr5904 = load i8, i8* %BNOISE.116
	%vr5903 = icmp ne i8 %vr5904, trunc (i64 -1 to i8)
	br i1 %vr5903, label %.Lt_061D, label %.Lt_10EC
.Lt_10EC:

	; localvar Y
	%Y.163 = alloca i64

	; store Y := 0
	store i64 0, i64* %Y.163

	; label .Lt_0621
	br label %.Lt_0621
.Lt_0621:

	; localvar X
	%X.164 = alloca i64

	; store X := 0
	store i64 0, i64* %X.164

	; label .Lt_0625
	br label %.Lt_0625
.Lt_0625:

	; call fb_Rnd()
	; arg 1
	%vr5905 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr5905 * 255
	%vr5906 = fmul double %vr5905, 0x406FE00000000000

	; conv vr5906 => vr5907
	%vr5908 = call double @llvm.nearbyint.f64(double %vr5906)
	%vr5907 = fptoui double %vr5908 to i64

	; bop vr5907 SHL 16
	%vr5910 = bitcast i64 16 to i64
	%vr5909 = shl i64 %vr5907, %vr5910

	; call fb_Rnd()
	; arg 1
	%vr5911 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr5911 * 255
	%vr5912 = fmul double %vr5911, 0x406FE00000000000

	; conv vr5912 => vr5913
	%vr5914 = call double @llvm.nearbyint.f64(double %vr5912)
	%vr5913 = fptoui double %vr5914 to i64

	; bop vr5913 SHL 8
	%vr5916 = bitcast i64 8 to i64
	%vr5915 = shl i64 %vr5913, %vr5916

	; bop vr5909 OR vr5915
	%vr5917 = or i64 %vr5909, %vr5915

	; call fb_Rnd()
	; arg 1
	%vr5918 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr5918 * 255
	%vr5919 = fmul double %vr5918, 0x406FE00000000000

	; conv vr5919 => vr5920
	%vr5921 = call double @llvm.nearbyint.f64(double %vr5919)
	%vr5920 = fptoui double %vr5921 to i64

	; bop vr5917 OR vr5920
	%vr5922 = or i64 %vr5917, %vr5920

	; bop vr5922 OR 4278190080
	%vr5923 = or i64 %vr5922, 4278190080

	; conv vr5923 => vr5924
	%vr5924 = trunc i64 %vr5923 to i32

	; conv Y => vr5925
	%vr5926 = load i64, i64* %Y.163
	%vr5925 = sitofp i64 %vr5926 to float

	; conv X => vr5927
	%vr5928 = load i64, i64* %X.164
	%vr5927 = sitofp i64 %vr5928 to float

	; call fb_GfxPset()
	; arg IMG
	%vr5929 = load i8*, i8** %IMG.123
	; arg vr5927
	; arg vr5925
	; arg vr5924
	; arg 4
	; arg 0
	call void @fb_GfxPset( i8* %vr5929, float %vr5927, float %vr5925, i32 %vr5924, i32 4, i32 0 )

	; label .Lt_0623
	br label %.Lt_0623
.Lt_0623:

	; bop X + 1
	%vr5933 = load i64, i64* %X.164
	%vr5932 = add i64 %vr5933, 1

	; store X := vr5932
	store i64 %vr5932, i64* %X.164

	; label .Lt_0622
	br label %.Lt_0622
.Lt_0622:

	; branchbop X <= 512
	%vr5935 = load i64, i64* %X.164
	%vr5934 = icmp sle i64 %vr5935, 512
	br i1 %vr5934, label %.Lt_0625, label %.Lt_10ED
.Lt_10ED:

	; label .Lt_0624
	br label %.Lt_0624
.Lt_0624:

	; label .Lt_061F
	br label %.Lt_061F
.Lt_061F:

	; bop Y + 1
	%vr5937 = load i64, i64* %Y.163
	%vr5936 = add i64 %vr5937, 1

	; store Y := vr5936
	store i64 %vr5936, i64* %Y.163

	; label .Lt_061E
	br label %.Lt_061E
.Lt_061E:

	; branchbop Y <= 512
	%vr5939 = load i64, i64* %Y.163
	%vr5938 = icmp sle i64 %vr5939, 512
	br i1 %vr5938, label %.Lt_0621, label %.Lt_10EE
.Lt_10EE:

	; label .Lt_0620
	br label %.Lt_0620
.Lt_0620:

	; goto .Lt_061C
	br label %.Lt_061C
.Lt_10EF:

	; label .Lt_061D
	br label %.Lt_061D
.Lt_061D:

	; localvar Y
	%Y.165 = alloca i64

	; store Y := 0
	store i64 0, i64* %Y.165

	; label .Lt_0629
	br label %.Lt_0629
.Lt_0629:

	; localvar X
	%X.166 = alloca i64

	; store X := 0
	store i64 0, i64* %X.166

	; label .Lt_062D
	br label %.Lt_062D
.Lt_062D:

	; localvar LT_062F
	%LT_062F.167 = alloca i64

	; bop X + Y
	%vr5941 = load i64, i64* %X.166
	%vr5942 = load i64, i64* %Y.165
	%vr5940 = add i64 %vr5941, %vr5942

	; bop vr5940 MOD 2
	%vr5943 = srem i64 %vr5940, 2

	; branchbop vr5943 <> 0
	%vr5944 = icmp ne i64 %vr5943, 0
	br i1 %vr5944, label %.Lt_062E, label %.Lt_10F0
.Lt_10F0:

	; store LT_062F := 4294967295
	store i64 4294967295, i64* %LT_062F.167

	; goto .Lt_10F1
	br label %.Lt_10F1
.Lt_10F2:

	; label .Lt_062E
	br label %.Lt_062E
.Lt_062E:

	; store LT_062F := 4278190080
	store i64 4278190080, i64* %LT_062F.167

	; label .Lt_10F1
	br label %.Lt_10F1
.Lt_10F1:

	; conv LT_062F => vr5945
	%vr5946 = load i64, i64* %LT_062F.167
	%vr5945 = trunc i64 %vr5946 to i32

	; bop Y SHL 9
	%vr5948 = load i64, i64* %Y.165
	%vr5947 = shl i64 %vr5948, 9

	; conv vr5947 => vr5949
	%vr5949 = sitofp i64 %vr5947 to double

	; bop vr5949 / 16
	%vr5950 = fdiv double %vr5949, 0x4030000000000000

	; conv vr5950 => vr5951
	%vr5951 = fptrunc double %vr5950 to float

	; bop X SHL 9
	%vr5953 = load i64, i64* %X.166
	%vr5952 = shl i64 %vr5953, 9

	; conv vr5952 => vr5954
	%vr5954 = sitofp i64 %vr5952 to double

	; bop vr5954 / 16
	%vr5955 = fdiv double %vr5954, 0x4030000000000000

	; conv vr5955 => vr5956
	%vr5956 = fptrunc double %vr5955 to float

	; call fb_GfxLine()
	; arg IMG
	%vr5957 = load i8*, i8** %IMG.123
	; arg vr5956
	; arg vr5951
	; arg 31
	%vr5958 = fpext float 0x403F000000000000 to float
	; arg 31
	%vr5959 = fpext float 0x403F000000000000 to float
	; arg vr5945
	; arg 2
	; arg 65535
	; arg 1
	call void @fb_GfxLine( i8* %vr5957, float %vr5956, float %vr5951, float %vr5958, float %vr5959, i32 %vr5945, i32 2, i32 65535, i32 1 )

	; label .Lt_062B
	br label %.Lt_062B
.Lt_062B:

	; bop X + 1
	%vr5964 = load i64, i64* %X.166
	%vr5963 = add i64 %vr5964, 1

	; store X := vr5963
	store i64 %vr5963, i64* %X.166

	; label .Lt_062A
	br label %.Lt_062A
.Lt_062A:

	; branchbop X <= 32
	%vr5966 = load i64, i64* %X.166
	%vr5965 = icmp sle i64 %vr5966, 32
	br i1 %vr5965, label %.Lt_062D, label %.Lt_10F3
.Lt_10F3:

	; label .Lt_062C
	br label %.Lt_062C
.Lt_062C:

	; label .Lt_0627
	br label %.Lt_0627
.Lt_0627:

	; bop Y + 1
	%vr5968 = load i64, i64* %Y.165
	%vr5967 = add i64 %vr5968, 1

	; store Y := vr5967
	store i64 %vr5967, i64* %Y.165

	; label .Lt_0626
	br label %.Lt_0626
.Lt_0626:

	; branchbop Y <= 32
	%vr5970 = load i64, i64* %Y.165
	%vr5969 = icmp sle i64 %vr5970, 32
	br i1 %vr5969, label %.Lt_0629, label %.Lt_10F4
.Lt_10F4:

	; label .Lt_0628
	br label %.Lt_0628
.Lt_0628:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0630
	%vr5972 = bitcast i8* bitcast ([10 x i8]* @Lt_0630 to i8*) to i8*
	; arg 9
	%vr5971 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5972, i64 9 )

	; call fb_GfxDrawString()
	; arg IMG
	%vr5975 = load i8*, i8** %IMG.123
	; arg 0
	%vr5976 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr5977 = fpext float 0x0000000000000000 to float
	; arg 4
	; arg vr5971
	%vr5979 = bitcast %FBSTRING* %vr5971 to %FBSTRING*
	; arg 4294901760
	; arg 0
	%vr5981 = bitcast i8* 0 to i8*
	; arg 0
	; arg 0
	; arg 0
	; arg 0
	%vr5974 = call i64 @fb_GfxDrawString( i8* %vr5975, float %vr5976, float %vr5977, i32 4, %FBSTRING* %vr5979, i32 4294901760, i8* %vr5981, i32 0, i8* 0, i8* 0, i8* 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0631
	%vr5984 = bitcast i8* bitcast ([14 x i8]* @Lt_0631 to i8*) to i8*
	; arg 13
	%vr5983 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5984, i64 13 )

	; call fb_GfxDrawString()
	; arg IMG
	%vr5987 = load i8*, i8** %IMG.123
	; arg 24
	%vr5988 = fpext float 0x4038000000000000 to float
	; arg 24
	%vr5989 = fpext float 0x4038000000000000 to float
	; arg 4
	; arg vr5983
	%vr5991 = bitcast %FBSTRING* %vr5983 to %FBSTRING*
	; arg 4278255360
	; arg 0
	%vr5993 = bitcast i8* 0 to i8*
	; arg 0
	; arg 0
	; arg 0
	; arg 0
	%vr5986 = call i64 @fb_GfxDrawString( i8* %vr5987, float %vr5988, float %vr5989, i32 4, %FBSTRING* %vr5991, i32 4278255360, i8* %vr5993, i32 0, i8* 0, i8* 0, i8* 0 )

	; label .Lt_061C
	br label %.Lt_061C
.Lt_061C:

	; label .Lt_061B
	br label %.Lt_061B
.Lt_061B:

	; label .Lt_061A
	br label %.Lt_061A
.Lt_061A:

	; addrof TW

	; memclear TW
	%vr5996 = bitcast i64* %TW.157 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5996, i8 0, i32 8, i32 1, i1 false )

	; addrof TH

	; memclear TH
	%vr5998 = bitcast i64* %TH.158 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5998, i8 0, i32 8, i32 1, i1 false )

	; addrof TB

	; memclear TB
	%vr6000 = bitcast i64* %TB.159 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6000, i8 0, i32 8, i32 1, i1 false )

	; addrof TP

	; memclear TP
	%vr6002 = bitcast i64* %TP.160 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6002, i8 0, i32 8, i32 1, i1 false )

	; addrof PIXELS

	; memclear PIXELS
	%vr6004 = bitcast i8** %PIXELS.161 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6004, i8 0, i32 8, i32 1, i1 false )

	; store LT_0632 := 0
	store i64 0, i64* %LT_0632.162

	; addrof PIXELS

	; addrof TP

	; addrof TB

	; addrof TH

	; addrof TW

	; call fb_GfxImageInfo()
	; arg IMG
	%vr6011 = load i8*, i8** %IMG.123
	%vr6012 = bitcast i8* %vr6011 to i8*
	; arg TW
	; arg TH
	; arg TB
	; arg TP
	; arg PIXELS
	; arg LT_0632
	%vr6010 = call i32 @fb_GfxImageInfo( i8* %vr6012, i64* %TW.157, i64* %TH.158, i64* %TB.159, i64* %TP.160, i8** %PIXELS.161, i64* %LT_0632.162 )
	%vr6014 = load i32, i32* %TEXTURES.133
	%vr6013 = bitcast i32 %vr6014 to i32

	; call glBindTexture()
	; arg 3553
	; arg vr6013
	call void @glBindTexture( i32 3553, i32 %vr6013 )

	; branchbop BMIPMAP == 0
	%vr6016 = load i8, i8* %BMIPMAP.121
	%vr6015 = icmp eq i8 %vr6016, trunc (i64 0 to i8)
	br i1 %vr6015, label %.Lt_0634, label %.Lt_10F5
.Lt_10F5:

	; call glTexParameteri()
	; arg 3553
	; arg 33169
	; arg 1
	call void @glTexParameteri( i32 3553, i32 33169, i32 1 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9987
	call void @glTexParameteri( i32 3553, i32 10241, i32 9987 )

	; label .Lt_0634
	br label %.Lt_0634
.Lt_0634:

	; label .Lt_0633
	br label %.Lt_0633
.Lt_0633:

	; branchbop BREPEAT == 0
	%vr6018 = load i8, i8* %BREPEAT.122
	%vr6017 = icmp eq i8 %vr6018, trunc (i64 0 to i8)
	br i1 %vr6017, label %.Lt_0636, label %.Lt_10F6
.Lt_10F6:

	; call glTexParameteri()
	; arg 3553
	; arg 10242
	; arg 10497
	call void @glTexParameteri( i32 3553, i32 10242, i32 10497 )

	; call glTexParameteri()
	; arg 3553
	; arg 10243
	; arg 10497
	call void @glTexParameteri( i32 3553, i32 10243, i32 10497 )

	; label .Lt_0636
	br label %.Lt_0636
.Lt_0636:

	; label .Lt_0635
	br label %.Lt_0635
.Lt_0635:

	; branchbop BLINEAR == 0
	%vr6020 = load i8, i8* %BLINEAR.117
	%vr6019 = icmp eq i8 %vr6020, trunc (i64 0 to i8)
	br i1 %vr6019, label %.Lt_0638, label %.Lt_10F7
.Lt_10F7:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10241, i32 9729 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10240, i32 9729 )

	; goto .Lt_0637
	br label %.Lt_0637
.Lt_10F8:

	; label .Lt_0638
	br label %.Lt_0638
.Lt_0638:

	; branchbop BNEAREST == 0
	%vr6022 = load i8, i8* %BNEAREST.118
	%vr6021 = icmp eq i8 %vr6022, trunc (i64 0 to i8)
	br i1 %vr6021, label %.Lt_0639, label %.Lt_10F9
.Lt_10F9:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10241, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; goto .Lt_0637
	br label %.Lt_0637
.Lt_10FA:

	; label .Lt_0639
	br label %.Lt_0639
.Lt_0639:

	; branchbop BNEARESTLINEAR == 0
	%vr6024 = load i8, i8* %BNEARESTLINEAR.119
	%vr6023 = icmp eq i8 %vr6024, trunc (i64 0 to i8)
	br i1 %vr6023, label %.Lt_063A, label %.Lt_10FB
.Lt_10FB:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10241, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10240, i32 9729 )

	; goto .Lt_0637
	br label %.Lt_0637
.Lt_10FC:

	; label .Lt_063A
	br label %.Lt_063A
.Lt_063A:

	; branchbop BLINEARNEAREST == 0
	%vr6026 = load i8, i8* %BLINEARNEAREST.120
	%vr6025 = icmp eq i8 %vr6026, trunc (i64 0 to i8)
	br i1 %vr6025, label %.Lt_063B, label %.Lt_10FD
.Lt_10FD:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10241, i32 9729 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; label .Lt_063B
	br label %.Lt_063B
.Lt_063B:

	; label .Lt_0637
	br label %.Lt_0637
.Lt_0637:

	; conv TH => vr6027
	%vr6028 = load i64, i64* %TH.158
	%vr6027 = trunc i64 %vr6028 to i32

	; conv TW => vr6029
	%vr6030 = load i64, i64* %TW.157
	%vr6029 = trunc i64 %vr6030 to i32

	; call glTexImage2D()
	; arg 3553
	; arg 0
	; arg 6408
	; arg vr6029
	; arg vr6027
	; arg 0
	; arg 32993
	; arg 5121
	; arg PIXELS
	%vr6031 = load i8*, i8** %PIXELS.161
	%vr6032 = bitcast i8* %vr6031 to i8*
	call void @glTexImage2D( i32 3553, i32 0, i32 6408, i32 %vr6029, i32 %vr6027, i32 0, i32 32993, i32 5121, i8* %vr6032 )

	; call fb_GfxImageDestroy()
	; arg IMG
	%vr6033 = load i8*, i8** %IMG.123
	%vr6034 = bitcast i8* %vr6033 to i8*
	call void @fb_GfxImageDestroy( i8* %vr6034 )

	; store IMG := 0
	store i8* 0, i8** %IMG.123

	; call glBindTexture()
	; arg 3553
	; arg 0
	call void @glBindTexture( i32 3553, i32 0 )

	; label .Lt_0619
	br label %.Lt_0619
.Lt_0619:

	; label .Lt_0618
	br label %.Lt_0618
.Lt_0618:

	; callptr GLGETUNIFORMLOCATION
	%vr6036 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6037 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6038 = ptrtoint i32* %vr6037 to i64
	%vr6039 = add i64 %vr6038, 4
	%vr6040 = inttoptr i64 %vr6039 to i32*
	%vr6041 = load i32, i32* %vr6040
	; arg Lt_063C
	%vr6042 = bitcast i8* bitcast ([10 x i8]* @Lt_063C to i8*) to i8*
	%vr6035 = call i32 %vr6036( i32 %vr6041, i8* %vr6042 )

	; store ICHANNEL0 := vr6035
	store i32 %vr6035, i32* %ICHANNEL0.135

	; conv ICHANNEL0 => vr6043
	%vr6044 = load i32, i32* %ICHANNEL0.135
	%vr6043 = sext i32 %vr6044 to i64

	; branchbop vr6043 <= -1
	%vr6045 = icmp sle i64 %vr6043, -1
	br i1 %vr6045, label %.Lt_063E, label %.Lt_10FE
.Lt_10FE:

	; callptr GLUNIFORM1I
	%vr6046 = load void ( i32, i32 )*, void ( i32, i32 )** @GLUNIFORM1I
	; arg ICHANNEL0
	%vr6047 = load i32, i32* %ICHANNEL0.135
	; arg 0
	call void %vr6046( i32 %vr6047, i32 0 )

	; call glActiveTexture()
	; arg 33984
	call void @glActiveTexture( i32 33984 )
	%vr6049 = load i32, i32* %TEXTURES.133
	%vr6048 = bitcast i32 %vr6049 to i32

	; call glBindTexture()
	; arg 3553
	; arg vr6048
	call void @glBindTexture( i32 3553, i32 %vr6048 )

	; label .Lt_063E
	br label %.Lt_063E
.Lt_063E:

	; label .Lt_063D
	br label %.Lt_063D
.Lt_063D:

	; callptr GLGETUNIFORMLOCATION
	%vr6051 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6052 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6053 = ptrtoint i32* %vr6052 to i64
	%vr6054 = add i64 %vr6053, 4
	%vr6055 = inttoptr i64 %vr6054 to i32*
	%vr6056 = load i32, i32* %vr6055
	; arg Lt_063F
	%vr6057 = bitcast i8* bitcast ([12 x i8]* @Lt_063F to i8*) to i8*
	%vr6050 = call i32 %vr6051( i32 %vr6056, i8* %vr6057 )

	; store IGLOBALTIME := vr6050
	store i32 %vr6050, i32* %IGLOBALTIME.136

	; callptr GLGETUNIFORMLOCATION
	%vr6059 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6060 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6061 = ptrtoint i32* %vr6060 to i64
	%vr6062 = add i64 %vr6061, 4
	%vr6063 = inttoptr i64 %vr6062 to i32*
	%vr6064 = load i32, i32* %vr6063
	; arg Lt_0640
	%vr6065 = bitcast i8* bitcast ([6 x i8]* @Lt_0640 to i8*) to i8*
	%vr6058 = call i32 %vr6059( i32 %vr6064, i8* %vr6065 )

	; store ITIME := vr6058
	store i32 %vr6058, i32* %ITIME.137

	; callptr GLGETUNIFORMLOCATION
	%vr6067 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6068 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6069 = ptrtoint i32* %vr6068 to i64
	%vr6070 = add i64 %vr6069, 4
	%vr6071 = inttoptr i64 %vr6070 to i32*
	%vr6072 = load i32, i32* %vr6071
	; arg Lt_0641
	%vr6073 = bitcast i8* bitcast ([12 x i8]* @Lt_0641 to i8*) to i8*
	%vr6066 = call i32 %vr6067( i32 %vr6072, i8* %vr6073 )

	; store IRESOLUTION := vr6066
	store i32 %vr6066, i32* %IRESOLUTION.138

	; callptr GLGETUNIFORMLOCATION
	%vr6075 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6076 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6077 = ptrtoint i32* %vr6076 to i64
	%vr6078 = add i64 %vr6077, 4
	%vr6079 = inttoptr i64 %vr6078 to i32*
	%vr6080 = load i32, i32* %vr6079
	; arg Lt_0642
	%vr6081 = bitcast i8* bitcast ([7 x i8]* @Lt_0642 to i8*) to i8*
	%vr6074 = call i32 %vr6075( i32 %vr6080, i8* %vr6081 )

	; store IMOUSE := vr6074
	store i32 %vr6074, i32* %IMOUSE.139

	; callptr GLGETUNIFORMLOCATION
	%vr6083 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr6084 = bitcast %SHADERTOY* %SHADER.131 to i32*
	%vr6085 = ptrtoint i32* %vr6084 to i64
	%vr6086 = add i64 %vr6085, 4
	%vr6087 = inttoptr i64 %vr6086 to i32*
	%vr6088 = load i32, i32* %vr6087
	; arg Lt_0643
	%vr6089 = bitcast i8* bitcast ([7 x i8]* @Lt_0643 to i8*) to i8*
	%vr6082 = call i32 %vr6083( i32 %vr6088, i8* %vr6089 )

	; store IFRAME := vr6082
	store i32 %vr6082, i32* %IFRAME.140

	; conv IRESOLUTION => vr6090
	%vr6091 = load i32, i32* %IRESOLUTION.138
	%vr6090 = sext i32 %vr6091 to i64

	; branchbop vr6090 <= -1
	%vr6092 = icmp sle i64 %vr6090, -1
	br i1 %vr6092, label %.Lt_0645, label %.Lt_10FF
.Lt_10FF:

	; callptr GLUNIFORM3F
	%vr6093 = load void ( i32, float, float, float )*, void ( i32, float, float, float )** @GLUNIFORM3F
	; arg IRESOLUTION
	%vr6094 = load i32, i32* %IRESOLUTION.138
	; arg V3
	%vr6095 = bitcast %VEC3* %V3.130 to float*
	%vr6096 = load float, float* %vr6095
	; arg V3+4
	%vr6097 = bitcast %VEC3* %V3.130 to float*
	%vr6098 = ptrtoint float* %vr6097 to i64
	%vr6099 = add i64 %vr6098, 4
	%vr6100 = inttoptr i64 %vr6099 to float*
	%vr6101 = load float, float* %vr6100
	; arg V3+8
	%vr6102 = bitcast %VEC3* %V3.130 to float*
	%vr6103 = ptrtoint float* %vr6102 to i64
	%vr6104 = add i64 %vr6103, 8
	%vr6105 = inttoptr i64 %vr6104 to float*
	%vr6106 = load float, float* %vr6105
	call void %vr6093( i32 %vr6094, float %vr6096, float %vr6101, float %vr6106 )

	; label .Lt_0645
	br label %.Lt_0645
.Lt_0645:

	; store OX := -1
	store i64 -1, i64* %OX.141

	; store OY := -1
	store i64 -1, i64* %OY.142

	; store OB := -1
	store i64 -1, i64* %OB.143

	; addrof MX

	; memclear MX
	%vr6108 = bitcast i64* %MX.144 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6108, i8 0, i32 8, i32 1, i1 false )

	; addrof MY

	; memclear MY
	%vr6110 = bitcast i64* %MY.145 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6110, i8 0, i32 8, i32 1, i1 false )

	; addrof MB

	; memclear MB
	%vr6112 = bitcast i64* %MB.146 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6112, i8 0, i32 8, i32 1, i1 false )

	; addrof FRAMES

	; memclear FRAMES
	%vr6114 = bitcast i64* %FRAMES.147 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6114, i8 0, i32 8, i32 1, i1 false )

	; addrof FPS

	; memclear FPS
	%vr6116 = bitcast i64* %FPS.148 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6116, i8 0, i32 8, i32 1, i1 false )

	; addrof TRUNTIME

	; memclear TRUNTIME
	%vr6118 = bitcast double* %TRUNTIME.149 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6118, i8 0, i32 8, i32 1, i1 false )

	; call fb_Timer()
	%vr6119 = call double @fb_Timer(  )

	; store TSTART := vr6119
	store double %vr6119, double* %TSTART.150

	; addrof TNOW

	; memclear TNOW
	%vr6121 = bitcast double* %TNOW.151 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6121, i8 0, i32 8, i32 1, i1 false )

	; store TLAST := TSTART
	%vr6122 = load double, double* %TSTART.150
	store double %vr6122, double* %TLAST.152

	; label .Lt_0646
	br label %.Lt_0646
.Lt_0646:
	%vr6123 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*

	; call fb_Inkey()
	%vr6124 = call %FBSTRING* @fb_Inkey(  )

	; call fb_StrCompare()
	; arg vr6124
	%vr6126 = bitcast %FBSTRING* %vr6124 to i8*
	; arg -1
	; arg vr6123
	; arg 1
	%vr6125 = call i32 @fb_StrCompare( i8* %vr6126, i64 -1, i8* %vr6123, i64 1 )

	; conv vr6125 => vr6129
	%vr6129 = sext i32 %vr6125 to i64

	; branchbop vr6129 <> 0
	%vr6130 = icmp ne i64 %vr6129, 0
	br i1 %vr6130, label %.Lt_0647, label %.Lt_1100
.Lt_1100:

	; call fb_Timer()
	%vr6131 = call double @fb_Timer(  )

	; store TNOW := vr6131
	store double %vr6131, double* %TNOW.151

	; bop TNOW - TSTART
	%vr6133 = load double, double* %TNOW.151
	%vr6134 = load double, double* %TSTART.150
	%vr6132 = fsub double %vr6133, %vr6134

	; store TRUNTIME := vr6132
	store double %vr6132, double* %TRUNTIME.149

	; conv ITIME => vr6135
	%vr6136 = load i32, i32* %ITIME.137
	%vr6135 = sext i32 %vr6136 to i64

	; branchbop vr6135 <= -1
	%vr6137 = icmp sle i64 %vr6135, -1
	br i1 %vr6137, label %.Lt_0649, label %.Lt_1101
.Lt_1101:

	; conv TRUNTIME => vr6138
	%vr6139 = load double, double* %TRUNTIME.149
	%vr6138 = fptrunc double %vr6139 to float

	; callptr GLUNIFORM1F
	%vr6140 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg ITIME
	%vr6141 = load i32, i32* %ITIME.137
	; arg vr6138
	call void %vr6140( i32 %vr6141, float %vr6138 )

	; goto .Lt_0648
	br label %.Lt_0648
.Lt_1102:

	; label .Lt_0649
	br label %.Lt_0649
.Lt_0649:

	; conv IGLOBALTIME => vr6142
	%vr6143 = load i32, i32* %IGLOBALTIME.136
	%vr6142 = sext i32 %vr6143 to i64

	; branchbop vr6142 <= -1
	%vr6144 = icmp sle i64 %vr6142, -1
	br i1 %vr6144, label %.Lt_064A, label %.Lt_1103
.Lt_1103:

	; conv TRUNTIME => vr6145
	%vr6146 = load double, double* %TRUNTIME.149
	%vr6145 = fptrunc double %vr6146 to float

	; callptr GLUNIFORM1F
	%vr6147 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg IGLOBALTIME
	%vr6148 = load i32, i32* %IGLOBALTIME.136
	; arg vr6145
	call void %vr6147( i32 %vr6148, float %vr6145 )

	; label .Lt_064A
	br label %.Lt_064A
.Lt_064A:

	; label .Lt_0648
	br label %.Lt_0648
.Lt_0648:

	; conv IFRAME => vr6149
	%vr6150 = load i32, i32* %IFRAME.140
	%vr6149 = sext i32 %vr6150 to i64

	; branchbop vr6149 <= -1
	%vr6151 = icmp sle i64 %vr6149, -1
	br i1 %vr6151, label %.Lt_064C, label %.Lt_1104
.Lt_1104:

	; conv FRAMES => vr6152
	%vr6153 = load i64, i64* %FRAMES.147
	%vr6152 = sitofp i64 %vr6153 to float

	; callptr GLUNIFORM1F
	%vr6154 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg IFRAME
	%vr6155 = load i32, i32* %IFRAME.140
	; arg vr6152
	call void %vr6154( i32 %vr6155, float %vr6152 )

	; label .Lt_064C
	br label %.Lt_064C
.Lt_064C:

	; conv IMOUSE => vr6156
	%vr6157 = load i32, i32* %IMOUSE.139
	%vr6156 = sext i32 %vr6157 to i64

	; branchbop vr6156 <= -1
	%vr6158 = icmp sle i64 %vr6156, -1
	br i1 %vr6158, label %.Lt_064E, label %.Lt_1105
.Lt_1105:

	; localvar LT_064F
	%LT_064F.168 = alloca i64

	; localvar LT_0650
	%LT_0650.169 = alloca i64

	; store LT_0650 := 0
	store i64 0, i64* %LT_0650.169

	; addrof MB
	%vr6160 = bitcast i64* %MB.146 to i64*

	; store LT_064F := 0
	store i64 0, i64* %LT_064F.168

	; addrof MY
	%vr6162 = bitcast i64* %MY.145 to i64*

	; addrof MX
	%vr6164 = bitcast i64* %MX.144 to i64*

	; call fb_GetMouse64()
	; arg vr6164
	; arg vr6162
	; arg LT_064F
	; arg vr6160
	; arg LT_0650
	%vr6165 = call i32 @fb_GetMouse64( i64* %vr6164, i64* %vr6162, i64* %LT_064F.168, i64* %vr6160, i64* %LT_0650.169 )

	; conv vr6165 => vr6166
	%vr6166 = sext i32 %vr6165 to i64

	; branchbop vr6166 <> 0
	%vr6167 = icmp ne i64 %vr6166, 0
	br i1 %vr6167, label %.Lt_0652, label %.Lt_1106
.Lt_1106:

	; localvar LT_0654
	%LT_0654.170 = alloca i64

	; localvar LT_0656
	%LT_0656.171 = alloca i64

	; branchbop OX <> MX
	%vr6169 = load i64, i64* %OX.141
	%vr6170 = load i64, i64* %MX.144
	%vr6168 = icmp ne i64 %vr6169, %vr6170
	br i1 %vr6168, label %.Lt_0653, label %.Lt_1107
.Lt_1107:

	; bop OY <> MY
	%vr6172 = load i64, i64* %OY.142
	%vr6173 = load i64, i64* %MY.145
	%vr6171 = icmp ne i64 %vr6172, %vr6173
	%vr6174 = sext i1 %vr6171 to i64

	; store LT_0654 := vr6174
	store i64 %vr6174, i64* %LT_0654.170

	; goto .Lt_1108
	br label %.Lt_1108
.Lt_1109:

	; label .Lt_0653
	br label %.Lt_0653
.Lt_0653:

	; store LT_0654 := -1
	store i64 -1, i64* %LT_0654.170

	; label .Lt_1108
	br label %.Lt_1108
.Lt_1108:

	; branchbop LT_0654 <> 0
	%vr6176 = load i64, i64* %LT_0654.170
	%vr6175 = icmp ne i64 %vr6176, 0
	br i1 %vr6175, label %.Lt_0655, label %.Lt_110A
.Lt_110A:

	; bop OB <> MB
	%vr6178 = load i64, i64* %OB.143
	%vr6179 = load i64, i64* %MB.146
	%vr6177 = icmp ne i64 %vr6178, %vr6179
	%vr6180 = sext i1 %vr6177 to i64

	; store LT_0656 := vr6180
	store i64 %vr6180, i64* %LT_0656.171

	; goto .Lt_110B
	br label %.Lt_110B
.Lt_110C:

	; label .Lt_0655
	br label %.Lt_0655
.Lt_0655:

	; store LT_0656 := -1
	store i64 -1, i64* %LT_0656.171

	; label .Lt_110B
	br label %.Lt_110B
.Lt_110B:

	; branchbop LT_0656 == 0
	%vr6182 = load i64, i64* %LT_0656.171
	%vr6181 = icmp eq i64 %vr6182, 0
	br i1 %vr6181, label %.Lt_0658, label %.Lt_110D
.Lt_110D:

	; conv MB => vr6183
	%vr6184 = load i64, i64* %MB.146
	%vr6183 = sitofp i64 %vr6184 to float

	; bop SCR_H - MY
	%vr6186 = load i64, i64* %SCR_H.125
	%vr6187 = load i64, i64* %MY.145
	%vr6185 = sub i64 %vr6186, %vr6187

	; conv vr6185 => vr6188
	%vr6188 = sitofp i64 %vr6185 to float

	; conv MX => vr6189
	%vr6190 = load i64, i64* %MX.144
	%vr6189 = sitofp i64 %vr6190 to float

	; callptr GLUNIFORM4F
	%vr6191 = load void ( i32, float, float, float, float )*, void ( i32, float, float, float, float )** @GLUNIFORM4F
	; arg IMOUSE
	%vr6192 = load i32, i32* %IMOUSE.139
	; arg vr6189
	; arg vr6188
	; arg vr6183
	; arg 1
	call void %vr6191( i32 %vr6192, float %vr6189, float %vr6188, float %vr6183, float 0x3FF0000000000000 )

	; store OX := MX
	%vr6193 = load i64, i64* %MX.144
	store i64 %vr6193, i64* %OX.141

	; store OY := MY
	%vr6194 = load i64, i64* %MY.145
	store i64 %vr6194, i64* %OY.142

	; store OB := MB
	%vr6195 = load i64, i64* %MB.146
	store i64 %vr6195, i64* %OB.143

	; label .Lt_0658
	br label %.Lt_0658
.Lt_0658:

	; label .Lt_0657
	br label %.Lt_0657
.Lt_0657:

	; label .Lt_0652
	br label %.Lt_0652
.Lt_0652:

	; label .Lt_0651
	br label %.Lt_0651
.Lt_0651:

	; label .Lt_064E
	br label %.Lt_064E
.Lt_064E:

	; label .Lt_064D
	br label %.Lt_064D
.Lt_064D:

	; call glRectf()
	; arg -1
	; arg -1
	; arg 1
	; arg 1
	call void @glRectf( float 0xBFF0000000000000, float 0xBFF0000000000000, float 0x3FF0000000000000, float 0x3FF0000000000000 )

	; call fb_GfxFlip()
	; arg -1
	; arg -1
	%vr6196 = call i32 @fb_GfxFlip( i32 -1, i32 -1 )

	; bop FRAMES + 1
	%vr6200 = load i64, i64* %FRAMES.147
	%vr6199 = add i64 %vr6200, 1

	; store FRAMES := vr6199
	store i64 %vr6199, i64* %FRAMES.147

	; bop FRAMES MOD 60
	%vr6202 = load i64, i64* %FRAMES.147
	%vr6201 = srem i64 %vr6202, 60

	; branchbop vr6201 <> 0
	%vr6203 = icmp ne i64 %vr6201, 0
	br i1 %vr6203, label %.Lt_065A, label %.Lt_110E
.Lt_110E:

	; localvar LT_065C
	%LT_065C.172 = alloca %FBSTRING

	; localvar LT_065D
	%LT_065D.173 = alloca %FBSTRING

	; call fb_Timer()
	%vr6204 = call double @fb_Timer(  )

	; store TNOW := vr6204
	store double %vr6204, double* %TNOW.151

	; bop TNOW - TLAST
	%vr6206 = load double, double* %TNOW.151
	%vr6207 = load double, double* %TLAST.152
	%vr6205 = fsub double %vr6206, %vr6207

	; bop 60 / vr6205
	%vr6208 = fdiv double 0x404E000000000000, %vr6205

	; conv vr6208 => vr6209
	%vr6210 = call double @llvm.nearbyint.f64(double %vr6208)
	%vr6209 = fptosi double %vr6210 to i64

	; store FPS := vr6209
	store i64 %vr6209, i64* %FPS.148

	; store TLAST := TNOW
	%vr6211 = load double, double* %TNOW.151
	store double %vr6211, double* %TLAST.152

	; call fb_LongintToStr()
	; arg FPS
	%vr6214 = load i64, i64* %FPS.148
	%vr6213 = call %FBSTRING* @fb_LongintToStr( i64 %vr6214 )
	%vr6216 = bitcast i8* bitcast ([7 x i8]* @Lt_065B to i8*) to i8*
	%vr6217 = bitcast %FBSTRING* @FILENAME to i8*

	; addrof LT_065C

	; memclear LT_065C
	%vr6219 = bitcast %FBSTRING* %LT_065C.172 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6219, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_065C

	; call fb_StrConcat()
	; arg LT_065C
	; arg vr6217
	; arg -1
	; arg vr6216
	; arg 7
	%vr6221 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_065C.172, i8* %vr6217, i64 -1, i8* %vr6216, i64 7 )

	; addrof LT_065D

	; memclear LT_065D
	%vr6225 = bitcast %FBSTRING* %LT_065D.173 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6225, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_065D

	; call fb_StrConcat()
	; arg LT_065D
	; arg vr6221
	%vr6228 = bitcast %FBSTRING* %vr6221 to i8*
	; arg -1
	; arg vr6213
	%vr6230 = bitcast %FBSTRING* %vr6213 to i8*
	; arg -1
	%vr6227 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_065D.173, i8* %vr6228, i64 -1, i8* %vr6230, i64 -1 )

	; call fb_GfxSetWindowTitle()
	; arg vr6227
	%vr6232 = bitcast %FBSTRING* %vr6227 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr6232 )

	; label .Lt_065A
	br label %.Lt_065A
.Lt_065A:

	; label .Lt_0659
	br label %.Lt_0659
.Lt_0659:

	; goto .Lt_0646
	br label %.Lt_0646
.Lt_110F:

	; label .Lt_0647
	br label %.Lt_0647
.Lt_0647:
	%vr6233 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr6234 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr6234
	; arg -1
	; arg vr6233
	; arg 1
	; arg 0
	%vr6235 = call %FBSTRING* @fb_StrAssign( i8* %vr6234, i64 -1, i8* %vr6233, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr6239 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6248 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6248, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr6250 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr6251 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr6247
	%vr6254 = bitcast %FBSTRING* %vr6247 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr6250, float %vr6251, i32 4278190080, i32 0, %FBSTRING* %vr6254, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store double 0x0000000000000000, double* @OFFSET

	; label .Lt_0661
	br label %.Lt_0661
.Lt_0661:

	; bop SYS_OFFSET + 299
	%vr6258 = load double, double* @SYS_OFFSET
	%vr6257 = fadd double %vr6258, 0x4072B00000000000

	; conv vr6257 => vr6259
	%vr6260 = call double @llvm.nearbyint.f64(double %vr6257)
	%vr6259 = fptosi double %vr6260 to i64

	; bop vr6259 SHL 3
	%vr6261 = shl i64 %vr6259, 3

	; bop THIS + vr6261
	%vr6263 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr6264 = inttoptr i64 %vr6261 to %MEMORY_T*
	%vr6262 = add %MEMORY_T* %vr6263, %vr6264

	; bop vr6262 + OFFSET
	%vr6266 = ptrtoint %MEMORY_T* %vr6262 to i64
	%vr6267 = inttoptr i64 %vr6266 to double*
	%vr6268 = load double, double* %vr6267
	%vr6269 = load double, double* @OFFSET
	%vr6265 = fadd double %vr6268, %vr6269

	; conv vr6265 => vr6270
	%vr6271 = call double @llvm.nearbyint.f64(double %vr6265)
	%vr6270 = fptoui double %vr6271 to i64

	; call POKE64()
	; arg THIS
	%vr6272 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr6270
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr6272, i64 %vr6270, i64 32 )

	; label .Lt_065F
	br label %.Lt_065F
.Lt_065F:

	; bop OFFSET + 1
	%vr6274 = load double, double* @OFFSET
	%vr6273 = fadd double %vr6274, 0x3FF0000000000000

	; store OFFSET := vr6273
	store double %vr6273, double* @OFFSET

	; label .Lt_065E
	br label %.Lt_065E
.Lt_065E:

	; branchbop OFFSET <= 1024
	%vr6276 = load double, double* @OFFSET
	%vr6275 = icmp sle double %vr6276, 0x4090000000000000
	br i1 %vr6275, label %.Lt_0661, label %.Lt_1110
.Lt_1110:

	; label .Lt_0660
	br label %.Lt_0660
.Lt_0660:

	; addrof SHADER

	; call ()
	; arg SHADER
	call void @_ZN9SHADERTOYD1Ev( %SHADERTOY* %SHADER.131 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1111:

	; label .Lt_0604
	br label %.Lt_0604
.Lt_0604:

	; conv ADR => vr6279
	%vr6280 = load i64, i64* %ADR.110
	%vr6279 = uitofp i64 %vr6280 to double

	; bop SYS_OFFSET + 162
	%vr6282 = load double, double* @SYS_OFFSET
	%vr6281 = fadd double %vr6282, 0x4064400000000000

	; branchbop vr6279 <> vr6281
	%vr6283 = icmp ne double %vr6279, %vr6281
	br i1 %vr6283, label %.Lt_0662, label %.Lt_1112
.Lt_1112:

	; label .Lt_0663
	br label %.Lt_0663
.Lt_0663:

	; branchbop V <> 0
	%vr6286 = load i64, i64* %V.111
	%vr6285 = icmp ne i64 %vr6286, 0
	br i1 %vr6285, label %.Lt_0665, label %.Lt_1113
.Lt_1113:

	; label .Lt_0666
	br label %.Lt_0666
.Lt_0666:
	%vr6288 = bitcast i8* bitcast ([9 x i8]* @Lt_0667 to i8*) to i8*
	%vr6289 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr6289
	; arg -1
	; arg vr6288
	; arg 9
	; arg 0
	%vr6290 = call %FBSTRING* @fb_StrAssign( i8* %vr6289, i64 -1, i8* %vr6288, i64 9, i32 0 )
	%vr6294 = bitcast %FBSTRING* @FILENAME to %FBSTRING*

	; call fb_FileOpen()
	; arg vr6294
	; arg 3
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr6295 = call i32 @fb_FileOpen( %FBSTRING* %vr6294, i32 3, i32 0, i32 0, i32 1, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0668
	%vr6302 = bitcast i8* bitcast ([19 x i8]* @Lt_0668 to i8*) to i8*
	; arg 18
	%vr6301 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6302, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr6301
	%vr6305 = bitcast %FBSTRING* %vr6301 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6305, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0669
	%vr6308 = bitcast i8* bitcast ([85 x i8]* @Lt_0669 to i8*) to i8*
	; arg 84
	%vr6307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6308, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr6307
	%vr6311 = bitcast %FBSTRING* %vr6307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6311, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066A
	%vr6314 = bitcast i8* bitcast ([84 x i8]* @Lt_066A to i8*) to i8*
	; arg 83
	%vr6313 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6314, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr6313
	%vr6317 = bitcast %FBSTRING* %vr6313 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6317, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066B
	%vr6320 = bitcast i8* bitcast ([83 x i8]* @Lt_066B to i8*) to i8*
	; arg 82
	%vr6319 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6320, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr6319
	%vr6323 = bitcast %FBSTRING* %vr6319 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6323, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066C
	%vr6326 = bitcast i8* bitcast ([75 x i8]* @Lt_066C to i8*) to i8*
	; arg 74
	%vr6325 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6326, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr6325
	%vr6329 = bitcast %FBSTRING* %vr6325 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6329, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066D
	%vr6332 = bitcast i8* bitcast ([82 x i8]* @Lt_066D to i8*) to i8*
	; arg 81
	%vr6331 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6332, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr6331
	%vr6335 = bitcast %FBSTRING* %vr6331 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6335, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066E
	%vr6338 = bitcast i8* bitcast ([56 x i8]* @Lt_066E to i8*) to i8*
	; arg 55
	%vr6337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6338, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr6337
	%vr6341 = bitcast %FBSTRING* %vr6337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6341, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066F
	%vr6344 = bitcast i8* bitcast ([69 x i8]* @Lt_066F to i8*) to i8*
	; arg 68
	%vr6343 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6344, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6343
	%vr6347 = bitcast %FBSTRING* %vr6343 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6347, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0670
	%vr6350 = bitcast i8* bitcast ([62 x i8]* @Lt_0670 to i8*) to i8*
	; arg 61
	%vr6349 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6350, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr6349
	%vr6353 = bitcast %FBSTRING* %vr6349 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6353, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0671
	%vr6356 = bitcast i8* bitcast ([71 x i8]* @Lt_0671 to i8*) to i8*
	; arg 70
	%vr6355 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6356, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr6355
	%vr6359 = bitcast %FBSTRING* %vr6355 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6359, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0672
	%vr6362 = bitcast i8* bitcast ([60 x i8]* @Lt_0672 to i8*) to i8*
	; arg 59
	%vr6361 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6362, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr6361
	%vr6365 = bitcast %FBSTRING* %vr6361 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6365, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0673
	%vr6368 = bitcast i8* bitcast ([69 x i8]* @Lt_0673 to i8*) to i8*
	; arg 68
	%vr6367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6368, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6367
	%vr6371 = bitcast %FBSTRING* %vr6367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6371, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0674
	%vr6374 = bitcast i8* bitcast ([84 x i8]* @Lt_0674 to i8*) to i8*
	; arg 83
	%vr6373 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6374, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr6373
	%vr6377 = bitcast %FBSTRING* %vr6373 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6377, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0675
	%vr6380 = bitcast i8* bitcast ([81 x i8]* @Lt_0675 to i8*) to i8*
	; arg 80
	%vr6379 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6380, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr6379
	%vr6383 = bitcast %FBSTRING* %vr6379 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6383, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0676
	%vr6386 = bitcast i8* bitcast ([76 x i8]* @Lt_0676 to i8*) to i8*
	; arg 75
	%vr6385 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6386, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr6385
	%vr6389 = bitcast %FBSTRING* %vr6385 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6389, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0677
	%vr6392 = bitcast i8* bitcast ([64 x i8]* @Lt_0677 to i8*) to i8*
	; arg 63
	%vr6391 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6392, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6391
	%vr6395 = bitcast %FBSTRING* %vr6391 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6395, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0678
	%vr6398 = bitcast i8* bitcast ([67 x i8]* @Lt_0678 to i8*) to i8*
	; arg 66
	%vr6397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6398, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6397
	%vr6401 = bitcast %FBSTRING* %vr6397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6401, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0679
	%vr6404 = bitcast i8* bitcast ([72 x i8]* @Lt_0679 to i8*) to i8*
	; arg 71
	%vr6403 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6404, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr6403
	%vr6407 = bitcast %FBSTRING* %vr6403 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6407, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067A
	%vr6410 = bitcast i8* bitcast ([73 x i8]* @Lt_067A to i8*) to i8*
	; arg 72
	%vr6409 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6410, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr6409
	%vr6413 = bitcast %FBSTRING* %vr6409 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6413, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067B
	%vr6416 = bitcast i8* bitcast ([73 x i8]* @Lt_067B to i8*) to i8*
	; arg 72
	%vr6415 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6416, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr6415
	%vr6419 = bitcast %FBSTRING* %vr6415 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6419, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067C
	%vr6422 = bitcast i8* bitcast ([70 x i8]* @Lt_067C to i8*) to i8*
	; arg 69
	%vr6421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6422, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr6421
	%vr6425 = bitcast %FBSTRING* %vr6421 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6425, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067D
	%vr6428 = bitcast i8* bitcast ([71 x i8]* @Lt_067D to i8*) to i8*
	; arg 70
	%vr6427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6428, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr6427
	%vr6431 = bitcast %FBSTRING* %vr6427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6431, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067E
	%vr6434 = bitcast i8* bitcast ([61 x i8]* @Lt_067E to i8*) to i8*
	; arg 60
	%vr6433 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6434, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr6433
	%vr6437 = bitcast %FBSTRING* %vr6433 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6437, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067F
	%vr6440 = bitcast i8* bitcast ([41 x i8]* @Lt_067F to i8*) to i8*
	; arg 40
	%vr6439 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6440, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr6439
	%vr6443 = bitcast %FBSTRING* %vr6439 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6443, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6446 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6445 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6446, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6445
	%vr6449 = bitcast %FBSTRING* %vr6445 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6449, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0680
	%vr6452 = bitcast i8* bitcast ([67 x i8]* @Lt_0680 to i8*) to i8*
	; arg 66
	%vr6451 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6452, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6451
	%vr6455 = bitcast %FBSTRING* %vr6451 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6455, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0681
	%vr6458 = bitcast i8* bitcast ([67 x i8]* @Lt_0681 to i8*) to i8*
	; arg 66
	%vr6457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6458, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6457
	%vr6461 = bitcast %FBSTRING* %vr6457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6461, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0682
	%vr6464 = bitcast i8* bitcast ([60 x i8]* @Lt_0682 to i8*) to i8*
	; arg 59
	%vr6463 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6464, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr6463
	%vr6467 = bitcast %FBSTRING* %vr6463 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6467, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0683
	%vr6470 = bitcast i8* bitcast ([63 x i8]* @Lt_0683 to i8*) to i8*
	; arg 62
	%vr6469 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6470, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr6469
	%vr6473 = bitcast %FBSTRING* %vr6469 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6473, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0684
	%vr6476 = bitcast i8* bitcast ([64 x i8]* @Lt_0684 to i8*) to i8*
	; arg 63
	%vr6475 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6476, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6475
	%vr6479 = bitcast %FBSTRING* %vr6475 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6479, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0685
	%vr6482 = bitcast i8* bitcast ([70 x i8]* @Lt_0685 to i8*) to i8*
	; arg 69
	%vr6481 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6482, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr6481
	%vr6485 = bitcast %FBSTRING* %vr6481 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6485, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0686
	%vr6488 = bitcast i8* bitcast ([65 x i8]* @Lt_0686 to i8*) to i8*
	; arg 64
	%vr6487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6488, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr6487
	%vr6491 = bitcast %FBSTRING* %vr6487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6491, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0687
	%vr6494 = bitcast i8* bitcast ([29 x i8]* @Lt_0687 to i8*) to i8*
	; arg 28
	%vr6493 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6494, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr6493
	%vr6497 = bitcast %FBSTRING* %vr6493 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6497, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0668
	%vr6500 = bitcast i8* bitcast ([19 x i8]* @Lt_0668 to i8*) to i8*
	; arg 18
	%vr6499 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6500, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr6499
	%vr6503 = bitcast %FBSTRING* %vr6499 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6503, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0669
	%vr6506 = bitcast i8* bitcast ([85 x i8]* @Lt_0669 to i8*) to i8*
	; arg 84
	%vr6505 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6506, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr6505
	%vr6509 = bitcast %FBSTRING* %vr6505 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6509, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066A
	%vr6512 = bitcast i8* bitcast ([84 x i8]* @Lt_066A to i8*) to i8*
	; arg 83
	%vr6511 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6512, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr6511
	%vr6515 = bitcast %FBSTRING* %vr6511 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6515, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066B
	%vr6518 = bitcast i8* bitcast ([83 x i8]* @Lt_066B to i8*) to i8*
	; arg 82
	%vr6517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6518, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr6517
	%vr6521 = bitcast %FBSTRING* %vr6517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6521, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066C
	%vr6524 = bitcast i8* bitcast ([75 x i8]* @Lt_066C to i8*) to i8*
	; arg 74
	%vr6523 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6524, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr6523
	%vr6527 = bitcast %FBSTRING* %vr6523 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6527, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066D
	%vr6530 = bitcast i8* bitcast ([82 x i8]* @Lt_066D to i8*) to i8*
	; arg 81
	%vr6529 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6530, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr6529
	%vr6533 = bitcast %FBSTRING* %vr6529 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6533, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066E
	%vr6536 = bitcast i8* bitcast ([56 x i8]* @Lt_066E to i8*) to i8*
	; arg 55
	%vr6535 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6536, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr6535
	%vr6539 = bitcast %FBSTRING* %vr6535 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6539, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066F
	%vr6542 = bitcast i8* bitcast ([69 x i8]* @Lt_066F to i8*) to i8*
	; arg 68
	%vr6541 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6542, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6541
	%vr6545 = bitcast %FBSTRING* %vr6541 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6545, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0670
	%vr6548 = bitcast i8* bitcast ([62 x i8]* @Lt_0670 to i8*) to i8*
	; arg 61
	%vr6547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6548, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr6547
	%vr6551 = bitcast %FBSTRING* %vr6547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6551, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0671
	%vr6554 = bitcast i8* bitcast ([71 x i8]* @Lt_0671 to i8*) to i8*
	; arg 70
	%vr6553 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6554, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr6553
	%vr6557 = bitcast %FBSTRING* %vr6553 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6557, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0672
	%vr6560 = bitcast i8* bitcast ([60 x i8]* @Lt_0672 to i8*) to i8*
	; arg 59
	%vr6559 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6560, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr6559
	%vr6563 = bitcast %FBSTRING* %vr6559 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6563, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0673
	%vr6566 = bitcast i8* bitcast ([69 x i8]* @Lt_0673 to i8*) to i8*
	; arg 68
	%vr6565 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6566, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6565
	%vr6569 = bitcast %FBSTRING* %vr6565 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6569, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0674
	%vr6572 = bitcast i8* bitcast ([84 x i8]* @Lt_0674 to i8*) to i8*
	; arg 83
	%vr6571 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6572, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr6571
	%vr6575 = bitcast %FBSTRING* %vr6571 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6575, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0675
	%vr6578 = bitcast i8* bitcast ([81 x i8]* @Lt_0675 to i8*) to i8*
	; arg 80
	%vr6577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6578, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr6577
	%vr6581 = bitcast %FBSTRING* %vr6577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6581, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0676
	%vr6584 = bitcast i8* bitcast ([76 x i8]* @Lt_0676 to i8*) to i8*
	; arg 75
	%vr6583 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6584, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr6583
	%vr6587 = bitcast %FBSTRING* %vr6583 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6587, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0677
	%vr6590 = bitcast i8* bitcast ([64 x i8]* @Lt_0677 to i8*) to i8*
	; arg 63
	%vr6589 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6590, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6589
	%vr6593 = bitcast %FBSTRING* %vr6589 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6593, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0678
	%vr6596 = bitcast i8* bitcast ([67 x i8]* @Lt_0678 to i8*) to i8*
	; arg 66
	%vr6595 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6596, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6595
	%vr6599 = bitcast %FBSTRING* %vr6595 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6599, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0679
	%vr6602 = bitcast i8* bitcast ([72 x i8]* @Lt_0679 to i8*) to i8*
	; arg 71
	%vr6601 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6602, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr6601
	%vr6605 = bitcast %FBSTRING* %vr6601 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6605, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067A
	%vr6608 = bitcast i8* bitcast ([73 x i8]* @Lt_067A to i8*) to i8*
	; arg 72
	%vr6607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6608, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr6607
	%vr6611 = bitcast %FBSTRING* %vr6607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6611, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067B
	%vr6614 = bitcast i8* bitcast ([73 x i8]* @Lt_067B to i8*) to i8*
	; arg 72
	%vr6613 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6614, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr6613
	%vr6617 = bitcast %FBSTRING* %vr6613 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6617, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067C
	%vr6620 = bitcast i8* bitcast ([70 x i8]* @Lt_067C to i8*) to i8*
	; arg 69
	%vr6619 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6620, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr6619
	%vr6623 = bitcast %FBSTRING* %vr6619 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6623, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067D
	%vr6626 = bitcast i8* bitcast ([71 x i8]* @Lt_067D to i8*) to i8*
	; arg 70
	%vr6625 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6626, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr6625
	%vr6629 = bitcast %FBSTRING* %vr6625 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6629, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067E
	%vr6632 = bitcast i8* bitcast ([61 x i8]* @Lt_067E to i8*) to i8*
	; arg 60
	%vr6631 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6632, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr6631
	%vr6635 = bitcast %FBSTRING* %vr6631 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6635, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067F
	%vr6638 = bitcast i8* bitcast ([41 x i8]* @Lt_067F to i8*) to i8*
	; arg 40
	%vr6637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6638, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr6637
	%vr6641 = bitcast %FBSTRING* %vr6637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6641, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6644 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6643 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6644, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6643
	%vr6647 = bitcast %FBSTRING* %vr6643 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6647, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0680
	%vr6650 = bitcast i8* bitcast ([67 x i8]* @Lt_0680 to i8*) to i8*
	; arg 66
	%vr6649 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6650, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6649
	%vr6653 = bitcast %FBSTRING* %vr6649 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6653, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0681
	%vr6656 = bitcast i8* bitcast ([67 x i8]* @Lt_0681 to i8*) to i8*
	; arg 66
	%vr6655 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6656, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr6655
	%vr6659 = bitcast %FBSTRING* %vr6655 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6659, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0682
	%vr6662 = bitcast i8* bitcast ([60 x i8]* @Lt_0682 to i8*) to i8*
	; arg 59
	%vr6661 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6662, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr6661
	%vr6665 = bitcast %FBSTRING* %vr6661 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6665, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0683
	%vr6668 = bitcast i8* bitcast ([63 x i8]* @Lt_0683 to i8*) to i8*
	; arg 62
	%vr6667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6668, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr6667
	%vr6671 = bitcast %FBSTRING* %vr6667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6671, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0684
	%vr6674 = bitcast i8* bitcast ([64 x i8]* @Lt_0684 to i8*) to i8*
	; arg 63
	%vr6673 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6674, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6673
	%vr6677 = bitcast %FBSTRING* %vr6673 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6677, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0685
	%vr6680 = bitcast i8* bitcast ([70 x i8]* @Lt_0685 to i8*) to i8*
	; arg 69
	%vr6679 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6680, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr6679
	%vr6683 = bitcast %FBSTRING* %vr6679 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6683, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0686
	%vr6686 = bitcast i8* bitcast ([65 x i8]* @Lt_0686 to i8*) to i8*
	; arg 64
	%vr6685 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6686, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr6685
	%vr6689 = bitcast %FBSTRING* %vr6685 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6689, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0687
	%vr6692 = bitcast i8* bitcast ([29 x i8]* @Lt_0687 to i8*) to i8*
	; arg 28
	%vr6691 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6692, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr6691
	%vr6695 = bitcast %FBSTRING* %vr6691 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6695, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0688
	%vr6698 = bitcast i8* bitcast ([22 x i8]* @Lt_0688 to i8*) to i8*
	; arg 21
	%vr6697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6698, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr6697
	%vr6701 = bitcast %FBSTRING* %vr6697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6701, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0689
	%vr6704 = bitcast i8* bitcast ([13 x i8]* @Lt_0689 to i8*) to i8*
	; arg 12
	%vr6703 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6704, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr6703
	%vr6707 = bitcast %FBSTRING* %vr6703 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6707, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr6710 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr6709 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6710, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr6709
	%vr6713 = bitcast %FBSTRING* %vr6709 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6713, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068B
	%vr6716 = bitcast i8* bitcast ([26 x i8]* @Lt_068B to i8*) to i8*
	; arg 25
	%vr6715 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6716, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6715
	%vr6719 = bitcast %FBSTRING* %vr6715 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6719, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr6722 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr6721 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6722, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr6721
	%vr6725 = bitcast %FBSTRING* %vr6721 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6725, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6728 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6728, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6727
	%vr6731 = bitcast %FBSTRING* %vr6727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6731, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068D
	%vr6734 = bitcast i8* bitcast ([29 x i8]* @Lt_068D to i8*) to i8*
	; arg 28
	%vr6733 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6734, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr6733
	%vr6737 = bitcast %FBSTRING* %vr6733 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6737, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6740 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6739 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6740, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6739
	%vr6743 = bitcast %FBSTRING* %vr6739 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6743, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068E
	%vr6746 = bitcast i8* bitcast ([19 x i8]* @Lt_068E to i8*) to i8*
	; arg 18
	%vr6745 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6746, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr6745
	%vr6749 = bitcast %FBSTRING* %vr6745 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6749, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068F
	%vr6752 = bitcast i8* bitcast ([20 x i8]* @Lt_068F to i8*) to i8*
	; arg 19
	%vr6751 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6752, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr6751
	%vr6755 = bitcast %FBSTRING* %vr6751 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6755, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6758 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6758, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6757
	%vr6761 = bitcast %FBSTRING* %vr6757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6761, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0690
	%vr6764 = bitcast i8* bitcast ([7 x i8]* @Lt_0690 to i8*) to i8*
	; arg 6
	%vr6763 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6764, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr6763
	%vr6767 = bitcast %FBSTRING* %vr6763 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6767, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0691
	%vr6770 = bitcast i8* bitcast ([26 x i8]* @Lt_0691 to i8*) to i8*
	; arg 25
	%vr6769 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6770, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6769
	%vr6773 = bitcast %FBSTRING* %vr6769 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6773, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0692
	%vr6776 = bitcast i8* bitcast ([26 x i8]* @Lt_0692 to i8*) to i8*
	; arg 25
	%vr6775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6776, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6775
	%vr6779 = bitcast %FBSTRING* %vr6775 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6779, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0693
	%vr6782 = bitcast i8* bitcast ([25 x i8]* @Lt_0693 to i8*) to i8*
	; arg 24
	%vr6781 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6782, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr6781
	%vr6785 = bitcast %FBSTRING* %vr6781 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6785, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr6788 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr6787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6788, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr6787
	%vr6791 = bitcast %FBSTRING* %vr6787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6791, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0694
	%vr6794 = bitcast i8* bitcast ([20 x i8]* @Lt_0694 to i8*) to i8*
	; arg 19
	%vr6793 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6794, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr6793
	%vr6797 = bitcast %FBSTRING* %vr6793 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6797, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0695
	%vr6800 = bitcast i8* bitcast ([24 x i8]* @Lt_0695 to i8*) to i8*
	; arg 23
	%vr6799 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6800, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6799
	%vr6803 = bitcast %FBSTRING* %vr6799 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6803, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0696
	%vr6806 = bitcast i8* bitcast ([21 x i8]* @Lt_0696 to i8*) to i8*
	; arg 20
	%vr6805 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6806, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr6805
	%vr6809 = bitcast %FBSTRING* %vr6805 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6809, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr6812 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr6811 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6812, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr6811
	%vr6815 = bitcast %FBSTRING* %vr6811 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6815, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6818 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6818, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6817
	%vr6821 = bitcast %FBSTRING* %vr6817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6821, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0697
	%vr6824 = bitcast i8* bitcast ([87 x i8]* @Lt_0697 to i8*) to i8*
	; arg 86
	%vr6823 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6824, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr6823
	%vr6827 = bitcast %FBSTRING* %vr6823 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6827, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6830 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6829 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6830, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6829
	%vr6833 = bitcast %FBSTRING* %vr6829 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6833, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0698
	%vr6836 = bitcast i8* bitcast ([33 x i8]* @Lt_0698 to i8*) to i8*
	; arg 32
	%vr6835 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6836, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr6835
	%vr6839 = bitcast %FBSTRING* %vr6835 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6839, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0699
	%vr6842 = bitcast i8* bitcast ([18 x i8]* @Lt_0699 to i8*) to i8*
	; arg 17
	%vr6841 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6842, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr6841
	%vr6845 = bitcast %FBSTRING* %vr6841 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6845, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069A
	%vr6848 = bitcast i8* bitcast ([22 x i8]* @Lt_069A to i8*) to i8*
	; arg 21
	%vr6847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6848, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr6847
	%vr6851 = bitcast %FBSTRING* %vr6847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6851, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6854 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6853 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6854, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6853
	%vr6857 = bitcast %FBSTRING* %vr6853 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6857, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069B
	%vr6860 = bitcast i8* bitcast ([28 x i8]* @Lt_069B to i8*) to i8*
	; arg 27
	%vr6859 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6860, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr6859
	%vr6863 = bitcast %FBSTRING* %vr6859 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6863, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069C
	%vr6866 = bitcast i8* bitcast ([27 x i8]* @Lt_069C to i8*) to i8*
	; arg 26
	%vr6865 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6866, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6865
	%vr6869 = bitcast %FBSTRING* %vr6865 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6869, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6872 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6871 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6872, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6871
	%vr6875 = bitcast %FBSTRING* %vr6871 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6875, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069D
	%vr6878 = bitcast i8* bitcast ([19 x i8]* @Lt_069D to i8*) to i8*
	; arg 18
	%vr6877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6878, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr6877
	%vr6881 = bitcast %FBSTRING* %vr6877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6881, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069E
	%vr6884 = bitcast i8* bitcast ([21 x i8]* @Lt_069E to i8*) to i8*
	; arg 20
	%vr6883 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6884, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr6883
	%vr6887 = bitcast %FBSTRING* %vr6883 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6887, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069F
	%vr6890 = bitcast i8* bitcast ([23 x i8]* @Lt_069F to i8*) to i8*
	; arg 22
	%vr6889 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6890, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6889
	%vr6893 = bitcast %FBSTRING* %vr6889 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6893, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A0
	%vr6896 = bitcast i8* bitcast ([28 x i8]* @Lt_06A0 to i8*) to i8*
	; arg 27
	%vr6895 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6896, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr6895
	%vr6899 = bitcast %FBSTRING* %vr6895 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6899, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A1
	%vr6902 = bitcast i8* bitcast ([17 x i8]* @Lt_06A1 to i8*) to i8*
	; arg 16
	%vr6901 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6902, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr6901
	%vr6905 = bitcast %FBSTRING* %vr6901 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6905, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A2
	%vr6908 = bitcast i8* bitcast ([16 x i8]* @Lt_06A2 to i8*) to i8*
	; arg 15
	%vr6907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6908, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr6907
	%vr6911 = bitcast %FBSTRING* %vr6907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6911, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6914 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6913 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6914, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6913
	%vr6917 = bitcast %FBSTRING* %vr6913 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6917, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A3
	%vr6920 = bitcast i8* bitcast ([24 x i8]* @Lt_06A3 to i8*) to i8*
	; arg 23
	%vr6919 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6920, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6919
	%vr6923 = bitcast %FBSTRING* %vr6919 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6923, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A4
	%vr6926 = bitcast i8* bitcast ([24 x i8]* @Lt_06A4 to i8*) to i8*
	; arg 23
	%vr6925 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6926, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6925
	%vr6929 = bitcast %FBSTRING* %vr6925 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6929, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A5
	%vr6932 = bitcast i8* bitcast ([43 x i8]* @Lt_06A5 to i8*) to i8*
	; arg 42
	%vr6931 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6932, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr6931
	%vr6935 = bitcast %FBSTRING* %vr6931 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6935, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A6
	%vr6938 = bitcast i8* bitcast ([38 x i8]* @Lt_06A6 to i8*) to i8*
	; arg 37
	%vr6937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6938, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr6937
	%vr6941 = bitcast %FBSTRING* %vr6937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6941, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6944 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6943 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6944, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6943
	%vr6947 = bitcast %FBSTRING* %vr6943 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6947, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A7
	%vr6950 = bitcast i8* bitcast ([43 x i8]* @Lt_06A7 to i8*) to i8*
	; arg 42
	%vr6949 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6950, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr6949
	%vr6953 = bitcast %FBSTRING* %vr6949 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6953, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6956 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6955 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6956, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6955
	%vr6959 = bitcast %FBSTRING* %vr6955 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6959, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A9
	%vr6962 = bitcast i8* bitcast ([125 x i8]* @Lt_06A9 to i8*) to i8*
	; arg 124
	%vr6961 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6962, i64 124 )

	; call fb_PrintString()
	; arg 1
	; arg vr6961
	%vr6965 = bitcast %FBSTRING* %vr6961 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6965, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6968 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6968, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6967
	%vr6971 = bitcast %FBSTRING* %vr6967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6971, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AA
	%vr6974 = bitcast i8* bitcast ([22 x i8]* @Lt_06AA to i8*) to i8*
	; arg 21
	%vr6973 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6974, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr6973
	%vr6977 = bitcast %FBSTRING* %vr6973 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6977, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AB
	%vr6980 = bitcast i8* bitcast ([24 x i8]* @Lt_06AB to i8*) to i8*
	; arg 23
	%vr6979 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6980, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6979
	%vr6983 = bitcast %FBSTRING* %vr6979 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6983, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6986 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6985 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6986, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6985
	%vr6989 = bitcast %FBSTRING* %vr6985 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6989, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AC
	%vr6992 = bitcast i8* bitcast ([20 x i8]* @Lt_06AC to i8*) to i8*
	; arg 19
	%vr6991 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6992, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr6991
	%vr6995 = bitcast %FBSTRING* %vr6991 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6995, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AD
	%vr6998 = bitcast i8* bitcast ([21 x i8]* @Lt_06AD to i8*) to i8*
	; arg 20
	%vr6997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6998, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr6997
	%vr7001 = bitcast %FBSTRING* %vr6997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7001, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7004 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7003 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7004, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7003
	%vr7007 = bitcast %FBSTRING* %vr7003 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7007, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AE
	%vr7010 = bitcast i8* bitcast ([21 x i8]* @Lt_06AE to i8*) to i8*
	; arg 20
	%vr7009 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7010, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7009
	%vr7013 = bitcast %FBSTRING* %vr7009 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7013, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AF
	%vr7016 = bitcast i8* bitcast ([21 x i8]* @Lt_06AF to i8*) to i8*
	; arg 20
	%vr7015 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7016, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7015
	%vr7019 = bitcast %FBSTRING* %vr7015 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7019, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B0
	%vr7022 = bitcast i8* bitcast ([22 x i8]* @Lt_06B0 to i8*) to i8*
	; arg 21
	%vr7021 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7022, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7021
	%vr7025 = bitcast %FBSTRING* %vr7021 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7025, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7028 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7028, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7027
	%vr7031 = bitcast %FBSTRING* %vr7027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7031, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B1
	%vr7034 = bitcast i8* bitcast ([26 x i8]* @Lt_06B1 to i8*) to i8*
	; arg 25
	%vr7033 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7034, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr7033
	%vr7037 = bitcast %FBSTRING* %vr7033 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7037, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B2
	%vr7040 = bitcast i8* bitcast ([25 x i8]* @Lt_06B2 to i8*) to i8*
	; arg 24
	%vr7039 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7040, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7039
	%vr7043 = bitcast %FBSTRING* %vr7039 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7043, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B3
	%vr7046 = bitcast i8* bitcast ([25 x i8]* @Lt_06B3 to i8*) to i8*
	; arg 24
	%vr7045 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7046, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7045
	%vr7049 = bitcast %FBSTRING* %vr7045 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7049, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B4
	%vr7052 = bitcast i8* bitcast ([25 x i8]* @Lt_06B4 to i8*) to i8*
	; arg 24
	%vr7051 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7052, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7051
	%vr7055 = bitcast %FBSTRING* %vr7051 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7055, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7058 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7058, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7057
	%vr7061 = bitcast %FBSTRING* %vr7057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7061, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B5
	%vr7064 = bitcast i8* bitcast ([20 x i8]* @Lt_06B5 to i8*) to i8*
	; arg 19
	%vr7063 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7064, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr7063
	%vr7067 = bitcast %FBSTRING* %vr7063 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7067, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7070 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7069 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7070, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7069
	%vr7073 = bitcast %FBSTRING* %vr7069 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7073, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B6
	%vr7076 = bitcast i8* bitcast ([19 x i8]* @Lt_06B6 to i8*) to i8*
	; arg 18
	%vr7075 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7076, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr7075
	%vr7079 = bitcast %FBSTRING* %vr7075 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7079, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B7
	%vr7082 = bitcast i8* bitcast ([28 x i8]* @Lt_06B7 to i8*) to i8*
	; arg 27
	%vr7081 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7082, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7081
	%vr7085 = bitcast %FBSTRING* %vr7081 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7085, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B8
	%vr7088 = bitcast i8* bitcast ([29 x i8]* @Lt_06B8 to i8*) to i8*
	; arg 28
	%vr7087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7088, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7087
	%vr7091 = bitcast %FBSTRING* %vr7087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7091, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B9
	%vr7094 = bitcast i8* bitcast ([37 x i8]* @Lt_06B9 to i8*) to i8*
	; arg 36
	%vr7093 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7094, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr7093
	%vr7097 = bitcast %FBSTRING* %vr7093 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7097, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BA
	%vr7100 = bitcast i8* bitcast ([40 x i8]* @Lt_06BA to i8*) to i8*
	; arg 39
	%vr7099 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7100, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr7099
	%vr7103 = bitcast %FBSTRING* %vr7099 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7103, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BB
	%vr7106 = bitcast i8* bitcast ([44 x i8]* @Lt_06BB to i8*) to i8*
	; arg 43
	%vr7105 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7106, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr7105
	%vr7109 = bitcast %FBSTRING* %vr7105 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7109, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BC
	%vr7112 = bitcast i8* bitcast ([30 x i8]* @Lt_06BC to i8*) to i8*
	; arg 29
	%vr7111 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7112, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7111
	%vr7115 = bitcast %FBSTRING* %vr7111 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7115, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BD
	%vr7118 = bitcast i8* bitcast ([28 x i8]* @Lt_06BD to i8*) to i8*
	; arg 27
	%vr7117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7118, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7117
	%vr7121 = bitcast %FBSTRING* %vr7117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7121, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BE
	%vr7124 = bitcast i8* bitcast ([34 x i8]* @Lt_06BE to i8*) to i8*
	; arg 33
	%vr7123 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7124, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7123
	%vr7127 = bitcast %FBSTRING* %vr7123 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7127, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BF
	%vr7130 = bitcast i8* bitcast ([45 x i8]* @Lt_06BF to i8*) to i8*
	; arg 44
	%vr7129 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7130, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7129
	%vr7133 = bitcast %FBSTRING* %vr7129 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7133, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C0
	%vr7136 = bitcast i8* bitcast ([29 x i8]* @Lt_06C0 to i8*) to i8*
	; arg 28
	%vr7135 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7136, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7135
	%vr7139 = bitcast %FBSTRING* %vr7135 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7139, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B7
	%vr7142 = bitcast i8* bitcast ([28 x i8]* @Lt_06B7 to i8*) to i8*
	; arg 27
	%vr7141 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7142, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7141
	%vr7145 = bitcast %FBSTRING* %vr7141 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7145, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BE
	%vr7148 = bitcast i8* bitcast ([34 x i8]* @Lt_06BE to i8*) to i8*
	; arg 33
	%vr7147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7148, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7147
	%vr7151 = bitcast %FBSTRING* %vr7147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7151, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr7154 = bitcast i8* bitcast ([63 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 62
	%vr7153 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7154, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr7153
	%vr7157 = bitcast %FBSTRING* %vr7153 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7157, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BC
	%vr7160 = bitcast i8* bitcast ([30 x i8]* @Lt_06BC to i8*) to i8*
	; arg 29
	%vr7159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7160, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7159
	%vr7163 = bitcast %FBSTRING* %vr7159 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7163, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BD
	%vr7166 = bitcast i8* bitcast ([28 x i8]* @Lt_06BD to i8*) to i8*
	; arg 27
	%vr7165 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7166, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7165
	%vr7169 = bitcast %FBSTRING* %vr7165 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7169, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C2
	%vr7172 = bitcast i8* bitcast ([34 x i8]* @Lt_06C2 to i8*) to i8*
	; arg 33
	%vr7171 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7172, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7171
	%vr7175 = bitcast %FBSTRING* %vr7171 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7175, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C3
	%vr7178 = bitcast i8* bitcast ([64 x i8]* @Lt_06C3 to i8*) to i8*
	; arg 63
	%vr7177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7178, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7177
	%vr7181 = bitcast %FBSTRING* %vr7177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7181, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr7184 = bitcast i8* bitcast ([29 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 28
	%vr7183 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7184, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7183
	%vr7187 = bitcast %FBSTRING* %vr7183 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7187, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B7
	%vr7190 = bitcast i8* bitcast ([28 x i8]* @Lt_06B7 to i8*) to i8*
	; arg 27
	%vr7189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7190, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7189
	%vr7193 = bitcast %FBSTRING* %vr7189 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7193, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C2
	%vr7196 = bitcast i8* bitcast ([34 x i8]* @Lt_06C2 to i8*) to i8*
	; arg 33
	%vr7195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7196, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7195
	%vr7199 = bitcast %FBSTRING* %vr7195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7199, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr7202 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr7201 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7202, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr7201
	%vr7205 = bitcast %FBSTRING* %vr7201 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7205, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C5
	%vr7208 = bitcast i8* bitcast ([31 x i8]* @Lt_06C5 to i8*) to i8*
	; arg 30
	%vr7207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7208, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr7207
	%vr7211 = bitcast %FBSTRING* %vr7207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7211, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C6
	%vr7214 = bitcast i8* bitcast ([27 x i8]* @Lt_06C6 to i8*) to i8*
	; arg 26
	%vr7213 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7214, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr7213
	%vr7217 = bitcast %FBSTRING* %vr7213 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7217, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C7
	%vr7220 = bitcast i8* bitcast ([35 x i8]* @Lt_06C7 to i8*) to i8*
	; arg 34
	%vr7219 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7220, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7219
	%vr7223 = bitcast %FBSTRING* %vr7219 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7223, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C8
	%vr7226 = bitcast i8* bitcast ([69 x i8]* @Lt_06C8 to i8*) to i8*
	; arg 68
	%vr7225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7226, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr7225
	%vr7229 = bitcast %FBSTRING* %vr7225 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7229, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C9
	%vr7232 = bitcast i8* bitcast ([42 x i8]* @Lt_06C9 to i8*) to i8*
	; arg 41
	%vr7231 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7232, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr7231
	%vr7235 = bitcast %FBSTRING* %vr7231 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7235, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7238 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7238, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7237
	%vr7241 = bitcast %FBSTRING* %vr7237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7241, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CA
	%vr7244 = bitcast i8* bitcast ([21 x i8]* @Lt_06CA to i8*) to i8*
	; arg 20
	%vr7243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7244, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7243
	%vr7247 = bitcast %FBSTRING* %vr7243 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7247, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CB
	%vr7250 = bitcast i8* bitcast ([26 x i8]* @Lt_06CB to i8*) to i8*
	; arg 25
	%vr7249 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7250, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr7249
	%vr7253 = bitcast %FBSTRING* %vr7249 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7253, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CC
	%vr7256 = bitcast i8* bitcast ([53 x i8]* @Lt_06CC to i8*) to i8*
	; arg 52
	%vr7255 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7256, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr7255
	%vr7259 = bitcast %FBSTRING* %vr7255 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7259, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7262 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7261 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7262, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7261
	%vr7265 = bitcast %FBSTRING* %vr7261 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7265, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CD
	%vr7268 = bitcast i8* bitcast ([49 x i8]* @Lt_06CD to i8*) to i8*
	; arg 48
	%vr7267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7268, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr7267
	%vr7271 = bitcast %FBSTRING* %vr7267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7271, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7274 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7273 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7274, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7273
	%vr7277 = bitcast %FBSTRING* %vr7273 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7277, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CE
	%vr7280 = bitcast i8* bitcast ([9 x i8]* @Lt_06CE to i8*) to i8*
	; arg 8
	%vr7279 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7280, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr7279
	%vr7283 = bitcast %FBSTRING* %vr7279 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7283, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7286 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7285 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7286, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7285
	%vr7289 = bitcast %FBSTRING* %vr7285 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7289, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CF
	%vr7292 = bitcast i8* bitcast ([16 x i8]* @Lt_06CF to i8*) to i8*
	; arg 15
	%vr7291 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7292, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr7291
	%vr7295 = bitcast %FBSTRING* %vr7291 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7295, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7298 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7298, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7297
	%vr7301 = bitcast %FBSTRING* %vr7297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7301, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D0
	%vr7304 = bitcast i8* bitcast ([12 x i8]* @Lt_06D0 to i8*) to i8*
	; arg 11
	%vr7303 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7304, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7303
	%vr7307 = bitcast %FBSTRING* %vr7303 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7307, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7310 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7309 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7310, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7309
	%vr7313 = bitcast %FBSTRING* %vr7309 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7313, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D1
	%vr7316 = bitcast i8* bitcast ([18 x i8]* @Lt_06D1 to i8*) to i8*
	; arg 17
	%vr7315 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7316, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr7315
	%vr7319 = bitcast %FBSTRING* %vr7315 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7319, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D2
	%vr7322 = bitcast i8* bitcast ([12 x i8]* @Lt_06D2 to i8*) to i8*
	; arg 11
	%vr7321 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7322, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7321
	%vr7325 = bitcast %FBSTRING* %vr7321 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7325, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D3
	%vr7328 = bitcast i8* bitcast ([12 x i8]* @Lt_06D3 to i8*) to i8*
	; arg 11
	%vr7327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7328, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7327
	%vr7331 = bitcast %FBSTRING* %vr7327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7331, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7334 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7333 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7334, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7333
	%vr7337 = bitcast %FBSTRING* %vr7333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7337, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D4
	%vr7340 = bitcast i8* bitcast ([12 x i8]* @Lt_06D4 to i8*) to i8*
	; arg 11
	%vr7339 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7340, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7339
	%vr7343 = bitcast %FBSTRING* %vr7339 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7343, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D5
	%vr7346 = bitcast i8* bitcast ([16 x i8]* @Lt_06D5 to i8*) to i8*
	; arg 15
	%vr7345 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7346, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr7345
	%vr7349 = bitcast %FBSTRING* %vr7345 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7349, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D6
	%vr7352 = bitcast i8* bitcast ([17 x i8]* @Lt_06D6 to i8*) to i8*
	; arg 16
	%vr7351 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7352, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr7351
	%vr7355 = bitcast %FBSTRING* %vr7351 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7355, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D7
	%vr7358 = bitcast i8* bitcast ([15 x i8]* @Lt_06D7 to i8*) to i8*
	; arg 14
	%vr7357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7358, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr7357
	%vr7361 = bitcast %FBSTRING* %vr7357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7361, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D8
	%vr7364 = bitcast i8* bitcast ([12 x i8]* @Lt_06D8 to i8*) to i8*
	; arg 11
	%vr7363 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7364, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7363
	%vr7367 = bitcast %FBSTRING* %vr7363 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7367, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D9
	%vr7370 = bitcast i8* bitcast ([3 x i8]* @Lt_06D9 to i8*) to i8*
	; arg 2
	%vr7369 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7370, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr7369
	%vr7373 = bitcast %FBSTRING* %vr7369 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7373, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr7376 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr7375 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7376, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7375
	%vr7379 = bitcast %FBSTRING* %vr7375 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7379, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr7382 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr7381 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7382, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7381
	%vr7385 = bitcast %FBSTRING* %vr7381 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7385, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DB
	%vr7388 = bitcast i8* bitcast ([13 x i8]* @Lt_06DB to i8*) to i8*
	; arg 12
	%vr7387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7388, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr7387
	%vr7391 = bitcast %FBSTRING* %vr7387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7391, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DC
	%vr7394 = bitcast i8* bitcast ([13 x i8]* @Lt_06DC to i8*) to i8*
	; arg 12
	%vr7393 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7394, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr7393
	%vr7397 = bitcast %FBSTRING* %vr7393 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7397, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DD
	%vr7400 = bitcast i8* bitcast ([11 x i8]* @Lt_06DD to i8*) to i8*
	; arg 10
	%vr7399 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7400, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7399
	%vr7403 = bitcast %FBSTRING* %vr7399 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7403, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DE
	%vr7406 = bitcast i8* bitcast ([14 x i8]* @Lt_06DE to i8*) to i8*
	; arg 13
	%vr7405 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7406, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr7405
	%vr7409 = bitcast %FBSTRING* %vr7405 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7409, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DF
	%vr7412 = bitcast i8* bitcast ([17 x i8]* @Lt_06DF to i8*) to i8*
	; arg 16
	%vr7411 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7412, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr7411
	%vr7415 = bitcast %FBSTRING* %vr7411 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7415, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E0
	%vr7418 = bitcast i8* bitcast ([15 x i8]* @Lt_06E0 to i8*) to i8*
	; arg 14
	%vr7417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7418, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr7417
	%vr7421 = bitcast %FBSTRING* %vr7417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7421, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D9
	%vr7424 = bitcast i8* bitcast ([3 x i8]* @Lt_06D9 to i8*) to i8*
	; arg 2
	%vr7423 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7424, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr7423
	%vr7427 = bitcast %FBSTRING* %vr7423 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7427, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7430 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7429 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7430, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7429
	%vr7433 = bitcast %FBSTRING* %vr7429 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7433, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E1
	%vr7436 = bitcast i8* bitcast ([69 x i8]* @Lt_06E1 to i8*) to i8*
	; arg 68
	%vr7435 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7436, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr7435
	%vr7439 = bitcast %FBSTRING* %vr7435 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7439, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7442 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7441 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7442, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7441
	%vr7445 = bitcast %FBSTRING* %vr7441 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7445, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E2
	%vr7448 = bitcast i8* bitcast ([58 x i8]* @Lt_06E2 to i8*) to i8*
	; arg 57
	%vr7447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7448, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr7447
	%vr7451 = bitcast %FBSTRING* %vr7447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7451, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7454 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7453 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7454, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7453
	%vr7457 = bitcast %FBSTRING* %vr7453 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7457, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E3
	%vr7460 = bitcast i8* bitcast ([22 x i8]* @Lt_06E3 to i8*) to i8*
	; arg 21
	%vr7459 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7460, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7459
	%vr7463 = bitcast %FBSTRING* %vr7459 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7463, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E4
	%vr7466 = bitcast i8* bitcast ([64 x i8]* @Lt_06E4 to i8*) to i8*
	; arg 63
	%vr7465 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7466, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7465
	%vr7469 = bitcast %FBSTRING* %vr7465 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7469, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7472 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7471 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7472, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7471
	%vr7475 = bitcast %FBSTRING* %vr7471 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7475, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7478 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7478, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7477
	%vr7481 = bitcast %FBSTRING* %vr7477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7481, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E6
	%vr7484 = bitcast i8* bitcast ([21 x i8]* @Lt_06E6 to i8*) to i8*
	; arg 20
	%vr7483 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7484, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7483
	%vr7487 = bitcast %FBSTRING* %vr7483 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7487, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7490 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7489 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7490, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7489
	%vr7493 = bitcast %FBSTRING* %vr7489 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7493, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E8
	%vr7496 = bitcast i8* bitcast ([65 x i8]* @Lt_06E8 to i8*) to i8*
	; arg 64
	%vr7495 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7496, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr7495
	%vr7499 = bitcast %FBSTRING* %vr7495 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7499, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7502 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7501 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7502, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7501
	%vr7505 = bitcast %FBSTRING* %vr7501 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7505, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7508 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7508, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7507
	%vr7511 = bitcast %FBSTRING* %vr7507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7511, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E9
	%vr7514 = bitcast i8* bitcast ([22 x i8]* @Lt_06E9 to i8*) to i8*
	; arg 21
	%vr7513 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7514, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7513
	%vr7517 = bitcast %FBSTRING* %vr7513 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7517, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EA
	%vr7520 = bitcast i8* bitcast ([32 x i8]* @Lt_06EA to i8*) to i8*
	; arg 31
	%vr7519 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7520, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr7519
	%vr7523 = bitcast %FBSTRING* %vr7519 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7523, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EB
	%vr7526 = bitcast i8* bitcast ([68 x i8]* @Lt_06EB to i8*) to i8*
	; arg 67
	%vr7525 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7526, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr7525
	%vr7529 = bitcast %FBSTRING* %vr7525 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7529, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr7532 = bitcast i8* bitcast ([95 x i8]* @Lt_06EC to i8*) to i8*
	; arg 94
	%vr7531 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7532, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr7531
	%vr7535 = bitcast %FBSTRING* %vr7531 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7535, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7538 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7538, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7537
	%vr7541 = bitcast %FBSTRING* %vr7537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7541, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7544 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7543 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7544, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7543
	%vr7547 = bitcast %FBSTRING* %vr7543 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7547, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06ED
	%vr7550 = bitcast i8* bitcast ([41 x i8]* @Lt_06ED to i8*) to i8*
	; arg 40
	%vr7549 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7550, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr7549
	%vr7553 = bitcast %FBSTRING* %vr7549 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7553, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7556 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7555 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7556, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7555
	%vr7559 = bitcast %FBSTRING* %vr7555 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7559, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EE
	%vr7562 = bitcast i8* bitcast ([20 x i8]* @Lt_06EE to i8*) to i8*
	; arg 19
	%vr7561 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7562, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr7561
	%vr7565 = bitcast %FBSTRING* %vr7561 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7565, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EF
	%vr7568 = bitcast i8* bitcast ([64 x i8]* @Lt_06EF to i8*) to i8*
	; arg 63
	%vr7567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7568, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7567
	%vr7571 = bitcast %FBSTRING* %vr7567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7571, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F0
	%vr7574 = bitcast i8* bitcast ([41 x i8]* @Lt_06F0 to i8*) to i8*
	; arg 40
	%vr7573 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7574, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr7573
	%vr7577 = bitcast %FBSTRING* %vr7573 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7577, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F1
	%vr7580 = bitcast i8* bitcast ([52 x i8]* @Lt_06F1 to i8*) to i8*
	; arg 51
	%vr7579 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7580, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr7579
	%vr7583 = bitcast %FBSTRING* %vr7579 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7583, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F2
	%vr7586 = bitcast i8* bitcast ([30 x i8]* @Lt_06F2 to i8*) to i8*
	; arg 29
	%vr7585 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7586, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7585
	%vr7589 = bitcast %FBSTRING* %vr7585 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7589, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F3
	%vr7592 = bitcast i8* bitcast ([28 x i8]* @Lt_06F3 to i8*) to i8*
	; arg 27
	%vr7591 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7592, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr7591
	%vr7595 = bitcast %FBSTRING* %vr7591 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7595, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7598 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7598, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7597
	%vr7601 = bitcast %FBSTRING* %vr7597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7601, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7604 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7603 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7604, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7603
	%vr7607 = bitcast %FBSTRING* %vr7603 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7607, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F4
	%vr7610 = bitcast i8* bitcast ([40 x i8]* @Lt_06F4 to i8*) to i8*
	; arg 39
	%vr7609 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7610, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr7609
	%vr7613 = bitcast %FBSTRING* %vr7609 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7613, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7616 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7615 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7616, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7615
	%vr7619 = bitcast %FBSTRING* %vr7615 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7619, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F5
	%vr7622 = bitcast i8* bitcast ([35 x i8]* @Lt_06F5 to i8*) to i8*
	; arg 34
	%vr7621 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7622, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7621
	%vr7625 = bitcast %FBSTRING* %vr7621 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7625, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F6
	%vr7628 = bitcast i8* bitcast ([35 x i8]* @Lt_06F6 to i8*) to i8*
	; arg 34
	%vr7627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7628, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7627
	%vr7631 = bitcast %FBSTRING* %vr7627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7631, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7634 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7633 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7634, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7633
	%vr7637 = bitcast %FBSTRING* %vr7633 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7637, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7640 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7639 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7640, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7639
	%vr7643 = bitcast %FBSTRING* %vr7639 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7643, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F7
	%vr7646 = bitcast i8* bitcast ([37 x i8]* @Lt_06F7 to i8*) to i8*
	; arg 36
	%vr7645 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7646, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr7645
	%vr7649 = bitcast %FBSTRING* %vr7645 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7649, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7652 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7651 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7652, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7651
	%vr7655 = bitcast %FBSTRING* %vr7651 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7655, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F8
	%vr7658 = bitcast i8* bitcast ([54 x i8]* @Lt_06F8 to i8*) to i8*
	; arg 53
	%vr7657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7658, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr7657
	%vr7661 = bitcast %FBSTRING* %vr7657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7661, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F9
	%vr7664 = bitcast i8* bitcast ([41 x i8]* @Lt_06F9 to i8*) to i8*
	; arg 40
	%vr7663 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7664, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr7663
	%vr7667 = bitcast %FBSTRING* %vr7663 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7667, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7670 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7669 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7670, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7669
	%vr7673 = bitcast %FBSTRING* %vr7669 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7673, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7676 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7675 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7676, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7675
	%vr7679 = bitcast %FBSTRING* %vr7675 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7679, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FA
	%vr7682 = bitcast i8* bitcast ([40 x i8]* @Lt_06FA to i8*) to i8*
	; arg 39
	%vr7681 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7682, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr7681
	%vr7685 = bitcast %FBSTRING* %vr7681 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7685, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7688 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7688, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7687
	%vr7691 = bitcast %FBSTRING* %vr7687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7691, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F5
	%vr7694 = bitcast i8* bitcast ([35 x i8]* @Lt_06F5 to i8*) to i8*
	; arg 34
	%vr7693 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7694, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7693
	%vr7697 = bitcast %FBSTRING* %vr7693 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7697, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FB
	%vr7700 = bitcast i8* bitcast ([35 x i8]* @Lt_06FB to i8*) to i8*
	; arg 34
	%vr7699 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7700, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7699
	%vr7703 = bitcast %FBSTRING* %vr7699 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7703, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7706 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7705 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7706, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7705
	%vr7709 = bitcast %FBSTRING* %vr7705 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7709, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7712 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7711 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7712, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7711
	%vr7715 = bitcast %FBSTRING* %vr7711 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7715, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FC
	%vr7718 = bitcast i8* bitcast ([33 x i8]* @Lt_06FC to i8*) to i8*
	; arg 32
	%vr7717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7718, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr7717
	%vr7721 = bitcast %FBSTRING* %vr7717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7721, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7724 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7723 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7724, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7723
	%vr7727 = bitcast %FBSTRING* %vr7723 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7727, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FD
	%vr7730 = bitcast i8* bitcast ([45 x i8]* @Lt_06FD to i8*) to i8*
	; arg 44
	%vr7729 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7730, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7729
	%vr7733 = bitcast %FBSTRING* %vr7729 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7733, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FE
	%vr7736 = bitcast i8* bitcast ([45 x i8]* @Lt_06FE to i8*) to i8*
	; arg 44
	%vr7735 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7736, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7735
	%vr7739 = bitcast %FBSTRING* %vr7735 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7739, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FF
	%vr7742 = bitcast i8* bitcast ([11 x i8]* @Lt_06FF to i8*) to i8*
	; arg 10
	%vr7741 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7742, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7741
	%vr7745 = bitcast %FBSTRING* %vr7741 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7745, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0700
	%vr7748 = bitcast i8* bitcast ([11 x i8]* @Lt_0700 to i8*) to i8*
	; arg 10
	%vr7747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7748, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7747
	%vr7751 = bitcast %FBSTRING* %vr7747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7751, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0701
	%vr7754 = bitcast i8* bitcast ([11 x i8]* @Lt_0701 to i8*) to i8*
	; arg 10
	%vr7753 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7754, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7753
	%vr7757 = bitcast %FBSTRING* %vr7753 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7757, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7760 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7759 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7760, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7759
	%vr7763 = bitcast %FBSTRING* %vr7759 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7763, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7766 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7765 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7766, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7765
	%vr7769 = bitcast %FBSTRING* %vr7765 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7769, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0702
	%vr7772 = bitcast i8* bitcast ([34 x i8]* @Lt_0702 to i8*) to i8*
	; arg 33
	%vr7771 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7772, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7771
	%vr7775 = bitcast %FBSTRING* %vr7771 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7775, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7778 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7778, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7777
	%vr7781 = bitcast %FBSTRING* %vr7777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7781, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0703
	%vr7784 = bitcast i8* bitcast ([45 x i8]* @Lt_0703 to i8*) to i8*
	; arg 44
	%vr7783 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7784, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7783
	%vr7787 = bitcast %FBSTRING* %vr7783 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7787, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0704
	%vr7790 = bitcast i8* bitcast ([45 x i8]* @Lt_0704 to i8*) to i8*
	; arg 44
	%vr7789 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7790, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7789
	%vr7793 = bitcast %FBSTRING* %vr7789 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7793, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0705
	%vr7796 = bitcast i8* bitcast ([11 x i8]* @Lt_0705 to i8*) to i8*
	; arg 10
	%vr7795 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7796, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7795
	%vr7799 = bitcast %FBSTRING* %vr7795 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7799, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FF
	%vr7802 = bitcast i8* bitcast ([11 x i8]* @Lt_06FF to i8*) to i8*
	; arg 10
	%vr7801 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7802, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7801
	%vr7805 = bitcast %FBSTRING* %vr7801 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7805, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0701
	%vr7808 = bitcast i8* bitcast ([11 x i8]* @Lt_0701 to i8*) to i8*
	; arg 10
	%vr7807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7808, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7807
	%vr7811 = bitcast %FBSTRING* %vr7807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7811, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7814 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7813 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7814, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7813
	%vr7817 = bitcast %FBSTRING* %vr7813 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7817, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7820 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7819 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7820, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7819
	%vr7823 = bitcast %FBSTRING* %vr7819 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7823, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E1
	%vr7826 = bitcast i8* bitcast ([69 x i8]* @Lt_06E1 to i8*) to i8*
	; arg 68
	%vr7825 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7826, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr7825
	%vr7829 = bitcast %FBSTRING* %vr7825 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7829, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7832 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7831 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7832, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7831
	%vr7835 = bitcast %FBSTRING* %vr7831 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7835, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0706
	%vr7838 = bitcast i8* bitcast ([53 x i8]* @Lt_0706 to i8*) to i8*
	; arg 52
	%vr7837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7838, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr7837
	%vr7841 = bitcast %FBSTRING* %vr7837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7841, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7844 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7843 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7844, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7843
	%vr7847 = bitcast %FBSTRING* %vr7843 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7847, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0707
	%vr7850 = bitcast i8* bitcast ([62 x i8]* @Lt_0707 to i8*) to i8*
	; arg 61
	%vr7849 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7850, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr7849
	%vr7853 = bitcast %FBSTRING* %vr7849 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7853, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7856 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7855 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7856, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7855
	%vr7859 = bitcast %FBSTRING* %vr7855 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7859, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7862 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7861 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7862, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7861
	%vr7865 = bitcast %FBSTRING* %vr7861 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7865, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0708
	%vr7868 = bitcast i8* bitcast ([24 x i8]* @Lt_0708 to i8*) to i8*
	; arg 23
	%vr7867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7868, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr7867
	%vr7871 = bitcast %FBSTRING* %vr7867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7871, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7874 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7873 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7874, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7873
	%vr7877 = bitcast %FBSTRING* %vr7873 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7877, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0709
	%vr7880 = bitcast i8* bitcast ([13 x i8]* @Lt_0709 to i8*) to i8*
	; arg 12
	%vr7879 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7880, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr7879
	%vr7883 = bitcast %FBSTRING* %vr7879 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7883, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7886 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7885 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7886, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7885
	%vr7889 = bitcast %FBSTRING* %vr7885 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7889, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7892 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7891 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7892, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7891
	%vr7895 = bitcast %FBSTRING* %vr7891 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7895, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070A
	%vr7898 = bitcast i8* bitcast ([34 x i8]* @Lt_070A to i8*) to i8*
	; arg 33
	%vr7897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7898, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7897
	%vr7901 = bitcast %FBSTRING* %vr7897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7901, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7904 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7903 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7904, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7903
	%vr7907 = bitcast %FBSTRING* %vr7903 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7907, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070B
	%vr7910 = bitcast i8* bitcast ([24 x i8]* @Lt_070B to i8*) to i8*
	; arg 23
	%vr7909 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7910, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr7909
	%vr7913 = bitcast %FBSTRING* %vr7909 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7913, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7916 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7915 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7916, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7915
	%vr7919 = bitcast %FBSTRING* %vr7915 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7919, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7922 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7921 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7922, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7921
	%vr7925 = bitcast %FBSTRING* %vr7921 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7925, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070C
	%vr7928 = bitcast i8* bitcast ([31 x i8]* @Lt_070C to i8*) to i8*
	; arg 30
	%vr7927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7928, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr7927
	%vr7931 = bitcast %FBSTRING* %vr7927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7931, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7934 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7933 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7934, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7933
	%vr7937 = bitcast %FBSTRING* %vr7933 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7937, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070D
	%vr7940 = bitcast i8* bitcast ([35 x i8]* @Lt_070D to i8*) to i8*
	; arg 34
	%vr7939 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7940, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7939
	%vr7943 = bitcast %FBSTRING* %vr7939 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7943, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7946 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7945 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7946, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7945
	%vr7949 = bitcast %FBSTRING* %vr7945 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7949, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7952 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7951 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7952, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7951
	%vr7955 = bitcast %FBSTRING* %vr7951 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7955, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070E
	%vr7958 = bitcast i8* bitcast ([20 x i8]* @Lt_070E to i8*) to i8*
	; arg 19
	%vr7957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7958, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr7957
	%vr7961 = bitcast %FBSTRING* %vr7957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7961, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr7964 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7963 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7964, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7963
	%vr7967 = bitcast %FBSTRING* %vr7963 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7967, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070F
	%vr7970 = bitcast i8* bitcast ([57 x i8]* @Lt_070F to i8*) to i8*
	; arg 56
	%vr7969 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7970, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr7969
	%vr7973 = bitcast %FBSTRING* %vr7969 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7973, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0710
	%vr7976 = bitcast i8* bitcast ([73 x i8]* @Lt_0710 to i8*) to i8*
	; arg 72
	%vr7975 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7976, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr7975
	%vr7979 = bitcast %FBSTRING* %vr7975 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7979, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr7982 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr7981 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7982, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7981
	%vr7985 = bitcast %FBSTRING* %vr7981 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7985, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7988 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7988, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7987
	%vr7991 = bitcast %FBSTRING* %vr7987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7991, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0711
	%vr7994 = bitcast i8* bitcast ([39 x i8]* @Lt_0711 to i8*) to i8*
	; arg 38
	%vr7993 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7994, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr7993
	%vr7997 = bitcast %FBSTRING* %vr7993 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7997, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8000 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr7999 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8000, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7999
	%vr8003 = bitcast %FBSTRING* %vr7999 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8003, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0712
	%vr8006 = bitcast i8* bitcast ([34 x i8]* @Lt_0712 to i8*) to i8*
	; arg 33
	%vr8005 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8006, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr8005
	%vr8009 = bitcast %FBSTRING* %vr8005 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8009, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8012 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8011 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8012, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8011
	%vr8015 = bitcast %FBSTRING* %vr8011 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8015, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8018 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8018, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8017
	%vr8021 = bitcast %FBSTRING* %vr8017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8021, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0713
	%vr8024 = bitcast i8* bitcast ([30 x i8]* @Lt_0713 to i8*) to i8*
	; arg 29
	%vr8023 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8024, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8023
	%vr8027 = bitcast %FBSTRING* %vr8023 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8027, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8030 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8029 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8030, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8029
	%vr8033 = bitcast %FBSTRING* %vr8029 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8033, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0714
	%vr8036 = bitcast i8* bitcast ([25 x i8]* @Lt_0714 to i8*) to i8*
	; arg 24
	%vr8035 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8036, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8035
	%vr8039 = bitcast %FBSTRING* %vr8035 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8039, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0715
	%vr8042 = bitcast i8* bitcast ([64 x i8]* @Lt_0715 to i8*) to i8*
	; arg 63
	%vr8041 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8042, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr8041
	%vr8045 = bitcast %FBSTRING* %vr8041 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8045, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8048 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8048, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8047
	%vr8051 = bitcast %FBSTRING* %vr8047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8051, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8054 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8053 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8054, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8053
	%vr8057 = bitcast %FBSTRING* %vr8053 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8057, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0716
	%vr8060 = bitcast i8* bitcast ([23 x i8]* @Lt_0716 to i8*) to i8*
	; arg 22
	%vr8059 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8060, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8059
	%vr8063 = bitcast %FBSTRING* %vr8059 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8063, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8066 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8065 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8066, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8065
	%vr8069 = bitcast %FBSTRING* %vr8065 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8069, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0717
	%vr8072 = bitcast i8* bitcast ([23 x i8]* @Lt_0717 to i8*) to i8*
	; arg 22
	%vr8071 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8072, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8071
	%vr8075 = bitcast %FBSTRING* %vr8071 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8075, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0718
	%vr8078 = bitcast i8* bitcast ([9 x i8]* @Lt_0718 to i8*) to i8*
	; arg 8
	%vr8077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8078, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr8077
	%vr8081 = bitcast %FBSTRING* %vr8077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8081, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0719
	%vr8084 = bitcast i8* bitcast ([109 x i8]* @Lt_0719 to i8*) to i8*
	; arg 108
	%vr8083 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8084, i64 108 )

	; call fb_PrintString()
	; arg 1
	; arg vr8083
	%vr8087 = bitcast %FBSTRING* %vr8083 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8087, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071A
	%vr8090 = bitcast i8* bitcast ([111 x i8]* @Lt_071A to i8*) to i8*
	; arg 110
	%vr8089 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8090, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr8089
	%vr8093 = bitcast %FBSTRING* %vr8089 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8093, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071B
	%vr8096 = bitcast i8* bitcast ([111 x i8]* @Lt_071B to i8*) to i8*
	; arg 110
	%vr8095 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8096, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr8095
	%vr8099 = bitcast %FBSTRING* %vr8095 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8099, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071C
	%vr8102 = bitcast i8* bitcast ([111 x i8]* @Lt_071C to i8*) to i8*
	; arg 110
	%vr8101 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8102, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr8101
	%vr8105 = bitcast %FBSTRING* %vr8101 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8105, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071D
	%vr8108 = bitcast i8* bitcast ([111 x i8]* @Lt_071D to i8*) to i8*
	; arg 110
	%vr8107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8108, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr8107
	%vr8111 = bitcast %FBSTRING* %vr8107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8111, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071E
	%vr8114 = bitcast i8* bitcast ([10 x i8]* @Lt_071E to i8*) to i8*
	; arg 9
	%vr8113 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8114, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr8113
	%vr8117 = bitcast %FBSTRING* %vr8113 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8117, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8120 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8119 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8120, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8119
	%vr8123 = bitcast %FBSTRING* %vr8119 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8123, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8126 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8126, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8125
	%vr8129 = bitcast %FBSTRING* %vr8125 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8129, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071F
	%vr8132 = bitcast i8* bitcast ([27 x i8]* @Lt_071F to i8*) to i8*
	; arg 26
	%vr8131 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8132, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8131
	%vr8135 = bitcast %FBSTRING* %vr8131 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8135, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8138 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8138, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8137
	%vr8141 = bitcast %FBSTRING* %vr8137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8141, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0721
	%vr8144 = bitcast i8* bitcast ([141 x i8]* @Lt_0721 to i8*) to i8*
	; arg 140
	%vr8143 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8144, i64 140 )

	; call fb_PrintString()
	; arg 1
	; arg vr8143
	%vr8147 = bitcast %FBSTRING* %vr8143 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8147, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8150 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8149 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8150, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8149
	%vr8153 = bitcast %FBSTRING* %vr8149 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8153, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8156 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8155 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8156, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8155
	%vr8159 = bitcast %FBSTRING* %vr8155 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8159, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0722
	%vr8162 = bitcast i8* bitcast ([58 x i8]* @Lt_0722 to i8*) to i8*
	; arg 57
	%vr8161 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8162, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr8161
	%vr8165 = bitcast %FBSTRING* %vr8161 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8165, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8168 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8168, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8167
	%vr8171 = bitcast %FBSTRING* %vr8167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8171, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0723
	%vr8174 = bitcast i8* bitcast ([28 x i8]* @Lt_0723 to i8*) to i8*
	; arg 27
	%vr8173 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8174, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr8173
	%vr8177 = bitcast %FBSTRING* %vr8173 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8177, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0724
	%vr8180 = bitcast i8* bitcast ([32 x i8]* @Lt_0724 to i8*) to i8*
	; arg 31
	%vr8179 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8180, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr8179
	%vr8183 = bitcast %FBSTRING* %vr8179 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8183, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0725
	%vr8186 = bitcast i8* bitcast ([27 x i8]* @Lt_0725 to i8*) to i8*
	; arg 26
	%vr8185 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8186, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8185
	%vr8189 = bitcast %FBSTRING* %vr8185 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8189, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr8192 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr8191 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8192, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8191
	%vr8195 = bitcast %FBSTRING* %vr8191 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8195, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8198 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8198, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8197
	%vr8201 = bitcast %FBSTRING* %vr8197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8201, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8204 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8203 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8204, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8203
	%vr8207 = bitcast %FBSTRING* %vr8203 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8207, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0726
	%vr8210 = bitcast i8* bitcast ([44 x i8]* @Lt_0726 to i8*) to i8*
	; arg 43
	%vr8209 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8210, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr8209
	%vr8213 = bitcast %FBSTRING* %vr8209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8213, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8216 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8215 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8216, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8215
	%vr8219 = bitcast %FBSTRING* %vr8215 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8219, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0727
	%vr8222 = bitcast i8* bitcast ([40 x i8]* @Lt_0727 to i8*) to i8*
	; arg 39
	%vr8221 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8222, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr8221
	%vr8225 = bitcast %FBSTRING* %vr8221 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8225, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8228 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8228, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8227
	%vr8231 = bitcast %FBSTRING* %vr8227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8231, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8234 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8233 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8234, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8233
	%vr8237 = bitcast %FBSTRING* %vr8233 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8237, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0728
	%vr8240 = bitcast i8* bitcast ([32 x i8]* @Lt_0728 to i8*) to i8*
	; arg 31
	%vr8239 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8240, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr8239
	%vr8243 = bitcast %FBSTRING* %vr8239 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8243, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8246 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8245 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8246, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8245
	%vr8249 = bitcast %FBSTRING* %vr8245 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8249, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0729
	%vr8252 = bitcast i8* bitcast ([53 x i8]* @Lt_0729 to i8*) to i8*
	; arg 52
	%vr8251 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8252, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8251
	%vr8255 = bitcast %FBSTRING* %vr8251 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8255, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8258 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8258, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8257
	%vr8261 = bitcast %FBSTRING* %vr8257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8261, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8264 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8263 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8264, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8263
	%vr8267 = bitcast %FBSTRING* %vr8263 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8267, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072A
	%vr8270 = bitcast i8* bitcast ([69 x i8]* @Lt_072A to i8*) to i8*
	; arg 68
	%vr8269 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8270, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr8269
	%vr8273 = bitcast %FBSTRING* %vr8269 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8273, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8276 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8275 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8276, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8275
	%vr8279 = bitcast %FBSTRING* %vr8275 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8279, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072B
	%vr8282 = bitcast i8* bitcast ([20 x i8]* @Lt_072B to i8*) to i8*
	; arg 19
	%vr8281 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8282, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8281
	%vr8285 = bitcast %FBSTRING* %vr8281 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8285, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072C
	%vr8288 = bitcast i8* bitcast ([65 x i8]* @Lt_072C to i8*) to i8*
	; arg 64
	%vr8287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8288, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr8287
	%vr8291 = bitcast %FBSTRING* %vr8287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8291, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072D
	%vr8294 = bitcast i8* bitcast ([53 x i8]* @Lt_072D to i8*) to i8*
	; arg 52
	%vr8293 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8294, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8293
	%vr8297 = bitcast %FBSTRING* %vr8293 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8297, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8300 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8299 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8300, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8299
	%vr8303 = bitcast %FBSTRING* %vr8299 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8303, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8306 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8305 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8306, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8305
	%vr8309 = bitcast %FBSTRING* %vr8305 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8309, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072E
	%vr8312 = bitcast i8* bitcast ([35 x i8]* @Lt_072E to i8*) to i8*
	; arg 34
	%vr8311 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8312, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr8311
	%vr8315 = bitcast %FBSTRING* %vr8311 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8315, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8318 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8318, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8317
	%vr8321 = bitcast %FBSTRING* %vr8317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8321, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072F
	%vr8324 = bitcast i8* bitcast ([21 x i8]* @Lt_072F to i8*) to i8*
	; arg 20
	%vr8323 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8324, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr8323
	%vr8327 = bitcast %FBSTRING* %vr8323 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8327, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0730
	%vr8330 = bitcast i8* bitcast ([6 x i8]* @Lt_0730 to i8*) to i8*
	; arg 5
	%vr8329 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8330, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr8329
	%vr8333 = bitcast %FBSTRING* %vr8329 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8333, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0731
	%vr8336 = bitcast i8* bitcast ([61 x i8]* @Lt_0731 to i8*) to i8*
	; arg 60
	%vr8335 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8336, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr8335
	%vr8339 = bitcast %FBSTRING* %vr8335 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8339, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr8342 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr8341 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8342, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr8341
	%vr8345 = bitcast %FBSTRING* %vr8341 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8345, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0732
	%vr8348 = bitcast i8* bitcast ([24 x i8]* @Lt_0732 to i8*) to i8*
	; arg 23
	%vr8347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8348, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8347
	%vr8351 = bitcast %FBSTRING* %vr8347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8351, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0733
	%vr8354 = bitcast i8* bitcast ([52 x i8]* @Lt_0733 to i8*) to i8*
	; arg 51
	%vr8353 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8354, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr8353
	%vr8357 = bitcast %FBSTRING* %vr8353 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8357, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0734
	%vr8360 = bitcast i8* bitcast ([63 x i8]* @Lt_0734 to i8*) to i8*
	; arg 62
	%vr8359 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8360, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr8359
	%vr8363 = bitcast %FBSTRING* %vr8359 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8363, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr8366 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr8365 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8366, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr8365
	%vr8369 = bitcast %FBSTRING* %vr8365 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8369, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8372 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8371 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8372, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8371
	%vr8375 = bitcast %FBSTRING* %vr8371 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8375, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8378 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8378, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8377
	%vr8381 = bitcast %FBSTRING* %vr8377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8381, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0735
	%vr8384 = bitcast i8* bitcast ([51 x i8]* @Lt_0735 to i8*) to i8*
	; arg 50
	%vr8383 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8384, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr8383
	%vr8387 = bitcast %FBSTRING* %vr8383 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8387, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8390 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8389 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8390, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8389
	%vr8393 = bitcast %FBSTRING* %vr8389 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8393, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0736
	%vr8396 = bitcast i8* bitcast ([26 x i8]* @Lt_0736 to i8*) to i8*
	; arg 25
	%vr8395 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8396, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8395
	%vr8399 = bitcast %FBSTRING* %vr8395 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8399, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0737
	%vr8402 = bitcast i8* bitcast ([53 x i8]* @Lt_0737 to i8*) to i8*
	; arg 52
	%vr8401 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8402, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8401
	%vr8405 = bitcast %FBSTRING* %vr8401 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8405, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0738
	%vr8408 = bitcast i8* bitcast ([33 x i8]* @Lt_0738 to i8*) to i8*
	; arg 32
	%vr8407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8408, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8407
	%vr8411 = bitcast %FBSTRING* %vr8407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8411, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8414 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8413 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8414, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8413
	%vr8417 = bitcast %FBSTRING* %vr8413 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8417, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8420 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8419 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8420, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8419
	%vr8423 = bitcast %FBSTRING* %vr8419 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8423, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0739
	%vr8426 = bitcast i8* bitcast ([63 x i8]* @Lt_0739 to i8*) to i8*
	; arg 62
	%vr8425 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8426, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr8425
	%vr8429 = bitcast %FBSTRING* %vr8425 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8429, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8432 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8431 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8432, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8431
	%vr8435 = bitcast %FBSTRING* %vr8431 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8435, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073A
	%vr8438 = bitcast i8* bitcast ([40 x i8]* @Lt_073A to i8*) to i8*
	; arg 39
	%vr8437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8438, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr8437
	%vr8441 = bitcast %FBSTRING* %vr8437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8441, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr8444 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr8443 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8444, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8443
	%vr8447 = bitcast %FBSTRING* %vr8443 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8447, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073B
	%vr8450 = bitcast i8* bitcast ([25 x i8]* @Lt_073B to i8*) to i8*
	; arg 24
	%vr8449 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8450, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8449
	%vr8453 = bitcast %FBSTRING* %vr8449 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8453, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073C
	%vr8456 = bitcast i8* bitcast ([29 x i8]* @Lt_073C to i8*) to i8*
	; arg 28
	%vr8455 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8456, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8455
	%vr8459 = bitcast %FBSTRING* %vr8455 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8459, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073D
	%vr8462 = bitcast i8* bitcast ([33 x i8]* @Lt_073D to i8*) to i8*
	; arg 32
	%vr8461 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8462, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8461
	%vr8465 = bitcast %FBSTRING* %vr8461 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8465, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr8468 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr8467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8468, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8467
	%vr8471 = bitcast %FBSTRING* %vr8467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8471, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073E
	%vr8474 = bitcast i8* bitcast ([41 x i8]* @Lt_073E to i8*) to i8*
	; arg 40
	%vr8473 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8474, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8473
	%vr8477 = bitcast %FBSTRING* %vr8473 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8477, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073F
	%vr8480 = bitcast i8* bitcast ([53 x i8]* @Lt_073F to i8*) to i8*
	; arg 52
	%vr8479 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8480, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8479
	%vr8483 = bitcast %FBSTRING* %vr8479 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8483, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr8486 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr8485 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8486, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr8485
	%vr8489 = bitcast %FBSTRING* %vr8485 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8489, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0741
	%vr8492 = bitcast i8* bitcast ([36 x i8]* @Lt_0741 to i8*) to i8*
	; arg 35
	%vr8491 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8492, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr8491
	%vr8495 = bitcast %FBSTRING* %vr8491 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8495, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8498 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8498, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8497
	%vr8501 = bitcast %FBSTRING* %vr8497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8501, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8504 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8503 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8504, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8503
	%vr8507 = bitcast %FBSTRING* %vr8503 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8507, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0742
	%vr8510 = bitcast i8* bitcast ([42 x i8]* @Lt_0742 to i8*) to i8*
	; arg 41
	%vr8509 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8510, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr8509
	%vr8513 = bitcast %FBSTRING* %vr8509 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8513, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0743
	%vr8516 = bitcast i8* bitcast ([62 x i8]* @Lt_0743 to i8*) to i8*
	; arg 61
	%vr8515 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8516, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr8515
	%vr8519 = bitcast %FBSTRING* %vr8515 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8519, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8522 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8521 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8522, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8521
	%vr8525 = bitcast %FBSTRING* %vr8521 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8525, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0744
	%vr8528 = bitcast i8* bitcast ([64 x i8]* @Lt_0744 to i8*) to i8*
	; arg 63
	%vr8527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8528, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr8527
	%vr8531 = bitcast %FBSTRING* %vr8527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8531, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0745
	%vr8534 = bitcast i8* bitcast ([22 x i8]* @Lt_0745 to i8*) to i8*
	; arg 21
	%vr8533 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8534, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr8533
	%vr8537 = bitcast %FBSTRING* %vr8533 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8537, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0746
	%vr8540 = bitcast i8* bitcast ([27 x i8]* @Lt_0746 to i8*) to i8*
	; arg 26
	%vr8539 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8540, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8539
	%vr8543 = bitcast %FBSTRING* %vr8539 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8543, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0747
	%vr8546 = bitcast i8* bitcast ([24 x i8]* @Lt_0747 to i8*) to i8*
	; arg 23
	%vr8545 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8546, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8545
	%vr8549 = bitcast %FBSTRING* %vr8545 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8549, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0748
	%vr8552 = bitcast i8* bitcast ([27 x i8]* @Lt_0748 to i8*) to i8*
	; arg 26
	%vr8551 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8552, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8551
	%vr8555 = bitcast %FBSTRING* %vr8551 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8555, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0749
	%vr8558 = bitcast i8* bitcast ([24 x i8]* @Lt_0749 to i8*) to i8*
	; arg 23
	%vr8557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8558, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8557
	%vr8561 = bitcast %FBSTRING* %vr8557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8561, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr8564 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr8563 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8564, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8563
	%vr8567 = bitcast %FBSTRING* %vr8563 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8567, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr8570 = bitcast i8* bitcast ([39 x i8]* @Lt_074A to i8*) to i8*
	; arg 38
	%vr8569 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8570, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr8569
	%vr8573 = bitcast %FBSTRING* %vr8569 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8573, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074B
	%vr8576 = bitcast i8* bitcast ([21 x i8]* @Lt_074B to i8*) to i8*
	; arg 20
	%vr8575 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8576, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr8575
	%vr8579 = bitcast %FBSTRING* %vr8575 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8579, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074C
	%vr8582 = bitcast i8* bitcast ([26 x i8]* @Lt_074C to i8*) to i8*
	; arg 25
	%vr8581 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8582, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8581
	%vr8585 = bitcast %FBSTRING* %vr8581 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8585, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074D
	%vr8588 = bitcast i8* bitcast ([22 x i8]* @Lt_074D to i8*) to i8*
	; arg 21
	%vr8587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8588, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr8587
	%vr8591 = bitcast %FBSTRING* %vr8587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8591, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074E
	%vr8594 = bitcast i8* bitcast ([37 x i8]* @Lt_074E to i8*) to i8*
	; arg 36
	%vr8593 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8594, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr8593
	%vr8597 = bitcast %FBSTRING* %vr8593 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8597, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074F
	%vr8600 = bitcast i8* bitcast ([23 x i8]* @Lt_074F to i8*) to i8*
	; arg 22
	%vr8599 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8600, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8599
	%vr8603 = bitcast %FBSTRING* %vr8599 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8603, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0750
	%vr8606 = bitcast i8* bitcast ([23 x i8]* @Lt_0750 to i8*) to i8*
	; arg 22
	%vr8605 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8606, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8605
	%vr8609 = bitcast %FBSTRING* %vr8605 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8609, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8612 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8611 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8612, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8611
	%vr8615 = bitcast %FBSTRING* %vr8611 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8615, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0751
	%vr8618 = bitcast i8* bitcast ([27 x i8]* @Lt_0751 to i8*) to i8*
	; arg 26
	%vr8617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8618, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8617
	%vr8621 = bitcast %FBSTRING* %vr8617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8621, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0752
	%vr8624 = bitcast i8* bitcast ([33 x i8]* @Lt_0752 to i8*) to i8*
	; arg 32
	%vr8623 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8624, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8623
	%vr8627 = bitcast %FBSTRING* %vr8623 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8627, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0753
	%vr8630 = bitcast i8* bitcast ([68 x i8]* @Lt_0753 to i8*) to i8*
	; arg 67
	%vr8629 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8630, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr8629
	%vr8633 = bitcast %FBSTRING* %vr8629 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8633, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0754
	%vr8636 = bitcast i8* bitcast ([68 x i8]* @Lt_0754 to i8*) to i8*
	; arg 67
	%vr8635 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8636, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr8635
	%vr8639 = bitcast %FBSTRING* %vr8635 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8639, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0755
	%vr8642 = bitcast i8* bitcast ([68 x i8]* @Lt_0755 to i8*) to i8*
	; arg 67
	%vr8641 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8642, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr8641
	%vr8645 = bitcast %FBSTRING* %vr8641 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8645, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8648 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8648, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8647
	%vr8651 = bitcast %FBSTRING* %vr8647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8651, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8654 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8653 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8654, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8653
	%vr8657 = bitcast %FBSTRING* %vr8653 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8657, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0756
	%vr8660 = bitcast i8* bitcast ([42 x i8]* @Lt_0756 to i8*) to i8*
	; arg 41
	%vr8659 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8660, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr8659
	%vr8663 = bitcast %FBSTRING* %vr8659 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8663, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8666 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8665 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8666, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8665
	%vr8669 = bitcast %FBSTRING* %vr8665 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8669, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0757
	%vr8672 = bitcast i8* bitcast ([41 x i8]* @Lt_0757 to i8*) to i8*
	; arg 40
	%vr8671 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8672, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8671
	%vr8675 = bitcast %FBSTRING* %vr8671 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8675, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0758
	%vr8678 = bitcast i8* bitcast ([26 x i8]* @Lt_0758 to i8*) to i8*
	; arg 25
	%vr8677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8678, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8677
	%vr8681 = bitcast %FBSTRING* %vr8677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8681, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0759
	%vr8684 = bitcast i8* bitcast ([23 x i8]* @Lt_0759 to i8*) to i8*
	; arg 22
	%vr8683 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8684, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8683
	%vr8687 = bitcast %FBSTRING* %vr8683 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8687, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075A
	%vr8690 = bitcast i8* bitcast ([71 x i8]* @Lt_075A to i8*) to i8*
	; arg 70
	%vr8689 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8690, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr8689
	%vr8693 = bitcast %FBSTRING* %vr8689 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8693, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075B
	%vr8696 = bitcast i8* bitcast ([55 x i8]* @Lt_075B to i8*) to i8*
	; arg 54
	%vr8695 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8696, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr8695
	%vr8699 = bitcast %FBSTRING* %vr8695 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8699, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075C
	%vr8702 = bitcast i8* bitcast ([33 x i8]* @Lt_075C to i8*) to i8*
	; arg 32
	%vr8701 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8702, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8701
	%vr8705 = bitcast %FBSTRING* %vr8701 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8705, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8708 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8708, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8707
	%vr8711 = bitcast %FBSTRING* %vr8707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8711, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8714 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8713 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8714, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8713
	%vr8717 = bitcast %FBSTRING* %vr8713 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8717, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075D
	%vr8720 = bitcast i8* bitcast ([35 x i8]* @Lt_075D to i8*) to i8*
	; arg 34
	%vr8719 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8720, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr8719
	%vr8723 = bitcast %FBSTRING* %vr8719 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8723, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8726 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8725 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8726, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8725
	%vr8729 = bitcast %FBSTRING* %vr8725 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8729, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072F
	%vr8732 = bitcast i8* bitcast ([21 x i8]* @Lt_072F to i8*) to i8*
	; arg 20
	%vr8731 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8732, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr8731
	%vr8735 = bitcast %FBSTRING* %vr8731 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8735, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0730
	%vr8738 = bitcast i8* bitcast ([6 x i8]* @Lt_0730 to i8*) to i8*
	; arg 5
	%vr8737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8738, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr8737
	%vr8741 = bitcast %FBSTRING* %vr8737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8741, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075E
	%vr8744 = bitcast i8* bitcast ([64 x i8]* @Lt_075E to i8*) to i8*
	; arg 63
	%vr8743 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8744, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr8743
	%vr8747 = bitcast %FBSTRING* %vr8743 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8747, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr8750 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr8749 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8750, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr8749
	%vr8753 = bitcast %FBSTRING* %vr8749 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8753, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0732
	%vr8756 = bitcast i8* bitcast ([24 x i8]* @Lt_0732 to i8*) to i8*
	; arg 23
	%vr8755 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8756, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8755
	%vr8759 = bitcast %FBSTRING* %vr8755 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8759, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075F
	%vr8762 = bitcast i8* bitcast ([55 x i8]* @Lt_075F to i8*) to i8*
	; arg 54
	%vr8761 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8762, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr8761
	%vr8765 = bitcast %FBSTRING* %vr8761 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8765, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0734
	%vr8768 = bitcast i8* bitcast ([63 x i8]* @Lt_0734 to i8*) to i8*
	; arg 62
	%vr8767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8768, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr8767
	%vr8771 = bitcast %FBSTRING* %vr8767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8771, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr8774 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr8773 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8774, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr8773
	%vr8777 = bitcast %FBSTRING* %vr8773 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8777, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8780 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8779 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8780, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8779
	%vr8783 = bitcast %FBSTRING* %vr8779 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8783, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8786 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8785 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8786, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8785
	%vr8789 = bitcast %FBSTRING* %vr8785 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8789, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0760
	%vr8792 = bitcast i8* bitcast ([12 x i8]* @Lt_0760 to i8*) to i8*
	; arg 11
	%vr8791 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8792, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr8791
	%vr8795 = bitcast %FBSTRING* %vr8791 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8795, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr8798 = bitcast i8* bitcast ([35 x i8]* @Lt_0761 to i8*) to i8*
	; arg 34
	%vr8797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8798, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr8797
	%vr8801 = bitcast %FBSTRING* %vr8797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8801, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8804 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8803 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8804, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8803
	%vr8807 = bitcast %FBSTRING* %vr8803 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8807, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0762
	%vr8810 = bitcast i8* bitcast ([46 x i8]* @Lt_0762 to i8*) to i8*
	; arg 45
	%vr8809 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8810, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr8809
	%vr8813 = bitcast %FBSTRING* %vr8809 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8813, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0763
	%vr8816 = bitcast i8* bitcast ([55 x i8]* @Lt_0763 to i8*) to i8*
	; arg 54
	%vr8815 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8816, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr8815
	%vr8819 = bitcast %FBSTRING* %vr8815 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8819, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8822 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8821 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8822, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8821
	%vr8825 = bitcast %FBSTRING* %vr8821 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8825, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8828 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8828, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8827
	%vr8831 = bitcast %FBSTRING* %vr8827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8831, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0764
	%vr8834 = bitcast i8* bitcast ([25 x i8]* @Lt_0764 to i8*) to i8*
	; arg 24
	%vr8833 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8834, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8833
	%vr8837 = bitcast %FBSTRING* %vr8833 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8837, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0765
	%vr8840 = bitcast i8* bitcast ([50 x i8]* @Lt_0765 to i8*) to i8*
	; arg 49
	%vr8839 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8840, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr8839
	%vr8843 = bitcast %FBSTRING* %vr8839 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8843, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8846 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8845 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8846, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8845
	%vr8849 = bitcast %FBSTRING* %vr8845 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8849, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074B
	%vr8852 = bitcast i8* bitcast ([21 x i8]* @Lt_074B to i8*) to i8*
	; arg 20
	%vr8851 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8852, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr8851
	%vr8855 = bitcast %FBSTRING* %vr8851 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8855, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0766
	%vr8858 = bitcast i8* bitcast ([21 x i8]* @Lt_0766 to i8*) to i8*
	; arg 20
	%vr8857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8858, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr8857
	%vr8861 = bitcast %FBSTRING* %vr8857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8861, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0767
	%vr8864 = bitcast i8* bitcast ([29 x i8]* @Lt_0767 to i8*) to i8*
	; arg 28
	%vr8863 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8864, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8863
	%vr8867 = bitcast %FBSTRING* %vr8863 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8867, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0768
	%vr8870 = bitcast i8* bitcast ([29 x i8]* @Lt_0768 to i8*) to i8*
	; arg 28
	%vr8869 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8870, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8869
	%vr8873 = bitcast %FBSTRING* %vr8869 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8873, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8876 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8875 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8876, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8875
	%vr8879 = bitcast %FBSTRING* %vr8875 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8879, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0769
	%vr8882 = bitcast i8* bitcast ([48 x i8]* @Lt_0769 to i8*) to i8*
	; arg 47
	%vr8881 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8882, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr8881
	%vr8885 = bitcast %FBSTRING* %vr8881 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8885, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076A
	%vr8888 = bitcast i8* bitcast ([43 x i8]* @Lt_076A to i8*) to i8*
	; arg 42
	%vr8887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8888, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr8887
	%vr8891 = bitcast %FBSTRING* %vr8887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8891, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076B
	%vr8894 = bitcast i8* bitcast ([20 x i8]* @Lt_076B to i8*) to i8*
	; arg 19
	%vr8893 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8894, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8893
	%vr8897 = bitcast %FBSTRING* %vr8893 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8897, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076C
	%vr8900 = bitcast i8* bitcast ([25 x i8]* @Lt_076C to i8*) to i8*
	; arg 24
	%vr8899 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8900, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8899
	%vr8903 = bitcast %FBSTRING* %vr8899 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8903, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076D
	%vr8906 = bitcast i8* bitcast ([78 x i8]* @Lt_076D to i8*) to i8*
	; arg 77
	%vr8905 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8906, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr8905
	%vr8909 = bitcast %FBSTRING* %vr8905 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8909, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076E
	%vr8912 = bitcast i8* bitcast ([38 x i8]* @Lt_076E to i8*) to i8*
	; arg 37
	%vr8911 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8912, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr8911
	%vr8915 = bitcast %FBSTRING* %vr8911 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8915, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8918 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8918, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8917
	%vr8921 = bitcast %FBSTRING* %vr8917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8921, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8924 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8923 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8924, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8923
	%vr8927 = bitcast %FBSTRING* %vr8923 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8927, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076F
	%vr8930 = bitcast i8* bitcast ([41 x i8]* @Lt_076F to i8*) to i8*
	; arg 40
	%vr8929 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8930, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8929
	%vr8933 = bitcast %FBSTRING* %vr8929 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8933, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8936 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8935 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8936, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8935
	%vr8939 = bitcast %FBSTRING* %vr8935 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8939, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0770
	%vr8942 = bitcast i8* bitcast ([44 x i8]* @Lt_0770 to i8*) to i8*
	; arg 43
	%vr8941 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8942, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr8941
	%vr8945 = bitcast %FBSTRING* %vr8941 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8945, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0771
	%vr8948 = bitcast i8* bitcast ([53 x i8]* @Lt_0771 to i8*) to i8*
	; arg 52
	%vr8947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8948, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8947
	%vr8951 = bitcast %FBSTRING* %vr8947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8951, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8954 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr8953 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8954, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8953
	%vr8957 = bitcast %FBSTRING* %vr8953 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8957, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8960 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8959 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8960, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8959
	%vr8963 = bitcast %FBSTRING* %vr8959 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8963, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0760
	%vr8966 = bitcast i8* bitcast ([12 x i8]* @Lt_0760 to i8*) to i8*
	; arg 11
	%vr8965 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8966, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr8965
	%vr8969 = bitcast %FBSTRING* %vr8965 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8969, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0772
	%vr8972 = bitcast i8* bitcast ([37 x i8]* @Lt_0772 to i8*) to i8*
	; arg 36
	%vr8971 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8972, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr8971
	%vr8975 = bitcast %FBSTRING* %vr8971 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8975, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8978 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr8977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8978, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8977
	%vr8981 = bitcast %FBSTRING* %vr8977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8981, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073A
	%vr8984 = bitcast i8* bitcast ([40 x i8]* @Lt_073A to i8*) to i8*
	; arg 39
	%vr8983 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8984, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr8983
	%vr8987 = bitcast %FBSTRING* %vr8983 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8987, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0773
	%vr8990 = bitcast i8* bitcast ([25 x i8]* @Lt_0773 to i8*) to i8*
	; arg 24
	%vr8989 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8990, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8989
	%vr8993 = bitcast %FBSTRING* %vr8989 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8993, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0774
	%vr8996 = bitcast i8* bitcast ([39 x i8]* @Lt_0774 to i8*) to i8*
	; arg 38
	%vr8995 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8996, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr8995
	%vr8999 = bitcast %FBSTRING* %vr8995 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8999, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0734
	%vr9002 = bitcast i8* bitcast ([63 x i8]* @Lt_0734 to i8*) to i8*
	; arg 62
	%vr9001 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9002, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr9001
	%vr9005 = bitcast %FBSTRING* %vr9001 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9005, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9008 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9008, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9007
	%vr9011 = bitcast %FBSTRING* %vr9007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9011, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9014 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9013 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9014, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9013
	%vr9017 = bitcast %FBSTRING* %vr9013 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9017, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0775
	%vr9020 = bitcast i8* bitcast ([45 x i8]* @Lt_0775 to i8*) to i8*
	; arg 44
	%vr9019 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9020, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9019
	%vr9023 = bitcast %FBSTRING* %vr9019 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9023, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0776
	%vr9026 = bitcast i8* bitcast ([64 x i8]* @Lt_0776 to i8*) to i8*
	; arg 63
	%vr9025 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9026, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr9025
	%vr9029 = bitcast %FBSTRING* %vr9025 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9029, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9032 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9031 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9032, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9031
	%vr9035 = bitcast %FBSTRING* %vr9031 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9035, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073A
	%vr9038 = bitcast i8* bitcast ([40 x i8]* @Lt_073A to i8*) to i8*
	; arg 39
	%vr9037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9038, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr9037
	%vr9041 = bitcast %FBSTRING* %vr9037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9041, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9044 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9043 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9044, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9043
	%vr9047 = bitcast %FBSTRING* %vr9043 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9047, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0777
	%vr9050 = bitcast i8* bitcast ([26 x i8]* @Lt_0777 to i8*) to i8*
	; arg 25
	%vr9049 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9050, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr9049
	%vr9053 = bitcast %FBSTRING* %vr9049 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9053, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0778
	%vr9056 = bitcast i8* bitcast ([33 x i8]* @Lt_0778 to i8*) to i8*
	; arg 32
	%vr9055 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9056, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr9055
	%vr9059 = bitcast %FBSTRING* %vr9055 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9059, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0779
	%vr9062 = bitcast i8* bitcast ([64 x i8]* @Lt_0779 to i8*) to i8*
	; arg 63
	%vr9061 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9062, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr9061
	%vr9065 = bitcast %FBSTRING* %vr9061 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9065, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077A
	%vr9068 = bitcast i8* bitcast ([68 x i8]* @Lt_077A to i8*) to i8*
	; arg 67
	%vr9067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9068, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr9067
	%vr9071 = bitcast %FBSTRING* %vr9067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9071, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077B
	%vr9074 = bitcast i8* bitcast ([55 x i8]* @Lt_077B to i8*) to i8*
	; arg 54
	%vr9073 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9074, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr9073
	%vr9077 = bitcast %FBSTRING* %vr9073 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9077, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077C
	%vr9080 = bitcast i8* bitcast ([45 x i8]* @Lt_077C to i8*) to i8*
	; arg 44
	%vr9079 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9080, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9079
	%vr9083 = bitcast %FBSTRING* %vr9079 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9083, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9086 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9085 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9086, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9085
	%vr9089 = bitcast %FBSTRING* %vr9085 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9089, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9092 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9091 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9092, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9091
	%vr9095 = bitcast %FBSTRING* %vr9091 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9095, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077D
	%vr9098 = bitcast i8* bitcast ([57 x i8]* @Lt_077D to i8*) to i8*
	; arg 56
	%vr9097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9098, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr9097
	%vr9101 = bitcast %FBSTRING* %vr9097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9101, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9104 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9103 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9104, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9103
	%vr9107 = bitcast %FBSTRING* %vr9103 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9107, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077E
	%vr9110 = bitcast i8* bitcast ([24 x i8]* @Lt_077E to i8*) to i8*
	; arg 23
	%vr9109 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9110, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9109
	%vr9113 = bitcast %FBSTRING* %vr9109 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9113, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077F
	%vr9116 = bitcast i8* bitcast ([31 x i8]* @Lt_077F to i8*) to i8*
	; arg 30
	%vr9115 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9116, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9115
	%vr9119 = bitcast %FBSTRING* %vr9115 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9119, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0780
	%vr9122 = bitcast i8* bitcast ([31 x i8]* @Lt_0780 to i8*) to i8*
	; arg 30
	%vr9121 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9122, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9121
	%vr9125 = bitcast %FBSTRING* %vr9121 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9125, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0781
	%vr9128 = bitcast i8* bitcast ([36 x i8]* @Lt_0781 to i8*) to i8*
	; arg 35
	%vr9127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9128, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr9127
	%vr9131 = bitcast %FBSTRING* %vr9127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9131, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9134 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9133 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9134, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9133
	%vr9137 = bitcast %FBSTRING* %vr9133 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9137, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0782
	%vr9140 = bitcast i8* bitcast ([45 x i8]* @Lt_0782 to i8*) to i8*
	; arg 44
	%vr9139 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9140, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9139
	%vr9143 = bitcast %FBSTRING* %vr9139 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9143, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9146 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9145 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9146, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9145
	%vr9149 = bitcast %FBSTRING* %vr9145 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9149, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0783
	%vr9152 = bitcast i8* bitcast ([47 x i8]* @Lt_0783 to i8*) to i8*
	; arg 46
	%vr9151 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9152, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr9151
	%vr9155 = bitcast %FBSTRING* %vr9151 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9155, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0784
	%vr9158 = bitcast i8* bitcast ([35 x i8]* @Lt_0784 to i8*) to i8*
	; arg 34
	%vr9157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9158, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9157
	%vr9161 = bitcast %FBSTRING* %vr9157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9161, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9164 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9163 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9164, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9163
	%vr9167 = bitcast %FBSTRING* %vr9163 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9167, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0785
	%vr9170 = bitcast i8* bitcast ([30 x i8]* @Lt_0785 to i8*) to i8*
	; arg 29
	%vr9169 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9170, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9169
	%vr9173 = bitcast %FBSTRING* %vr9169 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9173, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0786
	%vr9176 = bitcast i8* bitcast ([59 x i8]* @Lt_0786 to i8*) to i8*
	; arg 58
	%vr9175 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9176, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr9175
	%vr9179 = bitcast %FBSTRING* %vr9175 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9179, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9182 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9181 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9182, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9181
	%vr9185 = bitcast %FBSTRING* %vr9181 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9185, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0787
	%vr9188 = bitcast i8* bitcast ([30 x i8]* @Lt_0787 to i8*) to i8*
	; arg 29
	%vr9187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9188, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9187
	%vr9191 = bitcast %FBSTRING* %vr9187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9191, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0788
	%vr9194 = bitcast i8* bitcast ([26 x i8]* @Lt_0788 to i8*) to i8*
	; arg 25
	%vr9193 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9194, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr9193
	%vr9197 = bitcast %FBSTRING* %vr9193 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9197, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9200 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9199 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9200, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9199
	%vr9203 = bitcast %FBSTRING* %vr9199 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9203, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0789
	%vr9206 = bitcast i8* bitcast ([53 x i8]* @Lt_0789 to i8*) to i8*
	; arg 52
	%vr9205 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9206, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr9205
	%vr9209 = bitcast %FBSTRING* %vr9205 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9209, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9212 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9211 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9212, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9211
	%vr9215 = bitcast %FBSTRING* %vr9211 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9215, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078A
	%vr9218 = bitcast i8* bitcast ([47 x i8]* @Lt_078A to i8*) to i8*
	; arg 46
	%vr9217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9218, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr9217
	%vr9221 = bitcast %FBSTRING* %vr9217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9221, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078B
	%vr9224 = bitcast i8* bitcast ([50 x i8]* @Lt_078B to i8*) to i8*
	; arg 49
	%vr9223 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9224, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr9223
	%vr9227 = bitcast %FBSTRING* %vr9223 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9227, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9230 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9229 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9230, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9229
	%vr9233 = bitcast %FBSTRING* %vr9229 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9233, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9236 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9235 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9236, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9235
	%vr9239 = bitcast %FBSTRING* %vr9235 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9239, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078C
	%vr9242 = bitcast i8* bitcast ([71 x i8]* @Lt_078C to i8*) to i8*
	; arg 70
	%vr9241 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9242, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr9241
	%vr9245 = bitcast %FBSTRING* %vr9241 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9245, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9248 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9248, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9247
	%vr9251 = bitcast %FBSTRING* %vr9247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9251, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr9254 = bitcast i8* bitcast ([25 x i8]* @Lt_078D to i8*) to i8*
	; arg 24
	%vr9253 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9254, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9253
	%vr9257 = bitcast %FBSTRING* %vr9253 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9257, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078E
	%vr9260 = bitcast i8* bitcast ([23 x i8]* @Lt_078E to i8*) to i8*
	; arg 22
	%vr9259 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9260, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9259
	%vr9263 = bitcast %FBSTRING* %vr9259 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9263, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078F
	%vr9266 = bitcast i8* bitcast ([30 x i8]* @Lt_078F to i8*) to i8*
	; arg 29
	%vr9265 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9266, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9265
	%vr9269 = bitcast %FBSTRING* %vr9265 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9269, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0790
	%vr9272 = bitcast i8* bitcast ([72 x i8]* @Lt_0790 to i8*) to i8*
	; arg 71
	%vr9271 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9272, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr9271
	%vr9275 = bitcast %FBSTRING* %vr9271 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9275, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0734
	%vr9278 = bitcast i8* bitcast ([63 x i8]* @Lt_0734 to i8*) to i8*
	; arg 62
	%vr9277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9278, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr9277
	%vr9281 = bitcast %FBSTRING* %vr9277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9281, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9284 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9283 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9284, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9283
	%vr9287 = bitcast %FBSTRING* %vr9283 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9287, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9290 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9289 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9290, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9289
	%vr9293 = bitcast %FBSTRING* %vr9289 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9293, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0791
	%vr9296 = bitcast i8* bitcast ([46 x i8]* @Lt_0791 to i8*) to i8*
	; arg 45
	%vr9295 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9296, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr9295
	%vr9299 = bitcast %FBSTRING* %vr9295 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9299, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0792
	%vr9302 = bitcast i8* bitcast ([47 x i8]* @Lt_0792 to i8*) to i8*
	; arg 46
	%vr9301 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9302, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr9301
	%vr9305 = bitcast %FBSTRING* %vr9301 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9305, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9308 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9308, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9307
	%vr9311 = bitcast %FBSTRING* %vr9307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9311, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0793
	%vr9314 = bitcast i8* bitcast ([44 x i8]* @Lt_0793 to i8*) to i8*
	; arg 43
	%vr9313 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9314, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr9313
	%vr9317 = bitcast %FBSTRING* %vr9313 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9317, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0794
	%vr9320 = bitcast i8* bitcast ([30 x i8]* @Lt_0794 to i8*) to i8*
	; arg 29
	%vr9319 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9320, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9319
	%vr9323 = bitcast %FBSTRING* %vr9319 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9323, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0795
	%vr9326 = bitcast i8* bitcast ([50 x i8]* @Lt_0795 to i8*) to i8*
	; arg 49
	%vr9325 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9326, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr9325
	%vr9329 = bitcast %FBSTRING* %vr9325 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9329, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0796
	%vr9332 = bitcast i8* bitcast ([43 x i8]* @Lt_0796 to i8*) to i8*
	; arg 42
	%vr9331 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9332, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr9331
	%vr9335 = bitcast %FBSTRING* %vr9331 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9335, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9338 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9338, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9337
	%vr9341 = bitcast %FBSTRING* %vr9337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9341, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9344 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9343 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9344, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9343
	%vr9347 = bitcast %FBSTRING* %vr9343 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9347, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0797
	%vr9350 = bitcast i8* bitcast ([36 x i8]* @Lt_0797 to i8*) to i8*
	; arg 35
	%vr9349 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9350, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr9349
	%vr9353 = bitcast %FBSTRING* %vr9349 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9353, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9356 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9355 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9356, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9355
	%vr9359 = bitcast %FBSTRING* %vr9355 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9359, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0798
	%vr9362 = bitcast i8* bitcast ([16 x i8]* @Lt_0798 to i8*) to i8*
	; arg 15
	%vr9361 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9362, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9361
	%vr9365 = bitcast %FBSTRING* %vr9361 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9365, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0799
	%vr9368 = bitcast i8* bitcast ([35 x i8]* @Lt_0799 to i8*) to i8*
	; arg 34
	%vr9367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9368, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9367
	%vr9371 = bitcast %FBSTRING* %vr9367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9371, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9374 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9373 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9374, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9373
	%vr9377 = bitcast %FBSTRING* %vr9373 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9377, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079A
	%vr9380 = bitcast i8* bitcast ([22 x i8]* @Lt_079A to i8*) to i8*
	; arg 21
	%vr9379 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9380, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9379
	%vr9383 = bitcast %FBSTRING* %vr9379 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9383, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079B
	%vr9386 = bitcast i8* bitcast ([10 x i8]* @Lt_079B to i8*) to i8*
	; arg 9
	%vr9385 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9386, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr9385
	%vr9389 = bitcast %FBSTRING* %vr9385 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9389, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079C
	%vr9392 = bitcast i8* bitcast ([34 x i8]* @Lt_079C to i8*) to i8*
	; arg 33
	%vr9391 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9392, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr9391
	%vr9395 = bitcast %FBSTRING* %vr9391 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9395, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079D
	%vr9398 = bitcast i8* bitcast ([57 x i8]* @Lt_079D to i8*) to i8*
	; arg 56
	%vr9397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9398, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr9397
	%vr9401 = bitcast %FBSTRING* %vr9397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9401, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079E
	%vr9404 = bitcast i8* bitcast ([42 x i8]* @Lt_079E to i8*) to i8*
	; arg 41
	%vr9403 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9404, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr9403
	%vr9407 = bitcast %FBSTRING* %vr9403 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9407, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079F
	%vr9410 = bitcast i8* bitcast ([11 x i8]* @Lt_079F to i8*) to i8*
	; arg 10
	%vr9409 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9410, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr9409
	%vr9413 = bitcast %FBSTRING* %vr9409 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9413, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9416 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9415 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9416, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9415
	%vr9419 = bitcast %FBSTRING* %vr9415 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9419, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079A
	%vr9422 = bitcast i8* bitcast ([22 x i8]* @Lt_079A to i8*) to i8*
	; arg 21
	%vr9421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9422, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9421
	%vr9425 = bitcast %FBSTRING* %vr9421 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9425, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A0
	%vr9428 = bitcast i8* bitcast ([10 x i8]* @Lt_07A0 to i8*) to i8*
	; arg 9
	%vr9427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9428, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr9427
	%vr9431 = bitcast %FBSTRING* %vr9427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9431, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A1
	%vr9434 = bitcast i8* bitcast ([10 x i8]* @Lt_07A1 to i8*) to i8*
	; arg 9
	%vr9433 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9434, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr9433
	%vr9437 = bitcast %FBSTRING* %vr9433 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9437, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A2
	%vr9440 = bitcast i8* bitcast ([38 x i8]* @Lt_07A2 to i8*) to i8*
	; arg 37
	%vr9439 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9440, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9439
	%vr9443 = bitcast %FBSTRING* %vr9439 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9443, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A3
	%vr9446 = bitcast i8* bitcast ([38 x i8]* @Lt_07A3 to i8*) to i8*
	; arg 37
	%vr9445 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9446, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9445
	%vr9449 = bitcast %FBSTRING* %vr9445 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9449, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A4
	%vr9452 = bitcast i8* bitcast ([38 x i8]* @Lt_07A4 to i8*) to i8*
	; arg 37
	%vr9451 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9452, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9451
	%vr9455 = bitcast %FBSTRING* %vr9451 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9455, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A5
	%vr9458 = bitcast i8* bitcast ([30 x i8]* @Lt_07A5 to i8*) to i8*
	; arg 29
	%vr9457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9458, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9457
	%vr9461 = bitcast %FBSTRING* %vr9457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9461, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A6
	%vr9464 = bitcast i8* bitcast ([45 x i8]* @Lt_07A6 to i8*) to i8*
	; arg 44
	%vr9463 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9464, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9463
	%vr9467 = bitcast %FBSTRING* %vr9463 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9467, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A7
	%vr9470 = bitcast i8* bitcast ([45 x i8]* @Lt_07A7 to i8*) to i8*
	; arg 44
	%vr9469 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9470, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9469
	%vr9473 = bitcast %FBSTRING* %vr9469 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9473, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079F
	%vr9476 = bitcast i8* bitcast ([11 x i8]* @Lt_079F to i8*) to i8*
	; arg 10
	%vr9475 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9476, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr9475
	%vr9479 = bitcast %FBSTRING* %vr9475 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9479, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9482 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9481 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9482, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9481
	%vr9485 = bitcast %FBSTRING* %vr9481 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9485, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A8
	%vr9488 = bitcast i8* bitcast ([24 x i8]* @Lt_07A8 to i8*) to i8*
	; arg 23
	%vr9487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9488, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9487
	%vr9491 = bitcast %FBSTRING* %vr9487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9491, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079B
	%vr9494 = bitcast i8* bitcast ([10 x i8]* @Lt_079B to i8*) to i8*
	; arg 9
	%vr9493 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9494, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr9493
	%vr9497 = bitcast %FBSTRING* %vr9493 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9497, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A9
	%vr9500 = bitcast i8* bitcast ([22 x i8]* @Lt_07A9 to i8*) to i8*
	; arg 21
	%vr9499 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9500, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9499
	%vr9503 = bitcast %FBSTRING* %vr9499 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9503, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079F
	%vr9506 = bitcast i8* bitcast ([11 x i8]* @Lt_079F to i8*) to i8*
	; arg 10
	%vr9505 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9506, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr9505
	%vr9509 = bitcast %FBSTRING* %vr9505 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9509, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9512 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9511 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9512, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9511
	%vr9515 = bitcast %FBSTRING* %vr9511 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9515, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9518 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9518, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9517
	%vr9521 = bitcast %FBSTRING* %vr9517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9521, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AA
	%vr9524 = bitcast i8* bitcast ([41 x i8]* @Lt_07AA to i8*) to i8*
	; arg 40
	%vr9523 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9524, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr9523
	%vr9527 = bitcast %FBSTRING* %vr9523 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9527, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9530 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9529 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9530, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9529
	%vr9533 = bitcast %FBSTRING* %vr9529 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9533, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AB
	%vr9536 = bitcast i8* bitcast ([27 x i8]* @Lt_07AB to i8*) to i8*
	; arg 26
	%vr9535 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9536, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr9535
	%vr9539 = bitcast %FBSTRING* %vr9535 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9539, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9542 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9541 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9542, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9541
	%vr9545 = bitcast %FBSTRING* %vr9541 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9545, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AC
	%vr9548 = bitcast i8* bitcast ([16 x i8]* @Lt_07AC to i8*) to i8*
	; arg 15
	%vr9547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9548, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9547
	%vr9551 = bitcast %FBSTRING* %vr9547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9551, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AD
	%vr9554 = bitcast i8* bitcast ([22 x i8]* @Lt_07AD to i8*) to i8*
	; arg 21
	%vr9553 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9554, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9553
	%vr9557 = bitcast %FBSTRING* %vr9553 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9557, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr9560 = bitcast i8* bitcast ([36 x i8]* @Lt_07AE to i8*) to i8*
	; arg 35
	%vr9559 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9560, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr9559
	%vr9563 = bitcast %FBSTRING* %vr9559 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9563, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AF
	%vr9566 = bitcast i8* bitcast ([17 x i8]* @Lt_07AF to i8*) to i8*
	; arg 16
	%vr9565 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9566, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr9565
	%vr9569 = bitcast %FBSTRING* %vr9565 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9569, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr9572 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr9571 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9572, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9571
	%vr9575 = bitcast %FBSTRING* %vr9571 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9575, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B1
	%vr9578 = bitcast i8* bitcast ([36 x i8]* @Lt_07B1 to i8*) to i8*
	; arg 35
	%vr9577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9578, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr9577
	%vr9581 = bitcast %FBSTRING* %vr9577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9581, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B2
	%vr9584 = bitcast i8* bitcast ([59 x i8]* @Lt_07B2 to i8*) to i8*
	; arg 58
	%vr9583 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9584, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr9583
	%vr9587 = bitcast %FBSTRING* %vr9583 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9587, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr9590 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr9589 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9590, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr9589
	%vr9593 = bitcast %FBSTRING* %vr9589 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9593, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B4
	%vr9596 = bitcast i8* bitcast ([29 x i8]* @Lt_07B4 to i8*) to i8*
	; arg 28
	%vr9595 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9596, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr9595
	%vr9599 = bitcast %FBSTRING* %vr9595 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9599, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B5
	%vr9602 = bitcast i8* bitcast ([58 x i8]* @Lt_07B5 to i8*) to i8*
	; arg 57
	%vr9601 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9602, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr9601
	%vr9605 = bitcast %FBSTRING* %vr9601 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9605, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9608 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9608, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9607
	%vr9611 = bitcast %FBSTRING* %vr9607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9611, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B6
	%vr9614 = bitcast i8* bitcast ([44 x i8]* @Lt_07B6 to i8*) to i8*
	; arg 43
	%vr9613 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9614, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr9613
	%vr9617 = bitcast %FBSTRING* %vr9613 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9617, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B7
	%vr9620 = bitcast i8* bitcast ([63 x i8]* @Lt_07B7 to i8*) to i8*
	; arg 62
	%vr9619 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9620, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr9619
	%vr9623 = bitcast %FBSTRING* %vr9619 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9623, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9626 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9625 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9626, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9625
	%vr9629 = bitcast %FBSTRING* %vr9625 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9629, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B8
	%vr9632 = bitcast i8* bitcast ([64 x i8]* @Lt_07B8 to i8*) to i8*
	; arg 63
	%vr9631 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9632, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr9631
	%vr9635 = bitcast %FBSTRING* %vr9631 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9635, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9638 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9638, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9637
	%vr9641 = bitcast %FBSTRING* %vr9637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9641, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B9
	%vr9644 = bitcast i8* bitcast ([42 x i8]* @Lt_07B9 to i8*) to i8*
	; arg 41
	%vr9643 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9644, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr9643
	%vr9647 = bitcast %FBSTRING* %vr9643 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9647, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BA
	%vr9650 = bitcast i8* bitcast ([59 x i8]* @Lt_07BA to i8*) to i8*
	; arg 58
	%vr9649 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9650, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr9649
	%vr9653 = bitcast %FBSTRING* %vr9649 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9653, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9656 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9655 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9656, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9655
	%vr9659 = bitcast %FBSTRING* %vr9655 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9659, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9662 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9661 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9662, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9661
	%vr9665 = bitcast %FBSTRING* %vr9661 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9665, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BB
	%vr9668 = bitcast i8* bitcast ([66 x i8]* @Lt_07BB to i8*) to i8*
	; arg 65
	%vr9667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9668, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr9667
	%vr9671 = bitcast %FBSTRING* %vr9667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9671, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9674 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9673 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9674, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9673
	%vr9677 = bitcast %FBSTRING* %vr9673 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9677, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BC
	%vr9680 = bitcast i8* bitcast ([39 x i8]* @Lt_07BC to i8*) to i8*
	; arg 38
	%vr9679 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9680, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr9679
	%vr9683 = bitcast %FBSTRING* %vr9679 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9683, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BD
	%vr9686 = bitcast i8* bitcast ([64 x i8]* @Lt_07BD to i8*) to i8*
	; arg 63
	%vr9685 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9686, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr9685
	%vr9689 = bitcast %FBSTRING* %vr9685 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9689, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BE
	%vr9692 = bitcast i8* bitcast ([19 x i8]* @Lt_07BE to i8*) to i8*
	; arg 18
	%vr9691 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9692, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr9691
	%vr9695 = bitcast %FBSTRING* %vr9691 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9695, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BF
	%vr9698 = bitcast i8* bitcast ([54 x i8]* @Lt_07BF to i8*) to i8*
	; arg 53
	%vr9697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9698, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr9697
	%vr9701 = bitcast %FBSTRING* %vr9697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9701, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C0
	%vr9704 = bitcast i8* bitcast ([54 x i8]* @Lt_07C0 to i8*) to i8*
	; arg 53
	%vr9703 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9704, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr9703
	%vr9707 = bitcast %FBSTRING* %vr9703 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9707, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C1
	%vr9710 = bitcast i8* bitcast ([54 x i8]* @Lt_07C1 to i8*) to i8*
	; arg 53
	%vr9709 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9710, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr9709
	%vr9713 = bitcast %FBSTRING* %vr9709 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9713, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C2
	%vr9716 = bitcast i8* bitcast ([54 x i8]* @Lt_07C2 to i8*) to i8*
	; arg 53
	%vr9715 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9716, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr9715
	%vr9719 = bitcast %FBSTRING* %vr9715 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9719, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C3
	%vr9722 = bitcast i8* bitcast ([26 x i8]* @Lt_07C3 to i8*) to i8*
	; arg 25
	%vr9721 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9722, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr9721
	%vr9725 = bitcast %FBSTRING* %vr9721 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9725, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C4
	%vr9728 = bitcast i8* bitcast ([42 x i8]* @Lt_07C4 to i8*) to i8*
	; arg 41
	%vr9727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9728, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr9727
	%vr9731 = bitcast %FBSTRING* %vr9727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9731, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9734 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9733 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9734, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9733
	%vr9737 = bitcast %FBSTRING* %vr9733 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9737, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9740 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9739 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9740, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9739
	%vr9743 = bitcast %FBSTRING* %vr9739 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9743, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C5
	%vr9746 = bitcast i8* bitcast ([73 x i8]* @Lt_07C5 to i8*) to i8*
	; arg 72
	%vr9745 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9746, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr9745
	%vr9749 = bitcast %FBSTRING* %vr9745 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9749, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9752 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9751 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9752, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9751
	%vr9755 = bitcast %FBSTRING* %vr9751 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9755, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C6
	%vr9758 = bitcast i8* bitcast ([29 x i8]* @Lt_07C6 to i8*) to i8*
	; arg 28
	%vr9757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9758, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr9757
	%vr9761 = bitcast %FBSTRING* %vr9757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9761, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0737
	%vr9764 = bitcast i8* bitcast ([53 x i8]* @Lt_0737 to i8*) to i8*
	; arg 52
	%vr9763 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9764, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr9763
	%vr9767 = bitcast %FBSTRING* %vr9763 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9767, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C7
	%vr9770 = bitcast i8* bitcast ([69 x i8]* @Lt_07C7 to i8*) to i8*
	; arg 68
	%vr9769 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9770, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr9769
	%vr9773 = bitcast %FBSTRING* %vr9769 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9773, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9776 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9776, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9775
	%vr9779 = bitcast %FBSTRING* %vr9775 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9779, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9782 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9781 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9782, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9781
	%vr9785 = bitcast %FBSTRING* %vr9781 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9785, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C8
	%vr9788 = bitcast i8* bitcast ([66 x i8]* @Lt_07C8 to i8*) to i8*
	; arg 65
	%vr9787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9788, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr9787
	%vr9791 = bitcast %FBSTRING* %vr9787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9791, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9794 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9793 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9794, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9793
	%vr9797 = bitcast %FBSTRING* %vr9793 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9797, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C9
	%vr9800 = bitcast i8* bitcast ([20 x i8]* @Lt_07C9 to i8*) to i8*
	; arg 19
	%vr9799 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9800, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr9799
	%vr9803 = bitcast %FBSTRING* %vr9799 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9803, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CA
	%vr9806 = bitcast i8* bitcast ([20 x i8]* @Lt_07CA to i8*) to i8*
	; arg 19
	%vr9805 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9806, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr9805
	%vr9809 = bitcast %FBSTRING* %vr9805 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9809, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CB
	%vr9812 = bitcast i8* bitcast ([20 x i8]* @Lt_07CB to i8*) to i8*
	; arg 19
	%vr9811 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9812, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr9811
	%vr9815 = bitcast %FBSTRING* %vr9811 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9815, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9818 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9818, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9817
	%vr9821 = bitcast %FBSTRING* %vr9817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9821, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CC
	%vr9824 = bitcast i8* bitcast ([19 x i8]* @Lt_07CC to i8*) to i8*
	; arg 18
	%vr9823 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9824, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr9823
	%vr9827 = bitcast %FBSTRING* %vr9823 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9827, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CD
	%vr9830 = bitcast i8* bitcast ([19 x i8]* @Lt_07CD to i8*) to i8*
	; arg 18
	%vr9829 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9830, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr9829
	%vr9833 = bitcast %FBSTRING* %vr9829 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9833, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CE
	%vr9836 = bitcast i8* bitcast ([19 x i8]* @Lt_07CE to i8*) to i8*
	; arg 18
	%vr9835 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9836, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr9835
	%vr9839 = bitcast %FBSTRING* %vr9835 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9839, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9842 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9841 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9842, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9841
	%vr9845 = bitcast %FBSTRING* %vr9841 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9845, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CF
	%vr9848 = bitcast i8* bitcast ([62 x i8]* @Lt_07CF to i8*) to i8*
	; arg 61
	%vr9847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9848, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr9847
	%vr9851 = bitcast %FBSTRING* %vr9847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9851, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D0
	%vr9854 = bitcast i8* bitcast ([62 x i8]* @Lt_07D0 to i8*) to i8*
	; arg 61
	%vr9853 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9854, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr9853
	%vr9857 = bitcast %FBSTRING* %vr9853 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9857, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D1
	%vr9860 = bitcast i8* bitcast ([62 x i8]* @Lt_07D1 to i8*) to i8*
	; arg 61
	%vr9859 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9860, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr9859
	%vr9863 = bitcast %FBSTRING* %vr9859 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9863, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr9866 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr9865 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9866, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9865
	%vr9869 = bitcast %FBSTRING* %vr9865 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9869, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D2
	%vr9872 = bitcast i8* bitcast ([45 x i8]* @Lt_07D2 to i8*) to i8*
	; arg 44
	%vr9871 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9872, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr9871
	%vr9875 = bitcast %FBSTRING* %vr9871 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9875, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D3
	%vr9878 = bitcast i8* bitcast ([73 x i8]* @Lt_07D3 to i8*) to i8*
	; arg 72
	%vr9877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9878, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr9877
	%vr9881 = bitcast %FBSTRING* %vr9877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9881, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D4
	%vr9884 = bitcast i8* bitcast ([74 x i8]* @Lt_07D4 to i8*) to i8*
	; arg 73
	%vr9883 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9884, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr9883
	%vr9887 = bitcast %FBSTRING* %vr9883 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9887, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D5
	%vr9890 = bitcast i8* bitcast ([74 x i8]* @Lt_07D5 to i8*) to i8*
	; arg 73
	%vr9889 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9890, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr9889
	%vr9893 = bitcast %FBSTRING* %vr9889 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9893, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9896 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9895 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9896, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9895
	%vr9899 = bitcast %FBSTRING* %vr9895 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9899, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D6
	%vr9902 = bitcast i8* bitcast ([30 x i8]* @Lt_07D6 to i8*) to i8*
	; arg 29
	%vr9901 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9902, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9901
	%vr9905 = bitcast %FBSTRING* %vr9901 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9905, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr9908 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr9907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9908, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9907
	%vr9911 = bitcast %FBSTRING* %vr9907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9911, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9914 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9913 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9914, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9913
	%vr9917 = bitcast %FBSTRING* %vr9913 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9917, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D7
	%vr9920 = bitcast i8* bitcast ([24 x i8]* @Lt_07D7 to i8*) to i8*
	; arg 23
	%vr9919 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9920, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9919
	%vr9923 = bitcast %FBSTRING* %vr9919 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9923, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr9926 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr9925 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9926, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9925
	%vr9929 = bitcast %FBSTRING* %vr9925 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9929, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D8
	%vr9932 = bitcast i8* bitcast ([32 x i8]* @Lt_07D8 to i8*) to i8*
	; arg 31
	%vr9931 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9932, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr9931
	%vr9935 = bitcast %FBSTRING* %vr9931 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9935, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D9
	%vr9938 = bitcast i8* bitcast ([48 x i8]* @Lt_07D9 to i8*) to i8*
	; arg 47
	%vr9937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9938, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr9937
	%vr9941 = bitcast %FBSTRING* %vr9937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9941, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DA
	%vr9944 = bitcast i8* bitcast ([26 x i8]* @Lt_07DA to i8*) to i8*
	; arg 25
	%vr9943 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9944, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr9943
	%vr9947 = bitcast %FBSTRING* %vr9943 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9947, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr9950 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr9949 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9950, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr9949
	%vr9953 = bitcast %FBSTRING* %vr9949 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9953, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DC
	%vr9956 = bitcast i8* bitcast ([38 x i8]* @Lt_07DC to i8*) to i8*
	; arg 37
	%vr9955 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9956, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9955
	%vr9959 = bitcast %FBSTRING* %vr9955 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9959, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DD
	%vr9962 = bitcast i8* bitcast ([16 x i8]* @Lt_07DD to i8*) to i8*
	; arg 15
	%vr9961 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9962, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9961
	%vr9965 = bitcast %FBSTRING* %vr9961 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9965, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DE
	%vr9968 = bitcast i8* bitcast ([41 x i8]* @Lt_07DE to i8*) to i8*
	; arg 40
	%vr9967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9968, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr9967
	%vr9971 = bitcast %FBSTRING* %vr9967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9971, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DF
	%vr9974 = bitcast i8* bitcast ([31 x i8]* @Lt_07DF to i8*) to i8*
	; arg 30
	%vr9973 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9974, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9973
	%vr9977 = bitcast %FBSTRING* %vr9973 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9977, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E0
	%vr9980 = bitcast i8* bitcast ([31 x i8]* @Lt_07E0 to i8*) to i8*
	; arg 30
	%vr9979 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9980, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9979
	%vr9983 = bitcast %FBSTRING* %vr9979 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9983, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E1
	%vr9986 = bitcast i8* bitcast ([31 x i8]* @Lt_07E1 to i8*) to i8*
	; arg 30
	%vr9985 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9986, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9985
	%vr9989 = bitcast %FBSTRING* %vr9985 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9989, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E2
	%vr9992 = bitcast i8* bitcast ([44 x i8]* @Lt_07E2 to i8*) to i8*
	; arg 43
	%vr9991 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9992, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr9991
	%vr9995 = bitcast %FBSTRING* %vr9991 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9995, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E3
	%vr9998 = bitcast i8* bitcast ([20 x i8]* @Lt_07E3 to i8*) to i8*
	; arg 19
	%vr9997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9998, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr9997
	%vr10001 = bitcast %FBSTRING* %vr9997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10001, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E4
	%vr10004 = bitcast i8* bitcast ([5 x i8]* @Lt_07E4 to i8*) to i8*
	; arg 4
	%vr10003 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10004, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10003
	%vr10007 = bitcast %FBSTRING* %vr10003 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10007, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E5
	%vr10010 = bitcast i8* bitcast ([14 x i8]* @Lt_07E5 to i8*) to i8*
	; arg 13
	%vr10009 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10010, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr10009
	%vr10013 = bitcast %FBSTRING* %vr10009 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10013, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10016 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10015 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10016, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10015
	%vr10019 = bitcast %FBSTRING* %vr10015 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10019, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10022 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10021 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10022, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10021
	%vr10025 = bitcast %FBSTRING* %vr10021 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10025, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E6
	%vr10028 = bitcast i8* bitcast ([33 x i8]* @Lt_07E6 to i8*) to i8*
	; arg 32
	%vr10027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10028, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr10027
	%vr10031 = bitcast %FBSTRING* %vr10027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10031, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10034 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10033 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10034, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10033
	%vr10037 = bitcast %FBSTRING* %vr10033 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10037, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E7
	%vr10040 = bitcast i8* bitcast ([83 x i8]* @Lt_07E7 to i8*) to i8*
	; arg 82
	%vr10039 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10040, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr10039
	%vr10043 = bitcast %FBSTRING* %vr10039 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10043, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E8
	%vr10046 = bitcast i8* bitcast ([50 x i8]* @Lt_07E8 to i8*) to i8*
	; arg 49
	%vr10045 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10046, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr10045
	%vr10049 = bitcast %FBSTRING* %vr10045 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10049, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E9
	%vr10052 = bitcast i8* bitcast ([41 x i8]* @Lt_07E9 to i8*) to i8*
	; arg 40
	%vr10051 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10052, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10051
	%vr10055 = bitcast %FBSTRING* %vr10051 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10055, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10058 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10058, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10057
	%vr10061 = bitcast %FBSTRING* %vr10057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10061, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10064 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10063 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10064, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10063
	%vr10067 = bitcast %FBSTRING* %vr10063 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10067, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EA
	%vr10070 = bitcast i8* bitcast ([57 x i8]* @Lt_07EA to i8*) to i8*
	; arg 56
	%vr10069 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10070, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr10069
	%vr10073 = bitcast %FBSTRING* %vr10069 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10073, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10076 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10075 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10076, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10075
	%vr10079 = bitcast %FBSTRING* %vr10075 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10079, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EB
	%vr10082 = bitcast i8* bitcast ([55 x i8]* @Lt_07EB to i8*) to i8*
	; arg 54
	%vr10081 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10082, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr10081
	%vr10085 = bitcast %FBSTRING* %vr10081 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10085, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EC
	%vr10088 = bitcast i8* bitcast ([41 x i8]* @Lt_07EC to i8*) to i8*
	; arg 40
	%vr10087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10088, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10087
	%vr10091 = bitcast %FBSTRING* %vr10087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10091, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10094 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10093 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10094, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10093
	%vr10097 = bitcast %FBSTRING* %vr10093 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10097, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10100 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10099 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10100, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10099
	%vr10103 = bitcast %FBSTRING* %vr10099 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10103, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07ED
	%vr10106 = bitcast i8* bitcast ([24 x i8]* @Lt_07ED to i8*) to i8*
	; arg 23
	%vr10105 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10106, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10105
	%vr10109 = bitcast %FBSTRING* %vr10105 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10109, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10112 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10111 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10112, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10111
	%vr10115 = bitcast %FBSTRING* %vr10111 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10115, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EE
	%vr10118 = bitcast i8* bitcast ([38 x i8]* @Lt_07EE to i8*) to i8*
	; arg 37
	%vr10117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10118, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10117
	%vr10121 = bitcast %FBSTRING* %vr10117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10121, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10124 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10123 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10124, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10123
	%vr10127 = bitcast %FBSTRING* %vr10123 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10127, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10130 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10129 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10130, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10129
	%vr10133 = bitcast %FBSTRING* %vr10129 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10133, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EF
	%vr10136 = bitcast i8* bitcast ([24 x i8]* @Lt_07EF to i8*) to i8*
	; arg 23
	%vr10135 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10136, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10135
	%vr10139 = bitcast %FBSTRING* %vr10135 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10139, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10142 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10141 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10142, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10141
	%vr10145 = bitcast %FBSTRING* %vr10141 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10145, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F0
	%vr10148 = bitcast i8* bitcast ([24 x i8]* @Lt_07F0 to i8*) to i8*
	; arg 23
	%vr10147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10148, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10147
	%vr10151 = bitcast %FBSTRING* %vr10147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10151, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F1
	%vr10154 = bitcast i8* bitcast ([38 x i8]* @Lt_07F1 to i8*) to i8*
	; arg 37
	%vr10153 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10154, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10153
	%vr10157 = bitcast %FBSTRING* %vr10153 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10157, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10160 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10160, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10159
	%vr10163 = bitcast %FBSTRING* %vr10159 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10163, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10166 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10165 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10166, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10165
	%vr10169 = bitcast %FBSTRING* %vr10165 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10169, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F2
	%vr10172 = bitcast i8* bitcast ([24 x i8]* @Lt_07F2 to i8*) to i8*
	; arg 23
	%vr10171 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10172, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10171
	%vr10175 = bitcast %FBSTRING* %vr10171 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10175, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10178 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10178, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10177
	%vr10181 = bitcast %FBSTRING* %vr10177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10181, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F3
	%vr10184 = bitcast i8* bitcast ([31 x i8]* @Lt_07F3 to i8*) to i8*
	; arg 30
	%vr10183 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10184, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10183
	%vr10187 = bitcast %FBSTRING* %vr10183 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10187, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F4
	%vr10190 = bitcast i8* bitcast ([38 x i8]* @Lt_07F4 to i8*) to i8*
	; arg 37
	%vr10189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10190, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10189
	%vr10193 = bitcast %FBSTRING* %vr10189 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10193, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10196 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10196, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10195
	%vr10199 = bitcast %FBSTRING* %vr10195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10199, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10202 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10201 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10202, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10201
	%vr10205 = bitcast %FBSTRING* %vr10201 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10205, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F5
	%vr10208 = bitcast i8* bitcast ([34 x i8]* @Lt_07F5 to i8*) to i8*
	; arg 33
	%vr10207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10208, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr10207
	%vr10211 = bitcast %FBSTRING* %vr10207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10211, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10214 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10213 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10214, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10213
	%vr10217 = bitcast %FBSTRING* %vr10213 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10217, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F6
	%vr10220 = bitcast i8* bitcast ([42 x i8]* @Lt_07F6 to i8*) to i8*
	; arg 41
	%vr10219 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10220, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10219
	%vr10223 = bitcast %FBSTRING* %vr10219 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10223, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F7
	%vr10226 = bitcast i8* bitcast ([27 x i8]* @Lt_07F7 to i8*) to i8*
	; arg 26
	%vr10225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10226, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10225
	%vr10229 = bitcast %FBSTRING* %vr10225 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10229, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10232 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10231 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10232, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10231
	%vr10235 = bitcast %FBSTRING* %vr10231 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10235, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10238 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10238, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10237
	%vr10241 = bitcast %FBSTRING* %vr10237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10241, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F8
	%vr10244 = bitcast i8* bitcast ([34 x i8]* @Lt_07F8 to i8*) to i8*
	; arg 33
	%vr10243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10244, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr10243
	%vr10247 = bitcast %FBSTRING* %vr10243 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10247, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10250 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10249 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10250, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10249
	%vr10253 = bitcast %FBSTRING* %vr10249 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10253, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F9
	%vr10256 = bitcast i8* bitcast ([42 x i8]* @Lt_07F9 to i8*) to i8*
	; arg 41
	%vr10255 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10256, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10255
	%vr10259 = bitcast %FBSTRING* %vr10255 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10259, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F7
	%vr10262 = bitcast i8* bitcast ([27 x i8]* @Lt_07F7 to i8*) to i8*
	; arg 26
	%vr10261 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10262, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10261
	%vr10265 = bitcast %FBSTRING* %vr10261 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10265, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10268 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10268, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10267
	%vr10271 = bitcast %FBSTRING* %vr10267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10271, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10274 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10273 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10274, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10273
	%vr10277 = bitcast %FBSTRING* %vr10273 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10277, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FA
	%vr10280 = bitcast i8* bitcast ([36 x i8]* @Lt_07FA to i8*) to i8*
	; arg 35
	%vr10279 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10280, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr10279
	%vr10283 = bitcast %FBSTRING* %vr10279 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10283, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10286 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10285 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10286, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10285
	%vr10289 = bitcast %FBSTRING* %vr10285 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10289, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FB
	%vr10292 = bitcast i8* bitcast ([51 x i8]* @Lt_07FB to i8*) to i8*
	; arg 50
	%vr10291 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10292, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr10291
	%vr10295 = bitcast %FBSTRING* %vr10291 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10295, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10298 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10298, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10297
	%vr10301 = bitcast %FBSTRING* %vr10297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10301, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10304 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10303 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10304, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10303
	%vr10307 = bitcast %FBSTRING* %vr10303 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10307, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E1
	%vr10310 = bitcast i8* bitcast ([69 x i8]* @Lt_06E1 to i8*) to i8*
	; arg 68
	%vr10309 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10310, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr10309
	%vr10313 = bitcast %FBSTRING* %vr10309 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10313, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10316 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10315 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10316, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10315
	%vr10319 = bitcast %FBSTRING* %vr10315 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10319, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FC
	%vr10322 = bitcast i8* bitcast ([32 x i8]* @Lt_07FC to i8*) to i8*
	; arg 31
	%vr10321 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10322, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr10321
	%vr10325 = bitcast %FBSTRING* %vr10321 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10325, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10328 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10328, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10327
	%vr10331 = bitcast %FBSTRING* %vr10327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10331, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FD
	%vr10334 = bitcast i8* bitcast ([24 x i8]* @Lt_07FD to i8*) to i8*
	; arg 23
	%vr10333 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10334, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10333
	%vr10337 = bitcast %FBSTRING* %vr10333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10337, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10340 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10339 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10340, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10339
	%vr10343 = bitcast %FBSTRING* %vr10339 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10343, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10346 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10345 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10346, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10345
	%vr10349 = bitcast %FBSTRING* %vr10345 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10349, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FE
	%vr10352 = bitcast i8* bitcast ([30 x i8]* @Lt_07FE to i8*) to i8*
	; arg 29
	%vr10351 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10352, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10351
	%vr10355 = bitcast %FBSTRING* %vr10351 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10355, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10358 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10358, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10357
	%vr10361 = bitcast %FBSTRING* %vr10357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10361, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FF
	%vr10364 = bitcast i8* bitcast ([32 x i8]* @Lt_07FF to i8*) to i8*
	; arg 31
	%vr10363 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10364, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr10363
	%vr10367 = bitcast %FBSTRING* %vr10363 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10367, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10370 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10369 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10370, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10369
	%vr10373 = bitcast %FBSTRING* %vr10369 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10373, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10376 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10375 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10376, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10375
	%vr10379 = bitcast %FBSTRING* %vr10375 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10379, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0800
	%vr10382 = bitcast i8* bitcast ([29 x i8]* @Lt_0800 to i8*) to i8*
	; arg 28
	%vr10381 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10382, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10381
	%vr10385 = bitcast %FBSTRING* %vr10381 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10385, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10388 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10388, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10387
	%vr10391 = bitcast %FBSTRING* %vr10387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10391, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0801
	%vr10394 = bitcast i8* bitcast ([31 x i8]* @Lt_0801 to i8*) to i8*
	; arg 30
	%vr10393 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10394, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10393
	%vr10397 = bitcast %FBSTRING* %vr10393 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10397, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10400 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10399 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10400, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10399
	%vr10403 = bitcast %FBSTRING* %vr10399 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10403, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10406 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10405 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10406, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10405
	%vr10409 = bitcast %FBSTRING* %vr10405 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10409, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0802
	%vr10412 = bitcast i8* bitcast ([29 x i8]* @Lt_0802 to i8*) to i8*
	; arg 28
	%vr10411 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10412, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10411
	%vr10415 = bitcast %FBSTRING* %vr10411 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10415, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10418 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10418, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10417
	%vr10421 = bitcast %FBSTRING* %vr10417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10421, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr10424 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr10423 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10424, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr10423
	%vr10427 = bitcast %FBSTRING* %vr10423 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10427, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0801
	%vr10430 = bitcast i8* bitcast ([31 x i8]* @Lt_0801 to i8*) to i8*
	; arg 30
	%vr10429 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10430, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10429
	%vr10433 = bitcast %FBSTRING* %vr10429 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10433, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10436 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10435 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10436, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10435
	%vr10439 = bitcast %FBSTRING* %vr10435 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10439, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10442 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10441 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10442, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10441
	%vr10445 = bitcast %FBSTRING* %vr10441 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10445, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0803
	%vr10448 = bitcast i8* bitcast ([29 x i8]* @Lt_0803 to i8*) to i8*
	; arg 28
	%vr10447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10448, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10447
	%vr10451 = bitcast %FBSTRING* %vr10447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10451, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10454 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10453 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10454, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10453
	%vr10457 = bitcast %FBSTRING* %vr10453 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10457, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0801
	%vr10460 = bitcast i8* bitcast ([31 x i8]* @Lt_0801 to i8*) to i8*
	; arg 30
	%vr10459 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10460, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10459
	%vr10463 = bitcast %FBSTRING* %vr10459 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10463, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10466 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10465 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10466, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10465
	%vr10469 = bitcast %FBSTRING* %vr10465 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10469, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10472 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10471 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10472, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10471
	%vr10475 = bitcast %FBSTRING* %vr10471 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10475, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0804
	%vr10478 = bitcast i8* bitcast ([29 x i8]* @Lt_0804 to i8*) to i8*
	; arg 28
	%vr10477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10478, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10477
	%vr10481 = bitcast %FBSTRING* %vr10477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10481, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10484 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10483 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10484, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10483
	%vr10487 = bitcast %FBSTRING* %vr10483 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10487, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0805
	%vr10490 = bitcast i8* bitcast ([27 x i8]* @Lt_0805 to i8*) to i8*
	; arg 26
	%vr10489 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10490, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10489
	%vr10493 = bitcast %FBSTRING* %vr10489 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10493, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10496 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10495 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10496, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10495
	%vr10499 = bitcast %FBSTRING* %vr10495 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10499, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10502 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10501 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10502, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10501
	%vr10505 = bitcast %FBSTRING* %vr10501 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10505, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0806
	%vr10508 = bitcast i8* bitcast ([23 x i8]* @Lt_0806 to i8*) to i8*
	; arg 22
	%vr10507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10508, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10507
	%vr10511 = bitcast %FBSTRING* %vr10507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10511, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10514 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10513 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10514, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10513
	%vr10517 = bitcast %FBSTRING* %vr10513 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10517, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0807
	%vr10520 = bitcast i8* bitcast ([35 x i8]* @Lt_0807 to i8*) to i8*
	; arg 34
	%vr10519 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10520, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr10519
	%vr10523 = bitcast %FBSTRING* %vr10519 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10523, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0808
	%vr10526 = bitcast i8* bitcast ([35 x i8]* @Lt_0808 to i8*) to i8*
	; arg 34
	%vr10525 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10526, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr10525
	%vr10529 = bitcast %FBSTRING* %vr10525 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10529, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0809
	%vr10532 = bitcast i8* bitcast ([31 x i8]* @Lt_0809 to i8*) to i8*
	; arg 30
	%vr10531 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10532, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10531
	%vr10535 = bitcast %FBSTRING* %vr10531 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10535, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080A
	%vr10538 = bitcast i8* bitcast ([29 x i8]* @Lt_080A to i8*) to i8*
	; arg 28
	%vr10537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10538, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10537
	%vr10541 = bitcast %FBSTRING* %vr10537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10541, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10544 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10543 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10544, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10543
	%vr10547 = bitcast %FBSTRING* %vr10543 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10547, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10550 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10549 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10550, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10549
	%vr10553 = bitcast %FBSTRING* %vr10549 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10553, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080B
	%vr10556 = bitcast i8* bitcast ([51 x i8]* @Lt_080B to i8*) to i8*
	; arg 50
	%vr10555 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10556, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr10555
	%vr10559 = bitcast %FBSTRING* %vr10555 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10559, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10562 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10561 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10562, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10561
	%vr10565 = bitcast %FBSTRING* %vr10561 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10565, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080C
	%vr10568 = bitcast i8* bitcast ([28 x i8]* @Lt_080C to i8*) to i8*
	; arg 27
	%vr10567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10568, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr10567
	%vr10571 = bitcast %FBSTRING* %vr10567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10571, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10574 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10573 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10574, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10573
	%vr10577 = bitcast %FBSTRING* %vr10573 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10577, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10580 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10579 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10580, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10579
	%vr10583 = bitcast %FBSTRING* %vr10579 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10583, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080D
	%vr10586 = bitcast i8* bitcast ([41 x i8]* @Lt_080D to i8*) to i8*
	; arg 40
	%vr10585 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10586, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10585
	%vr10589 = bitcast %FBSTRING* %vr10585 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10589, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10592 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10591 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10592, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10591
	%vr10595 = bitcast %FBSTRING* %vr10591 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10595, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0736
	%vr10598 = bitcast i8* bitcast ([26 x i8]* @Lt_0736 to i8*) to i8*
	; arg 25
	%vr10597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10598, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr10597
	%vr10601 = bitcast %FBSTRING* %vr10597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10601, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0737
	%vr10604 = bitcast i8* bitcast ([53 x i8]* @Lt_0737 to i8*) to i8*
	; arg 52
	%vr10603 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10604, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr10603
	%vr10607 = bitcast %FBSTRING* %vr10603 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10607, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080E
	%vr10610 = bitcast i8* bitcast ([40 x i8]* @Lt_080E to i8*) to i8*
	; arg 39
	%vr10609 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10610, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10609
	%vr10613 = bitcast %FBSTRING* %vr10609 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10613, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10616 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10615 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10616, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10615
	%vr10619 = bitcast %FBSTRING* %vr10615 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10619, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10622 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10621 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10622, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10621
	%vr10625 = bitcast %FBSTRING* %vr10621 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10625, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080F
	%vr10628 = bitcast i8* bitcast ([56 x i8]* @Lt_080F to i8*) to i8*
	; arg 55
	%vr10627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10628, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr10627
	%vr10631 = bitcast %FBSTRING* %vr10627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10631, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0810
	%vr10634 = bitcast i8* bitcast ([46 x i8]* @Lt_0810 to i8*) to i8*
	; arg 45
	%vr10633 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10634, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr10633
	%vr10637 = bitcast %FBSTRING* %vr10633 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10637, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10640 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10639 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10640, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10639
	%vr10643 = bitcast %FBSTRING* %vr10639 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10643, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0811
	%vr10646 = bitcast i8* bitcast ([30 x i8]* @Lt_0811 to i8*) to i8*
	; arg 29
	%vr10645 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10646, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10645
	%vr10649 = bitcast %FBSTRING* %vr10645 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10649, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0812
	%vr10652 = bitcast i8* bitcast ([30 x i8]* @Lt_0812 to i8*) to i8*
	; arg 29
	%vr10651 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10652, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10651
	%vr10655 = bitcast %FBSTRING* %vr10651 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10655, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0813
	%vr10658 = bitcast i8* bitcast ([30 x i8]* @Lt_0813 to i8*) to i8*
	; arg 29
	%vr10657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10658, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10657
	%vr10661 = bitcast %FBSTRING* %vr10657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10661, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0814
	%vr10664 = bitcast i8* bitcast ([25 x i8]* @Lt_0814 to i8*) to i8*
	; arg 24
	%vr10663 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10664, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr10663
	%vr10667 = bitcast %FBSTRING* %vr10663 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10667, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0815
	%vr10670 = bitcast i8* bitcast ([23 x i8]* @Lt_0815 to i8*) to i8*
	; arg 22
	%vr10669 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10670, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10669
	%vr10673 = bitcast %FBSTRING* %vr10669 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10673, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0816
	%vr10676 = bitcast i8* bitcast ([23 x i8]* @Lt_0816 to i8*) to i8*
	; arg 22
	%vr10675 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10676, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10675
	%vr10679 = bitcast %FBSTRING* %vr10675 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10679, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0817
	%vr10682 = bitcast i8* bitcast ([23 x i8]* @Lt_0817 to i8*) to i8*
	; arg 22
	%vr10681 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10682, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10681
	%vr10685 = bitcast %FBSTRING* %vr10681 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10685, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0818
	%vr10688 = bitcast i8* bitcast ([63 x i8]* @Lt_0818 to i8*) to i8*
	; arg 62
	%vr10687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10688, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr10687
	%vr10691 = bitcast %FBSTRING* %vr10687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10691, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0819
	%vr10694 = bitcast i8* bitcast ([33 x i8]* @Lt_0819 to i8*) to i8*
	; arg 32
	%vr10693 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10694, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr10693
	%vr10697 = bitcast %FBSTRING* %vr10693 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10697, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081A
	%vr10700 = bitcast i8* bitcast ([23 x i8]* @Lt_081A to i8*) to i8*
	; arg 22
	%vr10699 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10700, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10699
	%vr10703 = bitcast %FBSTRING* %vr10699 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10703, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081B
	%vr10706 = bitcast i8* bitcast ([29 x i8]* @Lt_081B to i8*) to i8*
	; arg 28
	%vr10705 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10706, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10705
	%vr10709 = bitcast %FBSTRING* %vr10705 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10709, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081C
	%vr10712 = bitcast i8* bitcast ([33 x i8]* @Lt_081C to i8*) to i8*
	; arg 32
	%vr10711 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10712, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr10711
	%vr10715 = bitcast %FBSTRING* %vr10711 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10715, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081D
	%vr10718 = bitcast i8* bitcast ([54 x i8]* @Lt_081D to i8*) to i8*
	; arg 53
	%vr10717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10718, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr10717
	%vr10721 = bitcast %FBSTRING* %vr10717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10721, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081E
	%vr10724 = bitcast i8* bitcast ([57 x i8]* @Lt_081E to i8*) to i8*
	; arg 56
	%vr10723 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10724, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr10723
	%vr10727 = bitcast %FBSTRING* %vr10723 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10727, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10730 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10729 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10730, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10729
	%vr10733 = bitcast %FBSTRING* %vr10729 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10733, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10736 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10735 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10736, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10735
	%vr10739 = bitcast %FBSTRING* %vr10735 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10739, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081F
	%vr10742 = bitcast i8* bitcast ([48 x i8]* @Lt_081F to i8*) to i8*
	; arg 47
	%vr10741 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10742, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr10741
	%vr10745 = bitcast %FBSTRING* %vr10741 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10745, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10748 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10748, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10747
	%vr10751 = bitcast %FBSTRING* %vr10747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10751, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0820
	%vr10754 = bitcast i8* bitcast ([42 x i8]* @Lt_0820 to i8*) to i8*
	; arg 41
	%vr10753 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10754, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10753
	%vr10757 = bitcast %FBSTRING* %vr10753 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10757, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0821
	%vr10760 = bitcast i8* bitcast ([28 x i8]* @Lt_0821 to i8*) to i8*
	; arg 27
	%vr10759 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10760, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr10759
	%vr10763 = bitcast %FBSTRING* %vr10759 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10763, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0822
	%vr10766 = bitcast i8* bitcast ([38 x i8]* @Lt_0822 to i8*) to i8*
	; arg 37
	%vr10765 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10766, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10765
	%vr10769 = bitcast %FBSTRING* %vr10765 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10769, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10772 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10771 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10772, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10771
	%vr10775 = bitcast %FBSTRING* %vr10771 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10775, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0823
	%vr10778 = bitcast i8* bitcast ([43 x i8]* @Lt_0823 to i8*) to i8*
	; arg 42
	%vr10777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10778, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr10777
	%vr10781 = bitcast %FBSTRING* %vr10777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10781, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0824
	%vr10784 = bitcast i8* bitcast ([24 x i8]* @Lt_0824 to i8*) to i8*
	; arg 23
	%vr10783 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10784, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr10783
	%vr10787 = bitcast %FBSTRING* %vr10783 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10787, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0825
	%vr10790 = bitcast i8* bitcast ([43 x i8]* @Lt_0825 to i8*) to i8*
	; arg 42
	%vr10789 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10790, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr10789
	%vr10793 = bitcast %FBSTRING* %vr10789 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10793, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0826
	%vr10796 = bitcast i8* bitcast ([55 x i8]* @Lt_0826 to i8*) to i8*
	; arg 54
	%vr10795 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10796, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr10795
	%vr10799 = bitcast %FBSTRING* %vr10795 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10799, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10802 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10801 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10802, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10801
	%vr10805 = bitcast %FBSTRING* %vr10801 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10805, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0827
	%vr10808 = bitcast i8* bitcast ([55 x i8]* @Lt_0827 to i8*) to i8*
	; arg 54
	%vr10807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10808, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr10807
	%vr10811 = bitcast %FBSTRING* %vr10807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10811, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10814 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10813 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10814, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10813
	%vr10817 = bitcast %FBSTRING* %vr10813 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10817, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0828
	%vr10820 = bitcast i8* bitcast ([77 x i8]* @Lt_0828 to i8*) to i8*
	; arg 76
	%vr10819 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10820, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr10819
	%vr10823 = bitcast %FBSTRING* %vr10819 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10823, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10826 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10825 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10826, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10825
	%vr10829 = bitcast %FBSTRING* %vr10825 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10829, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10832 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10831 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10832, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10831
	%vr10835 = bitcast %FBSTRING* %vr10831 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10835, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0829
	%vr10838 = bitcast i8* bitcast ([37 x i8]* @Lt_0829 to i8*) to i8*
	; arg 36
	%vr10837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10838, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr10837
	%vr10841 = bitcast %FBSTRING* %vr10837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10841, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10844 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10843 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10844, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10843
	%vr10847 = bitcast %FBSTRING* %vr10843 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10847, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082A
	%vr10850 = bitcast i8* bitcast ([48 x i8]* @Lt_082A to i8*) to i8*
	; arg 47
	%vr10849 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10850, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr10849
	%vr10853 = bitcast %FBSTRING* %vr10849 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10853, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082B
	%vr10856 = bitcast i8* bitcast ([38 x i8]* @Lt_082B to i8*) to i8*
	; arg 37
	%vr10855 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10856, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10855
	%vr10859 = bitcast %FBSTRING* %vr10855 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10859, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10862 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10861 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10862, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10861
	%vr10865 = bitcast %FBSTRING* %vr10861 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10865, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10868 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10868, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10867
	%vr10871 = bitcast %FBSTRING* %vr10867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10871, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082C
	%vr10874 = bitcast i8* bitcast ([78 x i8]* @Lt_082C to i8*) to i8*
	; arg 77
	%vr10873 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10874, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr10873
	%vr10877 = bitcast %FBSTRING* %vr10873 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10877, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10880 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10879 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10880, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10879
	%vr10883 = bitcast %FBSTRING* %vr10879 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10883, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082D
	%vr10886 = bitcast i8* bitcast ([23 x i8]* @Lt_082D to i8*) to i8*
	; arg 22
	%vr10885 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10886, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10885
	%vr10889 = bitcast %FBSTRING* %vr10885 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10889, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10892 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10891 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10892, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10891
	%vr10895 = bitcast %FBSTRING* %vr10891 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10895, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082E
	%vr10898 = bitcast i8* bitcast ([40 x i8]* @Lt_082E to i8*) to i8*
	; arg 39
	%vr10897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10898, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10897
	%vr10901 = bitcast %FBSTRING* %vr10897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10901, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10904 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10903 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10904, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10903
	%vr10907 = bitcast %FBSTRING* %vr10903 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10907, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10910 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10909 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10910, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10909
	%vr10913 = bitcast %FBSTRING* %vr10909 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10913, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082F
	%vr10916 = bitcast i8* bitcast ([22 x i8]* @Lt_082F to i8*) to i8*
	; arg 21
	%vr10915 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10916, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr10915
	%vr10919 = bitcast %FBSTRING* %vr10915 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10919, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10922 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10921 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10922, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10921
	%vr10925 = bitcast %FBSTRING* %vr10921 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10925, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0830
	%vr10928 = bitcast i8* bitcast ([58 x i8]* @Lt_0830 to i8*) to i8*
	; arg 57
	%vr10927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10928, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr10927
	%vr10931 = bitcast %FBSTRING* %vr10927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10931, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10934 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10933 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10934, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10933
	%vr10937 = bitcast %FBSTRING* %vr10933 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10937, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10940 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10939 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10940, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10939
	%vr10943 = bitcast %FBSTRING* %vr10939 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10943, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0831
	%vr10946 = bitcast i8* bitcast ([35 x i8]* @Lt_0831 to i8*) to i8*
	; arg 34
	%vr10945 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10946, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr10945
	%vr10949 = bitcast %FBSTRING* %vr10945 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10949, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr10952 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr10951 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10952, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10951
	%vr10955 = bitcast %FBSTRING* %vr10951 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10955, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0832
	%vr10958 = bitcast i8* bitcast ([30 x i8]* @Lt_0832 to i8*) to i8*
	; arg 29
	%vr10957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10958, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10957
	%vr10961 = bitcast %FBSTRING* %vr10957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10961, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0833
	%vr10964 = bitcast i8* bitcast ([37 x i8]* @Lt_0833 to i8*) to i8*
	; arg 36
	%vr10963 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10964, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr10963
	%vr10967 = bitcast %FBSTRING* %vr10963 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10967, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0834
	%vr10970 = bitcast i8* bitcast ([36 x i8]* @Lt_0834 to i8*) to i8*
	; arg 35
	%vr10969 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10970, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr10969
	%vr10973 = bitcast %FBSTRING* %vr10969 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10973, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0835
	%vr10976 = bitcast i8* bitcast ([41 x i8]* @Lt_0835 to i8*) to i8*
	; arg 40
	%vr10975 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10976, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10975
	%vr10979 = bitcast %FBSTRING* %vr10975 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10979, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0836
	%vr10982 = bitcast i8* bitcast ([60 x i8]* @Lt_0836 to i8*) to i8*
	; arg 59
	%vr10981 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10982, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr10981
	%vr10985 = bitcast %FBSTRING* %vr10981 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10985, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr10988 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr10987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10988, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10987
	%vr10991 = bitcast %FBSTRING* %vr10987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10991, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10994 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10993 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10994, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10993
	%vr10997 = bitcast %FBSTRING* %vr10993 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10997, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0837
	%vr11000 = bitcast i8* bitcast ([25 x i8]* @Lt_0837 to i8*) to i8*
	; arg 24
	%vr10999 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11000, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr10999
	%vr11003 = bitcast %FBSTRING* %vr10999 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11003, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11006 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11005 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11006, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11005
	%vr11009 = bitcast %FBSTRING* %vr11005 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11009, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0838
	%vr11012 = bitcast i8* bitcast ([79 x i8]* @Lt_0838 to i8*) to i8*
	; arg 78
	%vr11011 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11012, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11011
	%vr11015 = bitcast %FBSTRING* %vr11011 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11015, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11018 = bitcast i8* bitcast ([23 x i8]* @Lt_0839 to i8*) to i8*
	; arg 22
	%vr11017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11018, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11017
	%vr11021 = bitcast %FBSTRING* %vr11017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11021, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083A
	%vr11024 = bitcast i8* bitcast ([79 x i8]* @Lt_083A to i8*) to i8*
	; arg 78
	%vr11023 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11024, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11023
	%vr11027 = bitcast %FBSTRING* %vr11023 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11027, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11030 = bitcast i8* bitcast ([23 x i8]* @Lt_0839 to i8*) to i8*
	; arg 22
	%vr11029 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11030, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11029
	%vr11033 = bitcast %FBSTRING* %vr11029 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11033, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083B
	%vr11036 = bitcast i8* bitcast ([13 x i8]* @Lt_083B to i8*) to i8*
	; arg 12
	%vr11035 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11036, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11035
	%vr11039 = bitcast %FBSTRING* %vr11035 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11039, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr11042 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr11041 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11042, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11041
	%vr11045 = bitcast %FBSTRING* %vr11041 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11045, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11048 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11048, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11047
	%vr11051 = bitcast %FBSTRING* %vr11047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11051, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083C
	%vr11054 = bitcast i8* bitcast ([25 x i8]* @Lt_083C to i8*) to i8*
	; arg 24
	%vr11053 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11054, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11053
	%vr11057 = bitcast %FBSTRING* %vr11053 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11057, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11060 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11059 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11060, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11059
	%vr11063 = bitcast %FBSTRING* %vr11059 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11063, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0838
	%vr11066 = bitcast i8* bitcast ([79 x i8]* @Lt_0838 to i8*) to i8*
	; arg 78
	%vr11065 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11066, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11065
	%vr11069 = bitcast %FBSTRING* %vr11065 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11069, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083A
	%vr11072 = bitcast i8* bitcast ([79 x i8]* @Lt_083A to i8*) to i8*
	; arg 78
	%vr11071 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11072, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11071
	%vr11075 = bitcast %FBSTRING* %vr11071 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11075, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11078 = bitcast i8* bitcast ([23 x i8]* @Lt_0839 to i8*) to i8*
	; arg 22
	%vr11077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11078, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11077
	%vr11081 = bitcast %FBSTRING* %vr11077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11081, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083B
	%vr11084 = bitcast i8* bitcast ([13 x i8]* @Lt_083B to i8*) to i8*
	; arg 12
	%vr11083 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11084, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11083
	%vr11087 = bitcast %FBSTRING* %vr11083 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11087, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr11090 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr11089 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11090, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11089
	%vr11093 = bitcast %FBSTRING* %vr11089 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11093, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11096 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11095 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11096, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11095
	%vr11099 = bitcast %FBSTRING* %vr11095 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11099, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083D
	%vr11102 = bitcast i8* bitcast ([25 x i8]* @Lt_083D to i8*) to i8*
	; arg 24
	%vr11101 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11102, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11101
	%vr11105 = bitcast %FBSTRING* %vr11101 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11105, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083E
	%vr11108 = bitcast i8* bitcast ([95 x i8]* @Lt_083E to i8*) to i8*
	; arg 94
	%vr11107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11108, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr11107
	%vr11111 = bitcast %FBSTRING* %vr11107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11111, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083F
	%vr11114 = bitcast i8* bitcast ([79 x i8]* @Lt_083F to i8*) to i8*
	; arg 78
	%vr11113 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11114, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11113
	%vr11117 = bitcast %FBSTRING* %vr11113 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11117, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11120 = bitcast i8* bitcast ([23 x i8]* @Lt_0839 to i8*) to i8*
	; arg 22
	%vr11119 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11120, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11119
	%vr11123 = bitcast %FBSTRING* %vr11119 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11123, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0840
	%vr11126 = bitcast i8* bitcast ([14 x i8]* @Lt_0840 to i8*) to i8*
	; arg 13
	%vr11125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11126, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11125
	%vr11129 = bitcast %FBSTRING* %vr11125 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11129, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr11132 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr11131 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11132, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11131
	%vr11135 = bitcast %FBSTRING* %vr11131 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11135, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11138 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11138, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11137
	%vr11141 = bitcast %FBSTRING* %vr11137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11141, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0841
	%vr11144 = bitcast i8* bitcast ([25 x i8]* @Lt_0841 to i8*) to i8*
	; arg 24
	%vr11143 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11144, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11143
	%vr11147 = bitcast %FBSTRING* %vr11143 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11147, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0838
	%vr11150 = bitcast i8* bitcast ([79 x i8]* @Lt_0838 to i8*) to i8*
	; arg 78
	%vr11149 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11150, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11149
	%vr11153 = bitcast %FBSTRING* %vr11149 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11153, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083F
	%vr11156 = bitcast i8* bitcast ([79 x i8]* @Lt_083F to i8*) to i8*
	; arg 78
	%vr11155 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11156, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11155
	%vr11159 = bitcast %FBSTRING* %vr11155 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11159, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11162 = bitcast i8* bitcast ([23 x i8]* @Lt_0839 to i8*) to i8*
	; arg 22
	%vr11161 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11162, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11161
	%vr11165 = bitcast %FBSTRING* %vr11161 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11165, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0840
	%vr11168 = bitcast i8* bitcast ([14 x i8]* @Lt_0840 to i8*) to i8*
	; arg 13
	%vr11167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11168, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11167
	%vr11171 = bitcast %FBSTRING* %vr11167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11171, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr11174 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr11173 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11174, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11173
	%vr11177 = bitcast %FBSTRING* %vr11173 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11177, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11180 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11179 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11180, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11179
	%vr11183 = bitcast %FBSTRING* %vr11179 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11183, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0842
	%vr11186 = bitcast i8* bitcast ([24 x i8]* @Lt_0842 to i8*) to i8*
	; arg 23
	%vr11185 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11186, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11185
	%vr11189 = bitcast %FBSTRING* %vr11185 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11189, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0843
	%vr11192 = bitcast i8* bitcast ([53 x i8]* @Lt_0843 to i8*) to i8*
	; arg 52
	%vr11191 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11192, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr11191
	%vr11195 = bitcast %FBSTRING* %vr11191 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11195, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11198 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11198, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11197
	%vr11201 = bitcast %FBSTRING* %vr11197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11201, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0844
	%vr11204 = bitcast i8* bitcast ([22 x i8]* @Lt_0844 to i8*) to i8*
	; arg 21
	%vr11203 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11204, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11203
	%vr11207 = bitcast %FBSTRING* %vr11203 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11207, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0845
	%vr11210 = bitcast i8* bitcast ([31 x i8]* @Lt_0845 to i8*) to i8*
	; arg 30
	%vr11209 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11210, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11209
	%vr11213 = bitcast %FBSTRING* %vr11209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11213, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0846
	%vr11216 = bitcast i8* bitcast ([46 x i8]* @Lt_0846 to i8*) to i8*
	; arg 45
	%vr11215 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11216, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr11215
	%vr11219 = bitcast %FBSTRING* %vr11215 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11219, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr11222 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr11221 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11222, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11221
	%vr11225 = bitcast %FBSTRING* %vr11221 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11225, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0847
	%vr11228 = bitcast i8* bitcast ([34 x i8]* @Lt_0847 to i8*) to i8*
	; arg 33
	%vr11227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11228, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr11227
	%vr11231 = bitcast %FBSTRING* %vr11227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11231, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0848
	%vr11234 = bitcast i8* bitcast ([18 x i8]* @Lt_0848 to i8*) to i8*
	; arg 17
	%vr11233 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11234, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr11233
	%vr11237 = bitcast %FBSTRING* %vr11233 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11237, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0849
	%vr11240 = bitcast i8* bitcast ([32 x i8]* @Lt_0849 to i8*) to i8*
	; arg 31
	%vr11239 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11240, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr11239
	%vr11243 = bitcast %FBSTRING* %vr11239 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11243, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084A
	%vr11246 = bitcast i8* bitcast ([23 x i8]* @Lt_084A to i8*) to i8*
	; arg 22
	%vr11245 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11246, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11245
	%vr11249 = bitcast %FBSTRING* %vr11245 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11249, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084B
	%vr11252 = bitcast i8* bitcast ([35 x i8]* @Lt_084B to i8*) to i8*
	; arg 34
	%vr11251 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11252, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11251
	%vr11255 = bitcast %FBSTRING* %vr11251 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11255, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084C
	%vr11258 = bitcast i8* bitcast ([23 x i8]* @Lt_084C to i8*) to i8*
	; arg 22
	%vr11257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11258, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11257
	%vr11261 = bitcast %FBSTRING* %vr11257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11261, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084D
	%vr11264 = bitcast i8* bitcast ([35 x i8]* @Lt_084D to i8*) to i8*
	; arg 34
	%vr11263 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11264, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11263
	%vr11267 = bitcast %FBSTRING* %vr11263 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11267, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084E
	%vr11270 = bitcast i8* bitcast ([23 x i8]* @Lt_084E to i8*) to i8*
	; arg 22
	%vr11269 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11270, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11269
	%vr11273 = bitcast %FBSTRING* %vr11269 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11273, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084F
	%vr11276 = bitcast i8* bitcast ([35 x i8]* @Lt_084F to i8*) to i8*
	; arg 34
	%vr11275 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11276, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11275
	%vr11279 = bitcast %FBSTRING* %vr11275 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11279, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11282 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11281 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11282, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11281
	%vr11285 = bitcast %FBSTRING* %vr11281 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11285, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr11288 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr11287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11288, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr11287
	%vr11291 = bitcast %FBSTRING* %vr11287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11291, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr11294 = bitcast i8* bitcast ([16 x i8]* @Lt_0851 to i8*) to i8*
	; arg 15
	%vr11293 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11294, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11293
	%vr11297 = bitcast %FBSTRING* %vr11293 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11297, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr11300 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr11299 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11300, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11299
	%vr11303 = bitcast %FBSTRING* %vr11299 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11303, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11306 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11305 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11306, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11305
	%vr11309 = bitcast %FBSTRING* %vr11305 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11309, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0852
	%vr11312 = bitcast i8* bitcast ([37 x i8]* @Lt_0852 to i8*) to i8*
	; arg 36
	%vr11311 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11312, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr11311
	%vr11315 = bitcast %FBSTRING* %vr11311 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11315, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr11318 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr11317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11318, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11317
	%vr11321 = bitcast %FBSTRING* %vr11317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11321, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0853
	%vr11324 = bitcast i8* bitcast ([16 x i8]* @Lt_0853 to i8*) to i8*
	; arg 15
	%vr11323 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11324, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11323
	%vr11327 = bitcast %FBSTRING* %vr11323 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11327, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11330 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11329 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11330, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11329
	%vr11333 = bitcast %FBSTRING* %vr11329 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11333, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0854
	%vr11336 = bitcast i8* bitcast ([29 x i8]* @Lt_0854 to i8*) to i8*
	; arg 28
	%vr11335 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11336, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr11335
	%vr11339 = bitcast %FBSTRING* %vr11335 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11339, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0855
	%vr11342 = bitcast i8* bitcast ([46 x i8]* @Lt_0855 to i8*) to i8*
	; arg 45
	%vr11341 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11342, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr11341
	%vr11345 = bitcast %FBSTRING* %vr11341 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11345, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11348 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11348, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11347
	%vr11351 = bitcast %FBSTRING* %vr11347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11351, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0856
	%vr11354 = bitcast i8* bitcast ([31 x i8]* @Lt_0856 to i8*) to i8*
	; arg 30
	%vr11353 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11354, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11353
	%vr11357 = bitcast %FBSTRING* %vr11353 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11357, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0857
	%vr11360 = bitcast i8* bitcast ([52 x i8]* @Lt_0857 to i8*) to i8*
	; arg 51
	%vr11359 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11360, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr11359
	%vr11363 = bitcast %FBSTRING* %vr11359 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11363, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11366 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11365 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11366, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11365
	%vr11369 = bitcast %FBSTRING* %vr11365 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11369, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0858
	%vr11372 = bitcast i8* bitcast ([42 x i8]* @Lt_0858 to i8*) to i8*
	; arg 41
	%vr11371 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11372, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr11371
	%vr11375 = bitcast %FBSTRING* %vr11371 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11375, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0859
	%vr11378 = bitcast i8* bitcast ([41 x i8]* @Lt_0859 to i8*) to i8*
	; arg 40
	%vr11377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11378, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr11377
	%vr11381 = bitcast %FBSTRING* %vr11377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11381, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085A
	%vr11384 = bitcast i8* bitcast ([56 x i8]* @Lt_085A to i8*) to i8*
	; arg 55
	%vr11383 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11384, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr11383
	%vr11387 = bitcast %FBSTRING* %vr11383 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11387, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11390 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11389 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11390, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11389
	%vr11393 = bitcast %FBSTRING* %vr11389 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11393, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085B
	%vr11396 = bitcast i8* bitcast ([12 x i8]* @Lt_085B to i8*) to i8*
	; arg 11
	%vr11395 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11396, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr11395
	%vr11399 = bitcast %FBSTRING* %vr11395 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11399, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085C
	%vr11402 = bitcast i8* bitcast ([43 x i8]* @Lt_085C to i8*) to i8*
	; arg 42
	%vr11401 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11402, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr11401
	%vr11405 = bitcast %FBSTRING* %vr11401 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11405, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085D
	%vr11408 = bitcast i8* bitcast ([33 x i8]* @Lt_085D to i8*) to i8*
	; arg 32
	%vr11407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11408, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr11407
	%vr11411 = bitcast %FBSTRING* %vr11407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11411, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11414 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11413 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11414, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11413
	%vr11417 = bitcast %FBSTRING* %vr11413 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11417, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085E
	%vr11420 = bitcast i8* bitcast ([28 x i8]* @Lt_085E to i8*) to i8*
	; arg 27
	%vr11419 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11420, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr11419
	%vr11423 = bitcast %FBSTRING* %vr11419 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11423, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085F
	%vr11426 = bitcast i8* bitcast ([48 x i8]* @Lt_085F to i8*) to i8*
	; arg 47
	%vr11425 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11426, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr11425
	%vr11429 = bitcast %FBSTRING* %vr11425 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11429, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0860
	%vr11432 = bitcast i8* bitcast ([39 x i8]* @Lt_0860 to i8*) to i8*
	; arg 38
	%vr11431 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11432, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11431
	%vr11435 = bitcast %FBSTRING* %vr11431 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11435, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0861
	%vr11438 = bitcast i8* bitcast ([23 x i8]* @Lt_0861 to i8*) to i8*
	; arg 22
	%vr11437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11438, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11437
	%vr11441 = bitcast %FBSTRING* %vr11437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11441, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11444 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11443 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11444, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11443
	%vr11447 = bitcast %FBSTRING* %vr11443 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11447, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0862
	%vr11450 = bitcast i8* bitcast ([24 x i8]* @Lt_0862 to i8*) to i8*
	; arg 23
	%vr11449 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11450, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11449
	%vr11453 = bitcast %FBSTRING* %vr11449 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11453, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0863
	%vr11456 = bitcast i8* bitcast ([39 x i8]* @Lt_0863 to i8*) to i8*
	; arg 38
	%vr11455 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11456, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11455
	%vr11459 = bitcast %FBSTRING* %vr11455 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11459, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0864
	%vr11462 = bitcast i8* bitcast ([25 x i8]* @Lt_0864 to i8*) to i8*
	; arg 24
	%vr11461 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11462, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11461
	%vr11465 = bitcast %FBSTRING* %vr11461 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11465, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0865
	%vr11468 = bitcast i8* bitcast ([25 x i8]* @Lt_0865 to i8*) to i8*
	; arg 24
	%vr11467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11468, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11467
	%vr11471 = bitcast %FBSTRING* %vr11467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11471, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0866
	%vr11474 = bitcast i8* bitcast ([38 x i8]* @Lt_0866 to i8*) to i8*
	; arg 37
	%vr11473 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11474, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11473
	%vr11477 = bitcast %FBSTRING* %vr11473 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11477, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0867
	%vr11480 = bitcast i8* bitcast ([16 x i8]* @Lt_0867 to i8*) to i8*
	; arg 15
	%vr11479 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11480, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11479
	%vr11483 = bitcast %FBSTRING* %vr11479 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11483, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0868
	%vr11486 = bitcast i8* bitcast ([13 x i8]* @Lt_0868 to i8*) to i8*
	; arg 12
	%vr11485 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11486, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11485
	%vr11489 = bitcast %FBSTRING* %vr11485 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11489, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0869
	%vr11492 = bitcast i8* bitcast ([47 x i8]* @Lt_0869 to i8*) to i8*
	; arg 46
	%vr11491 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11492, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11491
	%vr11495 = bitcast %FBSTRING* %vr11491 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11495, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11498 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11498, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11497
	%vr11501 = bitcast %FBSTRING* %vr11497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11501, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086A
	%vr11504 = bitcast i8* bitcast ([86 x i8]* @Lt_086A to i8*) to i8*
	; arg 85
	%vr11503 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11504, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr11503
	%vr11507 = bitcast %FBSTRING* %vr11503 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11507, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11510 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11509 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11510, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11509
	%vr11513 = bitcast %FBSTRING* %vr11509 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11513, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086B
	%vr11516 = bitcast i8* bitcast ([47 x i8]* @Lt_086B to i8*) to i8*
	; arg 46
	%vr11515 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11516, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11515
	%vr11519 = bitcast %FBSTRING* %vr11515 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11519, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr11522 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr11521 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11522, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr11521
	%vr11525 = bitcast %FBSTRING* %vr11521 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11525, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086C
	%vr11528 = bitcast i8* bitcast ([33 x i8]* @Lt_086C to i8*) to i8*
	; arg 32
	%vr11527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11528, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr11527
	%vr11531 = bitcast %FBSTRING* %vr11527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11531, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086D
	%vr11534 = bitcast i8* bitcast ([39 x i8]* @Lt_086D to i8*) to i8*
	; arg 38
	%vr11533 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11534, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11533
	%vr11537 = bitcast %FBSTRING* %vr11533 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11537, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086E
	%vr11540 = bitcast i8* bitcast ([24 x i8]* @Lt_086E to i8*) to i8*
	; arg 23
	%vr11539 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11540, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11539
	%vr11543 = bitcast %FBSTRING* %vr11539 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11543, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086F
	%vr11546 = bitcast i8* bitcast ([23 x i8]* @Lt_086F to i8*) to i8*
	; arg 22
	%vr11545 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11546, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr11545
	%vr11549 = bitcast %FBSTRING* %vr11545 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11549, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0870
	%vr11552 = bitcast i8* bitcast ([38 x i8]* @Lt_0870 to i8*) to i8*
	; arg 37
	%vr11551 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11552, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11551
	%vr11555 = bitcast %FBSTRING* %vr11551 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11555, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11558 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11558, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11557
	%vr11561 = bitcast %FBSTRING* %vr11557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11561, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0871
	%vr11564 = bitcast i8* bitcast ([9 x i8]* @Lt_0871 to i8*) to i8*
	; arg 8
	%vr11563 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11564, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11563
	%vr11567 = bitcast %FBSTRING* %vr11563 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11567, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0872
	%vr11570 = bitcast i8* bitcast ([16 x i8]* @Lt_0872 to i8*) to i8*
	; arg 15
	%vr11569 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11570, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11569
	%vr11573 = bitcast %FBSTRING* %vr11569 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11573, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0873
	%vr11576 = bitcast i8* bitcast ([33 x i8]* @Lt_0873 to i8*) to i8*
	; arg 32
	%vr11575 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11576, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr11575
	%vr11579 = bitcast %FBSTRING* %vr11575 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11579, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0874
	%vr11582 = bitcast i8* bitcast ([51 x i8]* @Lt_0874 to i8*) to i8*
	; arg 50
	%vr11581 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11582, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr11581
	%vr11585 = bitcast %FBSTRING* %vr11581 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11585, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0875
	%vr11588 = bitcast i8* bitcast ([58 x i8]* @Lt_0875 to i8*) to i8*
	; arg 57
	%vr11587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11588, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr11587
	%vr11591 = bitcast %FBSTRING* %vr11587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11591, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0876
	%vr11594 = bitcast i8* bitcast ([38 x i8]* @Lt_0876 to i8*) to i8*
	; arg 37
	%vr11593 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11594, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11593
	%vr11597 = bitcast %FBSTRING* %vr11593 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11597, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0877
	%vr11600 = bitcast i8* bitcast ([74 x i8]* @Lt_0877 to i8*) to i8*
	; arg 73
	%vr11599 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11600, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr11599
	%vr11603 = bitcast %FBSTRING* %vr11599 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11603, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0878
	%vr11606 = bitcast i8* bitcast ([71 x i8]* @Lt_0878 to i8*) to i8*
	; arg 70
	%vr11605 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11606, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr11605
	%vr11609 = bitcast %FBSTRING* %vr11605 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11609, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0879
	%vr11612 = bitcast i8* bitcast ([25 x i8]* @Lt_0879 to i8*) to i8*
	; arg 24
	%vr11611 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11612, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11611
	%vr11615 = bitcast %FBSTRING* %vr11611 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11615, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087A
	%vr11618 = bitcast i8* bitcast ([35 x i8]* @Lt_087A to i8*) to i8*
	; arg 34
	%vr11617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11618, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11617
	%vr11621 = bitcast %FBSTRING* %vr11617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11621, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11624 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11623 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11624, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11623
	%vr11627 = bitcast %FBSTRING* %vr11623 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11627, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087B
	%vr11630 = bitcast i8* bitcast ([22 x i8]* @Lt_087B to i8*) to i8*
	; arg 21
	%vr11629 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11630, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11629
	%vr11633 = bitcast %FBSTRING* %vr11629 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11633, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11636 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11635 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11636, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11635
	%vr11639 = bitcast %FBSTRING* %vr11635 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11639, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087D
	%vr11642 = bitcast i8* bitcast ([37 x i8]* @Lt_087D to i8*) to i8*
	; arg 36
	%vr11641 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11642, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr11641
	%vr11645 = bitcast %FBSTRING* %vr11641 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11645, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087E
	%vr11648 = bitcast i8* bitcast ([68 x i8]* @Lt_087E to i8*) to i8*
	; arg 67
	%vr11647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11648, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr11647
	%vr11651 = bitcast %FBSTRING* %vr11647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11651, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11654 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11653 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11654, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11653
	%vr11657 = bitcast %FBSTRING* %vr11653 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11657, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr11660 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr11659 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11660, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11659
	%vr11663 = bitcast %FBSTRING* %vr11659 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11663, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087F
	%vr11666 = bitcast i8* bitcast ([12 x i8]* @Lt_087F to i8*) to i8*
	; arg 11
	%vr11665 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11666, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr11665
	%vr11669 = bitcast %FBSTRING* %vr11665 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11669, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11672 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11671 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11672, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11671
	%vr11675 = bitcast %FBSTRING* %vr11671 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11675, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0880
	%vr11678 = bitcast i8* bitcast ([119 x i8]* @Lt_0880 to i8*) to i8*
	; arg 118
	%vr11677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11678, i64 118 )

	; call fb_PrintString()
	; arg 1
	; arg vr11677
	%vr11681 = bitcast %FBSTRING* %vr11677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11681, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0881
	%vr11684 = bitcast i8* bitcast ([85 x i8]* @Lt_0881 to i8*) to i8*
	; arg 84
	%vr11683 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11684, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr11683
	%vr11687 = bitcast %FBSTRING* %vr11683 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11687, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11690 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11689 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11690, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11689
	%vr11693 = bitcast %FBSTRING* %vr11689 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11693, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr11696 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr11695 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11696, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11695
	%vr11699 = bitcast %FBSTRING* %vr11695 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11699, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0882
	%vr11702 = bitcast i8* bitcast ([12 x i8]* @Lt_0882 to i8*) to i8*
	; arg 11
	%vr11701 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11702, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr11701
	%vr11705 = bitcast %FBSTRING* %vr11701 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11705, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11708 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11708, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11707
	%vr11711 = bitcast %FBSTRING* %vr11707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11711, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0883
	%vr11714 = bitcast i8* bitcast ([33 x i8]* @Lt_0883 to i8*) to i8*
	; arg 32
	%vr11713 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11714, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr11713
	%vr11717 = bitcast %FBSTRING* %vr11713 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11717, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0884
	%vr11720 = bitcast i8* bitcast ([32 x i8]* @Lt_0884 to i8*) to i8*
	; arg 31
	%vr11719 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11720, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr11719
	%vr11723 = bitcast %FBSTRING* %vr11719 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11723, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0885
	%vr11726 = bitcast i8* bitcast ([101 x i8]* @Lt_0885 to i8*) to i8*
	; arg 100
	%vr11725 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11726, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr11725
	%vr11729 = bitcast %FBSTRING* %vr11725 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11729, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0886
	%vr11732 = bitcast i8* bitcast ([40 x i8]* @Lt_0886 to i8*) to i8*
	; arg 39
	%vr11731 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11732, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11731
	%vr11735 = bitcast %FBSTRING* %vr11731 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11735, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11738 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11738, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11737
	%vr11741 = bitcast %FBSTRING* %vr11737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11741, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11744 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11743 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11744, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11743
	%vr11747 = bitcast %FBSTRING* %vr11743 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11747, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0887
	%vr11750 = bitcast i8* bitcast ([13 x i8]* @Lt_0887 to i8*) to i8*
	; arg 12
	%vr11749 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11750, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11749
	%vr11753 = bitcast %FBSTRING* %vr11749 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11753, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11756 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11755 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11756, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11755
	%vr11759 = bitcast %FBSTRING* %vr11755 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11759, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0888
	%vr11762 = bitcast i8* bitcast ([80 x i8]* @Lt_0888 to i8*) to i8*
	; arg 79
	%vr11761 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11762, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr11761
	%vr11765 = bitcast %FBSTRING* %vr11761 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11765, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0889
	%vr11768 = bitcast i8* bitcast ([45 x i8]* @Lt_0889 to i8*) to i8*
	; arg 44
	%vr11767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11768, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr11767
	%vr11771 = bitcast %FBSTRING* %vr11767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11771, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088A
	%vr11774 = bitcast i8* bitcast ([37 x i8]* @Lt_088A to i8*) to i8*
	; arg 36
	%vr11773 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11774, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr11773
	%vr11777 = bitcast %FBSTRING* %vr11773 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11777, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11780 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11779 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11780, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11779
	%vr11783 = bitcast %FBSTRING* %vr11779 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11783, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11786 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11785 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11786, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11785
	%vr11789 = bitcast %FBSTRING* %vr11785 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11789, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088B
	%vr11792 = bitcast i8* bitcast ([9 x i8]* @Lt_088B to i8*) to i8*
	; arg 8
	%vr11791 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11792, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11791
	%vr11795 = bitcast %FBSTRING* %vr11791 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11795, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11798 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11798, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11797
	%vr11801 = bitcast %FBSTRING* %vr11797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11801, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088C
	%vr11804 = bitcast i8* bitcast ([45 x i8]* @Lt_088C to i8*) to i8*
	; arg 44
	%vr11803 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11804, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr11803
	%vr11807 = bitcast %FBSTRING* %vr11803 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11807, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088D
	%vr11810 = bitcast i8* bitcast ([40 x i8]* @Lt_088D to i8*) to i8*
	; arg 39
	%vr11809 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11810, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11809
	%vr11813 = bitcast %FBSTRING* %vr11809 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11813, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088E
	%vr11816 = bitcast i8* bitcast ([40 x i8]* @Lt_088E to i8*) to i8*
	; arg 39
	%vr11815 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11816, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11815
	%vr11819 = bitcast %FBSTRING* %vr11815 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11819, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088F
	%vr11822 = bitcast i8* bitcast ([54 x i8]* @Lt_088F to i8*) to i8*
	; arg 53
	%vr11821 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11822, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr11821
	%vr11825 = bitcast %FBSTRING* %vr11821 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11825, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0890
	%vr11828 = bitcast i8* bitcast ([80 x i8]* @Lt_0890 to i8*) to i8*
	; arg 79
	%vr11827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11828, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr11827
	%vr11831 = bitcast %FBSTRING* %vr11827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11831, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0891
	%vr11834 = bitcast i8* bitcast ([41 x i8]* @Lt_0891 to i8*) to i8*
	; arg 40
	%vr11833 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11834, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr11833
	%vr11837 = bitcast %FBSTRING* %vr11833 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11837, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11840 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11839 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11840, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11839
	%vr11843 = bitcast %FBSTRING* %vr11839 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11843, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr11846 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr11845 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11846, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11845
	%vr11849 = bitcast %FBSTRING* %vr11845 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11849, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0892
	%vr11852 = bitcast i8* bitcast ([11 x i8]* @Lt_0892 to i8*) to i8*
	; arg 10
	%vr11851 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11852, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr11851
	%vr11855 = bitcast %FBSTRING* %vr11851 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11855, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr11858 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr11857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11858, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11857
	%vr11861 = bitcast %FBSTRING* %vr11857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11861, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0893
	%vr11864 = bitcast i8* bitcast ([52 x i8]* @Lt_0893 to i8*) to i8*
	; arg 51
	%vr11863 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11864, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr11863
	%vr11867 = bitcast %FBSTRING* %vr11863 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11867, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0894
	%vr11870 = bitcast i8* bitcast ([72 x i8]* @Lt_0894 to i8*) to i8*
	; arg 71
	%vr11869 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11870, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr11869
	%vr11873 = bitcast %FBSTRING* %vr11869 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11873, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0895
	%vr11876 = bitcast i8* bitcast ([42 x i8]* @Lt_0895 to i8*) to i8*
	; arg 41
	%vr11875 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11876, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr11875
	%vr11879 = bitcast %FBSTRING* %vr11875 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11879, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11882 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11881 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11882, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11881
	%vr11885 = bitcast %FBSTRING* %vr11881 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11885, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0896
	%vr11888 = bitcast i8* bitcast ([38 x i8]* @Lt_0896 to i8*) to i8*
	; arg 37
	%vr11887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11888, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11887
	%vr11891 = bitcast %FBSTRING* %vr11887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11891, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0897
	%vr11894 = bitcast i8* bitcast ([44 x i8]* @Lt_0897 to i8*) to i8*
	; arg 43
	%vr11893 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11894, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11893
	%vr11897 = bitcast %FBSTRING* %vr11893 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11897, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0898
	%vr11900 = bitcast i8* bitcast ([49 x i8]* @Lt_0898 to i8*) to i8*
	; arg 48
	%vr11899 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11900, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr11899
	%vr11903 = bitcast %FBSTRING* %vr11899 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11903, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0899
	%vr11906 = bitcast i8* bitcast ([36 x i8]* @Lt_0899 to i8*) to i8*
	; arg 35
	%vr11905 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11906, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr11905
	%vr11909 = bitcast %FBSTRING* %vr11905 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11909, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11912 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11911 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11912, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11911
	%vr11915 = bitcast %FBSTRING* %vr11911 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11915, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089A
	%vr11918 = bitcast i8* bitcast ([94 x i8]* @Lt_089A to i8*) to i8*
	; arg 93
	%vr11917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11918, i64 93 )

	; call fb_PrintString()
	; arg 1
	; arg vr11917
	%vr11921 = bitcast %FBSTRING* %vr11917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11921, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089B
	%vr11924 = bitcast i8* bitcast ([79 x i8]* @Lt_089B to i8*) to i8*
	; arg 78
	%vr11923 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11924, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11923
	%vr11927 = bitcast %FBSTRING* %vr11923 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11927, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089C
	%vr11930 = bitcast i8* bitcast ([83 x i8]* @Lt_089C to i8*) to i8*
	; arg 82
	%vr11929 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11930, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr11929
	%vr11933 = bitcast %FBSTRING* %vr11929 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11933, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11936 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr11935 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11936, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11935
	%vr11939 = bitcast %FBSTRING* %vr11935 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11939, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr11942 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr11941 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11942, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr11941
	%vr11945 = bitcast %FBSTRING* %vr11941 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11945, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11948 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11948, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11947
	%vr11951 = bitcast %FBSTRING* %vr11947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11951, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089E
	%vr11954 = bitcast i8* bitcast ([14 x i8]* @Lt_089E to i8*) to i8*
	; arg 13
	%vr11953 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11954, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11953
	%vr11957 = bitcast %FBSTRING* %vr11953 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11957, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089F
	%vr11960 = bitcast i8* bitcast ([60 x i8]* @Lt_089F to i8*) to i8*
	; arg 59
	%vr11959 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11960, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr11959
	%vr11963 = bitcast %FBSTRING* %vr11959 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11963, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A0
	%vr11966 = bitcast i8* bitcast ([34 x i8]* @Lt_08A0 to i8*) to i8*
	; arg 33
	%vr11965 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11966, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr11965
	%vr11969 = bitcast %FBSTRING* %vr11965 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11969, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A1
	%vr11972 = bitcast i8* bitcast ([37 x i8]* @Lt_08A1 to i8*) to i8*
	; arg 36
	%vr11971 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11972, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr11971
	%vr11975 = bitcast %FBSTRING* %vr11971 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11975, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A2
	%vr11978 = bitcast i8* bitcast ([39 x i8]* @Lt_08A2 to i8*) to i8*
	; arg 38
	%vr11977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11978, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11977
	%vr11981 = bitcast %FBSTRING* %vr11977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11981, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A3
	%vr11984 = bitcast i8* bitcast ([79 x i8]* @Lt_08A3 to i8*) to i8*
	; arg 78
	%vr11983 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11984, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11983
	%vr11987 = bitcast %FBSTRING* %vr11983 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11987, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A4
	%vr11990 = bitcast i8* bitcast ([26 x i8]* @Lt_08A4 to i8*) to i8*
	; arg 25
	%vr11989 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11990, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr11989
	%vr11993 = bitcast %FBSTRING* %vr11989 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11993, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr11996 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr11995 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11996, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11995
	%vr11999 = bitcast %FBSTRING* %vr11995 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11999, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A5
	%vr12002 = bitcast i8* bitcast ([15 x i8]* @Lt_08A5 to i8*) to i8*
	; arg 14
	%vr12001 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12002, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr12001
	%vr12005 = bitcast %FBSTRING* %vr12001 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12005, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr12008 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr12007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12008, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12007
	%vr12011 = bitcast %FBSTRING* %vr12007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12011, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A6
	%vr12014 = bitcast i8* bitcast ([75 x i8]* @Lt_08A6 to i8*) to i8*
	; arg 74
	%vr12013 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12014, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr12013
	%vr12017 = bitcast %FBSTRING* %vr12013 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12017, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A7
	%vr12020 = bitcast i8* bitcast ([64 x i8]* @Lt_08A7 to i8*) to i8*
	; arg 63
	%vr12019 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12020, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr12019
	%vr12023 = bitcast %FBSTRING* %vr12019 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12023, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A8
	%vr12026 = bitcast i8* bitcast ([39 x i8]* @Lt_08A8 to i8*) to i8*
	; arg 38
	%vr12025 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12026, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr12025
	%vr12029 = bitcast %FBSTRING* %vr12025 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12029, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A9
	%vr12032 = bitcast i8* bitcast ([43 x i8]* @Lt_08A9 to i8*) to i8*
	; arg 42
	%vr12031 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12032, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12031
	%vr12035 = bitcast %FBSTRING* %vr12031 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12035, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AA
	%vr12038 = bitcast i8* bitcast ([27 x i8]* @Lt_08AA to i8*) to i8*
	; arg 26
	%vr12037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12038, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr12037
	%vr12041 = bitcast %FBSTRING* %vr12037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12041, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AB
	%vr12044 = bitcast i8* bitcast ([48 x i8]* @Lt_08AB to i8*) to i8*
	; arg 47
	%vr12043 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12044, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr12043
	%vr12047 = bitcast %FBSTRING* %vr12043 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12047, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AC
	%vr12050 = bitcast i8* bitcast ([67 x i8]* @Lt_08AC to i8*) to i8*
	; arg 66
	%vr12049 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12050, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr12049
	%vr12053 = bitcast %FBSTRING* %vr12049 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12053, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AD
	%vr12056 = bitcast i8* bitcast ([33 x i8]* @Lt_08AD to i8*) to i8*
	; arg 32
	%vr12055 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12056, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr12055
	%vr12059 = bitcast %FBSTRING* %vr12055 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12059, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AE
	%vr12062 = bitcast i8* bitcast ([59 x i8]* @Lt_08AE to i8*) to i8*
	; arg 58
	%vr12061 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12062, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr12061
	%vr12065 = bitcast %FBSTRING* %vr12061 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12065, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12068 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12068, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12067
	%vr12071 = bitcast %FBSTRING* %vr12067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12071, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AF
	%vr12074 = bitcast i8* bitcast ([85 x i8]* @Lt_08AF to i8*) to i8*
	; arg 84
	%vr12073 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12074, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr12073
	%vr12077 = bitcast %FBSTRING* %vr12073 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12077, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B0
	%vr12080 = bitcast i8* bitcast ([15 x i8]* @Lt_08B0 to i8*) to i8*
	; arg 14
	%vr12079 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12080, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr12079
	%vr12083 = bitcast %FBSTRING* %vr12079 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12083, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B1
	%vr12086 = bitcast i8* bitcast ([22 x i8]* @Lt_08B1 to i8*) to i8*
	; arg 21
	%vr12085 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12086, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12085
	%vr12089 = bitcast %FBSTRING* %vr12085 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12089, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B2
	%vr12092 = bitcast i8* bitcast ([29 x i8]* @Lt_08B2 to i8*) to i8*
	; arg 28
	%vr12091 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12092, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr12091
	%vr12095 = bitcast %FBSTRING* %vr12091 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12095, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B3
	%vr12098 = bitcast i8* bitcast ([65 x i8]* @Lt_08B3 to i8*) to i8*
	; arg 64
	%vr12097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12098, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr12097
	%vr12101 = bitcast %FBSTRING* %vr12097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12101, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr12104 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr12103 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12104, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12103
	%vr12107 = bitcast %FBSTRING* %vr12103 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12107, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12110 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12109 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12110, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12109
	%vr12113 = bitcast %FBSTRING* %vr12109 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12113, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B4
	%vr12116 = bitcast i8* bitcast ([13 x i8]* @Lt_08B4 to i8*) to i8*
	; arg 12
	%vr12115 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12116, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12115
	%vr12119 = bitcast %FBSTRING* %vr12115 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12119, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr12122 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr12121 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12122, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12121
	%vr12125 = bitcast %FBSTRING* %vr12121 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12125, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B5
	%vr12128 = bitcast i8* bitcast ([20 x i8]* @Lt_08B5 to i8*) to i8*
	; arg 19
	%vr12127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12128, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr12127
	%vr12131 = bitcast %FBSTRING* %vr12127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12131, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B6
	%vr12134 = bitcast i8* bitcast ([49 x i8]* @Lt_08B6 to i8*) to i8*
	; arg 48
	%vr12133 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12134, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr12133
	%vr12137 = bitcast %FBSTRING* %vr12133 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12137, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B7
	%vr12140 = bitcast i8* bitcast ([58 x i8]* @Lt_08B7 to i8*) to i8*
	; arg 57
	%vr12139 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12140, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr12139
	%vr12143 = bitcast %FBSTRING* %vr12139 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12143, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B8
	%vr12146 = bitcast i8* bitcast ([70 x i8]* @Lt_08B8 to i8*) to i8*
	; arg 69
	%vr12145 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12146, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr12145
	%vr12149 = bitcast %FBSTRING* %vr12145 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12149, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B9
	%vr12152 = bitcast i8* bitcast ([69 x i8]* @Lt_08B9 to i8*) to i8*
	; arg 68
	%vr12151 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12152, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr12151
	%vr12155 = bitcast %FBSTRING* %vr12151 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12155, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BA
	%vr12158 = bitcast i8* bitcast ([61 x i8]* @Lt_08BA to i8*) to i8*
	; arg 60
	%vr12157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12158, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr12157
	%vr12161 = bitcast %FBSTRING* %vr12157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12161, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BB
	%vr12164 = bitcast i8* bitcast ([41 x i8]* @Lt_08BB to i8*) to i8*
	; arg 40
	%vr12163 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12164, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr12163
	%vr12167 = bitcast %FBSTRING* %vr12163 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12167, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BC
	%vr12170 = bitcast i8* bitcast ([60 x i8]* @Lt_08BC to i8*) to i8*
	; arg 59
	%vr12169 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12170, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr12169
	%vr12173 = bitcast %FBSTRING* %vr12169 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12173, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BD
	%vr12176 = bitcast i8* bitcast ([36 x i8]* @Lt_08BD to i8*) to i8*
	; arg 35
	%vr12175 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12176, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr12175
	%vr12179 = bitcast %FBSTRING* %vr12175 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12179, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BE
	%vr12182 = bitcast i8* bitcast ([47 x i8]* @Lt_08BE to i8*) to i8*
	; arg 46
	%vr12181 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12182, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr12181
	%vr12185 = bitcast %FBSTRING* %vr12181 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12185, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr12188 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr12187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12188, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12187
	%vr12191 = bitcast %FBSTRING* %vr12187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12191, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12194 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12193 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12194, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12193
	%vr12197 = bitcast %FBSTRING* %vr12193 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12197, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr12200 = bitcast i8* bitcast ([16 x i8]* @Lt_0851 to i8*) to i8*
	; arg 15
	%vr12199 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12200, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr12199
	%vr12203 = bitcast %FBSTRING* %vr12199 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12203, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr12206 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr12205 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12206, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12205
	%vr12209 = bitcast %FBSTRING* %vr12205 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12209, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12212 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12211 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12212, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12211
	%vr12215 = bitcast %FBSTRING* %vr12211 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12215, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BF
	%vr12218 = bitcast i8* bitcast ([50 x i8]* @Lt_08BF to i8*) to i8*
	; arg 49
	%vr12217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12218, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr12217
	%vr12221 = bitcast %FBSTRING* %vr12217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12221, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr12224 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr12223 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12224, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12223
	%vr12227 = bitcast %FBSTRING* %vr12223 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12227, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C0
	%vr12230 = bitcast i8* bitcast ([21 x i8]* @Lt_08C0 to i8*) to i8*
	; arg 20
	%vr12229 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12230, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12229
	%vr12233 = bitcast %FBSTRING* %vr12229 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12233, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C1
	%vr12236 = bitcast i8* bitcast ([19 x i8]* @Lt_08C1 to i8*) to i8*
	; arg 18
	%vr12235 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12236, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr12235
	%vr12239 = bitcast %FBSTRING* %vr12235 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12239, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C2
	%vr12242 = bitcast i8* bitcast ([25 x i8]* @Lt_08C2 to i8*) to i8*
	; arg 24
	%vr12241 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12242, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr12241
	%vr12245 = bitcast %FBSTRING* %vr12241 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12245, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C3
	%vr12248 = bitcast i8* bitcast ([22 x i8]* @Lt_08C3 to i8*) to i8*
	; arg 21
	%vr12247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12248, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12247
	%vr12251 = bitcast %FBSTRING* %vr12247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12251, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C4
	%vr12254 = bitcast i8* bitcast ([22 x i8]* @Lt_08C4 to i8*) to i8*
	; arg 21
	%vr12253 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12254, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12253
	%vr12257 = bitcast %FBSTRING* %vr12253 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12257, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C5
	%vr12260 = bitcast i8* bitcast ([46 x i8]* @Lt_08C5 to i8*) to i8*
	; arg 45
	%vr12259 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12260, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr12259
	%vr12263 = bitcast %FBSTRING* %vr12259 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12263, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C6
	%vr12266 = bitcast i8* bitcast ([48 x i8]* @Lt_08C6 to i8*) to i8*
	; arg 47
	%vr12265 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12266, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr12265
	%vr12269 = bitcast %FBSTRING* %vr12265 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12269, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr12272 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr12271 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12272, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12271
	%vr12275 = bitcast %FBSTRING* %vr12271 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12275, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12278 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12278, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12277
	%vr12281 = bitcast %FBSTRING* %vr12277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12281, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C7
	%vr12284 = bitcast i8* bitcast ([47 x i8]* @Lt_08C7 to i8*) to i8*
	; arg 46
	%vr12283 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12284, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr12283
	%vr12287 = bitcast %FBSTRING* %vr12283 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12287, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr12290 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr12289 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12290, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12289
	%vr12293 = bitcast %FBSTRING* %vr12289 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12293, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12296 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12295 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12296, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12295
	%vr12299 = bitcast %FBSTRING* %vr12295 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12299, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C8
	%vr12302 = bitcast i8* bitcast ([30 x i8]* @Lt_08C8 to i8*) to i8*
	; arg 29
	%vr12301 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12302, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12301
	%vr12305 = bitcast %FBSTRING* %vr12301 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12305, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C9
	%vr12308 = bitcast i8* bitcast ([36 x i8]* @Lt_08C9 to i8*) to i8*
	; arg 35
	%vr12307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12308, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr12307
	%vr12311 = bitcast %FBSTRING* %vr12307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12311, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12314 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12313 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12314, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12313
	%vr12317 = bitcast %FBSTRING* %vr12313 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12317, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CA
	%vr12320 = bitcast i8* bitcast ([13 x i8]* @Lt_08CA to i8*) to i8*
	; arg 12
	%vr12319 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12320, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12319
	%vr12323 = bitcast %FBSTRING* %vr12319 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12323, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12326 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12325 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12326, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12325
	%vr12329 = bitcast %FBSTRING* %vr12325 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12329, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CB
	%vr12332 = bitcast i8* bitcast ([62 x i8]* @Lt_08CB to i8*) to i8*
	; arg 61
	%vr12331 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12332, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr12331
	%vr12335 = bitcast %FBSTRING* %vr12331 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12335, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CC
	%vr12338 = bitcast i8* bitcast ([62 x i8]* @Lt_08CC to i8*) to i8*
	; arg 61
	%vr12337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12338, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr12337
	%vr12341 = bitcast %FBSTRING* %vr12337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12341, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CD
	%vr12344 = bitcast i8* bitcast ([67 x i8]* @Lt_08CD to i8*) to i8*
	; arg 66
	%vr12343 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12344, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr12343
	%vr12347 = bitcast %FBSTRING* %vr12343 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12347, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12350 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12349 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12350, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12349
	%vr12353 = bitcast %FBSTRING* %vr12349 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12353, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CE
	%vr12356 = bitcast i8* bitcast ([28 x i8]* @Lt_08CE to i8*) to i8*
	; arg 27
	%vr12355 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12356, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12355
	%vr12359 = bitcast %FBSTRING* %vr12355 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12359, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12362 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12361 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12362, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12361
	%vr12365 = bitcast %FBSTRING* %vr12361 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12365, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CF
	%vr12368 = bitcast i8* bitcast ([30 x i8]* @Lt_08CF to i8*) to i8*
	; arg 29
	%vr12367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12368, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12367
	%vr12371 = bitcast %FBSTRING* %vr12367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12371, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D0
	%vr12374 = bitcast i8* bitcast ([32 x i8]* @Lt_08D0 to i8*) to i8*
	; arg 31
	%vr12373 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12374, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr12373
	%vr12377 = bitcast %FBSTRING* %vr12373 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12377, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D1
	%vr12380 = bitcast i8* bitcast ([2 x i8]* @Lt_08D1 to i8*) to i8*
	; arg 1
	%vr12379 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12380, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12379
	%vr12383 = bitcast %FBSTRING* %vr12379 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12383, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D2
	%vr12386 = bitcast i8* bitcast ([86 x i8]* @Lt_08D2 to i8*) to i8*
	; arg 85
	%vr12385 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12386, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr12385
	%vr12389 = bitcast %FBSTRING* %vr12385 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12389, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D3
	%vr12392 = bitcast i8* bitcast ([39 x i8]* @Lt_08D3 to i8*) to i8*
	; arg 38
	%vr12391 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12392, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr12391
	%vr12395 = bitcast %FBSTRING* %vr12391 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12395, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12398 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12398, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12397
	%vr12401 = bitcast %FBSTRING* %vr12397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12401, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D4
	%vr12404 = bitcast i8* bitcast ([27 x i8]* @Lt_08D4 to i8*) to i8*
	; arg 26
	%vr12403 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12404, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr12403
	%vr12407 = bitcast %FBSTRING* %vr12403 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12407, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D5
	%vr12410 = bitcast i8* bitcast ([39 x i8]* @Lt_08D5 to i8*) to i8*
	; arg 38
	%vr12409 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12410, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr12409
	%vr12413 = bitcast %FBSTRING* %vr12409 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12413, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12416 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12415 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12416, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12415
	%vr12419 = bitcast %FBSTRING* %vr12415 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12419, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D6
	%vr12422 = bitcast i8* bitcast ([19 x i8]* @Lt_08D6 to i8*) to i8*
	; arg 18
	%vr12421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12422, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr12421
	%vr12425 = bitcast %FBSTRING* %vr12421 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12425, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12428 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12428, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12427
	%vr12431 = bitcast %FBSTRING* %vr12427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12431, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D7
	%vr12434 = bitcast i8* bitcast ([27 x i8]* @Lt_08D7 to i8*) to i8*
	; arg 26
	%vr12433 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12434, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr12433
	%vr12437 = bitcast %FBSTRING* %vr12433 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12437, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12440 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12439 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12440, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12439
	%vr12443 = bitcast %FBSTRING* %vr12439 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12443, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D8
	%vr12446 = bitcast i8* bitcast ([42 x i8]* @Lt_08D8 to i8*) to i8*
	; arg 41
	%vr12445 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12446, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr12445
	%vr12449 = bitcast %FBSTRING* %vr12445 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12449, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D9
	%vr12452 = bitcast i8* bitcast ([30 x i8]* @Lt_08D9 to i8*) to i8*
	; arg 29
	%vr12451 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12452, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12451
	%vr12455 = bitcast %FBSTRING* %vr12451 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12455, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12458 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12458, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12457
	%vr12461 = bitcast %FBSTRING* %vr12457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12461, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DA
	%vr12464 = bitcast i8* bitcast ([14 x i8]* @Lt_08DA to i8*) to i8*
	; arg 13
	%vr12463 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12464, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr12463
	%vr12467 = bitcast %FBSTRING* %vr12463 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12467, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12470 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12469 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12470, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12469
	%vr12473 = bitcast %FBSTRING* %vr12469 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12473, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DB
	%vr12476 = bitcast i8* bitcast ([78 x i8]* @Lt_08DB to i8*) to i8*
	; arg 77
	%vr12475 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12476, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr12475
	%vr12479 = bitcast %FBSTRING* %vr12475 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12479, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DC
	%vr12482 = bitcast i8* bitcast ([78 x i8]* @Lt_08DC to i8*) to i8*
	; arg 77
	%vr12481 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12482, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr12481
	%vr12485 = bitcast %FBSTRING* %vr12481 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12485, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12488 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12488, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12487
	%vr12491 = bitcast %FBSTRING* %vr12487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12491, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DD
	%vr12494 = bitcast i8* bitcast ([21 x i8]* @Lt_08DD to i8*) to i8*
	; arg 20
	%vr12493 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12494, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12493
	%vr12497 = bitcast %FBSTRING* %vr12493 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12497, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DE
	%vr12500 = bitcast i8* bitcast ([44 x i8]* @Lt_08DE to i8*) to i8*
	; arg 43
	%vr12499 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12500, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr12499
	%vr12503 = bitcast %FBSTRING* %vr12499 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12503, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DF
	%vr12506 = bitcast i8* bitcast ([44 x i8]* @Lt_08DF to i8*) to i8*
	; arg 43
	%vr12505 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12506, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr12505
	%vr12509 = bitcast %FBSTRING* %vr12505 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12509, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12512 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12511 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12512, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12511
	%vr12515 = bitcast %FBSTRING* %vr12511 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12515, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12518 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12518, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12517
	%vr12521 = bitcast %FBSTRING* %vr12517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12521, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E0
	%vr12524 = bitcast i8* bitcast ([61 x i8]* @Lt_08E0 to i8*) to i8*
	; arg 60
	%vr12523 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12524, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr12523
	%vr12527 = bitcast %FBSTRING* %vr12523 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12527, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E1
	%vr12530 = bitcast i8* bitcast ([19 x i8]* @Lt_08E1 to i8*) to i8*
	; arg 18
	%vr12529 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12530, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr12529
	%vr12533 = bitcast %FBSTRING* %vr12529 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12533, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12536 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12535 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12536, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12535
	%vr12539 = bitcast %FBSTRING* %vr12535 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12539, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E2
	%vr12542 = bitcast i8* bitcast ([43 x i8]* @Lt_08E2 to i8*) to i8*
	; arg 42
	%vr12541 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12542, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12541
	%vr12545 = bitcast %FBSTRING* %vr12541 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12545, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12548 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12548, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12547
	%vr12551 = bitcast %FBSTRING* %vr12547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12551, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E3
	%vr12554 = bitcast i8* bitcast ([16 x i8]* @Lt_08E3 to i8*) to i8*
	; arg 15
	%vr12553 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12554, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr12553
	%vr12557 = bitcast %FBSTRING* %vr12553 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12557, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E4
	%vr12560 = bitcast i8* bitcast ([34 x i8]* @Lt_08E4 to i8*) to i8*
	; arg 33
	%vr12559 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12560, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr12559
	%vr12563 = bitcast %FBSTRING* %vr12559 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12563, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E5
	%vr12566 = bitcast i8* bitcast ([40 x i8]* @Lt_08E5 to i8*) to i8*
	; arg 39
	%vr12565 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12566, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12565
	%vr12569 = bitcast %FBSTRING* %vr12565 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12569, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E6
	%vr12572 = bitcast i8* bitcast ([55 x i8]* @Lt_08E6 to i8*) to i8*
	; arg 54
	%vr12571 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12572, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr12571
	%vr12575 = bitcast %FBSTRING* %vr12571 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12575, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E7
	%vr12578 = bitcast i8* bitcast ([82 x i8]* @Lt_08E7 to i8*) to i8*
	; arg 81
	%vr12577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12578, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr12577
	%vr12581 = bitcast %FBSTRING* %vr12577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12581, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12584 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12583 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12584, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12583
	%vr12587 = bitcast %FBSTRING* %vr12583 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12587, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E8
	%vr12590 = bitcast i8* bitcast ([83 x i8]* @Lt_08E8 to i8*) to i8*
	; arg 82
	%vr12589 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12590, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr12589
	%vr12593 = bitcast %FBSTRING* %vr12589 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12593, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12596 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12595 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12596, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12595
	%vr12599 = bitcast %FBSTRING* %vr12595 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12599, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E9
	%vr12602 = bitcast i8* bitcast ([17 x i8]* @Lt_08E9 to i8*) to i8*
	; arg 16
	%vr12601 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12602, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr12601
	%vr12605 = bitcast %FBSTRING* %vr12601 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12605, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr12608 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr12607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12608, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12607
	%vr12611 = bitcast %FBSTRING* %vr12607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12611, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12614 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12613 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12614, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12613
	%vr12617 = bitcast %FBSTRING* %vr12613 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12617, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EA
	%vr12620 = bitcast i8* bitcast ([42 x i8]* @Lt_08EA to i8*) to i8*
	; arg 41
	%vr12619 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12620, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr12619
	%vr12623 = bitcast %FBSTRING* %vr12619 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12623, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr12626 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr12625 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12626, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12625
	%vr12629 = bitcast %FBSTRING* %vr12625 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12629, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EB
	%vr12632 = bitcast i8* bitcast ([38 x i8]* @Lt_08EB to i8*) to i8*
	; arg 37
	%vr12631 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12632, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12631
	%vr12635 = bitcast %FBSTRING* %vr12631 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12635, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12638 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12638, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12637
	%vr12641 = bitcast %FBSTRING* %vr12637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12641, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EC
	%vr12644 = bitcast i8* bitcast ([23 x i8]* @Lt_08EC to i8*) to i8*
	; arg 22
	%vr12643 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12644, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr12643
	%vr12647 = bitcast %FBSTRING* %vr12643 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12647, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12650 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12649 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12650, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12649
	%vr12653 = bitcast %FBSTRING* %vr12649 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12653, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085B
	%vr12656 = bitcast i8* bitcast ([12 x i8]* @Lt_085B to i8*) to i8*
	; arg 11
	%vr12655 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12656, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr12655
	%vr12659 = bitcast %FBSTRING* %vr12655 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12659, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08ED
	%vr12662 = bitcast i8* bitcast ([6 x i8]* @Lt_08ED to i8*) to i8*
	; arg 5
	%vr12661 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12662, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12661
	%vr12665 = bitcast %FBSTRING* %vr12661 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12665, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EE
	%vr12668 = bitcast i8* bitcast ([102 x i8]* @Lt_08EE to i8*) to i8*
	; arg 101
	%vr12667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12668, i64 101 )

	; call fb_PrintString()
	; arg 1
	; arg vr12667
	%vr12671 = bitcast %FBSTRING* %vr12667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12671, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EF
	%vr12674 = bitcast i8* bitcast ([21 x i8]* @Lt_08EF to i8*) to i8*
	; arg 20
	%vr12673 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12674, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12673
	%vr12677 = bitcast %FBSTRING* %vr12673 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12677, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F0
	%vr12680 = bitcast i8* bitcast ([75 x i8]* @Lt_08F0 to i8*) to i8*
	; arg 74
	%vr12679 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12680, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr12679
	%vr12683 = bitcast %FBSTRING* %vr12679 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12683, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F1
	%vr12686 = bitcast i8* bitcast ([98 x i8]* @Lt_08F1 to i8*) to i8*
	; arg 97
	%vr12685 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12686, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr12685
	%vr12689 = bitcast %FBSTRING* %vr12685 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12689, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F2
	%vr12692 = bitcast i8* bitcast ([21 x i8]* @Lt_08F2 to i8*) to i8*
	; arg 20
	%vr12691 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12692, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12691
	%vr12695 = bitcast %FBSTRING* %vr12691 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12695, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F3
	%vr12698 = bitcast i8* bitcast ([27 x i8]* @Lt_08F3 to i8*) to i8*
	; arg 26
	%vr12697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12698, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr12697
	%vr12701 = bitcast %FBSTRING* %vr12697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12701, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F4
	%vr12704 = bitcast i8* bitcast ([31 x i8]* @Lt_08F4 to i8*) to i8*
	; arg 30
	%vr12703 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12704, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12703
	%vr12707 = bitcast %FBSTRING* %vr12703 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12707, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F5
	%vr12710 = bitcast i8* bitcast ([26 x i8]* @Lt_08F5 to i8*) to i8*
	; arg 25
	%vr12709 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12710, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr12709
	%vr12713 = bitcast %FBSTRING* %vr12709 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12713, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr12716 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr12715 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12716, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12715
	%vr12719 = bitcast %FBSTRING* %vr12715 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12719, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F6
	%vr12722 = bitcast i8* bitcast ([108 x i8]* @Lt_08F6 to i8*) to i8*
	; arg 107
	%vr12721 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12722, i64 107 )

	; call fb_PrintString()
	; arg 1
	; arg vr12721
	%vr12725 = bitcast %FBSTRING* %vr12721 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12725, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EF
	%vr12728 = bitcast i8* bitcast ([21 x i8]* @Lt_08EF to i8*) to i8*
	; arg 20
	%vr12727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12728, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12727
	%vr12731 = bitcast %FBSTRING* %vr12727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12731, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F7
	%vr12734 = bitcast i8* bitcast ([80 x i8]* @Lt_08F7 to i8*) to i8*
	; arg 79
	%vr12733 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12734, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr12733
	%vr12737 = bitcast %FBSTRING* %vr12733 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12737, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F5
	%vr12740 = bitcast i8* bitcast ([26 x i8]* @Lt_08F5 to i8*) to i8*
	; arg 25
	%vr12739 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12740, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr12739
	%vr12743 = bitcast %FBSTRING* %vr12739 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12743, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F8
	%vr12746 = bitcast i8* bitcast ([14 x i8]* @Lt_08F8 to i8*) to i8*
	; arg 13
	%vr12745 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12746, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr12745
	%vr12749 = bitcast %FBSTRING* %vr12745 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12749, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr12752 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr12751 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12752, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr12751
	%vr12755 = bitcast %FBSTRING* %vr12751 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12755, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F9
	%vr12758 = bitcast i8* bitcast ([51 x i8]* @Lt_08F9 to i8*) to i8*
	; arg 50
	%vr12757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12758, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr12757
	%vr12761 = bitcast %FBSTRING* %vr12757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12761, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F4
	%vr12764 = bitcast i8* bitcast ([31 x i8]* @Lt_08F4 to i8*) to i8*
	; arg 30
	%vr12763 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12764, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12763
	%vr12767 = bitcast %FBSTRING* %vr12763 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12767, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12770 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12769 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12770, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12769
	%vr12773 = bitcast %FBSTRING* %vr12769 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12773, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FA
	%vr12776 = bitcast i8* bitcast ([65 x i8]* @Lt_08FA to i8*) to i8*
	; arg 64
	%vr12775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12776, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr12775
	%vr12779 = bitcast %FBSTRING* %vr12775 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12779, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12782 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12781 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12782, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12781
	%vr12785 = bitcast %FBSTRING* %vr12781 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12785, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FB
	%vr12788 = bitcast i8* bitcast ([40 x i8]* @Lt_08FB to i8*) to i8*
	; arg 39
	%vr12787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12788, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12787
	%vr12791 = bitcast %FBSTRING* %vr12787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12791, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12794 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12793 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12794, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12793
	%vr12797 = bitcast %FBSTRING* %vr12793 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12797, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FC
	%vr12800 = bitcast i8* bitcast ([38 x i8]* @Lt_08FC to i8*) to i8*
	; arg 37
	%vr12799 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12800, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12799
	%vr12803 = bitcast %FBSTRING* %vr12799 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12803, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12806 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12805 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12806, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12805
	%vr12809 = bitcast %FBSTRING* %vr12805 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12809, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FD
	%vr12812 = bitcast i8* bitcast ([19 x i8]* @Lt_08FD to i8*) to i8*
	; arg 18
	%vr12811 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12812, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr12811
	%vr12815 = bitcast %FBSTRING* %vr12811 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12815, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FE
	%vr12818 = bitcast i8* bitcast ([84 x i8]* @Lt_08FE to i8*) to i8*
	; arg 83
	%vr12817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12818, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr12817
	%vr12821 = bitcast %FBSTRING* %vr12817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12821, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FF
	%vr12824 = bitcast i8* bitcast ([84 x i8]* @Lt_08FF to i8*) to i8*
	; arg 83
	%vr12823 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12824, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr12823
	%vr12827 = bitcast %FBSTRING* %vr12823 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12827, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0900
	%vr12830 = bitcast i8* bitcast ([21 x i8]* @Lt_0900 to i8*) to i8*
	; arg 20
	%vr12829 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12830, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12829
	%vr12833 = bitcast %FBSTRING* %vr12829 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12833, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0901
	%vr12836 = bitcast i8* bitcast ([29 x i8]* @Lt_0901 to i8*) to i8*
	; arg 28
	%vr12835 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12836, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr12835
	%vr12839 = bitcast %FBSTRING* %vr12835 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12839, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0902
	%vr12842 = bitcast i8* bitcast ([31 x i8]* @Lt_0902 to i8*) to i8*
	; arg 30
	%vr12841 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12842, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12841
	%vr12845 = bitcast %FBSTRING* %vr12841 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12845, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0903
	%vr12848 = bitcast i8* bitcast ([66 x i8]* @Lt_0903 to i8*) to i8*
	; arg 65
	%vr12847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12848, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr12847
	%vr12851 = bitcast %FBSTRING* %vr12847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12851, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0904
	%vr12854 = bitcast i8* bitcast ([35 x i8]* @Lt_0904 to i8*) to i8*
	; arg 34
	%vr12853 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12854, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr12853
	%vr12857 = bitcast %FBSTRING* %vr12853 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12857, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12860 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12859 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12860, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12859
	%vr12863 = bitcast %FBSTRING* %vr12859 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12863, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0905
	%vr12866 = bitcast i8* bitcast ([22 x i8]* @Lt_0905 to i8*) to i8*
	; arg 21
	%vr12865 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12866, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12865
	%vr12869 = bitcast %FBSTRING* %vr12865 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12869, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0906
	%vr12872 = bitcast i8* bitcast ([84 x i8]* @Lt_0906 to i8*) to i8*
	; arg 83
	%vr12871 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12872, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr12871
	%vr12875 = bitcast %FBSTRING* %vr12871 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12875, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0907
	%vr12878 = bitcast i8* bitcast ([79 x i8]* @Lt_0907 to i8*) to i8*
	; arg 78
	%vr12877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12878, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr12877
	%vr12881 = bitcast %FBSTRING* %vr12877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12881, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0908
	%vr12884 = bitcast i8* bitcast ([15 x i8]* @Lt_0908 to i8*) to i8*
	; arg 14
	%vr12883 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12884, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr12883
	%vr12887 = bitcast %FBSTRING* %vr12883 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12887, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0909
	%vr12890 = bitcast i8* bitcast ([29 x i8]* @Lt_0909 to i8*) to i8*
	; arg 28
	%vr12889 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12890, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr12889
	%vr12893 = bitcast %FBSTRING* %vr12889 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12893, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090A
	%vr12896 = bitcast i8* bitcast ([31 x i8]* @Lt_090A to i8*) to i8*
	; arg 30
	%vr12895 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12896, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12895
	%vr12899 = bitcast %FBSTRING* %vr12895 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12899, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090B
	%vr12902 = bitcast i8* bitcast ([67 x i8]* @Lt_090B to i8*) to i8*
	; arg 66
	%vr12901 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12902, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr12901
	%vr12905 = bitcast %FBSTRING* %vr12901 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12905, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090C
	%vr12908 = bitcast i8* bitcast ([31 x i8]* @Lt_090C to i8*) to i8*
	; arg 30
	%vr12907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12908, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12907
	%vr12911 = bitcast %FBSTRING* %vr12907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12911, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12914 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12913 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12914, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12913
	%vr12917 = bitcast %FBSTRING* %vr12913 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12917, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090D
	%vr12920 = bitcast i8* bitcast ([14 x i8]* @Lt_090D to i8*) to i8*
	; arg 13
	%vr12919 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12920, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr12919
	%vr12923 = bitcast %FBSTRING* %vr12919 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12923, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090E
	%vr12926 = bitcast i8* bitcast ([38 x i8]* @Lt_090E to i8*) to i8*
	; arg 37
	%vr12925 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12926, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12925
	%vr12929 = bitcast %FBSTRING* %vr12925 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12929, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090F
	%vr12932 = bitcast i8* bitcast ([28 x i8]* @Lt_090F to i8*) to i8*
	; arg 27
	%vr12931 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12932, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12931
	%vr12935 = bitcast %FBSTRING* %vr12931 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12935, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0910
	%vr12938 = bitcast i8* bitcast ([28 x i8]* @Lt_0910 to i8*) to i8*
	; arg 27
	%vr12937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12938, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12937
	%vr12941 = bitcast %FBSTRING* %vr12937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12941, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0911
	%vr12944 = bitcast i8* bitcast ([38 x i8]* @Lt_0911 to i8*) to i8*
	; arg 37
	%vr12943 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12944, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12943
	%vr12947 = bitcast %FBSTRING* %vr12943 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12947, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0912
	%vr12950 = bitcast i8* bitcast ([87 x i8]* @Lt_0912 to i8*) to i8*
	; arg 86
	%vr12949 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12950, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr12949
	%vr12953 = bitcast %FBSTRING* %vr12949 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12953, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0913
	%vr12956 = bitcast i8* bitcast ([90 x i8]* @Lt_0913 to i8*) to i8*
	; arg 89
	%vr12955 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12956, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr12955
	%vr12959 = bitcast %FBSTRING* %vr12955 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12959, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr12962 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr12961 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12962, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12961
	%vr12965 = bitcast %FBSTRING* %vr12961 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12965, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0914
	%vr12968 = bitcast i8* bitcast ([12 x i8]* @Lt_0914 to i8*) to i8*
	; arg 11
	%vr12967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12968, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr12967
	%vr12971 = bitcast %FBSTRING* %vr12967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12971, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0915
	%vr12974 = bitcast i8* bitcast ([57 x i8]* @Lt_0915 to i8*) to i8*
	; arg 56
	%vr12973 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12974, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr12973
	%vr12977 = bitcast %FBSTRING* %vr12973 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12977, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0916
	%vr12980 = bitcast i8* bitcast ([57 x i8]* @Lt_0916 to i8*) to i8*
	; arg 56
	%vr12979 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12980, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr12979
	%vr12983 = bitcast %FBSTRING* %vr12979 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12983, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0917
	%vr12986 = bitcast i8* bitcast ([28 x i8]* @Lt_0917 to i8*) to i8*
	; arg 27
	%vr12985 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12986, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12985
	%vr12989 = bitcast %FBSTRING* %vr12985 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12989, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr12992 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr12991 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12992, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr12991
	%vr12995 = bitcast %FBSTRING* %vr12991 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12995, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0918
	%vr12998 = bitcast i8* bitcast ([25 x i8]* @Lt_0918 to i8*) to i8*
	; arg 24
	%vr12997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12998, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr12997
	%vr13001 = bitcast %FBSTRING* %vr12997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13001, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13004 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13003 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13004, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13003
	%vr13007 = bitcast %FBSTRING* %vr13003 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13007, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13010 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13009 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13010, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13009
	%vr13013 = bitcast %FBSTRING* %vr13009 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13013, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0919
	%vr13016 = bitcast i8* bitcast ([27 x i8]* @Lt_0919 to i8*) to i8*
	; arg 26
	%vr13015 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13016, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr13015
	%vr13019 = bitcast %FBSTRING* %vr13015 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13019, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13022 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13021 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13022, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13021
	%vr13025 = bitcast %FBSTRING* %vr13021 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13025, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091A
	%vr13028 = bitcast i8* bitcast ([33 x i8]* @Lt_091A to i8*) to i8*
	; arg 32
	%vr13027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13028, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr13027
	%vr13031 = bitcast %FBSTRING* %vr13027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13031, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091B
	%vr13034 = bitcast i8* bitcast ([24 x i8]* @Lt_091B to i8*) to i8*
	; arg 23
	%vr13033 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13034, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr13033
	%vr13037 = bitcast %FBSTRING* %vr13033 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13037, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091C
	%vr13040 = bitcast i8* bitcast ([77 x i8]* @Lt_091C to i8*) to i8*
	; arg 76
	%vr13039 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13040, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr13039
	%vr13043 = bitcast %FBSTRING* %vr13039 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13043, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13046 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13045 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13046, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13045
	%vr13049 = bitcast %FBSTRING* %vr13045 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13049, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13052 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13051 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13052, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13051
	%vr13055 = bitcast %FBSTRING* %vr13051 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13055, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091D
	%vr13058 = bitcast i8* bitcast ([27 x i8]* @Lt_091D to i8*) to i8*
	; arg 26
	%vr13057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13058, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr13057
	%vr13061 = bitcast %FBSTRING* %vr13057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13061, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13064 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13063 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13064, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13063
	%vr13067 = bitcast %FBSTRING* %vr13063 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13067, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091E
	%vr13070 = bitcast i8* bitcast ([31 x i8]* @Lt_091E to i8*) to i8*
	; arg 30
	%vr13069 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13070, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13069
	%vr13073 = bitcast %FBSTRING* %vr13069 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13073, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13076 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13075 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13076, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13075
	%vr13079 = bitcast %FBSTRING* %vr13075 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13079, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091F
	%vr13082 = bitcast i8* bitcast ([44 x i8]* @Lt_091F to i8*) to i8*
	; arg 43
	%vr13081 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13082, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13081
	%vr13085 = bitcast %FBSTRING* %vr13081 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13085, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0920
	%vr13088 = bitcast i8* bitcast ([44 x i8]* @Lt_0920 to i8*) to i8*
	; arg 43
	%vr13087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13088, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13087
	%vr13091 = bitcast %FBSTRING* %vr13087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13091, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0921
	%vr13094 = bitcast i8* bitcast ([47 x i8]* @Lt_0921 to i8*) to i8*
	; arg 46
	%vr13093 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13094, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13093
	%vr13097 = bitcast %FBSTRING* %vr13093 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13097, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D1
	%vr13100 = bitcast i8* bitcast ([2 x i8]* @Lt_08D1 to i8*) to i8*
	; arg 1
	%vr13099 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13100, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13099
	%vr13103 = bitcast %FBSTRING* %vr13099 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13103, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0922
	%vr13106 = bitcast i8* bitcast ([36 x i8]* @Lt_0922 to i8*) to i8*
	; arg 35
	%vr13105 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13106, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr13105
	%vr13109 = bitcast %FBSTRING* %vr13105 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13109, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13112 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13111 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13112, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13111
	%vr13115 = bitcast %FBSTRING* %vr13111 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13115, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13118 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13118, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13117
	%vr13121 = bitcast %FBSTRING* %vr13117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13121, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0923
	%vr13124 = bitcast i8* bitcast ([86 x i8]* @Lt_0923 to i8*) to i8*
	; arg 85
	%vr13123 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13124, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr13123
	%vr13127 = bitcast %FBSTRING* %vr13123 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13127, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0924
	%vr13130 = bitcast i8* bitcast ([26 x i8]* @Lt_0924 to i8*) to i8*
	; arg 25
	%vr13129 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13130, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr13129
	%vr13133 = bitcast %FBSTRING* %vr13129 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13133, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0925
	%vr13136 = bitcast i8* bitcast ([20 x i8]* @Lt_0925 to i8*) to i8*
	; arg 19
	%vr13135 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13136, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13135
	%vr13139 = bitcast %FBSTRING* %vr13135 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13139, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0925
	%vr13142 = bitcast i8* bitcast ([20 x i8]* @Lt_0925 to i8*) to i8*
	; arg 19
	%vr13141 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13142, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13141
	%vr13145 = bitcast %FBSTRING* %vr13141 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13145, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0926
	%vr13148 = bitcast i8* bitcast ([21 x i8]* @Lt_0926 to i8*) to i8*
	; arg 20
	%vr13147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13148, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr13147
	%vr13151 = bitcast %FBSTRING* %vr13147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13151, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13154 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13153 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13154, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13153
	%vr13157 = bitcast %FBSTRING* %vr13153 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13157, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0927
	%vr13160 = bitcast i8* bitcast ([44 x i8]* @Lt_0927 to i8*) to i8*
	; arg 43
	%vr13159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13160, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13159
	%vr13163 = bitcast %FBSTRING* %vr13159 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13163, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0928
	%vr13166 = bitcast i8* bitcast ([40 x i8]* @Lt_0928 to i8*) to i8*
	; arg 39
	%vr13165 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13166, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13165
	%vr13169 = bitcast %FBSTRING* %vr13165 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13169, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13172 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13171 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13172, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13171
	%vr13175 = bitcast %FBSTRING* %vr13171 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13175, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0929
	%vr13178 = bitcast i8* bitcast ([24 x i8]* @Lt_0929 to i8*) to i8*
	; arg 23
	%vr13177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13178, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr13177
	%vr13181 = bitcast %FBSTRING* %vr13177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13181, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0925
	%vr13184 = bitcast i8* bitcast ([20 x i8]* @Lt_0925 to i8*) to i8*
	; arg 19
	%vr13183 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13184, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13183
	%vr13187 = bitcast %FBSTRING* %vr13183 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13187, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092A
	%vr13190 = bitcast i8* bitcast ([35 x i8]* @Lt_092A to i8*) to i8*
	; arg 34
	%vr13189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13190, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr13189
	%vr13193 = bitcast %FBSTRING* %vr13189 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13193, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13196 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13196, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13195
	%vr13199 = bitcast %FBSTRING* %vr13195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13199, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092B
	%vr13202 = bitcast i8* bitcast ([25 x i8]* @Lt_092B to i8*) to i8*
	; arg 24
	%vr13201 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13202, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr13201
	%vr13205 = bitcast %FBSTRING* %vr13201 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13205, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13208 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13208, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13207
	%vr13211 = bitcast %FBSTRING* %vr13207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13211, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092C
	%vr13214 = bitcast i8* bitcast ([66 x i8]* @Lt_092C to i8*) to i8*
	; arg 65
	%vr13213 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13214, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr13213
	%vr13217 = bitcast %FBSTRING* %vr13213 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13217, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13220 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13219 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13220, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13219
	%vr13223 = bitcast %FBSTRING* %vr13219 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13223, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092D
	%vr13226 = bitcast i8* bitcast ([25 x i8]* @Lt_092D to i8*) to i8*
	; arg 24
	%vr13225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13226, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr13225
	%vr13229 = bitcast %FBSTRING* %vr13225 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13229, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092E
	%vr13232 = bitcast i8* bitcast ([30 x i8]* @Lt_092E to i8*) to i8*
	; arg 29
	%vr13231 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13232, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr13231
	%vr13235 = bitcast %FBSTRING* %vr13231 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13235, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13238 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13238, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13237
	%vr13241 = bitcast %FBSTRING* %vr13237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13241, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E5
	%vr13244 = bitcast i8* bitcast ([14 x i8]* @Lt_07E5 to i8*) to i8*
	; arg 13
	%vr13243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13244, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr13243
	%vr13247 = bitcast %FBSTRING* %vr13243 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13247, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13250 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13249 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13250, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13249
	%vr13253 = bitcast %FBSTRING* %vr13249 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13253, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13256 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13255 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13256, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13255
	%vr13259 = bitcast %FBSTRING* %vr13255 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13259, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092F
	%vr13262 = bitcast i8* bitcast ([43 x i8]* @Lt_092F to i8*) to i8*
	; arg 42
	%vr13261 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13262, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr13261
	%vr13265 = bitcast %FBSTRING* %vr13261 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13265, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13268 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13268, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13267
	%vr13271 = bitcast %FBSTRING* %vr13267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13271, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0930
	%vr13274 = bitcast i8* bitcast ([25 x i8]* @Lt_0930 to i8*) to i8*
	; arg 24
	%vr13273 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13274, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr13273
	%vr13277 = bitcast %FBSTRING* %vr13273 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13277, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13280 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13279 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13280, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13279
	%vr13283 = bitcast %FBSTRING* %vr13279 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13283, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0931
	%vr13286 = bitcast i8* bitcast ([21 x i8]* @Lt_0931 to i8*) to i8*
	; arg 20
	%vr13285 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13286, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr13285
	%vr13289 = bitcast %FBSTRING* %vr13285 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13289, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0932
	%vr13292 = bitcast i8* bitcast ([39 x i8]* @Lt_0932 to i8*) to i8*
	; arg 38
	%vr13291 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13292, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13291
	%vr13295 = bitcast %FBSTRING* %vr13291 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13295, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13298 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13298, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13297
	%vr13301 = bitcast %FBSTRING* %vr13297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13301, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0933
	%vr13304 = bitcast i8* bitcast ([22 x i8]* @Lt_0933 to i8*) to i8*
	; arg 21
	%vr13303 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13304, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13303
	%vr13307 = bitcast %FBSTRING* %vr13303 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13307, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0934
	%vr13310 = bitcast i8* bitcast ([21 x i8]* @Lt_0934 to i8*) to i8*
	; arg 20
	%vr13309 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13310, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr13309
	%vr13313 = bitcast %FBSTRING* %vr13309 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13313, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0935
	%vr13316 = bitcast i8* bitcast ([46 x i8]* @Lt_0935 to i8*) to i8*
	; arg 45
	%vr13315 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13316, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr13315
	%vr13319 = bitcast %FBSTRING* %vr13315 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13319, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0936
	%vr13322 = bitcast i8* bitcast ([66 x i8]* @Lt_0936 to i8*) to i8*
	; arg 65
	%vr13321 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13322, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr13321
	%vr13325 = bitcast %FBSTRING* %vr13321 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13325, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13328 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13328, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13327
	%vr13331 = bitcast %FBSTRING* %vr13327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13331, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0933
	%vr13334 = bitcast i8* bitcast ([22 x i8]* @Lt_0933 to i8*) to i8*
	; arg 21
	%vr13333 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13334, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13333
	%vr13337 = bitcast %FBSTRING* %vr13333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13337, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13340 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13339 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13340, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13339
	%vr13343 = bitcast %FBSTRING* %vr13339 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13343, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0937
	%vr13346 = bitcast i8* bitcast ([13 x i8]* @Lt_0937 to i8*) to i8*
	; arg 12
	%vr13345 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13346, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13345
	%vr13349 = bitcast %FBSTRING* %vr13345 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13349, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0938
	%vr13352 = bitcast i8* bitcast ([91 x i8]* @Lt_0938 to i8*) to i8*
	; arg 90
	%vr13351 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13352, i64 90 )

	; call fb_PrintString()
	; arg 1
	; arg vr13351
	%vr13355 = bitcast %FBSTRING* %vr13351 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13355, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0939
	%vr13358 = bitcast i8* bitcast ([15 x i8]* @Lt_0939 to i8*) to i8*
	; arg 14
	%vr13357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13358, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr13357
	%vr13361 = bitcast %FBSTRING* %vr13357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13361, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093A
	%vr13364 = bitcast i8* bitcast ([28 x i8]* @Lt_093A to i8*) to i8*
	; arg 27
	%vr13363 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13364, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr13363
	%vr13367 = bitcast %FBSTRING* %vr13363 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13367, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093B
	%vr13370 = bitcast i8* bitcast ([44 x i8]* @Lt_093B to i8*) to i8*
	; arg 43
	%vr13369 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13370, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13369
	%vr13373 = bitcast %FBSTRING* %vr13369 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13373, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr13376 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr13375 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13376, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13375
	%vr13379 = bitcast %FBSTRING* %vr13375 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13379, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093C
	%vr13382 = bitcast i8* bitcast ([32 x i8]* @Lt_093C to i8*) to i8*
	; arg 31
	%vr13381 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13382, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13381
	%vr13385 = bitcast %FBSTRING* %vr13381 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13385, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13388 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13388, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13387
	%vr13391 = bitcast %FBSTRING* %vr13387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13391, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093D
	%vr13394 = bitcast i8* bitcast ([29 x i8]* @Lt_093D to i8*) to i8*
	; arg 28
	%vr13393 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13394, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr13393
	%vr13397 = bitcast %FBSTRING* %vr13393 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13397, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093E
	%vr13400 = bitcast i8* bitcast ([39 x i8]* @Lt_093E to i8*) to i8*
	; arg 38
	%vr13399 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13400, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13399
	%vr13403 = bitcast %FBSTRING* %vr13399 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13403, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr13406 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr13405 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13406, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13405
	%vr13409 = bitcast %FBSTRING* %vr13405 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13409, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr13412 = bitcast i8* bitcast ([16 x i8]* @Lt_0851 to i8*) to i8*
	; arg 15
	%vr13411 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13412, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr13411
	%vr13415 = bitcast %FBSTRING* %vr13411 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13415, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13418 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13418, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13417
	%vr13421 = bitcast %FBSTRING* %vr13417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13421, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13424 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13423 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13424, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13423
	%vr13427 = bitcast %FBSTRING* %vr13423 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13427, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13430 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13429 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13430, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13429
	%vr13433 = bitcast %FBSTRING* %vr13429 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13433, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093F
	%vr13436 = bitcast i8* bitcast ([51 x i8]* @Lt_093F to i8*) to i8*
	; arg 50
	%vr13435 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13436, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr13435
	%vr13439 = bitcast %FBSTRING* %vr13435 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13439, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13442 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13441 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13442, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13441
	%vr13445 = bitcast %FBSTRING* %vr13441 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13445, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0940
	%vr13448 = bitcast i8* bitcast ([13 x i8]* @Lt_0940 to i8*) to i8*
	; arg 12
	%vr13447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13448, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13447
	%vr13451 = bitcast %FBSTRING* %vr13447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13451, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0730
	%vr13454 = bitcast i8* bitcast ([6 x i8]* @Lt_0730 to i8*) to i8*
	; arg 5
	%vr13453 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13454, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13453
	%vr13457 = bitcast %FBSTRING* %vr13453 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13457, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0941
	%vr13460 = bitcast i8* bitcast ([40 x i8]* @Lt_0941 to i8*) to i8*
	; arg 39
	%vr13459 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13460, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13459
	%vr13463 = bitcast %FBSTRING* %vr13459 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13463, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0942
	%vr13466 = bitcast i8* bitcast ([62 x i8]* @Lt_0942 to i8*) to i8*
	; arg 61
	%vr13465 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13466, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr13465
	%vr13469 = bitcast %FBSTRING* %vr13465 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13469, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0943
	%vr13472 = bitcast i8* bitcast ([47 x i8]* @Lt_0943 to i8*) to i8*
	; arg 46
	%vr13471 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13472, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13471
	%vr13475 = bitcast %FBSTRING* %vr13471 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13475, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0944
	%vr13478 = bitcast i8* bitcast ([47 x i8]* @Lt_0944 to i8*) to i8*
	; arg 46
	%vr13477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13478, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13477
	%vr13481 = bitcast %FBSTRING* %vr13477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13481, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0945
	%vr13484 = bitcast i8* bitcast ([47 x i8]* @Lt_0945 to i8*) to i8*
	; arg 46
	%vr13483 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13484, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13483
	%vr13487 = bitcast %FBSTRING* %vr13483 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13487, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr13490 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr13489 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13490, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13489
	%vr13493 = bitcast %FBSTRING* %vr13489 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13493, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0946
	%vr13496 = bitcast i8* bitcast ([85 x i8]* @Lt_0946 to i8*) to i8*
	; arg 84
	%vr13495 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13496, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr13495
	%vr13499 = bitcast %FBSTRING* %vr13495 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13499, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0947
	%vr13502 = bitcast i8* bitcast ([24 x i8]* @Lt_0947 to i8*) to i8*
	; arg 23
	%vr13501 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13502, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr13501
	%vr13505 = bitcast %FBSTRING* %vr13501 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13505, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0948
	%vr13508 = bitcast i8* bitcast ([32 x i8]* @Lt_0948 to i8*) to i8*
	; arg 31
	%vr13507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13508, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13507
	%vr13511 = bitcast %FBSTRING* %vr13507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13511, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr13514 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr13513 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13514, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13513
	%vr13517 = bitcast %FBSTRING* %vr13513 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13517, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0949
	%vr13520 = bitcast i8* bitcast ([73 x i8]* @Lt_0949 to i8*) to i8*
	; arg 72
	%vr13519 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13520, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr13519
	%vr13523 = bitcast %FBSTRING* %vr13519 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13523, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094A
	%vr13526 = bitcast i8* bitcast ([42 x i8]* @Lt_094A to i8*) to i8*
	; arg 41
	%vr13525 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13526, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr13525
	%vr13529 = bitcast %FBSTRING* %vr13525 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13529, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr13532 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr13531 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13532, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13531
	%vr13535 = bitcast %FBSTRING* %vr13531 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13535, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094B
	%vr13538 = bitcast i8* bitcast ([25 x i8]* @Lt_094B to i8*) to i8*
	; arg 24
	%vr13537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13538, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr13537
	%vr13541 = bitcast %FBSTRING* %vr13537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13541, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094C
	%vr13544 = bitcast i8* bitcast ([11 x i8]* @Lt_094C to i8*) to i8*
	; arg 10
	%vr13543 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13544, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr13543
	%vr13547 = bitcast %FBSTRING* %vr13543 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13547, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13550 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13549 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13550, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13549
	%vr13553 = bitcast %FBSTRING* %vr13549 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13553, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13556 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13555 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13556, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13555
	%vr13559 = bitcast %FBSTRING* %vr13555 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13559, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094D
	%vr13562 = bitcast i8* bitcast ([76 x i8]* @Lt_094D to i8*) to i8*
	; arg 75
	%vr13561 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13562, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr13561
	%vr13565 = bitcast %FBSTRING* %vr13561 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13565, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13568 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13568, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13567
	%vr13571 = bitcast %FBSTRING* %vr13567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13571, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094E
	%vr13574 = bitcast i8* bitcast ([37 x i8]* @Lt_094E to i8*) to i8*
	; arg 36
	%vr13573 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13574, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr13573
	%vr13577 = bitcast %FBSTRING* %vr13573 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13577, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13580 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13579 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13580, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13579
	%vr13583 = bitcast %FBSTRING* %vr13579 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13583, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091E
	%vr13586 = bitcast i8* bitcast ([31 x i8]* @Lt_091E to i8*) to i8*
	; arg 30
	%vr13585 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13586, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13585
	%vr13589 = bitcast %FBSTRING* %vr13585 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13589, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094F
	%vr13592 = bitcast i8* bitcast ([16 x i8]* @Lt_094F to i8*) to i8*
	; arg 15
	%vr13591 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13592, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr13591
	%vr13595 = bitcast %FBSTRING* %vr13591 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13595, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091F
	%vr13598 = bitcast i8* bitcast ([44 x i8]* @Lt_091F to i8*) to i8*
	; arg 43
	%vr13597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13598, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13597
	%vr13601 = bitcast %FBSTRING* %vr13597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13601, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0920
	%vr13604 = bitcast i8* bitcast ([44 x i8]* @Lt_0920 to i8*) to i8*
	; arg 43
	%vr13603 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13604, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13603
	%vr13607 = bitcast %FBSTRING* %vr13603 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13607, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0921
	%vr13610 = bitcast i8* bitcast ([47 x i8]* @Lt_0921 to i8*) to i8*
	; arg 46
	%vr13609 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13610, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13609
	%vr13613 = bitcast %FBSTRING* %vr13609 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13613, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0950
	%vr13616 = bitcast i8* bitcast ([3 x i8]* @Lt_0950 to i8*) to i8*
	; arg 2
	%vr13615 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13616, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr13615
	%vr13619 = bitcast %FBSTRING* %vr13615 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13619, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0951
	%vr13622 = bitcast i8* bitcast ([16 x i8]* @Lt_0951 to i8*) to i8*
	; arg 15
	%vr13621 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13622, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr13621
	%vr13625 = bitcast %FBSTRING* %vr13621 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13625, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0922
	%vr13628 = bitcast i8* bitcast ([36 x i8]* @Lt_0922 to i8*) to i8*
	; arg 35
	%vr13627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13628, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr13627
	%vr13631 = bitcast %FBSTRING* %vr13627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13631, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13634 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13633 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13634, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13633
	%vr13637 = bitcast %FBSTRING* %vr13633 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13637, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0933
	%vr13640 = bitcast i8* bitcast ([22 x i8]* @Lt_0933 to i8*) to i8*
	; arg 21
	%vr13639 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13640, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13639
	%vr13643 = bitcast %FBSTRING* %vr13639 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13643, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13646 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13645 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13646, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13645
	%vr13649 = bitcast %FBSTRING* %vr13645 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13649, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0927
	%vr13652 = bitcast i8* bitcast ([44 x i8]* @Lt_0927 to i8*) to i8*
	; arg 43
	%vr13651 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13652, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13651
	%vr13655 = bitcast %FBSTRING* %vr13651 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13655, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0952
	%vr13658 = bitcast i8* bitcast ([31 x i8]* @Lt_0952 to i8*) to i8*
	; arg 30
	%vr13657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13658, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13657
	%vr13661 = bitcast %FBSTRING* %vr13657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13661, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0953
	%vr13664 = bitcast i8* bitcast ([64 x i8]* @Lt_0953 to i8*) to i8*
	; arg 63
	%vr13663 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13664, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr13663
	%vr13667 = bitcast %FBSTRING* %vr13663 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13667, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0954
	%vr13670 = bitcast i8* bitcast ([78 x i8]* @Lt_0954 to i8*) to i8*
	; arg 77
	%vr13669 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13670, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr13669
	%vr13673 = bitcast %FBSTRING* %vr13669 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13673, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0955
	%vr13676 = bitcast i8* bitcast ([82 x i8]* @Lt_0955 to i8*) to i8*
	; arg 81
	%vr13675 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13676, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr13675
	%vr13679 = bitcast %FBSTRING* %vr13675 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13679, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0956
	%vr13682 = bitcast i8* bitcast ([79 x i8]* @Lt_0956 to i8*) to i8*
	; arg 78
	%vr13681 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13682, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr13681
	%vr13685 = bitcast %FBSTRING* %vr13681 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13685, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0957
	%vr13688 = bitcast i8* bitcast ([77 x i8]* @Lt_0957 to i8*) to i8*
	; arg 76
	%vr13687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13688, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr13687
	%vr13691 = bitcast %FBSTRING* %vr13687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13691, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13694 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13693 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13694, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13693
	%vr13697 = bitcast %FBSTRING* %vr13693 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13697, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0958
	%vr13700 = bitcast i8* bitcast ([29 x i8]* @Lt_0958 to i8*) to i8*
	; arg 28
	%vr13699 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13700, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr13699
	%vr13703 = bitcast %FBSTRING* %vr13699 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13703, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13706 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13705 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13706, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13705
	%vr13709 = bitcast %FBSTRING* %vr13705 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13709, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0959
	%vr13712 = bitcast i8* bitcast ([42 x i8]* @Lt_0959 to i8*) to i8*
	; arg 41
	%vr13711 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13712, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr13711
	%vr13715 = bitcast %FBSTRING* %vr13711 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13715, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13718 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13718, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13717
	%vr13721 = bitcast %FBSTRING* %vr13717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13721, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13724 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13723 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13724, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13723
	%vr13727 = bitcast %FBSTRING* %vr13723 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13727, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095A
	%vr13730 = bitcast i8* bitcast ([48 x i8]* @Lt_095A to i8*) to i8*
	; arg 47
	%vr13729 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13730, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr13729
	%vr13733 = bitcast %FBSTRING* %vr13729 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13733, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13736 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13735 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13736, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13735
	%vr13739 = bitcast %FBSTRING* %vr13735 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13739, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0930
	%vr13742 = bitcast i8* bitcast ([25 x i8]* @Lt_0930 to i8*) to i8*
	; arg 24
	%vr13741 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13742, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr13741
	%vr13745 = bitcast %FBSTRING* %vr13741 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13745, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr13748 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr13747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13748, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13747
	%vr13751 = bitcast %FBSTRING* %vr13747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13751, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095B
	%vr13754 = bitcast i8* bitcast ([29 x i8]* @Lt_095B to i8*) to i8*
	; arg 28
	%vr13753 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13754, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr13753
	%vr13757 = bitcast %FBSTRING* %vr13753 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13757, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095C
	%vr13760 = bitcast i8* bitcast ([30 x i8]* @Lt_095C to i8*) to i8*
	; arg 29
	%vr13759 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13760, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr13759
	%vr13763 = bitcast %FBSTRING* %vr13759 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13763, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13766 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13765 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13766, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13765
	%vr13769 = bitcast %FBSTRING* %vr13765 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13769, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095D
	%vr13772 = bitcast i8* bitcast ([39 x i8]* @Lt_095D to i8*) to i8*
	; arg 38
	%vr13771 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13772, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13771
	%vr13775 = bitcast %FBSTRING* %vr13771 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13775, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095E
	%vr13778 = bitcast i8* bitcast ([30 x i8]* @Lt_095E to i8*) to i8*
	; arg 29
	%vr13777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13778, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr13777
	%vr13781 = bitcast %FBSTRING* %vr13777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13781, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13784 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13783 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13784, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13783
	%vr13787 = bitcast %FBSTRING* %vr13783 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13787, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr13790 = bitcast i8* bitcast ([16 x i8]* @Lt_0851 to i8*) to i8*
	; arg 15
	%vr13789 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13790, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr13789
	%vr13793 = bitcast %FBSTRING* %vr13789 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13793, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13796 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13795 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13796, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13795
	%vr13799 = bitcast %FBSTRING* %vr13795 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13799, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13802 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13801 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13802, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13801
	%vr13805 = bitcast %FBSTRING* %vr13801 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13805, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095F
	%vr13808 = bitcast i8* bitcast ([56 x i8]* @Lt_095F to i8*) to i8*
	; arg 55
	%vr13807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13808, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr13807
	%vr13811 = bitcast %FBSTRING* %vr13807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13811, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13814 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13813 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13814, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13813
	%vr13817 = bitcast %FBSTRING* %vr13813 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13817, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0940
	%vr13820 = bitcast i8* bitcast ([13 x i8]* @Lt_0940 to i8*) to i8*
	; arg 12
	%vr13819 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13820, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13819
	%vr13823 = bitcast %FBSTRING* %vr13819 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13823, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0941
	%vr13826 = bitcast i8* bitcast ([40 x i8]* @Lt_0941 to i8*) to i8*
	; arg 39
	%vr13825 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13826, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13825
	%vr13829 = bitcast %FBSTRING* %vr13825 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13829, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0960
	%vr13832 = bitcast i8* bitcast ([67 x i8]* @Lt_0960 to i8*) to i8*
	; arg 66
	%vr13831 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13832, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr13831
	%vr13835 = bitcast %FBSTRING* %vr13831 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13835, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0961
	%vr13838 = bitcast i8* bitcast ([52 x i8]* @Lt_0961 to i8*) to i8*
	; arg 51
	%vr13837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13838, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr13837
	%vr13841 = bitcast %FBSTRING* %vr13837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13841, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0962
	%vr13844 = bitcast i8* bitcast ([52 x i8]* @Lt_0962 to i8*) to i8*
	; arg 51
	%vr13843 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13844, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr13843
	%vr13847 = bitcast %FBSTRING* %vr13843 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13847, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0963
	%vr13850 = bitcast i8* bitcast ([52 x i8]* @Lt_0963 to i8*) to i8*
	; arg 51
	%vr13849 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13850, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr13849
	%vr13853 = bitcast %FBSTRING* %vr13849 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13853, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13856 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13855 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13856, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13855
	%vr13859 = bitcast %FBSTRING* %vr13855 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13859, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13862 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13861 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13862, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13861
	%vr13865 = bitcast %FBSTRING* %vr13861 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13865, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0964
	%vr13868 = bitcast i8* bitcast ([41 x i8]* @Lt_0964 to i8*) to i8*
	; arg 40
	%vr13867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13868, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr13867
	%vr13871 = bitcast %FBSTRING* %vr13867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13871, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13874 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13873 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13874, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13873
	%vr13877 = bitcast %FBSTRING* %vr13873 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13877, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0940
	%vr13880 = bitcast i8* bitcast ([13 x i8]* @Lt_0940 to i8*) to i8*
	; arg 12
	%vr13879 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13880, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13879
	%vr13883 = bitcast %FBSTRING* %vr13879 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13883, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0965
	%vr13886 = bitcast i8* bitcast ([17 x i8]* @Lt_0965 to i8*) to i8*
	; arg 16
	%vr13885 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13886, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr13885
	%vr13889 = bitcast %FBSTRING* %vr13885 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13889, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0966
	%vr13892 = bitcast i8* bitcast ([33 x i8]* @Lt_0966 to i8*) to i8*
	; arg 32
	%vr13891 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13892, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr13891
	%vr13895 = bitcast %FBSTRING* %vr13891 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13895, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr13898 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr13897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13898, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13897
	%vr13901 = bitcast %FBSTRING* %vr13897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13901, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0967
	%vr13904 = bitcast i8* bitcast ([47 x i8]* @Lt_0967 to i8*) to i8*
	; arg 46
	%vr13903 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13904, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr13903
	%vr13907 = bitcast %FBSTRING* %vr13903 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13907, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0968
	%vr13910 = bitcast i8* bitcast ([35 x i8]* @Lt_0968 to i8*) to i8*
	; arg 34
	%vr13909 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13910, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr13909
	%vr13913 = bitcast %FBSTRING* %vr13909 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13913, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0969
	%vr13916 = bitcast i8* bitcast ([37 x i8]* @Lt_0969 to i8*) to i8*
	; arg 36
	%vr13915 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13916, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr13915
	%vr13919 = bitcast %FBSTRING* %vr13915 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13919, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096A
	%vr13922 = bitcast i8* bitcast ([77 x i8]* @Lt_096A to i8*) to i8*
	; arg 76
	%vr13921 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13922, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr13921
	%vr13925 = bitcast %FBSTRING* %vr13921 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13925, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr13928 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr13927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13928, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13927
	%vr13931 = bitcast %FBSTRING* %vr13927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13931, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096B
	%vr13934 = bitcast i8* bitcast ([13 x i8]* @Lt_096B to i8*) to i8*
	; arg 12
	%vr13933 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13934, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13933
	%vr13937 = bitcast %FBSTRING* %vr13933 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13937, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr13940 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr13939 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13940, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13939
	%vr13943 = bitcast %FBSTRING* %vr13939 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13943, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096C
	%vr13946 = bitcast i8* bitcast ([38 x i8]* @Lt_096C to i8*) to i8*
	; arg 37
	%vr13945 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13946, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr13945
	%vr13949 = bitcast %FBSTRING* %vr13945 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13949, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr13952 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr13951 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13952, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13951
	%vr13955 = bitcast %FBSTRING* %vr13951 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13955, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13958 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13958, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13957
	%vr13961 = bitcast %FBSTRING* %vr13957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13961, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096D
	%vr13964 = bitcast i8* bitcast ([42 x i8]* @Lt_096D to i8*) to i8*
	; arg 41
	%vr13963 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13964, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr13963
	%vr13967 = bitcast %FBSTRING* %vr13963 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13967, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr13970 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr13969 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13970, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13969
	%vr13973 = bitcast %FBSTRING* %vr13969 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13973, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0940
	%vr13976 = bitcast i8* bitcast ([13 x i8]* @Lt_0940 to i8*) to i8*
	; arg 12
	%vr13975 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13976, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr13975
	%vr13979 = bitcast %FBSTRING* %vr13975 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13979, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096E
	%vr13982 = bitcast i8* bitcast ([18 x i8]* @Lt_096E to i8*) to i8*
	; arg 17
	%vr13981 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13982, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr13981
	%vr13985 = bitcast %FBSTRING* %vr13981 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13985, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096F
	%vr13988 = bitcast i8* bitcast ([32 x i8]* @Lt_096F to i8*) to i8*
	; arg 31
	%vr13987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13988, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13987
	%vr13991 = bitcast %FBSTRING* %vr13987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13991, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr13994 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr13993 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13994, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13993
	%vr13997 = bitcast %FBSTRING* %vr13993 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13997, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0970
	%vr14000 = bitcast i8* bitcast ([45 x i8]* @Lt_0970 to i8*) to i8*
	; arg 44
	%vr13999 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14000, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr13999
	%vr14003 = bitcast %FBSTRING* %vr13999 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14003, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0971
	%vr14006 = bitcast i8* bitcast ([74 x i8]* @Lt_0971 to i8*) to i8*
	; arg 73
	%vr14005 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14006, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr14005
	%vr14009 = bitcast %FBSTRING* %vr14005 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14009, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0972
	%vr14012 = bitcast i8* bitcast ([35 x i8]* @Lt_0972 to i8*) to i8*
	; arg 34
	%vr14011 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14012, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr14011
	%vr14015 = bitcast %FBSTRING* %vr14011 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14015, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0973
	%vr14018 = bitcast i8* bitcast ([47 x i8]* @Lt_0973 to i8*) to i8*
	; arg 46
	%vr14017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14018, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr14017
	%vr14021 = bitcast %FBSTRING* %vr14017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14021, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14024 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14023 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14024, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14023
	%vr14027 = bitcast %FBSTRING* %vr14023 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14027, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0974
	%vr14030 = bitcast i8* bitcast ([53 x i8]* @Lt_0974 to i8*) to i8*
	; arg 52
	%vr14029 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14030, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr14029
	%vr14033 = bitcast %FBSTRING* %vr14029 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14033, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0975
	%vr14036 = bitcast i8* bitcast ([20 x i8]* @Lt_0975 to i8*) to i8*
	; arg 19
	%vr14035 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14036, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14035
	%vr14039 = bitcast %FBSTRING* %vr14035 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14039, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14042 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14041 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14042, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14041
	%vr14045 = bitcast %FBSTRING* %vr14041 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14045, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14048 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14048, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14047
	%vr14051 = bitcast %FBSTRING* %vr14047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14051, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0976
	%vr14054 = bitcast i8* bitcast ([59 x i8]* @Lt_0976 to i8*) to i8*
	; arg 58
	%vr14053 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14054, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr14053
	%vr14057 = bitcast %FBSTRING* %vr14053 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14057, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14060 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14059 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14060, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14059
	%vr14063 = bitcast %FBSTRING* %vr14059 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14063, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0977
	%vr14066 = bitcast i8* bitcast ([21 x i8]* @Lt_0977 to i8*) to i8*
	; arg 20
	%vr14065 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14066, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14065
	%vr14069 = bitcast %FBSTRING* %vr14065 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14069, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14072 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14071 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14072, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14071
	%vr14075 = bitcast %FBSTRING* %vr14071 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14075, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0978
	%vr14078 = bitcast i8* bitcast ([23 x i8]* @Lt_0978 to i8*) to i8*
	; arg 22
	%vr14077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14078, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14077
	%vr14081 = bitcast %FBSTRING* %vr14077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14081, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A0
	%vr14084 = bitcast i8* bitcast ([10 x i8]* @Lt_07A0 to i8*) to i8*
	; arg 9
	%vr14083 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14084, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr14083
	%vr14087 = bitcast %FBSTRING* %vr14083 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14087, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0979
	%vr14090 = bitcast i8* bitcast ([59 x i8]* @Lt_0979 to i8*) to i8*
	; arg 58
	%vr14089 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14090, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr14089
	%vr14093 = bitcast %FBSTRING* %vr14089 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14093, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097A
	%vr14096 = bitcast i8* bitcast ([41 x i8]* @Lt_097A to i8*) to i8*
	; arg 40
	%vr14095 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14096, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr14095
	%vr14099 = bitcast %FBSTRING* %vr14095 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14099, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097B
	%vr14102 = bitcast i8* bitcast ([12 x i8]* @Lt_097B to i8*) to i8*
	; arg 11
	%vr14101 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14102, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr14101
	%vr14105 = bitcast %FBSTRING* %vr14101 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14105, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr14108 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr14107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14108, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14107
	%vr14111 = bitcast %FBSTRING* %vr14107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14111, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097C
	%vr14114 = bitcast i8* bitcast ([20 x i8]* @Lt_097C to i8*) to i8*
	; arg 19
	%vr14113 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14114, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14113
	%vr14117 = bitcast %FBSTRING* %vr14113 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14117, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097D
	%vr14120 = bitcast i8* bitcast ([30 x i8]* @Lt_097D to i8*) to i8*
	; arg 29
	%vr14119 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14120, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14119
	%vr14123 = bitcast %FBSTRING* %vr14119 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14123, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14126 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14126, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14125
	%vr14129 = bitcast %FBSTRING* %vr14125 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14129, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097E
	%vr14132 = bitcast i8* bitcast ([38 x i8]* @Lt_097E to i8*) to i8*
	; arg 37
	%vr14131 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14132, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr14131
	%vr14135 = bitcast %FBSTRING* %vr14131 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14135, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097F
	%vr14138 = bitcast i8* bitcast ([51 x i8]* @Lt_097F to i8*) to i8*
	; arg 50
	%vr14137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14138, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr14137
	%vr14141 = bitcast %FBSTRING* %vr14137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14141, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0980
	%vr14144 = bitcast i8* bitcast ([37 x i8]* @Lt_0980 to i8*) to i8*
	; arg 36
	%vr14143 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14144, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr14143
	%vr14147 = bitcast %FBSTRING* %vr14143 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14147, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0981
	%vr14150 = bitcast i8* bitcast ([41 x i8]* @Lt_0981 to i8*) to i8*
	; arg 40
	%vr14149 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14150, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr14149
	%vr14153 = bitcast %FBSTRING* %vr14149 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14153, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14156 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14155 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14156, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14155
	%vr14159 = bitcast %FBSTRING* %vr14155 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14159, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0982
	%vr14162 = bitcast i8* bitcast ([35 x i8]* @Lt_0982 to i8*) to i8*
	; arg 34
	%vr14161 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14162, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr14161
	%vr14165 = bitcast %FBSTRING* %vr14161 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14165, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14168 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14168, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14167
	%vr14171 = bitcast %FBSTRING* %vr14167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14171, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14174 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14173 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14174, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14173
	%vr14177 = bitcast %FBSTRING* %vr14173 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14177, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0983
	%vr14180 = bitcast i8* bitcast ([43 x i8]* @Lt_0983 to i8*) to i8*
	; arg 42
	%vr14179 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14180, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr14179
	%vr14183 = bitcast %FBSTRING* %vr14179 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14183, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14186 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14185 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14186, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14185
	%vr14189 = bitcast %FBSTRING* %vr14185 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14189, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr14192 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr14191 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14192, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14191
	%vr14195 = bitcast %FBSTRING* %vr14191 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14195, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0730
	%vr14198 = bitcast i8* bitcast ([6 x i8]* @Lt_0730 to i8*) to i8*
	; arg 5
	%vr14197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14198, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14197
	%vr14201 = bitcast %FBSTRING* %vr14197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14201, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0984
	%vr14204 = bitcast i8* bitcast ([42 x i8]* @Lt_0984 to i8*) to i8*
	; arg 41
	%vr14203 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14204, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr14203
	%vr14207 = bitcast %FBSTRING* %vr14203 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14207, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0985
	%vr14210 = bitcast i8* bitcast ([58 x i8]* @Lt_0985 to i8*) to i8*
	; arg 57
	%vr14209 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14210, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr14209
	%vr14213 = bitcast %FBSTRING* %vr14209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14213, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0986
	%vr14216 = bitcast i8* bitcast ([43 x i8]* @Lt_0986 to i8*) to i8*
	; arg 42
	%vr14215 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14216, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr14215
	%vr14219 = bitcast %FBSTRING* %vr14215 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14219, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0987
	%vr14222 = bitcast i8* bitcast ([43 x i8]* @Lt_0987 to i8*) to i8*
	; arg 42
	%vr14221 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14222, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr14221
	%vr14225 = bitcast %FBSTRING* %vr14221 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14225, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0988
	%vr14228 = bitcast i8* bitcast ([43 x i8]* @Lt_0988 to i8*) to i8*
	; arg 42
	%vr14227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14228, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr14227
	%vr14231 = bitcast %FBSTRING* %vr14227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14231, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr14234 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr14233 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14234, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14233
	%vr14237 = bitcast %FBSTRING* %vr14233 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14237, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0946
	%vr14240 = bitcast i8* bitcast ([85 x i8]* @Lt_0946 to i8*) to i8*
	; arg 84
	%vr14239 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14240, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr14239
	%vr14243 = bitcast %FBSTRING* %vr14239 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14243, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0947
	%vr14246 = bitcast i8* bitcast ([24 x i8]* @Lt_0947 to i8*) to i8*
	; arg 23
	%vr14245 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14246, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14245
	%vr14249 = bitcast %FBSTRING* %vr14245 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14249, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0948
	%vr14252 = bitcast i8* bitcast ([32 x i8]* @Lt_0948 to i8*) to i8*
	; arg 31
	%vr14251 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14252, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr14251
	%vr14255 = bitcast %FBSTRING* %vr14251 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14255, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14258 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14258, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14257
	%vr14261 = bitcast %FBSTRING* %vr14257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14261, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0949
	%vr14264 = bitcast i8* bitcast ([73 x i8]* @Lt_0949 to i8*) to i8*
	; arg 72
	%vr14263 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14264, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr14263
	%vr14267 = bitcast %FBSTRING* %vr14263 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14267, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0989
	%vr14270 = bitcast i8* bitcast ([40 x i8]* @Lt_0989 to i8*) to i8*
	; arg 39
	%vr14269 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14270, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14269
	%vr14273 = bitcast %FBSTRING* %vr14269 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14273, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14276 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14275 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14276, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14275
	%vr14279 = bitcast %FBSTRING* %vr14275 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14279, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094B
	%vr14282 = bitcast i8* bitcast ([25 x i8]* @Lt_094B to i8*) to i8*
	; arg 24
	%vr14281 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14282, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr14281
	%vr14285 = bitcast %FBSTRING* %vr14281 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14285, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094C
	%vr14288 = bitcast i8* bitcast ([11 x i8]* @Lt_094C to i8*) to i8*
	; arg 10
	%vr14287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14288, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr14287
	%vr14291 = bitcast %FBSTRING* %vr14287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14291, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14294 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14293 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14294, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14293
	%vr14297 = bitcast %FBSTRING* %vr14293 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14297, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14300 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14299 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14300, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14299
	%vr14303 = bitcast %FBSTRING* %vr14299 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14303, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098A
	%vr14306 = bitcast i8* bitcast ([57 x i8]* @Lt_098A to i8*) to i8*
	; arg 56
	%vr14305 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14306, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr14305
	%vr14309 = bitcast %FBSTRING* %vr14305 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14309, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098B
	%vr14312 = bitcast i8* bitcast ([76 x i8]* @Lt_098B to i8*) to i8*
	; arg 75
	%vr14311 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14312, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr14311
	%vr14315 = bitcast %FBSTRING* %vr14311 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14315, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098C
	%vr14318 = bitcast i8* bitcast ([56 x i8]* @Lt_098C to i8*) to i8*
	; arg 55
	%vr14317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14318, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr14317
	%vr14321 = bitcast %FBSTRING* %vr14317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14321, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14324 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14323 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14324, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14323
	%vr14327 = bitcast %FBSTRING* %vr14323 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14327, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14330 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14329 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14330, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14329
	%vr14333 = bitcast %FBSTRING* %vr14329 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14333, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098D
	%vr14336 = bitcast i8* bitcast ([60 x i8]* @Lt_098D to i8*) to i8*
	; arg 59
	%vr14335 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14336, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr14335
	%vr14339 = bitcast %FBSTRING* %vr14335 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14339, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14342 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14341 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14342, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14341
	%vr14345 = bitcast %FBSTRING* %vr14341 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14345, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096E
	%vr14348 = bitcast i8* bitcast ([18 x i8]* @Lt_096E to i8*) to i8*
	; arg 17
	%vr14347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14348, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr14347
	%vr14351 = bitcast %FBSTRING* %vr14347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14351, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098E
	%vr14354 = bitcast i8* bitcast ([21 x i8]* @Lt_098E to i8*) to i8*
	; arg 20
	%vr14353 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14354, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14353
	%vr14357 = bitcast %FBSTRING* %vr14353 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14357, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098F
	%vr14360 = bitcast i8* bitcast ([32 x i8]* @Lt_098F to i8*) to i8*
	; arg 31
	%vr14359 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14360, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr14359
	%vr14363 = bitcast %FBSTRING* %vr14359 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14363, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14366 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14365 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14366, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14365
	%vr14369 = bitcast %FBSTRING* %vr14365 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14369, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0990
	%vr14372 = bitcast i8* bitcast ([44 x i8]* @Lt_0990 to i8*) to i8*
	; arg 43
	%vr14371 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14372, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr14371
	%vr14375 = bitcast %FBSTRING* %vr14371 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14375, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0991
	%vr14378 = bitcast i8* bitcast ([33 x i8]* @Lt_0991 to i8*) to i8*
	; arg 32
	%vr14377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14378, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14377
	%vr14381 = bitcast %FBSTRING* %vr14377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14381, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0992
	%vr14384 = bitcast i8* bitcast ([39 x i8]* @Lt_0992 to i8*) to i8*
	; arg 38
	%vr14383 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14384, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr14383
	%vr14387 = bitcast %FBSTRING* %vr14383 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14387, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0993
	%vr14390 = bitcast i8* bitcast ([26 x i8]* @Lt_0993 to i8*) to i8*
	; arg 25
	%vr14389 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14390, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14389
	%vr14393 = bitcast %FBSTRING* %vr14389 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14393, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0994
	%vr14396 = bitcast i8* bitcast ([21 x i8]* @Lt_0994 to i8*) to i8*
	; arg 20
	%vr14395 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14396, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14395
	%vr14399 = bitcast %FBSTRING* %vr14395 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14399, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14402 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14401 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14402, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14401
	%vr14405 = bitcast %FBSTRING* %vr14401 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14405, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0995
	%vr14408 = bitcast i8* bitcast ([45 x i8]* @Lt_0995 to i8*) to i8*
	; arg 44
	%vr14407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14408, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr14407
	%vr14411 = bitcast %FBSTRING* %vr14407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14411, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14414 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14413 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14414, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14413
	%vr14417 = bitcast %FBSTRING* %vr14413 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14417, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14420 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14419 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14420, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14419
	%vr14423 = bitcast %FBSTRING* %vr14419 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14423, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0996
	%vr14426 = bitcast i8* bitcast ([56 x i8]* @Lt_0996 to i8*) to i8*
	; arg 55
	%vr14425 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14426, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr14425
	%vr14429 = bitcast %FBSTRING* %vr14425 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14429, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14432 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14431 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14432, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14431
	%vr14435 = bitcast %FBSTRING* %vr14431 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14435, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0997
	%vr14438 = bitcast i8* bitcast ([17 x i8]* @Lt_0997 to i8*) to i8*
	; arg 16
	%vr14437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14438, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr14437
	%vr14441 = bitcast %FBSTRING* %vr14437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14441, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0977
	%vr14444 = bitcast i8* bitcast ([21 x i8]* @Lt_0977 to i8*) to i8*
	; arg 20
	%vr14443 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14444, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14443
	%vr14447 = bitcast %FBSTRING* %vr14443 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14447, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0998
	%vr14450 = bitcast i8* bitcast ([20 x i8]* @Lt_0998 to i8*) to i8*
	; arg 19
	%vr14449 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14450, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14449
	%vr14453 = bitcast %FBSTRING* %vr14449 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14453, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0966
	%vr14456 = bitcast i8* bitcast ([33 x i8]* @Lt_0966 to i8*) to i8*
	; arg 32
	%vr14455 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14456, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14455
	%vr14459 = bitcast %FBSTRING* %vr14455 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14459, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14462 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14461 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14462, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14461
	%vr14465 = bitcast %FBSTRING* %vr14461 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14465, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0999
	%vr14468 = bitcast i8* bitcast ([47 x i8]* @Lt_0999 to i8*) to i8*
	; arg 46
	%vr14467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14468, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr14467
	%vr14471 = bitcast %FBSTRING* %vr14467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14471, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099A
	%vr14474 = bitcast i8* bitcast ([53 x i8]* @Lt_099A to i8*) to i8*
	; arg 52
	%vr14473 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14474, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr14473
	%vr14477 = bitcast %FBSTRING* %vr14473 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14477, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099B
	%vr14480 = bitcast i8* bitcast ([36 x i8]* @Lt_099B to i8*) to i8*
	; arg 35
	%vr14479 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14480, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr14479
	%vr14483 = bitcast %FBSTRING* %vr14479 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14483, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099C
	%vr14486 = bitcast i8* bitcast ([24 x i8]* @Lt_099C to i8*) to i8*
	; arg 23
	%vr14485 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14486, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14485
	%vr14489 = bitcast %FBSTRING* %vr14485 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14489, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14492 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14491 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14492, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14491
	%vr14495 = bitcast %FBSTRING* %vr14491 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14495, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099D
	%vr14498 = bitcast i8* bitcast ([31 x i8]* @Lt_099D to i8*) to i8*
	; arg 30
	%vr14497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14498, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr14497
	%vr14501 = bitcast %FBSTRING* %vr14497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14501, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14504 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14503 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14504, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14503
	%vr14507 = bitcast %FBSTRING* %vr14503 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14507, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14510 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14509 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14510, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14509
	%vr14513 = bitcast %FBSTRING* %vr14509 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14513, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099E
	%vr14516 = bitcast i8* bitcast ([63 x i8]* @Lt_099E to i8*) to i8*
	; arg 62
	%vr14515 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14516, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr14515
	%vr14519 = bitcast %FBSTRING* %vr14515 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14519, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14522 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14521 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14522, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14521
	%vr14525 = bitcast %FBSTRING* %vr14521 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14525, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099F
	%vr14528 = bitcast i8* bitcast ([21 x i8]* @Lt_099F to i8*) to i8*
	; arg 20
	%vr14527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14528, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14527
	%vr14531 = bitcast %FBSTRING* %vr14527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14531, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A0
	%vr14534 = bitcast i8* bitcast ([42 x i8]* @Lt_09A0 to i8*) to i8*
	; arg 41
	%vr14533 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14534, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr14533
	%vr14537 = bitcast %FBSTRING* %vr14533 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14537, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A1
	%vr14540 = bitcast i8* bitcast ([40 x i8]* @Lt_09A1 to i8*) to i8*
	; arg 39
	%vr14539 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14540, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14539
	%vr14543 = bitcast %FBSTRING* %vr14539 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14543, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A2
	%vr14546 = bitcast i8* bitcast ([82 x i8]* @Lt_09A2 to i8*) to i8*
	; arg 81
	%vr14545 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14546, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr14545
	%vr14549 = bitcast %FBSTRING* %vr14545 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14549, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A3
	%vr14552 = bitcast i8* bitcast ([19 x i8]* @Lt_09A3 to i8*) to i8*
	; arg 18
	%vr14551 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14552, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr14551
	%vr14555 = bitcast %FBSTRING* %vr14551 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14555, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A4
	%vr14558 = bitcast i8* bitcast ([48 x i8]* @Lt_09A4 to i8*) to i8*
	; arg 47
	%vr14557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14558, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr14557
	%vr14561 = bitcast %FBSTRING* %vr14557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14561, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr14564 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr14563 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14564, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14563
	%vr14567 = bitcast %FBSTRING* %vr14563 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14567, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14570 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14569 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14570, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14569
	%vr14573 = bitcast %FBSTRING* %vr14569 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14573, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A5
	%vr14576 = bitcast i8* bitcast ([84 x i8]* @Lt_09A5 to i8*) to i8*
	; arg 83
	%vr14575 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14576, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr14575
	%vr14579 = bitcast %FBSTRING* %vr14575 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14579, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr14582 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr14581 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14582, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14581
	%vr14585 = bitcast %FBSTRING* %vr14581 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14585, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A6
	%vr14588 = bitcast i8* bitcast ([23 x i8]* @Lt_09A6 to i8*) to i8*
	; arg 22
	%vr14587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14588, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14587
	%vr14591 = bitcast %FBSTRING* %vr14587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14591, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr14594 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr14593 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14594, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14593
	%vr14597 = bitcast %FBSTRING* %vr14593 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14597, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A7
	%vr14600 = bitcast i8* bitcast ([26 x i8]* @Lt_09A7 to i8*) to i8*
	; arg 25
	%vr14599 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14600, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14599
	%vr14603 = bitcast %FBSTRING* %vr14599 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14603, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A8
	%vr14606 = bitcast i8* bitcast ([45 x i8]* @Lt_09A8 to i8*) to i8*
	; arg 44
	%vr14605 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14606, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr14605
	%vr14609 = bitcast %FBSTRING* %vr14605 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14609, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14612 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14611 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14612, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14611
	%vr14615 = bitcast %FBSTRING* %vr14611 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14615, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A9
	%vr14618 = bitcast i8* bitcast ([28 x i8]* @Lt_09A9 to i8*) to i8*
	; arg 27
	%vr14617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14618, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14617
	%vr14621 = bitcast %FBSTRING* %vr14617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14621, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AA
	%vr14624 = bitcast i8* bitcast ([28 x i8]* @Lt_09AA to i8*) to i8*
	; arg 27
	%vr14623 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14624, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14623
	%vr14627 = bitcast %FBSTRING* %vr14623 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14627, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AB
	%vr14630 = bitcast i8* bitcast ([28 x i8]* @Lt_09AB to i8*) to i8*
	; arg 27
	%vr14629 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14630, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14629
	%vr14633 = bitcast %FBSTRING* %vr14629 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14633, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AC
	%vr14636 = bitcast i8* bitcast ([28 x i8]* @Lt_09AC to i8*) to i8*
	; arg 27
	%vr14635 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14636, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14635
	%vr14639 = bitcast %FBSTRING* %vr14635 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14639, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14642 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14641 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14642, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14641
	%vr14645 = bitcast %FBSTRING* %vr14641 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14645, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AD
	%vr14648 = bitcast i8* bitcast ([22 x i8]* @Lt_09AD to i8*) to i8*
	; arg 21
	%vr14647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14648, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14647
	%vr14651 = bitcast %FBSTRING* %vr14647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14651, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AE
	%vr14654 = bitcast i8* bitcast ([22 x i8]* @Lt_09AE to i8*) to i8*
	; arg 21
	%vr14653 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14654, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14653
	%vr14657 = bitcast %FBSTRING* %vr14653 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14657, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14660 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14659 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14660, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14659
	%vr14663 = bitcast %FBSTRING* %vr14659 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14663, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AF
	%vr14666 = bitcast i8* bitcast ([30 x i8]* @Lt_09AF to i8*) to i8*
	; arg 29
	%vr14665 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14666, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14665
	%vr14669 = bitcast %FBSTRING* %vr14665 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14669, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14672 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14671 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14672, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14671
	%vr14675 = bitcast %FBSTRING* %vr14671 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14675, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B0
	%vr14678 = bitcast i8* bitcast ([56 x i8]* @Lt_09B0 to i8*) to i8*
	; arg 55
	%vr14677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14678, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr14677
	%vr14681 = bitcast %FBSTRING* %vr14677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14681, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14684 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14683 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14684, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14683
	%vr14687 = bitcast %FBSTRING* %vr14683 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14687, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B1
	%vr14690 = bitcast i8* bitcast ([80 x i8]* @Lt_09B1 to i8*) to i8*
	; arg 79
	%vr14689 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14690, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr14689
	%vr14693 = bitcast %FBSTRING* %vr14689 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14693, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B2
	%vr14696 = bitcast i8* bitcast ([56 x i8]* @Lt_09B2 to i8*) to i8*
	; arg 55
	%vr14695 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14696, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr14695
	%vr14699 = bitcast %FBSTRING* %vr14695 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14699, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14702 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14701 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14702, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14701
	%vr14705 = bitcast %FBSTRING* %vr14701 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14705, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B3
	%vr14708 = bitcast i8* bitcast ([40 x i8]* @Lt_09B3 to i8*) to i8*
	; arg 39
	%vr14707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14708, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14707
	%vr14711 = bitcast %FBSTRING* %vr14707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14711, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14714 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14713 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14714, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14713
	%vr14717 = bitcast %FBSTRING* %vr14713 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14717, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B4
	%vr14720 = bitcast i8* bitcast ([73 x i8]* @Lt_09B4 to i8*) to i8*
	; arg 72
	%vr14719 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14720, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr14719
	%vr14723 = bitcast %FBSTRING* %vr14719 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14723, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B5
	%vr14726 = bitcast i8* bitcast ([26 x i8]* @Lt_09B5 to i8*) to i8*
	; arg 25
	%vr14725 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14726, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14725
	%vr14729 = bitcast %FBSTRING* %vr14725 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14729, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr14732 = bitcast i8* bitcast ([22 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 21
	%vr14731 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14732, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14731
	%vr14735 = bitcast %FBSTRING* %vr14731 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14735, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr14738 = bitcast i8* bitcast ([34 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 33
	%vr14737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14738, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr14737
	%vr14741 = bitcast %FBSTRING* %vr14737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14741, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr14744 = bitcast i8* bitcast ([29 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 28
	%vr14743 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14744, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr14743
	%vr14747 = bitcast %FBSTRING* %vr14743 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14747, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14750 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14749 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14750, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14749
	%vr14753 = bitcast %FBSTRING* %vr14749 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14753, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr14756 = bitcast i8* bitcast ([35 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 34
	%vr14755 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14756, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr14755
	%vr14759 = bitcast %FBSTRING* %vr14755 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14759, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BA
	%vr14762 = bitcast i8* bitcast ([22 x i8]* @Lt_09BA to i8*) to i8*
	; arg 21
	%vr14761 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14762, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14761
	%vr14765 = bitcast %FBSTRING* %vr14761 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14765, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BB
	%vr14768 = bitcast i8* bitcast ([24 x i8]* @Lt_09BB to i8*) to i8*
	; arg 23
	%vr14767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14768, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14767
	%vr14771 = bitcast %FBSTRING* %vr14767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14771, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BC
	%vr14774 = bitcast i8* bitcast ([44 x i8]* @Lt_09BC to i8*) to i8*
	; arg 43
	%vr14773 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14774, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr14773
	%vr14777 = bitcast %FBSTRING* %vr14773 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14777, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14780 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14779 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14780, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14779
	%vr14783 = bitcast %FBSTRING* %vr14779 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14783, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BD
	%vr14786 = bitcast i8* bitcast ([45 x i8]* @Lt_09BD to i8*) to i8*
	; arg 44
	%vr14785 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14786, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr14785
	%vr14789 = bitcast %FBSTRING* %vr14785 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14789, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14792 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14791 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14792, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14791
	%vr14795 = bitcast %FBSTRING* %vr14791 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14795, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BE
	%vr14798 = bitcast i8* bitcast ([54 x i8]* @Lt_09BE to i8*) to i8*
	; arg 53
	%vr14797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14798, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr14797
	%vr14801 = bitcast %FBSTRING* %vr14797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14801, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BF
	%vr14804 = bitcast i8* bitcast ([31 x i8]* @Lt_09BF to i8*) to i8*
	; arg 30
	%vr14803 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14804, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr14803
	%vr14807 = bitcast %FBSTRING* %vr14803 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14807, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C0
	%vr14810 = bitcast i8* bitcast ([68 x i8]* @Lt_09C0 to i8*) to i8*
	; arg 67
	%vr14809 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14810, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr14809
	%vr14813 = bitcast %FBSTRING* %vr14809 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14813, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C1
	%vr14816 = bitcast i8* bitcast ([58 x i8]* @Lt_09C1 to i8*) to i8*
	; arg 57
	%vr14815 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14816, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr14815
	%vr14819 = bitcast %FBSTRING* %vr14815 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14819, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14822 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14821 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14822, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14821
	%vr14825 = bitcast %FBSTRING* %vr14821 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14825, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C2
	%vr14828 = bitcast i8* bitcast ([57 x i8]* @Lt_09C2 to i8*) to i8*
	; arg 56
	%vr14827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14828, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr14827
	%vr14831 = bitcast %FBSTRING* %vr14827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14831, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C3
	%vr14834 = bitcast i8* bitcast ([90 x i8]* @Lt_09C3 to i8*) to i8*
	; arg 89
	%vr14833 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14834, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr14833
	%vr14837 = bitcast %FBSTRING* %vr14833 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14837, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14840 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14839 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14840, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14839
	%vr14843 = bitcast %FBSTRING* %vr14839 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14843, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C4
	%vr14846 = bitcast i8* bitcast ([27 x i8]* @Lt_09C4 to i8*) to i8*
	; arg 26
	%vr14845 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14846, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14845
	%vr14849 = bitcast %FBSTRING* %vr14845 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14849, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14852 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14851 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14852, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14851
	%vr14855 = bitcast %FBSTRING* %vr14851 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14855, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C5
	%vr14858 = bitcast i8* bitcast ([27 x i8]* @Lt_09C5 to i8*) to i8*
	; arg 26
	%vr14857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14858, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14857
	%vr14861 = bitcast %FBSTRING* %vr14857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14861, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14864 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14863 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14864, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14863
	%vr14867 = bitcast %FBSTRING* %vr14863 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14867, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C6
	%vr14870 = bitcast i8* bitcast ([80 x i8]* @Lt_09C6 to i8*) to i8*
	; arg 79
	%vr14869 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14870, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr14869
	%vr14873 = bitcast %FBSTRING* %vr14869 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14873, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C7
	%vr14876 = bitcast i8* bitcast ([77 x i8]* @Lt_09C7 to i8*) to i8*
	; arg 76
	%vr14875 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14876, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr14875
	%vr14879 = bitcast %FBSTRING* %vr14875 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14879, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14882 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14881 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14882, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14881
	%vr14885 = bitcast %FBSTRING* %vr14881 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14885, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C8
	%vr14888 = bitcast i8* bitcast ([78 x i8]* @Lt_09C8 to i8*) to i8*
	; arg 77
	%vr14887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14888, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr14887
	%vr14891 = bitcast %FBSTRING* %vr14887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14891, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14894 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14893 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14894, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14893
	%vr14897 = bitcast %FBSTRING* %vr14893 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14897, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C9
	%vr14900 = bitcast i8* bitcast ([84 x i8]* @Lt_09C9 to i8*) to i8*
	; arg 83
	%vr14899 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14900, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr14899
	%vr14903 = bitcast %FBSTRING* %vr14899 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14903, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CA
	%vr14906 = bitcast i8* bitcast ([34 x i8]* @Lt_09CA to i8*) to i8*
	; arg 33
	%vr14905 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14906, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr14905
	%vr14909 = bitcast %FBSTRING* %vr14905 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14909, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14912 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14911 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14912, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14911
	%vr14915 = bitcast %FBSTRING* %vr14911 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14915, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CB
	%vr14918 = bitcast i8* bitcast ([87 x i8]* @Lt_09CB to i8*) to i8*
	; arg 86
	%vr14917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14918, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr14917
	%vr14921 = bitcast %FBSTRING* %vr14917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14921, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CC
	%vr14924 = bitcast i8* bitcast ([57 x i8]* @Lt_09CC to i8*) to i8*
	; arg 56
	%vr14923 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14924, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr14923
	%vr14927 = bitcast %FBSTRING* %vr14923 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14927, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CD
	%vr14930 = bitcast i8* bitcast ([82 x i8]* @Lt_09CD to i8*) to i8*
	; arg 81
	%vr14929 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14930, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr14929
	%vr14933 = bitcast %FBSTRING* %vr14929 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14933, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CE
	%vr14936 = bitcast i8* bitcast ([62 x i8]* @Lt_09CE to i8*) to i8*
	; arg 61
	%vr14935 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14936, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr14935
	%vr14939 = bitcast %FBSTRING* %vr14935 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14939, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14942 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14941 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14942, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14941
	%vr14945 = bitcast %FBSTRING* %vr14941 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14945, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CF
	%vr14948 = bitcast i8* bitcast ([35 x i8]* @Lt_09CF to i8*) to i8*
	; arg 34
	%vr14947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14948, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr14947
	%vr14951 = bitcast %FBSTRING* %vr14947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14951, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D0
	%vr14954 = bitcast i8* bitcast ([59 x i8]* @Lt_09D0 to i8*) to i8*
	; arg 58
	%vr14953 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14954, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr14953
	%vr14957 = bitcast %FBSTRING* %vr14953 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14957, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr14960 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr14959 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14960, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14959
	%vr14963 = bitcast %FBSTRING* %vr14959 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14963, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D1
	%vr14966 = bitcast i8* bitcast ([30 x i8]* @Lt_09D1 to i8*) to i8*
	; arg 29
	%vr14965 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14966, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14965
	%vr14969 = bitcast %FBSTRING* %vr14965 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14969, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr14972 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr14971 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14972, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14971
	%vr14975 = bitcast %FBSTRING* %vr14971 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14975, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D2
	%vr14978 = bitcast i8* bitcast ([40 x i8]* @Lt_09D2 to i8*) to i8*
	; arg 39
	%vr14977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14978, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14977
	%vr14981 = bitcast %FBSTRING* %vr14977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14981, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D3
	%vr14984 = bitcast i8* bitcast ([41 x i8]* @Lt_09D3 to i8*) to i8*
	; arg 40
	%vr14983 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14984, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr14983
	%vr14987 = bitcast %FBSTRING* %vr14983 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14987, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D4
	%vr14990 = bitcast i8* bitcast ([31 x i8]* @Lt_09D4 to i8*) to i8*
	; arg 30
	%vr14989 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14990, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr14989
	%vr14993 = bitcast %FBSTRING* %vr14989 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14993, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr14996 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr14995 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14996, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14995
	%vr14999 = bitcast %FBSTRING* %vr14995 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14999, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D5
	%vr15002 = bitcast i8* bitcast ([55 x i8]* @Lt_09D5 to i8*) to i8*
	; arg 54
	%vr15001 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15002, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15001
	%vr15005 = bitcast %FBSTRING* %vr15001 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15005, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D6
	%vr15008 = bitcast i8* bitcast ([44 x i8]* @Lt_09D6 to i8*) to i8*
	; arg 43
	%vr15007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15008, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr15007
	%vr15011 = bitcast %FBSTRING* %vr15007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15011, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15014 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15013 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15014, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15013
	%vr15017 = bitcast %FBSTRING* %vr15013 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15017, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D7
	%vr15020 = bitcast i8* bitcast ([56 x i8]* @Lt_09D7 to i8*) to i8*
	; arg 55
	%vr15019 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15020, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr15019
	%vr15023 = bitcast %FBSTRING* %vr15019 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15023, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D8
	%vr15026 = bitcast i8* bitcast ([31 x i8]* @Lt_09D8 to i8*) to i8*
	; arg 30
	%vr15025 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15026, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr15025
	%vr15029 = bitcast %FBSTRING* %vr15025 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15029, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D9
	%vr15032 = bitcast i8* bitcast ([55 x i8]* @Lt_09D9 to i8*) to i8*
	; arg 54
	%vr15031 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15032, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15031
	%vr15035 = bitcast %FBSTRING* %vr15031 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15035, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr15038 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr15037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15038, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15037
	%vr15041 = bitcast %FBSTRING* %vr15037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15041, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DA
	%vr15044 = bitcast i8* bitcast ([32 x i8]* @Lt_09DA to i8*) to i8*
	; arg 31
	%vr15043 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15044, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15043
	%vr15047 = bitcast %FBSTRING* %vr15043 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15047, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr15050 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr15049 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15050, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15049
	%vr15053 = bitcast %FBSTRING* %vr15049 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15053, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DB
	%vr15056 = bitcast i8* bitcast ([45 x i8]* @Lt_09DB to i8*) to i8*
	; arg 44
	%vr15055 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15056, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr15055
	%vr15059 = bitcast %FBSTRING* %vr15055 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15059, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DC
	%vr15062 = bitcast i8* bitcast ([20 x i8]* @Lt_09DC to i8*) to i8*
	; arg 19
	%vr15061 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15062, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr15061
	%vr15065 = bitcast %FBSTRING* %vr15061 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15065, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DD
	%vr15068 = bitcast i8* bitcast ([48 x i8]* @Lt_09DD to i8*) to i8*
	; arg 47
	%vr15067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15068, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15067
	%vr15071 = bitcast %FBSTRING* %vr15067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15071, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DE
	%vr15074 = bitcast i8* bitcast ([48 x i8]* @Lt_09DE to i8*) to i8*
	; arg 47
	%vr15073 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15074, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15073
	%vr15077 = bitcast %FBSTRING* %vr15073 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15077, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DF
	%vr15080 = bitcast i8* bitcast ([51 x i8]* @Lt_09DF to i8*) to i8*
	; arg 50
	%vr15079 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15080, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr15079
	%vr15083 = bitcast %FBSTRING* %vr15079 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15083, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15086 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15085 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15086, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15085
	%vr15089 = bitcast %FBSTRING* %vr15085 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15089, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E0
	%vr15092 = bitcast i8* bitcast ([20 x i8]* @Lt_09E0 to i8*) to i8*
	; arg 19
	%vr15091 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15092, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr15091
	%vr15095 = bitcast %FBSTRING* %vr15091 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15095, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E1
	%vr15098 = bitcast i8* bitcast ([40 x i8]* @Lt_09E1 to i8*) to i8*
	; arg 39
	%vr15097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15098, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr15097
	%vr15101 = bitcast %FBSTRING* %vr15097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15101, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15104 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15103 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15104, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15103
	%vr15107 = bitcast %FBSTRING* %vr15103 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15107, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E2
	%vr15110 = bitcast i8* bitcast ([53 x i8]* @Lt_09E2 to i8*) to i8*
	; arg 52
	%vr15109 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15110, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr15109
	%vr15113 = bitcast %FBSTRING* %vr15109 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15113, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15116 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15115 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15116, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15115
	%vr15119 = bitcast %FBSTRING* %vr15115 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15119, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E3
	%vr15122 = bitcast i8* bitcast ([70 x i8]* @Lt_09E3 to i8*) to i8*
	; arg 69
	%vr15121 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15122, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr15121
	%vr15125 = bitcast %FBSTRING* %vr15121 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15125, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15128 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15128, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15127
	%vr15131 = bitcast %FBSTRING* %vr15127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15131, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E4
	%vr15134 = bitcast i8* bitcast ([55 x i8]* @Lt_09E4 to i8*) to i8*
	; arg 54
	%vr15133 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15134, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15133
	%vr15137 = bitcast %FBSTRING* %vr15133 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15137, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15140 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15139 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15140, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15139
	%vr15143 = bitcast %FBSTRING* %vr15139 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15143, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E5
	%vr15146 = bitcast i8* bitcast ([48 x i8]* @Lt_09E5 to i8*) to i8*
	; arg 47
	%vr15145 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15146, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15145
	%vr15149 = bitcast %FBSTRING* %vr15145 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15149, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E6
	%vr15152 = bitcast i8* bitcast ([35 x i8]* @Lt_09E6 to i8*) to i8*
	; arg 34
	%vr15151 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15152, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr15151
	%vr15155 = bitcast %FBSTRING* %vr15151 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15155, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E7
	%vr15158 = bitcast i8* bitcast ([45 x i8]* @Lt_09E7 to i8*) to i8*
	; arg 44
	%vr15157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15158, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr15157
	%vr15161 = bitcast %FBSTRING* %vr15157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15161, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15164 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15163 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15164, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15163
	%vr15167 = bitcast %FBSTRING* %vr15163 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15167, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E8
	%vr15170 = bitcast i8* bitcast ([72 x i8]* @Lt_09E8 to i8*) to i8*
	; arg 71
	%vr15169 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15170, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr15169
	%vr15173 = bitcast %FBSTRING* %vr15169 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15173, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E9
	%vr15176 = bitcast i8* bitcast ([60 x i8]* @Lt_09E9 to i8*) to i8*
	; arg 59
	%vr15175 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15176, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr15175
	%vr15179 = bitcast %FBSTRING* %vr15175 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15179, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EA
	%vr15182 = bitcast i8* bitcast ([32 x i8]* @Lt_09EA to i8*) to i8*
	; arg 31
	%vr15181 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15182, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15181
	%vr15185 = bitcast %FBSTRING* %vr15181 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15185, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EB
	%vr15188 = bitcast i8* bitcast ([22 x i8]* @Lt_09EB to i8*) to i8*
	; arg 21
	%vr15187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15188, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr15187
	%vr15191 = bitcast %FBSTRING* %vr15187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15191, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15194 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15193 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15194, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15193
	%vr15197 = bitcast %FBSTRING* %vr15193 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15197, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EC
	%vr15200 = bitcast i8* bitcast ([41 x i8]* @Lt_09EC to i8*) to i8*
	; arg 40
	%vr15199 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15200, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr15199
	%vr15203 = bitcast %FBSTRING* %vr15199 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15203, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09ED
	%vr15206 = bitcast i8* bitcast ([31 x i8]* @Lt_09ED to i8*) to i8*
	; arg 30
	%vr15205 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15206, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr15205
	%vr15209 = bitcast %FBSTRING* %vr15205 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15209, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EE
	%vr15212 = bitcast i8* bitcast ([22 x i8]* @Lt_09EE to i8*) to i8*
	; arg 21
	%vr15211 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15212, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr15211
	%vr15215 = bitcast %FBSTRING* %vr15211 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15215, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15218 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15218, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15217
	%vr15221 = bitcast %FBSTRING* %vr15217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15221, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EF
	%vr15224 = bitcast i8* bitcast ([33 x i8]* @Lt_09EF to i8*) to i8*
	; arg 32
	%vr15223 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15224, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr15223
	%vr15227 = bitcast %FBSTRING* %vr15223 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15227, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15230 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15229 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15230, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15229
	%vr15233 = bitcast %FBSTRING* %vr15229 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15233, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F0
	%vr15236 = bitcast i8* bitcast ([32 x i8]* @Lt_09F0 to i8*) to i8*
	; arg 31
	%vr15235 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15236, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15235
	%vr15239 = bitcast %FBSTRING* %vr15235 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15239, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15242 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15241 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15242, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15241
	%vr15245 = bitcast %FBSTRING* %vr15241 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15245, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F1
	%vr15248 = bitcast i8* bitcast ([71 x i8]* @Lt_09F1 to i8*) to i8*
	; arg 70
	%vr15247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15248, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr15247
	%vr15251 = bitcast %FBSTRING* %vr15247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15251, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F2
	%vr15254 = bitcast i8* bitcast ([32 x i8]* @Lt_09F2 to i8*) to i8*
	; arg 31
	%vr15253 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15254, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15253
	%vr15257 = bitcast %FBSTRING* %vr15253 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15257, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15260 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15259 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15260, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15259
	%vr15263 = bitcast %FBSTRING* %vr15259 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15263, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F3
	%vr15266 = bitcast i8* bitcast ([96 x i8]* @Lt_09F3 to i8*) to i8*
	; arg 95
	%vr15265 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15266, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr15265
	%vr15269 = bitcast %FBSTRING* %vr15265 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15269, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F4
	%vr15272 = bitcast i8* bitcast ([96 x i8]* @Lt_09F4 to i8*) to i8*
	; arg 95
	%vr15271 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15272, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr15271
	%vr15275 = bitcast %FBSTRING* %vr15271 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15275, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F5
	%vr15278 = bitcast i8* bitcast ([96 x i8]* @Lt_09F5 to i8*) to i8*
	; arg 95
	%vr15277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15278, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr15277
	%vr15281 = bitcast %FBSTRING* %vr15277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15281, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F6
	%vr15284 = bitcast i8* bitcast ([39 x i8]* @Lt_09F6 to i8*) to i8*
	; arg 38
	%vr15283 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15284, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15283
	%vr15287 = bitcast %FBSTRING* %vr15283 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15287, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F7
	%vr15290 = bitcast i8* bitcast ([52 x i8]* @Lt_09F7 to i8*) to i8*
	; arg 51
	%vr15289 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15290, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr15289
	%vr15293 = bitcast %FBSTRING* %vr15289 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15293, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15296 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15295 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15296, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15295
	%vr15299 = bitcast %FBSTRING* %vr15295 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15299, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F8
	%vr15302 = bitcast i8* bitcast ([65 x i8]* @Lt_09F8 to i8*) to i8*
	; arg 64
	%vr15301 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15302, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr15301
	%vr15305 = bitcast %FBSTRING* %vr15301 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15305, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F9
	%vr15308 = bitcast i8* bitcast ([65 x i8]* @Lt_09F9 to i8*) to i8*
	; arg 64
	%vr15307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15308, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr15307
	%vr15311 = bitcast %FBSTRING* %vr15307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15311, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FA
	%vr15314 = bitcast i8* bitcast ([65 x i8]* @Lt_09FA to i8*) to i8*
	; arg 64
	%vr15313 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15314, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr15313
	%vr15317 = bitcast %FBSTRING* %vr15313 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15317, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FB
	%vr15320 = bitcast i8* bitcast ([33 x i8]* @Lt_09FB to i8*) to i8*
	; arg 32
	%vr15319 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15320, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr15319
	%vr15323 = bitcast %FBSTRING* %vr15319 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15323, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FC
	%vr15326 = bitcast i8* bitcast ([53 x i8]* @Lt_09FC to i8*) to i8*
	; arg 52
	%vr15325 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15326, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr15325
	%vr15329 = bitcast %FBSTRING* %vr15325 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15329, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr15332 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr15331 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15332, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15331
	%vr15335 = bitcast %FBSTRING* %vr15331 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15335, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FD
	%vr15338 = bitcast i8* bitcast ([54 x i8]* @Lt_09FD to i8*) to i8*
	; arg 53
	%vr15337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15338, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr15337
	%vr15341 = bitcast %FBSTRING* %vr15337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15341, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FE
	%vr15344 = bitcast i8* bitcast ([54 x i8]* @Lt_09FE to i8*) to i8*
	; arg 53
	%vr15343 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15344, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr15343
	%vr15347 = bitcast %FBSTRING* %vr15343 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15347, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FF
	%vr15350 = bitcast i8* bitcast ([51 x i8]* @Lt_09FF to i8*) to i8*
	; arg 50
	%vr15349 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15350, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr15349
	%vr15353 = bitcast %FBSTRING* %vr15349 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15353, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A00
	%vr15356 = bitcast i8* bitcast ([55 x i8]* @Lt_0A00 to i8*) to i8*
	; arg 54
	%vr15355 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15356, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15355
	%vr15359 = bitcast %FBSTRING* %vr15355 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15359, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr15362 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr15361 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15362, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15361
	%vr15365 = bitcast %FBSTRING* %vr15361 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15365, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15368 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15368, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15367
	%vr15371 = bitcast %FBSTRING* %vr15367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15371, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0950
	%vr15374 = bitcast i8* bitcast ([3 x i8]* @Lt_0950 to i8*) to i8*
	; arg 2
	%vr15373 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15374, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr15373
	%vr15377 = bitcast %FBSTRING* %vr15373 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15377, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A01
	%vr15380 = bitcast i8* bitcast ([39 x i8]* @Lt_0A01 to i8*) to i8*
	; arg 38
	%vr15379 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15380, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15379
	%vr15383 = bitcast %FBSTRING* %vr15379 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15383, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A02
	%vr15386 = bitcast i8* bitcast ([51 x i8]* @Lt_0A02 to i8*) to i8*
	; arg 50
	%vr15385 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15386, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr15385
	%vr15389 = bitcast %FBSTRING* %vr15385 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15389, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A03
	%vr15392 = bitcast i8* bitcast ([41 x i8]* @Lt_0A03 to i8*) to i8*
	; arg 40
	%vr15391 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15392, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr15391
	%vr15395 = bitcast %FBSTRING* %vr15391 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15395, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A04
	%vr15398 = bitcast i8* bitcast ([37 x i8]* @Lt_0A04 to i8*) to i8*
	; arg 36
	%vr15397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15398, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15397
	%vr15401 = bitcast %FBSTRING* %vr15397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15401, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A05
	%vr15404 = bitcast i8* bitcast ([77 x i8]* @Lt_0A05 to i8*) to i8*
	; arg 76
	%vr15403 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15404, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr15403
	%vr15407 = bitcast %FBSTRING* %vr15403 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15407, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15410 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15409 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15410, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15409
	%vr15413 = bitcast %FBSTRING* %vr15409 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15413, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A06
	%vr15416 = bitcast i8* bitcast ([53 x i8]* @Lt_0A06 to i8*) to i8*
	; arg 52
	%vr15415 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15416, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr15415
	%vr15419 = bitcast %FBSTRING* %vr15415 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15419, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A07
	%vr15422 = bitcast i8* bitcast ([54 x i8]* @Lt_0A07 to i8*) to i8*
	; arg 53
	%vr15421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15422, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr15421
	%vr15425 = bitcast %FBSTRING* %vr15421 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15425, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A08
	%vr15428 = bitcast i8* bitcast ([22 x i8]* @Lt_0A08 to i8*) to i8*
	; arg 21
	%vr15427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15428, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr15427
	%vr15431 = bitcast %FBSTRING* %vr15427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15431, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A09
	%vr15434 = bitcast i8* bitcast ([50 x i8]* @Lt_0A09 to i8*) to i8*
	; arg 49
	%vr15433 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15434, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr15433
	%vr15437 = bitcast %FBSTRING* %vr15433 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15437, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15440 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15439 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15440, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15439
	%vr15443 = bitcast %FBSTRING* %vr15439 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15443, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0A
	%vr15446 = bitcast i8* bitcast ([50 x i8]* @Lt_0A0A to i8*) to i8*
	; arg 49
	%vr15445 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15446, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr15445
	%vr15449 = bitcast %FBSTRING* %vr15445 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15449, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15452 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15451 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15452, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15451
	%vr15455 = bitcast %FBSTRING* %vr15451 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15455, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0B
	%vr15458 = bitcast i8* bitcast ([20 x i8]* @Lt_0A0B to i8*) to i8*
	; arg 19
	%vr15457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15458, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr15457
	%vr15461 = bitcast %FBSTRING* %vr15457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15461, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15464 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15463 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15464, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15463
	%vr15467 = bitcast %FBSTRING* %vr15463 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15467, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0C
	%vr15470 = bitcast i8* bitcast ([26 x i8]* @Lt_0A0C to i8*) to i8*
	; arg 25
	%vr15469 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15470, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15469
	%vr15473 = bitcast %FBSTRING* %vr15469 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15473, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0D
	%vr15476 = bitcast i8* bitcast ([60 x i8]* @Lt_0A0D to i8*) to i8*
	; arg 59
	%vr15475 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15476, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr15475
	%vr15479 = bitcast %FBSTRING* %vr15475 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15479, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0E
	%vr15482 = bitcast i8* bitcast ([64 x i8]* @Lt_0A0E to i8*) to i8*
	; arg 63
	%vr15481 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15482, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr15481
	%vr15485 = bitcast %FBSTRING* %vr15481 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15485, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0F
	%vr15488 = bitcast i8* bitcast ([67 x i8]* @Lt_0A0F to i8*) to i8*
	; arg 66
	%vr15487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15488, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr15487
	%vr15491 = bitcast %FBSTRING* %vr15487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15491, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15494 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15493 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15494, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15493
	%vr15497 = bitcast %FBSTRING* %vr15493 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15497, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A10
	%vr15500 = bitcast i8* bitcast ([18 x i8]* @Lt_0A10 to i8*) to i8*
	; arg 17
	%vr15499 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15500, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr15499
	%vr15503 = bitcast %FBSTRING* %vr15499 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15503, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15506 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15505 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15506, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15505
	%vr15509 = bitcast %FBSTRING* %vr15505 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15509, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A11
	%vr15512 = bitcast i8* bitcast ([96 x i8]* @Lt_0A11 to i8*) to i8*
	; arg 95
	%vr15511 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15512, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr15511
	%vr15515 = bitcast %FBSTRING* %vr15511 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15515, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A12
	%vr15518 = bitcast i8* bitcast ([38 x i8]* @Lt_0A12 to i8*) to i8*
	; arg 37
	%vr15517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15518, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr15517
	%vr15521 = bitcast %FBSTRING* %vr15517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15521, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15524 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15523 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15524, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15523
	%vr15527 = bitcast %FBSTRING* %vr15523 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15527, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A13
	%vr15530 = bitcast i8* bitcast ([120 x i8]* @Lt_0A13 to i8*) to i8*
	; arg 119
	%vr15529 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15530, i64 119 )

	; call fb_PrintString()
	; arg 1
	; arg vr15529
	%vr15533 = bitcast %FBSTRING* %vr15529 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15533, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A14
	%vr15536 = bitcast i8* bitcast ([120 x i8]* @Lt_0A14 to i8*) to i8*
	; arg 119
	%vr15535 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15536, i64 119 )

	; call fb_PrintString()
	; arg 1
	; arg vr15535
	%vr15539 = bitcast %FBSTRING* %vr15535 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15539, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A16
	%vr15542 = bitcast i8* bitcast ([151 x i8]* @Lt_0A16 to i8*) to i8*
	; arg 150
	%vr15541 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15542, i64 150 )

	; call fb_PrintString()
	; arg 1
	; arg vr15541
	%vr15545 = bitcast %FBSTRING* %vr15541 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15545, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15548 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15548, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15547
	%vr15551 = bitcast %FBSTRING* %vr15547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15551, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A17
	%vr15554 = bitcast i8* bitcast ([18 x i8]* @Lt_0A17 to i8*) to i8*
	; arg 17
	%vr15553 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15554, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr15553
	%vr15557 = bitcast %FBSTRING* %vr15553 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15557, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15560 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15559 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15560, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15559
	%vr15563 = bitcast %FBSTRING* %vr15559 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15563, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A18
	%vr15566 = bitcast i8* bitcast ([24 x i8]* @Lt_0A18 to i8*) to i8*
	; arg 23
	%vr15565 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15566, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr15565
	%vr15569 = bitcast %FBSTRING* %vr15565 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15569, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr15572 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr15571 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15572, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15571
	%vr15575 = bitcast %FBSTRING* %vr15571 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15575, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15578 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15578, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15577
	%vr15581 = bitcast %FBSTRING* %vr15577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15581, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A19
	%vr15584 = bitcast i8* bitcast ([118 x i8]* @Lt_0A19 to i8*) to i8*
	; arg 117
	%vr15583 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15584, i64 117 )

	; call fb_PrintString()
	; arg 1
	; arg vr15583
	%vr15587 = bitcast %FBSTRING* %vr15583 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15587, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr15590 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr15589 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15590, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15589
	%vr15593 = bitcast %FBSTRING* %vr15589 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15593, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1A
	%vr15596 = bitcast i8* bitcast ([23 x i8]* @Lt_0A1A to i8*) to i8*
	; arg 22
	%vr15595 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15596, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr15595
	%vr15599 = bitcast %FBSTRING* %vr15595 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15599, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15602 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15601 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15602, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15601
	%vr15605 = bitcast %FBSTRING* %vr15601 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15605, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1B
	%vr15608 = bitcast i8* bitcast ([26 x i8]* @Lt_0A1B to i8*) to i8*
	; arg 25
	%vr15607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15608, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15607
	%vr15611 = bitcast %FBSTRING* %vr15607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15611, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1C
	%vr15614 = bitcast i8* bitcast ([39 x i8]* @Lt_0A1C to i8*) to i8*
	; arg 38
	%vr15613 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15614, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15613
	%vr15617 = bitcast %FBSTRING* %vr15613 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15617, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1D
	%vr15620 = bitcast i8* bitcast ([27 x i8]* @Lt_0A1D to i8*) to i8*
	; arg 26
	%vr15619 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15620, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15619
	%vr15623 = bitcast %FBSTRING* %vr15619 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15623, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1E
	%vr15626 = bitcast i8* bitcast ([53 x i8]* @Lt_0A1E to i8*) to i8*
	; arg 52
	%vr15625 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15626, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr15625
	%vr15629 = bitcast %FBSTRING* %vr15625 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15629, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1F
	%vr15632 = bitcast i8* bitcast ([57 x i8]* @Lt_0A1F to i8*) to i8*
	; arg 56
	%vr15631 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15632, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr15631
	%vr15635 = bitcast %FBSTRING* %vr15631 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15635, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A20
	%vr15638 = bitcast i8* bitcast ([40 x i8]* @Lt_0A20 to i8*) to i8*
	; arg 39
	%vr15637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15638, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr15637
	%vr15641 = bitcast %FBSTRING* %vr15637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15641, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A21
	%vr15644 = bitcast i8* bitcast ([37 x i8]* @Lt_0A21 to i8*) to i8*
	; arg 36
	%vr15643 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15644, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15643
	%vr15647 = bitcast %FBSTRING* %vr15643 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15647, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A09
	%vr15650 = bitcast i8* bitcast ([50 x i8]* @Lt_0A09 to i8*) to i8*
	; arg 49
	%vr15649 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15650, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr15649
	%vr15653 = bitcast %FBSTRING* %vr15649 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15653, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A22
	%vr15656 = bitcast i8* bitcast ([53 x i8]* @Lt_0A22 to i8*) to i8*
	; arg 52
	%vr15655 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15656, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr15655
	%vr15659 = bitcast %FBSTRING* %vr15655 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15659, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15662 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15661 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15662, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15661
	%vr15665 = bitcast %FBSTRING* %vr15661 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15665, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15668 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15668, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15667
	%vr15671 = bitcast %FBSTRING* %vr15667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15671, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A23
	%vr15674 = bitcast i8* bitcast ([28 x i8]* @Lt_0A23 to i8*) to i8*
	; arg 27
	%vr15673 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15674, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr15673
	%vr15677 = bitcast %FBSTRING* %vr15673 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15677, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15680 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15679 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15680, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15679
	%vr15683 = bitcast %FBSTRING* %vr15679 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15683, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A24
	%vr15686 = bitcast i8* bitcast ([60 x i8]* @Lt_0A24 to i8*) to i8*
	; arg 59
	%vr15685 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15686, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr15685
	%vr15689 = bitcast %FBSTRING* %vr15685 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15689, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15692 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15691 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15692, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15691
	%vr15695 = bitcast %FBSTRING* %vr15691 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15695, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A25
	%vr15698 = bitcast i8* bitcast ([55 x i8]* @Lt_0A25 to i8*) to i8*
	; arg 54
	%vr15697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15698, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15697
	%vr15701 = bitcast %FBSTRING* %vr15697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15701, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A26
	%vr15704 = bitcast i8* bitcast ([61 x i8]* @Lt_0A26 to i8*) to i8*
	; arg 60
	%vr15703 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15704, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr15703
	%vr15707 = bitcast %FBSTRING* %vr15703 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15707, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A27
	%vr15710 = bitcast i8* bitcast ([112 x i8]* @Lt_0A27 to i8*) to i8*
	; arg 111
	%vr15709 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15710, i64 111 )

	; call fb_PrintString()
	; arg 1
	; arg vr15709
	%vr15713 = bitcast %FBSTRING* %vr15709 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15713, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A28
	%vr15716 = bitcast i8* bitcast ([55 x i8]* @Lt_0A28 to i8*) to i8*
	; arg 54
	%vr15715 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15716, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15715
	%vr15719 = bitcast %FBSTRING* %vr15715 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15719, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A29
	%vr15722 = bitcast i8* bitcast ([55 x i8]* @Lt_0A29 to i8*) to i8*
	; arg 54
	%vr15721 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15722, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr15721
	%vr15725 = bitcast %FBSTRING* %vr15721 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15725, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2A
	%vr15728 = bitcast i8* bitcast ([107 x i8]* @Lt_0A2A to i8*) to i8*
	; arg 106
	%vr15727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15728, i64 106 )

	; call fb_PrintString()
	; arg 1
	; arg vr15727
	%vr15731 = bitcast %FBSTRING* %vr15727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15731, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15734 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15733 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15734, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15733
	%vr15737 = bitcast %FBSTRING* %vr15733 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15737, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2B
	%vr15740 = bitcast i8* bitcast ([27 x i8]* @Lt_0A2B to i8*) to i8*
	; arg 26
	%vr15739 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15740, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15739
	%vr15743 = bitcast %FBSTRING* %vr15739 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15743, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2C
	%vr15746 = bitcast i8* bitcast ([57 x i8]* @Lt_0A2C to i8*) to i8*
	; arg 56
	%vr15745 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15746, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr15745
	%vr15749 = bitcast %FBSTRING* %vr15745 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15749, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr15752 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr15751 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15752, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15751
	%vr15755 = bitcast %FBSTRING* %vr15751 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15755, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15758 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15758, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15757
	%vr15761 = bitcast %FBSTRING* %vr15757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15761, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2D
	%vr15764 = bitcast i8* bitcast ([47 x i8]* @Lt_0A2D to i8*) to i8*
	; arg 46
	%vr15763 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15764, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr15763
	%vr15767 = bitcast %FBSTRING* %vr15763 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15767, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15770 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15769 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15770, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15769
	%vr15773 = bitcast %FBSTRING* %vr15769 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15773, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2E
	%vr15776 = bitcast i8* bitcast ([31 x i8]* @Lt_0A2E to i8*) to i8*
	; arg 30
	%vr15775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15776, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr15775
	%vr15779 = bitcast %FBSTRING* %vr15775 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15779, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr15782 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr15781 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15782, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15781
	%vr15785 = bitcast %FBSTRING* %vr15781 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15785, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2F
	%vr15788 = bitcast i8* bitcast ([38 x i8]* @Lt_0A2F to i8*) to i8*
	; arg 37
	%vr15787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15788, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr15787
	%vr15791 = bitcast %FBSTRING* %vr15787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15791, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A30
	%vr15794 = bitcast i8* bitcast ([26 x i8]* @Lt_0A30 to i8*) to i8*
	; arg 25
	%vr15793 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15794, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15793
	%vr15797 = bitcast %FBSTRING* %vr15793 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15797, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A31
	%vr15800 = bitcast i8* bitcast ([28 x i8]* @Lt_0A31 to i8*) to i8*
	; arg 27
	%vr15799 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15800, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr15799
	%vr15803 = bitcast %FBSTRING* %vr15799 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15803, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A32
	%vr15806 = bitcast i8* bitcast ([29 x i8]* @Lt_0A32 to i8*) to i8*
	; arg 28
	%vr15805 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15806, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr15805
	%vr15809 = bitcast %FBSTRING* %vr15805 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15809, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A33
	%vr15812 = bitcast i8* bitcast ([29 x i8]* @Lt_0A33 to i8*) to i8*
	; arg 28
	%vr15811 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15812, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr15811
	%vr15815 = bitcast %FBSTRING* %vr15811 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15815, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A34
	%vr15818 = bitcast i8* bitcast ([29 x i8]* @Lt_0A34 to i8*) to i8*
	; arg 28
	%vr15817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15818, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr15817
	%vr15821 = bitcast %FBSTRING* %vr15817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15821, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A35
	%vr15824 = bitcast i8* bitcast ([4 x i8]* @Lt_0A35 to i8*) to i8*
	; arg 3
	%vr15823 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15824, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15823
	%vr15827 = bitcast %FBSTRING* %vr15823 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15827, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr15830 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr15829 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15830, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15829
	%vr15833 = bitcast %FBSTRING* %vr15829 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15833, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15836 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15835 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15836, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15835
	%vr15839 = bitcast %FBSTRING* %vr15835 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15839, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15842 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15841 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15842, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15841
	%vr15845 = bitcast %FBSTRING* %vr15841 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15845, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A36
	%vr15848 = bitcast i8* bitcast ([39 x i8]* @Lt_0A36 to i8*) to i8*
	; arg 38
	%vr15847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15848, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15847
	%vr15851 = bitcast %FBSTRING* %vr15847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15851, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A37
	%vr15854 = bitcast i8* bitcast ([6 x i8]* @Lt_0A37 to i8*) to i8*
	; arg 5
	%vr15853 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15854, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15853
	%vr15857 = bitcast %FBSTRING* %vr15853 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15857, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A38
	%vr15860 = bitcast i8* bitcast ([24 x i8]* @Lt_0A38 to i8*) to i8*
	; arg 23
	%vr15859 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15860, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr15859
	%vr15863 = bitcast %FBSTRING* %vr15859 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15863, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A39
	%vr15866 = bitcast i8* bitcast ([23 x i8]* @Lt_0A39 to i8*) to i8*
	; arg 22
	%vr15865 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15866, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr15865
	%vr15869 = bitcast %FBSTRING* %vr15865 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15869, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15872 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15871 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15872, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15871
	%vr15875 = bitcast %FBSTRING* %vr15871 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15875, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr15878 = bitcast i8* bitcast ([30 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 29
	%vr15877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15878, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr15877
	%vr15881 = bitcast %FBSTRING* %vr15877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15881, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3B
	%vr15884 = bitcast i8* bitcast ([20 x i8]* @Lt_0A3B to i8*) to i8*
	; arg 19
	%vr15883 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15884, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr15883
	%vr15887 = bitcast %FBSTRING* %vr15883 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15887, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3C
	%vr15890 = bitcast i8* bitcast ([21 x i8]* @Lt_0A3C to i8*) to i8*
	; arg 20
	%vr15889 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15890, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15889
	%vr15893 = bitcast %FBSTRING* %vr15889 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15893, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3D
	%vr15896 = bitcast i8* bitcast ([14 x i8]* @Lt_0A3D to i8*) to i8*
	; arg 13
	%vr15895 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15896, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15895
	%vr15899 = bitcast %FBSTRING* %vr15895 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15899, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097D
	%vr15902 = bitcast i8* bitcast ([30 x i8]* @Lt_097D to i8*) to i8*
	; arg 29
	%vr15901 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15902, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr15901
	%vr15905 = bitcast %FBSTRING* %vr15901 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15905, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr15908 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr15907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15908, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15907
	%vr15911 = bitcast %FBSTRING* %vr15907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15911, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3E
	%vr15914 = bitcast i8* bitcast ([23 x i8]* @Lt_0A3E to i8*) to i8*
	; arg 22
	%vr15913 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15914, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr15913
	%vr15917 = bitcast %FBSTRING* %vr15913 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15917, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3F
	%vr15920 = bitcast i8* bitcast ([21 x i8]* @Lt_0A3F to i8*) to i8*
	; arg 20
	%vr15919 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15920, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15919
	%vr15923 = bitcast %FBSTRING* %vr15919 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15923, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A40
	%vr15926 = bitcast i8* bitcast ([44 x i8]* @Lt_0A40 to i8*) to i8*
	; arg 43
	%vr15925 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15926, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr15925
	%vr15929 = bitcast %FBSTRING* %vr15925 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15929, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A41
	%vr15932 = bitcast i8* bitcast ([20 x i8]* @Lt_0A41 to i8*) to i8*
	; arg 19
	%vr15931 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15932, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr15931
	%vr15935 = bitcast %FBSTRING* %vr15931 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15935, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr15938 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr15937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15938, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15937
	%vr15941 = bitcast %FBSTRING* %vr15937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15941, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr15944 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr15943 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15944, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15943
	%vr15947 = bitcast %FBSTRING* %vr15943 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15947, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A42
	%vr15950 = bitcast i8* bitcast ([13 x i8]* @Lt_0A42 to i8*) to i8*
	; arg 12
	%vr15949 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15950, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr15949
	%vr15953 = bitcast %FBSTRING* %vr15949 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15953, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A43
	%vr15956 = bitcast i8* bitcast ([63 x i8]* @Lt_0A43 to i8*) to i8*
	; arg 62
	%vr15955 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15956, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr15955
	%vr15959 = bitcast %FBSTRING* %vr15955 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15959, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A44
	%vr15962 = bitcast i8* bitcast ([46 x i8]* @Lt_0A44 to i8*) to i8*
	; arg 45
	%vr15961 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15962, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr15961
	%vr15965 = bitcast %FBSTRING* %vr15961 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15965, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A45
	%vr15968 = bitcast i8* bitcast ([32 x i8]* @Lt_0A45 to i8*) to i8*
	; arg 31
	%vr15967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15968, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15967
	%vr15971 = bitcast %FBSTRING* %vr15967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15971, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15974 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15973 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15974, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15973
	%vr15977 = bitcast %FBSTRING* %vr15973 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15977, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A46
	%vr15980 = bitcast i8* bitcast ([15 x i8]* @Lt_0A46 to i8*) to i8*
	; arg 14
	%vr15979 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15980, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15979
	%vr15983 = bitcast %FBSTRING* %vr15979 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15983, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr15986 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr15985 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15986, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15985
	%vr15989 = bitcast %FBSTRING* %vr15985 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15989, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15992 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15991 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15992, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15991
	%vr15995 = bitcast %FBSTRING* %vr15991 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15995, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A47
	%vr15998 = bitcast i8* bitcast ([107 x i8]* @Lt_0A47 to i8*) to i8*
	; arg 106
	%vr15997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15998, i64 106 )

	; call fb_PrintString()
	; arg 1
	; arg vr15997
	%vr16001 = bitcast %FBSTRING* %vr15997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16001, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr16004 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr16003 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16004, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16003
	%vr16007 = bitcast %FBSTRING* %vr16003 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16007, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A48
	%vr16010 = bitcast i8* bitcast ([27 x i8]* @Lt_0A48 to i8*) to i8*
	; arg 26
	%vr16009 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16010, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16009
	%vr16013 = bitcast %FBSTRING* %vr16009 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16013, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16016 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16015 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16016, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16015
	%vr16019 = bitcast %FBSTRING* %vr16015 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16019, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A49
	%vr16022 = bitcast i8* bitcast ([23 x i8]* @Lt_0A49 to i8*) to i8*
	; arg 22
	%vr16021 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16022, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr16021
	%vr16025 = bitcast %FBSTRING* %vr16021 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16025, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4A
	%vr16028 = bitcast i8* bitcast ([33 x i8]* @Lt_0A4A to i8*) to i8*
	; arg 32
	%vr16027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16028, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16027
	%vr16031 = bitcast %FBSTRING* %vr16027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16031, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr16034 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr16033 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16034, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16033
	%vr16037 = bitcast %FBSTRING* %vr16033 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16037, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4B
	%vr16040 = bitcast i8* bitcast ([28 x i8]* @Lt_0A4B to i8*) to i8*
	; arg 27
	%vr16039 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16040, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16039
	%vr16043 = bitcast %FBSTRING* %vr16039 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16043, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4C
	%vr16046 = bitcast i8* bitcast ([42 x i8]* @Lt_0A4C to i8*) to i8*
	; arg 41
	%vr16045 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16046, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr16045
	%vr16049 = bitcast %FBSTRING* %vr16045 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16049, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4D
	%vr16052 = bitcast i8* bitcast ([27 x i8]* @Lt_0A4D to i8*) to i8*
	; arg 26
	%vr16051 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16052, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16051
	%vr16055 = bitcast %FBSTRING* %vr16051 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16055, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16058 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16058, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16057
	%vr16061 = bitcast %FBSTRING* %vr16057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16061, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4E
	%vr16064 = bitcast i8* bitcast ([49 x i8]* @Lt_0A4E to i8*) to i8*
	; arg 48
	%vr16063 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16064, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16063
	%vr16067 = bitcast %FBSTRING* %vr16063 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16067, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr16070 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr16069 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16070, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr16069
	%vr16073 = bitcast %FBSTRING* %vr16069 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16073, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4F
	%vr16076 = bitcast i8* bitcast ([22 x i8]* @Lt_0A4F to i8*) to i8*
	; arg 21
	%vr16075 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16076, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr16075
	%vr16079 = bitcast %FBSTRING* %vr16075 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16079, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr16082 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr16081 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16082, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16081
	%vr16085 = bitcast %FBSTRING* %vr16081 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16085, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083B
	%vr16088 = bitcast i8* bitcast ([13 x i8]* @Lt_083B to i8*) to i8*
	; arg 12
	%vr16087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16088, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr16087
	%vr16091 = bitcast %FBSTRING* %vr16087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16091, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16094 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16093 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16094, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16093
	%vr16097 = bitcast %FBSTRING* %vr16093 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16097, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16100 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16099 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16100, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16099
	%vr16103 = bitcast %FBSTRING* %vr16099 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16103, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A50
	%vr16106 = bitcast i8* bitcast ([112 x i8]* @Lt_0A50 to i8*) to i8*
	; arg 111
	%vr16105 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16106, i64 111 )

	; call fb_PrintString()
	; arg 1
	; arg vr16105
	%vr16109 = bitcast %FBSTRING* %vr16105 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16109, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr16112 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr16111 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16112, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16111
	%vr16115 = bitcast %FBSTRING* %vr16111 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16115, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A48
	%vr16118 = bitcast i8* bitcast ([27 x i8]* @Lt_0A48 to i8*) to i8*
	; arg 26
	%vr16117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16118, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16117
	%vr16121 = bitcast %FBSTRING* %vr16117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16121, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16124 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16123 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16124, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16123
	%vr16127 = bitcast %FBSTRING* %vr16123 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16127, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A49
	%vr16130 = bitcast i8* bitcast ([23 x i8]* @Lt_0A49 to i8*) to i8*
	; arg 22
	%vr16129 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16130, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr16129
	%vr16133 = bitcast %FBSTRING* %vr16129 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16133, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4A
	%vr16136 = bitcast i8* bitcast ([33 x i8]* @Lt_0A4A to i8*) to i8*
	; arg 32
	%vr16135 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16136, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16135
	%vr16139 = bitcast %FBSTRING* %vr16135 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16139, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr16142 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr16141 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16142, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16141
	%vr16145 = bitcast %FBSTRING* %vr16141 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16145, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4B
	%vr16148 = bitcast i8* bitcast ([28 x i8]* @Lt_0A4B to i8*) to i8*
	; arg 27
	%vr16147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16148, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16147
	%vr16151 = bitcast %FBSTRING* %vr16147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16151, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A51
	%vr16154 = bitcast i8* bitcast ([47 x i8]* @Lt_0A51 to i8*) to i8*
	; arg 46
	%vr16153 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16154, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr16153
	%vr16157 = bitcast %FBSTRING* %vr16153 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16157, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4D
	%vr16160 = bitcast i8* bitcast ([27 x i8]* @Lt_0A4D to i8*) to i8*
	; arg 26
	%vr16159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16160, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16159
	%vr16163 = bitcast %FBSTRING* %vr16159 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16163, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16166 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16165 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16166, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16165
	%vr16169 = bitcast %FBSTRING* %vr16165 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16169, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4E
	%vr16172 = bitcast i8* bitcast ([49 x i8]* @Lt_0A4E to i8*) to i8*
	; arg 48
	%vr16171 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16172, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16171
	%vr16175 = bitcast %FBSTRING* %vr16171 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16175, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr16178 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr16177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16178, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr16177
	%vr16181 = bitcast %FBSTRING* %vr16177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16181, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A52
	%vr16184 = bitcast i8* bitcast ([18 x i8]* @Lt_0A52 to i8*) to i8*
	; arg 17
	%vr16183 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16184, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr16183
	%vr16187 = bitcast %FBSTRING* %vr16183 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16187, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr16190 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr16189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16190, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16189
	%vr16193 = bitcast %FBSTRING* %vr16189 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16193, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083B
	%vr16196 = bitcast i8* bitcast ([13 x i8]* @Lt_083B to i8*) to i8*
	; arg 12
	%vr16195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16196, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr16195
	%vr16199 = bitcast %FBSTRING* %vr16195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16199, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16202 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16201 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16202, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16201
	%vr16205 = bitcast %FBSTRING* %vr16201 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16205, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16208 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16208, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16207
	%vr16211 = bitcast %FBSTRING* %vr16207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16211, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A53
	%vr16214 = bitcast i8* bitcast ([59 x i8]* @Lt_0A53 to i8*) to i8*
	; arg 58
	%vr16213 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16214, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr16213
	%vr16217 = bitcast %FBSTRING* %vr16213 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16217, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A54
	%vr16220 = bitcast i8* bitcast ([24 x i8]* @Lt_0A54 to i8*) to i8*
	; arg 23
	%vr16219 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16220, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16219
	%vr16223 = bitcast %FBSTRING* %vr16219 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16223, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A55
	%vr16226 = bitcast i8* bitcast ([33 x i8]* @Lt_0A55 to i8*) to i8*
	; arg 32
	%vr16225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16226, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16225
	%vr16229 = bitcast %FBSTRING* %vr16225 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16229, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16232 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16231 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16232, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16231
	%vr16235 = bitcast %FBSTRING* %vr16231 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16235, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A56
	%vr16238 = bitcast i8* bitcast ([41 x i8]* @Lt_0A56 to i8*) to i8*
	; arg 40
	%vr16237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16238, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr16237
	%vr16241 = bitcast %FBSTRING* %vr16237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16241, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A57
	%vr16244 = bitcast i8* bitcast ([33 x i8]* @Lt_0A57 to i8*) to i8*
	; arg 32
	%vr16243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16244, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16243
	%vr16247 = bitcast %FBSTRING* %vr16243 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16247, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A58
	%vr16250 = bitcast i8* bitcast ([19 x i8]* @Lt_0A58 to i8*) to i8*
	; arg 18
	%vr16249 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16250, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr16249
	%vr16253 = bitcast %FBSTRING* %vr16249 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16253, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A59
	%vr16256 = bitcast i8* bitcast ([10 x i8]* @Lt_0A59 to i8*) to i8*
	; arg 9
	%vr16255 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16256, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr16255
	%vr16259 = bitcast %FBSTRING* %vr16255 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16259, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5A
	%vr16262 = bitcast i8* bitcast ([58 x i8]* @Lt_0A5A to i8*) to i8*
	; arg 57
	%vr16261 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16262, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr16261
	%vr16265 = bitcast %FBSTRING* %vr16261 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16265, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5B
	%vr16268 = bitcast i8* bitcast ([58 x i8]* @Lt_0A5B to i8*) to i8*
	; arg 57
	%vr16267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16268, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr16267
	%vr16271 = bitcast %FBSTRING* %vr16267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16271, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5C
	%vr16274 = bitcast i8* bitcast ([40 x i8]* @Lt_0A5C to i8*) to i8*
	; arg 39
	%vr16273 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16274, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr16273
	%vr16277 = bitcast %FBSTRING* %vr16273 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16277, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16280 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16279 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16280, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16279
	%vr16283 = bitcast %FBSTRING* %vr16279 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16283, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5D
	%vr16286 = bitcast i8* bitcast ([18 x i8]* @Lt_0A5D to i8*) to i8*
	; arg 17
	%vr16285 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16286, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr16285
	%vr16289 = bitcast %FBSTRING* %vr16285 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16289, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5E
	%vr16292 = bitcast i8* bitcast ([22 x i8]* @Lt_0A5E to i8*) to i8*
	; arg 21
	%vr16291 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16292, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr16291
	%vr16295 = bitcast %FBSTRING* %vr16291 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16295, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5F
	%vr16298 = bitcast i8* bitcast ([37 x i8]* @Lt_0A5F to i8*) to i8*
	; arg 36
	%vr16297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16298, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr16297
	%vr16301 = bitcast %FBSTRING* %vr16297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16301, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr16304 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr16303 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16304, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16303
	%vr16307 = bitcast %FBSTRING* %vr16303 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16307, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A60
	%vr16310 = bitcast i8* bitcast ([49 x i8]* @Lt_0A60 to i8*) to i8*
	; arg 48
	%vr16309 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16310, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16309
	%vr16313 = bitcast %FBSTRING* %vr16309 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16313, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A61
	%vr16316 = bitcast i8* bitcast ([40 x i8]* @Lt_0A61 to i8*) to i8*
	; arg 39
	%vr16315 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16316, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr16315
	%vr16319 = bitcast %FBSTRING* %vr16315 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16319, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16322 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16321 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16322, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16321
	%vr16325 = bitcast %FBSTRING* %vr16321 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16325, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16328 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16328, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16327
	%vr16331 = bitcast %FBSTRING* %vr16327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16331, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A62
	%vr16334 = bitcast i8* bitcast ([40 x i8]* @Lt_0A62 to i8*) to i8*
	; arg 39
	%vr16333 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16334, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr16333
	%vr16337 = bitcast %FBSTRING* %vr16333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16337, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A63
	%vr16340 = bitcast i8* bitcast ([49 x i8]* @Lt_0A63 to i8*) to i8*
	; arg 48
	%vr16339 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16340, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16339
	%vr16343 = bitcast %FBSTRING* %vr16339 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16343, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A64
	%vr16346 = bitcast i8* bitcast ([42 x i8]* @Lt_0A64 to i8*) to i8*
	; arg 41
	%vr16345 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16346, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr16345
	%vr16349 = bitcast %FBSTRING* %vr16345 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16349, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A65
	%vr16352 = bitcast i8* bitcast ([22 x i8]* @Lt_0A65 to i8*) to i8*
	; arg 21
	%vr16351 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16352, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr16351
	%vr16355 = bitcast %FBSTRING* %vr16351 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16355, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16358 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16358, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16357
	%vr16361 = bitcast %FBSTRING* %vr16357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16361, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A66
	%vr16364 = bitcast i8* bitcast ([20 x i8]* @Lt_0A66 to i8*) to i8*
	; arg 19
	%vr16363 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16364, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr16363
	%vr16367 = bitcast %FBSTRING* %vr16363 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16367, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A67
	%vr16370 = bitcast i8* bitcast ([37 x i8]* @Lt_0A67 to i8*) to i8*
	; arg 36
	%vr16369 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16370, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr16369
	%vr16373 = bitcast %FBSTRING* %vr16369 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16373, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr16376 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr16375 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16376, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr16375
	%vr16379 = bitcast %FBSTRING* %vr16375 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16379, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A68
	%vr16382 = bitcast i8* bitcast ([32 x i8]* @Lt_0A68 to i8*) to i8*
	; arg 31
	%vr16381 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16382, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr16381
	%vr16385 = bitcast %FBSTRING* %vr16381 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16385, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr16388 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr16387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16388, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr16387
	%vr16391 = bitcast %FBSTRING* %vr16387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16391, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A69
	%vr16394 = bitcast i8* bitcast ([67 x i8]* @Lt_0A69 to i8*) to i8*
	; arg 66
	%vr16393 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16394, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr16393
	%vr16397 = bitcast %FBSTRING* %vr16393 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16397, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6A
	%vr16400 = bitcast i8* bitcast ([66 x i8]* @Lt_0A6A to i8*) to i8*
	; arg 65
	%vr16399 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16400, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr16399
	%vr16403 = bitcast %FBSTRING* %vr16399 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16403, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16406 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16405 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16406, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16405
	%vr16409 = bitcast %FBSTRING* %vr16405 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16409, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6B
	%vr16412 = bitcast i8* bitcast ([52 x i8]* @Lt_0A6B to i8*) to i8*
	; arg 51
	%vr16411 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16412, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16411
	%vr16415 = bitcast %FBSTRING* %vr16411 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16415, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6C
	%vr16418 = bitcast i8* bitcast ([19 x i8]* @Lt_0A6C to i8*) to i8*
	; arg 18
	%vr16417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16418, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr16417
	%vr16421 = bitcast %FBSTRING* %vr16417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16421, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6D
	%vr16424 = bitcast i8* bitcast ([28 x i8]* @Lt_0A6D to i8*) to i8*
	; arg 27
	%vr16423 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16424, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16423
	%vr16427 = bitcast %FBSTRING* %vr16423 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16427, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16430 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16429 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16430, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16429
	%vr16433 = bitcast %FBSTRING* %vr16429 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16433, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6E
	%vr16436 = bitcast i8* bitcast ([49 x i8]* @Lt_0A6E to i8*) to i8*
	; arg 48
	%vr16435 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16436, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16435
	%vr16439 = bitcast %FBSTRING* %vr16435 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16439, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr16442 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr16441 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16442, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr16441
	%vr16445 = bitcast %FBSTRING* %vr16441 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16445, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6F
	%vr16448 = bitcast i8* bitcast ([39 x i8]* @Lt_0A6F to i8*) to i8*
	; arg 38
	%vr16447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16448, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16447
	%vr16451 = bitcast %FBSTRING* %vr16447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16451, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr16454 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr16453 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16454, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16453
	%vr16457 = bitcast %FBSTRING* %vr16453 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16457, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A70
	%vr16460 = bitcast i8* bitcast ([26 x i8]* @Lt_0A70 to i8*) to i8*
	; arg 25
	%vr16459 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16460, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16459
	%vr16463 = bitcast %FBSTRING* %vr16459 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16463, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16466 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16465 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16466, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16465
	%vr16469 = bitcast %FBSTRING* %vr16465 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16469, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16472 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16471 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16472, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16471
	%vr16475 = bitcast %FBSTRING* %vr16471 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16475, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A71
	%vr16478 = bitcast i8* bitcast ([33 x i8]* @Lt_0A71 to i8*) to i8*
	; arg 32
	%vr16477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16478, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16477
	%vr16481 = bitcast %FBSTRING* %vr16477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16481, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16484 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16483 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16484, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16483
	%vr16487 = bitcast %FBSTRING* %vr16483 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16487, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A72
	%vr16490 = bitcast i8* bitcast ([24 x i8]* @Lt_0A72 to i8*) to i8*
	; arg 23
	%vr16489 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16490, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16489
	%vr16493 = bitcast %FBSTRING* %vr16489 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16493, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A73
	%vr16496 = bitcast i8* bitcast ([25 x i8]* @Lt_0A73 to i8*) to i8*
	; arg 24
	%vr16495 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16496, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr16495
	%vr16499 = bitcast %FBSTRING* %vr16495 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16499, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A74
	%vr16502 = bitcast i8* bitcast ([49 x i8]* @Lt_0A74 to i8*) to i8*
	; arg 48
	%vr16501 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16502, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16501
	%vr16505 = bitcast %FBSTRING* %vr16501 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16505, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16508 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16508, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16507
	%vr16511 = bitcast %FBSTRING* %vr16507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16511, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A75
	%vr16514 = bitcast i8* bitcast ([62 x i8]* @Lt_0A75 to i8*) to i8*
	; arg 61
	%vr16513 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16514, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr16513
	%vr16517 = bitcast %FBSTRING* %vr16513 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16517, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A76
	%vr16520 = bitcast i8* bitcast ([33 x i8]* @Lt_0A76 to i8*) to i8*
	; arg 32
	%vr16519 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16520, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16519
	%vr16523 = bitcast %FBSTRING* %vr16519 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16523, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16526 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16525 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16526, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16525
	%vr16529 = bitcast %FBSTRING* %vr16525 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16529, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A77
	%vr16532 = bitcast i8* bitcast ([68 x i8]* @Lt_0A77 to i8*) to i8*
	; arg 67
	%vr16531 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16532, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr16531
	%vr16535 = bitcast %FBSTRING* %vr16531 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16535, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A78
	%vr16538 = bitcast i8* bitcast ([27 x i8]* @Lt_0A78 to i8*) to i8*
	; arg 26
	%vr16537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16538, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16537
	%vr16541 = bitcast %FBSTRING* %vr16537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16541, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A79
	%vr16544 = bitcast i8* bitcast ([42 x i8]* @Lt_0A79 to i8*) to i8*
	; arg 41
	%vr16543 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16544, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr16543
	%vr16547 = bitcast %FBSTRING* %vr16543 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16547, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7A
	%vr16550 = bitcast i8* bitcast ([43 x i8]* @Lt_0A7A to i8*) to i8*
	; arg 42
	%vr16549 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16550, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr16549
	%vr16553 = bitcast %FBSTRING* %vr16549 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16553, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7B
	%vr16556 = bitcast i8* bitcast ([20 x i8]* @Lt_0A7B to i8*) to i8*
	; arg 19
	%vr16555 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16556, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr16555
	%vr16559 = bitcast %FBSTRING* %vr16555 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16559, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7C
	%vr16562 = bitcast i8* bitcast ([25 x i8]* @Lt_0A7C to i8*) to i8*
	; arg 24
	%vr16561 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16562, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr16561
	%vr16565 = bitcast %FBSTRING* %vr16561 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16565, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7D
	%vr16568 = bitcast i8* bitcast ([39 x i8]* @Lt_0A7D to i8*) to i8*
	; arg 38
	%vr16567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16568, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16567
	%vr16571 = bitcast %FBSTRING* %vr16567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16571, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16574 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16573 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16574, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16573
	%vr16577 = bitcast %FBSTRING* %vr16573 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16577, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7E
	%vr16580 = bitcast i8* bitcast ([16 x i8]* @Lt_0A7E to i8*) to i8*
	; arg 15
	%vr16579 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16580, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr16579
	%vr16583 = bitcast %FBSTRING* %vr16579 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16583, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16586 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16585 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16586, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16585
	%vr16589 = bitcast %FBSTRING* %vr16585 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16589, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16592 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16591 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16592, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16591
	%vr16595 = bitcast %FBSTRING* %vr16591 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16595, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7F
	%vr16598 = bitcast i8* bitcast ([28 x i8]* @Lt_0A7F to i8*) to i8*
	; arg 27
	%vr16597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16598, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16597
	%vr16601 = bitcast %FBSTRING* %vr16597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16601, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16604 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16603 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16604, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16603
	%vr16607 = bitcast %FBSTRING* %vr16603 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16607, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A80
	%vr16610 = bitcast i8* bitcast ([62 x i8]* @Lt_0A80 to i8*) to i8*
	; arg 61
	%vr16609 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16610, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr16609
	%vr16613 = bitcast %FBSTRING* %vr16609 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16613, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A81
	%vr16616 = bitcast i8* bitcast ([39 x i8]* @Lt_0A81 to i8*) to i8*
	; arg 38
	%vr16615 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16616, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16615
	%vr16619 = bitcast %FBSTRING* %vr16615 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16619, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A82
	%vr16622 = bitcast i8* bitcast ([34 x i8]* @Lt_0A82 to i8*) to i8*
	; arg 33
	%vr16621 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16622, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr16621
	%vr16625 = bitcast %FBSTRING* %vr16621 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16625, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7C
	%vr16628 = bitcast i8* bitcast ([25 x i8]* @Lt_0A7C to i8*) to i8*
	; arg 24
	%vr16627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16628, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr16627
	%vr16631 = bitcast %FBSTRING* %vr16627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16631, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A83
	%vr16634 = bitcast i8* bitcast ([47 x i8]* @Lt_0A83 to i8*) to i8*
	; arg 46
	%vr16633 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16634, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr16633
	%vr16637 = bitcast %FBSTRING* %vr16633 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16637, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16640 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16639 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16640, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16639
	%vr16643 = bitcast %FBSTRING* %vr16639 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16643, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A84
	%vr16646 = bitcast i8* bitcast ([3 x i8]* @Lt_0A84 to i8*) to i8*
	; arg 2
	%vr16645 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16646, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr16645
	%vr16649 = bitcast %FBSTRING* %vr16645 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16649, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16652 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16651 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16652, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16651
	%vr16655 = bitcast %FBSTRING* %vr16651 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16655, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A85
	%vr16658 = bitcast i8* bitcast ([28 x i8]* @Lt_0A85 to i8*) to i8*
	; arg 27
	%vr16657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16658, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16657
	%vr16661 = bitcast %FBSTRING* %vr16657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16661, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16664 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16663 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16664, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16663
	%vr16667 = bitcast %FBSTRING* %vr16663 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16667, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16670 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16669 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16670, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16669
	%vr16673 = bitcast %FBSTRING* %vr16669 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16673, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A86
	%vr16676 = bitcast i8* bitcast ([75 x i8]* @Lt_0A86 to i8*) to i8*
	; arg 74
	%vr16675 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16676, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr16675
	%vr16679 = bitcast %FBSTRING* %vr16675 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16679, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A87
	%vr16682 = bitcast i8* bitcast ([82 x i8]* @Lt_0A87 to i8*) to i8*
	; arg 81
	%vr16681 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16682, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr16681
	%vr16685 = bitcast %FBSTRING* %vr16681 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16685, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A88
	%vr16688 = bitcast i8* bitcast ([30 x i8]* @Lt_0A88 to i8*) to i8*
	; arg 29
	%vr16687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16688, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr16687
	%vr16691 = bitcast %FBSTRING* %vr16687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16691, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16694 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16693 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16694, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16693
	%vr16697 = bitcast %FBSTRING* %vr16693 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16697, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A89
	%vr16700 = bitcast i8* bitcast ([35 x i8]* @Lt_0A89 to i8*) to i8*
	; arg 34
	%vr16699 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16700, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr16699
	%vr16703 = bitcast %FBSTRING* %vr16699 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16703, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8A
	%vr16706 = bitcast i8* bitcast ([33 x i8]* @Lt_0A8A to i8*) to i8*
	; arg 32
	%vr16705 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16706, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16705
	%vr16709 = bitcast %FBSTRING* %vr16705 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16709, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8B
	%vr16712 = bitcast i8* bitcast ([26 x i8]* @Lt_0A8B to i8*) to i8*
	; arg 25
	%vr16711 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16712, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16711
	%vr16715 = bitcast %FBSTRING* %vr16711 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16715, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16718 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16718, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16717
	%vr16721 = bitcast %FBSTRING* %vr16717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16721, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16724 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16723 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16724, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16723
	%vr16727 = bitcast %FBSTRING* %vr16723 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16727, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8C
	%vr16730 = bitcast i8* bitcast ([38 x i8]* @Lt_0A8C to i8*) to i8*
	; arg 37
	%vr16729 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16730, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16729
	%vr16733 = bitcast %FBSTRING* %vr16729 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16733, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A72
	%vr16736 = bitcast i8* bitcast ([24 x i8]* @Lt_0A72 to i8*) to i8*
	; arg 23
	%vr16735 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16736, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16735
	%vr16739 = bitcast %FBSTRING* %vr16735 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16739, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8D
	%vr16742 = bitcast i8* bitcast ([34 x i8]* @Lt_0A8D to i8*) to i8*
	; arg 33
	%vr16741 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16742, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr16741
	%vr16745 = bitcast %FBSTRING* %vr16741 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16745, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8E
	%vr16748 = bitcast i8* bitcast ([28 x i8]* @Lt_0A8E to i8*) to i8*
	; arg 27
	%vr16747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16748, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16747
	%vr16751 = bitcast %FBSTRING* %vr16747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16751, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8F
	%vr16754 = bitcast i8* bitcast ([56 x i8]* @Lt_0A8F to i8*) to i8*
	; arg 55
	%vr16753 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16754, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr16753
	%vr16757 = bitcast %FBSTRING* %vr16753 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16757, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A90
	%vr16760 = bitcast i8* bitcast ([44 x i8]* @Lt_0A90 to i8*) to i8*
	; arg 43
	%vr16759 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16760, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr16759
	%vr16763 = bitcast %FBSTRING* %vr16759 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16763, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A91
	%vr16766 = bitcast i8* bitcast ([13 x i8]* @Lt_0A91 to i8*) to i8*
	; arg 12
	%vr16765 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16766, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr16765
	%vr16769 = bitcast %FBSTRING* %vr16765 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16769, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A92
	%vr16772 = bitcast i8* bitcast ([39 x i8]* @Lt_0A92 to i8*) to i8*
	; arg 38
	%vr16771 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16772, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16771
	%vr16775 = bitcast %FBSTRING* %vr16771 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16775, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr16778 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr16777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16778, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16777
	%vr16781 = bitcast %FBSTRING* %vr16777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16781, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16784 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16783 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16784, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16783
	%vr16787 = bitcast %FBSTRING* %vr16783 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16787, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A93
	%vr16790 = bitcast i8* bitcast ([14 x i8]* @Lt_0A93 to i8*) to i8*
	; arg 13
	%vr16789 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16790, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr16789
	%vr16793 = bitcast %FBSTRING* %vr16789 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16793, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16796 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16795 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16796, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16795
	%vr16799 = bitcast %FBSTRING* %vr16795 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16799, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A94
	%vr16802 = bitcast i8* bitcast ([4 x i8]* @Lt_0A94 to i8*) to i8*
	; arg 3
	%vr16801 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16802, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr16801
	%vr16805 = bitcast %FBSTRING* %vr16801 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16805, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16808 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16808, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16807
	%vr16811 = bitcast %FBSTRING* %vr16807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16811, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A95
	%vr16814 = bitcast i8* bitcast ([17 x i8]* @Lt_0A95 to i8*) to i8*
	; arg 16
	%vr16813 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16814, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr16813
	%vr16817 = bitcast %FBSTRING* %vr16813 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16817, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16820 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16819 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16820, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16819
	%vr16823 = bitcast %FBSTRING* %vr16819 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16823, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A96
	%vr16826 = bitcast i8* bitcast ([54 x i8]* @Lt_0A96 to i8*) to i8*
	; arg 53
	%vr16825 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16826, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr16825
	%vr16829 = bitcast %FBSTRING* %vr16825 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16829, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A97
	%vr16832 = bitcast i8* bitcast ([24 x i8]* @Lt_0A97 to i8*) to i8*
	; arg 23
	%vr16831 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16832, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16831
	%vr16835 = bitcast %FBSTRING* %vr16831 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16835, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A98
	%vr16838 = bitcast i8* bitcast ([43 x i8]* @Lt_0A98 to i8*) to i8*
	; arg 42
	%vr16837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16838, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr16837
	%vr16841 = bitcast %FBSTRING* %vr16837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16841, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A99
	%vr16844 = bitcast i8* bitcast ([28 x i8]* @Lt_0A99 to i8*) to i8*
	; arg 27
	%vr16843 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16844, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16843
	%vr16847 = bitcast %FBSTRING* %vr16843 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16847, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9A
	%vr16850 = bitcast i8* bitcast ([33 x i8]* @Lt_0A9A to i8*) to i8*
	; arg 32
	%vr16849 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16850, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16849
	%vr16853 = bitcast %FBSTRING* %vr16849 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16853, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9B
	%vr16856 = bitcast i8* bitcast ([42 x i8]* @Lt_0A9B to i8*) to i8*
	; arg 41
	%vr16855 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16856, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr16855
	%vr16859 = bitcast %FBSTRING* %vr16855 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16859, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9C
	%vr16862 = bitcast i8* bitcast ([51 x i8]* @Lt_0A9C to i8*) to i8*
	; arg 50
	%vr16861 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16862, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr16861
	%vr16865 = bitcast %FBSTRING* %vr16861 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16865, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9D
	%vr16868 = bitcast i8* bitcast ([48 x i8]* @Lt_0A9D to i8*) to i8*
	; arg 47
	%vr16867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16868, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr16867
	%vr16871 = bitcast %FBSTRING* %vr16867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16871, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9E
	%vr16874 = bitcast i8* bitcast ([37 x i8]* @Lt_0A9E to i8*) to i8*
	; arg 36
	%vr16873 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16874, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr16873
	%vr16877 = bitcast %FBSTRING* %vr16873 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16877, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9F
	%vr16880 = bitcast i8* bitcast ([12 x i8]* @Lt_0A9F to i8*) to i8*
	; arg 11
	%vr16879 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16880, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr16879
	%vr16883 = bitcast %FBSTRING* %vr16879 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16883, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA0
	%vr16886 = bitcast i8* bitcast ([80 x i8]* @Lt_0AA0 to i8*) to i8*
	; arg 79
	%vr16885 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16886, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr16885
	%vr16889 = bitcast %FBSTRING* %vr16885 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16889, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA1
	%vr16892 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA1 to i8*) to i8*
	; arg 14
	%vr16891 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16892, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr16891
	%vr16895 = bitcast %FBSTRING* %vr16891 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16895, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA2
	%vr16898 = bitcast i8* bitcast ([74 x i8]* @Lt_0AA2 to i8*) to i8*
	; arg 73
	%vr16897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16898, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr16897
	%vr16901 = bitcast %FBSTRING* %vr16897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16901, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16904 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16903 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16904, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16903
	%vr16907 = bitcast %FBSTRING* %vr16903 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16907, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16910 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16909 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16910, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16909
	%vr16913 = bitcast %FBSTRING* %vr16909 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16913, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA3
	%vr16916 = bitcast i8* bitcast ([30 x i8]* @Lt_0AA3 to i8*) to i8*
	; arg 29
	%vr16915 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16916, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr16915
	%vr16919 = bitcast %FBSTRING* %vr16915 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16919, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA4
	%vr16922 = bitcast i8* bitcast ([27 x i8]* @Lt_0AA4 to i8*) to i8*
	; arg 26
	%vr16921 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16922, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16921
	%vr16925 = bitcast %FBSTRING* %vr16921 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16925, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr16928 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr16927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16928, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16927
	%vr16931 = bitcast %FBSTRING* %vr16927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16931, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr16934 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 14
	%vr16933 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16934, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr16933
	%vr16937 = bitcast %FBSTRING* %vr16933 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16937, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr16940 = bitcast i8* bitcast ([26 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 25
	%vr16939 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16940, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16939
	%vr16943 = bitcast %FBSTRING* %vr16939 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16943, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16946 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16945 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16946, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16945
	%vr16949 = bitcast %FBSTRING* %vr16945 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16949, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr16952 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 31
	%vr16951 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16952, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr16951
	%vr16955 = bitcast %FBSTRING* %vr16951 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16955, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr16958 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 31
	%vr16957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16958, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr16957
	%vr16961 = bitcast %FBSTRING* %vr16957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16961, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr16964 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr16963 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16964, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16963
	%vr16967 = bitcast %FBSTRING* %vr16963 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16967, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16970 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16969 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16970, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16969
	%vr16973 = bitcast %FBSTRING* %vr16969 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16973, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA9
	%vr16976 = bitcast i8* bitcast ([27 x i8]* @Lt_0AA9 to i8*) to i8*
	; arg 26
	%vr16975 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16976, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16975
	%vr16979 = bitcast %FBSTRING* %vr16975 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16979, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr16982 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 14
	%vr16981 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16982, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr16981
	%vr16985 = bitcast %FBSTRING* %vr16981 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16985, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr16988 = bitcast i8* bitcast ([26 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 25
	%vr16987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16988, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16987
	%vr16991 = bitcast %FBSTRING* %vr16987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16991, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr16994 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr16993 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16994, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16993
	%vr16997 = bitcast %FBSTRING* %vr16993 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16997, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAA
	%vr17000 = bitcast i8* bitcast ([14 x i8]* @Lt_0AAA to i8*) to i8*
	; arg 13
	%vr16999 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17000, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr16999
	%vr17003 = bitcast %FBSTRING* %vr16999 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17003, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr17006 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 31
	%vr17005 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17006, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17005
	%vr17009 = bitcast %FBSTRING* %vr17005 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17009, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAB
	%vr17012 = bitcast i8* bitcast ([14 x i8]* @Lt_0AAB to i8*) to i8*
	; arg 13
	%vr17011 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17012, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17011
	%vr17015 = bitcast %FBSTRING* %vr17011 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17015, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr17018 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 31
	%vr17017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17018, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17017
	%vr17021 = bitcast %FBSTRING* %vr17017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17021, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17024 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17023 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17024, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17023
	%vr17027 = bitcast %FBSTRING* %vr17023 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17027, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17030 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17029 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17030, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17029
	%vr17033 = bitcast %FBSTRING* %vr17029 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17033, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAC
	%vr17036 = bitcast i8* bitcast ([27 x i8]* @Lt_0AAC to i8*) to i8*
	; arg 26
	%vr17035 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17036, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17035
	%vr17039 = bitcast %FBSTRING* %vr17035 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17039, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr17042 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 14
	%vr17041 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17042, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr17041
	%vr17045 = bitcast %FBSTRING* %vr17041 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17045, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr17048 = bitcast i8* bitcast ([26 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 25
	%vr17047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17048, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17047
	%vr17051 = bitcast %FBSTRING* %vr17047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17051, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17054 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17053 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17054, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17053
	%vr17057 = bitcast %FBSTRING* %vr17053 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17057, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAD
	%vr17060 = bitcast i8* bitcast ([14 x i8]* @Lt_0AAD to i8*) to i8*
	; arg 13
	%vr17059 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17060, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17059
	%vr17063 = bitcast %FBSTRING* %vr17059 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17063, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr17066 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 31
	%vr17065 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17066, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17065
	%vr17069 = bitcast %FBSTRING* %vr17065 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17069, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAE
	%vr17072 = bitcast i8* bitcast ([14 x i8]* @Lt_0AAE to i8*) to i8*
	; arg 13
	%vr17071 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17072, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17071
	%vr17075 = bitcast %FBSTRING* %vr17071 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17075, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr17078 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 31
	%vr17077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17078, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17077
	%vr17081 = bitcast %FBSTRING* %vr17077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17081, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17084 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17083 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17084, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17083
	%vr17087 = bitcast %FBSTRING* %vr17083 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17087, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17090 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17089 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17090, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17089
	%vr17093 = bitcast %FBSTRING* %vr17089 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17093, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAF
	%vr17096 = bitcast i8* bitcast ([27 x i8]* @Lt_0AAF to i8*) to i8*
	; arg 26
	%vr17095 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17096, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17095
	%vr17099 = bitcast %FBSTRING* %vr17095 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17099, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr17102 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 14
	%vr17101 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17102, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr17101
	%vr17105 = bitcast %FBSTRING* %vr17101 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17105, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr17108 = bitcast i8* bitcast ([26 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 25
	%vr17107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17108, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17107
	%vr17111 = bitcast %FBSTRING* %vr17107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17111, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17114 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17113 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17114, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17113
	%vr17117 = bitcast %FBSTRING* %vr17113 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17117, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB0
	%vr17120 = bitcast i8* bitcast ([14 x i8]* @Lt_0AB0 to i8*) to i8*
	; arg 13
	%vr17119 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17120, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17119
	%vr17123 = bitcast %FBSTRING* %vr17119 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17123, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr17126 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 31
	%vr17125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17126, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17125
	%vr17129 = bitcast %FBSTRING* %vr17125 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17129, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB1
	%vr17132 = bitcast i8* bitcast ([14 x i8]* @Lt_0AB1 to i8*) to i8*
	; arg 13
	%vr17131 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17132, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17131
	%vr17135 = bitcast %FBSTRING* %vr17131 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17135, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr17138 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 31
	%vr17137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17138, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17137
	%vr17141 = bitcast %FBSTRING* %vr17137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17141, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17144 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17143 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17144, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17143
	%vr17147 = bitcast %FBSTRING* %vr17143 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17147, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17150 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17149 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17150, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17149
	%vr17153 = bitcast %FBSTRING* %vr17149 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17153, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB2
	%vr17156 = bitcast i8* bitcast ([27 x i8]* @Lt_0AB2 to i8*) to i8*
	; arg 26
	%vr17155 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17156, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17155
	%vr17159 = bitcast %FBSTRING* %vr17155 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17159, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr17162 = bitcast i8* bitcast ([15 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 14
	%vr17161 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17162, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr17161
	%vr17165 = bitcast %FBSTRING* %vr17161 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17165, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr17168 = bitcast i8* bitcast ([26 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 25
	%vr17167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17168, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17167
	%vr17171 = bitcast %FBSTRING* %vr17167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17171, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17174 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17173 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17174, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17173
	%vr17177 = bitcast %FBSTRING* %vr17173 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17177, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB3
	%vr17180 = bitcast i8* bitcast ([14 x i8]* @Lt_0AB3 to i8*) to i8*
	; arg 13
	%vr17179 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17180, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17179
	%vr17183 = bitcast %FBSTRING* %vr17179 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17183, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr17186 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 31
	%vr17185 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17186, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17185
	%vr17189 = bitcast %FBSTRING* %vr17185 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17189, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB4
	%vr17192 = bitcast i8* bitcast ([14 x i8]* @Lt_0AB4 to i8*) to i8*
	; arg 13
	%vr17191 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17192, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17191
	%vr17195 = bitcast %FBSTRING* %vr17191 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17195, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr17198 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 31
	%vr17197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17198, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17197
	%vr17201 = bitcast %FBSTRING* %vr17197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17201, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17204 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17203 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17204, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17203
	%vr17207 = bitcast %FBSTRING* %vr17203 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17207, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17210 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17209 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17210, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17209
	%vr17213 = bitcast %FBSTRING* %vr17209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17213, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17216 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17215 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17216, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17215
	%vr17219 = bitcast %FBSTRING* %vr17215 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17219, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17222 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17221 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17222, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17221
	%vr17225 = bitcast %FBSTRING* %vr17221 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17225, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB5
	%vr17228 = bitcast i8* bitcast ([32 x i8]* @Lt_0AB5 to i8*) to i8*
	; arg 31
	%vr17227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17228, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17227
	%vr17231 = bitcast %FBSTRING* %vr17227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17231, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB6
	%vr17234 = bitcast i8* bitcast ([37 x i8]* @Lt_0AB6 to i8*) to i8*
	; arg 36
	%vr17233 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17234, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17233
	%vr17237 = bitcast %FBSTRING* %vr17233 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17237, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr17240 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr17239 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17240, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17239
	%vr17243 = bitcast %FBSTRING* %vr17239 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17243, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB7
	%vr17246 = bitcast i8* bitcast ([46 x i8]* @Lt_0AB7 to i8*) to i8*
	; arg 45
	%vr17245 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17246, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr17245
	%vr17249 = bitcast %FBSTRING* %vr17245 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17249, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB8
	%vr17252 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB8 to i8*) to i8*
	; arg 23
	%vr17251 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17252, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17251
	%vr17255 = bitcast %FBSTRING* %vr17251 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17255, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB9
	%vr17258 = bitcast i8* bitcast ([33 x i8]* @Lt_0AB9 to i8*) to i8*
	; arg 32
	%vr17257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17258, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr17257
	%vr17261 = bitcast %FBSTRING* %vr17257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17261, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABA
	%vr17264 = bitcast i8* bitcast ([17 x i8]* @Lt_0ABA to i8*) to i8*
	; arg 16
	%vr17263 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17264, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr17263
	%vr17267 = bitcast %FBSTRING* %vr17263 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17267, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17270 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17269 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17270, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17269
	%vr17273 = bitcast %FBSTRING* %vr17269 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17273, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17276 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17275 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17276, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17275
	%vr17279 = bitcast %FBSTRING* %vr17275 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17279, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17282 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17281 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17282, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17281
	%vr17285 = bitcast %FBSTRING* %vr17281 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17285, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr17288 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr17287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17288, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17287
	%vr17291 = bitcast %FBSTRING* %vr17287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17291, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17294 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17293 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17294, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17293
	%vr17297 = bitcast %FBSTRING* %vr17293 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17297, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABB
	%vr17300 = bitcast i8* bitcast ([21 x i8]* @Lt_0ABB to i8*) to i8*
	; arg 20
	%vr17299 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17300, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17299
	%vr17303 = bitcast %FBSTRING* %vr17299 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17303, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB5
	%vr17306 = bitcast i8* bitcast ([32 x i8]* @Lt_0AB5 to i8*) to i8*
	; arg 31
	%vr17305 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17306, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17305
	%vr17309 = bitcast %FBSTRING* %vr17305 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17309, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr17312 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr17311 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17312, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17311
	%vr17315 = bitcast %FBSTRING* %vr17311 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17315, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr17318 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr17317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17318, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17317
	%vr17321 = bitcast %FBSTRING* %vr17317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17321, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB6
	%vr17324 = bitcast i8* bitcast ([37 x i8]* @Lt_0AB6 to i8*) to i8*
	; arg 36
	%vr17323 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17324, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17323
	%vr17327 = bitcast %FBSTRING* %vr17323 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17327, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr17330 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr17329 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17330, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17329
	%vr17333 = bitcast %FBSTRING* %vr17329 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17333, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABC
	%vr17336 = bitcast i8* bitcast ([46 x i8]* @Lt_0ABC to i8*) to i8*
	; arg 45
	%vr17335 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17336, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr17335
	%vr17339 = bitcast %FBSTRING* %vr17335 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17339, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17342 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17341 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17342, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17341
	%vr17345 = bitcast %FBSTRING* %vr17341 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17345, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABD
	%vr17348 = bitcast i8* bitcast ([43 x i8]* @Lt_0ABD to i8*) to i8*
	; arg 42
	%vr17347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17348, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr17347
	%vr17351 = bitcast %FBSTRING* %vr17347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17351, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABE
	%vr17354 = bitcast i8* bitcast ([27 x i8]* @Lt_0ABE to i8*) to i8*
	; arg 26
	%vr17353 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17354, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17353
	%vr17357 = bitcast %FBSTRING* %vr17353 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17357, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr17360 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr17359 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17360, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr17359
	%vr17363 = bitcast %FBSTRING* %vr17359 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17363, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABF
	%vr17366 = bitcast i8* bitcast ([21 x i8]* @Lt_0ABF to i8*) to i8*
	; arg 20
	%vr17365 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17366, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17365
	%vr17369 = bitcast %FBSTRING* %vr17365 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17369, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC0
	%vr17372 = bitcast i8* bitcast ([48 x i8]* @Lt_0AC0 to i8*) to i8*
	; arg 47
	%vr17371 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17372, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17371
	%vr17375 = bitcast %FBSTRING* %vr17371 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17375, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC1
	%vr17378 = bitcast i8* bitcast ([37 x i8]* @Lt_0AC1 to i8*) to i8*
	; arg 36
	%vr17377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17378, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17377
	%vr17381 = bitcast %FBSTRING* %vr17377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17381, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC2
	%vr17384 = bitcast i8* bitcast ([59 x i8]* @Lt_0AC2 to i8*) to i8*
	; arg 58
	%vr17383 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17384, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr17383
	%vr17387 = bitcast %FBSTRING* %vr17383 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17387, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC3
	%vr17390 = bitcast i8* bitcast ([47 x i8]* @Lt_0AC3 to i8*) to i8*
	; arg 46
	%vr17389 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17390, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr17389
	%vr17393 = bitcast %FBSTRING* %vr17389 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17393, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC4
	%vr17396 = bitcast i8* bitcast ([52 x i8]* @Lt_0AC4 to i8*) to i8*
	; arg 51
	%vr17395 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17396, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17395
	%vr17399 = bitcast %FBSTRING* %vr17395 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17399, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC5
	%vr17402 = bitcast i8* bitcast ([52 x i8]* @Lt_0AC5 to i8*) to i8*
	; arg 51
	%vr17401 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17402, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17401
	%vr17405 = bitcast %FBSTRING* %vr17401 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17405, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC6
	%vr17408 = bitcast i8* bitcast ([41 x i8]* @Lt_0AC6 to i8*) to i8*
	; arg 40
	%vr17407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17408, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr17407
	%vr17411 = bitcast %FBSTRING* %vr17407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17411, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC7
	%vr17414 = bitcast i8* bitcast ([16 x i8]* @Lt_0AC7 to i8*) to i8*
	; arg 15
	%vr17413 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17414, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr17413
	%vr17417 = bitcast %FBSTRING* %vr17413 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17417, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC8
	%vr17420 = bitcast i8* bitcast ([93 x i8]* @Lt_0AC8 to i8*) to i8*
	; arg 92
	%vr17419 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17420, i64 92 )

	; call fb_PrintString()
	; arg 1
	; arg vr17419
	%vr17423 = bitcast %FBSTRING* %vr17419 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17423, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC9
	%vr17426 = bitcast i8* bitcast ([19 x i8]* @Lt_0AC9 to i8*) to i8*
	; arg 18
	%vr17425 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17426, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr17425
	%vr17429 = bitcast %FBSTRING* %vr17425 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17429, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACA
	%vr17432 = bitcast i8* bitcast ([89 x i8]* @Lt_0ACA to i8*) to i8*
	; arg 88
	%vr17431 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17432, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr17431
	%vr17435 = bitcast %FBSTRING* %vr17431 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17435, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr17438 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr17437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17438, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17437
	%vr17441 = bitcast %FBSTRING* %vr17437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17441, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17444 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17443 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17444, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17443
	%vr17447 = bitcast %FBSTRING* %vr17443 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17447, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACB
	%vr17450 = bitcast i8* bitcast ([41 x i8]* @Lt_0ACB to i8*) to i8*
	; arg 40
	%vr17449 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17450, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr17449
	%vr17453 = bitcast %FBSTRING* %vr17449 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17453, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABE
	%vr17456 = bitcast i8* bitcast ([27 x i8]* @Lt_0ABE to i8*) to i8*
	; arg 26
	%vr17455 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17456, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17455
	%vr17459 = bitcast %FBSTRING* %vr17455 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17459, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACC
	%vr17462 = bitcast i8* bitcast ([28 x i8]* @Lt_0ACC to i8*) to i8*
	; arg 27
	%vr17461 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17462, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr17461
	%vr17465 = bitcast %FBSTRING* %vr17461 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17465, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACD
	%vr17468 = bitcast i8* bitcast ([16 x i8]* @Lt_0ACD to i8*) to i8*
	; arg 15
	%vr17467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17468, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr17467
	%vr17471 = bitcast %FBSTRING* %vr17467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17471, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACE
	%vr17474 = bitcast i8* bitcast ([80 x i8]* @Lt_0ACE to i8*) to i8*
	; arg 79
	%vr17473 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17474, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr17473
	%vr17477 = bitcast %FBSTRING* %vr17473 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17477, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACF
	%vr17480 = bitcast i8* bitcast ([86 x i8]* @Lt_0ACF to i8*) to i8*
	; arg 85
	%vr17479 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17480, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr17479
	%vr17483 = bitcast %FBSTRING* %vr17479 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17483, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD0
	%vr17486 = bitcast i8* bitcast ([37 x i8]* @Lt_0AD0 to i8*) to i8*
	; arg 36
	%vr17485 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17486, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17485
	%vr17489 = bitcast %FBSTRING* %vr17485 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17489, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD1
	%vr17492 = bitcast i8* bitcast ([39 x i8]* @Lt_0AD1 to i8*) to i8*
	; arg 38
	%vr17491 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17492, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr17491
	%vr17495 = bitcast %FBSTRING* %vr17491 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17495, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD2
	%vr17498 = bitcast i8* bitcast ([37 x i8]* @Lt_0AD2 to i8*) to i8*
	; arg 36
	%vr17497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17498, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17497
	%vr17501 = bitcast %FBSTRING* %vr17497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17501, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD3
	%vr17504 = bitcast i8* bitcast ([44 x i8]* @Lt_0AD3 to i8*) to i8*
	; arg 43
	%vr17503 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17504, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr17503
	%vr17507 = bitcast %FBSTRING* %vr17503 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17507, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17510 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17509 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17510, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17509
	%vr17513 = bitcast %FBSTRING* %vr17509 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17513, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr17516 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr17515 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17516, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17515
	%vr17519 = bitcast %FBSTRING* %vr17515 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17519, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr17522 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr17521 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17522, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17521
	%vr17525 = bitcast %FBSTRING* %vr17521 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17525, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD4
	%vr17528 = bitcast i8* bitcast ([21 x i8]* @Lt_0AD4 to i8*) to i8*
	; arg 20
	%vr17527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17528, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17527
	%vr17531 = bitcast %FBSTRING* %vr17527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17531, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17534 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17533 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17534, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17533
	%vr17537 = bitcast %FBSTRING* %vr17533 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17537, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17540 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17539 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17540, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17539
	%vr17543 = bitcast %FBSTRING* %vr17539 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17543, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr17546 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr17545 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17546, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr17545
	%vr17549 = bitcast %FBSTRING* %vr17545 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17549, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17552 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17551 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17552, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17551
	%vr17555 = bitcast %FBSTRING* %vr17551 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17555, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17558 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17558, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17557
	%vr17561 = bitcast %FBSTRING* %vr17557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17561, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD5
	%vr17564 = bitcast i8* bitcast ([29 x i8]* @Lt_0AD5 to i8*) to i8*
	; arg 28
	%vr17563 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17564, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17563
	%vr17567 = bitcast %FBSTRING* %vr17563 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17567, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr17570 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr17569 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17570, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17569
	%vr17573 = bitcast %FBSTRING* %vr17569 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17573, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD6
	%vr17576 = bitcast i8* bitcast ([21 x i8]* @Lt_0AD6 to i8*) to i8*
	; arg 20
	%vr17575 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17576, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17575
	%vr17579 = bitcast %FBSTRING* %vr17575 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17579, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD7
	%vr17582 = bitcast i8* bitcast ([21 x i8]* @Lt_0AD7 to i8*) to i8*
	; arg 20
	%vr17581 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17582, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17581
	%vr17585 = bitcast %FBSTRING* %vr17581 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17585, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD8
	%vr17588 = bitcast i8* bitcast ([48 x i8]* @Lt_0AD8 to i8*) to i8*
	; arg 47
	%vr17587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17588, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17587
	%vr17591 = bitcast %FBSTRING* %vr17587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17591, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD9
	%vr17594 = bitcast i8* bitcast ([47 x i8]* @Lt_0AD9 to i8*) to i8*
	; arg 46
	%vr17593 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17594, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr17593
	%vr17597 = bitcast %FBSTRING* %vr17593 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17597, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADA
	%vr17600 = bitcast i8* bitcast ([47 x i8]* @Lt_0ADA to i8*) to i8*
	; arg 46
	%vr17599 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17600, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr17599
	%vr17603 = bitcast %FBSTRING* %vr17599 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17603, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17606 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17605 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17606, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17605
	%vr17609 = bitcast %FBSTRING* %vr17605 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17609, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADB
	%vr17612 = bitcast i8* bitcast ([18 x i8]* @Lt_0ADB to i8*) to i8*
	; arg 17
	%vr17611 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17612, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr17611
	%vr17615 = bitcast %FBSTRING* %vr17611 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17615, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADC
	%vr17618 = bitcast i8* bitcast ([29 x i8]* @Lt_0ADC to i8*) to i8*
	; arg 28
	%vr17617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17618, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17617
	%vr17621 = bitcast %FBSTRING* %vr17617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17621, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADD
	%vr17624 = bitcast i8* bitcast ([34 x i8]* @Lt_0ADD to i8*) to i8*
	; arg 33
	%vr17623 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17624, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr17623
	%vr17627 = bitcast %FBSTRING* %vr17623 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17627, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr17630 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr17629 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17630, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17629
	%vr17633 = bitcast %FBSTRING* %vr17629 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17633, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADE
	%vr17636 = bitcast i8* bitcast ([34 x i8]* @Lt_0ADE to i8*) to i8*
	; arg 33
	%vr17635 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17636, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr17635
	%vr17639 = bitcast %FBSTRING* %vr17635 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17639, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADF
	%vr17642 = bitcast i8* bitcast ([34 x i8]* @Lt_0ADF to i8*) to i8*
	; arg 33
	%vr17641 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17642, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr17641
	%vr17645 = bitcast %FBSTRING* %vr17641 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17645, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE0
	%vr17648 = bitcast i8* bitcast ([49 x i8]* @Lt_0AE0 to i8*) to i8*
	; arg 48
	%vr17647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17648, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr17647
	%vr17651 = bitcast %FBSTRING* %vr17647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17651, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17654 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17653 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17654, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17653
	%vr17657 = bitcast %FBSTRING* %vr17653 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17657, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE1
	%vr17660 = bitcast i8* bitcast ([71 x i8]* @Lt_0AE1 to i8*) to i8*
	; arg 70
	%vr17659 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17660, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr17659
	%vr17663 = bitcast %FBSTRING* %vr17659 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17663, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE2
	%vr17666 = bitcast i8* bitcast ([37 x i8]* @Lt_0AE2 to i8*) to i8*
	; arg 36
	%vr17665 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17666, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr17665
	%vr17669 = bitcast %FBSTRING* %vr17665 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17669, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr17672 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr17671 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17672, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17671
	%vr17675 = bitcast %FBSTRING* %vr17671 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17675, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17678 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17678, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17677
	%vr17681 = bitcast %FBSTRING* %vr17677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17681, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE3
	%vr17684 = bitcast i8* bitcast ([43 x i8]* @Lt_0AE3 to i8*) to i8*
	; arg 42
	%vr17683 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17684, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr17683
	%vr17687 = bitcast %FBSTRING* %vr17683 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17687, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17690 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17689 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17690, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17689
	%vr17693 = bitcast %FBSTRING* %vr17689 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17693, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17696 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17695 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17696, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17695
	%vr17699 = bitcast %FBSTRING* %vr17695 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17699, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE4
	%vr17702 = bitcast i8* bitcast ([30 x i8]* @Lt_0AE4 to i8*) to i8*
	; arg 29
	%vr17701 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17702, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr17701
	%vr17705 = bitcast %FBSTRING* %vr17701 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17705, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr17708 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr17707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17708, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17707
	%vr17711 = bitcast %FBSTRING* %vr17707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17711, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE5
	%vr17714 = bitcast i8* bitcast ([50 x i8]* @Lt_0AE5 to i8*) to i8*
	; arg 49
	%vr17713 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17714, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr17713
	%vr17717 = bitcast %FBSTRING* %vr17713 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17717, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE6
	%vr17720 = bitcast i8* bitcast ([52 x i8]* @Lt_0AE6 to i8*) to i8*
	; arg 51
	%vr17719 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17720, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17719
	%vr17723 = bitcast %FBSTRING* %vr17719 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17723, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE7
	%vr17726 = bitcast i8* bitcast ([52 x i8]* @Lt_0AE7 to i8*) to i8*
	; arg 51
	%vr17725 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17726, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17725
	%vr17729 = bitcast %FBSTRING* %vr17725 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17729, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE8
	%vr17732 = bitcast i8* bitcast ([53 x i8]* @Lt_0AE8 to i8*) to i8*
	; arg 52
	%vr17731 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17732, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr17731
	%vr17735 = bitcast %FBSTRING* %vr17731 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17735, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE9
	%vr17738 = bitcast i8* bitcast ([52 x i8]* @Lt_0AE9 to i8*) to i8*
	; arg 51
	%vr17737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17738, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17737
	%vr17741 = bitcast %FBSTRING* %vr17737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17741, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEA
	%vr17744 = bitcast i8* bitcast ([49 x i8]* @Lt_0AEA to i8*) to i8*
	; arg 48
	%vr17743 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17744, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr17743
	%vr17747 = bitcast %FBSTRING* %vr17743 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17747, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEB
	%vr17750 = bitcast i8* bitcast ([50 x i8]* @Lt_0AEB to i8*) to i8*
	; arg 49
	%vr17749 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17750, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr17749
	%vr17753 = bitcast %FBSTRING* %vr17749 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17753, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEC
	%vr17756 = bitcast i8* bitcast ([50 x i8]* @Lt_0AEC to i8*) to i8*
	; arg 49
	%vr17755 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17756, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr17755
	%vr17759 = bitcast %FBSTRING* %vr17755 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17759, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AED
	%vr17762 = bitcast i8* bitcast ([50 x i8]* @Lt_0AED to i8*) to i8*
	; arg 49
	%vr17761 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17762, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr17761
	%vr17765 = bitcast %FBSTRING* %vr17761 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17765, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEE
	%vr17768 = bitcast i8* bitcast ([52 x i8]* @Lt_0AEE to i8*) to i8*
	; arg 51
	%vr17767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17768, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr17767
	%vr17771 = bitcast %FBSTRING* %vr17767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17771, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEF
	%vr17774 = bitcast i8* bitcast ([51 x i8]* @Lt_0AEF to i8*) to i8*
	; arg 50
	%vr17773 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17774, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr17773
	%vr17777 = bitcast %FBSTRING* %vr17773 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17777, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF0
	%vr17780 = bitcast i8* bitcast ([51 x i8]* @Lt_0AF0 to i8*) to i8*
	; arg 50
	%vr17779 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17780, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr17779
	%vr17783 = bitcast %FBSTRING* %vr17779 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17783, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF1
	%vr17786 = bitcast i8* bitcast ([51 x i8]* @Lt_0AF1 to i8*) to i8*
	; arg 50
	%vr17785 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17786, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr17785
	%vr17789 = bitcast %FBSTRING* %vr17785 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17789, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF2
	%vr17792 = bitcast i8* bitcast ([49 x i8]* @Lt_0AF2 to i8*) to i8*
	; arg 48
	%vr17791 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17792, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr17791
	%vr17795 = bitcast %FBSTRING* %vr17791 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17795, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF3
	%vr17798 = bitcast i8* bitcast ([48 x i8]* @Lt_0AF3 to i8*) to i8*
	; arg 47
	%vr17797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17798, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17797
	%vr17801 = bitcast %FBSTRING* %vr17797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17801, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17804 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17803 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17804, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17803
	%vr17807 = bitcast %FBSTRING* %vr17803 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17807, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17810 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17809 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17810, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17809
	%vr17813 = bitcast %FBSTRING* %vr17809 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17813, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF4
	%vr17816 = bitcast i8* bitcast ([22 x i8]* @Lt_0AF4 to i8*) to i8*
	; arg 21
	%vr17815 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17816, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr17815
	%vr17819 = bitcast %FBSTRING* %vr17815 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17819, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr17822 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr17821 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17822, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17821
	%vr17825 = bitcast %FBSTRING* %vr17821 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17825, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF5
	%vr17828 = bitcast i8* bitcast ([35 x i8]* @Lt_0AF5 to i8*) to i8*
	; arg 34
	%vr17827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17828, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr17827
	%vr17831 = bitcast %FBSTRING* %vr17827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17831, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF6
	%vr17834 = bitcast i8* bitcast ([26 x i8]* @Lt_0AF6 to i8*) to i8*
	; arg 25
	%vr17833 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17834, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17833
	%vr17837 = bitcast %FBSTRING* %vr17833 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17837, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF7
	%vr17840 = bitcast i8* bitcast ([28 x i8]* @Lt_0AF7 to i8*) to i8*
	; arg 27
	%vr17839 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17840, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr17839
	%vr17843 = bitcast %FBSTRING* %vr17839 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17843, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF8
	%vr17846 = bitcast i8* bitcast ([43 x i8]* @Lt_0AF8 to i8*) to i8*
	; arg 42
	%vr17845 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17846, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr17845
	%vr17849 = bitcast %FBSTRING* %vr17845 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17849, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17852 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17851 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17852, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17851
	%vr17855 = bitcast %FBSTRING* %vr17851 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17855, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF9
	%vr17858 = bitcast i8* bitcast ([26 x i8]* @Lt_0AF9 to i8*) to i8*
	; arg 25
	%vr17857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17858, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17857
	%vr17861 = bitcast %FBSTRING* %vr17857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17861, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFA
	%vr17864 = bitcast i8* bitcast ([27 x i8]* @Lt_0AFA to i8*) to i8*
	; arg 26
	%vr17863 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17864, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17863
	%vr17867 = bitcast %FBSTRING* %vr17863 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17867, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFB
	%vr17870 = bitcast i8* bitcast ([39 x i8]* @Lt_0AFB to i8*) to i8*
	; arg 38
	%vr17869 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17870, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr17869
	%vr17873 = bitcast %FBSTRING* %vr17869 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17873, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFC
	%vr17876 = bitcast i8* bitcast ([80 x i8]* @Lt_0AFC to i8*) to i8*
	; arg 79
	%vr17875 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17876, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr17875
	%vr17879 = bitcast %FBSTRING* %vr17875 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17879, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17882 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17881 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17882, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17881
	%vr17885 = bitcast %FBSTRING* %vr17881 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17885, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFD
	%vr17888 = bitcast i8* bitcast ([103 x i8]* @Lt_0AFD to i8*) to i8*
	; arg 102
	%vr17887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17888, i64 102 )

	; call fb_PrintString()
	; arg 1
	; arg vr17887
	%vr17891 = bitcast %FBSTRING* %vr17887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17891, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFE
	%vr17894 = bitcast i8* bitcast ([111 x i8]* @Lt_0AFE to i8*) to i8*
	; arg 110
	%vr17893 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17894, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr17893
	%vr17897 = bitcast %FBSTRING* %vr17893 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17897, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17900 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17899 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17900, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17899
	%vr17903 = bitcast %FBSTRING* %vr17899 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17903, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFF
	%vr17906 = bitcast i8* bitcast ([101 x i8]* @Lt_0AFF to i8*) to i8*
	; arg 100
	%vr17905 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17906, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr17905
	%vr17909 = bitcast %FBSTRING* %vr17905 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17909, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr17912 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr17911 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17912, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17911
	%vr17915 = bitcast %FBSTRING* %vr17911 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17915, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17918 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17918, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17917
	%vr17921 = bitcast %FBSTRING* %vr17917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17921, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B00
	%vr17924 = bitcast i8* bitcast ([21 x i8]* @Lt_0B00 to i8*) to i8*
	; arg 20
	%vr17923 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17924, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17923
	%vr17927 = bitcast %FBSTRING* %vr17923 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17927, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr17930 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr17929 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17930, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17929
	%vr17933 = bitcast %FBSTRING* %vr17929 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17933, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B01
	%vr17936 = bitcast i8* bitcast ([40 x i8]* @Lt_0B01 to i8*) to i8*
	; arg 39
	%vr17935 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17936, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr17935
	%vr17939 = bitcast %FBSTRING* %vr17935 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17939, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B02
	%vr17942 = bitcast i8* bitcast ([81 x i8]* @Lt_0B02 to i8*) to i8*
	; arg 80
	%vr17941 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17942, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr17941
	%vr17945 = bitcast %FBSTRING* %vr17941 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17945, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17948 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17948, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17947
	%vr17951 = bitcast %FBSTRING* %vr17947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17951, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B03
	%vr17954 = bitcast i8* bitcast ([24 x i8]* @Lt_0B03 to i8*) to i8*
	; arg 23
	%vr17953 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17954, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17953
	%vr17957 = bitcast %FBSTRING* %vr17953 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17957, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17960 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17959 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17960, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17959
	%vr17963 = bitcast %FBSTRING* %vr17959 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17963, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B04
	%vr17966 = bitcast i8* bitcast ([84 x i8]* @Lt_0B04 to i8*) to i8*
	; arg 83
	%vr17965 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17966, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr17965
	%vr17969 = bitcast %FBSTRING* %vr17965 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17969, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17972 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17971 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17972, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17971
	%vr17975 = bitcast %FBSTRING* %vr17971 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17975, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B05
	%vr17978 = bitcast i8* bitcast ([98 x i8]* @Lt_0B05 to i8*) to i8*
	; arg 97
	%vr17977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17978, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr17977
	%vr17981 = bitcast %FBSTRING* %vr17977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17981, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B06
	%vr17984 = bitcast i8* bitcast ([26 x i8]* @Lt_0B06 to i8*) to i8*
	; arg 25
	%vr17983 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17984, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17983
	%vr17987 = bitcast %FBSTRING* %vr17983 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17987, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr17990 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr17989 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17990, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17989
	%vr17993 = bitcast %FBSTRING* %vr17989 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17993, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B07
	%vr17996 = bitcast i8* bitcast ([31 x i8]* @Lt_0B07 to i8*) to i8*
	; arg 30
	%vr17995 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17996, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr17995
	%vr17999 = bitcast %FBSTRING* %vr17995 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17999, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18002 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18001 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18002, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18001
	%vr18005 = bitcast %FBSTRING* %vr18001 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18005, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18008 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18008, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18007
	%vr18011 = bitcast %FBSTRING* %vr18007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18011, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B08
	%vr18014 = bitcast i8* bitcast ([19 x i8]* @Lt_0B08 to i8*) to i8*
	; arg 18
	%vr18013 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18014, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr18013
	%vr18017 = bitcast %FBSTRING* %vr18013 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18017, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18020 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18019 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18020, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18019
	%vr18023 = bitcast %FBSTRING* %vr18019 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18023, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B09
	%vr18026 = bitcast i8* bitcast ([41 x i8]* @Lt_0B09 to i8*) to i8*
	; arg 40
	%vr18025 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18026, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr18025
	%vr18029 = bitcast %FBSTRING* %vr18025 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18029, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0A
	%vr18032 = bitcast i8* bitcast ([43 x i8]* @Lt_0B0A to i8*) to i8*
	; arg 42
	%vr18031 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18032, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18031
	%vr18035 = bitcast %FBSTRING* %vr18031 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18035, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0B
	%vr18038 = bitcast i8* bitcast ([90 x i8]* @Lt_0B0B to i8*) to i8*
	; arg 89
	%vr18037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18038, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr18037
	%vr18041 = bitcast %FBSTRING* %vr18037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18041, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0C
	%vr18044 = bitcast i8* bitcast ([76 x i8]* @Lt_0B0C to i8*) to i8*
	; arg 75
	%vr18043 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18044, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr18043
	%vr18047 = bitcast %FBSTRING* %vr18043 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18047, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0D
	%vr18050 = bitcast i8* bitcast ([52 x i8]* @Lt_0B0D to i8*) to i8*
	; arg 51
	%vr18049 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18050, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr18049
	%vr18053 = bitcast %FBSTRING* %vr18049 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18053, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18056 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18055 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18056, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18055
	%vr18059 = bitcast %FBSTRING* %vr18055 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18059, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0E
	%vr18062 = bitcast i8* bitcast ([40 x i8]* @Lt_0B0E to i8*) to i8*
	; arg 39
	%vr18061 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18062, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr18061
	%vr18065 = bitcast %FBSTRING* %vr18061 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18065, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0F
	%vr18068 = bitcast i8* bitcast ([85 x i8]* @Lt_0B0F to i8*) to i8*
	; arg 84
	%vr18067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18068, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr18067
	%vr18071 = bitcast %FBSTRING* %vr18067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18071, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B10
	%vr18074 = bitcast i8* bitcast ([88 x i8]* @Lt_0B10 to i8*) to i8*
	; arg 87
	%vr18073 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18074, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr18073
	%vr18077 = bitcast %FBSTRING* %vr18073 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18077, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B11
	%vr18080 = bitcast i8* bitcast ([114 x i8]* @Lt_0B11 to i8*) to i8*
	; arg 113
	%vr18079 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18080, i64 113 )

	; call fb_PrintString()
	; arg 1
	; arg vr18079
	%vr18083 = bitcast %FBSTRING* %vr18079 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18083, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18086 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18085 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18086, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18085
	%vr18089 = bitcast %FBSTRING* %vr18085 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18089, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B12
	%vr18092 = bitcast i8* bitcast ([43 x i8]* @Lt_0B12 to i8*) to i8*
	; arg 42
	%vr18091 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18092, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18091
	%vr18095 = bitcast %FBSTRING* %vr18091 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18095, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B13
	%vr18098 = bitcast i8* bitcast ([88 x i8]* @Lt_0B13 to i8*) to i8*
	; arg 87
	%vr18097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18098, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr18097
	%vr18101 = bitcast %FBSTRING* %vr18097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18101, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B14
	%vr18104 = bitcast i8* bitcast ([92 x i8]* @Lt_0B14 to i8*) to i8*
	; arg 91
	%vr18103 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18104, i64 91 )

	; call fb_PrintString()
	; arg 1
	; arg vr18103
	%vr18107 = bitcast %FBSTRING* %vr18103 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18107, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B15
	%vr18110 = bitcast i8* bitcast ([102 x i8]* @Lt_0B15 to i8*) to i8*
	; arg 101
	%vr18109 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18110, i64 101 )

	; call fb_PrintString()
	; arg 1
	; arg vr18109
	%vr18113 = bitcast %FBSTRING* %vr18109 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18113, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18116 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18115 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18116, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18115
	%vr18119 = bitcast %FBSTRING* %vr18115 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18119, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B16
	%vr18122 = bitcast i8* bitcast ([65 x i8]* @Lt_0B16 to i8*) to i8*
	; arg 64
	%vr18121 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18122, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr18121
	%vr18125 = bitcast %FBSTRING* %vr18121 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18125, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18128 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18128, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18127
	%vr18131 = bitcast %FBSTRING* %vr18127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18131, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18134 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18133 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18134, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18133
	%vr18137 = bitcast %FBSTRING* %vr18133 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18137, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B17
	%vr18140 = bitcast i8* bitcast ([18 x i8]* @Lt_0B17 to i8*) to i8*
	; arg 17
	%vr18139 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18140, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr18139
	%vr18143 = bitcast %FBSTRING* %vr18139 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18143, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18146 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18145 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18146, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18145
	%vr18149 = bitcast %FBSTRING* %vr18145 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18149, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B18
	%vr18152 = bitcast i8* bitcast ([46 x i8]* @Lt_0B18 to i8*) to i8*
	; arg 45
	%vr18151 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18152, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr18151
	%vr18155 = bitcast %FBSTRING* %vr18151 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18155, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B19
	%vr18158 = bitcast i8* bitcast ([86 x i8]* @Lt_0B19 to i8*) to i8*
	; arg 85
	%vr18157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18158, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr18157
	%vr18161 = bitcast %FBSTRING* %vr18157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18161, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1A
	%vr18164 = bitcast i8* bitcast ([68 x i8]* @Lt_0B1A to i8*) to i8*
	; arg 67
	%vr18163 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18164, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr18163
	%vr18167 = bitcast %FBSTRING* %vr18163 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18167, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18170 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18169 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18170, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18169
	%vr18173 = bitcast %FBSTRING* %vr18169 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18173, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1B
	%vr18176 = bitcast i8* bitcast ([81 x i8]* @Lt_0B1B to i8*) to i8*
	; arg 80
	%vr18175 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18176, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr18175
	%vr18179 = bitcast %FBSTRING* %vr18175 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18179, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1C
	%vr18182 = bitcast i8* bitcast ([53 x i8]* @Lt_0B1C to i8*) to i8*
	; arg 52
	%vr18181 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18182, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr18181
	%vr18185 = bitcast %FBSTRING* %vr18181 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18185, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1D
	%vr18188 = bitcast i8* bitcast ([38 x i8]* @Lt_0B1D to i8*) to i8*
	; arg 37
	%vr18187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18188, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18187
	%vr18191 = bitcast %FBSTRING* %vr18187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18191, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1E
	%vr18194 = bitcast i8* bitcast ([54 x i8]* @Lt_0B1E to i8*) to i8*
	; arg 53
	%vr18193 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18194, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr18193
	%vr18197 = bitcast %FBSTRING* %vr18193 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18197, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1F
	%vr18200 = bitcast i8* bitcast ([38 x i8]* @Lt_0B1F to i8*) to i8*
	; arg 37
	%vr18199 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18200, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18199
	%vr18203 = bitcast %FBSTRING* %vr18199 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18203, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B20
	%vr18206 = bitcast i8* bitcast ([44 x i8]* @Lt_0B20 to i8*) to i8*
	; arg 43
	%vr18205 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18206, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr18205
	%vr18209 = bitcast %FBSTRING* %vr18205 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18209, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B21
	%vr18212 = bitcast i8* bitcast ([82 x i8]* @Lt_0B21 to i8*) to i8*
	; arg 81
	%vr18211 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18212, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr18211
	%vr18215 = bitcast %FBSTRING* %vr18211 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18215, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B22
	%vr18218 = bitcast i8* bitcast ([42 x i8]* @Lt_0B22 to i8*) to i8*
	; arg 41
	%vr18217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18218, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr18217
	%vr18221 = bitcast %FBSTRING* %vr18217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18221, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B24
	%vr18224 = bitcast i8* bitcast ([142 x i8]* @Lt_0B24 to i8*) to i8*
	; arg 141
	%vr18223 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18224, i64 141 )

	; call fb_PrintString()
	; arg 1
	; arg vr18223
	%vr18227 = bitcast %FBSTRING* %vr18223 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18227, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18230 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18229 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18230, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18229
	%vr18233 = bitcast %FBSTRING* %vr18229 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18233, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B25
	%vr18236 = bitcast i8* bitcast ([55 x i8]* @Lt_0B25 to i8*) to i8*
	; arg 54
	%vr18235 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18236, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr18235
	%vr18239 = bitcast %FBSTRING* %vr18235 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18239, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18242 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18241 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18242, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18241
	%vr18245 = bitcast %FBSTRING* %vr18241 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18245, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18248 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18248, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18247
	%vr18251 = bitcast %FBSTRING* %vr18247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18251, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B26
	%vr18254 = bitcast i8* bitcast ([31 x i8]* @Lt_0B26 to i8*) to i8*
	; arg 30
	%vr18253 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18254, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18253
	%vr18257 = bitcast %FBSTRING* %vr18253 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18257, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B27
	%vr18260 = bitcast i8* bitcast ([30 x i8]* @Lt_0B27 to i8*) to i8*
	; arg 29
	%vr18259 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18260, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr18259
	%vr18263 = bitcast %FBSTRING* %vr18259 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18263, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7E
	%vr18266 = bitcast i8* bitcast ([16 x i8]* @Lt_0A7E to i8*) to i8*
	; arg 15
	%vr18265 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18266, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr18265
	%vr18269 = bitcast %FBSTRING* %vr18265 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18269, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18272 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18271 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18272, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18271
	%vr18275 = bitcast %FBSTRING* %vr18271 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18275, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18278 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18278, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18277
	%vr18281 = bitcast %FBSTRING* %vr18277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18281, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B28
	%vr18284 = bitcast i8* bitcast ([49 x i8]* @Lt_0B28 to i8*) to i8*
	; arg 48
	%vr18283 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18284, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr18283
	%vr18287 = bitcast %FBSTRING* %vr18283 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18287, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18290 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18289 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18290, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18289
	%vr18293 = bitcast %FBSTRING* %vr18289 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18293, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18296 = bitcast i8* bitcast ([36 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 35
	%vr18295 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18296, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18295
	%vr18299 = bitcast %FBSTRING* %vr18295 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18299, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18302 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18301 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18302, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18301
	%vr18305 = bitcast %FBSTRING* %vr18301 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18305, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2A
	%vr18308 = bitcast i8* bitcast ([33 x i8]* @Lt_0B2A to i8*) to i8*
	; arg 32
	%vr18307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18308, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr18307
	%vr18311 = bitcast %FBSTRING* %vr18307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18311, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18314 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18313 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18314, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18313
	%vr18317 = bitcast %FBSTRING* %vr18313 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18317, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18320 = bitcast i8* bitcast ([36 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 35
	%vr18319 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18320, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18319
	%vr18323 = bitcast %FBSTRING* %vr18319 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18323, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18326 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18325 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18326, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18325
	%vr18329 = bitcast %FBSTRING* %vr18325 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18329, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2B
	%vr18332 = bitcast i8* bitcast ([25 x i8]* @Lt_0B2B to i8*) to i8*
	; arg 24
	%vr18331 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18332, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr18331
	%vr18335 = bitcast %FBSTRING* %vr18331 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18335, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2C
	%vr18338 = bitcast i8* bitcast ([25 x i8]* @Lt_0B2C to i8*) to i8*
	; arg 24
	%vr18337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18338, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr18337
	%vr18341 = bitcast %FBSTRING* %vr18337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18341, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18344 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18343 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18344, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18343
	%vr18347 = bitcast %FBSTRING* %vr18343 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18347, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2D
	%vr18350 = bitcast i8* bitcast ([18 x i8]* @Lt_0B2D to i8*) to i8*
	; arg 17
	%vr18349 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18350, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr18349
	%vr18353 = bitcast %FBSTRING* %vr18349 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18353, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2E
	%vr18356 = bitcast i8* bitcast ([68 x i8]* @Lt_0B2E to i8*) to i8*
	; arg 67
	%vr18355 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18356, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr18355
	%vr18359 = bitcast %FBSTRING* %vr18355 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18359, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2F
	%vr18362 = bitcast i8* bitcast ([38 x i8]* @Lt_0B2F to i8*) to i8*
	; arg 37
	%vr18361 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18362, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18361
	%vr18365 = bitcast %FBSTRING* %vr18361 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18365, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr18368 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr18367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18368, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18367
	%vr18371 = bitcast %FBSTRING* %vr18367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18371, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B30
	%vr18374 = bitcast i8* bitcast ([58 x i8]* @Lt_0B30 to i8*) to i8*
	; arg 57
	%vr18373 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18374, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr18373
	%vr18377 = bitcast %FBSTRING* %vr18373 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18377, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B31
	%vr18380 = bitcast i8* bitcast ([24 x i8]* @Lt_0B31 to i8*) to i8*
	; arg 23
	%vr18379 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18380, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr18379
	%vr18383 = bitcast %FBSTRING* %vr18379 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18383, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr18386 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr18385 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18386, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18385
	%vr18389 = bitcast %FBSTRING* %vr18385 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18389, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18392 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18391 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18392, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18391
	%vr18395 = bitcast %FBSTRING* %vr18391 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18395, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18398 = bitcast i8* bitcast ([36 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 35
	%vr18397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18398, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18397
	%vr18401 = bitcast %FBSTRING* %vr18397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18401, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18404 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18403 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18404, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18403
	%vr18407 = bitcast %FBSTRING* %vr18403 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18407, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B32
	%vr18410 = bitcast i8* bitcast ([68 x i8]* @Lt_0B32 to i8*) to i8*
	; arg 67
	%vr18409 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18410, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr18409
	%vr18413 = bitcast %FBSTRING* %vr18409 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18413, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2F
	%vr18416 = bitcast i8* bitcast ([38 x i8]* @Lt_0B2F to i8*) to i8*
	; arg 37
	%vr18415 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18416, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18415
	%vr18419 = bitcast %FBSTRING* %vr18415 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18419, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr18422 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr18421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18422, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18421
	%vr18425 = bitcast %FBSTRING* %vr18421 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18425, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B33
	%vr18428 = bitcast i8* bitcast ([77 x i8]* @Lt_0B33 to i8*) to i8*
	; arg 76
	%vr18427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18428, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr18427
	%vr18431 = bitcast %FBSTRING* %vr18427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18431, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr18434 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr18433 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18434, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18433
	%vr18437 = bitcast %FBSTRING* %vr18433 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18437, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18440 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18439 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18440, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18439
	%vr18443 = bitcast %FBSTRING* %vr18439 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18443, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18446 = bitcast i8* bitcast ([36 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 35
	%vr18445 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18446, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18445
	%vr18449 = bitcast %FBSTRING* %vr18445 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18449, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18452 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18451 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18452, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18451
	%vr18455 = bitcast %FBSTRING* %vr18451 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18455, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B34
	%vr18458 = bitcast i8* bitcast ([47 x i8]* @Lt_0B34 to i8*) to i8*
	; arg 46
	%vr18457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18458, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr18457
	%vr18461 = bitcast %FBSTRING* %vr18457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18461, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B35
	%vr18464 = bitcast i8* bitcast ([47 x i8]* @Lt_0B35 to i8*) to i8*
	; arg 46
	%vr18463 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18464, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr18463
	%vr18467 = bitcast %FBSTRING* %vr18463 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18467, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18470 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18469 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18470, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18469
	%vr18473 = bitcast %FBSTRING* %vr18469 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18473, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18476 = bitcast i8* bitcast ([36 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 35
	%vr18475 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18476, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18475
	%vr18479 = bitcast %FBSTRING* %vr18475 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18479, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18482 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18481 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18482, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18481
	%vr18485 = bitcast %FBSTRING* %vr18481 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18485, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B36
	%vr18488 = bitcast i8* bitcast ([34 x i8]* @Lt_0B36 to i8*) to i8*
	; arg 33
	%vr18487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18488, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr18487
	%vr18491 = bitcast %FBSTRING* %vr18487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18491, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18494 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18493 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18494, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18493
	%vr18497 = bitcast %FBSTRING* %vr18493 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18497, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B37
	%vr18500 = bitcast i8* bitcast ([90 x i8]* @Lt_0B37 to i8*) to i8*
	; arg 89
	%vr18499 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18500, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr18499
	%vr18503 = bitcast %FBSTRING* %vr18499 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18503, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18506 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18505 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18506, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18505
	%vr18509 = bitcast %FBSTRING* %vr18505 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18509, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B38
	%vr18512 = bitcast i8* bitcast ([64 x i8]* @Lt_0B38 to i8*) to i8*
	; arg 63
	%vr18511 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18512, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr18511
	%vr18515 = bitcast %FBSTRING* %vr18511 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18515, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18518 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18518, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18517
	%vr18521 = bitcast %FBSTRING* %vr18517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18521, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B39
	%vr18524 = bitcast i8* bitcast ([35 x i8]* @Lt_0B39 to i8*) to i8*
	; arg 34
	%vr18523 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18524, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18523
	%vr18527 = bitcast %FBSTRING* %vr18523 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18527, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18530 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18529 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18530, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18529
	%vr18533 = bitcast %FBSTRING* %vr18529 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18533, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18536 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18535 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18536, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18535
	%vr18539 = bitcast %FBSTRING* %vr18535 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18539, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3A
	%vr18542 = bitcast i8* bitcast ([51 x i8]* @Lt_0B3A to i8*) to i8*
	; arg 50
	%vr18541 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18542, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr18541
	%vr18545 = bitcast %FBSTRING* %vr18541 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18545, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18548 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18548, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18547
	%vr18551 = bitcast %FBSTRING* %vr18547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18551, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3B
	%vr18554 = bitcast i8* bitcast ([29 x i8]* @Lt_0B3B to i8*) to i8*
	; arg 28
	%vr18553 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18554, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr18553
	%vr18557 = bitcast %FBSTRING* %vr18553 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18557, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3C
	%vr18560 = bitcast i8* bitcast ([39 x i8]* @Lt_0B3C to i8*) to i8*
	; arg 38
	%vr18559 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18560, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr18559
	%vr18563 = bitcast %FBSTRING* %vr18559 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18563, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3D
	%vr18566 = bitcast i8* bitcast ([38 x i8]* @Lt_0B3D to i8*) to i8*
	; arg 37
	%vr18565 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18566, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18565
	%vr18569 = bitcast %FBSTRING* %vr18565 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18569, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3E
	%vr18572 = bitcast i8* bitcast ([38 x i8]* @Lt_0B3E to i8*) to i8*
	; arg 37
	%vr18571 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18572, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18571
	%vr18575 = bitcast %FBSTRING* %vr18571 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18575, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3F
	%vr18578 = bitcast i8* bitcast ([31 x i8]* @Lt_0B3F to i8*) to i8*
	; arg 30
	%vr18577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18578, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18577
	%vr18581 = bitcast %FBSTRING* %vr18577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18581, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18584 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18583 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18584, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18583
	%vr18587 = bitcast %FBSTRING* %vr18583 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18587, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18590 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18589 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18590, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18589
	%vr18593 = bitcast %FBSTRING* %vr18589 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18593, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B40
	%vr18596 = bitcast i8* bitcast ([41 x i8]* @Lt_0B40 to i8*) to i8*
	; arg 40
	%vr18595 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18596, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr18595
	%vr18599 = bitcast %FBSTRING* %vr18595 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18599, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18602 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18601 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18602, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18601
	%vr18605 = bitcast %FBSTRING* %vr18601 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18605, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B41
	%vr18608 = bitcast i8* bitcast ([31 x i8]* @Lt_0B41 to i8*) to i8*
	; arg 30
	%vr18607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18608, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18607
	%vr18611 = bitcast %FBSTRING* %vr18607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18611, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18614 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18613 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18614, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18613
	%vr18617 = bitcast %FBSTRING* %vr18613 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18617, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B42
	%vr18620 = bitcast i8* bitcast ([33 x i8]* @Lt_0B42 to i8*) to i8*
	; arg 32
	%vr18619 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18620, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr18619
	%vr18623 = bitcast %FBSTRING* %vr18619 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18623, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18626 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18625 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18626, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18625
	%vr18629 = bitcast %FBSTRING* %vr18625 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18629, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B43
	%vr18632 = bitcast i8* bitcast ([38 x i8]* @Lt_0B43 to i8*) to i8*
	; arg 37
	%vr18631 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18632, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18631
	%vr18635 = bitcast %FBSTRING* %vr18631 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18635, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B44
	%vr18638 = bitcast i8* bitcast ([41 x i8]* @Lt_0B44 to i8*) to i8*
	; arg 40
	%vr18637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18638, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr18637
	%vr18641 = bitcast %FBSTRING* %vr18637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18641, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B45
	%vr18644 = bitcast i8* bitcast ([41 x i8]* @Lt_0B45 to i8*) to i8*
	; arg 40
	%vr18643 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18644, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr18643
	%vr18647 = bitcast %FBSTRING* %vr18643 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18647, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18650 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18649 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18650, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18649
	%vr18653 = bitcast %FBSTRING* %vr18649 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18653, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18656 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18655 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18656, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18655
	%vr18659 = bitcast %FBSTRING* %vr18655 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18659, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B46
	%vr18662 = bitcast i8* bitcast ([29 x i8]* @Lt_0B46 to i8*) to i8*
	; arg 28
	%vr18661 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18662, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr18661
	%vr18665 = bitcast %FBSTRING* %vr18661 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18665, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18668 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18668, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18667
	%vr18671 = bitcast %FBSTRING* %vr18667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18671, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B47
	%vr18674 = bitcast i8* bitcast ([56 x i8]* @Lt_0B47 to i8*) to i8*
	; arg 55
	%vr18673 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18674, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr18673
	%vr18677 = bitcast %FBSTRING* %vr18673 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18677, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B48
	%vr18680 = bitcast i8* bitcast ([95 x i8]* @Lt_0B48 to i8*) to i8*
	; arg 94
	%vr18679 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18680, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr18679
	%vr18683 = bitcast %FBSTRING* %vr18679 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18683, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18686 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18685 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18686, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18685
	%vr18689 = bitcast %FBSTRING* %vr18685 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18689, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18692 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18691 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18692, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18691
	%vr18695 = bitcast %FBSTRING* %vr18691 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18695, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B49
	%vr18698 = bitcast i8* bitcast ([21 x i8]* @Lt_0B49 to i8*) to i8*
	; arg 20
	%vr18697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18698, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr18697
	%vr18701 = bitcast %FBSTRING* %vr18697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18701, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18704 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18703 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18704, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18703
	%vr18707 = bitcast %FBSTRING* %vr18703 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18707, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4A
	%vr18710 = bitcast i8* bitcast ([36 x i8]* @Lt_0B4A to i8*) to i8*
	; arg 35
	%vr18709 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18710, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18709
	%vr18713 = bitcast %FBSTRING* %vr18709 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18713, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4B
	%vr18716 = bitcast i8* bitcast ([37 x i8]* @Lt_0B4B to i8*) to i8*
	; arg 36
	%vr18715 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18716, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr18715
	%vr18719 = bitcast %FBSTRING* %vr18715 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18719, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4C
	%vr18722 = bitcast i8* bitcast ([36 x i8]* @Lt_0B4C to i8*) to i8*
	; arg 35
	%vr18721 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18722, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18721
	%vr18725 = bitcast %FBSTRING* %vr18721 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18725, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4D
	%vr18728 = bitcast i8* bitcast ([105 x i8]* @Lt_0B4D to i8*) to i8*
	; arg 104
	%vr18727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18728, i64 104 )

	; call fb_PrintString()
	; arg 1
	; arg vr18727
	%vr18731 = bitcast %FBSTRING* %vr18727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18731, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4E
	%vr18734 = bitcast i8* bitcast ([48 x i8]* @Lt_0B4E to i8*) to i8*
	; arg 47
	%vr18733 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18734, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18733
	%vr18737 = bitcast %FBSTRING* %vr18733 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18737, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4F
	%vr18740 = bitcast i8* bitcast ([48 x i8]* @Lt_0B4F to i8*) to i8*
	; arg 47
	%vr18739 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18740, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18739
	%vr18743 = bitcast %FBSTRING* %vr18739 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18743, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B50
	%vr18746 = bitcast i8* bitcast ([48 x i8]* @Lt_0B50 to i8*) to i8*
	; arg 47
	%vr18745 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18746, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18745
	%vr18749 = bitcast %FBSTRING* %vr18745 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18749, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B51
	%vr18752 = bitcast i8* bitcast ([43 x i8]* @Lt_0B51 to i8*) to i8*
	; arg 42
	%vr18751 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18752, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18751
	%vr18755 = bitcast %FBSTRING* %vr18751 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18755, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18758 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18758, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18757
	%vr18761 = bitcast %FBSTRING* %vr18757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18761, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18764 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18763 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18764, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18763
	%vr18767 = bitcast %FBSTRING* %vr18763 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18767, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B52
	%vr18770 = bitcast i8* bitcast ([20 x i8]* @Lt_0B52 to i8*) to i8*
	; arg 19
	%vr18769 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18770, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr18769
	%vr18773 = bitcast %FBSTRING* %vr18769 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18773, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18776 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18775 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18776, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18775
	%vr18779 = bitcast %FBSTRING* %vr18775 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18779, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B53
	%vr18782 = bitcast i8* bitcast ([46 x i8]* @Lt_0B53 to i8*) to i8*
	; arg 45
	%vr18781 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18782, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr18781
	%vr18785 = bitcast %FBSTRING* %vr18781 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18785, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18788 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18788, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18787
	%vr18791 = bitcast %FBSTRING* %vr18787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18791, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18794 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18793 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18794, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18793
	%vr18797 = bitcast %FBSTRING* %vr18793 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18797, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B54
	%vr18800 = bitcast i8* bitcast ([34 x i8]* @Lt_0B54 to i8*) to i8*
	; arg 33
	%vr18799 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18800, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr18799
	%vr18803 = bitcast %FBSTRING* %vr18799 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18803, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18806 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18805 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18806, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18805
	%vr18809 = bitcast %FBSTRING* %vr18805 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18809, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B55
	%vr18812 = bitcast i8* bitcast ([40 x i8]* @Lt_0B55 to i8*) to i8*
	; arg 39
	%vr18811 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18812, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr18811
	%vr18815 = bitcast %FBSTRING* %vr18811 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18815, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B56
	%vr18818 = bitcast i8* bitcast ([16 x i8]* @Lt_0B56 to i8*) to i8*
	; arg 15
	%vr18817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18818, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr18817
	%vr18821 = bitcast %FBSTRING* %vr18817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18821, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B57
	%vr18824 = bitcast i8* bitcast ([22 x i8]* @Lt_0B57 to i8*) to i8*
	; arg 21
	%vr18823 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18824, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18823
	%vr18827 = bitcast %FBSTRING* %vr18823 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18827, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr18830 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr18829 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18830, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18829
	%vr18833 = bitcast %FBSTRING* %vr18829 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18833, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B58
	%vr18836 = bitcast i8* bitcast ([25 x i8]* @Lt_0B58 to i8*) to i8*
	; arg 24
	%vr18835 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18836, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr18835
	%vr18839 = bitcast %FBSTRING* %vr18835 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18839, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr18842 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr18841 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18842, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr18841
	%vr18845 = bitcast %FBSTRING* %vr18841 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18845, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B59
	%vr18848 = bitcast i8* bitcast ([22 x i8]* @Lt_0B59 to i8*) to i8*
	; arg 21
	%vr18847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18848, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18847
	%vr18851 = bitcast %FBSTRING* %vr18847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18851, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5A
	%vr18854 = bitcast i8* bitcast ([16 x i8]* @Lt_0B5A to i8*) to i8*
	; arg 15
	%vr18853 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18854, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr18853
	%vr18857 = bitcast %FBSTRING* %vr18853 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18857, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5B
	%vr18860 = bitcast i8* bitcast ([14 x i8]* @Lt_0B5B to i8*) to i8*
	; arg 13
	%vr18859 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18860, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr18859
	%vr18863 = bitcast %FBSTRING* %vr18859 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18863, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5C
	%vr18866 = bitcast i8* bitcast ([4 x i8]* @Lt_0B5C to i8*) to i8*
	; arg 3
	%vr18865 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18866, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr18865
	%vr18869 = bitcast %FBSTRING* %vr18865 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18869, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5D
	%vr18872 = bitcast i8* bitcast ([21 x i8]* @Lt_0B5D to i8*) to i8*
	; arg 20
	%vr18871 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18872, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr18871
	%vr18875 = bitcast %FBSTRING* %vr18871 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18875, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5E
	%vr18878 = bitcast i8* bitcast ([17 x i8]* @Lt_0B5E to i8*) to i8*
	; arg 16
	%vr18877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18878, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr18877
	%vr18881 = bitcast %FBSTRING* %vr18877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18881, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5F
	%vr18884 = bitcast i8* bitcast ([14 x i8]* @Lt_0B5F to i8*) to i8*
	; arg 13
	%vr18883 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18884, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr18883
	%vr18887 = bitcast %FBSTRING* %vr18883 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18887, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B60
	%vr18890 = bitcast i8* bitcast ([31 x i8]* @Lt_0B60 to i8*) to i8*
	; arg 30
	%vr18889 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18890, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18889
	%vr18893 = bitcast %FBSTRING* %vr18889 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18893, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B61
	%vr18896 = bitcast i8* bitcast ([4 x i8]* @Lt_0B61 to i8*) to i8*
	; arg 3
	%vr18895 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18896, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr18895
	%vr18899 = bitcast %FBSTRING* %vr18895 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18899, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr18902 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr18901 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18902, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr18901
	%vr18905 = bitcast %FBSTRING* %vr18901 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18905, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B62
	%vr18908 = bitcast i8* bitcast ([22 x i8]* @Lt_0B62 to i8*) to i8*
	; arg 21
	%vr18907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18908, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18907
	%vr18911 = bitcast %FBSTRING* %vr18907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18911, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18914 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18913 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18914, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18913
	%vr18917 = bitcast %FBSTRING* %vr18913 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18917, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18920 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18919 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18920, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18919
	%vr18923 = bitcast %FBSTRING* %vr18919 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18923, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B63
	%vr18926 = bitcast i8* bitcast ([35 x i8]* @Lt_0B63 to i8*) to i8*
	; arg 34
	%vr18925 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18926, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18925
	%vr18929 = bitcast %FBSTRING* %vr18925 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18929, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr18932 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr18931 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18932, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18931
	%vr18935 = bitcast %FBSTRING* %vr18931 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18935, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B64
	%vr18938 = bitcast i8* bitcast ([13 x i8]* @Lt_0B64 to i8*) to i8*
	; arg 12
	%vr18937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18938, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr18937
	%vr18941 = bitcast %FBSTRING* %vr18937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18941, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B65
	%vr18944 = bitcast i8* bitcast ([63 x i8]* @Lt_0B65 to i8*) to i8*
	; arg 62
	%vr18943 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18944, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr18943
	%vr18947 = bitcast %FBSTRING* %vr18943 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18947, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B66
	%vr18950 = bitcast i8* bitcast ([63 x i8]* @Lt_0B66 to i8*) to i8*
	; arg 62
	%vr18949 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18950, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr18949
	%vr18953 = bitcast %FBSTRING* %vr18949 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18953, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B67
	%vr18956 = bitcast i8* bitcast ([63 x i8]* @Lt_0B67 to i8*) to i8*
	; arg 62
	%vr18955 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18956, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr18955
	%vr18959 = bitcast %FBSTRING* %vr18955 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18959, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B68
	%vr18962 = bitcast i8* bitcast ([63 x i8]* @Lt_0B68 to i8*) to i8*
	; arg 62
	%vr18961 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18962, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr18961
	%vr18965 = bitcast %FBSTRING* %vr18961 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18965, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr18968 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr18967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18968, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18967
	%vr18971 = bitcast %FBSTRING* %vr18967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18971, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B69
	%vr18974 = bitcast i8* bitcast ([14 x i8]* @Lt_0B69 to i8*) to i8*
	; arg 13
	%vr18973 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18974, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr18973
	%vr18977 = bitcast %FBSTRING* %vr18973 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18977, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr18980 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr18979 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18980, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18979
	%vr18983 = bitcast %FBSTRING* %vr18979 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18983, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18986 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18985 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18986, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18985
	%vr18989 = bitcast %FBSTRING* %vr18985 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18989, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18992 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18991 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18992, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18991
	%vr18995 = bitcast %FBSTRING* %vr18991 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18995, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6A
	%vr18998 = bitcast i8* bitcast ([43 x i8]* @Lt_0B6A to i8*) to i8*
	; arg 42
	%vr18997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18998, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18997
	%vr19001 = bitcast %FBSTRING* %vr18997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19001, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19004 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19003 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19004, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19003
	%vr19007 = bitcast %FBSTRING* %vr19003 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19007, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6B
	%vr19010 = bitcast i8* bitcast ([19 x i8]* @Lt_0B6B to i8*) to i8*
	; arg 18
	%vr19009 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19010, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr19009
	%vr19013 = bitcast %FBSTRING* %vr19009 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19013, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19016 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19015 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19016, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19015
	%vr19019 = bitcast %FBSTRING* %vr19015 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19019, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6C
	%vr19022 = bitcast i8* bitcast ([30 x i8]* @Lt_0B6C to i8*) to i8*
	; arg 29
	%vr19021 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19022, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19021
	%vr19025 = bitcast %FBSTRING* %vr19021 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19025, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19028 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19028, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19027
	%vr19031 = bitcast %FBSTRING* %vr19027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19031, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6D
	%vr19034 = bitcast i8* bitcast ([24 x i8]* @Lt_0B6D to i8*) to i8*
	; arg 23
	%vr19033 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19034, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19033
	%vr19037 = bitcast %FBSTRING* %vr19033 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19037, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19040 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19039 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19040, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19039
	%vr19043 = bitcast %FBSTRING* %vr19039 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19043, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6E
	%vr19046 = bitcast i8* bitcast ([30 x i8]* @Lt_0B6E to i8*) to i8*
	; arg 29
	%vr19045 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19046, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19045
	%vr19049 = bitcast %FBSTRING* %vr19045 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19049, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19052 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19051 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19052, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19051
	%vr19055 = bitcast %FBSTRING* %vr19051 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19055, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6F
	%vr19058 = bitcast i8* bitcast ([24 x i8]* @Lt_0B6F to i8*) to i8*
	; arg 23
	%vr19057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19058, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19057
	%vr19061 = bitcast %FBSTRING* %vr19057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19061, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19064 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19063 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19064, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19063
	%vr19067 = bitcast %FBSTRING* %vr19063 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19067, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B70
	%vr19070 = bitcast i8* bitcast ([30 x i8]* @Lt_0B70 to i8*) to i8*
	; arg 29
	%vr19069 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19070, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19069
	%vr19073 = bitcast %FBSTRING* %vr19069 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19073, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19076 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19075 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19076, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19075
	%vr19079 = bitcast %FBSTRING* %vr19075 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19079, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr19082 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr19081 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19082, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19081
	%vr19085 = bitcast %FBSTRING* %vr19081 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19085, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B71
	%vr19088 = bitcast i8* bitcast ([29 x i8]* @Lt_0B71 to i8*) to i8*
	; arg 28
	%vr19087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19088, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19087
	%vr19091 = bitcast %FBSTRING* %vr19087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19091, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19094 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19093 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19094, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19093
	%vr19097 = bitcast %FBSTRING* %vr19093 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19097, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19100 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19099 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19100, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19099
	%vr19103 = bitcast %FBSTRING* %vr19099 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19103, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19106 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19105 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19106, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19105
	%vr19109 = bitcast %FBSTRING* %vr19105 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19109, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B72
	%vr19112 = bitcast i8* bitcast ([53 x i8]* @Lt_0B72 to i8*) to i8*
	; arg 52
	%vr19111 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19112, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr19111
	%vr19115 = bitcast %FBSTRING* %vr19111 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19115, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19118 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19118, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19117
	%vr19121 = bitcast %FBSTRING* %vr19117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19121, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B73
	%vr19124 = bitcast i8* bitcast ([16 x i8]* @Lt_0B73 to i8*) to i8*
	; arg 15
	%vr19123 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19124, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr19123
	%vr19127 = bitcast %FBSTRING* %vr19123 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19127, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B74
	%vr19130 = bitcast i8* bitcast ([29 x i8]* @Lt_0B74 to i8*) to i8*
	; arg 28
	%vr19129 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19130, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19129
	%vr19133 = bitcast %FBSTRING* %vr19129 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19133, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B75
	%vr19136 = bitcast i8* bitcast ([76 x i8]* @Lt_0B75 to i8*) to i8*
	; arg 75
	%vr19135 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19136, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr19135
	%vr19139 = bitcast %FBSTRING* %vr19135 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19139, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr19142 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr19141 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19142, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19141
	%vr19145 = bitcast %FBSTRING* %vr19141 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19145, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B76
	%vr19148 = bitcast i8* bitcast ([26 x i8]* @Lt_0B76 to i8*) to i8*
	; arg 25
	%vr19147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19148, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19147
	%vr19151 = bitcast %FBSTRING* %vr19147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19151, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr19154 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr19153 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19154, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr19153
	%vr19157 = bitcast %FBSTRING* %vr19153 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19157, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B77
	%vr19160 = bitcast i8* bitcast ([17 x i8]* @Lt_0B77 to i8*) to i8*
	; arg 16
	%vr19159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19160, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr19159
	%vr19163 = bitcast %FBSTRING* %vr19159 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19163, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19166 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19165 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19166, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19165
	%vr19169 = bitcast %FBSTRING* %vr19165 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19169, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B78
	%vr19172 = bitcast i8* bitcast ([24 x i8]* @Lt_0B78 to i8*) to i8*
	; arg 23
	%vr19171 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19172, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19171
	%vr19175 = bitcast %FBSTRING* %vr19171 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19175, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B79
	%vr19178 = bitcast i8* bitcast ([24 x i8]* @Lt_0B79 to i8*) to i8*
	; arg 23
	%vr19177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19178, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19177
	%vr19181 = bitcast %FBSTRING* %vr19177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19181, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7A
	%vr19184 = bitcast i8* bitcast ([24 x i8]* @Lt_0B7A to i8*) to i8*
	; arg 23
	%vr19183 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19184, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19183
	%vr19187 = bitcast %FBSTRING* %vr19183 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19187, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7B
	%vr19190 = bitcast i8* bitcast ([21 x i8]* @Lt_0B7B to i8*) to i8*
	; arg 20
	%vr19189 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19190, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr19189
	%vr19193 = bitcast %FBSTRING* %vr19189 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19193, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7C
	%vr19196 = bitcast i8* bitcast ([64 x i8]* @Lt_0B7C to i8*) to i8*
	; arg 63
	%vr19195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19196, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr19195
	%vr19199 = bitcast %FBSTRING* %vr19195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19199, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7D
	%vr19202 = bitcast i8* bitcast ([64 x i8]* @Lt_0B7D to i8*) to i8*
	; arg 63
	%vr19201 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19202, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr19201
	%vr19205 = bitcast %FBSTRING* %vr19201 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19205, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7E
	%vr19208 = bitcast i8* bitcast ([63 x i8]* @Lt_0B7E to i8*) to i8*
	; arg 62
	%vr19207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19208, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr19207
	%vr19211 = bitcast %FBSTRING* %vr19207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19211, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr19214 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr19213 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19214, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr19213
	%vr19217 = bitcast %FBSTRING* %vr19213 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19217, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19220 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19219 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19220, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19219
	%vr19223 = bitcast %FBSTRING* %vr19219 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19223, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7F
	%vr19226 = bitcast i8* bitcast ([29 x i8]* @Lt_0B7F to i8*) to i8*
	; arg 28
	%vr19225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19226, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19225
	%vr19229 = bitcast %FBSTRING* %vr19225 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19229, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B80
	%vr19232 = bitcast i8* bitcast ([12 x i8]* @Lt_0B80 to i8*) to i8*
	; arg 11
	%vr19231 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19232, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19231
	%vr19235 = bitcast %FBSTRING* %vr19231 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19235, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19238 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19238, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19237
	%vr19241 = bitcast %FBSTRING* %vr19237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19241, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B81
	%vr19244 = bitcast i8* bitcast ([12 x i8]* @Lt_0B81 to i8*) to i8*
	; arg 11
	%vr19243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19244, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19243
	%vr19247 = bitcast %FBSTRING* %vr19243 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19247, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B82
	%vr19250 = bitcast i8* bitcast ([18 x i8]* @Lt_0B82 to i8*) to i8*
	; arg 17
	%vr19249 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19250, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19249
	%vr19253 = bitcast %FBSTRING* %vr19249 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19253, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19256 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19255 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19256, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19255
	%vr19259 = bitcast %FBSTRING* %vr19255 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19259, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr19262 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr19261 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19262, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19261
	%vr19265 = bitcast %FBSTRING* %vr19261 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19265, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B83
	%vr19268 = bitcast i8* bitcast ([28 x i8]* @Lt_0B83 to i8*) to i8*
	; arg 27
	%vr19267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19268, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr19267
	%vr19271 = bitcast %FBSTRING* %vr19267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19271, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B80
	%vr19274 = bitcast i8* bitcast ([12 x i8]* @Lt_0B80 to i8*) to i8*
	; arg 11
	%vr19273 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19274, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19273
	%vr19277 = bitcast %FBSTRING* %vr19273 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19277, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19280 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19279 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19280, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19279
	%vr19283 = bitcast %FBSTRING* %vr19279 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19283, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B81
	%vr19286 = bitcast i8* bitcast ([12 x i8]* @Lt_0B81 to i8*) to i8*
	; arg 11
	%vr19285 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19286, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19285
	%vr19289 = bitcast %FBSTRING* %vr19285 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19289, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B84
	%vr19292 = bitcast i8* bitcast ([18 x i8]* @Lt_0B84 to i8*) to i8*
	; arg 17
	%vr19291 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19292, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19291
	%vr19295 = bitcast %FBSTRING* %vr19291 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19295, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19298 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19298, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19297
	%vr19301 = bitcast %FBSTRING* %vr19297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19301, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr19304 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr19303 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19304, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19303
	%vr19307 = bitcast %FBSTRING* %vr19303 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19307, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B85
	%vr19310 = bitcast i8* bitcast ([33 x i8]* @Lt_0B85 to i8*) to i8*
	; arg 32
	%vr19309 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19310, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr19309
	%vr19313 = bitcast %FBSTRING* %vr19309 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19313, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B80
	%vr19316 = bitcast i8* bitcast ([12 x i8]* @Lt_0B80 to i8*) to i8*
	; arg 11
	%vr19315 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19316, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19315
	%vr19319 = bitcast %FBSTRING* %vr19315 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19319, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19322 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19321 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19322, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19321
	%vr19325 = bitcast %FBSTRING* %vr19321 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19325, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B81
	%vr19328 = bitcast i8* bitcast ([12 x i8]* @Lt_0B81 to i8*) to i8*
	; arg 11
	%vr19327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19328, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19327
	%vr19331 = bitcast %FBSTRING* %vr19327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19331, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B84
	%vr19334 = bitcast i8* bitcast ([18 x i8]* @Lt_0B84 to i8*) to i8*
	; arg 17
	%vr19333 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19334, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19333
	%vr19337 = bitcast %FBSTRING* %vr19333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19337, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr19340 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr19339 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19340, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19339
	%vr19343 = bitcast %FBSTRING* %vr19339 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19343, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr19346 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr19345 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19346, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19345
	%vr19349 = bitcast %FBSTRING* %vr19345 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19349, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B86
	%vr19352 = bitcast i8* bitcast ([29 x i8]* @Lt_0B86 to i8*) to i8*
	; arg 28
	%vr19351 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19352, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19351
	%vr19355 = bitcast %FBSTRING* %vr19351 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19355, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B80
	%vr19358 = bitcast i8* bitcast ([12 x i8]* @Lt_0B80 to i8*) to i8*
	; arg 11
	%vr19357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19358, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19357
	%vr19361 = bitcast %FBSTRING* %vr19357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19361, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19364 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19363 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19364, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19363
	%vr19367 = bitcast %FBSTRING* %vr19363 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19367, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B81
	%vr19370 = bitcast i8* bitcast ([12 x i8]* @Lt_0B81 to i8*) to i8*
	; arg 11
	%vr19369 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19370, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr19369
	%vr19373 = bitcast %FBSTRING* %vr19369 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19373, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B87
	%vr19376 = bitcast i8* bitcast ([18 x i8]* @Lt_0B87 to i8*) to i8*
	; arg 17
	%vr19375 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19376, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19375
	%vr19379 = bitcast %FBSTRING* %vr19375 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19379, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr19382 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr19381 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19382, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19381
	%vr19385 = bitcast %FBSTRING* %vr19381 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19385, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19388 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19388, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19387
	%vr19391 = bitcast %FBSTRING* %vr19387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19391, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B88
	%vr19394 = bitcast i8* bitcast ([14 x i8]* @Lt_0B88 to i8*) to i8*
	; arg 13
	%vr19393 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19394, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr19393
	%vr19397 = bitcast %FBSTRING* %vr19393 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19397, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19400 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19399 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19400, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19399
	%vr19403 = bitcast %FBSTRING* %vr19399 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19403, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19406 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19405 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19406, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19405
	%vr19409 = bitcast %FBSTRING* %vr19405 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19409, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B89
	%vr19412 = bitcast i8* bitcast ([32 x i8]* @Lt_0B89 to i8*) to i8*
	; arg 31
	%vr19411 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19412, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr19411
	%vr19415 = bitcast %FBSTRING* %vr19411 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19415, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19418 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19418, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19417
	%vr19421 = bitcast %FBSTRING* %vr19417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19421, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8A
	%vr19424 = bitcast i8* bitcast ([26 x i8]* @Lt_0B8A to i8*) to i8*
	; arg 25
	%vr19423 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19424, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19423
	%vr19427 = bitcast %FBSTRING* %vr19423 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19427, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8B
	%vr19430 = bitcast i8* bitcast ([26 x i8]* @Lt_0B8B to i8*) to i8*
	; arg 25
	%vr19429 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19430, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19429
	%vr19433 = bitcast %FBSTRING* %vr19429 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19433, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8C
	%vr19436 = bitcast i8* bitcast ([27 x i8]* @Lt_0B8C to i8*) to i8*
	; arg 26
	%vr19435 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19436, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19435
	%vr19439 = bitcast %FBSTRING* %vr19435 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19439, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8D
	%vr19442 = bitcast i8* bitcast ([36 x i8]* @Lt_0B8D to i8*) to i8*
	; arg 35
	%vr19441 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19442, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19441
	%vr19445 = bitcast %FBSTRING* %vr19441 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19445, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19448 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19448, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19447
	%vr19451 = bitcast %FBSTRING* %vr19447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19451, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19454 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19453 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19454, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19453
	%vr19457 = bitcast %FBSTRING* %vr19453 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19457, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8E
	%vr19460 = bitcast i8* bitcast ([48 x i8]* @Lt_0B8E to i8*) to i8*
	; arg 47
	%vr19459 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19460, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr19459
	%vr19463 = bitcast %FBSTRING* %vr19459 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19463, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19466 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19465 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19466, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19465
	%vr19469 = bitcast %FBSTRING* %vr19465 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19469, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8A
	%vr19472 = bitcast i8* bitcast ([26 x i8]* @Lt_0B8A to i8*) to i8*
	; arg 25
	%vr19471 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19472, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19471
	%vr19475 = bitcast %FBSTRING* %vr19471 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19475, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8C
	%vr19478 = bitcast i8* bitcast ([27 x i8]* @Lt_0B8C to i8*) to i8*
	; arg 26
	%vr19477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19478, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19477
	%vr19481 = bitcast %FBSTRING* %vr19477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19481, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8F
	%vr19484 = bitcast i8* bitcast ([35 x i8]* @Lt_0B8F to i8*) to i8*
	; arg 34
	%vr19483 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19484, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr19483
	%vr19487 = bitcast %FBSTRING* %vr19483 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19487, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B90
	%vr19490 = bitcast i8* bitcast ([32 x i8]* @Lt_0B90 to i8*) to i8*
	; arg 31
	%vr19489 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19490, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr19489
	%vr19493 = bitcast %FBSTRING* %vr19489 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19493, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B91
	%vr19496 = bitcast i8* bitcast ([60 x i8]* @Lt_0B91 to i8*) to i8*
	; arg 59
	%vr19495 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19496, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr19495
	%vr19499 = bitcast %FBSTRING* %vr19495 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19499, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19502 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19501 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19502, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19501
	%vr19505 = bitcast %FBSTRING* %vr19501 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19505, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19508 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19508, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19507
	%vr19511 = bitcast %FBSTRING* %vr19507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19511, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B92
	%vr19514 = bitcast i8* bitcast ([65 x i8]* @Lt_0B92 to i8*) to i8*
	; arg 64
	%vr19513 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19514, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr19513
	%vr19517 = bitcast %FBSTRING* %vr19513 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19517, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B93
	%vr19520 = bitcast i8* bitcast ([76 x i8]* @Lt_0B93 to i8*) to i8*
	; arg 75
	%vr19519 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19520, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr19519
	%vr19523 = bitcast %FBSTRING* %vr19519 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19523, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19526 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19525 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19526, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19525
	%vr19529 = bitcast %FBSTRING* %vr19525 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19529, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B94
	%vr19532 = bitcast i8* bitcast ([106 x i8]* @Lt_0B94 to i8*) to i8*
	; arg 105
	%vr19531 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19532, i64 105 )

	; call fb_PrintString()
	; arg 1
	; arg vr19531
	%vr19535 = bitcast %FBSTRING* %vr19531 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19535, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B95
	%vr19538 = bitcast i8* bitcast ([60 x i8]* @Lt_0B95 to i8*) to i8*
	; arg 59
	%vr19537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19538, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr19537
	%vr19541 = bitcast %FBSTRING* %vr19537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19541, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19544 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19543 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19544, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19543
	%vr19547 = bitcast %FBSTRING* %vr19543 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19547, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B96
	%vr19550 = bitcast i8* bitcast ([54 x i8]* @Lt_0B96 to i8*) to i8*
	; arg 53
	%vr19549 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19550, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr19549
	%vr19553 = bitcast %FBSTRING* %vr19549 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19553, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19556 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19555 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19556, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19555
	%vr19559 = bitcast %FBSTRING* %vr19555 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19559, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B97
	%vr19562 = bitcast i8* bitcast ([36 x i8]* @Lt_0B97 to i8*) to i8*
	; arg 35
	%vr19561 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19562, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19561
	%vr19565 = bitcast %FBSTRING* %vr19561 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19565, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B98
	%vr19568 = bitcast i8* bitcast ([101 x i8]* @Lt_0B98 to i8*) to i8*
	; arg 100
	%vr19567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19568, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr19567
	%vr19571 = bitcast %FBSTRING* %vr19567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19571, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19574 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19573 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19574, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19573
	%vr19577 = bitcast %FBSTRING* %vr19573 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19577, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B99
	%vr19580 = bitcast i8* bitcast ([36 x i8]* @Lt_0B99 to i8*) to i8*
	; arg 35
	%vr19579 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19580, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19579
	%vr19583 = bitcast %FBSTRING* %vr19579 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19583, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19586 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19585 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19586, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19585
	%vr19589 = bitcast %FBSTRING* %vr19585 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19589, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9A
	%vr19592 = bitcast i8* bitcast ([60 x i8]* @Lt_0B9A to i8*) to i8*
	; arg 59
	%vr19591 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19592, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr19591
	%vr19595 = bitcast %FBSTRING* %vr19591 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19595, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr19598 = bitcast i8* bitcast ([4 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 3
	%vr19597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19598, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr19597
	%vr19601 = bitcast %FBSTRING* %vr19597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19601, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9B
	%vr19604 = bitcast i8* bitcast ([30 x i8]* @Lt_0B9B to i8*) to i8*
	; arg 29
	%vr19603 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19604, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19603
	%vr19607 = bitcast %FBSTRING* %vr19603 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19607, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9C
	%vr19610 = bitcast i8* bitcast ([88 x i8]* @Lt_0B9C to i8*) to i8*
	; arg 87
	%vr19609 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19610, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr19609
	%vr19613 = bitcast %FBSTRING* %vr19609 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19613, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19616 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19615 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19616, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19615
	%vr19619 = bitcast %FBSTRING* %vr19615 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19619, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19622 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19621 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19622, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19621
	%vr19625 = bitcast %FBSTRING* %vr19621 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19625, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9D
	%vr19628 = bitcast i8* bitcast ([22 x i8]* @Lt_0B9D to i8*) to i8*
	; arg 21
	%vr19627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19628, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr19627
	%vr19631 = bitcast %FBSTRING* %vr19627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19631, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19634 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19633 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19634, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19633
	%vr19637 = bitcast %FBSTRING* %vr19633 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19637, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9E
	%vr19640 = bitcast i8* bitcast ([27 x i8]* @Lt_0B9E to i8*) to i8*
	; arg 26
	%vr19639 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19640, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19639
	%vr19643 = bitcast %FBSTRING* %vr19639 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19643, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19646 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19645 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19646, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19645
	%vr19649 = bitcast %FBSTRING* %vr19645 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19649, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19652 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19651 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19652, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19651
	%vr19655 = bitcast %FBSTRING* %vr19651 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19655, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9F
	%vr19658 = bitcast i8* bitcast ([49 x i8]* @Lt_0B9F to i8*) to i8*
	; arg 48
	%vr19657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19658, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr19657
	%vr19661 = bitcast %FBSTRING* %vr19657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19661, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19664 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19663 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19664, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19663
	%vr19667 = bitcast %FBSTRING* %vr19663 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19667, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA0
	%vr19670 = bitcast i8* bitcast ([27 x i8]* @Lt_0BA0 to i8*) to i8*
	; arg 26
	%vr19669 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19670, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19669
	%vr19673 = bitcast %FBSTRING* %vr19669 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19673, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA1
	%vr19676 = bitcast i8* bitcast ([82 x i8]* @Lt_0BA1 to i8*) to i8*
	; arg 81
	%vr19675 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19676, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr19675
	%vr19679 = bitcast %FBSTRING* %vr19675 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19679, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA2
	%vr19682 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA2 to i8*) to i8*
	; arg 23
	%vr19681 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19682, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19681
	%vr19685 = bitcast %FBSTRING* %vr19681 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19685, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA3
	%vr19688 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA3 to i8*) to i8*
	; arg 23
	%vr19687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19688, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19687
	%vr19691 = bitcast %FBSTRING* %vr19687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19691, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA4
	%vr19694 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA4 to i8*) to i8*
	; arg 23
	%vr19693 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19694, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19693
	%vr19697 = bitcast %FBSTRING* %vr19693 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19697, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA5
	%vr19700 = bitcast i8* bitcast ([42 x i8]* @Lt_0BA5 to i8*) to i8*
	; arg 41
	%vr19699 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19700, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr19699
	%vr19703 = bitcast %FBSTRING* %vr19699 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19703, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA6
	%vr19706 = bitcast i8* bitcast ([98 x i8]* @Lt_0BA6 to i8*) to i8*
	; arg 97
	%vr19705 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19706, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr19705
	%vr19709 = bitcast %FBSTRING* %vr19705 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19709, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr19712 = bitcast i8* bitcast ([6 x i8]* @Lt_087C to i8*) to i8*
	; arg 5
	%vr19711 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19712, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19711
	%vr19715 = bitcast %FBSTRING* %vr19711 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19715, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA7
	%vr19718 = bitcast i8* bitcast ([51 x i8]* @Lt_0BA7 to i8*) to i8*
	; arg 50
	%vr19717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19718, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr19717
	%vr19721 = bitcast %FBSTRING* %vr19717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19721, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA8
	%vr19724 = bitcast i8* bitcast ([52 x i8]* @Lt_0BA8 to i8*) to i8*
	; arg 51
	%vr19723 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19724, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr19723
	%vr19727 = bitcast %FBSTRING* %vr19723 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19727, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA9
	%vr19730 = bitcast i8* bitcast ([37 x i8]* @Lt_0BA9 to i8*) to i8*
	; arg 36
	%vr19729 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19730, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr19729
	%vr19733 = bitcast %FBSTRING* %vr19729 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19733, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr19736 = bitcast i8* bitcast ([6 x i8]* @Lt_0850 to i8*) to i8*
	; arg 5
	%vr19735 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19736, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19735
	%vr19739 = bitcast %FBSTRING* %vr19735 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19739, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAA
	%vr19742 = bitcast i8* bitcast ([19 x i8]* @Lt_0BAA to i8*) to i8*
	; arg 18
	%vr19741 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19742, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr19741
	%vr19745 = bitcast %FBSTRING* %vr19741 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19745, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr19748 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr19747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19748, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19747
	%vr19751 = bitcast %FBSTRING* %vr19747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19751, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAB
	%vr19754 = bitcast i8* bitcast ([16 x i8]* @Lt_0BAB to i8*) to i8*
	; arg 15
	%vr19753 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19754, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr19753
	%vr19757 = bitcast %FBSTRING* %vr19753 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19757, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr19760 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr19759 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19760, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr19759
	%vr19763 = bitcast %FBSTRING* %vr19759 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19763, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr19766 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr19765 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19766, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19765
	%vr19769 = bitcast %FBSTRING* %vr19765 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19769, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19772 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19771 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19772, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19771
	%vr19775 = bitcast %FBSTRING* %vr19771 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19775, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAD
	%vr19778 = bitcast i8* bitcast ([140 x i8]* @Lt_0BAD to i8*) to i8*
	; arg 139
	%vr19777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19778, i64 139 )

	; call fb_PrintString()
	; arg 1
	; arg vr19777
	%vr19781 = bitcast %FBSTRING* %vr19777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19781, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr19784 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr19783 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19784, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19783
	%vr19787 = bitcast %FBSTRING* %vr19783 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19787, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAE
	%vr19790 = bitcast i8* bitcast ([26 x i8]* @Lt_0BAE to i8*) to i8*
	; arg 25
	%vr19789 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19790, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19789
	%vr19793 = bitcast %FBSTRING* %vr19789 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19793, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr19796 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr19795 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19796, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19795
	%vr19799 = bitcast %FBSTRING* %vr19795 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19799, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA3
	%vr19802 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA3 to i8*) to i8*
	; arg 23
	%vr19801 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19802, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19801
	%vr19805 = bitcast %FBSTRING* %vr19801 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19805, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA4
	%vr19808 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA4 to i8*) to i8*
	; arg 23
	%vr19807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19808, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19807
	%vr19811 = bitcast %FBSTRING* %vr19807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19811, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19814 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19813 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19814, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19813
	%vr19817 = bitcast %FBSTRING* %vr19813 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19817, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8A
	%vr19820 = bitcast i8* bitcast ([26 x i8]* @Lt_0B8A to i8*) to i8*
	; arg 25
	%vr19819 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19820, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19819
	%vr19823 = bitcast %FBSTRING* %vr19819 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19823, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19826 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19825 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19826, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19825
	%vr19829 = bitcast %FBSTRING* %vr19825 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19829, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAF
	%vr19832 = bitcast i8* bitcast ([62 x i8]* @Lt_0BAF to i8*) to i8*
	; arg 61
	%vr19831 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19832, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr19831
	%vr19835 = bitcast %FBSTRING* %vr19831 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19835, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB0
	%vr19838 = bitcast i8* bitcast ([31 x i8]* @Lt_0BB0 to i8*) to i8*
	; arg 30
	%vr19837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19838, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19837
	%vr19841 = bitcast %FBSTRING* %vr19837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19841, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB1
	%vr19844 = bitcast i8* bitcast ([47 x i8]* @Lt_0BB1 to i8*) to i8*
	; arg 46
	%vr19843 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19844, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr19843
	%vr19847 = bitcast %FBSTRING* %vr19843 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19847, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr19850 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr19849 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19850, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr19849
	%vr19853 = bitcast %FBSTRING* %vr19849 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19853, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB2
	%vr19856 = bitcast i8* bitcast ([74 x i8]* @Lt_0BB2 to i8*) to i8*
	; arg 73
	%vr19855 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19856, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr19855
	%vr19859 = bitcast %FBSTRING* %vr19855 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19859, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB3
	%vr19862 = bitcast i8* bitcast ([23 x i8]* @Lt_0BB3 to i8*) to i8*
	; arg 22
	%vr19861 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19862, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr19861
	%vr19865 = bitcast %FBSTRING* %vr19861 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19865, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB4
	%vr19868 = bitcast i8* bitcast ([31 x i8]* @Lt_0BB4 to i8*) to i8*
	; arg 30
	%vr19867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19868, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19867
	%vr19871 = bitcast %FBSTRING* %vr19867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19871, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB5
	%vr19874 = bitcast i8* bitcast ([20 x i8]* @Lt_0BB5 to i8*) to i8*
	; arg 19
	%vr19873 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19874, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr19873
	%vr19877 = bitcast %FBSTRING* %vr19873 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19877, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB6
	%vr19880 = bitcast i8* bitcast ([29 x i8]* @Lt_0BB6 to i8*) to i8*
	; arg 28
	%vr19879 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19880, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19879
	%vr19883 = bitcast %FBSTRING* %vr19879 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19883, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr19886 = bitcast i8* bitcast ([3 x i8]* @Lt_07DB to i8*) to i8*
	; arg 2
	%vr19885 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19886, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr19885
	%vr19889 = bitcast %FBSTRING* %vr19885 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19889, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB7
	%vr19892 = bitcast i8* bitcast ([22 x i8]* @Lt_0BB7 to i8*) to i8*
	; arg 21
	%vr19891 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19892, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr19891
	%vr19895 = bitcast %FBSTRING* %vr19891 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19895, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr19898 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr19897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19898, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr19897
	%vr19901 = bitcast %FBSTRING* %vr19897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19901, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr19904 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr19903 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19904, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr19903
	%vr19907 = bitcast %FBSTRING* %vr19903 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19907, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB8
	%vr19910 = bitcast i8* bitcast ([47 x i8]* @Lt_0BB8 to i8*) to i8*
	; arg 46
	%vr19909 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19910, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr19909
	%vr19913 = bitcast %FBSTRING* %vr19909 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19913, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr19916 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr19915 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19916, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr19915
	%vr19919 = bitcast %FBSTRING* %vr19915 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19919, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B6
	%vr19922 = bitcast i8* bitcast ([19 x i8]* @Lt_06B6 to i8*) to i8*
	; arg 18
	%vr19921 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19922, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr19921
	%vr19925 = bitcast %FBSTRING* %vr19921 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19925, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB9
	%vr19928 = bitcast i8* bitcast ([69 x i8]* @Lt_0BB9 to i8*) to i8*
	; arg 68
	%vr19927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19928, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr19927
	%vr19931 = bitcast %FBSTRING* %vr19927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19931, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr19934 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr19933 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19934, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19933
	%vr19937 = bitcast %FBSTRING* %vr19933 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19937, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBA
	%vr19940 = bitcast i8* bitcast ([31 x i8]* @Lt_0BBA to i8*) to i8*
	; arg 30
	%vr19939 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19940, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19939
	%vr19943 = bitcast %FBSTRING* %vr19939 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19943, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr19946 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr19945 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19946, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr19945
	%vr19949 = bitcast %FBSTRING* %vr19945 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19949, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBB
	%vr19952 = bitcast i8* bitcast ([10 x i8]* @Lt_0BBB to i8*) to i8*
	; arg 9
	%vr19951 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19952, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr19951
	%vr19955 = bitcast %FBSTRING* %vr19951 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19955, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBD
	%vr19958 = bitcast i8* bitcast ([124 x i8]* @Lt_0BBD to i8*) to i8*
	; arg 123
	%vr19957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19958, i64 123 )

	; call fb_PrintString()
	; arg 1
	; arg vr19957
	%vr19961 = bitcast %FBSTRING* %vr19957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19961, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBE
	%vr19964 = bitcast i8* bitcast ([113 x i8]* @Lt_0BBE to i8*) to i8*
	; arg 112
	%vr19963 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19964, i64 112 )

	; call fb_PrintString()
	; arg 1
	; arg vr19963
	%vr19967 = bitcast %FBSTRING* %vr19963 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19967, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBF
	%vr19970 = bitcast i8* bitcast ([106 x i8]* @Lt_0BBF to i8*) to i8*
	; arg 105
	%vr19969 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19970, i64 105 )

	; call fb_PrintString()
	; arg 1
	; arg vr19969
	%vr19973 = bitcast %FBSTRING* %vr19969 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19973, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC1
	%vr19976 = bitcast i8* bitcast ([131 x i8]* @Lt_0BC1 to i8*) to i8*
	; arg 130
	%vr19975 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19976, i64 130 )

	; call fb_PrintString()
	; arg 1
	; arg vr19975
	%vr19979 = bitcast %FBSTRING* %vr19975 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19979, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr19982 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr19981 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19982, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr19981
	%vr19985 = bitcast %FBSTRING* %vr19981 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19985, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC2
	%vr19988 = bitcast i8* bitcast ([61 x i8]* @Lt_0BC2 to i8*) to i8*
	; arg 60
	%vr19987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19988, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr19987
	%vr19991 = bitcast %FBSTRING* %vr19987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19991, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC3
	%vr19994 = bitcast i8* bitcast ([48 x i8]* @Lt_0BC3 to i8*) to i8*
	; arg 47
	%vr19993 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19994, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr19993
	%vr19997 = bitcast %FBSTRING* %vr19993 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19997, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A59
	%vr20000 = bitcast i8* bitcast ([10 x i8]* @Lt_0A59 to i8*) to i8*
	; arg 9
	%vr19999 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20000, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr19999
	%vr20003 = bitcast %FBSTRING* %vr19999 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20003, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC4
	%vr20006 = bitcast i8* bitcast ([7 x i8]* @Lt_0BC4 to i8*) to i8*
	; arg 6
	%vr20005 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20006, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr20005
	%vr20009 = bitcast %FBSTRING* %vr20005 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20009, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBB
	%vr20012 = bitcast i8* bitcast ([10 x i8]* @Lt_0BBB to i8*) to i8*
	; arg 9
	%vr20011 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20012, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr20011
	%vr20015 = bitcast %FBSTRING* %vr20011 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20015, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC5
	%vr20018 = bitcast i8* bitcast ([57 x i8]* @Lt_0BC5 to i8*) to i8*
	; arg 56
	%vr20017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20018, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr20017
	%vr20021 = bitcast %FBSTRING* %vr20017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20021, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC6
	%vr20024 = bitcast i8* bitcast ([33 x i8]* @Lt_0BC6 to i8*) to i8*
	; arg 32
	%vr20023 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20024, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr20023
	%vr20027 = bitcast %FBSTRING* %vr20023 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20027, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC3
	%vr20030 = bitcast i8* bitcast ([48 x i8]* @Lt_0BC3 to i8*) to i8*
	; arg 47
	%vr20029 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20030, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr20029
	%vr20033 = bitcast %FBSTRING* %vr20029 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20033, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC7
	%vr20036 = bitcast i8* bitcast ([15 x i8]* @Lt_0BC7 to i8*) to i8*
	; arg 14
	%vr20035 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20036, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr20035
	%vr20039 = bitcast %FBSTRING* %vr20035 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20039, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC9
	%vr20042 = bitcast i8* bitcast ([127 x i8]* @Lt_0BC9 to i8*) to i8*
	; arg 126
	%vr20041 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20042, i64 126 )

	; call fb_PrintString()
	; arg 1
	; arg vr20041
	%vr20045 = bitcast %FBSTRING* %vr20041 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20045, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCA
	%vr20048 = bitcast i8* bitcast ([34 x i8]* @Lt_0BCA to i8*) to i8*
	; arg 33
	%vr20047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20048, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr20047
	%vr20051 = bitcast %FBSTRING* %vr20047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20051, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC3
	%vr20054 = bitcast i8* bitcast ([48 x i8]* @Lt_0BC3 to i8*) to i8*
	; arg 47
	%vr20053 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20054, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr20053
	%vr20057 = bitcast %FBSTRING* %vr20053 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20057, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC7
	%vr20060 = bitcast i8* bitcast ([15 x i8]* @Lt_0BC7 to i8*) to i8*
	; arg 14
	%vr20059 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20060, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr20059
	%vr20063 = bitcast %FBSTRING* %vr20059 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20063, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A59
	%vr20066 = bitcast i8* bitcast ([10 x i8]* @Lt_0A59 to i8*) to i8*
	; arg 9
	%vr20065 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20066, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr20065
	%vr20069 = bitcast %FBSTRING* %vr20065 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20069, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr20072 = bitcast i8* bitcast ([9 x i8]* @Lt_0740 to i8*) to i8*
	; arg 8
	%vr20071 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20072, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr20071
	%vr20075 = bitcast %FBSTRING* %vr20071 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20075, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCB
	%vr20078 = bitcast i8* bitcast ([3 x i8]* @Lt_0BCB to i8*) to i8*
	; arg 2
	%vr20077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20078, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr20077
	%vr20081 = bitcast %FBSTRING* %vr20077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20081, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCC
	%vr20084 = bitcast i8* bitcast ([46 x i8]* @Lt_0BCC to i8*) to i8*
	; arg 45
	%vr20083 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20084, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr20083
	%vr20087 = bitcast %FBSTRING* %vr20083 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20087, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCD
	%vr20090 = bitcast i8* bitcast ([19 x i8]* @Lt_0BCD to i8*) to i8*
	; arg 18
	%vr20089 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20090, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr20089
	%vr20093 = bitcast %FBSTRING* %vr20089 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20093, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCE
	%vr20096 = bitcast i8* bitcast ([82 x i8]* @Lt_0BCE to i8*) to i8*
	; arg 81
	%vr20095 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20096, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr20095
	%vr20099 = bitcast %FBSTRING* %vr20095 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20099, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCF
	%vr20102 = bitcast i8* bitcast ([11 x i8]* @Lt_0BCF to i8*) to i8*
	; arg 10
	%vr20101 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20102, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr20101
	%vr20105 = bitcast %FBSTRING* %vr20101 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20105, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr20108 = bitcast i8* bitcast ([3 x i8]* @Lt_089D to i8*) to i8*
	; arg 2
	%vr20107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20108, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr20107
	%vr20111 = bitcast %FBSTRING* %vr20107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20111, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr20114 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr20113 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20114, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20113
	%vr20117 = bitcast %FBSTRING* %vr20113 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20117, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD0
	%vr20120 = bitcast i8* bitcast ([38 x i8]* @Lt_0BD0 to i8*) to i8*
	; arg 37
	%vr20119 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20120, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr20119
	%vr20123 = bitcast %FBSTRING* %vr20119 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20123, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr20126 = bitcast i8* bitcast ([2 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 1
	%vr20125 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20126, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20125
	%vr20129 = bitcast %FBSTRING* %vr20125 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20129, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD1
	%vr20132 = bitcast i8* bitcast ([26 x i8]* @Lt_0BD1 to i8*) to i8*
	; arg 25
	%vr20131 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20132, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20131
	%vr20135 = bitcast %FBSTRING* %vr20131 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20135, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr20138 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr20137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20138, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr20137
	%vr20141 = bitcast %FBSTRING* %vr20137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20141, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD2
	%vr20144 = bitcast i8* bitcast ([35 x i8]* @Lt_0BD2 to i8*) to i8*
	; arg 34
	%vr20143 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20144, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20143
	%vr20147 = bitcast %FBSTRING* %vr20143 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20147, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr20150 = bitcast i8* bitcast ([5 x i8]* @Lt_06DA to i8*) to i8*
	; arg 4
	%vr20149 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20150, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr20149
	%vr20153 = bitcast %FBSTRING* %vr20149 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20153, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD3
	%vr20156 = bitcast i8* bitcast ([53 x i8]* @Lt_0BD3 to i8*) to i8*
	; arg 52
	%vr20155 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20156, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr20155
	%vr20159 = bitcast %FBSTRING* %vr20155 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20159, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr20162 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr20161 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20162, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20161
	%vr20165 = bitcast %FBSTRING* %vr20161 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20165, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD4
	%vr20168 = bitcast i8* bitcast ([56 x i8]* @Lt_0BD4 to i8*) to i8*
	; arg 55
	%vr20167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20168, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr20167
	%vr20171 = bitcast %FBSTRING* %vr20167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20171, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr20174 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr20173 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20174, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20173
	%vr20177 = bitcast %FBSTRING* %vr20173 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20177, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD4
	%vr20180 = bitcast i8* bitcast ([56 x i8]* @Lt_0BD4 to i8*) to i8*
	; arg 55
	%vr20179 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20180, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr20179
	%vr20183 = bitcast %FBSTRING* %vr20179 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20183, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr20186 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr20185 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20186, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20185
	%vr20189 = bitcast %FBSTRING* %vr20185 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20189, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1114:

	; label .Lt_0665
	br label %.Lt_0665
.Lt_0665:

	; branchbop V <> 1
	%vr20193 = load i64, i64* %V.111
	%vr20192 = icmp ne i64 %vr20193, 1
	br i1 %vr20192, label %.Lt_0BD5, label %.Lt_1115
.Lt_1115:

	; label .Lt_0BD6
	br label %.Lt_0BD6
.Lt_0BD6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr20196 = bitcast i8* bitcast ([2 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 1
	%vr20195 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20196, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr20195
	%vr20199 = bitcast %FBSTRING* %vr20195 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20199, i32 1 )

	; call fb_FileClose()
	; arg 1
	%vr20201 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1116:

	; label .Lt_0BD5
	br label %.Lt_0BD5
.Lt_0BD5:

	; branchbop V <> 2
	%vr20205 = load i64, i64* %V.111
	%vr20204 = icmp ne i64 %vr20205, 2
	br i1 %vr20204, label %.Lt_0BD7, label %.Lt_1117
.Lt_1117:

	; label .Lt_0BD8
	br label %.Lt_0BD8
.Lt_0BD8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD9
	%vr20208 = bitcast i8* bitcast ([11 x i8]* @Lt_0BD9 to i8*) to i8*
	; arg 10
	%vr20207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20208, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr20207
	%vr20211 = bitcast %FBSTRING* %vr20207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20211, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1118:

	; label .Lt_0BD7
	br label %.Lt_0BD7
.Lt_0BD7:

	; branchbop V <> 3
	%vr20215 = load i64, i64* %V.111
	%vr20214 = icmp ne i64 %vr20215, 3
	br i1 %vr20214, label %.Lt_0BDA, label %.Lt_1119
.Lt_1119:

	; label .Lt_0BDB
	br label %.Lt_0BDB
.Lt_0BDB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BDC
	%vr20218 = bitcast i8* bitcast ([36 x i8]* @Lt_0BDC to i8*) to i8*
	; arg 35
	%vr20217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20218, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20217
	%vr20221 = bitcast %FBSTRING* %vr20217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20221, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_111A:

	; label .Lt_0BDA
	br label %.Lt_0BDA
.Lt_0BDA:

	; branchbop V <> 4
	%vr20225 = load i64, i64* %V.111
	%vr20224 = icmp ne i64 %vr20225, 4
	br i1 %vr20224, label %.Lt_0BDD, label %.Lt_111B
.Lt_111B:

	; label .Lt_0BDE
	br label %.Lt_0BDE
.Lt_0BDE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BDF
	%vr20228 = bitcast i8* bitcast ([39 x i8]* @Lt_0BDF to i8*) to i8*
	; arg 38
	%vr20227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20228, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr20227
	%vr20231 = bitcast %FBSTRING* %vr20227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20231, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_111C:

	; label .Lt_0BDD
	br label %.Lt_0BDD
.Lt_0BDD:

	; branchbop V <> 5
	%vr20235 = load i64, i64* %V.111
	%vr20234 = icmp ne i64 %vr20235, 5
	br i1 %vr20234, label %.Lt_0BE0, label %.Lt_111D
.Lt_111D:

	; label .Lt_0BE1
	br label %.Lt_0BE1
.Lt_0BE1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE2
	%vr20238 = bitcast i8* bitcast ([43 x i8]* @Lt_0BE2 to i8*) to i8*
	; arg 42
	%vr20237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20238, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr20237
	%vr20241 = bitcast %FBSTRING* %vr20237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20241, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_111E:

	; label .Lt_0BE0
	br label %.Lt_0BE0
.Lt_0BE0:

	; branchbop V <> 6
	%vr20245 = load i64, i64* %V.111
	%vr20244 = icmp ne i64 %vr20245, 6
	br i1 %vr20244, label %.Lt_0BE3, label %.Lt_111F
.Lt_111F:

	; label .Lt_0BE4
	br label %.Lt_0BE4
.Lt_0BE4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE5
	%vr20248 = bitcast i8* bitcast ([59 x i8]* @Lt_0BE5 to i8*) to i8*
	; arg 58
	%vr20247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20248, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr20247
	%vr20251 = bitcast %FBSTRING* %vr20247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20251, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1120:

	; label .Lt_0BE3
	br label %.Lt_0BE3
.Lt_0BE3:

	; branchbop V <> 7
	%vr20255 = load i64, i64* %V.111
	%vr20254 = icmp ne i64 %vr20255, 7
	br i1 %vr20254, label %.Lt_0BE6, label %.Lt_1121
.Lt_1121:

	; label .Lt_0BE7
	br label %.Lt_0BE7
.Lt_0BE7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE8
	%vr20258 = bitcast i8* bitcast ([42 x i8]* @Lt_0BE8 to i8*) to i8*
	; arg 41
	%vr20257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20258, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr20257
	%vr20261 = bitcast %FBSTRING* %vr20257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20261, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1122:

	; label .Lt_0BE6
	br label %.Lt_0BE6
.Lt_0BE6:

	; branchbop V <> 8
	%vr20265 = load i64, i64* %V.111
	%vr20264 = icmp ne i64 %vr20265, 8
	br i1 %vr20264, label %.Lt_0BE9, label %.Lt_1123
.Lt_1123:

	; label .Lt_0BEA
	br label %.Lt_0BEA
.Lt_0BEA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BEB
	%vr20268 = bitcast i8* bitcast ([80 x i8]* @Lt_0BEB to i8*) to i8*
	; arg 79
	%vr20267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20268, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr20267
	%vr20271 = bitcast %FBSTRING* %vr20267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20271, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1124:

	; label .Lt_0BE9
	br label %.Lt_0BE9
.Lt_0BE9:

	; branchbop V <> 9
	%vr20275 = load i64, i64* %V.111
	%vr20274 = icmp ne i64 %vr20275, 9
	br i1 %vr20274, label %.Lt_0BEC, label %.Lt_1125
.Lt_1125:

	; label .Lt_0BED
	br label %.Lt_0BED
.Lt_0BED:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BEE
	%vr20278 = bitcast i8* bitcast ([36 x i8]* @Lt_0BEE to i8*) to i8*
	; arg 35
	%vr20277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20278, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20277
	%vr20281 = bitcast %FBSTRING* %vr20277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20281, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1126:

	; label .Lt_0BEC
	br label %.Lt_0BEC
.Lt_0BEC:

	; branchbop V <> 10
	%vr20285 = load i64, i64* %V.111
	%vr20284 = icmp ne i64 %vr20285, 10
	br i1 %vr20284, label %.Lt_0BEF, label %.Lt_1127
.Lt_1127:

	; label .Lt_0BF0
	br label %.Lt_0BF0
.Lt_0BF0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF1
	%vr20288 = bitcast i8* bitcast ([52 x i8]* @Lt_0BF1 to i8*) to i8*
	; arg 51
	%vr20287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20288, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr20287
	%vr20291 = bitcast %FBSTRING* %vr20287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20291, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1128:

	; label .Lt_0BEF
	br label %.Lt_0BEF
.Lt_0BEF:

	; branchbop V <> 11
	%vr20295 = load i64, i64* %V.111
	%vr20294 = icmp ne i64 %vr20295, 11
	br i1 %vr20294, label %.Lt_0BF2, label %.Lt_1129
.Lt_1129:

	; label .Lt_0BF3
	br label %.Lt_0BF3
.Lt_0BF3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF4
	%vr20298 = bitcast i8* bitcast ([55 x i8]* @Lt_0BF4 to i8*) to i8*
	; arg 54
	%vr20297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20298, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr20297
	%vr20301 = bitcast %FBSTRING* %vr20297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20301, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_112A:

	; label .Lt_0BF2
	br label %.Lt_0BF2
.Lt_0BF2:

	; branchbop V <> 12
	%vr20305 = load i64, i64* %V.111
	%vr20304 = icmp ne i64 %vr20305, 12
	br i1 %vr20304, label %.Lt_0BF5, label %.Lt_112B
.Lt_112B:

	; label .Lt_0BF6
	br label %.Lt_0BF6
.Lt_0BF6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF7
	%vr20308 = bitcast i8* bitcast ([56 x i8]* @Lt_0BF7 to i8*) to i8*
	; arg 55
	%vr20307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20308, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr20307
	%vr20311 = bitcast %FBSTRING* %vr20307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20311, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_112C:

	; label .Lt_0BF5
	br label %.Lt_0BF5
.Lt_0BF5:

	; branchbop V <> 13
	%vr20315 = load i64, i64* %V.111
	%vr20314 = icmp ne i64 %vr20315, 13
	br i1 %vr20314, label %.Lt_0BF8, label %.Lt_112D
.Lt_112D:

	; label .Lt_0BF9
	br label %.Lt_0BF9
.Lt_0BF9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BFA
	%vr20318 = bitcast i8* bitcast ([59 x i8]* @Lt_0BFA to i8*) to i8*
	; arg 58
	%vr20317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20318, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr20317
	%vr20321 = bitcast %FBSTRING* %vr20317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20321, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_112E:

	; label .Lt_0BF8
	br label %.Lt_0BF8
.Lt_0BF8:

	; branchbop V <> 14
	%vr20325 = load i64, i64* %V.111
	%vr20324 = icmp ne i64 %vr20325, 14
	br i1 %vr20324, label %.Lt_0BFB, label %.Lt_112F
.Lt_112F:

	; label .Lt_0BFC
	br label %.Lt_0BFC
.Lt_0BFC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BFD
	%vr20328 = bitcast i8* bitcast ([59 x i8]* @Lt_0BFD to i8*) to i8*
	; arg 58
	%vr20327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20328, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr20327
	%vr20331 = bitcast %FBSTRING* %vr20327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20331, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1130:

	; label .Lt_0BFB
	br label %.Lt_0BFB
.Lt_0BFB:

	; branchbop V <> 15
	%vr20335 = load i64, i64* %V.111
	%vr20334 = icmp ne i64 %vr20335, 15
	br i1 %vr20334, label %.Lt_0BFE, label %.Lt_1131
.Lt_1131:

	; label .Lt_0BFF
	br label %.Lt_0BFF
.Lt_0BFF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C00
	%vr20338 = bitcast i8* bitcast ([60 x i8]* @Lt_0C00 to i8*) to i8*
	; arg 59
	%vr20337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20338, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr20337
	%vr20341 = bitcast %FBSTRING* %vr20337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20341, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1132:

	; label .Lt_0BFE
	br label %.Lt_0BFE
.Lt_0BFE:

	; branchbop V <> 16
	%vr20345 = load i64, i64* %V.111
	%vr20344 = icmp ne i64 %vr20345, 16
	br i1 %vr20344, label %.Lt_0C01, label %.Lt_1133
.Lt_1133:

	; label .Lt_0C02
	br label %.Lt_0C02
.Lt_0C02:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C03
	%vr20348 = bitcast i8* bitcast ([64 x i8]* @Lt_0C03 to i8*) to i8*
	; arg 63
	%vr20347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20348, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr20347
	%vr20351 = bitcast %FBSTRING* %vr20347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20351, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1134:

	; label .Lt_0C01
	br label %.Lt_0C01
.Lt_0C01:

	; branchbop V <> 17
	%vr20355 = load i64, i64* %V.111
	%vr20354 = icmp ne i64 %vr20355, 17
	br i1 %vr20354, label %.Lt_0C04, label %.Lt_1135
.Lt_1135:

	; label .Lt_0C05
	br label %.Lt_0C05
.Lt_0C05:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C06
	%vr20358 = bitcast i8* bitcast ([72 x i8]* @Lt_0C06 to i8*) to i8*
	; arg 71
	%vr20357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20358, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr20357
	%vr20361 = bitcast %FBSTRING* %vr20357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20361, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1136:

	; label .Lt_0C04
	br label %.Lt_0C04
.Lt_0C04:

	; branchbop V <> 18
	%vr20365 = load i64, i64* %V.111
	%vr20364 = icmp ne i64 %vr20365, 18
	br i1 %vr20364, label %.Lt_0C07, label %.Lt_1137
.Lt_1137:

	; label .Lt_0C08
	br label %.Lt_0C08
.Lt_0C08:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C09
	%vr20368 = bitcast i8* bitcast ([72 x i8]* @Lt_0C09 to i8*) to i8*
	; arg 71
	%vr20367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20368, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr20367
	%vr20371 = bitcast %FBSTRING* %vr20367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20371, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1138:

	; label .Lt_0C07
	br label %.Lt_0C07
.Lt_0C07:

	; branchbop V <> 19
	%vr20375 = load i64, i64* %V.111
	%vr20374 = icmp ne i64 %vr20375, 19
	br i1 %vr20374, label %.Lt_0C0A, label %.Lt_1139
.Lt_1139:

	; label .Lt_0C0B
	br label %.Lt_0C0B
.Lt_0C0B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C0C
	%vr20378 = bitcast i8* bitcast ([35 x i8]* @Lt_0C0C to i8*) to i8*
	; arg 34
	%vr20377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20378, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20377
	%vr20381 = bitcast %FBSTRING* %vr20377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20381, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_113A:

	; label .Lt_0C0A
	br label %.Lt_0C0A
.Lt_0C0A:

	; branchbop V <> 20
	%vr20385 = load i64, i64* %V.111
	%vr20384 = icmp ne i64 %vr20385, 20
	br i1 %vr20384, label %.Lt_0C0D, label %.Lt_113B
.Lt_113B:

	; label .Lt_0C0E
	br label %.Lt_0C0E
.Lt_0C0E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C0F
	%vr20388 = bitcast i8* bitcast ([38 x i8]* @Lt_0C0F to i8*) to i8*
	; arg 37
	%vr20387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20388, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr20387
	%vr20391 = bitcast %FBSTRING* %vr20387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20391, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_113C:

	; label .Lt_0C0D
	br label %.Lt_0C0D
.Lt_0C0D:

	; branchbop V <> 21
	%vr20395 = load i64, i64* %V.111
	%vr20394 = icmp ne i64 %vr20395, 21
	br i1 %vr20394, label %.Lt_0C10, label %.Lt_113D
.Lt_113D:

	; label .Lt_0C11
	br label %.Lt_0C11
.Lt_0C11:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C12
	%vr20398 = bitcast i8* bitcast ([43 x i8]* @Lt_0C12 to i8*) to i8*
	; arg 42
	%vr20397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20398, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr20397
	%vr20401 = bitcast %FBSTRING* %vr20397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20401, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_113E:

	; label .Lt_0C10
	br label %.Lt_0C10
.Lt_0C10:

	; branchbop V <> 22
	%vr20405 = load i64, i64* %V.111
	%vr20404 = icmp ne i64 %vr20405, 22
	br i1 %vr20404, label %.Lt_0C13, label %.Lt_113F
.Lt_113F:

	; label .Lt_0C14
	br label %.Lt_0C14
.Lt_0C14:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C15
	%vr20408 = bitcast i8* bitcast ([50 x i8]* @Lt_0C15 to i8*) to i8*
	; arg 49
	%vr20407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20408, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr20407
	%vr20411 = bitcast %FBSTRING* %vr20407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20411, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1140:

	; label .Lt_0C13
	br label %.Lt_0C13
.Lt_0C13:

	; branchbop V <> 23
	%vr20415 = load i64, i64* %V.111
	%vr20414 = icmp ne i64 %vr20415, 23
	br i1 %vr20414, label %.Lt_0C16, label %.Lt_1141
.Lt_1141:

	; label .Lt_0C17
	br label %.Lt_0C17
.Lt_0C17:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C18
	%vr20418 = bitcast i8* bitcast ([53 x i8]* @Lt_0C18 to i8*) to i8*
	; arg 52
	%vr20417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20418, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr20417
	%vr20421 = bitcast %FBSTRING* %vr20417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20421, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1142:

	; label .Lt_0C16
	br label %.Lt_0C16
.Lt_0C16:

	; branchbop V <> 24
	%vr20425 = load i64, i64* %V.111
	%vr20424 = icmp ne i64 %vr20425, 24
	br i1 %vr20424, label %.Lt_0C19, label %.Lt_1143
.Lt_1143:

	; label .Lt_0C1A
	br label %.Lt_0C1A
.Lt_0C1A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C1B
	%vr20428 = bitcast i8* bitcast ([18 x i8]* @Lt_0C1B to i8*) to i8*
	; arg 17
	%vr20427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20428, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr20427
	%vr20431 = bitcast %FBSTRING* %vr20427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20431, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1144:

	; label .Lt_0C19
	br label %.Lt_0C19
.Lt_0C19:

	; branchbop V <> 25
	%vr20435 = load i64, i64* %V.111
	%vr20434 = icmp ne i64 %vr20435, 25
	br i1 %vr20434, label %.Lt_0C1C, label %.Lt_1145
.Lt_1145:

	; label .Lt_0C1D
	br label %.Lt_0C1D
.Lt_0C1D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C1E
	%vr20438 = bitcast i8* bitcast ([22 x i8]* @Lt_0C1E to i8*) to i8*
	; arg 21
	%vr20437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20438, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20437
	%vr20441 = bitcast %FBSTRING* %vr20437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20441, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1146:

	; label .Lt_0C1C
	br label %.Lt_0C1C
.Lt_0C1C:

	; branchbop V <> 26
	%vr20445 = load i64, i64* %V.111
	%vr20444 = icmp ne i64 %vr20445, 26
	br i1 %vr20444, label %.Lt_0C1F, label %.Lt_1147
.Lt_1147:

	; label .Lt_0C20
	br label %.Lt_0C20
.Lt_0C20:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C21
	%vr20448 = bitcast i8* bitcast ([25 x i8]* @Lt_0C21 to i8*) to i8*
	; arg 24
	%vr20447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20448, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr20447
	%vr20451 = bitcast %FBSTRING* %vr20447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20451, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1148:

	; label .Lt_0C1F
	br label %.Lt_0C1F
.Lt_0C1F:

	; branchbop V <> 27
	%vr20455 = load i64, i64* %V.111
	%vr20454 = icmp ne i64 %vr20455, 27
	br i1 %vr20454, label %.Lt_0C22, label %.Lt_1149
.Lt_1149:

	; label .Lt_0C23
	br label %.Lt_0C23
.Lt_0C23:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C24
	%vr20458 = bitcast i8* bitcast ([27 x i8]* @Lt_0C24 to i8*) to i8*
	; arg 26
	%vr20457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20458, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20457
	%vr20461 = bitcast %FBSTRING* %vr20457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20461, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_114A:

	; label .Lt_0C22
	br label %.Lt_0C22
.Lt_0C22:

	; branchbop V <> 28
	%vr20465 = load i64, i64* %V.111
	%vr20464 = icmp ne i64 %vr20465, 28
	br i1 %vr20464, label %.Lt_0C25, label %.Lt_114B
.Lt_114B:

	; label .Lt_0C26
	br label %.Lt_0C26
.Lt_0C26:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C27
	%vr20468 = bitcast i8* bitcast ([27 x i8]* @Lt_0C27 to i8*) to i8*
	; arg 26
	%vr20467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20468, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20467
	%vr20471 = bitcast %FBSTRING* %vr20467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20471, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_114C:

	; label .Lt_0C25
	br label %.Lt_0C25
.Lt_0C25:

	; branchbop V <> 29
	%vr20475 = load i64, i64* %V.111
	%vr20474 = icmp ne i64 %vr20475, 29
	br i1 %vr20474, label %.Lt_0C28, label %.Lt_114D
.Lt_114D:

	; label .Lt_0C29
	br label %.Lt_0C29
.Lt_0C29:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C2A
	%vr20478 = bitcast i8* bitcast ([22 x i8]* @Lt_0C2A to i8*) to i8*
	; arg 21
	%vr20477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20478, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20477
	%vr20481 = bitcast %FBSTRING* %vr20477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20481, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_114E:

	; label .Lt_0C28
	br label %.Lt_0C28
.Lt_0C28:

	; branchbop V <> 30
	%vr20485 = load i64, i64* %V.111
	%vr20484 = icmp ne i64 %vr20485, 30
	br i1 %vr20484, label %.Lt_0C2B, label %.Lt_114F
.Lt_114F:

	; label .Lt_0C2C
	br label %.Lt_0C2C
.Lt_0C2C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C2D
	%vr20488 = bitcast i8* bitcast ([32 x i8]* @Lt_0C2D to i8*) to i8*
	; arg 31
	%vr20487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20488, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr20487
	%vr20491 = bitcast %FBSTRING* %vr20487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20491, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1150:

	; label .Lt_0C2B
	br label %.Lt_0C2B
.Lt_0C2B:

	; branchbop V <> 31
	%vr20495 = load i64, i64* %V.111
	%vr20494 = icmp ne i64 %vr20495, 31
	br i1 %vr20494, label %.Lt_0C2E, label %.Lt_1151
.Lt_1151:

	; label .Lt_0C2F
	br label %.Lt_0C2F
.Lt_0C2F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C30
	%vr20498 = bitcast i8* bitcast ([35 x i8]* @Lt_0C30 to i8*) to i8*
	; arg 34
	%vr20497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20498, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20497
	%vr20501 = bitcast %FBSTRING* %vr20497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20501, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1152:

	; label .Lt_0C2E
	br label %.Lt_0C2E
.Lt_0C2E:

	; branchbop V <> 32
	%vr20505 = load i64, i64* %V.111
	%vr20504 = icmp ne i64 %vr20505, 32
	br i1 %vr20504, label %.Lt_0C31, label %.Lt_1153
.Lt_1153:

	; label .Lt_0C32
	br label %.Lt_0C32
.Lt_0C32:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C33
	%vr20508 = bitcast i8* bitcast ([39 x i8]* @Lt_0C33 to i8*) to i8*
	; arg 38
	%vr20507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20508, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr20507
	%vr20511 = bitcast %FBSTRING* %vr20507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20511, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1154:

	; label .Lt_0C31
	br label %.Lt_0C31
.Lt_0C31:

	; branchbop V <> 33
	%vr20515 = load i64, i64* %V.111
	%vr20514 = icmp ne i64 %vr20515, 33
	br i1 %vr20514, label %.Lt_0C34, label %.Lt_1155
.Lt_1155:

	; label .Lt_0C35
	br label %.Lt_0C35
.Lt_0C35:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C36
	%vr20518 = bitcast i8* bitcast ([52 x i8]* @Lt_0C36 to i8*) to i8*
	; arg 51
	%vr20517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20518, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr20517
	%vr20521 = bitcast %FBSTRING* %vr20517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20521, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1156:

	; label .Lt_0C34
	br label %.Lt_0C34
.Lt_0C34:

	; branchbop V <> 34
	%vr20525 = load i64, i64* %V.111
	%vr20524 = icmp ne i64 %vr20525, 34
	br i1 %vr20524, label %.Lt_0C37, label %.Lt_1157
.Lt_1157:

	; label .Lt_0C38
	br label %.Lt_0C38
.Lt_0C38:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C39
	%vr20528 = bitcast i8* bitcast ([26 x i8]* @Lt_0C39 to i8*) to i8*
	; arg 25
	%vr20527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20528, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20527
	%vr20531 = bitcast %FBSTRING* %vr20527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20531, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1158:

	; label .Lt_0C37
	br label %.Lt_0C37
.Lt_0C37:

	; branchbop V <> 35
	%vr20535 = load i64, i64* %V.111
	%vr20534 = icmp ne i64 %vr20535, 35
	br i1 %vr20534, label %.Lt_0C3A, label %.Lt_1159
.Lt_1159:

	; label .Lt_0C3B
	br label %.Lt_0C3B
.Lt_0C3B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C3C
	%vr20538 = bitcast i8* bitcast ([30 x i8]* @Lt_0C3C to i8*) to i8*
	; arg 29
	%vr20537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20538, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20537
	%vr20541 = bitcast %FBSTRING* %vr20537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20541, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_115A:

	; label .Lt_0C3A
	br label %.Lt_0C3A
.Lt_0C3A:

	; branchbop V <> 36
	%vr20545 = load i64, i64* %V.111
	%vr20544 = icmp ne i64 %vr20545, 36
	br i1 %vr20544, label %.Lt_0C3D, label %.Lt_115B
.Lt_115B:

	; label .Lt_0C3E
	br label %.Lt_0C3E
.Lt_0C3E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C3F
	%vr20548 = bitcast i8* bitcast ([35 x i8]* @Lt_0C3F to i8*) to i8*
	; arg 34
	%vr20547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20548, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20547
	%vr20551 = bitcast %FBSTRING* %vr20547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20551, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_115C:

	; label .Lt_0C3D
	br label %.Lt_0C3D
.Lt_0C3D:

	; branchbop V <> 37
	%vr20555 = load i64, i64* %V.111
	%vr20554 = icmp ne i64 %vr20555, 37
	br i1 %vr20554, label %.Lt_0C40, label %.Lt_115D
.Lt_115D:

	; label .Lt_0C41
	br label %.Lt_0C41
.Lt_0C41:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C42
	%vr20558 = bitcast i8* bitcast ([36 x i8]* @Lt_0C42 to i8*) to i8*
	; arg 35
	%vr20557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20558, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20557
	%vr20561 = bitcast %FBSTRING* %vr20557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20561, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_115E:

	; label .Lt_0C40
	br label %.Lt_0C40
.Lt_0C40:

	; branchbop V <> 38
	%vr20565 = load i64, i64* %V.111
	%vr20564 = icmp ne i64 %vr20565, 38
	br i1 %vr20564, label %.Lt_0C43, label %.Lt_115F
.Lt_115F:

	; label .Lt_0C44
	br label %.Lt_0C44
.Lt_0C44:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C45
	%vr20568 = bitcast i8* bitcast ([52 x i8]* @Lt_0C45 to i8*) to i8*
	; arg 51
	%vr20567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20568, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr20567
	%vr20571 = bitcast %FBSTRING* %vr20567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20571, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1160:

	; label .Lt_0C43
	br label %.Lt_0C43
.Lt_0C43:

	; branchbop V <> 39
	%vr20575 = load i64, i64* %V.111
	%vr20574 = icmp ne i64 %vr20575, 39
	br i1 %vr20574, label %.Lt_0C46, label %.Lt_1161
.Lt_1161:

	; label .Lt_0C47
	br label %.Lt_0C47
.Lt_0C47:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C48
	%vr20578 = bitcast i8* bitcast ([9 x i8]* @Lt_0C48 to i8*) to i8*
	; arg 8
	%vr20577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20578, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr20577
	%vr20581 = bitcast %FBSTRING* %vr20577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20581, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1162:

	; label .Lt_0C46
	br label %.Lt_0C46
.Lt_0C46:

	; branchbop V <> 40
	%vr20585 = load i64, i64* %V.111
	%vr20584 = icmp ne i64 %vr20585, 40
	br i1 %vr20584, label %.Lt_0C49, label %.Lt_1163
.Lt_1163:

	; label .Lt_0C4A
	br label %.Lt_0C4A
.Lt_0C4A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C4B
	%vr20588 = bitcast i8* bitcast ([57 x i8]* @Lt_0C4B to i8*) to i8*
	; arg 56
	%vr20587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20588, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr20587
	%vr20591 = bitcast %FBSTRING* %vr20587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20591, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1164:

	; label .Lt_0C49
	br label %.Lt_0C49
.Lt_0C49:

	; branchbop V <> 41
	%vr20595 = load i64, i64* %V.111
	%vr20594 = icmp ne i64 %vr20595, 41
	br i1 %vr20594, label %.Lt_0C4C, label %.Lt_1165
.Lt_1165:

	; label .Lt_0C4D
	br label %.Lt_0C4D
.Lt_0C4D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C4E
	%vr20598 = bitcast i8* bitcast ([62 x i8]* @Lt_0C4E to i8*) to i8*
	; arg 61
	%vr20597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20598, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr20597
	%vr20601 = bitcast %FBSTRING* %vr20597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20601, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1166:

	; label .Lt_0C4C
	br label %.Lt_0C4C
.Lt_0C4C:

	; branchbop V <> 42
	%vr20605 = load i64, i64* %V.111
	%vr20604 = icmp ne i64 %vr20605, 42
	br i1 %vr20604, label %.Lt_0C4F, label %.Lt_1167
.Lt_1167:

	; label .Lt_0C50
	br label %.Lt_0C50
.Lt_0C50:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C51
	%vr20608 = bitcast i8* bitcast ([62 x i8]* @Lt_0C51 to i8*) to i8*
	; arg 61
	%vr20607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20608, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr20607
	%vr20611 = bitcast %FBSTRING* %vr20607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20611, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1168:

	; label .Lt_0C4F
	br label %.Lt_0C4F
.Lt_0C4F:

	; branchbop V <> 43
	%vr20615 = load i64, i64* %V.111
	%vr20614 = icmp ne i64 %vr20615, 43
	br i1 %vr20614, label %.Lt_0C52, label %.Lt_1169
.Lt_1169:

	; label .Lt_0C53
	br label %.Lt_0C53
.Lt_0C53:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C54
	%vr20618 = bitcast i8* bitcast ([99 x i8]* @Lt_0C54 to i8*) to i8*
	; arg 98
	%vr20617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20618, i64 98 )

	; call fb_PrintString()
	; arg 1
	; arg vr20617
	%vr20621 = bitcast %FBSTRING* %vr20617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20621, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_116A:

	; label .Lt_0C52
	br label %.Lt_0C52
.Lt_0C52:

	; branchbop V <> 44
	%vr20625 = load i64, i64* %V.111
	%vr20624 = icmp ne i64 %vr20625, 44
	br i1 %vr20624, label %.Lt_0C55, label %.Lt_116B
.Lt_116B:

	; label .Lt_0C56
	br label %.Lt_0C56
.Lt_0C56:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C57
	%vr20628 = bitcast i8* bitcast ([105 x i8]* @Lt_0C57 to i8*) to i8*
	; arg 104
	%vr20627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20628, i64 104 )

	; call fb_PrintString()
	; arg 1
	; arg vr20627
	%vr20631 = bitcast %FBSTRING* %vr20627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20631, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_116C:

	; label .Lt_0C55
	br label %.Lt_0C55
.Lt_0C55:

	; branchbop V <> 45
	%vr20635 = load i64, i64* %V.111
	%vr20634 = icmp ne i64 %vr20635, 45
	br i1 %vr20634, label %.Lt_0C58, label %.Lt_116D
.Lt_116D:

	; label .Lt_0C59
	br label %.Lt_0C59
.Lt_0C59:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C5A
	%vr20638 = bitcast i8* bitcast ([22 x i8]* @Lt_0C5A to i8*) to i8*
	; arg 21
	%vr20637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20638, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20637
	%vr20641 = bitcast %FBSTRING* %vr20637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20641, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_116E:

	; label .Lt_0C58
	br label %.Lt_0C58
.Lt_0C58:

	; branchbop V <> 46
	%vr20645 = load i64, i64* %V.111
	%vr20644 = icmp ne i64 %vr20645, 46
	br i1 %vr20644, label %.Lt_0C5B, label %.Lt_116F
.Lt_116F:

	; label .Lt_0C5C
	br label %.Lt_0C5C
.Lt_0C5C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C5D
	%vr20648 = bitcast i8* bitcast ([40 x i8]* @Lt_0C5D to i8*) to i8*
	; arg 39
	%vr20647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20648, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr20647
	%vr20651 = bitcast %FBSTRING* %vr20647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20651, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1170:

	; label .Lt_0C5B
	br label %.Lt_0C5B
.Lt_0C5B:

	; branchbop V <> 47
	%vr20655 = load i64, i64* %V.111
	%vr20654 = icmp ne i64 %vr20655, 47
	br i1 %vr20654, label %.Lt_0C5E, label %.Lt_1171
.Lt_1171:

	; label .Lt_0C5F
	br label %.Lt_0C5F
.Lt_0C5F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C60
	%vr20658 = bitcast i8* bitcast ([40 x i8]* @Lt_0C60 to i8*) to i8*
	; arg 39
	%vr20657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20658, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr20657
	%vr20661 = bitcast %FBSTRING* %vr20657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20661, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1172:

	; label .Lt_0C5E
	br label %.Lt_0C5E
.Lt_0C5E:

	; branchbop V <> 48
	%vr20665 = load i64, i64* %V.111
	%vr20664 = icmp ne i64 %vr20665, 48
	br i1 %vr20664, label %.Lt_0C61, label %.Lt_1173
.Lt_1173:

	; label .Lt_0C62
	br label %.Lt_0C62
.Lt_0C62:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C63
	%vr20668 = bitcast i8* bitcast ([41 x i8]* @Lt_0C63 to i8*) to i8*
	; arg 40
	%vr20667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20668, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr20667
	%vr20671 = bitcast %FBSTRING* %vr20667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20671, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1174:

	; label .Lt_0C61
	br label %.Lt_0C61
.Lt_0C61:

	; branchbop V <> 49
	%vr20675 = load i64, i64* %V.111
	%vr20674 = icmp ne i64 %vr20675, 49
	br i1 %vr20674, label %.Lt_0C64, label %.Lt_1175
.Lt_1175:

	; label .Lt_0C65
	br label %.Lt_0C65
.Lt_0C65:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C66
	%vr20678 = bitcast i8* bitcast ([43 x i8]* @Lt_0C66 to i8*) to i8*
	; arg 42
	%vr20677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20678, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr20677
	%vr20681 = bitcast %FBSTRING* %vr20677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20681, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1176:

	; label .Lt_0C64
	br label %.Lt_0C64
.Lt_0C64:

	; branchbop V <> 50
	%vr20685 = load i64, i64* %V.111
	%vr20684 = icmp ne i64 %vr20685, 50
	br i1 %vr20684, label %.Lt_0C67, label %.Lt_1177
.Lt_1177:

	; label .Lt_0C68
	br label %.Lt_0C68
.Lt_0C68:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C69
	%vr20688 = bitcast i8* bitcast ([44 x i8]* @Lt_0C69 to i8*) to i8*
	; arg 43
	%vr20687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20688, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr20687
	%vr20691 = bitcast %FBSTRING* %vr20687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20691, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1178:

	; label .Lt_0C67
	br label %.Lt_0C67
.Lt_0C67:

	; branchbop V <> 51
	%vr20695 = load i64, i64* %V.111
	%vr20694 = icmp ne i64 %vr20695, 51
	br i1 %vr20694, label %.Lt_0C6A, label %.Lt_1179
.Lt_1179:

	; label .Lt_0C6B
	br label %.Lt_0C6B
.Lt_0C6B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C6C
	%vr20698 = bitcast i8* bitcast ([44 x i8]* @Lt_0C6C to i8*) to i8*
	; arg 43
	%vr20697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20698, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr20697
	%vr20701 = bitcast %FBSTRING* %vr20697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20701, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_117A:

	; label .Lt_0C6A
	br label %.Lt_0C6A
.Lt_0C6A:

	; branchbop V <> 52
	%vr20705 = load i64, i64* %V.111
	%vr20704 = icmp ne i64 %vr20705, 52
	br i1 %vr20704, label %.Lt_0C6D, label %.Lt_117B
.Lt_117B:

	; label .Lt_0C6E
	br label %.Lt_0C6E
.Lt_0C6E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C6F
	%vr20708 = bitcast i8* bitcast ([42 x i8]* @Lt_0C6F to i8*) to i8*
	; arg 41
	%vr20707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20708, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr20707
	%vr20711 = bitcast %FBSTRING* %vr20707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20711, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_117C:

	; label .Lt_0C6D
	br label %.Lt_0C6D
.Lt_0C6D:

	; branchbop V <> 53
	%vr20715 = load i64, i64* %V.111
	%vr20714 = icmp ne i64 %vr20715, 53
	br i1 %vr20714, label %.Lt_0C70, label %.Lt_117D
.Lt_117D:

	; label .Lt_0C71
	br label %.Lt_0C71
.Lt_0C71:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C72
	%vr20718 = bitcast i8* bitcast ([42 x i8]* @Lt_0C72 to i8*) to i8*
	; arg 41
	%vr20717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20718, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr20717
	%vr20721 = bitcast %FBSTRING* %vr20717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20721, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_117E:

	; label .Lt_0C70
	br label %.Lt_0C70
.Lt_0C70:

	; branchbop V <> 54
	%vr20725 = load i64, i64* %V.111
	%vr20724 = icmp ne i64 %vr20725, 54
	br i1 %vr20724, label %.Lt_0C73, label %.Lt_117F
.Lt_117F:

	; label .Lt_0C74
	br label %.Lt_0C74
.Lt_0C74:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C75
	%vr20728 = bitcast i8* bitcast ([46 x i8]* @Lt_0C75 to i8*) to i8*
	; arg 45
	%vr20727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20728, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr20727
	%vr20731 = bitcast %FBSTRING* %vr20727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20731, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1180:

	; label .Lt_0C73
	br label %.Lt_0C73
.Lt_0C73:

	; branchbop V <> 55
	%vr20735 = load i64, i64* %V.111
	%vr20734 = icmp ne i64 %vr20735, 55
	br i1 %vr20734, label %.Lt_0C76, label %.Lt_1181
.Lt_1181:

	; label .Lt_0C77
	br label %.Lt_0C77
.Lt_0C77:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C78
	%vr20738 = bitcast i8* bitcast ([31 x i8]* @Lt_0C78 to i8*) to i8*
	; arg 30
	%vr20737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20738, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr20737
	%vr20741 = bitcast %FBSTRING* %vr20737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20741, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1182:

	; label .Lt_0C76
	br label %.Lt_0C76
.Lt_0C76:

	; branchbop V <> 56
	%vr20745 = load i64, i64* %V.111
	%vr20744 = icmp ne i64 %vr20745, 56
	br i1 %vr20744, label %.Lt_0C79, label %.Lt_1183
.Lt_1183:

	; label .Lt_0C7A
	br label %.Lt_0C7A
.Lt_0C7A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C7B
	%vr20748 = bitcast i8* bitcast ([36 x i8]* @Lt_0C7B to i8*) to i8*
	; arg 35
	%vr20747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20748, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20747
	%vr20751 = bitcast %FBSTRING* %vr20747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20751, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1184:

	; label .Lt_0C79
	br label %.Lt_0C79
.Lt_0C79:

	; branchbop V <> 57
	%vr20755 = load i64, i64* %V.111
	%vr20754 = icmp ne i64 %vr20755, 57
	br i1 %vr20754, label %.Lt_0C7C, label %.Lt_1185
.Lt_1185:

	; label .Lt_0C7D
	br label %.Lt_0C7D
.Lt_0C7D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C7E
	%vr20758 = bitcast i8* bitcast ([36 x i8]* @Lt_0C7E to i8*) to i8*
	; arg 35
	%vr20757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20758, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20757
	%vr20761 = bitcast %FBSTRING* %vr20757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20761, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1186:

	; label .Lt_0C7C
	br label %.Lt_0C7C
.Lt_0C7C:

	; branchbop V <> 58
	%vr20765 = load i64, i64* %V.111
	%vr20764 = icmp ne i64 %vr20765, 58
	br i1 %vr20764, label %.Lt_0C7F, label %.Lt_1187
.Lt_1187:

	; label .Lt_0C80
	br label %.Lt_0C80
.Lt_0C80:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C81
	%vr20768 = bitcast i8* bitcast ([23 x i8]* @Lt_0C81 to i8*) to i8*
	; arg 22
	%vr20767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20768, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr20767
	%vr20771 = bitcast %FBSTRING* %vr20767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20771, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1188:

	; label .Lt_0C7F
	br label %.Lt_0C7F
.Lt_0C7F:

	; branchbop V <> 59
	%vr20775 = load i64, i64* %V.111
	%vr20774 = icmp ne i64 %vr20775, 59
	br i1 %vr20774, label %.Lt_0C82, label %.Lt_1189
.Lt_1189:

	; label .Lt_0C83
	br label %.Lt_0C83
.Lt_0C83:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C84
	%vr20778 = bitcast i8* bitcast ([28 x i8]* @Lt_0C84 to i8*) to i8*
	; arg 27
	%vr20777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20778, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr20777
	%vr20781 = bitcast %FBSTRING* %vr20777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20781, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_118A:

	; label .Lt_0C82
	br label %.Lt_0C82
.Lt_0C82:

	; branchbop V <> 60
	%vr20785 = load i64, i64* %V.111
	%vr20784 = icmp ne i64 %vr20785, 60
	br i1 %vr20784, label %.Lt_0C85, label %.Lt_118B
.Lt_118B:

	; label .Lt_0C86
	br label %.Lt_0C86
.Lt_0C86:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C87
	%vr20788 = bitcast i8* bitcast ([29 x i8]* @Lt_0C87 to i8*) to i8*
	; arg 28
	%vr20787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20788, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr20787
	%vr20791 = bitcast %FBSTRING* %vr20787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20791, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_118C:

	; label .Lt_0C85
	br label %.Lt_0C85
.Lt_0C85:

	; branchbop V <> 61
	%vr20795 = load i64, i64* %V.111
	%vr20794 = icmp ne i64 %vr20795, 61
	br i1 %vr20794, label %.Lt_0C88, label %.Lt_118D
.Lt_118D:

	; label .Lt_0C89
	br label %.Lt_0C89
.Lt_0C89:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C8A
	%vr20798 = bitcast i8* bitcast ([30 x i8]* @Lt_0C8A to i8*) to i8*
	; arg 29
	%vr20797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20798, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20797
	%vr20801 = bitcast %FBSTRING* %vr20797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20801, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_118E:

	; label .Lt_0C88
	br label %.Lt_0C88
.Lt_0C88:

	; branchbop V <> 62
	%vr20805 = load i64, i64* %V.111
	%vr20804 = icmp ne i64 %vr20805, 62
	br i1 %vr20804, label %.Lt_0C8B, label %.Lt_118F
.Lt_118F:

	; label .Lt_0C8C
	br label %.Lt_0C8C
.Lt_0C8C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C8D
	%vr20808 = bitcast i8* bitcast ([39 x i8]* @Lt_0C8D to i8*) to i8*
	; arg 38
	%vr20807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20808, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr20807
	%vr20811 = bitcast %FBSTRING* %vr20807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20811, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1190:

	; label .Lt_0C8B
	br label %.Lt_0C8B
.Lt_0C8B:

	; branchbop V <> 63
	%vr20815 = load i64, i64* %V.111
	%vr20814 = icmp ne i64 %vr20815, 63
	br i1 %vr20814, label %.Lt_0C8E, label %.Lt_1191
.Lt_1191:

	; label .Lt_0C8F
	br label %.Lt_0C8F
.Lt_0C8F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C90
	%vr20818 = bitcast i8* bitcast ([22 x i8]* @Lt_0C90 to i8*) to i8*
	; arg 21
	%vr20817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20818, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20817
	%vr20821 = bitcast %FBSTRING* %vr20817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20821, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1192:

	; label .Lt_0C8E
	br label %.Lt_0C8E
.Lt_0C8E:

	; branchbop V <> 64
	%vr20825 = load i64, i64* %V.111
	%vr20824 = icmp ne i64 %vr20825, 64
	br i1 %vr20824, label %.Lt_0C91, label %.Lt_1193
.Lt_1193:

	; label .Lt_0C92
	br label %.Lt_0C92
.Lt_0C92:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C93
	%vr20828 = bitcast i8* bitcast ([29 x i8]* @Lt_0C93 to i8*) to i8*
	; arg 28
	%vr20827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20828, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr20827
	%vr20831 = bitcast %FBSTRING* %vr20827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20831, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1194:

	; label .Lt_0C91
	br label %.Lt_0C91
.Lt_0C91:

	; branchbop V <> 65
	%vr20835 = load i64, i64* %V.111
	%vr20834 = icmp ne i64 %vr20835, 65
	br i1 %vr20834, label %.Lt_0C94, label %.Lt_1195
.Lt_1195:

	; label .Lt_0C95
	br label %.Lt_0C95
.Lt_0C95:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C96
	%vr20838 = bitcast i8* bitcast ([24 x i8]* @Lt_0C96 to i8*) to i8*
	; arg 23
	%vr20837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20838, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr20837
	%vr20841 = bitcast %FBSTRING* %vr20837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20841, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1196:

	; label .Lt_0C94
	br label %.Lt_0C94
.Lt_0C94:

	; branchbop V <> 66
	%vr20845 = load i64, i64* %V.111
	%vr20844 = icmp ne i64 %vr20845, 66
	br i1 %vr20844, label %.Lt_0C97, label %.Lt_1197
.Lt_1197:

	; label .Lt_0C98
	br label %.Lt_0C98
.Lt_0C98:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C99
	%vr20848 = bitcast i8* bitcast ([32 x i8]* @Lt_0C99 to i8*) to i8*
	; arg 31
	%vr20847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20848, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr20847
	%vr20851 = bitcast %FBSTRING* %vr20847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20851, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1198:

	; label .Lt_0C97
	br label %.Lt_0C97
.Lt_0C97:

	; branchbop V <> 67
	%vr20855 = load i64, i64* %V.111
	%vr20854 = icmp ne i64 %vr20855, 67
	br i1 %vr20854, label %.Lt_0C9A, label %.Lt_1199
.Lt_1199:

	; label .Lt_0C9B
	br label %.Lt_0C9B
.Lt_0C9B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C9C
	%vr20858 = bitcast i8* bitcast ([33 x i8]* @Lt_0C9C to i8*) to i8*
	; arg 32
	%vr20857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20858, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr20857
	%vr20861 = bitcast %FBSTRING* %vr20857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20861, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_119A:

	; label .Lt_0C9A
	br label %.Lt_0C9A
.Lt_0C9A:

	; branchbop V <> 68
	%vr20865 = load i64, i64* %V.111
	%vr20864 = icmp ne i64 %vr20865, 68
	br i1 %vr20864, label %.Lt_0C9D, label %.Lt_119B
.Lt_119B:

	; label .Lt_0C9E
	br label %.Lt_0C9E
.Lt_0C9E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C9F
	%vr20868 = bitcast i8* bitcast ([27 x i8]* @Lt_0C9F to i8*) to i8*
	; arg 26
	%vr20867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20868, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20867
	%vr20871 = bitcast %FBSTRING* %vr20867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20871, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_119C:

	; label .Lt_0C9D
	br label %.Lt_0C9D
.Lt_0C9D:

	; branchbop V <> 69
	%vr20875 = load i64, i64* %V.111
	%vr20874 = icmp ne i64 %vr20875, 69
	br i1 %vr20874, label %.Lt_0CA0, label %.Lt_119D
.Lt_119D:

	; label .Lt_0CA1
	br label %.Lt_0CA1
.Lt_0CA1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CA2
	%vr20878 = bitcast i8* bitcast ([30 x i8]* @Lt_0CA2 to i8*) to i8*
	; arg 29
	%vr20877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20878, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20877
	%vr20881 = bitcast %FBSTRING* %vr20877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20881, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_119E:

	; label .Lt_0CA0
	br label %.Lt_0CA0
.Lt_0CA0:

	; branchbop V <> 70
	%vr20885 = load i64, i64* %V.111
	%vr20884 = icmp ne i64 %vr20885, 70
	br i1 %vr20884, label %.Lt_0CA3, label %.Lt_119F
.Lt_119F:

	; label .Lt_0CA4
	br label %.Lt_0CA4
.Lt_0CA4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CA5
	%vr20888 = bitcast i8* bitcast ([20 x i8]* @Lt_0CA5 to i8*) to i8*
	; arg 19
	%vr20887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20888, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr20887
	%vr20891 = bitcast %FBSTRING* %vr20887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20891, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11A0:

	; label .Lt_0CA3
	br label %.Lt_0CA3
.Lt_0CA3:

	; branchbop V <> 71
	%vr20895 = load i64, i64* %V.111
	%vr20894 = icmp ne i64 %vr20895, 71
	br i1 %vr20894, label %.Lt_0CA6, label %.Lt_11A1
.Lt_11A1:

	; label .Lt_0CA7
	br label %.Lt_0CA7
.Lt_0CA7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CA8
	%vr20898 = bitcast i8* bitcast ([45 x i8]* @Lt_0CA8 to i8*) to i8*
	; arg 44
	%vr20897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20898, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr20897
	%vr20901 = bitcast %FBSTRING* %vr20897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20901, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11A2:

	; label .Lt_0CA6
	br label %.Lt_0CA6
.Lt_0CA6:

	; branchbop V <> 72
	%vr20905 = load i64, i64* %V.111
	%vr20904 = icmp ne i64 %vr20905, 72
	br i1 %vr20904, label %.Lt_0CA9, label %.Lt_11A3
.Lt_11A3:

	; label .Lt_0CAA
	br label %.Lt_0CAA
.Lt_0CAA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CAB
	%vr20908 = bitcast i8* bitcast ([27 x i8]* @Lt_0CAB to i8*) to i8*
	; arg 26
	%vr20907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20908, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20907
	%vr20911 = bitcast %FBSTRING* %vr20907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20911, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11A4:

	; label .Lt_0CA9
	br label %.Lt_0CA9
.Lt_0CA9:

	; branchbop V <> 73
	%vr20915 = load i64, i64* %V.111
	%vr20914 = icmp ne i64 %vr20915, 73
	br i1 %vr20914, label %.Lt_0CAC, label %.Lt_11A5
.Lt_11A5:

	; label .Lt_0CAD
	br label %.Lt_0CAD
.Lt_0CAD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CAE
	%vr20918 = bitcast i8* bitcast ([30 x i8]* @Lt_0CAE to i8*) to i8*
	; arg 29
	%vr20917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20918, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20917
	%vr20921 = bitcast %FBSTRING* %vr20917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20921, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11A6:

	; label .Lt_0CAC
	br label %.Lt_0CAC
.Lt_0CAC:

	; branchbop V <> 74
	%vr20925 = load i64, i64* %V.111
	%vr20924 = icmp ne i64 %vr20925, 74
	br i1 %vr20924, label %.Lt_0CAF, label %.Lt_11A7
.Lt_11A7:

	; label .Lt_0CB0
	br label %.Lt_0CB0
.Lt_0CB0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB1
	%vr20928 = bitcast i8* bitcast ([30 x i8]* @Lt_0CB1 to i8*) to i8*
	; arg 29
	%vr20927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20928, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20927
	%vr20931 = bitcast %FBSTRING* %vr20927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20931, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11A8:

	; label .Lt_0CAF
	br label %.Lt_0CAF
.Lt_0CAF:

	; branchbop V <> 75
	%vr20935 = load i64, i64* %V.111
	%vr20934 = icmp ne i64 %vr20935, 75
	br i1 %vr20934, label %.Lt_0CB2, label %.Lt_11A9
.Lt_11A9:

	; label .Lt_0CB3
	br label %.Lt_0CB3
.Lt_0CB3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB4
	%vr20938 = bitcast i8* bitcast ([49 x i8]* @Lt_0CB4 to i8*) to i8*
	; arg 48
	%vr20937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20938, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr20937
	%vr20941 = bitcast %FBSTRING* %vr20937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20941, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11AA:

	; label .Lt_0CB2
	br label %.Lt_0CB2
.Lt_0CB2:

	; branchbop V <> 76
	%vr20945 = load i64, i64* %V.111
	%vr20944 = icmp ne i64 %vr20945, 76
	br i1 %vr20944, label %.Lt_0CB5, label %.Lt_11AB
.Lt_11AB:

	; label .Lt_0CB6
	br label %.Lt_0CB6
.Lt_0CB6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB7
	%vr20948 = bitcast i8* bitcast ([29 x i8]* @Lt_0CB7 to i8*) to i8*
	; arg 28
	%vr20947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20948, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr20947
	%vr20951 = bitcast %FBSTRING* %vr20947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20951, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11AC:

	; label .Lt_0CB5
	br label %.Lt_0CB5
.Lt_0CB5:

	; branchbop V <> 77
	%vr20955 = load i64, i64* %V.111
	%vr20954 = icmp ne i64 %vr20955, 77
	br i1 %vr20954, label %.Lt_0CB8, label %.Lt_11AD
.Lt_11AD:

	; label .Lt_0CB9
	br label %.Lt_0CB9
.Lt_0CB9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CBA
	%vr20958 = bitcast i8* bitcast ([67 x i8]* @Lt_0CBA to i8*) to i8*
	; arg 66
	%vr20957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20958, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr20957
	%vr20961 = bitcast %FBSTRING* %vr20957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20961, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11AE:

	; label .Lt_0CB8
	br label %.Lt_0CB8
.Lt_0CB8:

	; branchbop V <> 78
	%vr20965 = load i64, i64* %V.111
	%vr20964 = icmp ne i64 %vr20965, 78
	br i1 %vr20964, label %.Lt_0CBB, label %.Lt_11AF
.Lt_11AF:

	; label .Lt_0CBC
	br label %.Lt_0CBC
.Lt_0CBC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CBD
	%vr20968 = bitcast i8* bitcast ([18 x i8]* @Lt_0CBD to i8*) to i8*
	; arg 17
	%vr20967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20968, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr20967
	%vr20971 = bitcast %FBSTRING* %vr20967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20971, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11B0:

	; label .Lt_0CBB
	br label %.Lt_0CBB
.Lt_0CBB:

	; branchbop V <> 79
	%vr20975 = load i64, i64* %V.111
	%vr20974 = icmp ne i64 %vr20975, 79
	br i1 %vr20974, label %.Lt_0CBE, label %.Lt_11B1
.Lt_11B1:

	; label .Lt_0CBF
	br label %.Lt_0CBF
.Lt_0CBF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC0
	%vr20978 = bitcast i8* bitcast ([20 x i8]* @Lt_0CC0 to i8*) to i8*
	; arg 19
	%vr20977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20978, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr20977
	%vr20981 = bitcast %FBSTRING* %vr20977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20981, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11B2:

	; label .Lt_0CBE
	br label %.Lt_0CBE
.Lt_0CBE:

	; branchbop V <> 80
	%vr20985 = load i64, i64* %V.111
	%vr20984 = icmp ne i64 %vr20985, 80
	br i1 %vr20984, label %.Lt_0CC1, label %.Lt_11B3
.Lt_11B3:

	; label .Lt_0CC2
	br label %.Lt_0CC2
.Lt_0CC2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC3
	%vr20988 = bitcast i8* bitcast ([36 x i8]* @Lt_0CC3 to i8*) to i8*
	; arg 35
	%vr20987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20988, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20987
	%vr20991 = bitcast %FBSTRING* %vr20987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20991, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11B4:

	; label .Lt_0CC1
	br label %.Lt_0CC1
.Lt_0CC1:

	; branchbop V <> 81
	%vr20995 = load i64, i64* %V.111
	%vr20994 = icmp ne i64 %vr20995, 81
	br i1 %vr20994, label %.Lt_0CC4, label %.Lt_11B5
.Lt_11B5:

	; label .Lt_0CC5
	br label %.Lt_0CC5
.Lt_0CC5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC6
	%vr20998 = bitcast i8* bitcast ([36 x i8]* @Lt_0CC6 to i8*) to i8*
	; arg 35
	%vr20997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20998, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20997
	%vr21001 = bitcast %FBSTRING* %vr20997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21001, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11B6:

	; label .Lt_0CC4
	br label %.Lt_0CC4
.Lt_0CC4:

	; branchbop V <> 82
	%vr21005 = load i64, i64* %V.111
	%vr21004 = icmp ne i64 %vr21005, 82
	br i1 %vr21004, label %.Lt_0CC7, label %.Lt_11B7
.Lt_11B7:

	; label .Lt_0CC8
	br label %.Lt_0CC8
.Lt_0CC8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC9
	%vr21008 = bitcast i8* bitcast ([36 x i8]* @Lt_0CC9 to i8*) to i8*
	; arg 35
	%vr21007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21008, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr21007
	%vr21011 = bitcast %FBSTRING* %vr21007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21011, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11B8:

	; label .Lt_0CC7
	br label %.Lt_0CC7
.Lt_0CC7:

	; branchbop V <> 83
	%vr21015 = load i64, i64* %V.111
	%vr21014 = icmp ne i64 %vr21015, 83
	br i1 %vr21014, label %.Lt_0CCA, label %.Lt_11B9
.Lt_11B9:

	; label .Lt_0CCB
	br label %.Lt_0CCB
.Lt_0CCB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CCC
	%vr21018 = bitcast i8* bitcast ([36 x i8]* @Lt_0CCC to i8*) to i8*
	; arg 35
	%vr21017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21018, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr21017
	%vr21021 = bitcast %FBSTRING* %vr21017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21021, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11BA:

	; label .Lt_0CCA
	br label %.Lt_0CCA
.Lt_0CCA:

	; branchbop V <> 84
	%vr21025 = load i64, i64* %V.111
	%vr21024 = icmp ne i64 %vr21025, 84
	br i1 %vr21024, label %.Lt_0CCD, label %.Lt_11BB
.Lt_11BB:

	; label .Lt_0CCE
	br label %.Lt_0CCE
.Lt_0CCE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CCF
	%vr21028 = bitcast i8* bitcast ([36 x i8]* @Lt_0CCF to i8*) to i8*
	; arg 35
	%vr21027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21028, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr21027
	%vr21031 = bitcast %FBSTRING* %vr21027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21031, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11BC:

	; label .Lt_0CCD
	br label %.Lt_0CCD
.Lt_0CCD:

	; branchbop V <> 85
	%vr21035 = load i64, i64* %V.111
	%vr21034 = icmp ne i64 %vr21035, 85
	br i1 %vr21034, label %.Lt_0CD0, label %.Lt_11BD
.Lt_11BD:

	; label .Lt_0CD1
	br label %.Lt_0CD1
.Lt_0CD1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD2
	%vr21038 = bitcast i8* bitcast ([39 x i8]* @Lt_0CD2 to i8*) to i8*
	; arg 38
	%vr21037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21038, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr21037
	%vr21041 = bitcast %FBSTRING* %vr21037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21041, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11BE:

	; label .Lt_0CD0
	br label %.Lt_0CD0
.Lt_0CD0:

	; branchbop V <> 86
	%vr21045 = load i64, i64* %V.111
	%vr21044 = icmp ne i64 %vr21045, 86
	br i1 %vr21044, label %.Lt_0CD3, label %.Lt_11BF
.Lt_11BF:

	; label .Lt_0CD4
	br label %.Lt_0CD4
.Lt_0CD4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD5
	%vr21048 = bitcast i8* bitcast ([53 x i8]* @Lt_0CD5 to i8*) to i8*
	; arg 52
	%vr21047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21048, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr21047
	%vr21051 = bitcast %FBSTRING* %vr21047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21051, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11C0:

	; label .Lt_0CD3
	br label %.Lt_0CD3
.Lt_0CD3:

	; branchbop V <> 87
	%vr21055 = load i64, i64* %V.111
	%vr21054 = icmp ne i64 %vr21055, 87
	br i1 %vr21054, label %.Lt_0CD6, label %.Lt_11C1
.Lt_11C1:

	; label .Lt_0CD7
	br label %.Lt_0CD7
.Lt_0CD7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD8
	%vr21058 = bitcast i8* bitcast ([89 x i8]* @Lt_0CD8 to i8*) to i8*
	; arg 88
	%vr21057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21058, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr21057
	%vr21061 = bitcast %FBSTRING* %vr21057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21061, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11C2:

	; label .Lt_0CD6
	br label %.Lt_0CD6
.Lt_0CD6:

	; branchbop V <> 88
	%vr21065 = load i64, i64* %V.111
	%vr21064 = icmp ne i64 %vr21065, 88
	br i1 %vr21064, label %.Lt_0CD9, label %.Lt_11C3
.Lt_11C3:

	; label .Lt_0CDA
	br label %.Lt_0CDA
.Lt_0CDA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CDB
	%vr21068 = bitcast i8* bitcast ([45 x i8]* @Lt_0CDB to i8*) to i8*
	; arg 44
	%vr21067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21068, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr21067
	%vr21071 = bitcast %FBSTRING* %vr21067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21071, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11C4:

	; label .Lt_0CD9
	br label %.Lt_0CD9
.Lt_0CD9:

	; branchbop V <> 89
	%vr21075 = load i64, i64* %V.111
	%vr21074 = icmp ne i64 %vr21075, 89
	br i1 %vr21074, label %.Lt_0CDC, label %.Lt_11C5
.Lt_11C5:

	; label .Lt_0CDD
	br label %.Lt_0CDD
.Lt_0CDD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CDE
	%vr21078 = bitcast i8* bitcast ([25 x i8]* @Lt_0CDE to i8*) to i8*
	; arg 24
	%vr21077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21078, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr21077
	%vr21081 = bitcast %FBSTRING* %vr21077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21081, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11C6:

	; label .Lt_0CDC
	br label %.Lt_0CDC
.Lt_0CDC:

	; branchbop V <> 90
	%vr21085 = load i64, i64* %V.111
	%vr21084 = icmp ne i64 %vr21085, 90
	br i1 %vr21084, label %.Lt_0CDF, label %.Lt_11C7
.Lt_11C7:

	; label .Lt_0CE0
	br label %.Lt_0CE0
.Lt_0CE0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE1
	%vr21088 = bitcast i8* bitcast ([27 x i8]* @Lt_0CE1 to i8*) to i8*
	; arg 26
	%vr21087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21088, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21087
	%vr21091 = bitcast %FBSTRING* %vr21087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21091, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11C8:

	; label .Lt_0CDF
	br label %.Lt_0CDF
.Lt_0CDF:

	; branchbop V <> 91
	%vr21095 = load i64, i64* %V.111
	%vr21094 = icmp ne i64 %vr21095, 91
	br i1 %vr21094, label %.Lt_0CE2, label %.Lt_11C9
.Lt_11C9:

	; label .Lt_0CE3
	br label %.Lt_0CE3
.Lt_0CE3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE4
	%vr21098 = bitcast i8* bitcast ([27 x i8]* @Lt_0CE4 to i8*) to i8*
	; arg 26
	%vr21097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21098, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21097
	%vr21101 = bitcast %FBSTRING* %vr21097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21101, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11CA:

	; label .Lt_0CE2
	br label %.Lt_0CE2
.Lt_0CE2:

	; branchbop V <> 92
	%vr21105 = load i64, i64* %V.111
	%vr21104 = icmp ne i64 %vr21105, 92
	br i1 %vr21104, label %.Lt_0CE5, label %.Lt_11CB
.Lt_11CB:

	; label .Lt_0CE6
	br label %.Lt_0CE6
.Lt_0CE6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE7
	%vr21108 = bitcast i8* bitcast ([29 x i8]* @Lt_0CE7 to i8*) to i8*
	; arg 28
	%vr21107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21108, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21107
	%vr21111 = bitcast %FBSTRING* %vr21107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21111, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11CC:

	; label .Lt_0CE5
	br label %.Lt_0CE5
.Lt_0CE5:

	; branchbop V <> 93
	%vr21115 = load i64, i64* %V.111
	%vr21114 = icmp ne i64 %vr21115, 93
	br i1 %vr21114, label %.Lt_0CE8, label %.Lt_11CD
.Lt_11CD:

	; label .Lt_0CE9
	br label %.Lt_0CE9
.Lt_0CE9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CEA
	%vr21118 = bitcast i8* bitcast ([30 x i8]* @Lt_0CEA to i8*) to i8*
	; arg 29
	%vr21117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21118, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr21117
	%vr21121 = bitcast %FBSTRING* %vr21117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21121, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11CE:

	; label .Lt_0CE8
	br label %.Lt_0CE8
.Lt_0CE8:

	; branchbop V <> 94
	%vr21125 = load i64, i64* %V.111
	%vr21124 = icmp ne i64 %vr21125, 94
	br i1 %vr21124, label %.Lt_0CEB, label %.Lt_11CF
.Lt_11CF:

	; label .Lt_0CEC
	br label %.Lt_0CEC
.Lt_0CEC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CED
	%vr21128 = bitcast i8* bitcast ([33 x i8]* @Lt_0CED to i8*) to i8*
	; arg 32
	%vr21127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21128, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr21127
	%vr21131 = bitcast %FBSTRING* %vr21127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21131, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11D0:

	; label .Lt_0CEB
	br label %.Lt_0CEB
.Lt_0CEB:

	; branchbop V <> 95
	%vr21135 = load i64, i64* %V.111
	%vr21134 = icmp ne i64 %vr21135, 95
	br i1 %vr21134, label %.Lt_0CEE, label %.Lt_11D1
.Lt_11D1:

	; label .Lt_0CEF
	br label %.Lt_0CEF
.Lt_0CEF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF0
	%vr21138 = bitcast i8* bitcast ([30 x i8]* @Lt_0CF0 to i8*) to i8*
	; arg 29
	%vr21137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21138, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr21137
	%vr21141 = bitcast %FBSTRING* %vr21137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21141, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11D2:

	; label .Lt_0CEE
	br label %.Lt_0CEE
.Lt_0CEE:

	; branchbop V <> 96
	%vr21145 = load i64, i64* %V.111
	%vr21144 = icmp ne i64 %vr21145, 96
	br i1 %vr21144, label %.Lt_0CF1, label %.Lt_11D3
.Lt_11D3:

	; label .Lt_0CF2
	br label %.Lt_0CF2
.Lt_0CF2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF3
	%vr21148 = bitcast i8* bitcast ([31 x i8]* @Lt_0CF3 to i8*) to i8*
	; arg 30
	%vr21147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21148, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21147
	%vr21151 = bitcast %FBSTRING* %vr21147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21151, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11D4:

	; label .Lt_0CF1
	br label %.Lt_0CF1
.Lt_0CF1:

	; branchbop V <> 97
	%vr21155 = load i64, i64* %V.111
	%vr21154 = icmp ne i64 %vr21155, 97
	br i1 %vr21154, label %.Lt_0CF4, label %.Lt_11D5
.Lt_11D5:

	; label .Lt_0CF5
	br label %.Lt_0CF5
.Lt_0CF5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF6
	%vr21158 = bitcast i8* bitcast ([64 x i8]* @Lt_0CF6 to i8*) to i8*
	; arg 63
	%vr21157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21158, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr21157
	%vr21161 = bitcast %FBSTRING* %vr21157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21161, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11D6:

	; label .Lt_0CF4
	br label %.Lt_0CF4
.Lt_0CF4:

	; branchbop V <> 98
	%vr21165 = load i64, i64* %V.111
	%vr21164 = icmp ne i64 %vr21165, 98
	br i1 %vr21164, label %.Lt_0CF7, label %.Lt_11D7
.Lt_11D7:

	; label .Lt_0CF8
	br label %.Lt_0CF8
.Lt_0CF8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF9
	%vr21168 = bitcast i8* bitcast ([65 x i8]* @Lt_0CF9 to i8*) to i8*
	; arg 64
	%vr21167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21168, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr21167
	%vr21171 = bitcast %FBSTRING* %vr21167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21171, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11D8:

	; label .Lt_0CF7
	br label %.Lt_0CF7
.Lt_0CF7:

	; branchbop V <> 99
	%vr21175 = load i64, i64* %V.111
	%vr21174 = icmp ne i64 %vr21175, 99
	br i1 %vr21174, label %.Lt_0CFA, label %.Lt_11D9
.Lt_11D9:

	; label .Lt_0CFB
	br label %.Lt_0CFB
.Lt_0CFB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CFC
	%vr21178 = bitcast i8* bitcast ([49 x i8]* @Lt_0CFC to i8*) to i8*
	; arg 48
	%vr21177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21178, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr21177
	%vr21181 = bitcast %FBSTRING* %vr21177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21181, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11DA:

	; label .Lt_0CFA
	br label %.Lt_0CFA
.Lt_0CFA:

	; branchbop V <> 100
	%vr21185 = load i64, i64* %V.111
	%vr21184 = icmp ne i64 %vr21185, 100
	br i1 %vr21184, label %.Lt_0CFD, label %.Lt_11DB
.Lt_11DB:

	; label .Lt_0CFE
	br label %.Lt_0CFE
.Lt_0CFE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CFF
	%vr21188 = bitcast i8* bitcast ([88 x i8]* @Lt_0CFF to i8*) to i8*
	; arg 87
	%vr21187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21188, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr21187
	%vr21191 = bitcast %FBSTRING* %vr21187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21191, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11DC:

	; label .Lt_0CFD
	br label %.Lt_0CFD
.Lt_0CFD:

	; branchbop V <> 101
	%vr21195 = load i64, i64* %V.111
	%vr21194 = icmp ne i64 %vr21195, 101
	br i1 %vr21194, label %.Lt_0D00, label %.Lt_11DD
.Lt_11DD:

	; label .Lt_0D01
	br label %.Lt_0D01
.Lt_0D01:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D02
	%vr21198 = bitcast i8* bitcast ([19 x i8]* @Lt_0D02 to i8*) to i8*
	; arg 18
	%vr21197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21198, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr21197
	%vr21201 = bitcast %FBSTRING* %vr21197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21201, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11DE:

	; label .Lt_0D00
	br label %.Lt_0D00
.Lt_0D00:

	; branchbop V <> 102
	%vr21205 = load i64, i64* %V.111
	%vr21204 = icmp ne i64 %vr21205, 102
	br i1 %vr21204, label %.Lt_0D03, label %.Lt_11DF
.Lt_11DF:

	; label .Lt_0D04
	br label %.Lt_0D04
.Lt_0D04:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D05
	%vr21208 = bitcast i8* bitcast ([22 x i8]* @Lt_0D05 to i8*) to i8*
	; arg 21
	%vr21207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21208, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr21207
	%vr21211 = bitcast %FBSTRING* %vr21207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21211, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11E0:

	; label .Lt_0D03
	br label %.Lt_0D03
.Lt_0D03:

	; branchbop V <> 103
	%vr21215 = load i64, i64* %V.111
	%vr21214 = icmp ne i64 %vr21215, 103
	br i1 %vr21214, label %.Lt_0D06, label %.Lt_11E1
.Lt_11E1:

	; label .Lt_0D07
	br label %.Lt_0D07
.Lt_0D07:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D08
	%vr21218 = bitcast i8* bitcast ([38 x i8]* @Lt_0D08 to i8*) to i8*
	; arg 37
	%vr21217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21218, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr21217
	%vr21221 = bitcast %FBSTRING* %vr21217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21221, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11E2:

	; label .Lt_0D06
	br label %.Lt_0D06
.Lt_0D06:

	; branchbop V <> 104
	%vr21225 = load i64, i64* %V.111
	%vr21224 = icmp ne i64 %vr21225, 104
	br i1 %vr21224, label %.Lt_0D09, label %.Lt_11E3
.Lt_11E3:

	; label .Lt_0D0A
	br label %.Lt_0D0A
.Lt_0D0A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D0B
	%vr21228 = bitcast i8* bitcast ([39 x i8]* @Lt_0D0B to i8*) to i8*
	; arg 38
	%vr21227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21228, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr21227
	%vr21231 = bitcast %FBSTRING* %vr21227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21231, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11E4:

	; label .Lt_0D09
	br label %.Lt_0D09
.Lt_0D09:

	; branchbop V <> 105
	%vr21235 = load i64, i64* %V.111
	%vr21234 = icmp ne i64 %vr21235, 105
	br i1 %vr21234, label %.Lt_0D0C, label %.Lt_11E5
.Lt_11E5:

	; label .Lt_0D0D
	br label %.Lt_0D0D
.Lt_0D0D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D0E
	%vr21238 = bitcast i8* bitcast ([39 x i8]* @Lt_0D0E to i8*) to i8*
	; arg 38
	%vr21237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21238, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr21237
	%vr21241 = bitcast %FBSTRING* %vr21237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21241, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11E6:

	; label .Lt_0D0C
	br label %.Lt_0D0C
.Lt_0D0C:

	; branchbop V <> 106
	%vr21245 = load i64, i64* %V.111
	%vr21244 = icmp ne i64 %vr21245, 106
	br i1 %vr21244, label %.Lt_0D0F, label %.Lt_11E7
.Lt_11E7:

	; label .Lt_0D10
	br label %.Lt_0D10
.Lt_0D10:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D11
	%vr21248 = bitcast i8* bitcast ([18 x i8]* @Lt_0D11 to i8*) to i8*
	; arg 17
	%vr21247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21248, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr21247
	%vr21251 = bitcast %FBSTRING* %vr21247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21251, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11E8:

	; label .Lt_0D0F
	br label %.Lt_0D0F
.Lt_0D0F:

	; branchbop V <> 107
	%vr21255 = load i64, i64* %V.111
	%vr21254 = icmp ne i64 %vr21255, 107
	br i1 %vr21254, label %.Lt_0D12, label %.Lt_11E9
.Lt_11E9:

	; label .Lt_0D13
	br label %.Lt_0D13
.Lt_0D13:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D14
	%vr21258 = bitcast i8* bitcast ([15 x i8]* @Lt_0D14 to i8*) to i8*
	; arg 14
	%vr21257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21258, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr21257
	%vr21261 = bitcast %FBSTRING* %vr21257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21261, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11EA:

	; label .Lt_0D12
	br label %.Lt_0D12
.Lt_0D12:

	; branchbop V <> 108
	%vr21265 = load i64, i64* %V.111
	%vr21264 = icmp ne i64 %vr21265, 108
	br i1 %vr21264, label %.Lt_0D15, label %.Lt_11EB
.Lt_11EB:

	; label .Lt_0D16
	br label %.Lt_0D16
.Lt_0D16:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D17
	%vr21268 = bitcast i8* bitcast ([21 x i8]* @Lt_0D17 to i8*) to i8*
	; arg 20
	%vr21267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21268, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr21267
	%vr21271 = bitcast %FBSTRING* %vr21267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21271, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11EC:

	; label .Lt_0D15
	br label %.Lt_0D15
.Lt_0D15:

	; branchbop V <> 109
	%vr21275 = load i64, i64* %V.111
	%vr21274 = icmp ne i64 %vr21275, 109
	br i1 %vr21274, label %.Lt_0D18, label %.Lt_11ED
.Lt_11ED:

	; label .Lt_0D19
	br label %.Lt_0D19
.Lt_0D19:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D1A
	%vr21278 = bitcast i8* bitcast ([21 x i8]* @Lt_0D1A to i8*) to i8*
	; arg 20
	%vr21277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21278, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr21277
	%vr21281 = bitcast %FBSTRING* %vr21277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21281, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11EE:

	; label .Lt_0D18
	br label %.Lt_0D18
.Lt_0D18:

	; branchbop V <> 110
	%vr21285 = load i64, i64* %V.111
	%vr21284 = icmp ne i64 %vr21285, 110
	br i1 %vr21284, label %.Lt_0D1B, label %.Lt_11EF
.Lt_11EF:

	; label .Lt_0D1C
	br label %.Lt_0D1C
.Lt_0D1C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D1D
	%vr21288 = bitcast i8* bitcast ([28 x i8]* @Lt_0D1D to i8*) to i8*
	; arg 27
	%vr21287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21288, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr21287
	%vr21291 = bitcast %FBSTRING* %vr21287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21291, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11F0:

	; label .Lt_0D1B
	br label %.Lt_0D1B
.Lt_0D1B:

	; branchbop V <> 111
	%vr21295 = load i64, i64* %V.111
	%vr21294 = icmp ne i64 %vr21295, 111
	br i1 %vr21294, label %.Lt_0D1E, label %.Lt_11F1
.Lt_11F1:

	; label .Lt_0D1F
	br label %.Lt_0D1F
.Lt_0D1F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D20
	%vr21298 = bitcast i8* bitcast ([28 x i8]* @Lt_0D20 to i8*) to i8*
	; arg 27
	%vr21297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21298, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr21297
	%vr21301 = bitcast %FBSTRING* %vr21297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21301, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11F2:

	; label .Lt_0D1E
	br label %.Lt_0D1E
.Lt_0D1E:

	; branchbop V <> 112
	%vr21305 = load i64, i64* %V.111
	%vr21304 = icmp ne i64 %vr21305, 112
	br i1 %vr21304, label %.Lt_0D21, label %.Lt_11F3
.Lt_11F3:

	; label .Lt_0D22
	br label %.Lt_0D22
.Lt_0D22:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D23
	%vr21308 = bitcast i8* bitcast ([20 x i8]* @Lt_0D23 to i8*) to i8*
	; arg 19
	%vr21307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21308, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr21307
	%vr21311 = bitcast %FBSTRING* %vr21307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21311, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11F4:

	; label .Lt_0D21
	br label %.Lt_0D21
.Lt_0D21:

	; branchbop V <> 113
	%vr21315 = load i64, i64* %V.111
	%vr21314 = icmp ne i64 %vr21315, 113
	br i1 %vr21314, label %.Lt_0D24, label %.Lt_11F5
.Lt_11F5:

	; label .Lt_0D25
	br label %.Lt_0D25
.Lt_0D25:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D26
	%vr21318 = bitcast i8* bitcast ([23 x i8]* @Lt_0D26 to i8*) to i8*
	; arg 22
	%vr21317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21318, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr21317
	%vr21321 = bitcast %FBSTRING* %vr21317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21321, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11F6:

	; label .Lt_0D24
	br label %.Lt_0D24
.Lt_0D24:

	; branchbop V <> 114
	%vr21325 = load i64, i64* %V.111
	%vr21324 = icmp ne i64 %vr21325, 114
	br i1 %vr21324, label %.Lt_0D27, label %.Lt_11F7
.Lt_11F7:

	; label .Lt_0D28
	br label %.Lt_0D28
.Lt_0D28:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D29
	%vr21328 = bitcast i8* bitcast ([27 x i8]* @Lt_0D29 to i8*) to i8*
	; arg 26
	%vr21327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21328, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21327
	%vr21331 = bitcast %FBSTRING* %vr21327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21331, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11F8:

	; label .Lt_0D27
	br label %.Lt_0D27
.Lt_0D27:

	; branchbop V <> 115
	%vr21335 = load i64, i64* %V.111
	%vr21334 = icmp ne i64 %vr21335, 115
	br i1 %vr21334, label %.Lt_0D2A, label %.Lt_11F9
.Lt_11F9:

	; label .Lt_0D2B
	br label %.Lt_0D2B
.Lt_0D2B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D2C
	%vr21338 = bitcast i8* bitcast ([29 x i8]* @Lt_0D2C to i8*) to i8*
	; arg 28
	%vr21337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21338, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21337
	%vr21341 = bitcast %FBSTRING* %vr21337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21341, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11FA:

	; label .Lt_0D2A
	br label %.Lt_0D2A
.Lt_0D2A:

	; branchbop V <> 116
	%vr21345 = load i64, i64* %V.111
	%vr21344 = icmp ne i64 %vr21345, 116
	br i1 %vr21344, label %.Lt_0D2D, label %.Lt_11FB
.Lt_11FB:

	; label .Lt_0D2E
	br label %.Lt_0D2E
.Lt_0D2E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D2F
	%vr21348 = bitcast i8* bitcast ([31 x i8]* @Lt_0D2F to i8*) to i8*
	; arg 30
	%vr21347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21348, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21347
	%vr21351 = bitcast %FBSTRING* %vr21347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21351, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11FC:

	; label .Lt_0D2D
	br label %.Lt_0D2D
.Lt_0D2D:

	; branchbop V <> 117
	%vr21355 = load i64, i64* %V.111
	%vr21354 = icmp ne i64 %vr21355, 117
	br i1 %vr21354, label %.Lt_0D30, label %.Lt_11FD
.Lt_11FD:

	; label .Lt_0D31
	br label %.Lt_0D31
.Lt_0D31:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D32
	%vr21358 = bitcast i8* bitcast ([70 x i8]* @Lt_0D32 to i8*) to i8*
	; arg 69
	%vr21357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21358, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr21357
	%vr21361 = bitcast %FBSTRING* %vr21357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21361, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_11FE:

	; label .Lt_0D30
	br label %.Lt_0D30
.Lt_0D30:

	; branchbop V <> 118
	%vr21365 = load i64, i64* %V.111
	%vr21364 = icmp ne i64 %vr21365, 118
	br i1 %vr21364, label %.Lt_0D33, label %.Lt_11FF
.Lt_11FF:

	; label .Lt_0D34
	br label %.Lt_0D34
.Lt_0D34:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D35
	%vr21368 = bitcast i8* bitcast ([26 x i8]* @Lt_0D35 to i8*) to i8*
	; arg 25
	%vr21367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21368, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr21367
	%vr21371 = bitcast %FBSTRING* %vr21367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21371, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1200:

	; label .Lt_0D33
	br label %.Lt_0D33
.Lt_0D33:

	; branchbop V <> 119
	%vr21375 = load i64, i64* %V.111
	%vr21374 = icmp ne i64 %vr21375, 119
	br i1 %vr21374, label %.Lt_0D36, label %.Lt_1201
.Lt_1201:

	; label .Lt_0D37
	br label %.Lt_0D37
.Lt_0D37:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D38
	%vr21378 = bitcast i8* bitcast ([38 x i8]* @Lt_0D38 to i8*) to i8*
	; arg 37
	%vr21377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21378, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr21377
	%vr21381 = bitcast %FBSTRING* %vr21377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21381, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1202:

	; label .Lt_0D36
	br label %.Lt_0D36
.Lt_0D36:

	; branchbop V <> 120
	%vr21385 = load i64, i64* %V.111
	%vr21384 = icmp ne i64 %vr21385, 120
	br i1 %vr21384, label %.Lt_0D39, label %.Lt_1203
.Lt_1203:

	; label .Lt_0D3A
	br label %.Lt_0D3A
.Lt_0D3A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D3B
	%vr21388 = bitcast i8* bitcast ([45 x i8]* @Lt_0D3B to i8*) to i8*
	; arg 44
	%vr21387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21388, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr21387
	%vr21391 = bitcast %FBSTRING* %vr21387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21391, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1204:

	; label .Lt_0D39
	br label %.Lt_0D39
.Lt_0D39:

	; branchbop V <> 121
	%vr21395 = load i64, i64* %V.111
	%vr21394 = icmp ne i64 %vr21395, 121
	br i1 %vr21394, label %.Lt_0D3C, label %.Lt_1205
.Lt_1205:

	; label .Lt_0D3D
	br label %.Lt_0D3D
.Lt_0D3D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D3E
	%vr21398 = bitcast i8* bitcast ([61 x i8]* @Lt_0D3E to i8*) to i8*
	; arg 60
	%vr21397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21398, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr21397
	%vr21401 = bitcast %FBSTRING* %vr21397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21401, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1206:

	; label .Lt_0D3C
	br label %.Lt_0D3C
.Lt_0D3C:

	; branchbop V <> 122
	%vr21405 = load i64, i64* %V.111
	%vr21404 = icmp ne i64 %vr21405, 122
	br i1 %vr21404, label %.Lt_0D3F, label %.Lt_1207
.Lt_1207:

	; label .Lt_0D40
	br label %.Lt_0D40
.Lt_0D40:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D41
	%vr21408 = bitcast i8* bitcast ([29 x i8]* @Lt_0D41 to i8*) to i8*
	; arg 28
	%vr21407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21408, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21407
	%vr21411 = bitcast %FBSTRING* %vr21407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21411, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1208:

	; label .Lt_0D3F
	br label %.Lt_0D3F
.Lt_0D3F:

	; branchbop V <> 123
	%vr21415 = load i64, i64* %V.111
	%vr21414 = icmp ne i64 %vr21415, 123
	br i1 %vr21414, label %.Lt_0D42, label %.Lt_1209
.Lt_1209:

	; label .Lt_0D43
	br label %.Lt_0D43
.Lt_0D43:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D44
	%vr21418 = bitcast i8* bitcast ([41 x i8]* @Lt_0D44 to i8*) to i8*
	; arg 40
	%vr21417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21418, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr21417
	%vr21421 = bitcast %FBSTRING* %vr21417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21421, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_120A:

	; label .Lt_0D42
	br label %.Lt_0D42
.Lt_0D42:

	; branchbop V <> 124
	%vr21425 = load i64, i64* %V.111
	%vr21424 = icmp ne i64 %vr21425, 124
	br i1 %vr21424, label %.Lt_0D45, label %.Lt_120B
.Lt_120B:

	; label .Lt_0D46
	br label %.Lt_0D46
.Lt_0D46:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D47
	%vr21428 = bitcast i8* bitcast ([87 x i8]* @Lt_0D47 to i8*) to i8*
	; arg 86
	%vr21427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21428, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr21427
	%vr21431 = bitcast %FBSTRING* %vr21427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21431, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_120C:

	; label .Lt_0D45
	br label %.Lt_0D45
.Lt_0D45:

	; branchbop V <> 125
	%vr21435 = load i64, i64* %V.111
	%vr21434 = icmp ne i64 %vr21435, 125
	br i1 %vr21434, label %.Lt_0D48, label %.Lt_120D
.Lt_120D:

	; label .Lt_0D49
	br label %.Lt_0D49
.Lt_0D49:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D4A
	%vr21438 = bitcast i8* bitcast ([27 x i8]* @Lt_0D4A to i8*) to i8*
	; arg 26
	%vr21437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21438, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21437
	%vr21441 = bitcast %FBSTRING* %vr21437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21441, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_120E:

	; label .Lt_0D48
	br label %.Lt_0D48
.Lt_0D48:

	; branchbop V <> 126
	%vr21445 = load i64, i64* %V.111
	%vr21444 = icmp ne i64 %vr21445, 126
	br i1 %vr21444, label %.Lt_0D4B, label %.Lt_120F
.Lt_120F:

	; label .Lt_0D4C
	br label %.Lt_0D4C
.Lt_0D4C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D4D
	%vr21448 = bitcast i8* bitcast ([30 x i8]* @Lt_0D4D to i8*) to i8*
	; arg 29
	%vr21447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21448, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr21447
	%vr21451 = bitcast %FBSTRING* %vr21447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21451, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1210:

	; label .Lt_0D4B
	br label %.Lt_0D4B
.Lt_0D4B:

	; branchbop V <> 127
	%vr21455 = load i64, i64* %V.111
	%vr21454 = icmp ne i64 %vr21455, 127
	br i1 %vr21454, label %.Lt_0D4E, label %.Lt_1211
.Lt_1211:

	; label .Lt_0D4F
	br label %.Lt_0D4F
.Lt_0D4F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D50
	%vr21458 = bitcast i8* bitcast ([31 x i8]* @Lt_0D50 to i8*) to i8*
	; arg 30
	%vr21457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21458, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21457
	%vr21461 = bitcast %FBSTRING* %vr21457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21461, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1212:

	; label .Lt_0D4E
	br label %.Lt_0D4E
.Lt_0D4E:

	; branchbop V <> 128
	%vr21465 = load i64, i64* %V.111
	%vr21464 = icmp ne i64 %vr21465, 128
	br i1 %vr21464, label %.Lt_0D51, label %.Lt_1213
.Lt_1213:

	; label .Lt_0D52
	br label %.Lt_0D52
.Lt_0D52:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D53
	%vr21468 = bitcast i8* bitcast ([33 x i8]* @Lt_0D53 to i8*) to i8*
	; arg 32
	%vr21467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21468, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr21467
	%vr21471 = bitcast %FBSTRING* %vr21467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21471, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1214:

	; label .Lt_0D51
	br label %.Lt_0D51
.Lt_0D51:

	; branchbop V <> 129
	%vr21475 = load i64, i64* %V.111
	%vr21474 = icmp ne i64 %vr21475, 129
	br i1 %vr21474, label %.Lt_0D54, label %.Lt_1215
.Lt_1215:

	; label .Lt_0D55
	br label %.Lt_0D55
.Lt_0D55:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D56
	%vr21478 = bitcast i8* bitcast ([35 x i8]* @Lt_0D56 to i8*) to i8*
	; arg 34
	%vr21477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21478, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr21477
	%vr21481 = bitcast %FBSTRING* %vr21477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21481, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1216:

	; label .Lt_0D54
	br label %.Lt_0D54
.Lt_0D54:

	; branchbop V <> 130
	%vr21485 = load i64, i64* %V.111
	%vr21484 = icmp ne i64 %vr21485, 130
	br i1 %vr21484, label %.Lt_0D57, label %.Lt_1217
.Lt_1217:

	; label .Lt_0D58
	br label %.Lt_0D58
.Lt_0D58:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D59
	%vr21488 = bitcast i8* bitcast ([37 x i8]* @Lt_0D59 to i8*) to i8*
	; arg 36
	%vr21487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21488, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr21487
	%vr21491 = bitcast %FBSTRING* %vr21487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21491, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1218:

	; label .Lt_0D57
	br label %.Lt_0D57
.Lt_0D57:

	; branchbop V <> 131
	%vr21495 = load i64, i64* %V.111
	%vr21494 = icmp ne i64 %vr21495, 131
	br i1 %vr21494, label %.Lt_0D5A, label %.Lt_1219
.Lt_1219:

	; label .Lt_0D5B
	br label %.Lt_0D5B
.Lt_0D5B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D5C
	%vr21498 = bitcast i8* bitcast ([38 x i8]* @Lt_0D5C to i8*) to i8*
	; arg 37
	%vr21497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21498, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr21497
	%vr21501 = bitcast %FBSTRING* %vr21497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21501, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_121A:

	; label .Lt_0D5A
	br label %.Lt_0D5A
.Lt_0D5A:

	; branchbop V <> 132
	%vr21505 = load i64, i64* %V.111
	%vr21504 = icmp ne i64 %vr21505, 132
	br i1 %vr21504, label %.Lt_0D5D, label %.Lt_121B
.Lt_121B:

	; label .Lt_0D5E
	br label %.Lt_0D5E
.Lt_0D5E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D5F
	%vr21508 = bitcast i8* bitcast ([40 x i8]* @Lt_0D5F to i8*) to i8*
	; arg 39
	%vr21507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21508, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr21507
	%vr21511 = bitcast %FBSTRING* %vr21507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21511, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_121C:

	; label .Lt_0D5D
	br label %.Lt_0D5D
.Lt_0D5D:

	; branchbop V <> 133
	%vr21515 = load i64, i64* %V.111
	%vr21514 = icmp ne i64 %vr21515, 133
	br i1 %vr21514, label %.Lt_0D60, label %.Lt_121D
.Lt_121D:

	; label .Lt_0D61
	br label %.Lt_0D61
.Lt_0D61:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D62
	%vr21518 = bitcast i8* bitcast ([46 x i8]* @Lt_0D62 to i8*) to i8*
	; arg 45
	%vr21517 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21518, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr21517
	%vr21521 = bitcast %FBSTRING* %vr21517 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21521, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_121E:

	; label .Lt_0D60
	br label %.Lt_0D60
.Lt_0D60:

	; branchbop V <> 134
	%vr21525 = load i64, i64* %V.111
	%vr21524 = icmp ne i64 %vr21525, 134
	br i1 %vr21524, label %.Lt_0D63, label %.Lt_121F
.Lt_121F:

	; label .Lt_0D64
	br label %.Lt_0D64
.Lt_0D64:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D65
	%vr21528 = bitcast i8* bitcast ([47 x i8]* @Lt_0D65 to i8*) to i8*
	; arg 46
	%vr21527 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21528, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr21527
	%vr21531 = bitcast %FBSTRING* %vr21527 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21531, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1220:

	; label .Lt_0D63
	br label %.Lt_0D63
.Lt_0D63:

	; branchbop V <> 135
	%vr21535 = load i64, i64* %V.111
	%vr21534 = icmp ne i64 %vr21535, 135
	br i1 %vr21534, label %.Lt_0D66, label %.Lt_1221
.Lt_1221:

	; label .Lt_0D67
	br label %.Lt_0D67
.Lt_0D67:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D68
	%vr21538 = bitcast i8* bitcast ([48 x i8]* @Lt_0D68 to i8*) to i8*
	; arg 47
	%vr21537 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21538, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr21537
	%vr21541 = bitcast %FBSTRING* %vr21537 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21541, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1222:

	; label .Lt_0D66
	br label %.Lt_0D66
.Lt_0D66:

	; branchbop V <> 136
	%vr21545 = load i64, i64* %V.111
	%vr21544 = icmp ne i64 %vr21545, 136
	br i1 %vr21544, label %.Lt_0D69, label %.Lt_1223
.Lt_1223:

	; label .Lt_0D6A
	br label %.Lt_0D6A
.Lt_0D6A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D6B
	%vr21548 = bitcast i8* bitcast ([54 x i8]* @Lt_0D6B to i8*) to i8*
	; arg 53
	%vr21547 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21548, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr21547
	%vr21551 = bitcast %FBSTRING* %vr21547 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21551, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1224:

	; label .Lt_0D69
	br label %.Lt_0D69
.Lt_0D69:

	; branchbop V <> 137
	%vr21555 = load i64, i64* %V.111
	%vr21554 = icmp ne i64 %vr21555, 137
	br i1 %vr21554, label %.Lt_0D6C, label %.Lt_1225
.Lt_1225:

	; label .Lt_0D6D
	br label %.Lt_0D6D
.Lt_0D6D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D6E
	%vr21558 = bitcast i8* bitcast ([63 x i8]* @Lt_0D6E to i8*) to i8*
	; arg 62
	%vr21557 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21558, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr21557
	%vr21561 = bitcast %FBSTRING* %vr21557 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21561, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1226:

	; label .Lt_0D6C
	br label %.Lt_0D6C
.Lt_0D6C:

	; branchbop V <> 138
	%vr21565 = load i64, i64* %V.111
	%vr21564 = icmp ne i64 %vr21565, 138
	br i1 %vr21564, label %.Lt_0D6F, label %.Lt_1227
.Lt_1227:

	; label .Lt_0D70
	br label %.Lt_0D70
.Lt_0D70:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D71
	%vr21568 = bitcast i8* bitcast ([66 x i8]* @Lt_0D71 to i8*) to i8*
	; arg 65
	%vr21567 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21568, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr21567
	%vr21571 = bitcast %FBSTRING* %vr21567 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21571, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1228:

	; label .Lt_0D6F
	br label %.Lt_0D6F
.Lt_0D6F:

	; branchbop V <> 139
	%vr21575 = load i64, i64* %V.111
	%vr21574 = icmp ne i64 %vr21575, 139
	br i1 %vr21574, label %.Lt_0D72, label %.Lt_1229
.Lt_1229:

	; label .Lt_0D73
	br label %.Lt_0D73
.Lt_0D73:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D74
	%vr21578 = bitcast i8* bitcast ([75 x i8]* @Lt_0D74 to i8*) to i8*
	; arg 74
	%vr21577 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21578, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr21577
	%vr21581 = bitcast %FBSTRING* %vr21577 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21581, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_122A:

	; label .Lt_0D72
	br label %.Lt_0D72
.Lt_0D72:

	; branchbop V <> 140
	%vr21585 = load i64, i64* %V.111
	%vr21584 = icmp ne i64 %vr21585, 140
	br i1 %vr21584, label %.Lt_0D75, label %.Lt_122B
.Lt_122B:

	; label .Lt_0D76
	br label %.Lt_0D76
.Lt_0D76:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D77
	%vr21588 = bitcast i8* bitcast ([61 x i8]* @Lt_0D77 to i8*) to i8*
	; arg 60
	%vr21587 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21588, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr21587
	%vr21591 = bitcast %FBSTRING* %vr21587 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21591, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_122C:

	; label .Lt_0D75
	br label %.Lt_0D75
.Lt_0D75:

	; branchbop V <> 141
	%vr21595 = load i64, i64* %V.111
	%vr21594 = icmp ne i64 %vr21595, 141
	br i1 %vr21594, label %.Lt_0D78, label %.Lt_122D
.Lt_122D:

	; label .Lt_0D79
	br label %.Lt_0D79
.Lt_0D79:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D7A
	%vr21598 = bitcast i8* bitcast ([50 x i8]* @Lt_0D7A to i8*) to i8*
	; arg 49
	%vr21597 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21598, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr21597
	%vr21601 = bitcast %FBSTRING* %vr21597 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21601, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_122E:

	; label .Lt_0D78
	br label %.Lt_0D78
.Lt_0D78:

	; branchbop V <> 142
	%vr21605 = load i64, i64* %V.111
	%vr21604 = icmp ne i64 %vr21605, 142
	br i1 %vr21604, label %.Lt_0D7B, label %.Lt_122F
.Lt_122F:

	; label .Lt_0D7C
	br label %.Lt_0D7C
.Lt_0D7C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D7D
	%vr21608 = bitcast i8* bitcast ([50 x i8]* @Lt_0D7D to i8*) to i8*
	; arg 49
	%vr21607 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21608, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr21607
	%vr21611 = bitcast %FBSTRING* %vr21607 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21611, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1230:

	; label .Lt_0D7B
	br label %.Lt_0D7B
.Lt_0D7B:

	; branchbop V <> 143
	%vr21615 = load i64, i64* %V.111
	%vr21614 = icmp ne i64 %vr21615, 143
	br i1 %vr21614, label %.Lt_0D7E, label %.Lt_1231
.Lt_1231:

	; label .Lt_0D7F
	br label %.Lt_0D7F
.Lt_0D7F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D80
	%vr21618 = bitcast i8* bitcast ([36 x i8]* @Lt_0D80 to i8*) to i8*
	; arg 35
	%vr21617 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21618, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr21617
	%vr21621 = bitcast %FBSTRING* %vr21617 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21621, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1232:

	; label .Lt_0D7E
	br label %.Lt_0D7E
.Lt_0D7E:

	; branchbop V <> 144
	%vr21625 = load i64, i64* %V.111
	%vr21624 = icmp ne i64 %vr21625, 144
	br i1 %vr21624, label %.Lt_0D81, label %.Lt_1233
.Lt_1233:

	; label .Lt_0D82
	br label %.Lt_0D82
.Lt_0D82:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D83
	%vr21628 = bitcast i8* bitcast ([31 x i8]* @Lt_0D83 to i8*) to i8*
	; arg 30
	%vr21627 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21628, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21627
	%vr21631 = bitcast %FBSTRING* %vr21627 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21631, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1234:

	; label .Lt_0D81
	br label %.Lt_0D81
.Lt_0D81:

	; branchbop V <> 145
	%vr21635 = load i64, i64* %V.111
	%vr21634 = icmp ne i64 %vr21635, 145
	br i1 %vr21634, label %.Lt_0D84, label %.Lt_1235
.Lt_1235:

	; label .Lt_0D85
	br label %.Lt_0D85
.Lt_0D85:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D86
	%vr21638 = bitcast i8* bitcast ([9 x i8]* @Lt_0D86 to i8*) to i8*
	; arg 8
	%vr21637 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21638, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr21637
	%vr21641 = bitcast %FBSTRING* %vr21637 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21641, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1236:

	; label .Lt_0D84
	br label %.Lt_0D84
.Lt_0D84:

	; branchbop V <> 146
	%vr21645 = load i64, i64* %V.111
	%vr21644 = icmp ne i64 %vr21645, 146
	br i1 %vr21644, label %.Lt_0D87, label %.Lt_1237
.Lt_1237:

	; label .Lt_0D88
	br label %.Lt_0D88
.Lt_0D88:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D89
	%vr21648 = bitcast i8* bitcast ([29 x i8]* @Lt_0D89 to i8*) to i8*
	; arg 28
	%vr21647 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21648, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21647
	%vr21651 = bitcast %FBSTRING* %vr21647 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21651, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1238:

	; label .Lt_0D87
	br label %.Lt_0D87
.Lt_0D87:

	; branchbop V <> 147
	%vr21655 = load i64, i64* %V.111
	%vr21654 = icmp ne i64 %vr21655, 147
	br i1 %vr21654, label %.Lt_0D8A, label %.Lt_1239
.Lt_1239:

	; label .Lt_0D8B
	br label %.Lt_0D8B
.Lt_0D8B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D8C
	%vr21658 = bitcast i8* bitcast ([29 x i8]* @Lt_0D8C to i8*) to i8*
	; arg 28
	%vr21657 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21658, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21657
	%vr21661 = bitcast %FBSTRING* %vr21657 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21661, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_123A:

	; label .Lt_0D8A
	br label %.Lt_0D8A
.Lt_0D8A:

	; branchbop V <> 148
	%vr21665 = load i64, i64* %V.111
	%vr21664 = icmp ne i64 %vr21665, 148
	br i1 %vr21664, label %.Lt_0D8D, label %.Lt_123B
.Lt_123B:

	; label .Lt_0D8E
	br label %.Lt_0D8E
.Lt_0D8E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D8F
	%vr21668 = bitcast i8* bitcast ([33 x i8]* @Lt_0D8F to i8*) to i8*
	; arg 32
	%vr21667 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21668, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr21667
	%vr21671 = bitcast %FBSTRING* %vr21667 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21671, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_123C:

	; label .Lt_0D8D
	br label %.Lt_0D8D
.Lt_0D8D:

	; branchbop V <> 149
	%vr21675 = load i64, i64* %V.111
	%vr21674 = icmp ne i64 %vr21675, 149
	br i1 %vr21674, label %.Lt_0D90, label %.Lt_123D
.Lt_123D:

	; label .Lt_0D91
	br label %.Lt_0D91
.Lt_0D91:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D92
	%vr21678 = bitcast i8* bitcast ([35 x i8]* @Lt_0D92 to i8*) to i8*
	; arg 34
	%vr21677 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21678, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr21677
	%vr21681 = bitcast %FBSTRING* %vr21677 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21681, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_123E:

	; label .Lt_0D90
	br label %.Lt_0D90
.Lt_0D90:

	; branchbop V <> 150
	%vr21685 = load i64, i64* %V.111
	%vr21684 = icmp ne i64 %vr21685, 150
	br i1 %vr21684, label %.Lt_0D93, label %.Lt_123F
.Lt_123F:

	; label .Lt_0D94
	br label %.Lt_0D94
.Lt_0D94:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr21688 = bitcast i8* bitcast ([2 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 1
	%vr21687 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21688, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr21687
	%vr21691 = bitcast %FBSTRING* %vr21687 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21691, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1240:

	; label .Lt_0D93
	br label %.Lt_0D93
.Lt_0D93:

	; branchbop V <> 151
	%vr21695 = load i64, i64* %V.111
	%vr21694 = icmp ne i64 %vr21695, 151
	br i1 %vr21694, label %.Lt_0D95, label %.Lt_1241
.Lt_1241:

	; label .Lt_0D96
	br label %.Lt_0D96
.Lt_0D96:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr21698 = bitcast i8* bitcast ([6 x i8]* @Lt_068A to i8*) to i8*
	; arg 5
	%vr21697 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21698, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr21697
	%vr21701 = bitcast %FBSTRING* %vr21697 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21701, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1242:

	; label .Lt_0D95
	br label %.Lt_0D95
.Lt_0D95:

	; branchbop V <> 152
	%vr21705 = load i64, i64* %V.111
	%vr21704 = icmp ne i64 %vr21705, 152
	br i1 %vr21704, label %.Lt_0D97, label %.Lt_1243
.Lt_1243:

	; label .Lt_0D98
	br label %.Lt_0D98
.Lt_0D98:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr21708 = bitcast i8* bitcast ([7 x i8]* @Lt_068C to i8*) to i8*
	; arg 6
	%vr21707 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21708, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr21707
	%vr21711 = bitcast %FBSTRING* %vr21707 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21711, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1244:

	; label .Lt_0D97
	br label %.Lt_0D97
.Lt_0D97:

	; branchbop V <> 153
	%vr21715 = load i64, i64* %V.111
	%vr21714 = icmp ne i64 %vr21715, 153
	br i1 %vr21714, label %.Lt_0D99, label %.Lt_1245
.Lt_1245:

	; label .Lt_0D9A
	br label %.Lt_0D9A
.Lt_0D9A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D9B
	%vr21718 = bitcast i8* bitcast ([15 x i8]* @Lt_0D9B to i8*) to i8*
	; arg 14
	%vr21717 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21718, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr21717
	%vr21721 = bitcast %FBSTRING* %vr21717 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21721, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1246:

	; label .Lt_0D99
	br label %.Lt_0D99
.Lt_0D99:

	; branchbop V <> 154
	%vr21725 = load i64, i64* %V.111
	%vr21724 = icmp ne i64 %vr21725, 154
	br i1 %vr21724, label %.Lt_0D9C, label %.Lt_1247
.Lt_1247:

	; label .Lt_0D9D
	br label %.Lt_0D9D
.Lt_0D9D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D9E
	%vr21728 = bitcast i8* bitcast ([16 x i8]* @Lt_0D9E to i8*) to i8*
	; arg 15
	%vr21727 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21728, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr21727
	%vr21731 = bitcast %FBSTRING* %vr21727 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21731, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1248:

	; label .Lt_0D9C
	br label %.Lt_0D9C
.Lt_0D9C:

	; branchbop V <> 155
	%vr21735 = load i64, i64* %V.111
	%vr21734 = icmp ne i64 %vr21735, 155
	br i1 %vr21734, label %.Lt_0D9F, label %.Lt_1249
.Lt_1249:

	; label .Lt_0DA0
	br label %.Lt_0DA0
.Lt_0DA0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DA1
	%vr21738 = bitcast i8* bitcast ([17 x i8]* @Lt_0DA1 to i8*) to i8*
	; arg 16
	%vr21737 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21738, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr21737
	%vr21741 = bitcast %FBSTRING* %vr21737 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21741, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_124A:

	; label .Lt_0D9F
	br label %.Lt_0D9F
.Lt_0D9F:

	; branchbop V <> 156
	%vr21745 = load i64, i64* %V.111
	%vr21744 = icmp ne i64 %vr21745, 156
	br i1 %vr21744, label %.Lt_0DA2, label %.Lt_124B
.Lt_124B:

	; label .Lt_0DA3
	br label %.Lt_0DA3
.Lt_0DA3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DA4
	%vr21748 = bitcast i8* bitcast ([17 x i8]* @Lt_0DA4 to i8*) to i8*
	; arg 16
	%vr21747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21748, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr21747
	%vr21751 = bitcast %FBSTRING* %vr21747 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21751, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_124C:

	; label .Lt_0DA2
	br label %.Lt_0DA2
.Lt_0DA2:

	; branchbop V <> 157
	%vr21755 = load i64, i64* %V.111
	%vr21754 = icmp ne i64 %vr21755, 157
	br i1 %vr21754, label %.Lt_0DA5, label %.Lt_124D
.Lt_124D:

	; label .Lt_0DA6
	br label %.Lt_0DA6
.Lt_0DA6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DA7
	%vr21758 = bitcast i8* bitcast ([21 x i8]* @Lt_0DA7 to i8*) to i8*
	; arg 20
	%vr21757 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21758, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr21757
	%vr21761 = bitcast %FBSTRING* %vr21757 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21761, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_124E:

	; label .Lt_0DA5
	br label %.Lt_0DA5
.Lt_0DA5:

	; branchbop V <> 158
	%vr21765 = load i64, i64* %V.111
	%vr21764 = icmp ne i64 %vr21765, 158
	br i1 %vr21764, label %.Lt_0DA8, label %.Lt_124F
.Lt_124F:

	; label .Lt_0DA9
	br label %.Lt_0DA9
.Lt_0DA9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DAA
	%vr21768 = bitcast i8* bitcast ([21 x i8]* @Lt_0DAA to i8*) to i8*
	; arg 20
	%vr21767 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21768, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr21767
	%vr21771 = bitcast %FBSTRING* %vr21767 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21771, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1250:

	; label .Lt_0DA8
	br label %.Lt_0DA8
.Lt_0DA8:

	; branchbop V <> 159
	%vr21775 = load i64, i64* %V.111
	%vr21774 = icmp ne i64 %vr21775, 159
	br i1 %vr21774, label %.Lt_0DAB, label %.Lt_1251
.Lt_1251:

	; label .Lt_0DAC
	br label %.Lt_0DAC
.Lt_0DAC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DAD
	%vr21778 = bitcast i8* bitcast ([26 x i8]* @Lt_0DAD to i8*) to i8*
	; arg 25
	%vr21777 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21778, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr21777
	%vr21781 = bitcast %FBSTRING* %vr21777 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21781, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1252:

	; label .Lt_0DAB
	br label %.Lt_0DAB
.Lt_0DAB:

	; branchbop V <> 160
	%vr21785 = load i64, i64* %V.111
	%vr21784 = icmp ne i64 %vr21785, 160
	br i1 %vr21784, label %.Lt_0DAE, label %.Lt_1253
.Lt_1253:

	; label .Lt_0DAF
	br label %.Lt_0DAF
.Lt_0DAF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DB0
	%vr21788 = bitcast i8* bitcast ([26 x i8]* @Lt_0DB0 to i8*) to i8*
	; arg 25
	%vr21787 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21788, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr21787
	%vr21791 = bitcast %FBSTRING* %vr21787 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21791, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1254:

	; label .Lt_0DAE
	br label %.Lt_0DAE
.Lt_0DAE:

	; branchbop V <> 161
	%vr21795 = load i64, i64* %V.111
	%vr21794 = icmp ne i64 %vr21795, 161
	br i1 %vr21794, label %.Lt_0DB1, label %.Lt_1255
.Lt_1255:

	; label .Lt_0DB2
	br label %.Lt_0DB2
.Lt_0DB2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DB3
	%vr21798 = bitcast i8* bitcast ([26 x i8]* @Lt_0DB3 to i8*) to i8*
	; arg 25
	%vr21797 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21798, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr21797
	%vr21801 = bitcast %FBSTRING* %vr21797 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21801, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1256:

	; label .Lt_0DB1
	br label %.Lt_0DB1
.Lt_0DB1:

	; branchbop V <> 162
	%vr21805 = load i64, i64* %V.111
	%vr21804 = icmp ne i64 %vr21805, 162
	br i1 %vr21804, label %.Lt_0DB4, label %.Lt_1257
.Lt_1257:

	; label .Lt_0DB5
	br label %.Lt_0DB5
.Lt_0DB5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DB6
	%vr21808 = bitcast i8* bitcast ([27 x i8]* @Lt_0DB6 to i8*) to i8*
	; arg 26
	%vr21807 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21808, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21807
	%vr21811 = bitcast %FBSTRING* %vr21807 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21811, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1258:

	; label .Lt_0DB4
	br label %.Lt_0DB4
.Lt_0DB4:

	; branchbop V <> 163
	%vr21815 = load i64, i64* %V.111
	%vr21814 = icmp ne i64 %vr21815, 163
	br i1 %vr21814, label %.Lt_0DB7, label %.Lt_1259
.Lt_1259:

	; label .Lt_0DB8
	br label %.Lt_0DB8
.Lt_0DB8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DB9
	%vr21818 = bitcast i8* bitcast ([27 x i8]* @Lt_0DB9 to i8*) to i8*
	; arg 26
	%vr21817 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21818, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr21817
	%vr21821 = bitcast %FBSTRING* %vr21817 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21821, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_125A:

	; label .Lt_0DB7
	br label %.Lt_0DB7
.Lt_0DB7:

	; branchbop V <> 164
	%vr21825 = load i64, i64* %V.111
	%vr21824 = icmp ne i64 %vr21825, 164
	br i1 %vr21824, label %.Lt_0DBA, label %.Lt_125B
.Lt_125B:

	; label .Lt_0DBB
	br label %.Lt_0DBB
.Lt_0DBB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DBC
	%vr21828 = bitcast i8* bitcast ([28 x i8]* @Lt_0DBC to i8*) to i8*
	; arg 27
	%vr21827 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21828, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr21827
	%vr21831 = bitcast %FBSTRING* %vr21827 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21831, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_125C:

	; label .Lt_0DBA
	br label %.Lt_0DBA
.Lt_0DBA:

	; branchbop V <> 165
	%vr21835 = load i64, i64* %V.111
	%vr21834 = icmp ne i64 %vr21835, 165
	br i1 %vr21834, label %.Lt_0DBD, label %.Lt_125D
.Lt_125D:

	; label .Lt_0DBE
	br label %.Lt_0DBE
.Lt_0DBE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DBF
	%vr21838 = bitcast i8* bitcast ([28 x i8]* @Lt_0DBF to i8*) to i8*
	; arg 27
	%vr21837 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21838, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr21837
	%vr21841 = bitcast %FBSTRING* %vr21837 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21841, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_125E:

	; label .Lt_0DBD
	br label %.Lt_0DBD
.Lt_0DBD:

	; branchbop V <> 166
	%vr21845 = load i64, i64* %V.111
	%vr21844 = icmp ne i64 %vr21845, 166
	br i1 %vr21844, label %.Lt_0DC0, label %.Lt_125F
.Lt_125F:

	; label .Lt_0DC1
	br label %.Lt_0DC1
.Lt_0DC1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DC2
	%vr21848 = bitcast i8* bitcast ([31 x i8]* @Lt_0DC2 to i8*) to i8*
	; arg 30
	%vr21847 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21848, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21847
	%vr21851 = bitcast %FBSTRING* %vr21847 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21851, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1260:

	; label .Lt_0DC0
	br label %.Lt_0DC0
.Lt_0DC0:

	; branchbop V <> 167
	%vr21855 = load i64, i64* %V.111
	%vr21854 = icmp ne i64 %vr21855, 167
	br i1 %vr21854, label %.Lt_0DC3, label %.Lt_1261
.Lt_1261:

	; label .Lt_0DC4
	br label %.Lt_0DC4
.Lt_0DC4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DC5
	%vr21858 = bitcast i8* bitcast ([31 x i8]* @Lt_0DC5 to i8*) to i8*
	; arg 30
	%vr21857 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21858, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21857
	%vr21861 = bitcast %FBSTRING* %vr21857 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21861, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1262:

	; label .Lt_0DC3
	br label %.Lt_0DC3
.Lt_0DC3:

	; branchbop V <> 168
	%vr21865 = load i64, i64* %V.111
	%vr21864 = icmp ne i64 %vr21865, 168
	br i1 %vr21864, label %.Lt_0DC6, label %.Lt_1263
.Lt_1263:

	; label .Lt_0DC7
	br label %.Lt_0DC7
.Lt_0DC7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DC8
	%vr21868 = bitcast i8* bitcast ([31 x i8]* @Lt_0DC8 to i8*) to i8*
	; arg 30
	%vr21867 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21868, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr21867
	%vr21871 = bitcast %FBSTRING* %vr21867 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21871, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1264:

	; label .Lt_0DC6
	br label %.Lt_0DC6
.Lt_0DC6:

	; branchbop V <> 169
	%vr21875 = load i64, i64* %V.111
	%vr21874 = icmp ne i64 %vr21875, 169
	br i1 %vr21874, label %.Lt_0DC9, label %.Lt_1265
.Lt_1265:

	; label .Lt_0DCA
	br label %.Lt_0DCA
.Lt_0DCA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DCB
	%vr21878 = bitcast i8* bitcast ([32 x i8]* @Lt_0DCB to i8*) to i8*
	; arg 31
	%vr21877 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21878, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr21877
	%vr21881 = bitcast %FBSTRING* %vr21877 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21881, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1266:

	; label .Lt_0DC9
	br label %.Lt_0DC9
.Lt_0DC9:

	; branchbop V <> 170
	%vr21885 = load i64, i64* %V.111
	%vr21884 = icmp ne i64 %vr21885, 170
	br i1 %vr21884, label %.Lt_0DCC, label %.Lt_1267
.Lt_1267:

	; label .Lt_0DCD
	br label %.Lt_0DCD
.Lt_0DCD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DCE
	%vr21888 = bitcast i8* bitcast ([40 x i8]* @Lt_0DCE to i8*) to i8*
	; arg 39
	%vr21887 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21888, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr21887
	%vr21891 = bitcast %FBSTRING* %vr21887 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21891, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1268:

	; label .Lt_0DCC
	br label %.Lt_0DCC
.Lt_0DCC:

	; branchbop V <> 171
	%vr21895 = load i64, i64* %V.111
	%vr21894 = icmp ne i64 %vr21895, 171
	br i1 %vr21894, label %.Lt_0DCF, label %.Lt_1269
.Lt_1269:

	; label .Lt_0DD0
	br label %.Lt_0DD0
.Lt_0DD0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DD1
	%vr21898 = bitcast i8* bitcast ([53 x i8]* @Lt_0DD1 to i8*) to i8*
	; arg 52
	%vr21897 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21898, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr21897
	%vr21901 = bitcast %FBSTRING* %vr21897 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21901, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_126A:

	; label .Lt_0DCF
	br label %.Lt_0DCF
.Lt_0DCF:

	; branchbop V <> 172
	%vr21905 = load i64, i64* %V.111
	%vr21904 = icmp ne i64 %vr21905, 172
	br i1 %vr21904, label %.Lt_0DD2, label %.Lt_126B
.Lt_126B:

	; label .Lt_0DD3
	br label %.Lt_0DD3
.Lt_0DD3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DD4
	%vr21908 = bitcast i8* bitcast ([12 x i8]* @Lt_0DD4 to i8*) to i8*
	; arg 11
	%vr21907 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21908, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr21907
	%vr21911 = bitcast %FBSTRING* %vr21907 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21911, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_126C:

	; label .Lt_0DD2
	br label %.Lt_0DD2
.Lt_0DD2:

	; branchbop V <> 173
	%vr21915 = load i64, i64* %V.111
	%vr21914 = icmp ne i64 %vr21915, 173
	br i1 %vr21914, label %.Lt_0DD5, label %.Lt_126D
.Lt_126D:

	; label .Lt_0DD6
	br label %.Lt_0DD6
.Lt_0DD6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DD7
	%vr21918 = bitcast i8* bitcast ([21 x i8]* @Lt_0DD7 to i8*) to i8*
	; arg 20
	%vr21917 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21918, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr21917
	%vr21921 = bitcast %FBSTRING* %vr21917 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21921, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_126E:

	; label .Lt_0DD5
	br label %.Lt_0DD5
.Lt_0DD5:

	; branchbop V <> 174
	%vr21925 = load i64, i64* %V.111
	%vr21924 = icmp ne i64 %vr21925, 174
	br i1 %vr21924, label %.Lt_0DD8, label %.Lt_126F
.Lt_126F:

	; label .Lt_0DD9
	br label %.Lt_0DD9
.Lt_0DD9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DDA
	%vr21928 = bitcast i8* bitcast ([26 x i8]* @Lt_0DDA to i8*) to i8*
	; arg 25
	%vr21927 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21928, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr21927
	%vr21931 = bitcast %FBSTRING* %vr21927 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21931, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1270:

	; label .Lt_0DD8
	br label %.Lt_0DD8
.Lt_0DD8:

	; branchbop V <> 175
	%vr21935 = load i64, i64* %V.111
	%vr21934 = icmp ne i64 %vr21935, 175
	br i1 %vr21934, label %.Lt_0DDB, label %.Lt_1271
.Lt_1271:

	; label .Lt_0DDC
	br label %.Lt_0DDC
.Lt_0DDC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DDD
	%vr21938 = bitcast i8* bitcast ([29 x i8]* @Lt_0DDD to i8*) to i8*
	; arg 28
	%vr21937 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21938, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr21937
	%vr21941 = bitcast %FBSTRING* %vr21937 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21941, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1272:

	; label .Lt_0DDB
	br label %.Lt_0DDB
.Lt_0DDB:

	; branchbop V <> 176
	%vr21945 = load i64, i64* %V.111
	%vr21944 = icmp ne i64 %vr21945, 176
	br i1 %vr21944, label %.Lt_0DDE, label %.Lt_1273
.Lt_1273:

	; label .Lt_0DDF
	br label %.Lt_0DDF
.Lt_0DDF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DE0
	%vr21948 = bitcast i8* bitcast ([61 x i8]* @Lt_0DE0 to i8*) to i8*
	; arg 60
	%vr21947 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21948, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr21947
	%vr21951 = bitcast %FBSTRING* %vr21947 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21951, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1274:

	; label .Lt_0DDE
	br label %.Lt_0DDE
.Lt_0DDE:

	; branchbop V <> 177
	%vr21955 = load i64, i64* %V.111
	%vr21954 = icmp ne i64 %vr21955, 177
	br i1 %vr21954, label %.Lt_0DE1, label %.Lt_1275
.Lt_1275:

	; label .Lt_0DE2
	br label %.Lt_0DE2
.Lt_0DE2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DE3
	%vr21958 = bitcast i8* bitcast ([3 x i8]* @Lt_0DE3 to i8*) to i8*
	; arg 2
	%vr21957 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21958, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr21957
	%vr21961 = bitcast %FBSTRING* %vr21957 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21961, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1276:

	; label .Lt_0DE1
	br label %.Lt_0DE1
.Lt_0DE1:

	; branchbop V <> 178
	%vr21965 = load i64, i64* %V.111
	%vr21964 = icmp ne i64 %vr21965, 178
	br i1 %vr21964, label %.Lt_0DE4, label %.Lt_1277
.Lt_1277:

	; label .Lt_0DE5
	br label %.Lt_0DE5
.Lt_0DE5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DE6
	%vr21968 = bitcast i8* bitcast ([14 x i8]* @Lt_0DE6 to i8*) to i8*
	; arg 13
	%vr21967 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21968, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr21967
	%vr21971 = bitcast %FBSTRING* %vr21967 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21971, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1278:

	; label .Lt_0DE4
	br label %.Lt_0DE4
.Lt_0DE4:

	; branchbop V <> 179
	%vr21975 = load i64, i64* %V.111
	%vr21974 = icmp ne i64 %vr21975, 179
	br i1 %vr21974, label %.Lt_0DE7, label %.Lt_1279
.Lt_1279:

	; label .Lt_0DE8
	br label %.Lt_0DE8
.Lt_0DE8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DE9
	%vr21978 = bitcast i8* bitcast ([13 x i8]* @Lt_0DE9 to i8*) to i8*
	; arg 12
	%vr21977 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21978, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr21977
	%vr21981 = bitcast %FBSTRING* %vr21977 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21981, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_127A:

	; label .Lt_0DE7
	br label %.Lt_0DE7
.Lt_0DE7:

	; branchbop V <> 180
	%vr21985 = load i64, i64* %V.111
	%vr21984 = icmp ne i64 %vr21985, 180
	br i1 %vr21984, label %.Lt_0DEA, label %.Lt_127B
.Lt_127B:

	; label .Lt_0DEB
	br label %.Lt_0DEB
.Lt_0DEB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DEC
	%vr21988 = bitcast i8* bitcast ([22 x i8]* @Lt_0DEC to i8*) to i8*
	; arg 21
	%vr21987 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21988, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr21987
	%vr21991 = bitcast %FBSTRING* %vr21987 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21991, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_127C:

	; label .Lt_0DEA
	br label %.Lt_0DEA
.Lt_0DEA:

	; branchbop V <> 181
	%vr21995 = load i64, i64* %V.111
	%vr21994 = icmp ne i64 %vr21995, 181
	br i1 %vr21994, label %.Lt_0DED, label %.Lt_127D
.Lt_127D:

	; label .Lt_0DEE
	br label %.Lt_0DEE
.Lt_0DEE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DEF
	%vr21998 = bitcast i8* bitcast ([56 x i8]* @Lt_0DEF to i8*) to i8*
	; arg 55
	%vr21997 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21998, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr21997
	%vr22001 = bitcast %FBSTRING* %vr21997 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22001, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_127E:

	; label .Lt_0DED
	br label %.Lt_0DED
.Lt_0DED:

	; branchbop V <> 182
	%vr22005 = load i64, i64* %V.111
	%vr22004 = icmp ne i64 %vr22005, 182
	br i1 %vr22004, label %.Lt_0DF0, label %.Lt_127F
.Lt_127F:

	; label .Lt_0DF1
	br label %.Lt_0DF1
.Lt_0DF1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DF2
	%vr22008 = bitcast i8* bitcast ([79 x i8]* @Lt_0DF2 to i8*) to i8*
	; arg 78
	%vr22007 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22008, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr22007
	%vr22011 = bitcast %FBSTRING* %vr22007 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22011, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1280:

	; label .Lt_0DF0
	br label %.Lt_0DF0
.Lt_0DF0:

	; branchbop V <> 183
	%vr22015 = load i64, i64* %V.111
	%vr22014 = icmp ne i64 %vr22015, 183
	br i1 %vr22014, label %.Lt_0DF3, label %.Lt_1281
.Lt_1281:

	; label .Lt_0DF4
	br label %.Lt_0DF4
.Lt_0DF4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DF5
	%vr22018 = bitcast i8* bitcast ([35 x i8]* @Lt_0DF5 to i8*) to i8*
	; arg 34
	%vr22017 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22018, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr22017
	%vr22021 = bitcast %FBSTRING* %vr22017 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22021, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1282:

	; label .Lt_0DF3
	br label %.Lt_0DF3
.Lt_0DF3:

	; branchbop V <> 184
	%vr22025 = load i64, i64* %V.111
	%vr22024 = icmp ne i64 %vr22025, 184
	br i1 %vr22024, label %.Lt_0DF6, label %.Lt_1283
.Lt_1283:

	; label .Lt_0DF7
	br label %.Lt_0DF7
.Lt_0DF7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DF9
	%vr22028 = bitcast i8* bitcast ([145 x i8]* @Lt_0DF9 to i8*) to i8*
	; arg 144
	%vr22027 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22028, i64 144 )

	; call fb_PrintString()
	; arg 1
	; arg vr22027
	%vr22031 = bitcast %FBSTRING* %vr22027 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22031, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1284:

	; label .Lt_0DF6
	br label %.Lt_0DF6
.Lt_0DF6:

	; branchbop V <> 185
	%vr22035 = load i64, i64* %V.111
	%vr22034 = icmp ne i64 %vr22035, 185
	br i1 %vr22034, label %.Lt_0DFA, label %.Lt_1285
.Lt_1285:

	; label .Lt_0DFB
	br label %.Lt_0DFB
.Lt_0DFB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0DFD
	%vr22038 = bitcast i8* bitcast ([173 x i8]* @Lt_0DFD to i8*) to i8*
	; arg 172
	%vr22037 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22038, i64 172 )

	; call fb_PrintString()
	; arg 1
	; arg vr22037
	%vr22041 = bitcast %FBSTRING* %vr22037 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22041, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1286:

	; label .Lt_0DFA
	br label %.Lt_0DFA
.Lt_0DFA:

	; branchbop V <> 186
	%vr22045 = load i64, i64* %V.111
	%vr22044 = icmp ne i64 %vr22045, 186
	br i1 %vr22044, label %.Lt_0DFE, label %.Lt_1287
.Lt_1287:

	; label .Lt_0DFF
	br label %.Lt_0DFF
.Lt_0DFF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E00
	%vr22048 = bitcast i8* bitcast ([44 x i8]* @Lt_0E00 to i8*) to i8*
	; arg 43
	%vr22047 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22048, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr22047
	%vr22051 = bitcast %FBSTRING* %vr22047 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22051, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1288:

	; label .Lt_0DFE
	br label %.Lt_0DFE
.Lt_0DFE:

	; branchbop V <> 187
	%vr22055 = load i64, i64* %V.111
	%vr22054 = icmp ne i64 %vr22055, 187
	br i1 %vr22054, label %.Lt_0E01, label %.Lt_1289
.Lt_1289:

	; label .Lt_0E02
	br label %.Lt_0E02
.Lt_0E02:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E04
	%vr22058 = bitcast i8* bitcast ([173 x i8]* @Lt_0E04 to i8*) to i8*
	; arg 172
	%vr22057 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22058, i64 172 )

	; call fb_PrintString()
	; arg 1
	; arg vr22057
	%vr22061 = bitcast %FBSTRING* %vr22057 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22061, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_128A:

	; label .Lt_0E01
	br label %.Lt_0E01
.Lt_0E01:

	; branchbop V <> 188
	%vr22065 = load i64, i64* %V.111
	%vr22064 = icmp ne i64 %vr22065, 188
	br i1 %vr22064, label %.Lt_0E05, label %.Lt_128B
.Lt_128B:

	; label .Lt_0E06
	br label %.Lt_0E06
.Lt_0E06:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E07
	%vr22068 = bitcast i8* bitcast ([35 x i8]* @Lt_0E07 to i8*) to i8*
	; arg 34
	%vr22067 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22068, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr22067
	%vr22071 = bitcast %FBSTRING* %vr22067 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22071, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_128C:

	; label .Lt_0E05
	br label %.Lt_0E05
.Lt_0E05:

	; branchbop V <> 189
	%vr22075 = load i64, i64* %V.111
	%vr22074 = icmp ne i64 %vr22075, 189
	br i1 %vr22074, label %.Lt_0E08, label %.Lt_128D
.Lt_128D:

	; label .Lt_0E09
	br label %.Lt_0E09
.Lt_0E09:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E0A
	%vr22078 = bitcast i8* bitcast ([22 x i8]* @Lt_0E0A to i8*) to i8*
	; arg 21
	%vr22077 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22078, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr22077
	%vr22081 = bitcast %FBSTRING* %vr22077 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22081, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_128E:

	; label .Lt_0E08
	br label %.Lt_0E08
.Lt_0E08:

	; branchbop V <> 190
	%vr22085 = load i64, i64* %V.111
	%vr22084 = icmp ne i64 %vr22085, 190
	br i1 %vr22084, label %.Lt_0E0B, label %.Lt_128F
.Lt_128F:

	; label .Lt_0E0C
	br label %.Lt_0E0C
.Lt_0E0C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E0D
	%vr22088 = bitcast i8* bitcast ([31 x i8]* @Lt_0E0D to i8*) to i8*
	; arg 30
	%vr22087 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22088, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr22087
	%vr22091 = bitcast %FBSTRING* %vr22087 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22091, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1290:

	; label .Lt_0E0B
	br label %.Lt_0E0B
.Lt_0E0B:

	; branchbop V <> 191
	%vr22095 = load i64, i64* %V.111
	%vr22094 = icmp ne i64 %vr22095, 191
	br i1 %vr22094, label %.Lt_0E0E, label %.Lt_1291
.Lt_1291:

	; label .Lt_0E0F
	br label %.Lt_0E0F
.Lt_0E0F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E10
	%vr22098 = bitcast i8* bitcast ([22 x i8]* @Lt_0E10 to i8*) to i8*
	; arg 21
	%vr22097 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22098, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr22097
	%vr22101 = bitcast %FBSTRING* %vr22097 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22101, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1292:

	; label .Lt_0E0E
	br label %.Lt_0E0E
.Lt_0E0E:

	; branchbop V <> 192
	%vr22105 = load i64, i64* %V.111
	%vr22104 = icmp ne i64 %vr22105, 192
	br i1 %vr22104, label %.Lt_0E11, label %.Lt_1293
.Lt_1293:

	; label .Lt_0E12
	br label %.Lt_0E12
.Lt_0E12:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E13
	%vr22108 = bitcast i8* bitcast ([22 x i8]* @Lt_0E13 to i8*) to i8*
	; arg 21
	%vr22107 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22108, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr22107
	%vr22111 = bitcast %FBSTRING* %vr22107 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22111, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1294:

	; label .Lt_0E11
	br label %.Lt_0E11
.Lt_0E11:

	; branchbop V <> 193
	%vr22115 = load i64, i64* %V.111
	%vr22114 = icmp ne i64 %vr22115, 193
	br i1 %vr22114, label %.Lt_0E14, label %.Lt_1295
.Lt_1295:

	; label .Lt_0E15
	br label %.Lt_0E15
.Lt_0E15:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E16
	%vr22118 = bitcast i8* bitcast ([23 x i8]* @Lt_0E16 to i8*) to i8*
	; arg 22
	%vr22117 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22118, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr22117
	%vr22121 = bitcast %FBSTRING* %vr22117 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22121, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1296:

	; label .Lt_0E14
	br label %.Lt_0E14
.Lt_0E14:

	; branchbop V <> 194
	%vr22125 = load i64, i64* %V.111
	%vr22124 = icmp ne i64 %vr22125, 194
	br i1 %vr22124, label %.Lt_0E17, label %.Lt_1297
.Lt_1297:

	; label .Lt_0E18
	br label %.Lt_0E18
.Lt_0E18:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E19
	%vr22128 = bitcast i8* bitcast ([36 x i8]* @Lt_0E19 to i8*) to i8*
	; arg 35
	%vr22127 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22128, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr22127
	%vr22131 = bitcast %FBSTRING* %vr22127 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22131, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_1298:

	; label .Lt_0E17
	br label %.Lt_0E17
.Lt_0E17:

	; branchbop V <> 195
	%vr22135 = load i64, i64* %V.111
	%vr22134 = icmp ne i64 %vr22135, 195
	br i1 %vr22134, label %.Lt_0E1A, label %.Lt_1299
.Lt_1299:

	; label .Lt_0E1B
	br label %.Lt_0E1B
.Lt_0E1B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E1C
	%vr22138 = bitcast i8* bitcast ([36 x i8]* @Lt_0E1C to i8*) to i8*
	; arg 35
	%vr22137 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22138, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr22137
	%vr22141 = bitcast %FBSTRING* %vr22137 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22141, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_129A:

	; label .Lt_0E1A
	br label %.Lt_0E1A
.Lt_0E1A:

	; branchbop V <> 196
	%vr22145 = load i64, i64* %V.111
	%vr22144 = icmp ne i64 %vr22145, 196
	br i1 %vr22144, label %.Lt_0E1D, label %.Lt_129B
.Lt_129B:

	; label .Lt_0E1E
	br label %.Lt_0E1E
.Lt_0E1E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E1F
	%vr22148 = bitcast i8* bitcast ([37 x i8]* @Lt_0E1F to i8*) to i8*
	; arg 36
	%vr22147 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22148, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr22147
	%vr22151 = bitcast %FBSTRING* %vr22147 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22151, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_129C:

	; label .Lt_0E1D
	br label %.Lt_0E1D
.Lt_0E1D:

	; branchbop V <> 197
	%vr22155 = load i64, i64* %V.111
	%vr22154 = icmp ne i64 %vr22155, 197
	br i1 %vr22154, label %.Lt_0E20, label %.Lt_129D
.Lt_129D:

	; label .Lt_0E21
	br label %.Lt_0E21
.Lt_0E21:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E22
	%vr22158 = bitcast i8* bitcast ([37 x i8]* @Lt_0E22 to i8*) to i8*
	; arg 36
	%vr22157 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22158, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr22157
	%vr22161 = bitcast %FBSTRING* %vr22157 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22161, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_129E:

	; label .Lt_0E20
	br label %.Lt_0E20
.Lt_0E20:

	; branchbop V <> 198
	%vr22165 = load i64, i64* %V.111
	%vr22164 = icmp ne i64 %vr22165, 198
	br i1 %vr22164, label %.Lt_0E23, label %.Lt_129F
.Lt_129F:

	; label .Lt_0E24
	br label %.Lt_0E24
.Lt_0E24:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E25
	%vr22168 = bitcast i8* bitcast ([18 x i8]* @Lt_0E25 to i8*) to i8*
	; arg 17
	%vr22167 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22168, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr22167
	%vr22171 = bitcast %FBSTRING* %vr22167 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22171, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12A0:

	; label .Lt_0E23
	br label %.Lt_0E23
.Lt_0E23:

	; branchbop V <> 199
	%vr22175 = load i64, i64* %V.111
	%vr22174 = icmp ne i64 %vr22175, 199
	br i1 %vr22174, label %.Lt_0E26, label %.Lt_12A1
.Lt_12A1:

	; label .Lt_0E27
	br label %.Lt_0E27
.Lt_0E27:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E28
	%vr22178 = bitcast i8* bitcast ([18 x i8]* @Lt_0E28 to i8*) to i8*
	; arg 17
	%vr22177 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22178, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr22177
	%vr22181 = bitcast %FBSTRING* %vr22177 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22181, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12A2:

	; label .Lt_0E26
	br label %.Lt_0E26
.Lt_0E26:

	; branchbop V <> 200
	%vr22185 = load i64, i64* %V.111
	%vr22184 = icmp ne i64 %vr22185, 200
	br i1 %vr22184, label %.Lt_0E29, label %.Lt_12A3
.Lt_12A3:

	; label .Lt_0E2A
	br label %.Lt_0E2A
.Lt_0E2A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E2B
	%vr22188 = bitcast i8* bitcast ([48 x i8]* @Lt_0E2B to i8*) to i8*
	; arg 47
	%vr22187 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22188, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr22187
	%vr22191 = bitcast %FBSTRING* %vr22187 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22191, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12A4:

	; label .Lt_0E29
	br label %.Lt_0E29
.Lt_0E29:

	; branchbop V <> 201
	%vr22195 = load i64, i64* %V.111
	%vr22194 = icmp ne i64 %vr22195, 201
	br i1 %vr22194, label %.Lt_0E2C, label %.Lt_12A5
.Lt_12A5:

	; label .Lt_0E2D
	br label %.Lt_0E2D
.Lt_0E2D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E2E
	%vr22198 = bitcast i8* bitcast ([50 x i8]* @Lt_0E2E to i8*) to i8*
	; arg 49
	%vr22197 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22198, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr22197
	%vr22201 = bitcast %FBSTRING* %vr22197 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22201, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12A6:

	; label .Lt_0E2C
	br label %.Lt_0E2C
.Lt_0E2C:

	; branchbop V <> 202
	%vr22205 = load i64, i64* %V.111
	%vr22204 = icmp ne i64 %vr22205, 202
	br i1 %vr22204, label %.Lt_0E2F, label %.Lt_12A7
.Lt_12A7:

	; label .Lt_0E30
	br label %.Lt_0E30
.Lt_0E30:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E31
	%vr22208 = bitcast i8* bitcast ([50 x i8]* @Lt_0E31 to i8*) to i8*
	; arg 49
	%vr22207 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22208, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr22207
	%vr22211 = bitcast %FBSTRING* %vr22207 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22211, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12A8:

	; label .Lt_0E2F
	br label %.Lt_0E2F
.Lt_0E2F:

	; branchbop V <> 203
	%vr22215 = load i64, i64* %V.111
	%vr22214 = icmp ne i64 %vr22215, 203
	br i1 %vr22214, label %.Lt_0E32, label %.Lt_12A9
.Lt_12A9:

	; label .Lt_0E33
	br label %.Lt_0E33
.Lt_0E33:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E34
	%vr22218 = bitcast i8* bitcast ([73 x i8]* @Lt_0E34 to i8*) to i8*
	; arg 72
	%vr22217 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22218, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr22217
	%vr22221 = bitcast %FBSTRING* %vr22217 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22221, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12AA:

	; label .Lt_0E32
	br label %.Lt_0E32
.Lt_0E32:

	; branchbop V <> 204
	%vr22225 = load i64, i64* %V.111
	%vr22224 = icmp ne i64 %vr22225, 204
	br i1 %vr22224, label %.Lt_0E35, label %.Lt_12AB
.Lt_12AB:

	; label .Lt_0E36
	br label %.Lt_0E36
.Lt_0E36:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E37
	%vr22228 = bitcast i8* bitcast ([74 x i8]* @Lt_0E37 to i8*) to i8*
	; arg 73
	%vr22227 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22228, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr22227
	%vr22231 = bitcast %FBSTRING* %vr22227 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22231, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12AC:

	; label .Lt_0E35
	br label %.Lt_0E35
.Lt_0E35:

	; branchbop V <> 205
	%vr22235 = load i64, i64* %V.111
	%vr22234 = icmp ne i64 %vr22235, 205
	br i1 %vr22234, label %.Lt_0E38, label %.Lt_12AD
.Lt_12AD:

	; label .Lt_0E39
	br label %.Lt_0E39
.Lt_0E39:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E3A
	%vr22238 = bitcast i8* bitcast ([89 x i8]* @Lt_0E3A to i8*) to i8*
	; arg 88
	%vr22237 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22238, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr22237
	%vr22241 = bitcast %FBSTRING* %vr22237 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22241, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12AE:

	; label .Lt_0E38
	br label %.Lt_0E38
.Lt_0E38:

	; branchbop V <> 206
	%vr22245 = load i64, i64* %V.111
	%vr22244 = icmp ne i64 %vr22245, 206
	br i1 %vr22244, label %.Lt_0E3B, label %.Lt_12AF
.Lt_12AF:

	; label .Lt_0E3C
	br label %.Lt_0E3C
.Lt_0E3C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E3D
	%vr22248 = bitcast i8* bitcast ([28 x i8]* @Lt_0E3D to i8*) to i8*
	; arg 27
	%vr22247 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22248, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr22247
	%vr22251 = bitcast %FBSTRING* %vr22247 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22251, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12B0:

	; label .Lt_0E3B
	br label %.Lt_0E3B
.Lt_0E3B:

	; branchbop V <> 207
	%vr22255 = load i64, i64* %V.111
	%vr22254 = icmp ne i64 %vr22255, 207
	br i1 %vr22254, label %.Lt_0E3E, label %.Lt_12B1
.Lt_12B1:

	; label .Lt_0E3F
	br label %.Lt_0E3F
.Lt_0E3F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E40
	%vr22258 = bitcast i8* bitcast ([45 x i8]* @Lt_0E40 to i8*) to i8*
	; arg 44
	%vr22257 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22258, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr22257
	%vr22261 = bitcast %FBSTRING* %vr22257 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22261, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12B2:

	; label .Lt_0E3E
	br label %.Lt_0E3E
.Lt_0E3E:

	; branchbop V <> 208
	%vr22265 = load i64, i64* %V.111
	%vr22264 = icmp ne i64 %vr22265, 208
	br i1 %vr22264, label %.Lt_0E41, label %.Lt_12B3
.Lt_12B3:

	; label .Lt_0E42
	br label %.Lt_0E42
.Lt_0E42:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E43
	%vr22268 = bitcast i8* bitcast ([21 x i8]* @Lt_0E43 to i8*) to i8*
	; arg 20
	%vr22267 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22268, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr22267
	%vr22271 = bitcast %FBSTRING* %vr22267 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22271, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12B4:

	; label .Lt_0E41
	br label %.Lt_0E41
.Lt_0E41:

	; branchbop V <> 209
	%vr22275 = load i64, i64* %V.111
	%vr22274 = icmp ne i64 %vr22275, 209
	br i1 %vr22274, label %.Lt_0E44, label %.Lt_12B5
.Lt_12B5:

	; label .Lt_0E45
	br label %.Lt_0E45
.Lt_0E45:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E46
	%vr22278 = bitcast i8* bitcast ([12 x i8]* @Lt_0E46 to i8*) to i8*
	; arg 11
	%vr22277 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22278, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr22277
	%vr22281 = bitcast %FBSTRING* %vr22277 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22281, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12B6:

	; label .Lt_0E44
	br label %.Lt_0E44
.Lt_0E44:

	; branchbop V <> 210
	%vr22285 = load i64, i64* %V.111
	%vr22284 = icmp ne i64 %vr22285, 210
	br i1 %vr22284, label %.Lt_0E47, label %.Lt_12B7
.Lt_12B7:

	; label .Lt_0E48
	br label %.Lt_0E48
.Lt_0E48:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E49
	%vr22288 = bitcast i8* bitcast ([13 x i8]* @Lt_0E49 to i8*) to i8*
	; arg 12
	%vr22287 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22288, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr22287
	%vr22291 = bitcast %FBSTRING* %vr22287 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22291, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12B8:

	; label .Lt_0E47
	br label %.Lt_0E47
.Lt_0E47:

	; branchbop V <> 211
	%vr22295 = load i64, i64* %V.111
	%vr22294 = icmp ne i64 %vr22295, 211
	br i1 %vr22294, label %.Lt_0E4A, label %.Lt_12B9
.Lt_12B9:

	; label .Lt_0E4B
	br label %.Lt_0E4B
.Lt_0E4B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E4C
	%vr22298 = bitcast i8* bitcast ([12 x i8]* @Lt_0E4C to i8*) to i8*
	; arg 11
	%vr22297 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22298, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr22297
	%vr22301 = bitcast %FBSTRING* %vr22297 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22301, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12BA:

	; label .Lt_0E4A
	br label %.Lt_0E4A
.Lt_0E4A:

	; branchbop V <> 212
	%vr22305 = load i64, i64* %V.111
	%vr22304 = icmp ne i64 %vr22305, 212
	br i1 %vr22304, label %.Lt_0E4D, label %.Lt_12BB
.Lt_12BB:

	; label .Lt_0E4E
	br label %.Lt_0E4E
.Lt_0E4E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E4F
	%vr22308 = bitcast i8* bitcast ([29 x i8]* @Lt_0E4F to i8*) to i8*
	; arg 28
	%vr22307 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22308, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr22307
	%vr22311 = bitcast %FBSTRING* %vr22307 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22311, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12BC:

	; label .Lt_0E4D
	br label %.Lt_0E4D
.Lt_0E4D:

	; branchbop V <> 213
	%vr22315 = load i64, i64* %V.111
	%vr22314 = icmp ne i64 %vr22315, 213
	br i1 %vr22314, label %.Lt_0E50, label %.Lt_12BD
.Lt_12BD:

	; label .Lt_0E51
	br label %.Lt_0E51
.Lt_0E51:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E52
	%vr22318 = bitcast i8* bitcast ([25 x i8]* @Lt_0E52 to i8*) to i8*
	; arg 24
	%vr22317 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22318, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr22317
	%vr22321 = bitcast %FBSTRING* %vr22317 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22321, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12BE:

	; label .Lt_0E50
	br label %.Lt_0E50
.Lt_0E50:

	; branchbop V <> 214
	%vr22325 = load i64, i64* %V.111
	%vr22324 = icmp ne i64 %vr22325, 214
	br i1 %vr22324, label %.Lt_0E53, label %.Lt_12BF
.Lt_12BF:

	; label .Lt_0E54
	br label %.Lt_0E54
.Lt_0E54:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E55
	%vr22328 = bitcast i8* bitcast ([30 x i8]* @Lt_0E55 to i8*) to i8*
	; arg 29
	%vr22327 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22328, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr22327
	%vr22331 = bitcast %FBSTRING* %vr22327 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22331, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12C0:

	; label .Lt_0E53
	br label %.Lt_0E53
.Lt_0E53:

	; branchbop V <> 215
	%vr22335 = load i64, i64* %V.111
	%vr22334 = icmp ne i64 %vr22335, 215
	br i1 %vr22334, label %.Lt_0E56, label %.Lt_12C1
.Lt_12C1:

	; label .Lt_0E57
	br label %.Lt_0E57
.Lt_0E57:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E58
	%vr22338 = bitcast i8* bitcast ([42 x i8]* @Lt_0E58 to i8*) to i8*
	; arg 41
	%vr22337 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22338, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr22337
	%vr22341 = bitcast %FBSTRING* %vr22337 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22341, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12C2:

	; label .Lt_0E56
	br label %.Lt_0E56
.Lt_0E56:

	; branchbop V <> 216
	%vr22345 = load i64, i64* %V.111
	%vr22344 = icmp ne i64 %vr22345, 216
	br i1 %vr22344, label %.Lt_0E59, label %.Lt_12C3
.Lt_12C3:

	; label .Lt_0E5A
	br label %.Lt_0E5A
.Lt_0E5A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E5B
	%vr22348 = bitcast i8* bitcast ([36 x i8]* @Lt_0E5B to i8*) to i8*
	; arg 35
	%vr22347 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22348, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr22347
	%vr22351 = bitcast %FBSTRING* %vr22347 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22351, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12C4:

	; label .Lt_0E59
	br label %.Lt_0E59
.Lt_0E59:

	; branchbop V <> 217
	%vr22355 = load i64, i64* %V.111
	%vr22354 = icmp ne i64 %vr22355, 217
	br i1 %vr22354, label %.Lt_0E5C, label %.Lt_12C5
.Lt_12C5:

	; label .Lt_0E5D
	br label %.Lt_0E5D
.Lt_0E5D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E5E
	%vr22358 = bitcast i8* bitcast ([26 x i8]* @Lt_0E5E to i8*) to i8*
	; arg 25
	%vr22357 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22358, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr22357
	%vr22361 = bitcast %FBSTRING* %vr22357 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22361, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12C6:

	; label .Lt_0E5C
	br label %.Lt_0E5C
.Lt_0E5C:

	; branchbop V <> 218
	%vr22365 = load i64, i64* %V.111
	%vr22364 = icmp ne i64 %vr22365, 218
	br i1 %vr22364, label %.Lt_0E5F, label %.Lt_12C7
.Lt_12C7:

	; label .Lt_0E60
	br label %.Lt_0E60
.Lt_0E60:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E61
	%vr22368 = bitcast i8* bitcast ([22 x i8]* @Lt_0E61 to i8*) to i8*
	; arg 21
	%vr22367 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22368, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr22367
	%vr22371 = bitcast %FBSTRING* %vr22367 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22371, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12C8:

	; label .Lt_0E5F
	br label %.Lt_0E5F
.Lt_0E5F:

	; branchbop V <> 219
	%vr22375 = load i64, i64* %V.111
	%vr22374 = icmp ne i64 %vr22375, 219
	br i1 %vr22374, label %.Lt_0E62, label %.Lt_12C9
.Lt_12C9:

	; label .Lt_0E63
	br label %.Lt_0E63
.Lt_0E63:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E64
	%vr22378 = bitcast i8* bitcast ([27 x i8]* @Lt_0E64 to i8*) to i8*
	; arg 26
	%vr22377 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22378, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr22377
	%vr22381 = bitcast %FBSTRING* %vr22377 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22381, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12CA:

	; label .Lt_0E62
	br label %.Lt_0E62
.Lt_0E62:

	; branchbop V <> 220
	%vr22385 = load i64, i64* %V.111
	%vr22384 = icmp ne i64 %vr22385, 220
	br i1 %vr22384, label %.Lt_0E65, label %.Lt_12CB
.Lt_12CB:

	; label .Lt_0E66
	br label %.Lt_0E66
.Lt_0E66:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E67
	%vr22388 = bitcast i8* bitcast ([28 x i8]* @Lt_0E67 to i8*) to i8*
	; arg 27
	%vr22387 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22388, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr22387
	%vr22391 = bitcast %FBSTRING* %vr22387 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22391, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12CC:

	; label .Lt_0E65
	br label %.Lt_0E65
.Lt_0E65:

	; branchbop V <> 221
	%vr22395 = load i64, i64* %V.111
	%vr22394 = icmp ne i64 %vr22395, 221
	br i1 %vr22394, label %.Lt_0E68, label %.Lt_12CD
.Lt_12CD:

	; label .Lt_0E69
	br label %.Lt_0E69
.Lt_0E69:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E6A
	%vr22398 = bitcast i8* bitcast ([25 x i8]* @Lt_0E6A to i8*) to i8*
	; arg 24
	%vr22397 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22398, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr22397
	%vr22401 = bitcast %FBSTRING* %vr22397 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22401, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12CE:

	; label .Lt_0E68
	br label %.Lt_0E68
.Lt_0E68:

	; branchbop V <> 222
	%vr22405 = load i64, i64* %V.111
	%vr22404 = icmp ne i64 %vr22405, 222
	br i1 %vr22404, label %.Lt_0E6B, label %.Lt_12CF
.Lt_12CF:

	; label .Lt_0E6C
	br label %.Lt_0E6C
.Lt_0E6C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E6D
	%vr22408 = bitcast i8* bitcast ([25 x i8]* @Lt_0E6D to i8*) to i8*
	; arg 24
	%vr22407 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22408, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr22407
	%vr22411 = bitcast %FBSTRING* %vr22407 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22411, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12D0:

	; label .Lt_0E6B
	br label %.Lt_0E6B
.Lt_0E6B:

	; branchbop V <> 223
	%vr22415 = load i64, i64* %V.111
	%vr22414 = icmp ne i64 %vr22415, 223
	br i1 %vr22414, label %.Lt_0E6E, label %.Lt_12D1
.Lt_12D1:

	; label .Lt_0E6F
	br label %.Lt_0E6F
.Lt_0E6F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E70
	%vr22418 = bitcast i8* bitcast ([39 x i8]* @Lt_0E70 to i8*) to i8*
	; arg 38
	%vr22417 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22418, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr22417
	%vr22421 = bitcast %FBSTRING* %vr22417 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22421, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12D2:

	; label .Lt_0E6E
	br label %.Lt_0E6E
.Lt_0E6E:

	; branchbop V <> 224
	%vr22425 = load i64, i64* %V.111
	%vr22424 = icmp ne i64 %vr22425, 224
	br i1 %vr22424, label %.Lt_0E71, label %.Lt_12D3
.Lt_12D3:

	; label .Lt_0E72
	br label %.Lt_0E72
.Lt_0E72:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E73
	%vr22428 = bitcast i8* bitcast ([51 x i8]* @Lt_0E73 to i8*) to i8*
	; arg 50
	%vr22427 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22428, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr22427
	%vr22431 = bitcast %FBSTRING* %vr22427 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22431, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12D4:

	; label .Lt_0E71
	br label %.Lt_0E71
.Lt_0E71:

	; branchbop V <> 225
	%vr22435 = load i64, i64* %V.111
	%vr22434 = icmp ne i64 %vr22435, 225
	br i1 %vr22434, label %.Lt_0E74, label %.Lt_12D5
.Lt_12D5:

	; label .Lt_0E75
	br label %.Lt_0E75
.Lt_0E75:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E76
	%vr22438 = bitcast i8* bitcast ([15 x i8]* @Lt_0E76 to i8*) to i8*
	; arg 14
	%vr22437 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22438, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr22437
	%vr22441 = bitcast %FBSTRING* %vr22437 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22441, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12D6:

	; label .Lt_0E74
	br label %.Lt_0E74
.Lt_0E74:

	; branchbop V <> 226
	%vr22445 = load i64, i64* %V.111
	%vr22444 = icmp ne i64 %vr22445, 226
	br i1 %vr22444, label %.Lt_0E77, label %.Lt_12D7
.Lt_12D7:

	; label .Lt_0E78
	br label %.Lt_0E78
.Lt_0E78:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E79
	%vr22448 = bitcast i8* bitcast ([45 x i8]* @Lt_0E79 to i8*) to i8*
	; arg 44
	%vr22447 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22448, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr22447
	%vr22451 = bitcast %FBSTRING* %vr22447 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22451, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12D8:

	; label .Lt_0E77
	br label %.Lt_0E77
.Lt_0E77:

	; branchbop V <> 227
	%vr22455 = load i64, i64* %V.111
	%vr22454 = icmp ne i64 %vr22455, 227
	br i1 %vr22454, label %.Lt_0E7A, label %.Lt_12D9
.Lt_12D9:

	; label .Lt_0E7B
	br label %.Lt_0E7B
.Lt_0E7B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E7C
	%vr22458 = bitcast i8* bitcast ([35 x i8]* @Lt_0E7C to i8*) to i8*
	; arg 34
	%vr22457 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22458, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr22457
	%vr22461 = bitcast %FBSTRING* %vr22457 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22461, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12DA:

	; label .Lt_0E7A
	br label %.Lt_0E7A
.Lt_0E7A:

	; branchbop V <> 228
	%vr22465 = load i64, i64* %V.111
	%vr22464 = icmp ne i64 %vr22465, 228
	br i1 %vr22464, label %.Lt_0E7D, label %.Lt_12DB
.Lt_12DB:

	; label .Lt_0E7E
	br label %.Lt_0E7E
.Lt_0E7E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E7F
	%vr22468 = bitcast i8* bitcast ([85 x i8]* @Lt_0E7F to i8*) to i8*
	; arg 84
	%vr22467 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22468, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr22467
	%vr22471 = bitcast %FBSTRING* %vr22467 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22471, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12DC:

	; label .Lt_0E7D
	br label %.Lt_0E7D
.Lt_0E7D:

	; branchbop V <> 229
	%vr22475 = load i64, i64* %V.111
	%vr22474 = icmp ne i64 %vr22475, 229
	br i1 %vr22474, label %.Lt_0E80, label %.Lt_12DD
.Lt_12DD:

	; label .Lt_0E81
	br label %.Lt_0E81
.Lt_0E81:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E82
	%vr22478 = bitcast i8* bitcast ([88 x i8]* @Lt_0E82 to i8*) to i8*
	; arg 87
	%vr22477 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22478, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr22477
	%vr22481 = bitcast %FBSTRING* %vr22477 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22481, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12DE:

	; label .Lt_0E80
	br label %.Lt_0E80
.Lt_0E80:

	; branchbop V <> 230
	%vr22485 = load i64, i64* %V.111
	%vr22484 = icmp ne i64 %vr22485, 230
	br i1 %vr22484, label %.Lt_0E83, label %.Lt_12DF
.Lt_12DF:

	; label .Lt_0E84
	br label %.Lt_0E84
.Lt_0E84:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E85
	%vr22488 = bitcast i8* bitcast ([20 x i8]* @Lt_0E85 to i8*) to i8*
	; arg 19
	%vr22487 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22488, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr22487
	%vr22491 = bitcast %FBSTRING* %vr22487 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22491, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12E0:

	; label .Lt_0E83
	br label %.Lt_0E83
.Lt_0E83:

	; branchbop V <> 231
	%vr22495 = load i64, i64* %V.111
	%vr22494 = icmp ne i64 %vr22495, 231
	br i1 %vr22494, label %.Lt_0E86, label %.Lt_12E1
.Lt_12E1:

	; label .Lt_0E87
	br label %.Lt_0E87
.Lt_0E87:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E88
	%vr22498 = bitcast i8* bitcast ([36 x i8]* @Lt_0E88 to i8*) to i8*
	; arg 35
	%vr22497 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22498, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr22497
	%vr22501 = bitcast %FBSTRING* %vr22497 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22501, i32 1 )

	; goto .Lt_0664
	br label %.Lt_0664
.Lt_12E2:

	; label .Lt_0E86
	br label %.Lt_0E86
.Lt_0E86:

	; branchbop V <> 232
	%vr22505 = load i64, i64* %V.111
	%vr22504 = icmp ne i64 %vr22505, 232
	br i1 %vr22504, label %.Lt_0E89, label %.Lt_12E3
.Lt_12E3:

	; label .Lt_0E8A
	br label %.Lt_0E8A
.Lt_0E8A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E8B
	%vr22508 = bitcast i8* bitcast ([9 x i8]* @Lt_0E8B to i8*) to i8*
	; arg 8
	%vr22507 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22508, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr22507
	%vr22511 = bitcast %FBSTRING* %vr22507 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr22511, i32 1 )

	; label .Lt_0E89
	br label %.Lt_0E89
.Lt_0E89:

	; label .Lt_0664
	br label %.Lt_0664
.Lt_0664:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_12E4:

	; label .Lt_0662
	br label %.Lt_0662
.Lt_0662:

	; conv ADR => vr22514
	%vr22515 = load i64, i64* %ADR.110
	%vr22514 = uitofp i64 %vr22515 to double

	; bop SYS_OFFSET + 163
	%vr22517 = load double, double* @SYS_OFFSET
	%vr22516 = fadd double %vr22517, 0x4064600000000000

	; branchbop vr22514 <> vr22516
	%vr22518 = icmp ne double %vr22514, %vr22516
	br i1 %vr22518, label %.Lt_0E8C, label %.Lt_12E5
.Lt_12E5:

	; label .Lt_0E8D
	br label %.Lt_0E8D
.Lt_0E8D:
	%vr22519 = bitcast i8* bitcast ([9 x i8]* @Lt_0667 to i8*) to i8*
	%vr22520 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr22520
	; arg -1
	; arg vr22519
	; arg 9
	; arg 0
	%vr22521 = call %FBSTRING* @fb_StrAssign( i8* %vr22520, i64 -1, i8* %vr22519, i64 9, i32 0 )

	; call POKE64()
	; arg THIS
	%vr22525 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 49313
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22525, i64 49313, i64 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_12E6:

	; label .Lt_0E8C
	br label %.Lt_0E8C
.Lt_0E8C:

	; conv ADR => vr22527
	%vr22528 = load i64, i64* %ADR.110
	%vr22527 = uitofp i64 %vr22528 to double

	; bop SYS_OFFSET + 170
	%vr22530 = load double, double* @SYS_OFFSET
	%vr22529 = fadd double %vr22530, 0x4065400000000000

	; branchbop vr22527 <> vr22529
	%vr22531 = icmp ne double %vr22527, %vr22529
	br i1 %vr22531, label %.Lt_0E8E, label %.Lt_12E7
.Lt_12E7:

	; label .Lt_0E8F
	br label %.Lt_0E8F
.Lt_0E8F:

	; localvar X
	%X.174 = alloca i64

	; localvar Y
	%Y.175 = alloca i64

	; localvar WHEEL
	%WHEEL.176 = alloca i64

	; localvar BUTTONS
	%BUTTONS.177 = alloca i64

	; localvar RES
	%RES.178 = alloca i64

	; localvar LT_0E90
	%LT_0E90.179 = alloca i64

	; localvar LT_0E91
	%LT_0E91.180 = alloca i64

	; addrof X

	; memclear X
	%vr22533 = bitcast i64* %X.174 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22533, i8 0, i32 8, i32 1, i1 false )

	; addrof Y

	; memclear Y
	%vr22535 = bitcast i64* %Y.175 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22535, i8 0, i32 8, i32 1, i1 false )

	; addrof WHEEL

	; memclear WHEEL
	%vr22537 = bitcast i64* %WHEEL.176 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22537, i8 0, i32 8, i32 1, i1 false )

	; addrof BUTTONS

	; memclear BUTTONS
	%vr22539 = bitcast i64* %BUTTONS.177 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22539, i8 0, i32 8, i32 1, i1 false )

	; addrof RES

	; memclear RES
	%vr22541 = bitcast i64* %RES.178 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22541, i8 0, i32 8, i32 1, i1 false )

	; store LT_0E91 := 0
	store i64 0, i64* %LT_0E91.180

	; addrof BUTTONS
	%vr22543 = bitcast i64* %BUTTONS.177 to i64*

	; store LT_0E90 := 0
	store i64 0, i64* %LT_0E90.179

	; addrof Y
	%vr22545 = bitcast i64* %Y.175 to i64*

	; addrof X
	%vr22547 = bitcast i64* %X.174 to i64*

	; call fb_GetMouse64()
	; arg vr22547
	; arg vr22545
	; arg LT_0E90
	; arg vr22543
	; arg LT_0E91
	%vr22548 = call i32 @fb_GetMouse64( i64* %vr22547, i64* %vr22545, i64* %LT_0E90.179, i64* %vr22543, i64* %LT_0E91.180 )

	; conv vr22548 => vr22549
	%vr22549 = sitofp i32 %vr22548 to double

	; bop SYS_OFFSET + 170
	%vr22551 = load double, double* @SYS_OFFSET
	%vr22550 = fadd double %vr22551, 0x4065400000000000

	; conv vr22550 => vr22552
	%vr22553 = call double @llvm.nearbyint.f64(double %vr22550)
	%vr22552 = fptosi double %vr22553 to i64

	; bop vr22552 SHL 3
	%vr22554 = shl i64 %vr22552, 3

	; bop THIS + vr22554
	%vr22556 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22557 = inttoptr i64 %vr22554 to %MEMORY_T*
	%vr22555 = add %MEMORY_T* %vr22556, %vr22557

	; store vr22555 := vr22549
	%vr22558 = ptrtoint %MEMORY_T* %vr22555 to i64
	%vr22559 = inttoptr i64 %vr22558 to double*
	store double %vr22549, double* %vr22559

	; conv X => vr22560
	%vr22561 = load i64, i64* %X.174
	%vr22560 = sitofp i64 %vr22561 to double

	; bop SYS_OFFSET + 203
	%vr22563 = load double, double* @SYS_OFFSET
	%vr22562 = fadd double %vr22563, 0x4069600000000000

	; conv vr22562 => vr22564
	%vr22565 = call double @llvm.nearbyint.f64(double %vr22562)
	%vr22564 = fptosi double %vr22565 to i64

	; bop vr22564 SHL 3
	%vr22566 = shl i64 %vr22564, 3

	; bop THIS + vr22566
	%vr22568 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22569 = inttoptr i64 %vr22566 to %MEMORY_T*
	%vr22567 = add %MEMORY_T* %vr22568, %vr22569

	; store vr22567 := vr22560
	%vr22570 = ptrtoint %MEMORY_T* %vr22567 to i64
	%vr22571 = inttoptr i64 %vr22570 to double*
	store double %vr22560, double* %vr22571

	; conv Y => vr22572
	%vr22573 = load i64, i64* %Y.175
	%vr22572 = sitofp i64 %vr22573 to double

	; bop SYS_OFFSET + 204
	%vr22575 = load double, double* @SYS_OFFSET
	%vr22574 = fadd double %vr22575, 0x4069800000000000

	; conv vr22574 => vr22576
	%vr22577 = call double @llvm.nearbyint.f64(double %vr22574)
	%vr22576 = fptosi double %vr22577 to i64

	; bop vr22576 SHL 3
	%vr22578 = shl i64 %vr22576, 3

	; bop THIS + vr22578
	%vr22580 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22581 = inttoptr i64 %vr22578 to %MEMORY_T*
	%vr22579 = add %MEMORY_T* %vr22580, %vr22581

	; store vr22579 := vr22572
	%vr22582 = ptrtoint %MEMORY_T* %vr22579 to i64
	%vr22583 = inttoptr i64 %vr22582 to double*
	store double %vr22572, double* %vr22583

	; conv WHEEL => vr22584
	%vr22585 = load i64, i64* %WHEEL.176
	%vr22584 = sitofp i64 %vr22585 to double

	; bop SYS_OFFSET + 205
	%vr22587 = load double, double* @SYS_OFFSET
	%vr22586 = fadd double %vr22587, 0x4069A00000000000

	; conv vr22586 => vr22588
	%vr22589 = call double @llvm.nearbyint.f64(double %vr22586)
	%vr22588 = fptosi double %vr22589 to i64

	; bop vr22588 SHL 3
	%vr22590 = shl i64 %vr22588, 3

	; bop THIS + vr22590
	%vr22592 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22593 = inttoptr i64 %vr22590 to %MEMORY_T*
	%vr22591 = add %MEMORY_T* %vr22592, %vr22593

	; store vr22591 := vr22584
	%vr22594 = ptrtoint %MEMORY_T* %vr22591 to i64
	%vr22595 = inttoptr i64 %vr22594 to double*
	store double %vr22584, double* %vr22595

	; bop BUTTONS AND 1
	%vr22597 = load i64, i64* %BUTTONS.177
	%vr22596 = and i64 %vr22597, 1

	; branchbop vr22596 == 0
	%vr22598 = icmp eq i64 %vr22596, 0
	br i1 %vr22598, label %.Lt_0E93, label %.Lt_12E8
.Lt_12E8:

	; bop SYS_OFFSET + 206
	%vr22600 = load double, double* @SYS_OFFSET
	%vr22599 = fadd double %vr22600, 0x4069C00000000000

	; conv vr22599 => vr22601
	%vr22602 = call double @llvm.nearbyint.f64(double %vr22599)
	%vr22601 = fptosi double %vr22602 to i64

	; bop vr22601 SHL 3
	%vr22603 = shl i64 %vr22601, 3

	; bop THIS + vr22603
	%vr22605 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22606 = inttoptr i64 %vr22603 to %MEMORY_T*
	%vr22604 = add %MEMORY_T* %vr22605, %vr22606

	; store vr22604 := 1
	%vr22607 = ptrtoint %MEMORY_T* %vr22604 to i64
	%vr22608 = inttoptr i64 %vr22607 to double*
	store double 0x3FF0000000000000, double* %vr22608

	; label .Lt_0E93
	br label %.Lt_0E93
.Lt_0E93:

	; bop BUTTONS AND 2
	%vr22610 = load i64, i64* %BUTTONS.177
	%vr22609 = and i64 %vr22610, 2

	; branchbop vr22609 == 0
	%vr22611 = icmp eq i64 %vr22609, 0
	br i1 %vr22611, label %.Lt_0E95, label %.Lt_12E9
.Lt_12E9:

	; bop SYS_OFFSET + 206
	%vr22613 = load double, double* @SYS_OFFSET
	%vr22612 = fadd double %vr22613, 0x4069C00000000000

	; conv vr22612 => vr22614
	%vr22615 = call double @llvm.nearbyint.f64(double %vr22612)
	%vr22614 = fptosi double %vr22615 to i64

	; bop vr22614 SHL 3
	%vr22616 = shl i64 %vr22614, 3

	; bop THIS + vr22616
	%vr22618 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22619 = inttoptr i64 %vr22616 to %MEMORY_T*
	%vr22617 = add %MEMORY_T* %vr22618, %vr22619

	; store vr22617 := 2
	%vr22620 = ptrtoint %MEMORY_T* %vr22617 to i64
	%vr22621 = inttoptr i64 %vr22620 to double*
	store double 0x4000000000000000, double* %vr22621

	; label .Lt_0E95
	br label %.Lt_0E95
.Lt_0E95:

	; bop BUTTONS AND 4
	%vr22623 = load i64, i64* %BUTTONS.177
	%vr22622 = and i64 %vr22623, 4

	; branchbop vr22622 == 0
	%vr22624 = icmp eq i64 %vr22622, 0
	br i1 %vr22624, label %.Lt_0E97, label %.Lt_12EA
.Lt_12EA:

	; bop SYS_OFFSET + 206
	%vr22626 = load double, double* @SYS_OFFSET
	%vr22625 = fadd double %vr22626, 0x4069C00000000000

	; conv vr22625 => vr22627
	%vr22628 = call double @llvm.nearbyint.f64(double %vr22625)
	%vr22627 = fptosi double %vr22628 to i64

	; bop vr22627 SHL 3
	%vr22629 = shl i64 %vr22627, 3

	; bop THIS + vr22629
	%vr22631 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22632 = inttoptr i64 %vr22629 to %MEMORY_T*
	%vr22630 = add %MEMORY_T* %vr22631, %vr22632

	; store vr22630 := 4
	%vr22633 = ptrtoint %MEMORY_T* %vr22630 to i64
	%vr22634 = inttoptr i64 %vr22633 to double*
	store double 0x4010000000000000, double* %vr22634

	; label .Lt_0E97
	br label %.Lt_0E97
.Lt_0E97:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_12EB:

	; label .Lt_0E8E
	br label %.Lt_0E8E
.Lt_0E8E:

	; conv ADR => vr22636
	%vr22637 = load i64, i64* %ADR.110
	%vr22636 = uitofp i64 %vr22637 to double

	; bop SYS_OFFSET + 171
	%vr22639 = load double, double* @SYS_OFFSET
	%vr22638 = fadd double %vr22639, 0x4065600000000000

	; branchbop vr22636 <> vr22638
	%vr22640 = icmp ne double %vr22636, %vr22638
	br i1 %vr22640, label %.Lt_0E98, label %.Lt_12EC
.Lt_12EC:

	; label .Lt_0E99
	br label %.Lt_0E99
.Lt_0E99:

	; bop SYS_OFFSET + 204
	%vr22642 = load double, double* @SYS_OFFSET
	%vr22641 = fadd double %vr22642, 0x4069800000000000

	; conv vr22641 => vr22643
	%vr22644 = call double @llvm.nearbyint.f64(double %vr22641)
	%vr22643 = fptosi double %vr22644 to i64

	; bop vr22643 SHL 3
	%vr22645 = shl i64 %vr22643, 3

	; bop THIS + vr22645
	%vr22647 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22648 = inttoptr i64 %vr22645 to %MEMORY_T*
	%vr22646 = add %MEMORY_T* %vr22647, %vr22648

	; conv vr22646 => vr22649
	%vr22651 = ptrtoint %MEMORY_T* %vr22646 to i64
	%vr22652 = inttoptr i64 %vr22651 to double*
	%vr22653 = load double, double* %vr22652
	%vr22650 = call double @llvm.nearbyint.f64(double %vr22653)
	%vr22649 = fptosi double %vr22650 to i32

	; bop SYS_OFFSET + 203
	%vr22655 = load double, double* @SYS_OFFSET
	%vr22654 = fadd double %vr22655, 0x4069600000000000

	; conv vr22654 => vr22656
	%vr22657 = call double @llvm.nearbyint.f64(double %vr22654)
	%vr22656 = fptosi double %vr22657 to i64

	; bop vr22656 SHL 3
	%vr22658 = shl i64 %vr22656, 3

	; bop THIS + vr22658
	%vr22660 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22661 = inttoptr i64 %vr22658 to %MEMORY_T*
	%vr22659 = add %MEMORY_T* %vr22660, %vr22661

	; conv vr22659 => vr22662
	%vr22664 = ptrtoint %MEMORY_T* %vr22659 to i64
	%vr22665 = inttoptr i64 %vr22664 to double*
	%vr22666 = load double, double* %vr22665
	%vr22663 = call double @llvm.nearbyint.f64(double %vr22666)
	%vr22662 = fptosi double %vr22663 to i32

	; call fb_PageCopy()
	; arg vr22662
	; arg vr22649
	%vr22667 = call i32 @fb_PageCopy( i32 %vr22662, i32 %vr22649 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_12ED:

	; label .Lt_0E98
	br label %.Lt_0E98
.Lt_0E98:

	; conv ADR => vr22669
	%vr22670 = load i64, i64* %ADR.110
	%vr22669 = uitofp i64 %vr22670 to double

	; bop SYS_OFFSET + 230
	%vr22672 = load double, double* @SYS_OFFSET
	%vr22671 = fadd double %vr22672, 0x406CC00000000000

	; branchbop vr22669 <> vr22671
	%vr22673 = icmp ne double %vr22669, %vr22671
	br i1 %vr22673, label %.Lt_0E9A, label %.Lt_12EE
.Lt_12EE:

	; label .Lt_0E9B
	br label %.Lt_0E9B
.Lt_0E9B:

	; localvar TMP
	%TMP.181 = alloca i8

	; localvar LT_0EA2
	%LT_0EA2.182 = alloca %FBSTRING

	; localvar LT_0EA3
	%LT_0EA3.183 = alloca %FBSTRING

	; addrof TMP

	; memclear TMP
	%vr22675 = bitcast i8* %TMP.181 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22675, i8 0, i32 1, i32 1, i1 false )

	; localvar C
	%C.184 = alloca i64

	; store C := 0
	store i64 0, i64* %C.184

	; label .Lt_0E9F
	br label %.Lt_0E9F
.Lt_0E9F:

	; bop C SHL 3
	%vr22677 = load i64, i64* %C.184
	%vr22676 = shl i64 %vr22677, 3

	; bop THIS + vr22676
	%vr22679 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22680 = inttoptr i64 %vr22676 to %MEMORY_T*
	%vr22678 = add %MEMORY_T* %vr22679, %vr22680

	; store vr22678+134479872 := 0
	%vr22681 = ptrtoint %MEMORY_T* %vr22678 to i64
	%vr22682 = add i64 %vr22681, 134479872
	%vr22683 = inttoptr i64 %vr22682 to double*
	store double 0x0000000000000000, double* %vr22683

	; label .Lt_0E9D
	br label %.Lt_0E9D
.Lt_0E9D:

	; bop C + 1
	%vr22685 = load i64, i64* %C.184
	%vr22684 = add i64 %vr22685, 1

	; store C := vr22684
	store i64 %vr22684, i64* %C.184

	; label .Lt_0E9C
	br label %.Lt_0E9C
.Lt_0E9C:

	; branchbop C <= 8191
	%vr22687 = load i64, i64* %C.184
	%vr22686 = icmp sle i64 %vr22687, 8191
	br i1 %vr22686, label %.Lt_0E9F, label %.Lt_12EF
.Lt_12EF:

	; label .Lt_0E9E
	br label %.Lt_0E9E
.Lt_0E9E:
	%vr22688 = bitcast i8* bitcast ([5 x i8]* @Lt_0EA1 to i8*) to i8*

	; call fb_ULongintToStr()
	; arg V
	%vr22690 = load i64, i64* %V.111
	%vr22689 = call %FBSTRING* @fb_ULongintToStr( i64 %vr22690 )
	%vr22692 = bitcast i8* bitcast ([11 x i8]* @Lt_0EA0 to i8*) to i8*

	; addrof LT_0EA2

	; memclear LT_0EA2
	%vr22694 = bitcast %FBSTRING* %LT_0EA2.182 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22694, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EA2

	; call fb_StrConcat()
	; arg LT_0EA2
	; arg vr22692
	; arg 11
	; arg vr22689
	%vr22698 = bitcast %FBSTRING* %vr22689 to i8*
	; arg -1
	%vr22696 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EA2.182, i8* %vr22692, i64 11, i8* %vr22698, i64 -1 )

	; addrof LT_0EA3

	; memclear LT_0EA3
	%vr22701 = bitcast %FBSTRING* %LT_0EA3.183 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22701, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EA3

	; call fb_StrConcat()
	; arg LT_0EA3
	; arg vr22696
	%vr22704 = bitcast %FBSTRING* %vr22696 to i8*
	; arg -1
	; arg vr22688
	; arg 5
	%vr22703 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EA3.183, i8* %vr22704, i64 -1, i8* %vr22688, i64 5 )

	; call fb_FileOpen()
	; arg vr22703
	%vr22708 = bitcast %FBSTRING* %vr22703 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr22707 = call i32 @fb_FileOpen( %FBSTRING* %vr22708, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; localvar I
	%I.185 = alloca i64

	; localvar LT_0EA4
	%LT_0EA4.186 = alloca i64

	; store I := 0
	store i64 0, i64* %I.185

	; call fb_FileSize()
	; arg 1
	%vr22714 = call i64 @fb_FileSize( i32 1 )

	; store LT_0EA4 := vr22714
	store i64 %vr22714, i64* %LT_0EA4.186

	; goto .Lt_0EA5
	br label %.Lt_0EA5
.Lt_12F0:

	; label .Lt_0EA8
	br label %.Lt_0EA8
.Lt_0EA8:

	; addrof TMP
	%vr22719 = bitcast i8* %TMP.181 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr22719
	; arg 1
	%vr22720 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr22719, i64 1 )

	; conv TMP => vr22724
	%vr22725 = load i8, i8* %TMP.181
	%vr22724 = uitofp i8 %vr22725 to double

	; bop I SHL 3
	%vr22727 = load i64, i64* %I.185
	%vr22726 = shl i64 %vr22727, 3

	; bop THIS + vr22726
	%vr22729 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22730 = inttoptr i64 %vr22726 to %MEMORY_T*
	%vr22728 = add %MEMORY_T* %vr22729, %vr22730

	; store vr22728+134479872 := vr22724
	%vr22731 = ptrtoint %MEMORY_T* %vr22728 to i64
	%vr22732 = add i64 %vr22731, 134479872
	%vr22733 = inttoptr i64 %vr22732 to double*
	store double %vr22724, double* %vr22733

	; label .Lt_0EA6
	br label %.Lt_0EA6
.Lt_0EA6:

	; bop I + 1
	%vr22735 = load i64, i64* %I.185
	%vr22734 = add i64 %vr22735, 1

	; store I := vr22734
	store i64 %vr22734, i64* %I.185

	; label .Lt_0EA5
	br label %.Lt_0EA5
.Lt_0EA5:

	; branchbop I <= LT_0EA4
	%vr22737 = load i64, i64* %I.185
	%vr22738 = load i64, i64* %LT_0EA4.186
	%vr22736 = icmp sle i64 %vr22737, %vr22738
	br i1 %vr22736, label %.Lt_0EA8, label %.Lt_12F1
.Lt_12F1:

	; label .Lt_0EA7
	br label %.Lt_0EA7
.Lt_0EA7:

	; call fb_FileClose()
	; arg 1
	%vr22739 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_12F2:

	; label .Lt_0E9A
	br label %.Lt_0E9A
.Lt_0E9A:

	; conv ADR => vr22742
	%vr22743 = load i64, i64* %ADR.110
	%vr22742 = uitofp i64 %vr22743 to double

	; bop SYS_OFFSET + 235
	%vr22745 = load double, double* @SYS_OFFSET
	%vr22744 = fadd double %vr22745, 0x406D600000000000

	; branchbop vr22742 == vr22744
	%vr22746 = icmp eq double %vr22742, %vr22744
	br i1 %vr22746, label %.Lt_0EAA, label %.Lt_12F3
.Lt_12F3:

	; label .Lt_0EAB
	br label %.Lt_0EAB
.Lt_0EAB:

	; conv ADR => vr22748
	%vr22749 = load i64, i64* %ADR.110
	%vr22748 = uitofp i64 %vr22749 to double

	; bop SYS_OFFSET + 236
	%vr22751 = load double, double* @SYS_OFFSET
	%vr22750 = fadd double %vr22751, 0x406D800000000000

	; branchbop vr22748 <> vr22750
	%vr22752 = icmp ne double %vr22748, %vr22750
	br i1 %vr22752, label %.Lt_0EA9, label %.Lt_12F4
.Lt_12F4:

	; label .Lt_0EAA
	br label %.Lt_0EAA
.Lt_0EAA:

	; branchbop V < 0
	%vr22755 = load i64, i64* %V.111
	%vr22754 = icmp slt i64 %vr22755, 0
	br i1 %vr22754, label %.Lt_0EAD, label %.Lt_12F5
.Lt_12F5:

	; branchbop V > 15
	%vr22759 = load i64, i64* %V.111
	%vr22758 = icmp sgt i64 %vr22759, 15
	br i1 %vr22758, label %.Lt_0EAD, label %.Lt_12F6
.Lt_12F6:

	; label .Lt_0EAE
	br label %.Lt_0EAE
.Lt_0EAE:

	; bop V MOD 255
	%vr22763 = load i64, i64* %V.111
	%vr22762 = srem i64 %vr22763, 255

	; call POKE64()
	; arg THIS
	%vr22766 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 646
	; arg vr22762
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22766, i64 646, i64 %vr22762 )

	; goto .Lt_0EAC
	br label %.Lt_0EAC
.Lt_12F7:

	; label .Lt_0EAD
	br label %.Lt_0EAD
.Lt_0EAD:

	; branchbop V < 16
	%vr22770 = load i64, i64* %V.111
	%vr22769 = icmp slt i64 %vr22770, 16
	br i1 %vr22769, label %.Lt_0EAF, label %.Lt_12F8
.Lt_12F8:

	; branchbop V > 31
	%vr22774 = load i64, i64* %V.111
	%vr22773 = icmp sgt i64 %vr22774, 31
	br i1 %vr22773, label %.Lt_0EAF, label %.Lt_12F9
.Lt_12F9:

	; label .Lt_0EB0
	br label %.Lt_0EB0
.Lt_0EB0:

	; bop V + -16
	%vr22778 = load i64, i64* %V.111
	%vr22777 = add i64 %vr22778, -16

	; bop vr22777 AND 15
	%vr22780 = and i64 %vr22777, 15

	; bop vr22780 * 17
	%vr22781 = mul i64 %vr22780, 17

	; bop vr22781 MOD 255
	%vr22782 = srem i64 %vr22781, 255

	; bop SYS_OFFSET + 2
	%vr22785 = load double, double* @SYS_OFFSET
	%vr22784 = fadd double %vr22785, 0x4000000000000000

	; conv vr22784 => vr22786
	%vr22787 = call double @llvm.nearbyint.f64(double %vr22784)
	%vr22786 = fptoui double %vr22787 to i64

	; call POKE64()
	; arg THIS
	%vr22788 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22786
	; arg vr22782
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22788, i64 %vr22786, i64 %vr22782 )

	; goto .Lt_0EAC
	br label %.Lt_0EAC
.Lt_12FA:

	; label .Lt_0EAF
	br label %.Lt_0EAF
.Lt_0EAF:

	; branchbop V < 32
	%vr22792 = load i64, i64* %V.111
	%vr22791 = icmp slt i64 %vr22792, 32
	br i1 %vr22791, label %.Lt_0EB1, label %.Lt_12FB
.Lt_12FB:

	; branchbop V > 47
	%vr22796 = load i64, i64* %V.111
	%vr22795 = icmp sgt i64 %vr22796, 47
	br i1 %vr22795, label %.Lt_0EB1, label %.Lt_12FC
.Lt_12FC:

	; label .Lt_0EB2
	br label %.Lt_0EB2
.Lt_0EB2:

	; bop V + -32
	%vr22800 = load i64, i64* %V.111
	%vr22799 = add i64 %vr22800, -32

	; bop vr22799 AND 15
	%vr22802 = and i64 %vr22799, 15

	; bop vr22802 * 17
	%vr22803 = mul i64 %vr22802, 17

	; bop vr22803 MOD 255
	%vr22804 = srem i64 %vr22803, 255

	; bop SYS_OFFSET + 3
	%vr22807 = load double, double* @SYS_OFFSET
	%vr22806 = fadd double %vr22807, 0x4008000000000000

	; conv vr22806 => vr22808
	%vr22809 = call double @llvm.nearbyint.f64(double %vr22806)
	%vr22808 = fptoui double %vr22809 to i64

	; call POKE64()
	; arg THIS
	%vr22810 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22808
	; arg vr22804
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22810, i64 %vr22808, i64 %vr22804 )

	; goto .Lt_0EAC
	br label %.Lt_0EAC
.Lt_12FD:

	; label .Lt_0EB1
	br label %.Lt_0EB1
.Lt_0EB1:

	; branchbop V < 48
	%vr22814 = load i64, i64* %V.111
	%vr22813 = icmp slt i64 %vr22814, 48
	br i1 %vr22813, label %.Lt_0EB3, label %.Lt_12FE
.Lt_12FE:

	; branchbop V > 63
	%vr22818 = load i64, i64* %V.111
	%vr22817 = icmp sgt i64 %vr22818, 63
	br i1 %vr22817, label %.Lt_0EB3, label %.Lt_12FF
.Lt_12FF:

	; label .Lt_0EB4
	br label %.Lt_0EB4
.Lt_0EB4:

	; bop V + -48
	%vr22822 = load i64, i64* %V.111
	%vr22821 = add i64 %vr22822, -48

	; bop vr22821 AND 15
	%vr22824 = and i64 %vr22821, 15

	; bop vr22824 * 17
	%vr22825 = mul i64 %vr22824, 17

	; bop vr22825 MOD 255
	%vr22826 = srem i64 %vr22825, 255

	; bop SYS_OFFSET + 4
	%vr22829 = load double, double* @SYS_OFFSET
	%vr22828 = fadd double %vr22829, 0x4010000000000000

	; conv vr22828 => vr22830
	%vr22831 = call double @llvm.nearbyint.f64(double %vr22828)
	%vr22830 = fptoui double %vr22831 to i64

	; call POKE64()
	; arg THIS
	%vr22832 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22830
	; arg vr22826
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22832, i64 %vr22830, i64 %vr22826 )

	; goto .Lt_0EAC
	br label %.Lt_0EAC
.Lt_1300:

	; label .Lt_0EB3
	br label %.Lt_0EB3
.Lt_0EB3:

	; bop V + -64
	%vr22836 = load i64, i64* %V.111
	%vr22835 = add i64 %vr22836, -64

	; bop vr22835 AND 15
	%vr22838 = and i64 %vr22835, 15

	; bop vr22838 * 17
	%vr22839 = mul i64 %vr22838, 17

	; bop vr22839 MOD 255
	%vr22840 = srem i64 %vr22839, 255

	; bop SYS_OFFSET + 5
	%vr22843 = load double, double* @SYS_OFFSET
	%vr22842 = fadd double %vr22843, 0x4014000000000000

	; conv vr22842 => vr22844
	%vr22845 = call double @llvm.nearbyint.f64(double %vr22842)
	%vr22844 = fptoui double %vr22845 to i64

	; call POKE64()
	; arg THIS
	%vr22846 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22844
	; arg vr22840
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22846, i64 %vr22844, i64 %vr22840 )

	; label .Lt_0EB5
	br label %.Lt_0EB5
.Lt_0EB5:

	; label .Lt_0EAC
	br label %.Lt_0EAC
.Lt_0EAC:

	; conv ADR => vr22849
	%vr22850 = load i64, i64* %ADR.110
	%vr22849 = uitofp i64 %vr22850 to double

	; bop SYS_OFFSET + 236
	%vr22852 = load double, double* @SYS_OFFSET
	%vr22851 = fadd double %vr22852, 0x406D800000000000

	; branchbop vr22849 <> vr22851
	%vr22853 = icmp ne double %vr22849, %vr22851
	br i1 %vr22853, label %.Lt_0EB7, label %.Lt_1301
.Lt_1301:

	; bop SYS_OFFSET + 201
	%vr22855 = load double, double* @SYS_OFFSET
	%vr22854 = fadd double %vr22855, 0x4069200000000000

	; conv vr22854 => vr22856
	%vr22857 = call double @llvm.nearbyint.f64(double %vr22854)
	%vr22856 = fptosi double %vr22857 to i64

	; bop vr22856 SHL 3
	%vr22858 = shl i64 %vr22856, 3

	; bop THIS + vr22858
	%vr22860 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr22861 = inttoptr i64 %vr22858 to %MEMORY_T*
	%vr22859 = add %MEMORY_T* %vr22860, %vr22861

	; conv vr22859 => vr22862
	%vr22864 = ptrtoint %MEMORY_T* %vr22859 to i64
	%vr22865 = inttoptr i64 %vr22864 to double*
	%vr22866 = load double, double* %vr22865
	%vr22863 = call double @llvm.nearbyint.f64(double %vr22866)
	%vr22862 = fptosi double %vr22863 to i32

	; call fb_Color()
	; arg vr22862
	; arg 0
	; arg 2
	%vr22867 = call i32 @fb_Color( i32 %vr22862, i32 0, i32 2 )

	; call fb_GfxLine()
	; arg 0
	; arg 120
	%vr22870 = fpext float 0x405E000000000000 to float
	; arg 99
	%vr22871 = fpext float 0x4058C00000000000 to float
	; arg 1723
	%vr22872 = fpext float 0x409AEC0000000000 to float
	; arg 896
	%vr22873 = fpext float 0x408C000000000000 to float
	; arg 0
	; arg 1
	; arg 65535
	; arg -2147483648
	call void @fb_GfxLine( i8* 0, float %vr22870, float %vr22871, float %vr22872, float %vr22873, i32 0, i32 1, i32 65535, i32 -2147483648 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr22879 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr22878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr22879, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr22881 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr22882 = fpext float 0x0000000000000000 to float
	; arg 0
	; arg 0
	; arg vr22878
	%vr22885 = bitcast %FBSTRING* %vr22878 to %FBSTRING*
	; arg 0
	; arg -1073741820
	call void @fb_GfxPaint( i8* 0, float %vr22881, float %vr22882, i32 0, i32 0, %FBSTRING* %vr22885, i32 0, i32 -1073741820 )

	; label .Lt_0EB7
	br label %.Lt_0EB7
.Lt_0EB7:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1302:

	; label .Lt_0EA9
	br label %.Lt_0EA9
.Lt_0EA9:

	; conv ADR => vr22889
	%vr22890 = load i64, i64* %ADR.110
	%vr22889 = uitofp i64 %vr22890 to double

	; bop SYS_OFFSET + 237
	%vr22892 = load double, double* @SYS_OFFSET
	%vr22891 = fadd double %vr22892, 0x406DA00000000000

	; branchbop vr22889 <> vr22891
	%vr22893 = icmp ne double %vr22889, %vr22891
	br i1 %vr22893, label %.Lt_0EB8, label %.Lt_1303
.Lt_1303:

	; label .Lt_0EB9
	br label %.Lt_0EB9
.Lt_0EB9:

	; branchbop V < 0
	%vr22896 = load i64, i64* %V.111
	%vr22895 = icmp slt i64 %vr22896, 0
	br i1 %vr22895, label %.Lt_0EBB, label %.Lt_1304
.Lt_1304:

	; branchbop V > 15
	%vr22900 = load i64, i64* %V.111
	%vr22899 = icmp sgt i64 %vr22900, 15
	br i1 %vr22899, label %.Lt_0EBB, label %.Lt_1305
.Lt_1305:

	; label .Lt_0EBC
	br label %.Lt_0EBC
.Lt_0EBC:

	; bop V MOD 255
	%vr22904 = load i64, i64* %V.111
	%vr22903 = srem i64 %vr22904, 255

	; call POKE64()
	; arg THIS
	%vr22907 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg 53281
	; arg vr22903
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22907, i64 53281, i64 %vr22903 )

	; goto .Lt_0EBA
	br label %.Lt_0EBA
.Lt_1306:

	; label .Lt_0EBB
	br label %.Lt_0EBB
.Lt_0EBB:

	; branchbop V < 16
	%vr22911 = load i64, i64* %V.111
	%vr22910 = icmp slt i64 %vr22911, 16
	br i1 %vr22910, label %.Lt_0EBD, label %.Lt_1307
.Lt_1307:

	; branchbop V > 31
	%vr22915 = load i64, i64* %V.111
	%vr22914 = icmp sgt i64 %vr22915, 31
	br i1 %vr22914, label %.Lt_0EBD, label %.Lt_1308
.Lt_1308:

	; label .Lt_0EBE
	br label %.Lt_0EBE
.Lt_0EBE:

	; bop V + -16
	%vr22919 = load i64, i64* %V.111
	%vr22918 = add i64 %vr22919, -16

	; bop vr22918 AND 15
	%vr22921 = and i64 %vr22918, 15

	; bop vr22921 * 17
	%vr22922 = mul i64 %vr22921, 17

	; bop vr22922 MOD 255
	%vr22923 = srem i64 %vr22922, 255

	; bop SYS_OFFSET + 6
	%vr22926 = load double, double* @SYS_OFFSET
	%vr22925 = fadd double %vr22926, 0x4018000000000000

	; conv vr22925 => vr22927
	%vr22928 = call double @llvm.nearbyint.f64(double %vr22925)
	%vr22927 = fptoui double %vr22928 to i64

	; call POKE64()
	; arg THIS
	%vr22929 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22927
	; arg vr22923
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22929, i64 %vr22927, i64 %vr22923 )

	; goto .Lt_0EBA
	br label %.Lt_0EBA
.Lt_1309:

	; label .Lt_0EBD
	br label %.Lt_0EBD
.Lt_0EBD:

	; branchbop V < 32
	%vr22933 = load i64, i64* %V.111
	%vr22932 = icmp slt i64 %vr22933, 32
	br i1 %vr22932, label %.Lt_0EBF, label %.Lt_130A
.Lt_130A:

	; branchbop V > 47
	%vr22937 = load i64, i64* %V.111
	%vr22936 = icmp sgt i64 %vr22937, 47
	br i1 %vr22936, label %.Lt_0EBF, label %.Lt_130B
.Lt_130B:

	; label .Lt_0EC0
	br label %.Lt_0EC0
.Lt_0EC0:

	; bop V + -32
	%vr22941 = load i64, i64* %V.111
	%vr22940 = add i64 %vr22941, -32

	; bop vr22940 AND 15
	%vr22943 = and i64 %vr22940, 15

	; bop vr22943 * 17
	%vr22944 = mul i64 %vr22943, 17

	; bop vr22944 MOD 255
	%vr22945 = srem i64 %vr22944, 255

	; bop SYS_OFFSET + 7
	%vr22948 = load double, double* @SYS_OFFSET
	%vr22947 = fadd double %vr22948, 0x401C000000000000

	; conv vr22947 => vr22949
	%vr22950 = call double @llvm.nearbyint.f64(double %vr22947)
	%vr22949 = fptoui double %vr22950 to i64

	; call POKE64()
	; arg THIS
	%vr22951 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22949
	; arg vr22945
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22951, i64 %vr22949, i64 %vr22945 )

	; goto .Lt_0EBA
	br label %.Lt_0EBA
.Lt_130C:

	; label .Lt_0EBF
	br label %.Lt_0EBF
.Lt_0EBF:

	; branchbop V < 48
	%vr22955 = load i64, i64* %V.111
	%vr22954 = icmp slt i64 %vr22955, 48
	br i1 %vr22954, label %.Lt_0EC1, label %.Lt_130D
.Lt_130D:

	; branchbop V > 63
	%vr22959 = load i64, i64* %V.111
	%vr22958 = icmp sgt i64 %vr22959, 63
	br i1 %vr22958, label %.Lt_0EC1, label %.Lt_130E
.Lt_130E:

	; label .Lt_0EC2
	br label %.Lt_0EC2
.Lt_0EC2:

	; bop V + -48
	%vr22963 = load i64, i64* %V.111
	%vr22962 = add i64 %vr22963, -48

	; bop vr22962 AND 15
	%vr22965 = and i64 %vr22962, 15

	; bop vr22965 * 17
	%vr22966 = mul i64 %vr22965, 17

	; bop vr22966 MOD 255
	%vr22967 = srem i64 %vr22966, 255

	; bop SYS_OFFSET + 8
	%vr22970 = load double, double* @SYS_OFFSET
	%vr22969 = fadd double %vr22970, 0x4020000000000000

	; conv vr22969 => vr22971
	%vr22972 = call double @llvm.nearbyint.f64(double %vr22969)
	%vr22971 = fptoui double %vr22972 to i64

	; call POKE64()
	; arg THIS
	%vr22973 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22971
	; arg vr22967
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22973, i64 %vr22971, i64 %vr22967 )

	; goto .Lt_0EBA
	br label %.Lt_0EBA
.Lt_130F:

	; label .Lt_0EC1
	br label %.Lt_0EC1
.Lt_0EC1:

	; bop V + -64
	%vr22977 = load i64, i64* %V.111
	%vr22976 = add i64 %vr22977, -64

	; bop vr22976 AND 15
	%vr22979 = and i64 %vr22976, 15

	; bop vr22979 * 17
	%vr22980 = mul i64 %vr22979, 17

	; bop vr22980 MOD 255
	%vr22981 = srem i64 %vr22980, 255

	; bop SYS_OFFSET + 9
	%vr22984 = load double, double* @SYS_OFFSET
	%vr22983 = fadd double %vr22984, 0x4022000000000000

	; conv vr22983 => vr22985
	%vr22986 = call double @llvm.nearbyint.f64(double %vr22983)
	%vr22985 = fptoui double %vr22986 to i64

	; call POKE64()
	; arg THIS
	%vr22987 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr22985
	; arg vr22981
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22987, i64 %vr22985, i64 %vr22981 )

	; label .Lt_0EC3
	br label %.Lt_0EC3
.Lt_0EC3:

	; label .Lt_0EBA
	br label %.Lt_0EBA
.Lt_0EBA:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1310:

	; label .Lt_0EB8
	br label %.Lt_0EB8
.Lt_0EB8:

	; conv ADR => vr22990
	%vr22991 = load i64, i64* %ADR.110
	%vr22990 = uitofp i64 %vr22991 to double

	; bop SYS_OFFSET + 238
	%vr22993 = load double, double* @SYS_OFFSET
	%vr22992 = fadd double %vr22993, 0x406DC00000000000

	; branchbop vr22990 <> vr22992
	%vr22994 = icmp ne double %vr22990, %vr22992
	br i1 %vr22994, label %.Lt_0EC4, label %.Lt_1311
.Lt_1311:

	; label .Lt_0EC5
	br label %.Lt_0EC5
.Lt_0EC5:

	; bop SYS_OFFSET + 201
	%vr22996 = load double, double* @SYS_OFFSET
	%vr22995 = fadd double %vr22996, 0x4069200000000000

	; conv vr22995 => vr22997
	%vr22998 = call double @llvm.nearbyint.f64(double %vr22995)
	%vr22997 = fptosi double %vr22998 to i64

	; bop vr22997 SHL 3
	%vr22999 = shl i64 %vr22997, 3

	; bop THIS + vr22999
	%vr23001 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23002 = inttoptr i64 %vr22999 to %MEMORY_T*
	%vr23000 = add %MEMORY_T* %vr23001, %vr23002

	; conv vr23000 => vr23003
	%vr23005 = ptrtoint %MEMORY_T* %vr23000 to i64
	%vr23006 = inttoptr i64 %vr23005 to double*
	%vr23007 = load double, double* %vr23006
	%vr23004 = call double @llvm.nearbyint.f64(double %vr23007)
	%vr23003 = fptoui double %vr23004 to i32

	; bop SYS_OFFSET + 207
	%vr23009 = load double, double* @SYS_OFFSET
	%vr23008 = fadd double %vr23009, 0x4069E00000000000

	; conv vr23008 => vr23010
	%vr23011 = call double @llvm.nearbyint.f64(double %vr23008)
	%vr23010 = fptosi double %vr23011 to i64

	; bop vr23010 SHL 3
	%vr23012 = shl i64 %vr23010, 3

	; bop THIS + vr23012
	%vr23014 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23015 = inttoptr i64 %vr23012 to %MEMORY_T*
	%vr23013 = add %MEMORY_T* %vr23014, %vr23015

	; conv vr23013 => vr23016
	%vr23017 = ptrtoint %MEMORY_T* %vr23013 to i64
	%vr23018 = inttoptr i64 %vr23017 to double*
	%vr23019 = load double, double* %vr23018
	%vr23016 = fptrunc double %vr23019 to float

	; bop SYS_OFFSET + 206
	%vr23021 = load double, double* @SYS_OFFSET
	%vr23020 = fadd double %vr23021, 0x4069C00000000000

	; conv vr23020 => vr23022
	%vr23023 = call double @llvm.nearbyint.f64(double %vr23020)
	%vr23022 = fptosi double %vr23023 to i64

	; bop vr23022 SHL 3
	%vr23024 = shl i64 %vr23022, 3

	; bop THIS + vr23024
	%vr23026 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23027 = inttoptr i64 %vr23024 to %MEMORY_T*
	%vr23025 = add %MEMORY_T* %vr23026, %vr23027

	; conv vr23025 => vr23028
	%vr23029 = ptrtoint %MEMORY_T* %vr23025 to i64
	%vr23030 = inttoptr i64 %vr23029 to double*
	%vr23031 = load double, double* %vr23030
	%vr23028 = fptrunc double %vr23031 to float

	; bop SYS_OFFSET + 204
	%vr23033 = load double, double* @SYS_OFFSET
	%vr23032 = fadd double %vr23033, 0x4069800000000000

	; conv vr23032 => vr23034
	%vr23035 = call double @llvm.nearbyint.f64(double %vr23032)
	%vr23034 = fptosi double %vr23035 to i64

	; bop vr23034 SHL 3
	%vr23036 = shl i64 %vr23034, 3

	; bop THIS + vr23036
	%vr23038 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23039 = inttoptr i64 %vr23036 to %MEMORY_T*
	%vr23037 = add %MEMORY_T* %vr23038, %vr23039

	; conv vr23037 => vr23040
	%vr23041 = ptrtoint %MEMORY_T* %vr23037 to i64
	%vr23042 = inttoptr i64 %vr23041 to double*
	%vr23043 = load double, double* %vr23042
	%vr23040 = fptrunc double %vr23043 to float

	; bop SYS_OFFSET + 203
	%vr23045 = load double, double* @SYS_OFFSET
	%vr23044 = fadd double %vr23045, 0x4069600000000000

	; conv vr23044 => vr23046
	%vr23047 = call double @llvm.nearbyint.f64(double %vr23044)
	%vr23046 = fptosi double %vr23047 to i64

	; bop vr23046 SHL 3
	%vr23048 = shl i64 %vr23046, 3

	; bop THIS + vr23048
	%vr23050 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23051 = inttoptr i64 %vr23048 to %MEMORY_T*
	%vr23049 = add %MEMORY_T* %vr23050, %vr23051

	; conv vr23049 => vr23052
	%vr23053 = ptrtoint %MEMORY_T* %vr23049 to i64
	%vr23054 = inttoptr i64 %vr23053 to double*
	%vr23055 = load double, double* %vr23054
	%vr23052 = fptrunc double %vr23055 to float

	; call fb_GfxLine()
	; arg FGIMAGE
	%vr23056 = load i8*, i8** @FGIMAGE
	; arg vr23052
	; arg vr23040
	; arg vr23028
	; arg vr23016
	; arg vr23003
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* %vr23056, float %vr23052, float %vr23040, float %vr23028, float %vr23016, i32 %vr23003, i32 2, i32 65535, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1312:

	; label .Lt_0EC4
	br label %.Lt_0EC4
.Lt_0EC4:

	; conv ADR => vr23061
	%vr23062 = load i64, i64* %ADR.110
	%vr23061 = uitofp i64 %vr23062 to double

	; bop SYS_OFFSET + 239
	%vr23064 = load double, double* @SYS_OFFSET
	%vr23063 = fadd double %vr23064, 0x406DE00000000000

	; branchbop vr23061 <> vr23063
	%vr23065 = icmp ne double %vr23061, %vr23063
	br i1 %vr23065, label %.Lt_0EC6, label %.Lt_1313
.Lt_1313:

	; label .Lt_0EC7
	br label %.Lt_0EC7
.Lt_0EC7:

	; bop SYS_OFFSET + 202
	%vr23067 = load double, double* @SYS_OFFSET
	%vr23066 = fadd double %vr23067, 0x4069400000000000

	; conv vr23066 => vr23068
	%vr23069 = call double @llvm.nearbyint.f64(double %vr23066)
	%vr23068 = fptosi double %vr23069 to i64

	; bop vr23068 SHL 3
	%vr23070 = shl i64 %vr23068, 3

	; bop THIS + vr23070
	%vr23072 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23073 = inttoptr i64 %vr23070 to %MEMORY_T*
	%vr23071 = add %MEMORY_T* %vr23072, %vr23073

	; conv vr23071 => vr23074
	%vr23076 = ptrtoint %MEMORY_T* %vr23071 to i64
	%vr23077 = inttoptr i64 %vr23076 to double*
	%vr23078 = load double, double* %vr23077
	%vr23075 = call double @llvm.nearbyint.f64(double %vr23078)
	%vr23074 = fptoui double %vr23075 to i32

	; bop SYS_OFFSET + 207
	%vr23080 = load double, double* @SYS_OFFSET
	%vr23079 = fadd double %vr23080, 0x4069E00000000000

	; conv vr23079 => vr23081
	%vr23082 = call double @llvm.nearbyint.f64(double %vr23079)
	%vr23081 = fptosi double %vr23082 to i64

	; bop vr23081 SHL 3
	%vr23083 = shl i64 %vr23081, 3

	; bop THIS + vr23083
	%vr23085 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23086 = inttoptr i64 %vr23083 to %MEMORY_T*
	%vr23084 = add %MEMORY_T* %vr23085, %vr23086

	; conv vr23084 => vr23087
	%vr23088 = ptrtoint %MEMORY_T* %vr23084 to i64
	%vr23089 = inttoptr i64 %vr23088 to double*
	%vr23090 = load double, double* %vr23089
	%vr23087 = fptrunc double %vr23090 to float

	; bop SYS_OFFSET + 206
	%vr23092 = load double, double* @SYS_OFFSET
	%vr23091 = fadd double %vr23092, 0x4069C00000000000

	; conv vr23091 => vr23093
	%vr23094 = call double @llvm.nearbyint.f64(double %vr23091)
	%vr23093 = fptosi double %vr23094 to i64

	; bop vr23093 SHL 3
	%vr23095 = shl i64 %vr23093, 3

	; bop THIS + vr23095
	%vr23097 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23098 = inttoptr i64 %vr23095 to %MEMORY_T*
	%vr23096 = add %MEMORY_T* %vr23097, %vr23098

	; conv vr23096 => vr23099
	%vr23100 = ptrtoint %MEMORY_T* %vr23096 to i64
	%vr23101 = inttoptr i64 %vr23100 to double*
	%vr23102 = load double, double* %vr23101
	%vr23099 = fptrunc double %vr23102 to float

	; bop SYS_OFFSET + 204
	%vr23104 = load double, double* @SYS_OFFSET
	%vr23103 = fadd double %vr23104, 0x4069800000000000

	; conv vr23103 => vr23105
	%vr23106 = call double @llvm.nearbyint.f64(double %vr23103)
	%vr23105 = fptosi double %vr23106 to i64

	; bop vr23105 SHL 3
	%vr23107 = shl i64 %vr23105, 3

	; bop THIS + vr23107
	%vr23109 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23110 = inttoptr i64 %vr23107 to %MEMORY_T*
	%vr23108 = add %MEMORY_T* %vr23109, %vr23110

	; conv vr23108 => vr23111
	%vr23112 = ptrtoint %MEMORY_T* %vr23108 to i64
	%vr23113 = inttoptr i64 %vr23112 to double*
	%vr23114 = load double, double* %vr23113
	%vr23111 = fptrunc double %vr23114 to float

	; bop SYS_OFFSET + 203
	%vr23116 = load double, double* @SYS_OFFSET
	%vr23115 = fadd double %vr23116, 0x4069600000000000

	; conv vr23115 => vr23117
	%vr23118 = call double @llvm.nearbyint.f64(double %vr23115)
	%vr23117 = fptosi double %vr23118 to i64

	; bop vr23117 SHL 3
	%vr23119 = shl i64 %vr23117, 3

	; bop THIS + vr23119
	%vr23121 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23122 = inttoptr i64 %vr23119 to %MEMORY_T*
	%vr23120 = add %MEMORY_T* %vr23121, %vr23122

	; conv vr23120 => vr23123
	%vr23124 = ptrtoint %MEMORY_T* %vr23120 to i64
	%vr23125 = inttoptr i64 %vr23124 to double*
	%vr23126 = load double, double* %vr23125
	%vr23123 = fptrunc double %vr23126 to float

	; call fb_GfxLine()
	; arg FGIMAGE
	%vr23127 = load i8*, i8** @FGIMAGE
	; arg vr23123
	; arg vr23111
	; arg vr23099
	; arg vr23087
	; arg vr23074
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* %vr23127, float %vr23123, float %vr23111, float %vr23099, float %vr23087, i32 %vr23074, i32 2, i32 65535, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1314:

	; label .Lt_0EC6
	br label %.Lt_0EC6
.Lt_0EC6:

	; conv ADR => vr23132
	%vr23133 = load i64, i64* %ADR.110
	%vr23132 = uitofp i64 %vr23133 to double

	; bop SYS_OFFSET + 240
	%vr23135 = load double, double* @SYS_OFFSET
	%vr23134 = fadd double %vr23135, 0x406E000000000000

	; branchbop vr23132 <> vr23134
	%vr23136 = icmp ne double %vr23132, %vr23134
	br i1 %vr23136, label %.Lt_0EC8, label %.Lt_1315
.Lt_1315:

	; label .Lt_0EC9
	br label %.Lt_0EC9
.Lt_0EC9:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr23137 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr23143 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_Chain()
	; arg vr23143
	%vr23144 = call i32 @fb_Chain( %FBSTRING* %vr23143 )
	%vr23145 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23146 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23146
	; arg -1
	; arg vr23145
	; arg 1
	; arg 0
	%vr23147 = call %FBSTRING* @fb_StrAssign( i8* %vr23146, i64 -1, i8* %vr23145, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr23151 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr23160 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr23159 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr23160, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr23162 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr23163 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr23159
	%vr23166 = bitcast %FBSTRING* %vr23159 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr23162, float %vr23163, i32 4278190080, i32 0, %FBSTRING* %vr23166, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store double 0x0000000000000000, double* @OFFSET

	; label .Lt_0ECD
	br label %.Lt_0ECD
.Lt_0ECD:

	; bop SYS_OFFSET + 299
	%vr23170 = load double, double* @SYS_OFFSET
	%vr23169 = fadd double %vr23170, 0x4072B00000000000

	; conv vr23169 => vr23171
	%vr23172 = call double @llvm.nearbyint.f64(double %vr23169)
	%vr23171 = fptosi double %vr23172 to i64

	; bop vr23171 SHL 3
	%vr23173 = shl i64 %vr23171, 3

	; bop THIS + vr23173
	%vr23175 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23176 = inttoptr i64 %vr23173 to %MEMORY_T*
	%vr23174 = add %MEMORY_T* %vr23175, %vr23176

	; bop vr23174 + OFFSET
	%vr23178 = ptrtoint %MEMORY_T* %vr23174 to i64
	%vr23179 = inttoptr i64 %vr23178 to double*
	%vr23180 = load double, double* %vr23179
	%vr23181 = load double, double* @OFFSET
	%vr23177 = fadd double %vr23180, %vr23181

	; conv vr23177 => vr23182
	%vr23183 = call double @llvm.nearbyint.f64(double %vr23177)
	%vr23182 = fptoui double %vr23183 to i64

	; call POKE64()
	; arg THIS
	%vr23184 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23182
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23184, i64 %vr23182, i64 32 )

	; label .Lt_0ECB
	br label %.Lt_0ECB
.Lt_0ECB:

	; bop OFFSET + 1
	%vr23186 = load double, double* @OFFSET
	%vr23185 = fadd double %vr23186, 0x3FF0000000000000

	; store OFFSET := vr23185
	store double %vr23185, double* @OFFSET

	; label .Lt_0ECA
	br label %.Lt_0ECA
.Lt_0ECA:

	; branchbop OFFSET <= 1024
	%vr23188 = load double, double* @OFFSET
	%vr23187 = icmp sle double %vr23188, 0x4090000000000000
	br i1 %vr23187, label %.Lt_0ECD, label %.Lt_1316
.Lt_1316:

	; label .Lt_0ECC
	br label %.Lt_0ECC
.Lt_0ECC:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1317:

	; label .Lt_0EC8
	br label %.Lt_0EC8
.Lt_0EC8:

	; conv ADR => vr23190
	%vr23191 = load i64, i64* %ADR.110
	%vr23190 = uitofp i64 %vr23191 to double

	; bop SYS_OFFSET + 241
	%vr23193 = load double, double* @SYS_OFFSET
	%vr23192 = fadd double %vr23193, 0x406E200000000000

	; branchbop vr23190 <> vr23192
	%vr23194 = icmp ne double %vr23190, %vr23192
	br i1 %vr23194, label %.Lt_0ECE, label %.Lt_1318
.Lt_1318:

	; label .Lt_0ECF
	br label %.Lt_0ECF
.Lt_0ECF:

	; localvar LT_0ED1
	%LT_0ED1.187 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr23195 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr23201 = bitcast %FBSTRING* @STRCODE to i8*
	%vr23202 = bitcast i8* bitcast ([6 x i8]* @Lt_0ED0 to i8*) to i8*

	; addrof LT_0ED1

	; memclear LT_0ED1
	%vr23204 = bitcast %FBSTRING* %LT_0ED1.187 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23204, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0ED1

	; call fb_StrConcat()
	; arg LT_0ED1
	; arg vr23202
	; arg 6
	; arg vr23201
	; arg -1
	%vr23206 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0ED1.187, i8* %vr23202, i64 6, i8* %vr23201, i64 -1 )

	; call fb_Shell()
	; arg vr23206
	%vr23210 = bitcast %FBSTRING* %vr23206 to %FBSTRING*
	%vr23209 = call i32 @fb_Shell( %FBSTRING* %vr23210 )
	%vr23211 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23212 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23212
	; arg -1
	; arg vr23211
	; arg 1
	; arg 0
	%vr23213 = call %FBSTRING* @fb_StrAssign( i8* %vr23212, i64 -1, i8* %vr23211, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr23217 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr23226 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr23225 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr23226, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr23228 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr23229 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr23225
	%vr23232 = bitcast %FBSTRING* %vr23225 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr23228, float %vr23229, i32 4278190080, i32 0, %FBSTRING* %vr23232, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store double 0x0000000000000000, double* @OFFSET

	; label .Lt_0ED5
	br label %.Lt_0ED5
.Lt_0ED5:

	; bop SYS_OFFSET + 299
	%vr23236 = load double, double* @SYS_OFFSET
	%vr23235 = fadd double %vr23236, 0x4072B00000000000

	; conv vr23235 => vr23237
	%vr23238 = call double @llvm.nearbyint.f64(double %vr23235)
	%vr23237 = fptosi double %vr23238 to i64

	; bop vr23237 SHL 3
	%vr23239 = shl i64 %vr23237, 3

	; bop THIS + vr23239
	%vr23241 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23242 = inttoptr i64 %vr23239 to %MEMORY_T*
	%vr23240 = add %MEMORY_T* %vr23241, %vr23242

	; bop vr23240 + OFFSET
	%vr23244 = ptrtoint %MEMORY_T* %vr23240 to i64
	%vr23245 = inttoptr i64 %vr23244 to double*
	%vr23246 = load double, double* %vr23245
	%vr23247 = load double, double* @OFFSET
	%vr23243 = fadd double %vr23246, %vr23247

	; conv vr23243 => vr23248
	%vr23249 = call double @llvm.nearbyint.f64(double %vr23243)
	%vr23248 = fptoui double %vr23249 to i64

	; call POKE64()
	; arg THIS
	%vr23250 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23248
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23250, i64 %vr23248, i64 32 )

	; label .Lt_0ED3
	br label %.Lt_0ED3
.Lt_0ED3:

	; bop OFFSET + 1
	%vr23252 = load double, double* @OFFSET
	%vr23251 = fadd double %vr23252, 0x3FF0000000000000

	; store OFFSET := vr23251
	store double %vr23251, double* @OFFSET

	; label .Lt_0ED2
	br label %.Lt_0ED2
.Lt_0ED2:

	; branchbop OFFSET <= 1024
	%vr23254 = load double, double* @OFFSET
	%vr23253 = icmp sle double %vr23254, 0x4090000000000000
	br i1 %vr23253, label %.Lt_0ED5, label %.Lt_1319
.Lt_1319:

	; label .Lt_0ED4
	br label %.Lt_0ED4
.Lt_0ED4:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_131A:

	; label .Lt_0ECE
	br label %.Lt_0ECE
.Lt_0ECE:

	; conv ADR => vr23256
	%vr23257 = load i64, i64* %ADR.110
	%vr23256 = uitofp i64 %vr23257 to double

	; bop SYS_OFFSET + 242
	%vr23259 = load double, double* @SYS_OFFSET
	%vr23258 = fadd double %vr23259, 0x406E400000000000

	; branchbop vr23256 <> vr23258
	%vr23260 = icmp ne double %vr23256, %vr23258
	br i1 %vr23260, label %.Lt_0ED6, label %.Lt_131B
.Lt_131B:

	; label .Lt_0ED7
	br label %.Lt_0ED7
.Lt_0ED7:

	; localvar LT_0EDA
	%LT_0EDA.188 = alloca %FBSTRING

	; localvar LT_0EDB
	%LT_0EDB.189 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr23261 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr23267 = bitcast i8* bitcast ([19 x i8]* @Lt_0ED9 to i8*) to i8*
	%vr23268 = bitcast %FBSTRING* @STRCODE to i8*
	%vr23269 = bitcast i8* bitcast ([8 x i8]* @Lt_0ED8 to i8*) to i8*

	; addrof LT_0EDA

	; memclear LT_0EDA
	%vr23271 = bitcast %FBSTRING* %LT_0EDA.188 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23271, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EDA

	; call fb_StrConcat()
	; arg LT_0EDA
	; arg vr23269
	; arg 8
	; arg vr23268
	; arg -1
	%vr23273 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EDA.188, i8* %vr23269, i64 8, i8* %vr23268, i64 -1 )

	; addrof LT_0EDB

	; memclear LT_0EDB
	%vr23277 = bitcast %FBSTRING* %LT_0EDB.189 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23277, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EDB

	; call fb_StrConcat()
	; arg LT_0EDB
	; arg vr23273
	%vr23280 = bitcast %FBSTRING* %vr23273 to i8*
	; arg -1
	; arg vr23267
	; arg 19
	%vr23279 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EDB.189, i8* %vr23280, i64 -1, i8* %vr23267, i64 19 )

	; call fb_Shell()
	; arg vr23279
	%vr23284 = bitcast %FBSTRING* %vr23279 to %FBSTRING*
	%vr23283 = call i32 @fb_Shell( %FBSTRING* %vr23284 )
	%vr23285 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23286 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23286
	; arg -1
	; arg vr23285
	; arg 1
	; arg 0
	%vr23287 = call %FBSTRING* @fb_StrAssign( i8* %vr23286, i64 -1, i8* %vr23285, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr23291 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr23300 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr23299 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr23300, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr23302 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr23303 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr23299
	%vr23306 = bitcast %FBSTRING* %vr23299 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr23302, float %vr23303, i32 4278190080, i32 0, %FBSTRING* %vr23306, i32 0, i32 1073741828 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_131C:

	; label .Lt_0ED6
	br label %.Lt_0ED6
.Lt_0ED6:

	; conv ADR => vr23310
	%vr23311 = load i64, i64* %ADR.110
	%vr23310 = uitofp i64 %vr23311 to double

	; bop SYS_OFFSET + 243
	%vr23313 = load double, double* @SYS_OFFSET
	%vr23312 = fadd double %vr23313, 0x406E600000000000

	; branchbop vr23310 <> vr23312
	%vr23314 = icmp ne double %vr23310, %vr23312
	br i1 %vr23314, label %.Lt_0EDC, label %.Lt_131D
.Lt_131D:

	; label .Lt_0EDD
	br label %.Lt_0EDD
.Lt_0EDD:

	; localvar LT_0EDF
	%LT_0EDF.190 = alloca %FBSTRING
	%vr23315 = bitcast i8* bitcast ([5 x i8]* @Lt_0EDE to i8*) to i8*
	%vr23316 = bitcast %FBSTRING* @STRCODE to i8*

	; addrof LT_0EDF

	; memclear LT_0EDF
	%vr23318 = bitcast %FBSTRING* %LT_0EDF.190 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23318, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EDF

	; call fb_StrConcat()
	; arg LT_0EDF
	; arg vr23316
	; arg -1
	; arg vr23315
	; arg 5
	%vr23320 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EDF.190, i8* %vr23316, i64 -1, i8* %vr23315, i64 5 )

	; call fb_FileOpen()
	; arg vr23320
	%vr23324 = bitcast %FBSTRING* %vr23320 to %FBSTRING*
	; arg 3
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr23323 = call i32 @fb_FileOpen( %FBSTRING* %vr23324, i32 3, i32 0, i32 0, i32 1, i32 0 )
	%vr23330 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23331 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23331
	; arg -1
	; arg vr23330
	; arg 1
	; arg 0
	%vr23332 = call %FBSTRING* @fb_StrAssign( i8* %vr23331, i64 -1, i8* %vr23330, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_131E:

	; label .Lt_0EDC
	br label %.Lt_0EDC
.Lt_0EDC:

	; conv ADR => vr23337
	%vr23338 = load i64, i64* %ADR.110
	%vr23337 = uitofp i64 %vr23338 to double

	; bop SYS_OFFSET + 244
	%vr23340 = load double, double* @SYS_OFFSET
	%vr23339 = fadd double %vr23340, 0x406E800000000000

	; branchbop vr23337 <> vr23339
	%vr23341 = icmp ne double %vr23337, %vr23339
	br i1 %vr23341, label %.Lt_0EE0, label %.Lt_131F
.Lt_131F:

	; label .Lt_0EE1
	br label %.Lt_0EE1
.Lt_0EE1:
	%vr23342 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_PrintString()
	; arg 1
	; arg vr23342
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr23342, i32 1 )
	%vr23345 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23346 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23346
	; arg -1
	; arg vr23345
	; arg 1
	; arg 0
	%vr23347 = call %FBSTRING* @fb_StrAssign( i8* %vr23346, i64 -1, i8* %vr23345, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1320:

	; label .Lt_0EE0
	br label %.Lt_0EE0
.Lt_0EE0:

	; conv ADR => vr23352
	%vr23353 = load i64, i64* %ADR.110
	%vr23352 = uitofp i64 %vr23353 to double

	; bop SYS_OFFSET + 245
	%vr23355 = load double, double* @SYS_OFFSET
	%vr23354 = fadd double %vr23355, 0x406EA00000000000

	; branchbop vr23352 <> vr23354
	%vr23356 = icmp ne double %vr23352, %vr23354
	br i1 %vr23356, label %.Lt_0EE2, label %.Lt_1321
.Lt_1321:

	; label .Lt_0EE3
	br label %.Lt_0EE3
.Lt_0EE3:

	; call fb_FileClose()
	; arg 1
	%vr23357 = call i32 @fb_FileClose( i32 1 )
	%vr23359 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23360 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23360
	; arg -1
	; arg vr23359
	; arg 1
	; arg 0
	%vr23361 = call %FBSTRING* @fb_StrAssign( i8* %vr23360, i64 -1, i8* %vr23359, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1322:

	; label .Lt_0EE2
	br label %.Lt_0EE2
.Lt_0EE2:

	; conv ADR => vr23366
	%vr23367 = load i64, i64* %ADR.110
	%vr23366 = uitofp i64 %vr23367 to double

	; bop SYS_OFFSET + 246
	%vr23369 = load double, double* @SYS_OFFSET
	%vr23368 = fadd double %vr23369, 0x406EC00000000000

	; branchbop vr23366 <> vr23368
	%vr23370 = icmp ne double %vr23366, %vr23368
	br i1 %vr23370, label %.Lt_0EE4, label %.Lt_1323
.Lt_1323:

	; label .Lt_0EE5
	br label %.Lt_0EE5
.Lt_0EE5:

	; localvar LT_0EE9
	%LT_0EE9.191 = alloca %FBSTRING

	; localvar LT_0EEA
	%LT_0EEA.192 = alloca %FBSTRING

	; localvar LT_0EEB
	%LT_0EEB.193 = alloca %FBSTRING

	; localvar LT_0EEC
	%LT_0EEC.194 = alloca %FBSTRING
	%vr23371 = bitcast i8* bitcast ([5 x i8]* @Lt_0EE8 to i8*) to i8*
	%vr23372 = bitcast %FBSTRING* @STRCODE to i8*
	%vr23373 = bitcast i8* bitcast ([13 x i8]* @Lt_0EE7 to i8*) to i8*
	%vr23374 = bitcast %FBSTRING* @STRCODE to i8*
	%vr23375 = bitcast i8* bitcast ([6 x i8]* @Lt_0EE6 to i8*) to i8*

	; addrof LT_0EE9

	; memclear LT_0EE9
	%vr23377 = bitcast %FBSTRING* %LT_0EE9.191 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23377, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EE9

	; call fb_StrConcat()
	; arg LT_0EE9
	; arg vr23375
	; arg 6
	; arg vr23374
	; arg -1
	%vr23379 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EE9.191, i8* %vr23375, i64 6, i8* %vr23374, i64 -1 )

	; addrof LT_0EEA

	; memclear LT_0EEA
	%vr23383 = bitcast %FBSTRING* %LT_0EEA.192 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23383, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EEA

	; call fb_StrConcat()
	; arg LT_0EEA
	; arg vr23379
	%vr23386 = bitcast %FBSTRING* %vr23379 to i8*
	; arg -1
	; arg vr23373
	; arg 13
	%vr23385 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EEA.192, i8* %vr23386, i64 -1, i8* %vr23373, i64 13 )

	; addrof LT_0EEB

	; memclear LT_0EEB
	%vr23390 = bitcast %FBSTRING* %LT_0EEB.193 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23390, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EEB

	; call fb_StrConcat()
	; arg LT_0EEB
	; arg vr23385
	%vr23393 = bitcast %FBSTRING* %vr23385 to i8*
	; arg -1
	; arg vr23372
	; arg -1
	%vr23392 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EEB.193, i8* %vr23393, i64 -1, i8* %vr23372, i64 -1 )

	; addrof LT_0EEC

	; memclear LT_0EEC
	%vr23397 = bitcast %FBSTRING* %LT_0EEC.194 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23397, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EEC

	; call fb_StrConcat()
	; arg LT_0EEC
	; arg vr23392
	%vr23400 = bitcast %FBSTRING* %vr23392 to i8*
	; arg -1
	; arg vr23371
	; arg 5
	%vr23399 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EEC.194, i8* %vr23400, i64 -1, i8* %vr23371, i64 5 )

	; call fb_Shell()
	; arg vr23399
	%vr23404 = bitcast %FBSTRING* %vr23399 to %FBSTRING*
	%vr23403 = call i32 @fb_Shell( %FBSTRING* %vr23404 )
	%vr23405 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23406 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23406
	; arg -1
	; arg vr23405
	; arg 1
	; arg 0
	%vr23407 = call %FBSTRING* @fb_StrAssign( i8* %vr23406, i64 -1, i8* %vr23405, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1324:

	; label .Lt_0EE4
	br label %.Lt_0EE4
.Lt_0EE4:

	; conv ADR => vr23412
	%vr23413 = load i64, i64* %ADR.110
	%vr23412 = uitofp i64 %vr23413 to double

	; bop SYS_OFFSET + 247
	%vr23415 = load double, double* @SYS_OFFSET
	%vr23414 = fadd double %vr23415, 0x406EE00000000000

	; branchbop vr23412 <> vr23414
	%vr23416 = icmp ne double %vr23412, %vr23414
	br i1 %vr23416, label %.Lt_0EED, label %.Lt_1325
.Lt_1325:

	; label .Lt_0EEE
	br label %.Lt_0EEE
.Lt_0EEE:

	; localvar LT_0EF2
	%LT_0EF2.195 = alloca %FBSTRING

	; localvar LT_0EF3
	%LT_0EF3.196 = alloca %FBSTRING

	; localvar LT_0EF4
	%LT_0EF4.197 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr23417 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr23423 = bitcast i8* bitcast ([7 x i8]* @Lt_0EF1 to i8*) to i8*
	%vr23424 = bitcast i8* bitcast ([2 x i8]* @Lt_0EF0 to i8*) to i8*
	%vr23425 = bitcast %FBSTRING* @STRCODE to i8*
	%vr23426 = bitcast i8* bitcast ([29 x i8]* @Lt_0EEF to i8*) to i8*

	; addrof LT_0EF2

	; memclear LT_0EF2
	%vr23428 = bitcast %FBSTRING* %LT_0EF2.195 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23428, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EF2

	; call fb_StrConcat()
	; arg LT_0EF2
	; arg vr23426
	; arg 29
	; arg vr23425
	; arg -1
	%vr23430 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EF2.195, i8* %vr23426, i64 29, i8* %vr23425, i64 -1 )

	; addrof LT_0EF3

	; memclear LT_0EF3
	%vr23434 = bitcast %FBSTRING* %LT_0EF3.196 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23434, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EF3

	; call fb_StrConcat()
	; arg LT_0EF3
	; arg vr23430
	%vr23437 = bitcast %FBSTRING* %vr23430 to i8*
	; arg -1
	; arg vr23424
	; arg 2
	%vr23436 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EF3.196, i8* %vr23437, i64 -1, i8* %vr23424, i64 2 )

	; addrof LT_0EF4

	; memclear LT_0EF4
	%vr23441 = bitcast %FBSTRING* %LT_0EF4.197 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr23441, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0EF4

	; call fb_StrConcat()
	; arg LT_0EF4
	; arg vr23436
	%vr23444 = bitcast %FBSTRING* %vr23436 to i8*
	; arg -1
	; arg vr23423
	; arg 7
	%vr23443 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0EF4.197, i8* %vr23444, i64 -1, i8* %vr23423, i64 7 )

	; call fb_Shell()
	; arg vr23443
	%vr23448 = bitcast %FBSTRING* %vr23443 to %FBSTRING*
	%vr23447 = call i32 @fb_Shell( %FBSTRING* %vr23448 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0EF5
	%vr23450 = bitcast i8* bitcast ([11 x i8]* @Lt_0EF5 to i8*) to i8*
	; arg 10
	%vr23449 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr23450, i64 10 )

	; call fb_Shell()
	; arg vr23449
	%vr23453 = bitcast %FBSTRING* %vr23449 to %FBSTRING*
	%vr23452 = call i32 @fb_Shell( %FBSTRING* %vr23453 )
	%vr23454 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23455 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23455
	; arg -1
	; arg vr23454
	; arg 1
	; arg 0
	%vr23456 = call %FBSTRING* @fb_StrAssign( i8* %vr23455, i64 -1, i8* %vr23454, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr23460 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr23469 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr23468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr23469, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr23471 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr23472 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr23468
	%vr23475 = bitcast %FBSTRING* %vr23468 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr23471, float %vr23472, i32 4278190080, i32 0, %FBSTRING* %vr23475, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store double 0x0000000000000000, double* @OFFSET

	; label .Lt_0EF9
	br label %.Lt_0EF9
.Lt_0EF9:

	; bop SYS_OFFSET + 299
	%vr23479 = load double, double* @SYS_OFFSET
	%vr23478 = fadd double %vr23479, 0x4072B00000000000

	; conv vr23478 => vr23480
	%vr23481 = call double @llvm.nearbyint.f64(double %vr23478)
	%vr23480 = fptosi double %vr23481 to i64

	; bop vr23480 SHL 3
	%vr23482 = shl i64 %vr23480, 3

	; bop THIS + vr23482
	%vr23484 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23485 = inttoptr i64 %vr23482 to %MEMORY_T*
	%vr23483 = add %MEMORY_T* %vr23484, %vr23485

	; bop vr23483 + OFFSET
	%vr23487 = ptrtoint %MEMORY_T* %vr23483 to i64
	%vr23488 = inttoptr i64 %vr23487 to double*
	%vr23489 = load double, double* %vr23488
	%vr23490 = load double, double* @OFFSET
	%vr23486 = fadd double %vr23489, %vr23490

	; conv vr23486 => vr23491
	%vr23492 = call double @llvm.nearbyint.f64(double %vr23486)
	%vr23491 = fptoui double %vr23492 to i64

	; call POKE64()
	; arg THIS
	%vr23493 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23491
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23493, i64 %vr23491, i64 32 )

	; label .Lt_0EF7
	br label %.Lt_0EF7
.Lt_0EF7:

	; bop OFFSET + 1
	%vr23495 = load double, double* @OFFSET
	%vr23494 = fadd double %vr23495, 0x3FF0000000000000

	; store OFFSET := vr23494
	store double %vr23494, double* @OFFSET

	; label .Lt_0EF6
	br label %.Lt_0EF6
.Lt_0EF6:

	; branchbop OFFSET <= 1024
	%vr23497 = load double, double* @OFFSET
	%vr23496 = icmp sle double %vr23497, 0x4090000000000000
	br i1 %vr23496, label %.Lt_0EF9, label %.Lt_1326
.Lt_1326:

	; label .Lt_0EF8
	br label %.Lt_0EF8
.Lt_0EF8:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1327:

	; label .Lt_0EED
	br label %.Lt_0EED
.Lt_0EED:

	; conv ADR => vr23499
	%vr23500 = load i64, i64* %ADR.110
	%vr23499 = uitofp i64 %vr23500 to double

	; bop SYS_OFFSET + 248
	%vr23502 = load double, double* @SYS_OFFSET
	%vr23501 = fadd double %vr23502, 0x406F000000000000

	; branchbop vr23499 <> vr23501
	%vr23503 = icmp ne double %vr23499, %vr23501
	br i1 %vr23503, label %.Lt_0EFA, label %.Lt_1328
.Lt_1328:

	; label .Lt_0EFB
	br label %.Lt_0EFB
.Lt_0EFB:
	%vr23504 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_Shell()
	; arg vr23504
	%vr23505 = call i32 @fb_Shell( %FBSTRING* %vr23504 )
	%vr23506 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23507 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23507
	; arg -1
	; arg vr23506
	; arg 1
	; arg 0
	%vr23508 = call %FBSTRING* @fb_StrAssign( i8* %vr23507, i64 -1, i8* %vr23506, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1329:

	; label .Lt_0EFA
	br label %.Lt_0EFA
.Lt_0EFA:

	; conv ADR => vr23513
	%vr23514 = load i64, i64* %ADR.110
	%vr23513 = uitofp i64 %vr23514 to double

	; bop SYS_OFFSET + 249
	%vr23516 = load double, double* @SYS_OFFSET
	%vr23515 = fadd double %vr23516, 0x406F200000000000

	; branchbop vr23513 <> vr23515
	%vr23517 = icmp ne double %vr23513, %vr23515
	br i1 %vr23517, label %.Lt_0EFC, label %.Lt_132A
.Lt_132A:

	; label .Lt_0EFD
	br label %.Lt_0EFD
.Lt_0EFD:

	; conv V => vr23518
	%vr23519 = load i64, i64* %V.111
	%vr23518 = uitofp i64 %vr23519 to double

	; store SWCH := vr23518
	store double %vr23518, double* @SWCH

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_132B:

	; label .Lt_0EFC
	br label %.Lt_0EFC
.Lt_0EFC:

	; conv ADR => vr23521
	%vr23522 = load i64, i64* %ADR.110
	%vr23521 = uitofp i64 %vr23522 to double

	; bop SYS_OFFSET + 250
	%vr23524 = load double, double* @SYS_OFFSET
	%vr23523 = fadd double %vr23524, 0x406F400000000000

	; branchbop vr23521 <> vr23523
	%vr23525 = icmp ne double %vr23521, %vr23523
	br i1 %vr23525, label %.Lt_0EFE, label %.Lt_132C
.Lt_132C:

	; label .Lt_0EFF
	br label %.Lt_0EFF
.Lt_0EFF:
	%vr23527 = load i64, i64* %V.111
	%vr23526 = bitcast i64 %vr23527 to i64

	; call fb_CHR()
	; arg 1
	; arg vr23526
	%vr23530 = inttoptr i64 %vr23526 to i8*
	%vr23528 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr23530 )

	; call fb_StrLcase2()
	; arg vr23528
	%vr23532 = bitcast %FBSTRING* %vr23528 to %FBSTRING*
	; arg 0
	%vr23531 = call %FBSTRING* @fb_StrLcase2( %FBSTRING* %vr23532, i32 0 )
	%vr23534 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrConcatAssign()
	; arg vr23534
	; arg -1
	; arg vr23531
	%vr23537 = bitcast %FBSTRING* %vr23531 to i8*
	; arg -1
	; arg 0
	%vr23535 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr23534, i64 -1, i8* %vr23537, i64 -1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_132D:

	; label .Lt_0EFE
	br label %.Lt_0EFE
.Lt_0EFE:

	; conv ADR => vr23541
	%vr23542 = load i64, i64* %ADR.110
	%vr23541 = uitofp i64 %vr23542 to double

	; bop SYS_OFFSET + 251
	%vr23544 = load double, double* @SYS_OFFSET
	%vr23543 = fadd double %vr23544, 0x406F600000000000

	; branchbop vr23541 <> vr23543
	%vr23545 = icmp ne double %vr23541, %vr23543
	br i1 %vr23545, label %.Lt_0F00, label %.Lt_132E
.Lt_132E:

	; label .Lt_0F01
	br label %.Lt_0F01
.Lt_0F01:
	%vr23546 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_PrintString()
	; arg 1
	; arg vr23546
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr23546, i32 1 )
	%vr23549 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23550 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr23550
	; arg -1
	; arg vr23549
	; arg 1
	; arg 0
	%vr23551 = call %FBSTRING* @fb_StrAssign( i8* %vr23550, i64 -1, i8* %vr23549, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_132F:

	; label .Lt_0F00
	br label %.Lt_0F00
.Lt_0F00:

	; conv ADR => vr23556
	%vr23557 = load i64, i64* %ADR.110
	%vr23556 = uitofp i64 %vr23557 to double

	; bop SYS_OFFSET + 252
	%vr23559 = load double, double* @SYS_OFFSET
	%vr23558 = fadd double %vr23559, 0x406F800000000000

	; branchbop vr23556 <> vr23558
	%vr23560 = icmp ne double %vr23556, %vr23558
	br i1 %vr23560, label %.Lt_0F02, label %.Lt_1330
.Lt_1330:

	; label .Lt_0F03
	br label %.Lt_0F03
.Lt_0F03:

	; conv C => vr23561
	%vr23563 = load double, double* @C
	%vr23562 = call double @llvm.nearbyint.f64(double %vr23563)
	%vr23561 = fptosi double %vr23562 to i64

	; bop vr23561 SHL 3
	%vr23564 = shl i64 %vr23561, 3

	; bop THIS + vr23564
	%vr23566 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23567 = inttoptr i64 %vr23564 to %MEMORY_T*
	%vr23565 = add %MEMORY_T* %vr23566, %vr23567

	; conv vr23565+134479872 => vr23568
	%vr23570 = ptrtoint %MEMORY_T* %vr23565 to i64
	%vr23571 = add i64 %vr23570, 134479872
	%vr23572 = inttoptr i64 %vr23571 to double*
	%vr23573 = load double, double* %vr23572
	%vr23569 = call double @llvm.nearbyint.f64(double %vr23573)
	%vr23568 = fptosi double %vr23569 to i64

	; conv X => vr23574
	%vr23576 = load double, double* @X
	%vr23575 = call double @llvm.nearbyint.f64(double %vr23576)
	%vr23574 = fptosi double %vr23575 to i64

	; bop 128 SHR vr23574
	%vr23577 = ashr i64 128, %vr23574

	; bop vr23568 AND vr23577
	%vr23578 = and i64 %vr23568, %vr23577

	; branchbop vr23578 == 0
	%vr23579 = icmp eq i64 %vr23578, 0
	br i1 %vr23579, label %.Lt_0F05, label %.Lt_1331
.Lt_1331:

	; conv RVS => vr23580
	%vr23581 = load i16, i16* @RVS
	%vr23580 = sext i16 %vr23581 to i64

	; bop vr23580 SHL 3
	%vr23582 = shl i64 %vr23580, 3

	; bop THIS + vr23582
	%vr23584 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23585 = inttoptr i64 %vr23582 to %MEMORY_T*
	%vr23583 = add %MEMORY_T* %vr23584, %vr23585

	; branchbop vr23583 == 0
	%vr23587 = ptrtoint %MEMORY_T* %vr23583 to i64
	%vr23588 = inttoptr i64 %vr23587 to double*
	%vr23589 = load double, double* %vr23588
	%vr23586 = icmp eq double %vr23589, 0x0000000000000000
	br i1 %vr23586, label %.Lt_0F07, label %.Lt_1332
.Lt_1332:

	; bop SYS_OFFSET + 239
	%vr23591 = load double, double* @SYS_OFFSET
	%vr23590 = fadd double %vr23591, 0x406DE00000000000

	; conv vr23590 => vr23592
	%vr23593 = call double @llvm.nearbyint.f64(double %vr23590)
	%vr23592 = fptoui double %vr23593 to i64

	; call POKE64()
	; arg THIS
	%vr23594 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23592
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23594, i64 %vr23592, i64 0 )

	; goto .Lt_0F06
	br label %.Lt_0F06
.Lt_1333:

	; label .Lt_0F07
	br label %.Lt_0F07
.Lt_0F07:

	; bop SYS_OFFSET + 238
	%vr23596 = load double, double* @SYS_OFFSET
	%vr23595 = fadd double %vr23596, 0x406DC00000000000

	; conv vr23595 => vr23597
	%vr23598 = call double @llvm.nearbyint.f64(double %vr23595)
	%vr23597 = fptoui double %vr23598 to i64

	; call POKE64()
	; arg THIS
	%vr23599 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23597
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23599, i64 %vr23597, i64 0 )

	; label .Lt_0F06
	br label %.Lt_0F06
.Lt_0F06:

	; goto .Lt_0F04
	br label %.Lt_0F04
.Lt_1334:

	; label .Lt_0F05
	br label %.Lt_0F05
.Lt_0F05:

	; conv RVS => vr23600
	%vr23601 = load i16, i16* @RVS
	%vr23600 = sext i16 %vr23601 to i64

	; bop vr23600 SHL 3
	%vr23602 = shl i64 %vr23600, 3

	; bop THIS + vr23602
	%vr23604 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23605 = inttoptr i64 %vr23602 to %MEMORY_T*
	%vr23603 = add %MEMORY_T* %vr23604, %vr23605

	; branchbop vr23603 == 0
	%vr23607 = ptrtoint %MEMORY_T* %vr23603 to i64
	%vr23608 = inttoptr i64 %vr23607 to double*
	%vr23609 = load double, double* %vr23608
	%vr23606 = icmp eq double %vr23609, 0x0000000000000000
	br i1 %vr23606, label %.Lt_0F09, label %.Lt_1335
.Lt_1335:

	; bop SYS_OFFSET + 238
	%vr23611 = load double, double* @SYS_OFFSET
	%vr23610 = fadd double %vr23611, 0x406DC00000000000

	; conv vr23610 => vr23612
	%vr23613 = call double @llvm.nearbyint.f64(double %vr23610)
	%vr23612 = fptoui double %vr23613 to i64

	; call POKE64()
	; arg THIS
	%vr23614 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23612
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23614, i64 %vr23612, i64 0 )

	; goto .Lt_0F08
	br label %.Lt_0F08
.Lt_1336:

	; label .Lt_0F09
	br label %.Lt_0F09
.Lt_0F09:

	; bop SYS_OFFSET + 239
	%vr23616 = load double, double* @SYS_OFFSET
	%vr23615 = fadd double %vr23616, 0x406DE00000000000

	; conv vr23615 => vr23617
	%vr23618 = call double @llvm.nearbyint.f64(double %vr23615)
	%vr23617 = fptoui double %vr23618 to i64

	; call POKE64()
	; arg THIS
	%vr23619 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23617
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23619, i64 %vr23617, i64 0 )

	; label .Lt_0F08
	br label %.Lt_0F08
.Lt_0F08:

	; label .Lt_0F04
	br label %.Lt_0F04
.Lt_0F04:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1337:

	; label .Lt_0F02
	br label %.Lt_0F02
.Lt_0F02:

	; conv ADR => vr23621
	%vr23622 = load i64, i64* %ADR.110
	%vr23621 = uitofp i64 %vr23622 to double

	; bop SYS_OFFSET + 253
	%vr23624 = load double, double* @SYS_OFFSET
	%vr23623 = fadd double %vr23624, 0x406FA00000000000

	; branchbop vr23621 <> vr23623
	%vr23625 = icmp ne double %vr23621, %vr23623
	br i1 %vr23625, label %.Lt_0F0A, label %.Lt_1338
.Lt_1338:

	; label .Lt_0F0B
	br label %.Lt_0F0B
.Lt_0F0B:

	; call fb_FileClose()
	; arg 1
	%vr23626 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1339:

	; label .Lt_0F0A
	br label %.Lt_0F0A
.Lt_0F0A:

	; conv ADR => vr23629
	%vr23630 = load i64, i64* %ADR.110
	%vr23629 = uitofp i64 %vr23630 to double

	; bop SYS_OFFSET + 254
	%vr23632 = load double, double* @SYS_OFFSET
	%vr23631 = fadd double %vr23632, 0x406FC00000000000

	; branchbop vr23629 <> vr23631
	%vr23633 = icmp ne double %vr23629, %vr23631
	br i1 %vr23633, label %.Lt_0F0C, label %.Lt_133A
.Lt_133A:

	; label .Lt_0F0D
	br label %.Lt_0F0D
.Lt_0F0D:
	%vr23635 = load i64, i64* %V.111
	%vr23634 = bitcast i64 %vr23635 to i64

	; call fb_CHR()
	; arg 1
	; arg vr23634
	%vr23638 = inttoptr i64 %vr23634 to i8*
	%vr23636 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr23638 )

	; call fb_StrLcase2()
	; arg vr23636
	%vr23640 = bitcast %FBSTRING* %vr23636 to %FBSTRING*
	; arg 0
	%vr23639 = call %FBSTRING* @fb_StrLcase2( %FBSTRING* %vr23640, i32 0 )
	%vr23642 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrConcatAssign()
	; arg vr23642
	; arg -1
	; arg vr23639
	%vr23645 = bitcast %FBSTRING* %vr23639 to i8*
	; arg -1
	; arg 0
	%vr23643 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr23642, i64 -1, i8* %vr23645, i64 -1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_133B:

	; label .Lt_0F0C
	br label %.Lt_0F0C
.Lt_0F0C:

	; conv ADR => vr23649
	%vr23650 = load i64, i64* %ADR.110
	%vr23649 = uitofp i64 %vr23650 to double

	; bop SYS_OFFSET + 255
	%vr23652 = load double, double* @SYS_OFFSET
	%vr23651 = fadd double %vr23652, 0x406FE00000000000

	; branchbop vr23649 <> vr23651
	%vr23653 = icmp ne double %vr23649, %vr23651
	br i1 %vr23653, label %.Lt_0F0E, label %.Lt_133C
.Lt_133C:

	; label .Lt_0F0F
	br label %.Lt_0F0F
.Lt_0F0F:

	; bop SYS_OFFSET + 161
	%vr23655 = load double, double* @SYS_OFFSET
	%vr23654 = fadd double %vr23655, 0x4064200000000000

	; conv vr23654 => vr23656
	%vr23657 = call double @llvm.nearbyint.f64(double %vr23654)
	%vr23656 = fptoui double %vr23657 to i64

	; call POKE64()
	; arg THIS
	%vr23658 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23656
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23658, i64 %vr23656, i64 0 )
	%vr23659 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr23660 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr23660
	; arg -1
	; arg vr23659
	; arg 1
	; arg 0
	%vr23661 = call %FBSTRING* @fb_StrAssign( i8* %vr23660, i64 -1, i8* %vr23659, i64 1, i32 0 )

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_133D:

	; label .Lt_0F0E
	br label %.Lt_0F0E
.Lt_0F0E:

	; conv ADR => vr23666
	%vr23667 = load i64, i64* %ADR.110
	%vr23666 = uitofp i64 %vr23667 to double

	; bop SYS_OFFSET + 299
	%vr23669 = load double, double* @SYS_OFFSET
	%vr23668 = fadd double %vr23669, 0x4072B00000000000

	; conv vr23668 => vr23670
	%vr23671 = call double @llvm.nearbyint.f64(double %vr23668)
	%vr23670 = fptosi double %vr23671 to i64

	; bop vr23670 SHL 3
	%vr23672 = shl i64 %vr23670, 3

	; bop THIS + vr23672
	%vr23674 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23675 = inttoptr i64 %vr23672 to %MEMORY_T*
	%vr23673 = add %MEMORY_T* %vr23674, %vr23675

	; branchbop vr23666 < vr23673
	%vr23677 = ptrtoint %MEMORY_T* %vr23673 to i64
	%vr23678 = inttoptr i64 %vr23677 to double*
	%vr23679 = load double, double* %vr23678
	%vr23676 = icmp slt double %vr23666, %vr23679
	br i1 %vr23676, label %.Lt_0F10, label %.Lt_133E
.Lt_133E:

	; conv ADR => vr23681
	%vr23682 = load i64, i64* %ADR.110
	%vr23681 = uitofp i64 %vr23682 to double

	; bop SYS_OFFSET + 299
	%vr23684 = load double, double* @SYS_OFFSET
	%vr23683 = fadd double %vr23684, 0x4072B00000000000

	; conv vr23683 => vr23685
	%vr23686 = call double @llvm.nearbyint.f64(double %vr23683)
	%vr23685 = fptosi double %vr23686 to i64

	; bop vr23685 SHL 3
	%vr23687 = shl i64 %vr23685, 3

	; bop THIS + vr23687
	%vr23689 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23690 = inttoptr i64 %vr23687 to %MEMORY_T*
	%vr23688 = add %MEMORY_T* %vr23689, %vr23690

	; bop vr23688 + 1023
	%vr23692 = ptrtoint %MEMORY_T* %vr23688 to i64
	%vr23693 = inttoptr i64 %vr23692 to double*
	%vr23694 = load double, double* %vr23693
	%vr23691 = fadd double %vr23694, 0x408FF80000000000

	; branchbop vr23681 > vr23691
	%vr23695 = icmp sgt double %vr23681, %vr23691
	br i1 %vr23695, label %.Lt_0F10, label %.Lt_133F
.Lt_133F:

	; label .Lt_0F11
	br label %.Lt_0F11
.Lt_0F11:

	; conv ADR => vr23697
	%vr23698 = load i64, i64* %ADR.110
	%vr23697 = uitofp i64 %vr23698 to double

	; bop SYS_OFFSET + 299
	%vr23700 = load double, double* @SYS_OFFSET
	%vr23699 = fadd double %vr23700, 0x4072B00000000000

	; conv vr23699 => vr23701
	%vr23702 = call double @llvm.nearbyint.f64(double %vr23699)
	%vr23701 = fptosi double %vr23702 to i64

	; bop vr23701 SHL 3
	%vr23703 = shl i64 %vr23701, 3

	; bop THIS + vr23703
	%vr23705 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23706 = inttoptr i64 %vr23703 to %MEMORY_T*
	%vr23704 = add %MEMORY_T* %vr23705, %vr23706

	; bop vr23697 - vr23704
	%vr23708 = ptrtoint %MEMORY_T* %vr23704 to i64
	%vr23709 = inttoptr i64 %vr23708 to double*
	%vr23710 = load double, double* %vr23709
	%vr23707 = fsub double %vr23697, %vr23710

	; conv vr23707 => vr23711
	%vr23712 = call double @llvm.nearbyint.f64(double %vr23707)
	%vr23711 = fptoui double %vr23712 to i64

	; store ADR := vr23711
	store i64 %vr23711, i64* %ADR.110

	; conv V => vr23713
	%vr23714 = load i64, i64* %V.111
	%vr23713 = uitofp i64 %vr23714 to double

	; store C := vr23713
	store double %vr23713, double* @C

	; conv C => vr23715
	%vr23717 = load double, double* @C
	%vr23716 = call double @llvm.nearbyint.f64(double %vr23717)
	%vr23715 = fptosi double %vr23716 to i64

	; bop vr23715 SHL 3
	%vr23718 = shl i64 %vr23715, 3

	; conv vr23718 => vr23719
	%vr23719 = sitofp i64 %vr23718 to double

	; store C := vr23719
	store double %vr23719, double* @C

	; bop SYS_OFFSET + 232
	%vr23721 = load double, double* @SYS_OFFSET
	%vr23720 = fadd double %vr23721, 0x406D000000000000

	; conv vr23720 => vr23722
	%vr23723 = call double @llvm.nearbyint.f64(double %vr23720)
	%vr23722 = fptosi double %vr23723 to i64

	; bop vr23722 SHL 3
	%vr23724 = shl i64 %vr23722, 3

	; bop THIS + vr23724
	%vr23726 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23727 = inttoptr i64 %vr23724 to %MEMORY_T*
	%vr23725 = add %MEMORY_T* %vr23726, %vr23727

	; bop C + vr23725
	%vr23729 = load double, double* @C
	%vr23730 = ptrtoint %MEMORY_T* %vr23725 to i64
	%vr23731 = inttoptr i64 %vr23730 to double*
	%vr23732 = load double, double* %vr23731
	%vr23728 = fadd double %vr23729, %vr23732

	; store C := vr23728
	store double %vr23728, double* @C

	; conv RVS => vr23733
	%vr23734 = load i16, i16* @RVS
	%vr23733 = sext i16 %vr23734 to i64

	; bop vr23733 SHL 3
	%vr23735 = shl i64 %vr23733, 3

	; bop THIS + vr23735
	%vr23737 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23738 = inttoptr i64 %vr23735 to %MEMORY_T*
	%vr23736 = add %MEMORY_T* %vr23737, %vr23738

	; branchbop vr23736 == 0
	%vr23740 = ptrtoint %MEMORY_T* %vr23736 to i64
	%vr23741 = inttoptr i64 %vr23740 to double*
	%vr23742 = load double, double* %vr23741
	%vr23739 = icmp eq double %vr23742, 0x0000000000000000
	br i1 %vr23739, label %.Lt_0F13, label %.Lt_1340
.Lt_1340:

	; conv C => vr23743
	%vr23745 = load double, double* @C
	%vr23744 = call double @llvm.nearbyint.f64(double %vr23745)
	%vr23743 = fptosi double %vr23744 to i64

	; bop vr23743 AND 255
	%vr23746 = and i64 %vr23743, 255

	; conv vr23746 => vr23747
	%vr23747 = sitofp i64 %vr23746 to double

	; store C := vr23747
	store double %vr23747, double* @C

	; label .Lt_0F13
	br label %.Lt_0F13
.Lt_0F13:

	; call fb_GfxLock()
	call void @fb_GfxLock(  )

	; bop SYS_OFFSET + 231
	%vr23749 = load double, double* @SYS_OFFSET
	%vr23748 = fadd double %vr23749, 0x406CE00000000000

	; conv vr23748 => vr23750
	%vr23751 = call double @llvm.nearbyint.f64(double %vr23748)
	%vr23750 = fptosi double %vr23751 to i64

	; bop vr23750 SHL 3
	%vr23752 = shl i64 %vr23750, 3

	; bop THIS + vr23752
	%vr23754 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23755 = inttoptr i64 %vr23752 to %MEMORY_T*
	%vr23753 = add %MEMORY_T* %vr23754, %vr23755

	; branchbop vr23753 <> 0
	%vr23757 = ptrtoint %MEMORY_T* %vr23753 to i64
	%vr23758 = inttoptr i64 %vr23757 to double*
	%vr23759 = load double, double* %vr23758
	%vr23756 = icmp ne double %vr23759, 0x0000000000000000
	br i1 %vr23756, label %.Lt_0F15, label %.Lt_1341
.Lt_1341:

	; bop ADR MOD 40
	%vr23762 = load i64, i64* %ADR.110
	%vr23761 = srem i64 %vr23762, 40

	; conv vr23761 => vr23764
	%vr23764 = uitofp i64 %vr23761 to double

	; store XS := vr23764
	store double %vr23764, double* @XS

	; conv XS => vr23765
	%vr23767 = load double, double* @XS
	%vr23766 = call double @llvm.nearbyint.f64(double %vr23767)
	%vr23765 = fptosi double %vr23766 to i64

	; bop vr23765 SHL 3
	%vr23768 = shl i64 %vr23765, 3

	; conv vr23768 => vr23769
	%vr23769 = sitofp i64 %vr23768 to double

	; store XS := vr23769
	store double %vr23769, double* @XS

	; bop XS + 24.5
	%vr23771 = load double, double* @XS
	%vr23770 = fadd double %vr23771, 0x4038800000000000

	; store XS := vr23770
	store double %vr23770, double* @XS

	; bop ADR \ 40
	%vr23774 = load i64, i64* %ADR.110
	%vr23773 = sdiv i64 %vr23774, 40

	; conv vr23773 => vr23776
	%vr23776 = uitofp i64 %vr23773 to double

	; store YS := vr23776
	store double %vr23776, double* @YS

	; conv YS => vr23777
	%vr23779 = load double, double* @YS
	%vr23778 = call double @llvm.nearbyint.f64(double %vr23779)
	%vr23777 = fptosi double %vr23778 to i64

	; bop vr23777 SHL 3
	%vr23780 = shl i64 %vr23777, 3

	; conv vr23780 => vr23781
	%vr23781 = sitofp i64 %vr23780 to double

	; store YS := vr23781
	store double %vr23781, double* @YS

	; bop YS + 24.5
	%vr23783 = load double, double* @YS
	%vr23782 = fadd double %vr23783, 0x4038800000000000

	; store YS := vr23782
	store double %vr23782, double* @YS

	; localvar LT_0F16
	%LT_0F16.198 = alloca double

	; store Y := 0
	store double 0x0000000000000000, double* @Y

	; bop SYS_OFFSET + 233
	%vr23785 = load double, double* @SYS_OFFSET
	%vr23784 = fadd double %vr23785, 0x406D200000000000

	; conv vr23784 => vr23786
	%vr23787 = call double @llvm.nearbyint.f64(double %vr23784)
	%vr23786 = fptosi double %vr23787 to i64

	; bop vr23786 SHL 3
	%vr23788 = shl i64 %vr23786, 3

	; bop THIS + vr23788
	%vr23790 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23791 = inttoptr i64 %vr23788 to %MEMORY_T*
	%vr23789 = add %MEMORY_T* %vr23790, %vr23791

	; store LT_0F16 := vr23789
	%vr23792 = ptrtoint %MEMORY_T* %vr23789 to i64
	%vr23793 = inttoptr i64 %vr23792 to double*
	%vr23794 = load double, double* %vr23793
	store double %vr23794, double* %LT_0F16.198

	; goto .Lt_0F17
	br label %.Lt_0F17
.Lt_1342:

	; label .Lt_0F1A
	br label %.Lt_0F1A
.Lt_0F1A:

	; localvar LT_0F1B
	%LT_0F1B.199 = alloca double

	; store X := 0
	store double 0x0000000000000000, double* @X

	; bop SYS_OFFSET + 234
	%vr23796 = load double, double* @SYS_OFFSET
	%vr23795 = fadd double %vr23796, 0x406D400000000000

	; conv vr23795 => vr23797
	%vr23798 = call double @llvm.nearbyint.f64(double %vr23795)
	%vr23797 = fptosi double %vr23798 to i64

	; bop vr23797 SHL 3
	%vr23799 = shl i64 %vr23797, 3

	; bop THIS + vr23799
	%vr23801 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23802 = inttoptr i64 %vr23799 to %MEMORY_T*
	%vr23800 = add %MEMORY_T* %vr23801, %vr23802

	; store LT_0F1B := vr23800
	%vr23803 = ptrtoint %MEMORY_T* %vr23800 to i64
	%vr23804 = inttoptr i64 %vr23803 to double*
	%vr23805 = load double, double* %vr23804
	store double %vr23805, double* %LT_0F1B.199

	; goto .Lt_0F1C
	br label %.Lt_0F1C
.Lt_1343:

	; label .Lt_0F1F
	br label %.Lt_0F1F
.Lt_0F1F:

	; bop XS + X
	%vr23807 = load double, double* @XS
	%vr23808 = load double, double* @X
	%vr23806 = fadd double %vr23807, %vr23808

	; bop vr23806 * 5
	%vr23809 = fmul double %vr23806, 0x4014000000000000

	; bop SYS_OFFSET + 203
	%vr23811 = load double, double* @SYS_OFFSET
	%vr23810 = fadd double %vr23811, 0x4069600000000000

	; conv vr23810 => vr23812
	%vr23813 = call double @llvm.nearbyint.f64(double %vr23810)
	%vr23812 = fptosi double %vr23813 to i64

	; bop vr23812 SHL 3
	%vr23814 = shl i64 %vr23812, 3

	; bop THIS + vr23814
	%vr23816 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23817 = inttoptr i64 %vr23814 to %MEMORY_T*
	%vr23815 = add %MEMORY_T* %vr23816, %vr23817

	; store vr23815 := vr23809
	%vr23818 = ptrtoint %MEMORY_T* %vr23815 to i64
	%vr23819 = inttoptr i64 %vr23818 to double*
	store double %vr23809, double* %vr23819

	; bop YS + Y
	%vr23821 = load double, double* @YS
	%vr23822 = load double, double* @Y
	%vr23820 = fadd double %vr23821, %vr23822

	; bop vr23820 * 4
	%vr23823 = fmul double %vr23820, 0x4010000000000000

	; bop SYS_OFFSET + 204
	%vr23825 = load double, double* @SYS_OFFSET
	%vr23824 = fadd double %vr23825, 0x4069800000000000

	; conv vr23824 => vr23826
	%vr23827 = call double @llvm.nearbyint.f64(double %vr23824)
	%vr23826 = fptosi double %vr23827 to i64

	; bop vr23826 SHL 3
	%vr23828 = shl i64 %vr23826, 3

	; bop THIS + vr23828
	%vr23830 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23831 = inttoptr i64 %vr23828 to %MEMORY_T*
	%vr23829 = add %MEMORY_T* %vr23830, %vr23831

	; store vr23829 := vr23823
	%vr23832 = ptrtoint %MEMORY_T* %vr23829 to i64
	%vr23833 = inttoptr i64 %vr23832 to double*
	store double %vr23823, double* %vr23833

	; bop XS + X
	%vr23835 = load double, double* @XS
	%vr23836 = load double, double* @X
	%vr23834 = fadd double %vr23835, %vr23836

	; bop vr23834 * 5
	%vr23837 = fmul double %vr23834, 0x4014000000000000

	; bop vr23837 + 7
	%vr23838 = fadd double %vr23837, 0x401C000000000000

	; bop SYS_OFFSET + 206
	%vr23840 = load double, double* @SYS_OFFSET
	%vr23839 = fadd double %vr23840, 0x4069C00000000000

	; conv vr23839 => vr23841
	%vr23842 = call double @llvm.nearbyint.f64(double %vr23839)
	%vr23841 = fptosi double %vr23842 to i64

	; bop vr23841 SHL 3
	%vr23843 = shl i64 %vr23841, 3

	; bop THIS + vr23843
	%vr23845 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23846 = inttoptr i64 %vr23843 to %MEMORY_T*
	%vr23844 = add %MEMORY_T* %vr23845, %vr23846

	; store vr23844 := vr23838
	%vr23847 = ptrtoint %MEMORY_T* %vr23844 to i64
	%vr23848 = inttoptr i64 %vr23847 to double*
	store double %vr23838, double* %vr23848

	; bop YS + Y
	%vr23850 = load double, double* @YS
	%vr23851 = load double, double* @Y
	%vr23849 = fadd double %vr23850, %vr23851

	; bop vr23849 * 4
	%vr23852 = fmul double %vr23849, 0x4010000000000000

	; bop vr23852 + 4
	%vr23853 = fadd double %vr23852, 0x4010000000000000

	; bop SYS_OFFSET + 207
	%vr23855 = load double, double* @SYS_OFFSET
	%vr23854 = fadd double %vr23855, 0x4069E00000000000

	; conv vr23854 => vr23856
	%vr23857 = call double @llvm.nearbyint.f64(double %vr23854)
	%vr23856 = fptosi double %vr23857 to i64

	; bop vr23856 SHL 3
	%vr23858 = shl i64 %vr23856, 3

	; bop THIS + vr23858
	%vr23860 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23861 = inttoptr i64 %vr23858 to %MEMORY_T*
	%vr23859 = add %MEMORY_T* %vr23860, %vr23861

	; store vr23859 := vr23853
	%vr23862 = ptrtoint %MEMORY_T* %vr23859 to i64
	%vr23863 = inttoptr i64 %vr23862 to double*
	store double %vr23853, double* %vr23863

	; bop SYS_OFFSET + 252
	%vr23865 = load double, double* @SYS_OFFSET
	%vr23864 = fadd double %vr23865, 0x406F800000000000

	; conv vr23864 => vr23866
	%vr23867 = call double @llvm.nearbyint.f64(double %vr23864)
	%vr23866 = fptoui double %vr23867 to i64

	; call POKE64()
	; arg THIS
	%vr23868 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr23866
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr23868, i64 %vr23866, i64 0 )

	; label .Lt_0F1D
	br label %.Lt_0F1D
.Lt_0F1D:

	; bop X + 1
	%vr23870 = load double, double* @X
	%vr23869 = fadd double %vr23870, 0x3FF0000000000000

	; store X := vr23869
	store double %vr23869, double* @X

	; label .Lt_0F1C
	br label %.Lt_0F1C
.Lt_0F1C:

	; branchbop X <= LT_0F1B
	%vr23872 = load double, double* @X
	%vr23873 = load double, double* %LT_0F1B.199
	%vr23871 = icmp sle double %vr23872, %vr23873
	br i1 %vr23871, label %.Lt_0F1F, label %.Lt_1344
.Lt_1344:

	; label .Lt_0F1E
	br label %.Lt_0F1E
.Lt_0F1E:

	; bop C + 1
	%vr23875 = load double, double* @C
	%vr23874 = fadd double %vr23875, 0x3FF0000000000000

	; store C := vr23874
	store double %vr23874, double* @C

	; label .Lt_0F18
	br label %.Lt_0F18
.Lt_0F18:

	; bop Y + 1
	%vr23877 = load double, double* @Y
	%vr23876 = fadd double %vr23877, 0x3FF0000000000000

	; store Y := vr23876
	store double %vr23876, double* @Y

	; label .Lt_0F17
	br label %.Lt_0F17
.Lt_0F17:

	; branchbop Y <= LT_0F16
	%vr23879 = load double, double* @Y
	%vr23880 = load double, double* %LT_0F16.198
	%vr23878 = icmp sle double %vr23879, %vr23880
	br i1 %vr23878, label %.Lt_0F1A, label %.Lt_1345
.Lt_1345:

	; label .Lt_0F19
	br label %.Lt_0F19
.Lt_0F19:

	; bop YS + 8
	%vr23882 = load double, double* @YS
	%vr23881 = fadd double %vr23882, 0x4020000000000000

	; conv vr23881 => vr23883
	%vr23884 = call double @llvm.nearbyint.f64(double %vr23881)
	%vr23883 = fptosi double %vr23884 to i32

	; conv YS => vr23885
	%vr23887 = load double, double* @YS
	%vr23886 = call double @llvm.nearbyint.f64(double %vr23887)
	%vr23885 = fptosi double %vr23886 to i32

	; call fb_GfxUnlock()
	; arg vr23885
	; arg vr23883
	call void @fb_GfxUnlock( i32 %vr23885, i32 %vr23883 )

	; goto .Lt_0F14
	br label %.Lt_0F14
.Lt_1346:

	; label .Lt_0F15
	br label %.Lt_0F15
.Lt_0F15:

	; bop SYS_OFFSET + 231
	%vr23889 = load double, double* @SYS_OFFSET
	%vr23888 = fadd double %vr23889, 0x406CE00000000000

	; conv vr23888 => vr23890
	%vr23891 = call double @llvm.nearbyint.f64(double %vr23888)
	%vr23890 = fptosi double %vr23891 to i64

	; bop vr23890 SHL 3
	%vr23892 = shl i64 %vr23890, 3

	; bop THIS + vr23892
	%vr23894 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23895 = inttoptr i64 %vr23892 to %MEMORY_T*
	%vr23893 = add %MEMORY_T* %vr23894, %vr23895

	; branchbop vr23893 <> 1
	%vr23897 = ptrtoint %MEMORY_T* %vr23893 to i64
	%vr23898 = inttoptr i64 %vr23897 to double*
	%vr23899 = load double, double* %vr23898
	%vr23896 = icmp ne double %vr23899, 0x3FF0000000000000
	br i1 %vr23896, label %.Lt_0F20, label %.Lt_1347
.Lt_1347:

	; bop ADR MOD 40
	%vr23902 = load i64, i64* %ADR.110
	%vr23901 = srem i64 %vr23902, 40

	; conv vr23901 => vr23904
	%vr23904 = uitofp i64 %vr23901 to double

	; store XS := vr23904
	store double %vr23904, double* @XS

	; conv XS => vr23905
	%vr23907 = load double, double* @XS
	%vr23906 = call double @llvm.nearbyint.f64(double %vr23907)
	%vr23905 = fptosi double %vr23906 to i64

	; bop vr23905 SHL 3
	%vr23908 = shl i64 %vr23905, 3

	; conv vr23908 => vr23909
	%vr23909 = sitofp i64 %vr23908 to double

	; store XS := vr23909
	store double %vr23909, double* @XS

	; bop XS + 32
	%vr23911 = load double, double* @XS
	%vr23910 = fadd double %vr23911, 0x4040000000000000

	; store XS := vr23910
	store double %vr23910, double* @XS

	; bop ADR \ 40
	%vr23914 = load i64, i64* %ADR.110
	%vr23913 = sdiv i64 %vr23914, 40

	; conv vr23913 => vr23916
	%vr23916 = uitofp i64 %vr23913 to double

	; store YS := vr23916
	store double %vr23916, double* @YS

	; conv YS => vr23917
	%vr23919 = load double, double* @YS
	%vr23918 = call double @llvm.nearbyint.f64(double %vr23919)
	%vr23917 = fptosi double %vr23918 to i64

	; bop vr23917 SHL 3
	%vr23920 = shl i64 %vr23917, 3

	; conv vr23920 => vr23921
	%vr23921 = sitofp i64 %vr23920 to double

	; store YS := vr23921
	store double %vr23921, double* @YS

	; bop YS + 32
	%vr23923 = load double, double* @YS
	%vr23922 = fadd double %vr23923, 0x4040000000000000

	; store YS := vr23922
	store double %vr23922, double* @YS

	; bop SYS_OFFSET + 233
	%vr23925 = load double, double* @SYS_OFFSET
	%vr23924 = fadd double %vr23925, 0x406D200000000000

	; conv vr23924 => vr23926
	%vr23927 = call double @llvm.nearbyint.f64(double %vr23924)
	%vr23926 = fptosi double %vr23927 to i64

	; bop vr23926 SHL 3
	%vr23928 = shl i64 %vr23926, 3

	; bop THIS + vr23928
	%vr23930 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23931 = inttoptr i64 %vr23928 to %MEMORY_T*
	%vr23929 = add %MEMORY_T* %vr23930, %vr23931

	; store Y := vr23929
	%vr23932 = ptrtoint %MEMORY_T* %vr23929 to i64
	%vr23933 = inttoptr i64 %vr23932 to double*
	%vr23934 = load double, double* %vr23933
	store double %vr23934, double* @Y

	; goto .Lt_0F21
	br label %.Lt_0F21
.Lt_1348:

	; label .Lt_0F24
	br label %.Lt_0F24
.Lt_0F24:

	; localvar LT_0F25
	%LT_0F25.200 = alloca double

	; store X := 0
	store double 0x0000000000000000, double* @X

	; bop SYS_OFFSET + 234
	%vr23936 = load double, double* @SYS_OFFSET
	%vr23935 = fadd double %vr23936, 0x406D400000000000

	; conv vr23935 => vr23937
	%vr23938 = call double @llvm.nearbyint.f64(double %vr23935)
	%vr23937 = fptosi double %vr23938 to i64

	; bop vr23937 SHL 3
	%vr23939 = shl i64 %vr23937, 3

	; bop THIS + vr23939
	%vr23941 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23942 = inttoptr i64 %vr23939 to %MEMORY_T*
	%vr23940 = add %MEMORY_T* %vr23941, %vr23942

	; store LT_0F25 := vr23940
	%vr23943 = ptrtoint %MEMORY_T* %vr23940 to i64
	%vr23944 = inttoptr i64 %vr23943 to double*
	%vr23945 = load double, double* %vr23944
	store double %vr23945, double* %LT_0F25.200

	; goto .Lt_0F26
	br label %.Lt_0F26
.Lt_1349:

	; label .Lt_0F29
	br label %.Lt_0F29
.Lt_0F29:

	; bop XS - X
	%vr23947 = load double, double* @XS
	%vr23948 = load double, double* @X
	%vr23946 = fsub double %vr23947, %vr23948

	; bop vr23946 * 5
	%vr23949 = fmul double %vr23946, 0x4014000000000000

	; bop vr23949 + 2
	%vr23950 = fadd double %vr23949, 0x4000000000000000

	; bop SYS_OFFSET + 206
	%vr23952 = load double, double* @SYS_OFFSET
	%vr23951 = fadd double %vr23952, 0x4069C00000000000

	; conv vr23951 => vr23953
	%vr23954 = call double @llvm.nearbyint.f64(double %vr23951)
	%vr23953 = fptosi double %vr23954 to i64

	; bop vr23953 SHL 3
	%vr23955 = shl i64 %vr23953, 3

	; bop THIS + vr23955
	%vr23957 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23958 = inttoptr i64 %vr23955 to %MEMORY_T*
	%vr23956 = add %MEMORY_T* %vr23957, %vr23958

	; store vr23956 := vr23950
	%vr23959 = ptrtoint %MEMORY_T* %vr23956 to i64
	%vr23960 = inttoptr i64 %vr23959 to double*
	store double %vr23950, double* %vr23960

	; bop YS - Y
	%vr23962 = load double, double* @YS
	%vr23963 = load double, double* @Y
	%vr23961 = fsub double %vr23962, %vr23963

	; bop vr23961 * 4
	%vr23964 = fmul double %vr23961, 0x4010000000000000

	; bop vr23964 + 2
	%vr23965 = fadd double %vr23964, 0x4000000000000000

	; bop SYS_OFFSET + 207
	%vr23967 = load double, double* @SYS_OFFSET
	%vr23966 = fadd double %vr23967, 0x4069E00000000000

	; conv vr23966 => vr23968
	%vr23969 = call double @llvm.nearbyint.f64(double %vr23966)
	%vr23968 = fptosi double %vr23969 to i64

	; bop vr23968 SHL 3
	%vr23970 = shl i64 %vr23968, 3

	; bop THIS + vr23970
	%vr23972 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23973 = inttoptr i64 %vr23970 to %MEMORY_T*
	%vr23971 = add %MEMORY_T* %vr23972, %vr23973

	; store vr23971 := vr23965
	%vr23974 = ptrtoint %MEMORY_T* %vr23971 to i64
	%vr23975 = inttoptr i64 %vr23974 to double*
	store double %vr23965, double* %vr23975

	; bop XS - X
	%vr23977 = load double, double* @XS
	%vr23978 = load double, double* @X
	%vr23976 = fsub double %vr23977, %vr23978

	; bop vr23976 * 5
	%vr23979 = fmul double %vr23976, 0x4014000000000000

	; bop vr23979 + -2
	%vr23980 = fadd double %vr23979, 0xC000000000000000

	; bop SYS_OFFSET + 203
	%vr23982 = load double, double* @SYS_OFFSET
	%vr23981 = fadd double %vr23982, 0x4069600000000000

	; conv vr23981 => vr23983
	%vr23984 = call double @llvm.nearbyint.f64(double %vr23981)
	%vr23983 = fptosi double %vr23984 to i64

	; bop vr23983 SHL 3
	%vr23985 = shl i64 %vr23983, 3

	; bop THIS + vr23985
	%vr23987 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr23988 = inttoptr i64 %vr23985 to %MEMORY_T*
	%vr23986 = add %MEMORY_T* %vr23987, %vr23988

	; store vr23986 := vr23980
	%vr23989 = ptrtoint %MEMORY_T* %vr23986 to i64
	%vr23990 = inttoptr i64 %vr23989 to double*
	store double %vr23980, double* %vr23990

	; bop YS - Y
	%vr23992 = load double, double* @YS
	%vr23993 = load double, double* @Y
	%vr23991 = fsub double %vr23992, %vr23993

	; bop vr23991 * 4
	%vr23994 = fmul double %vr23991, 0x4010000000000000

	; bop vr23994 + -2
	%vr23995 = fadd double %vr23994, 0xC000000000000000

	; bop SYS_OFFSET + 204
	%vr23997 = load double, double* @SYS_OFFSET
	%vr23996 = fadd double %vr23997, 0x4069800000000000

	; conv vr23996 => vr23998
	%vr23999 = call double @llvm.nearbyint.f64(double %vr23996)
	%vr23998 = fptosi double %vr23999 to i64

	; bop vr23998 SHL 3
	%vr24000 = shl i64 %vr23998, 3

	; bop THIS + vr24000
	%vr24002 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24003 = inttoptr i64 %vr24000 to %MEMORY_T*
	%vr24001 = add %MEMORY_T* %vr24002, %vr24003

	; store vr24001 := vr23995
	%vr24004 = ptrtoint %MEMORY_T* %vr24001 to i64
	%vr24005 = inttoptr i64 %vr24004 to double*
	store double %vr23995, double* %vr24005

	; bop SYS_OFFSET + 252
	%vr24007 = load double, double* @SYS_OFFSET
	%vr24006 = fadd double %vr24007, 0x406F800000000000

	; conv vr24006 => vr24008
	%vr24009 = call double @llvm.nearbyint.f64(double %vr24006)
	%vr24008 = fptoui double %vr24009 to i64

	; call POKE64()
	; arg THIS
	%vr24010 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr24008
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr24010, i64 %vr24008, i64 0 )

	; label .Lt_0F27
	br label %.Lt_0F27
.Lt_0F27:

	; bop X + 1
	%vr24012 = load double, double* @X
	%vr24011 = fadd double %vr24012, 0x3FF0000000000000

	; store X := vr24011
	store double %vr24011, double* @X

	; label .Lt_0F26
	br label %.Lt_0F26
.Lt_0F26:

	; branchbop X <= LT_0F25
	%vr24014 = load double, double* @X
	%vr24015 = load double, double* %LT_0F25.200
	%vr24013 = icmp sle double %vr24014, %vr24015
	br i1 %vr24013, label %.Lt_0F29, label %.Lt_134A
.Lt_134A:

	; label .Lt_0F28
	br label %.Lt_0F28
.Lt_0F28:

	; bop C + 1
	%vr24017 = load double, double* @C
	%vr24016 = fadd double %vr24017, 0x3FF0000000000000

	; store C := vr24016
	store double %vr24016, double* @C

	; label .Lt_0F22
	br label %.Lt_0F22
.Lt_0F22:

	; bop Y + -1
	%vr24019 = load double, double* @Y
	%vr24018 = fadd double %vr24019, 0xBFF0000000000000

	; store Y := vr24018
	store double %vr24018, double* @Y

	; label .Lt_0F21
	br label %.Lt_0F21
.Lt_0F21:

	; branchbop Y >= 0
	%vr24021 = load double, double* @Y
	%vr24020 = icmp sge double %vr24021, 0x0000000000000000
	br i1 %vr24020, label %.Lt_0F24, label %.Lt_134B
.Lt_134B:

	; label .Lt_0F23
	br label %.Lt_0F23
.Lt_0F23:

	; bop YS + 8
	%vr24023 = load double, double* @YS
	%vr24022 = fadd double %vr24023, 0x4020000000000000

	; conv vr24022 => vr24024
	%vr24025 = call double @llvm.nearbyint.f64(double %vr24022)
	%vr24024 = fptosi double %vr24025 to i32

	; conv YS => vr24026
	%vr24028 = load double, double* @YS
	%vr24027 = call double @llvm.nearbyint.f64(double %vr24028)
	%vr24026 = fptosi double %vr24027 to i32

	; call fb_GfxUnlock()
	; arg vr24026
	; arg vr24024
	call void @fb_GfxUnlock( i32 %vr24026, i32 %vr24024 )

	; goto .Lt_0F14
	br label %.Lt_0F14
.Lt_134C:

	; label .Lt_0F20
	br label %.Lt_0F20
.Lt_0F20:

	; bop SYS_OFFSET + 231
	%vr24030 = load double, double* @SYS_OFFSET
	%vr24029 = fadd double %vr24030, 0x406CE00000000000

	; conv vr24029 => vr24031
	%vr24032 = call double @llvm.nearbyint.f64(double %vr24029)
	%vr24031 = fptosi double %vr24032 to i64

	; bop vr24031 SHL 3
	%vr24033 = shl i64 %vr24031, 3

	; bop THIS + vr24033
	%vr24035 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24036 = inttoptr i64 %vr24033 to %MEMORY_T*
	%vr24034 = add %MEMORY_T* %vr24035, %vr24036

	; branchbop vr24034 <> 2
	%vr24038 = ptrtoint %MEMORY_T* %vr24034 to i64
	%vr24039 = inttoptr i64 %vr24038 to double*
	%vr24040 = load double, double* %vr24039
	%vr24037 = icmp ne double %vr24040, 0x4000000000000000
	br i1 %vr24037, label %.Lt_0F2A, label %.Lt_134D
.Lt_134D:

	; bop ADR MOD 40
	%vr24043 = load i64, i64* %ADR.110
	%vr24042 = srem i64 %vr24043, 40

	; conv vr24042 => vr24045
	%vr24045 = uitofp i64 %vr24042 to double

	; store XS := vr24045
	store double %vr24045, double* @XS

	; conv XS => vr24046
	%vr24048 = load double, double* @XS
	%vr24047 = call double @llvm.nearbyint.f64(double %vr24048)
	%vr24046 = fptosi double %vr24047 to i64

	; bop vr24046 SHL 3
	%vr24049 = shl i64 %vr24046, 3

	; conv vr24049 => vr24050
	%vr24050 = sitofp i64 %vr24049 to double

	; store XS := vr24050
	store double %vr24050, double* @XS

	; bop XS + 24.5
	%vr24052 = load double, double* @XS
	%vr24051 = fadd double %vr24052, 0x4038800000000000

	; store XS := vr24051
	store double %vr24051, double* @XS

	; bop ADR \ 40
	%vr24055 = load i64, i64* %ADR.110
	%vr24054 = sdiv i64 %vr24055, 40

	; conv vr24054 => vr24057
	%vr24057 = uitofp i64 %vr24054 to double

	; store YS := vr24057
	store double %vr24057, double* @YS

	; conv YS => vr24058
	%vr24060 = load double, double* @YS
	%vr24059 = call double @llvm.nearbyint.f64(double %vr24060)
	%vr24058 = fptosi double %vr24059 to i64

	; bop vr24058 SHL 3
	%vr24061 = shl i64 %vr24058, 3

	; conv vr24061 => vr24062
	%vr24062 = sitofp i64 %vr24061 to double

	; store YS := vr24062
	store double %vr24062, double* @YS

	; bop YS + 24.5
	%vr24064 = load double, double* @YS
	%vr24063 = fadd double %vr24064, 0x4038800000000000

	; store YS := vr24063
	store double %vr24063, double* @YS

	; localvar LT_0F2B
	%LT_0F2B.201 = alloca double

	; store Y := 0
	store double 0x0000000000000000, double* @Y

	; bop SYS_OFFSET + 233
	%vr24066 = load double, double* @SYS_OFFSET
	%vr24065 = fadd double %vr24066, 0x406D200000000000

	; conv vr24065 => vr24067
	%vr24068 = call double @llvm.nearbyint.f64(double %vr24065)
	%vr24067 = fptosi double %vr24068 to i64

	; bop vr24067 SHL 3
	%vr24069 = shl i64 %vr24067, 3

	; bop THIS + vr24069
	%vr24071 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24072 = inttoptr i64 %vr24069 to %MEMORY_T*
	%vr24070 = add %MEMORY_T* %vr24071, %vr24072

	; store LT_0F2B := vr24070
	%vr24073 = ptrtoint %MEMORY_T* %vr24070 to i64
	%vr24074 = inttoptr i64 %vr24073 to double*
	%vr24075 = load double, double* %vr24074
	store double %vr24075, double* %LT_0F2B.201

	; goto .Lt_0F2C
	br label %.Lt_0F2C
.Lt_134E:

	; label .Lt_0F2F
	br label %.Lt_0F2F
.Lt_0F2F:

	; localvar LT_0F30
	%LT_0F30.202 = alloca double

	; store X := 0
	store double 0x0000000000000000, double* @X

	; bop SYS_OFFSET + 234
	%vr24077 = load double, double* @SYS_OFFSET
	%vr24076 = fadd double %vr24077, 0x406D400000000000

	; conv vr24076 => vr24078
	%vr24079 = call double @llvm.nearbyint.f64(double %vr24076)
	%vr24078 = fptosi double %vr24079 to i64

	; bop vr24078 SHL 3
	%vr24080 = shl i64 %vr24078, 3

	; bop THIS + vr24080
	%vr24082 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24083 = inttoptr i64 %vr24080 to %MEMORY_T*
	%vr24081 = add %MEMORY_T* %vr24082, %vr24083

	; store LT_0F30 := vr24081
	%vr24084 = ptrtoint %MEMORY_T* %vr24081 to i64
	%vr24085 = inttoptr i64 %vr24084 to double*
	%vr24086 = load double, double* %vr24085
	store double %vr24086, double* %LT_0F30.202

	; goto .Lt_0F31
	br label %.Lt_0F31
.Lt_134F:

	; label .Lt_0F34
	br label %.Lt_0F34
.Lt_0F34:

	; bop XS + X
	%vr24088 = load double, double* @XS
	%vr24089 = load double, double* @X
	%vr24087 = fadd double %vr24088, %vr24089

	; bop vr24087 * 5
	%vr24090 = fmul double %vr24087, 0x4014000000000000

	; bop vr24090 / 2
	%vr24091 = fdiv double %vr24090, 0x4000000000000000

	; bop SYS_OFFSET + 227
	%vr24093 = load double, double* @SYS_OFFSET
	%vr24092 = fadd double %vr24093, 0x406C600000000000

	; conv vr24092 => vr24094
	%vr24095 = call double @llvm.nearbyint.f64(double %vr24092)
	%vr24094 = fptosi double %vr24095 to i64

	; bop vr24094 SHL 3
	%vr24096 = shl i64 %vr24094, 3

	; bop THIS + vr24096
	%vr24098 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24099 = inttoptr i64 %vr24096 to %MEMORY_T*
	%vr24097 = add %MEMORY_T* %vr24098, %vr24099

	; bop vr24091 + vr24097
	%vr24101 = ptrtoint %MEMORY_T* %vr24097 to i64
	%vr24102 = inttoptr i64 %vr24101 to double*
	%vr24103 = load double, double* %vr24102
	%vr24100 = fadd double %vr24091, %vr24103

	; bop SYS_OFFSET + 203
	%vr24105 = load double, double* @SYS_OFFSET
	%vr24104 = fadd double %vr24105, 0x4069600000000000

	; conv vr24104 => vr24106
	%vr24107 = call double @llvm.nearbyint.f64(double %vr24104)
	%vr24106 = fptosi double %vr24107 to i64

	; bop vr24106 SHL 3
	%vr24108 = shl i64 %vr24106, 3

	; bop THIS + vr24108
	%vr24110 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24111 = inttoptr i64 %vr24108 to %MEMORY_T*
	%vr24109 = add %MEMORY_T* %vr24110, %vr24111

	; store vr24109 := vr24100
	%vr24112 = ptrtoint %MEMORY_T* %vr24109 to i64
	%vr24113 = inttoptr i64 %vr24112 to double*
	store double %vr24100, double* %vr24113

	; bop YS + Y
	%vr24115 = load double, double* @YS
	%vr24116 = load double, double* @Y
	%vr24114 = fadd double %vr24115, %vr24116

	; bop vr24114 * 4
	%vr24117 = fmul double %vr24114, 0x4010000000000000

	; bop vr24117 / 2
	%vr24118 = fdiv double %vr24117, 0x4000000000000000

	; bop SYS_OFFSET + 228
	%vr24120 = load double, double* @SYS_OFFSET
	%vr24119 = fadd double %vr24120, 0x406C800000000000

	; conv vr24119 => vr24121
	%vr24122 = call double @llvm.nearbyint.f64(double %vr24119)
	%vr24121 = fptosi double %vr24122 to i64

	; bop vr24121 SHL 3
	%vr24123 = shl i64 %vr24121, 3

	; bop THIS + vr24123
	%vr24125 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24126 = inttoptr i64 %vr24123 to %MEMORY_T*
	%vr24124 = add %MEMORY_T* %vr24125, %vr24126

	; bop vr24118 + vr24124
	%vr24128 = ptrtoint %MEMORY_T* %vr24124 to i64
	%vr24129 = inttoptr i64 %vr24128 to double*
	%vr24130 = load double, double* %vr24129
	%vr24127 = fadd double %vr24118, %vr24130

	; bop SYS_OFFSET + 204
	%vr24132 = load double, double* @SYS_OFFSET
	%vr24131 = fadd double %vr24132, 0x4069800000000000

	; conv vr24131 => vr24133
	%vr24134 = call double @llvm.nearbyint.f64(double %vr24131)
	%vr24133 = fptosi double %vr24134 to i64

	; bop vr24133 SHL 3
	%vr24135 = shl i64 %vr24133, 3

	; bop THIS + vr24135
	%vr24137 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24138 = inttoptr i64 %vr24135 to %MEMORY_T*
	%vr24136 = add %MEMORY_T* %vr24137, %vr24138

	; store vr24136 := vr24127
	%vr24139 = ptrtoint %MEMORY_T* %vr24136 to i64
	%vr24140 = inttoptr i64 %vr24139 to double*
	store double %vr24127, double* %vr24140

	; bop XS + X
	%vr24142 = load double, double* @XS
	%vr24143 = load double, double* @X
	%vr24141 = fadd double %vr24142, %vr24143

	; bop vr24141 * 5
	%vr24144 = fmul double %vr24141, 0x4014000000000000

	; bop vr24144 + 7
	%vr24145 = fadd double %vr24144, 0x401C000000000000

	; bop vr24145 / 2
	%vr24146 = fdiv double %vr24145, 0x4000000000000000

	; bop SYS_OFFSET + 227
	%vr24148 = load double, double* @SYS_OFFSET
	%vr24147 = fadd double %vr24148, 0x406C600000000000

	; conv vr24147 => vr24149
	%vr24150 = call double @llvm.nearbyint.f64(double %vr24147)
	%vr24149 = fptosi double %vr24150 to i64

	; bop vr24149 SHL 3
	%vr24151 = shl i64 %vr24149, 3

	; bop THIS + vr24151
	%vr24153 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24154 = inttoptr i64 %vr24151 to %MEMORY_T*
	%vr24152 = add %MEMORY_T* %vr24153, %vr24154

	; bop vr24146 + vr24152
	%vr24156 = ptrtoint %MEMORY_T* %vr24152 to i64
	%vr24157 = inttoptr i64 %vr24156 to double*
	%vr24158 = load double, double* %vr24157
	%vr24155 = fadd double %vr24146, %vr24158

	; bop SYS_OFFSET + 206
	%vr24160 = load double, double* @SYS_OFFSET
	%vr24159 = fadd double %vr24160, 0x4069C00000000000

	; conv vr24159 => vr24161
	%vr24162 = call double @llvm.nearbyint.f64(double %vr24159)
	%vr24161 = fptosi double %vr24162 to i64

	; bop vr24161 SHL 3
	%vr24163 = shl i64 %vr24161, 3

	; bop THIS + vr24163
	%vr24165 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24166 = inttoptr i64 %vr24163 to %MEMORY_T*
	%vr24164 = add %MEMORY_T* %vr24165, %vr24166

	; store vr24164 := vr24155
	%vr24167 = ptrtoint %MEMORY_T* %vr24164 to i64
	%vr24168 = inttoptr i64 %vr24167 to double*
	store double %vr24155, double* %vr24168

	; bop YS + Y
	%vr24170 = load double, double* @YS
	%vr24171 = load double, double* @Y
	%vr24169 = fadd double %vr24170, %vr24171

	; bop vr24169 * 4
	%vr24172 = fmul double %vr24169, 0x4010000000000000

	; bop vr24172 + 4
	%vr24173 = fadd double %vr24172, 0x4010000000000000

	; bop vr24173 / 2
	%vr24174 = fdiv double %vr24173, 0x4000000000000000

	; bop SYS_OFFSET + 228
	%vr24176 = load double, double* @SYS_OFFSET
	%vr24175 = fadd double %vr24176, 0x406C800000000000

	; conv vr24175 => vr24177
	%vr24178 = call double @llvm.nearbyint.f64(double %vr24175)
	%vr24177 = fptosi double %vr24178 to i64

	; bop vr24177 SHL 3
	%vr24179 = shl i64 %vr24177, 3

	; bop THIS + vr24179
	%vr24181 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24182 = inttoptr i64 %vr24179 to %MEMORY_T*
	%vr24180 = add %MEMORY_T* %vr24181, %vr24182

	; bop vr24174 + vr24180
	%vr24184 = ptrtoint %MEMORY_T* %vr24180 to i64
	%vr24185 = inttoptr i64 %vr24184 to double*
	%vr24186 = load double, double* %vr24185
	%vr24183 = fadd double %vr24174, %vr24186

	; bop SYS_OFFSET + 207
	%vr24188 = load double, double* @SYS_OFFSET
	%vr24187 = fadd double %vr24188, 0x4069E00000000000

	; conv vr24187 => vr24189
	%vr24190 = call double @llvm.nearbyint.f64(double %vr24187)
	%vr24189 = fptosi double %vr24190 to i64

	; bop vr24189 SHL 3
	%vr24191 = shl i64 %vr24189, 3

	; bop THIS + vr24191
	%vr24193 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24194 = inttoptr i64 %vr24191 to %MEMORY_T*
	%vr24192 = add %MEMORY_T* %vr24193, %vr24194

	; store vr24192 := vr24183
	%vr24195 = ptrtoint %MEMORY_T* %vr24192 to i64
	%vr24196 = inttoptr i64 %vr24195 to double*
	store double %vr24183, double* %vr24196

	; bop SYS_OFFSET + 252
	%vr24198 = load double, double* @SYS_OFFSET
	%vr24197 = fadd double %vr24198, 0x406F800000000000

	; conv vr24197 => vr24199
	%vr24200 = call double @llvm.nearbyint.f64(double %vr24197)
	%vr24199 = fptoui double %vr24200 to i64

	; call POKE64()
	; arg THIS
	%vr24201 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr24199
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr24201, i64 %vr24199, i64 0 )

	; label .Lt_0F32
	br label %.Lt_0F32
.Lt_0F32:

	; bop X + 1
	%vr24203 = load double, double* @X
	%vr24202 = fadd double %vr24203, 0x3FF0000000000000

	; store X := vr24202
	store double %vr24202, double* @X

	; label .Lt_0F31
	br label %.Lt_0F31
.Lt_0F31:

	; branchbop X <= LT_0F30
	%vr24205 = load double, double* @X
	%vr24206 = load double, double* %LT_0F30.202
	%vr24204 = icmp sle double %vr24205, %vr24206
	br i1 %vr24204, label %.Lt_0F34, label %.Lt_1350
.Lt_1350:

	; label .Lt_0F33
	br label %.Lt_0F33
.Lt_0F33:

	; bop C + 1
	%vr24208 = load double, double* @C
	%vr24207 = fadd double %vr24208, 0x3FF0000000000000

	; store C := vr24207
	store double %vr24207, double* @C

	; label .Lt_0F2D
	br label %.Lt_0F2D
.Lt_0F2D:

	; bop Y + 1
	%vr24210 = load double, double* @Y
	%vr24209 = fadd double %vr24210, 0x3FF0000000000000

	; store Y := vr24209
	store double %vr24209, double* @Y

	; label .Lt_0F2C
	br label %.Lt_0F2C
.Lt_0F2C:

	; branchbop Y <= LT_0F2B
	%vr24212 = load double, double* @Y
	%vr24213 = load double, double* %LT_0F2B.201
	%vr24211 = icmp sle double %vr24212, %vr24213
	br i1 %vr24211, label %.Lt_0F2F, label %.Lt_1351
.Lt_1351:

	; label .Lt_0F2E
	br label %.Lt_0F2E
.Lt_0F2E:

	; bop YS + 8
	%vr24215 = load double, double* @YS
	%vr24214 = fadd double %vr24215, 0x4020000000000000

	; conv vr24214 => vr24216
	%vr24217 = call double @llvm.nearbyint.f64(double %vr24214)
	%vr24216 = fptosi double %vr24217 to i32

	; conv YS => vr24218
	%vr24220 = load double, double* @YS
	%vr24219 = call double @llvm.nearbyint.f64(double %vr24220)
	%vr24218 = fptosi double %vr24219 to i32

	; call fb_GfxUnlock()
	; arg vr24218
	; arg vr24216
	call void @fb_GfxUnlock( i32 %vr24218, i32 %vr24216 )

	; goto .Lt_0F14
	br label %.Lt_0F14
.Lt_1352:

	; label .Lt_0F2A
	br label %.Lt_0F2A
.Lt_0F2A:

	; bop SYS_OFFSET + 231
	%vr24222 = load double, double* @SYS_OFFSET
	%vr24221 = fadd double %vr24222, 0x406CE00000000000

	; conv vr24221 => vr24223
	%vr24224 = call double @llvm.nearbyint.f64(double %vr24221)
	%vr24223 = fptosi double %vr24224 to i64

	; bop vr24223 SHL 3
	%vr24225 = shl i64 %vr24223, 3

	; bop THIS + vr24225
	%vr24227 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24228 = inttoptr i64 %vr24225 to %MEMORY_T*
	%vr24226 = add %MEMORY_T* %vr24227, %vr24228

	; branchbop vr24226 <> 3
	%vr24230 = ptrtoint %MEMORY_T* %vr24226 to i64
	%vr24231 = inttoptr i64 %vr24230 to double*
	%vr24232 = load double, double* %vr24231
	%vr24229 = icmp ne double %vr24232, 0x4008000000000000
	br i1 %vr24229, label %.Lt_0F35, label %.Lt_1353
.Lt_1353:

	; bop ADR MOD 40
	%vr24235 = load i64, i64* %ADR.110
	%vr24234 = srem i64 %vr24235, 40

	; conv vr24234 => vr24237
	%vr24237 = uitofp i64 %vr24234 to double

	; store XS := vr24237
	store double %vr24237, double* @XS

	; conv XS => vr24238
	%vr24240 = load double, double* @XS
	%vr24239 = call double @llvm.nearbyint.f64(double %vr24240)
	%vr24238 = fptosi double %vr24239 to i64

	; bop vr24238 SHL 3
	%vr24241 = shl i64 %vr24238, 3

	; conv vr24241 => vr24242
	%vr24242 = sitofp i64 %vr24241 to double

	; store XS := vr24242
	store double %vr24242, double* @XS

	; bop XS + 32
	%vr24244 = load double, double* @XS
	%vr24243 = fadd double %vr24244, 0x4040000000000000

	; store XS := vr24243
	store double %vr24243, double* @XS

	; bop ADR \ 40
	%vr24247 = load i64, i64* %ADR.110
	%vr24246 = sdiv i64 %vr24247, 40

	; conv vr24246 => vr24249
	%vr24249 = uitofp i64 %vr24246 to double

	; store YS := vr24249
	store double %vr24249, double* @YS

	; conv YS => vr24250
	%vr24252 = load double, double* @YS
	%vr24251 = call double @llvm.nearbyint.f64(double %vr24252)
	%vr24250 = fptosi double %vr24251 to i64

	; bop vr24250 SHL 3
	%vr24253 = shl i64 %vr24250, 3

	; conv vr24253 => vr24254
	%vr24254 = sitofp i64 %vr24253 to double

	; store YS := vr24254
	store double %vr24254, double* @YS

	; bop YS + 32
	%vr24256 = load double, double* @YS
	%vr24255 = fadd double %vr24256, 0x4040000000000000

	; store YS := vr24255
	store double %vr24255, double* @YS

	; bop SYS_OFFSET + 233
	%vr24258 = load double, double* @SYS_OFFSET
	%vr24257 = fadd double %vr24258, 0x406D200000000000

	; conv vr24257 => vr24259
	%vr24260 = call double @llvm.nearbyint.f64(double %vr24257)
	%vr24259 = fptosi double %vr24260 to i64

	; bop vr24259 SHL 3
	%vr24261 = shl i64 %vr24259, 3

	; bop THIS + vr24261
	%vr24263 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24264 = inttoptr i64 %vr24261 to %MEMORY_T*
	%vr24262 = add %MEMORY_T* %vr24263, %vr24264

	; store Y := vr24262
	%vr24265 = ptrtoint %MEMORY_T* %vr24262 to i64
	%vr24266 = inttoptr i64 %vr24265 to double*
	%vr24267 = load double, double* %vr24266
	store double %vr24267, double* @Y

	; goto .Lt_0F36
	br label %.Lt_0F36
.Lt_1354:

	; label .Lt_0F39
	br label %.Lt_0F39
.Lt_0F39:

	; localvar LT_0F3A
	%LT_0F3A.203 = alloca double

	; store X := 0
	store double 0x0000000000000000, double* @X

	; bop SYS_OFFSET + 234
	%vr24269 = load double, double* @SYS_OFFSET
	%vr24268 = fadd double %vr24269, 0x406D400000000000

	; conv vr24268 => vr24270
	%vr24271 = call double @llvm.nearbyint.f64(double %vr24268)
	%vr24270 = fptosi double %vr24271 to i64

	; bop vr24270 SHL 3
	%vr24272 = shl i64 %vr24270, 3

	; bop THIS + vr24272
	%vr24274 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24275 = inttoptr i64 %vr24272 to %MEMORY_T*
	%vr24273 = add %MEMORY_T* %vr24274, %vr24275

	; store LT_0F3A := vr24273
	%vr24276 = ptrtoint %MEMORY_T* %vr24273 to i64
	%vr24277 = inttoptr i64 %vr24276 to double*
	%vr24278 = load double, double* %vr24277
	store double %vr24278, double* %LT_0F3A.203

	; goto .Lt_0F3B
	br label %.Lt_0F3B
.Lt_1355:

	; label .Lt_0F3E
	br label %.Lt_0F3E
.Lt_0F3E:

	; bop XS - X
	%vr24280 = load double, double* @XS
	%vr24281 = load double, double* @X
	%vr24279 = fsub double %vr24280, %vr24281

	; bop vr24279 * 5
	%vr24282 = fmul double %vr24279, 0x4014000000000000

	; bop vr24282 + 2
	%vr24283 = fadd double %vr24282, 0x4000000000000000

	; bop vr24283 / 2
	%vr24284 = fdiv double %vr24283, 0x4000000000000000

	; bop SYS_OFFSET + 227
	%vr24286 = load double, double* @SYS_OFFSET
	%vr24285 = fadd double %vr24286, 0x406C600000000000

	; conv vr24285 => vr24287
	%vr24288 = call double @llvm.nearbyint.f64(double %vr24285)
	%vr24287 = fptosi double %vr24288 to i64

	; bop vr24287 SHL 3
	%vr24289 = shl i64 %vr24287, 3

	; bop THIS + vr24289
	%vr24291 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24292 = inttoptr i64 %vr24289 to %MEMORY_T*
	%vr24290 = add %MEMORY_T* %vr24291, %vr24292

	; bop vr24284 + vr24290
	%vr24294 = ptrtoint %MEMORY_T* %vr24290 to i64
	%vr24295 = inttoptr i64 %vr24294 to double*
	%vr24296 = load double, double* %vr24295
	%vr24293 = fadd double %vr24284, %vr24296

	; bop SYS_OFFSET + 206
	%vr24298 = load double, double* @SYS_OFFSET
	%vr24297 = fadd double %vr24298, 0x4069C00000000000

	; conv vr24297 => vr24299
	%vr24300 = call double @llvm.nearbyint.f64(double %vr24297)
	%vr24299 = fptosi double %vr24300 to i64

	; bop vr24299 SHL 3
	%vr24301 = shl i64 %vr24299, 3

	; bop THIS + vr24301
	%vr24303 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24304 = inttoptr i64 %vr24301 to %MEMORY_T*
	%vr24302 = add %MEMORY_T* %vr24303, %vr24304

	; store vr24302 := vr24293
	%vr24305 = ptrtoint %MEMORY_T* %vr24302 to i64
	%vr24306 = inttoptr i64 %vr24305 to double*
	store double %vr24293, double* %vr24306

	; bop YS - Y
	%vr24308 = load double, double* @YS
	%vr24309 = load double, double* @Y
	%vr24307 = fsub double %vr24308, %vr24309

	; bop vr24307 * 4
	%vr24310 = fmul double %vr24307, 0x4010000000000000

	; bop vr24310 + 2
	%vr24311 = fadd double %vr24310, 0x4000000000000000

	; bop vr24311 / 2
	%vr24312 = fdiv double %vr24311, 0x4000000000000000

	; bop SYS_OFFSET + 228
	%vr24314 = load double, double* @SYS_OFFSET
	%vr24313 = fadd double %vr24314, 0x406C800000000000

	; conv vr24313 => vr24315
	%vr24316 = call double @llvm.nearbyint.f64(double %vr24313)
	%vr24315 = fptosi double %vr24316 to i64

	; bop vr24315 SHL 3
	%vr24317 = shl i64 %vr24315, 3

	; bop THIS + vr24317
	%vr24319 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24320 = inttoptr i64 %vr24317 to %MEMORY_T*
	%vr24318 = add %MEMORY_T* %vr24319, %vr24320

	; bop vr24312 + vr24318
	%vr24322 = ptrtoint %MEMORY_T* %vr24318 to i64
	%vr24323 = inttoptr i64 %vr24322 to double*
	%vr24324 = load double, double* %vr24323
	%vr24321 = fadd double %vr24312, %vr24324

	; bop SYS_OFFSET + 207
	%vr24326 = load double, double* @SYS_OFFSET
	%vr24325 = fadd double %vr24326, 0x4069E00000000000

	; conv vr24325 => vr24327
	%vr24328 = call double @llvm.nearbyint.f64(double %vr24325)
	%vr24327 = fptosi double %vr24328 to i64

	; bop vr24327 SHL 3
	%vr24329 = shl i64 %vr24327, 3

	; bop THIS + vr24329
	%vr24331 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24332 = inttoptr i64 %vr24329 to %MEMORY_T*
	%vr24330 = add %MEMORY_T* %vr24331, %vr24332

	; store vr24330 := vr24321
	%vr24333 = ptrtoint %MEMORY_T* %vr24330 to i64
	%vr24334 = inttoptr i64 %vr24333 to double*
	store double %vr24321, double* %vr24334

	; bop XS - X
	%vr24336 = load double, double* @XS
	%vr24337 = load double, double* @X
	%vr24335 = fsub double %vr24336, %vr24337

	; bop vr24335 * 5
	%vr24338 = fmul double %vr24335, 0x4014000000000000

	; bop vr24338 + -2
	%vr24339 = fadd double %vr24338, 0xC000000000000000

	; bop vr24339 / 2
	%vr24340 = fdiv double %vr24339, 0x4000000000000000

	; bop SYS_OFFSET + 227
	%vr24342 = load double, double* @SYS_OFFSET
	%vr24341 = fadd double %vr24342, 0x406C600000000000

	; conv vr24341 => vr24343
	%vr24344 = call double @llvm.nearbyint.f64(double %vr24341)
	%vr24343 = fptosi double %vr24344 to i64

	; bop vr24343 SHL 3
	%vr24345 = shl i64 %vr24343, 3

	; bop THIS + vr24345
	%vr24347 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24348 = inttoptr i64 %vr24345 to %MEMORY_T*
	%vr24346 = add %MEMORY_T* %vr24347, %vr24348

	; bop vr24340 + vr24346
	%vr24350 = ptrtoint %MEMORY_T* %vr24346 to i64
	%vr24351 = inttoptr i64 %vr24350 to double*
	%vr24352 = load double, double* %vr24351
	%vr24349 = fadd double %vr24340, %vr24352

	; bop SYS_OFFSET + 203
	%vr24354 = load double, double* @SYS_OFFSET
	%vr24353 = fadd double %vr24354, 0x4069600000000000

	; conv vr24353 => vr24355
	%vr24356 = call double @llvm.nearbyint.f64(double %vr24353)
	%vr24355 = fptosi double %vr24356 to i64

	; bop vr24355 SHL 3
	%vr24357 = shl i64 %vr24355, 3

	; bop THIS + vr24357
	%vr24359 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24360 = inttoptr i64 %vr24357 to %MEMORY_T*
	%vr24358 = add %MEMORY_T* %vr24359, %vr24360

	; store vr24358 := vr24349
	%vr24361 = ptrtoint %MEMORY_T* %vr24358 to i64
	%vr24362 = inttoptr i64 %vr24361 to double*
	store double %vr24349, double* %vr24362

	; bop YS - Y
	%vr24364 = load double, double* @YS
	%vr24365 = load double, double* @Y
	%vr24363 = fsub double %vr24364, %vr24365

	; bop vr24363 * 4
	%vr24366 = fmul double %vr24363, 0x4010000000000000

	; bop vr24366 + -2
	%vr24367 = fadd double %vr24366, 0xC000000000000000

	; bop vr24367 / 2
	%vr24368 = fdiv double %vr24367, 0x4000000000000000

	; bop SYS_OFFSET + 228
	%vr24370 = load double, double* @SYS_OFFSET
	%vr24369 = fadd double %vr24370, 0x406C800000000000

	; conv vr24369 => vr24371
	%vr24372 = call double @llvm.nearbyint.f64(double %vr24369)
	%vr24371 = fptosi double %vr24372 to i64

	; bop vr24371 SHL 3
	%vr24373 = shl i64 %vr24371, 3

	; bop THIS + vr24373
	%vr24375 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24376 = inttoptr i64 %vr24373 to %MEMORY_T*
	%vr24374 = add %MEMORY_T* %vr24375, %vr24376

	; bop vr24368 + vr24374
	%vr24378 = ptrtoint %MEMORY_T* %vr24374 to i64
	%vr24379 = inttoptr i64 %vr24378 to double*
	%vr24380 = load double, double* %vr24379
	%vr24377 = fadd double %vr24368, %vr24380

	; bop SYS_OFFSET + 204
	%vr24382 = load double, double* @SYS_OFFSET
	%vr24381 = fadd double %vr24382, 0x4069800000000000

	; conv vr24381 => vr24383
	%vr24384 = call double @llvm.nearbyint.f64(double %vr24381)
	%vr24383 = fptosi double %vr24384 to i64

	; bop vr24383 SHL 3
	%vr24385 = shl i64 %vr24383, 3

	; bop THIS + vr24385
	%vr24387 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24388 = inttoptr i64 %vr24385 to %MEMORY_T*
	%vr24386 = add %MEMORY_T* %vr24387, %vr24388

	; store vr24386 := vr24377
	%vr24389 = ptrtoint %MEMORY_T* %vr24386 to i64
	%vr24390 = inttoptr i64 %vr24389 to double*
	store double %vr24377, double* %vr24390

	; bop SYS_OFFSET + 252
	%vr24392 = load double, double* @SYS_OFFSET
	%vr24391 = fadd double %vr24392, 0x406F800000000000

	; conv vr24391 => vr24393
	%vr24394 = call double @llvm.nearbyint.f64(double %vr24391)
	%vr24393 = fptoui double %vr24394 to i64

	; call POKE64()
	; arg THIS
	%vr24395 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	; arg vr24393
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr24395, i64 %vr24393, i64 0 )

	; label .Lt_0F3C
	br label %.Lt_0F3C
.Lt_0F3C:

	; bop X + 1
	%vr24397 = load double, double* @X
	%vr24396 = fadd double %vr24397, 0x3FF0000000000000

	; store X := vr24396
	store double %vr24396, double* @X

	; label .Lt_0F3B
	br label %.Lt_0F3B
.Lt_0F3B:

	; branchbop X <= LT_0F3A
	%vr24399 = load double, double* @X
	%vr24400 = load double, double* %LT_0F3A.203
	%vr24398 = icmp sle double %vr24399, %vr24400
	br i1 %vr24398, label %.Lt_0F3E, label %.Lt_1356
.Lt_1356:

	; label .Lt_0F3D
	br label %.Lt_0F3D
.Lt_0F3D:

	; bop C + 1
	%vr24402 = load double, double* @C
	%vr24401 = fadd double %vr24402, 0x3FF0000000000000

	; store C := vr24401
	store double %vr24401, double* @C

	; label .Lt_0F37
	br label %.Lt_0F37
.Lt_0F37:

	; bop Y + -1
	%vr24404 = load double, double* @Y
	%vr24403 = fadd double %vr24404, 0xBFF0000000000000

	; store Y := vr24403
	store double %vr24403, double* @Y

	; label .Lt_0F36
	br label %.Lt_0F36
.Lt_0F36:

	; branchbop Y >= 0
	%vr24406 = load double, double* @Y
	%vr24405 = icmp sge double %vr24406, 0x0000000000000000
	br i1 %vr24405, label %.Lt_0F39, label %.Lt_1357
.Lt_1357:

	; label .Lt_0F38
	br label %.Lt_0F38
.Lt_0F38:

	; bop YS + 8
	%vr24408 = load double, double* @YS
	%vr24407 = fadd double %vr24408, 0x4020000000000000

	; conv vr24407 => vr24409
	%vr24410 = call double @llvm.nearbyint.f64(double %vr24407)
	%vr24409 = fptosi double %vr24410 to i32

	; conv YS => vr24411
	%vr24413 = load double, double* @YS
	%vr24412 = call double @llvm.nearbyint.f64(double %vr24413)
	%vr24411 = fptosi double %vr24412 to i32

	; call fb_GfxUnlock()
	; arg vr24411
	; arg vr24409
	call void @fb_GfxUnlock( i32 %vr24411, i32 %vr24409 )

	; label .Lt_0F35
	br label %.Lt_0F35
.Lt_0F35:

	; label .Lt_0F14
	br label %.Lt_0F14
.Lt_0F14:

	; goto .Lt_05B4
	br label %.Lt_05B4
.Lt_1358:

	; label .Lt_0F10
	br label %.Lt_0F10
.Lt_0F10:

	; branchbop ADR < 57344
	%vr24416 = load i64, i64* %ADR.110
	%vr24415 = icmp slt i64 %vr24416, 57344
	br i1 %vr24415, label %.Lt_0F41, label %.Lt_1359
.Lt_1359:

	; branchbop ADR <= 65535
	%vr24420 = load i64, i64* %ADR.110
	%vr24419 = icmp sle i64 %vr24420, 65535
	br i1 %vr24419, label %.Lt_0F40, label %.Lt_135A
.Lt_135A:

	; label .Lt_0F41
	br label %.Lt_0F41
.Lt_0F41:

	; branchbop ADR < 40960
	%vr24424 = load i64, i64* %ADR.110
	%vr24423 = icmp slt i64 %vr24424, 40960
	br i1 %vr24423, label %.Lt_0F42, label %.Lt_135B
.Lt_135B:

	; branchbop ADR <= 49151
	%vr24428 = load i64, i64* %ADR.110
	%vr24427 = icmp sle i64 %vr24428, 49151
	br i1 %vr24427, label %.Lt_0F40, label %.Lt_135C
.Lt_135C:

	; label .Lt_0F42
	br label %.Lt_0F42
.Lt_0F42:

	; branchbop ADR < 55296
	%vr24432 = load i64, i64* %ADR.110
	%vr24431 = icmp slt i64 %vr24432, 55296
	br i1 %vr24431, label %.Lt_0F3F, label %.Lt_135D
.Lt_135D:

	; branchbop ADR > 56319
	%vr24436 = load i64, i64* %ADR.110
	%vr24435 = icmp sgt i64 %vr24436, 56319
	br i1 %vr24435, label %.Lt_0F3F, label %.Lt_135E
.Lt_135E:

	; label .Lt_0F40
	br label %.Lt_0F40
.Lt_0F40:

	; conv V => vr24438
	%vr24439 = load i64, i64* %V.111
	%vr24438 = uitofp i64 %vr24439 to double
	%vr24441 = load i64, i64* %ADR.110
	%vr24440 = bitcast i64 %vr24441 to i64

	; bop vr24440 SHL 3
	%vr24442 = shl i64 %vr24440, 3

	; bop THIS + vr24442
	%vr24444 = load %MEMORY_T*, %MEMORY_T** %THIS.109
	%vr24445 = inttoptr i64 %vr24442 to %MEMORY_T*
	%vr24443 = add %MEMORY_T* %vr24444, %vr24445

	; store vr24443 := vr24438
	%vr24446 = ptrtoint %MEMORY_T* %vr24443 to i64
	%vr24447 = inttoptr i64 %vr24446 to double*
	store double %vr24438, double* %vr24447

	; label .Lt_0F3F
	br label %.Lt_0F3F
.Lt_0F3F:

	; label .Lt_05B4
	br label %.Lt_05B4
.Lt_05B4:

	; label .Lt_0456
	br label %.Lt_0456
.Lt_0456:
	ret void
}

define i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %THIS.204$, i64 %ADR.205$ ) nounwind
{

	; paramvar THIS
	%THIS.204 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.204$, %MEMORY_T** %THIS.204

	; paramvar ADR
	%ADR.205 = alloca i64
	store i64 %ADR.205$, i64* %ADR.205

	; localvar fb$result
	%fb$result.206 = alloca i8

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.206 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_135F
	br label %.Lt_135F
.Lt_135F:

	; call PEEK64()
	; arg THIS
	%vr3 = load %MEMORY_T*, %MEMORY_T** %THIS.204
	; arg ADR
	%vr4 = load i64, i64* %ADR.205
	%vr2 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr3, i64 %vr4 )

	; conv vr2 => vr5
	%vr5 = trunc i64 %vr2 to i8

	; store fb$result := vr5
	store i8 %vr5, i8* %fb$result.206

	; goto .Lt_1360
	br label %.Lt_1360
.Lt_1361:

	; label .Lt_1360
	br label %.Lt_1360
.Lt_1360:

	; loadres fb$result
	%vr7 = load i8, i8* %fb$result.206
	ret i8 %vr7
}

define i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %THIS.207$, i64 %ADR.208$ ) nounwind
{

	; paramvar THIS
	%THIS.207 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.207$, %MEMORY_T** %THIS.207

	; paramvar ADR
	%ADR.208 = alloca i64
	store i64 %ADR.208$, i64* %ADR.208

	; localvar fb$result
	%fb$result.209 = alloca i8

	; addrof fb$result

	; memclear fb$result
	call void @llvm.memset.p0i8.i32( i8* %fb$result.209, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_1362
	br label %.Lt_1362
.Lt_1362:

	; call PEEK64()
	; arg THIS
	%vr2 = load %MEMORY_T*, %MEMORY_T** %THIS.207
	; arg ADR
	%vr3 = load i64, i64* %ADR.208
	%vr1 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr2, i64 %vr3 )

	; conv vr1 => vr4
	%vr4 = trunc i64 %vr1 to i8

	; store fb$result := vr4
	store i8 %vr4, i8* %fb$result.209

	; goto .Lt_1363
	br label %.Lt_1363
.Lt_1364:

	; label .Lt_1363
	br label %.Lt_1363
.Lt_1363:

	; loadres fb$result
	%vr6 = load i8, i8* %fb$result.209
	ret i8 %vr6
}

define i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %THIS.210$, i64 %ADR.211$ ) nounwind
{

	; paramvar THIS
	%THIS.210 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.210$, %MEMORY_T** %THIS.210

	; paramvar ADR
	%ADR.211 = alloca i64
	store i64 %ADR.211$, i64* %ADR.211

	; localvar fb$result
	%fb$result.212 = alloca i16

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i16* %fb$result.212 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 2, i32 1, i1 false )

	; label .Lt_1365
	br label %.Lt_1365
.Lt_1365:

	; call PEEK64()
	; arg THIS
	%vr3 = load %MEMORY_T*, %MEMORY_T** %THIS.210
	; arg ADR
	%vr4 = load i64, i64* %ADR.211
	%vr2 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr3, i64 %vr4 )

	; bop ADR + 1
	%vr8 = load i64, i64* %ADR.211
	%vr7 = add i64 %vr8, 1

	; call PEEK64()
	; arg THIS
	%vr12 = load %MEMORY_T*, %MEMORY_T** %THIS.210
	; arg vr7
	%vr11 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr12, i64 %vr7 )

	; bop vr11 SHL 8
	%vr17 = bitcast i64 8 to i64
	%vr15 = shl i64 %vr11, %vr17

	; bop vr2 OR vr15
	%vr18 = or i64 %vr2, %vr15

	; conv vr18 => vr20
	%vr20 = trunc i64 %vr18 to i16

	; store fb$result := vr20
	store i16 %vr20, i16* %fb$result.212

	; goto .Lt_1366
	br label %.Lt_1366
.Lt_1367:

	; label .Lt_1366
	br label %.Lt_1366
.Lt_1366:

	; loadres fb$result
	%vr22 = load i16, i16* %fb$result.212
	ret i16 %vr22
}

define void @_ZN8MEMORY_T9WRITEBYTEEyy( %MEMORY_T* %THIS.213$, i64 %ADR.214$, i64 %B8.215$ ) nounwind
{

	; paramvar THIS
	%THIS.213 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.213$, %MEMORY_T** %THIS.213

	; paramvar ADR
	%ADR.214 = alloca i64
	store i64 %ADR.214$, i64* %ADR.214

	; paramvar B8
	%B8.215 = alloca i64
	store i64 %B8.215$, i64* %B8.215

	; label .Lt_1368
	br label %.Lt_1368
.Lt_1368:

	; call POKE64()
	; arg THIS
	%vr0 = load %MEMORY_T*, %MEMORY_T** %THIS.213
	; arg ADR
	%vr1 = load i64, i64* %ADR.214
	; arg B8
	%vr2 = load i64, i64* %B8.215
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr0, i64 %vr1, i64 %vr2 )

	; label .Lt_1369
	br label %.Lt_1369
.Lt_1369:
	ret void
}

define void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %THIS.216$, i64 %ADR.217$, i64 %B8.218$ ) nounwind
{

	; paramvar THIS
	%THIS.216 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.216$, %MEMORY_T** %THIS.216

	; paramvar ADR
	%ADR.217 = alloca i64
	store i64 %ADR.217$, i64* %ADR.217

	; paramvar B8
	%B8.218 = alloca i64
	store i64 %B8.218$, i64* %B8.218

	; label .Lt_136A
	br label %.Lt_136A
.Lt_136A:

	; call POKE64()
	; arg THIS
	%vr0 = load %MEMORY_T*, %MEMORY_T** %THIS.216
	; arg ADR
	%vr1 = load i64, i64* %ADR.217
	; arg B8
	%vr2 = load i64, i64* %B8.218
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr0, i64 %vr1, i64 %vr2 )

	; label .Lt_136B
	br label %.Lt_136B
.Lt_136B:
	ret void
}

define void @_ZN8MEMORY_T11WRITEUSHORTEyy( %MEMORY_T* %THIS.219$, i64 %ADR.220$, i64 %W16.221$ ) nounwind
{

	; paramvar THIS
	%THIS.219 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.219$, %MEMORY_T** %THIS.219

	; paramvar ADR
	%ADR.220 = alloca i64
	store i64 %ADR.220$, i64* %ADR.220

	; paramvar W16
	%W16.221 = alloca i64
	store i64 %W16.221$, i64* %W16.221

	; label .Lt_136C
	br label %.Lt_136C
.Lt_136C:

	; bop W16 AND 255
	%vr2 = load i64, i64* %W16.221
	%vr1 = and i64 %vr2, 255

	; call POKE64()
	; arg THIS
	%vr5 = load %MEMORY_T*, %MEMORY_T** %THIS.219
	; arg ADR
	%vr6 = load i64, i64* %ADR.220
	; arg vr1
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr5, i64 %vr6, i64 %vr1 )

	; bop W16 AND 65280
	%vr10 = load i64, i64* %W16.221
	%vr9 = and i64 %vr10, 65280

	; bop vr9 SHR 8
	%vr13 = bitcast i64 8 to i64
	%vr12 = ashr i64 %vr9, %vr13

	; bop ADR + 1
	%vr17 = load i64, i64* %ADR.220
	%vr16 = add i64 %vr17, 1

	; call POKE64()
	; arg THIS
	%vr20 = load %MEMORY_T*, %MEMORY_T** %THIS.219
	; arg vr16
	; arg vr12
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr20, i64 %vr16, i64 %vr12 )

	; label .Lt_136D
	br label %.Lt_136D
.Lt_136D:
	ret void
}

define void @_ZN7CPU6510C1EP8MEMORY_T( %CPU6510* %THIS.222$, %MEMORY_T* %LPMEM.223$ ) nounwind
{

	; paramvar THIS
	%THIS.222 = alloca %CPU6510*
	store %CPU6510* %THIS.222$, %CPU6510** %THIS.222

	; paramvar LPMEM
	%LPMEM.223 = alloca %MEMORY_T*
	store %MEMORY_T* %LPMEM.223$, %MEMORY_T** %LPMEM.223

	; label .Lt_136E
	br label %.Lt_136E
.Lt_136E:
	%vr1 = load %CPU6510*, %CPU6510** %THIS.222
	%vr0 = bitcast %CPU6510* %vr1 to i8*

	; addrof vr0
	%vr3 = ptrtoint i8* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i8*

	; memclear vr4
	%vr5 = bitcast i8* %vr4 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr7 = load %CPU6510*, %CPU6510** %THIS.222
	%vr8 = inttoptr i64 8 to %CPU6510*
	%vr6 = add %CPU6510* %vr7, %vr8
	%vr9 = bitcast %CPU6510* %vr6 to i8*

	; addrof vr9
	%vr11 = ptrtoint i8* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i8*

	; memclear vr12
	%vr13 = bitcast i8* %vr12 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr13, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 9
	%vr15 = load %CPU6510*, %CPU6510** %THIS.222
	%vr16 = inttoptr i64 9 to %CPU6510*
	%vr14 = add %CPU6510* %vr15, %vr16
	%vr17 = bitcast %CPU6510* %vr14 to i8*

	; addrof vr17
	%vr19 = ptrtoint i8* %vr17 to i64
	%vr20 = inttoptr i64 %vr19 to i8*

	; memclear vr20
	%vr21 = bitcast i8* %vr20 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 10
	%vr23 = load %CPU6510*, %CPU6510** %THIS.222
	%vr24 = inttoptr i64 10 to %CPU6510*
	%vr22 = add %CPU6510* %vr23, %vr24
	%vr25 = bitcast %CPU6510* %vr22 to i8*

	; addrof vr25
	%vr27 = ptrtoint i8* %vr25 to i64
	%vr28 = inttoptr i64 %vr27 to i8*

	; memclear vr28
	%vr29 = bitcast i8* %vr28 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr29, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 12
	%vr31 = load %CPU6510*, %CPU6510** %THIS.222
	%vr32 = inttoptr i64 12 to %CPU6510*
	%vr30 = add %CPU6510* %vr31, %vr32
	%vr33 = bitcast %CPU6510* %vr30 to i16*

	; addrof vr33
	%vr35 = ptrtoint i16* %vr33 to i64
	%vr36 = inttoptr i64 %vr35 to i16*

	; memclear vr36
	%vr37 = bitcast i16* %vr36 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr37, i8 0, i32 2, i32 1, i1 false )

	; bop THIS + 14
	%vr39 = load %CPU6510*, %CPU6510** %THIS.222
	%vr40 = inttoptr i64 14 to %CPU6510*
	%vr38 = add %CPU6510* %vr39, %vr40
	%vr41 = bitcast %CPU6510* %vr38 to i16*

	; addrof vr41
	%vr43 = ptrtoint i16* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i16*

	; memclear vr44
	%vr45 = bitcast i16* %vr44 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr45, i8 0, i32 2, i32 1, i1 false )

	; bop THIS + 16
	%vr47 = load %CPU6510*, %CPU6510** %THIS.222
	%vr48 = inttoptr i64 16 to %CPU6510*
	%vr46 = add %CPU6510* %vr47, %vr48
	%vr49 = bitcast %CPU6510* %vr46 to %MEMORY_T**

	; addrof vr49
	%vr51 = ptrtoint %MEMORY_T** %vr49 to i64
	%vr52 = inttoptr i64 %vr51 to %MEMORY_T**

	; memclear vr52
	%vr53 = bitcast %MEMORY_T** %vr52 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr53, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 24
	%vr55 = load %CPU6510*, %CPU6510** %THIS.222
	%vr56 = inttoptr i64 24 to %CPU6510*
	%vr54 = add %CPU6510* %vr55, %vr56
	%vr57 = bitcast %CPU6510* %vr54 to %OPCODE*

	; addrof vr57
	%vr59 = ptrtoint %OPCODE* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to %OPCODE*

	; memclear vr60
	%vr61 = bitcast %OPCODE* %vr60 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr61, i8 0, i32 56, i32 1, i1 false )

	; bop THIS + 80
	%vr63 = load %CPU6510*, %CPU6510** %THIS.222
	%vr64 = inttoptr i64 80 to %CPU6510*
	%vr62 = add %CPU6510* %vr63, %vr64
	%vr65 = bitcast %CPU6510* %vr62 to %OPCODE*

	; addrof vr65
	%vr67 = ptrtoint %OPCODE* %vr65 to i64
	%vr68 = inttoptr i64 %vr67 to %OPCODE*

	; memclear vr68
	%vr69 = bitcast %OPCODE* %vr68 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr69, i8 0, i32 14336, i32 1, i1 false )

	; bop THIS + 14416
	%vr71 = load %CPU6510*, %CPU6510** %THIS.222
	%vr72 = inttoptr i64 14416 to %CPU6510*
	%vr70 = add %CPU6510* %vr71, %vr72
	%vr73 = bitcast %CPU6510* %vr70 to %FBSTRING*

	; addrof vr73
	%vr75 = ptrtoint %FBSTRING* %vr73 to i64
	%vr76 = inttoptr i64 %vr75 to %FBSTRING*

	; memclear vr76
	%vr77 = bitcast %FBSTRING* %vr76 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr77, i8 0, i32 312, i32 1, i1 false )

	; deref THIS
	%vr79 = load %CPU6510*, %CPU6510** %THIS.222

	; store vr79+16 := LPMEM
	%vr80 = load %MEMORY_T*, %MEMORY_T** %LPMEM.223
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 16
	%vr83 = inttoptr i64 %vr82 to %MEMORY_T**
	store %MEMORY_T* %vr80, %MEMORY_T** %vr83
	%vr84 = bitcast %__FB_DATADESC$* @.Lt_1371 to i8*

	; call fb_DataRestore()
	; arg vr84
	call void @fb_DataRestore( i8* %vr84 )

	; localvar I
	%I.224 = alloca i64

	; store I := 0
	store i64 0, i64* %I.224

	; label .Lt_1376
	br label %.Lt_1376
.Lt_1376:

	; localvar LT_1377
	%LT_1377.225 = alloca %OPCODE*

	; bop I * 56
	%vr86 = load i64, i64* %I.224
	%vr85 = mul i64 %vr86, 56

	; bop THIS + vr85
	%vr88 = load %CPU6510*, %CPU6510** %THIS.222
	%vr89 = inttoptr i64 %vr85 to %CPU6510*
	%vr87 = add %CPU6510* %vr88, %vr89

	; addrof vr87+80
	%vr91 = ptrtoint %CPU6510* %vr87 to i64
	%vr92 = add i64 %vr91, 80
	%vr93 = inttoptr i64 %vr92 to %OPCODE*

	; store LT_1377 := vr93
	store %OPCODE* %vr93, %OPCODE** %LT_1377.225

	; deref LT_1377
	%vr95 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr95
	%vr97 = ptrtoint %OPCODE* %vr95 to i64
	%vr98 = inttoptr i64 %vr97 to i64*

	; call fb_DataReadULongint()
	; arg vr98
	call void @fb_DataReadULongint( i64* %vr98 )

	; deref LT_1377
	%vr100 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr100+8
	%vr102 = ptrtoint %OPCODE* %vr100 to i64
	%vr103 = add i64 %vr102, 8
	%vr104 = inttoptr i64 %vr103 to i8*
	%vr105 = bitcast i8* %vr104 to i8*

	; call fb_DataReadStr()
	; arg vr105
	; arg 4
	; arg 0
	call void @fb_DataReadStr( i8* %vr105, i64 4, i32 0 )

	; deref LT_1377
	%vr109 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr109+16
	%vr111 = ptrtoint %OPCODE* %vr109 to i64
	%vr112 = add i64 %vr111, 16
	%vr113 = inttoptr i64 %vr112 to i64*

	; call fb_DataReadLongint()
	; arg vr113
	call void @fb_DataReadLongint( i64* %vr113 )

	; deref LT_1377
	%vr115 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr115+24
	%vr117 = ptrtoint %OPCODE* %vr115 to i64
	%vr118 = add i64 %vr117, 24
	%vr119 = inttoptr i64 %vr118 to i64*

	; call fb_DataReadLongint()
	; arg vr119
	call void @fb_DataReadLongint( i64* %vr119 )

	; deref LT_1377
	%vr121 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr121+32
	%vr123 = ptrtoint %OPCODE* %vr121 to i64
	%vr124 = add i64 %vr123, 32
	%vr125 = inttoptr i64 %vr124 to i64*

	; call fb_DataReadLongint()
	; arg vr125
	call void @fb_DataReadLongint( i64* %vr125 )

	; deref LT_1377
	%vr127 = load %OPCODE*, %OPCODE** %LT_1377.225

	; addrof vr127+48
	%vr129 = ptrtoint %OPCODE* %vr127 to i64
	%vr130 = add i64 %vr129, 48
	%vr131 = inttoptr i64 %vr130 to void ( %CPU6510* )**
	%vr132 = bitcast void ( %CPU6510* )** %vr131 to i64*

	; call fb_DataReadLongint()
	; arg vr132
	call void @fb_DataReadLongint( i64* %vr132 )

	; label .Lt_1374
	br label %.Lt_1374
.Lt_1374:

	; bop I + 1
	%vr134 = load i64, i64* %I.224
	%vr133 = add i64 %vr134, 1

	; store I := vr133
	store i64 %vr133, i64* %I.224

	; label .Lt_1373
	br label %.Lt_1373
.Lt_1373:

	; branchbop I <= 255
	%vr136 = load i64, i64* %I.224
	%vr135 = icmp sle i64 %vr136, 255
	br i1 %vr135, label %.Lt_1376, label %.Lt_137F
.Lt_137F:

	; label .Lt_1375
	br label %.Lt_1375
.Lt_1375:
	%vr137 = bitcast %__FB_DATADESC$* @.Lt_1379 to i8*

	; call fb_DataRestore()
	; arg vr137
	call void @fb_DataRestore( i8* %vr137 )

	; localvar I
	%I.226 = alloca i64

	; store I := 0
	store i64 0, i64* %I.226

	; label .Lt_137E
	br label %.Lt_137E
.Lt_137E:

	; bop I * 24
	%vr139 = load i64, i64* %I.226
	%vr138 = mul i64 %vr139, 24

	; bop THIS + vr138
	%vr141 = load %CPU6510*, %CPU6510** %THIS.222
	%vr142 = inttoptr i64 %vr138 to %CPU6510*
	%vr140 = add %CPU6510* %vr141, %vr142

	; addrof vr140+14416
	%vr144 = ptrtoint %CPU6510* %vr140 to i64
	%vr145 = add i64 %vr144, 14416
	%vr146 = inttoptr i64 %vr145 to %FBSTRING*
	%vr147 = bitcast %FBSTRING* %vr146 to i8*

	; call fb_DataReadStr()
	; arg vr147
	; arg -1
	; arg 0
	call void @fb_DataReadStr( i8* %vr147, i64 -1, i32 0 )

	; label .Lt_137C
	br label %.Lt_137C
.Lt_137C:

	; bop I + 1
	%vr151 = load i64, i64* %I.226
	%vr150 = add i64 %vr151, 1

	; store I := vr150
	store i64 %vr150, i64* %I.226

	; label .Lt_137B
	br label %.Lt_137B
.Lt_137B:

	; branchbop I <= 12
	%vr153 = load i64, i64* %I.226
	%vr152 = icmp sle i64 %vr153, 12
	br i1 %vr152, label %.Lt_137E, label %.Lt_1380
.Lt_1380:

	; label .Lt_137D
	br label %.Lt_137D
.Lt_137D:

	; deref THIS
	%vr155 = load %CPU6510*, %CPU6510** %THIS.222

	; store vr155+15 := 1
	%vr156 = ptrtoint %CPU6510* %vr155 to i64
	%vr157 = add i64 %vr156, 15
	%vr158 = inttoptr i64 %vr157 to i8*
	store i8 trunc (i64 1 to i8), i8* %vr158

	; deref THIS
	%vr160 = load %CPU6510*, %CPU6510** %THIS.222

	; store vr160+12 := 64738
	%vr161 = ptrtoint %CPU6510* %vr160 to i64
	%vr162 = add i64 %vr161, 12
	%vr163 = inttoptr i64 %vr162 to i16*
	store i16 trunc (i64 64738 to i16), i16* %vr163

	; label .Lt_136F
	br label %.Lt_136F
.Lt_136F:
	ret void
}

define void @_ZN7CPU6510D1Ev( %CPU6510* %THIS.227$ ) nounwind
{

	; paramvar THIS
	%THIS.227 = alloca %CPU6510*
	store %CPU6510* %THIS.227$, %CPU6510** %THIS.227

	; localvar Lt_1383
	%CPU6510.FBARRAY1 = type { %FBSTRING*, %FBSTRING*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_1383.228 = alloca %CPU6510.FBARRAY1

	; label .Lt_1381
	br label %.Lt_1381
.Lt_1381:

	; label .Lt_1382
	br label %.Lt_1382
.Lt_1382:

	; addrof Lt_1383

	; bop THIS + 14416
	%vr2 = load %CPU6510*, %CPU6510** %THIS.227
	%vr3 = inttoptr i64 14416 to %CPU6510*
	%vr1 = add %CPU6510* %vr2, %vr3
	%vr4 = bitcast %CPU6510* %vr1 to %FBSTRING*

	; addrof vr4
	%vr6 = ptrtoint %FBSTRING* %vr4 to i64
	%vr7 = inttoptr i64 %vr6 to %FBSTRING*

	; store Lt_1383 := vr7
	%vr8 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to %FBSTRING**
	store %FBSTRING* %vr7, %FBSTRING** %vr8

	; bop THIS + 14416
	%vr10 = load %CPU6510*, %CPU6510** %THIS.227
	%vr11 = inttoptr i64 14416 to %CPU6510*
	%vr9 = add %CPU6510* %vr10, %vr11
	%vr12 = bitcast %CPU6510* %vr9 to %FBSTRING*

	; addrof vr12
	%vr14 = ptrtoint %FBSTRING* %vr12 to i64
	%vr15 = inttoptr i64 %vr14 to %FBSTRING*

	; store Lt_1383+8 := vr15
	%vr16 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to %FBSTRING**
	%vr17 = ptrtoint %FBSTRING** %vr16 to i64
	%vr18 = add i64 %vr17, 8
	%vr19 = inttoptr i64 %vr18 to %FBSTRING**
	store %FBSTRING* %vr15, %FBSTRING** %vr19

	; store Lt_1383+16 := 312
	%vr20 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr21 = ptrtoint i64* %vr20 to i64
	%vr22 = add i64 %vr21, 16
	%vr23 = inttoptr i64 %vr22 to i64*
	store i64 312, i64* %vr23

	; store Lt_1383+24 := 24
	%vr24 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr25 = ptrtoint i64* %vr24 to i64
	%vr26 = add i64 %vr25, 24
	%vr27 = inttoptr i64 %vr26 to i64*
	store i64 24, i64* %vr27

	; store Lt_1383+32 := 1
	%vr28 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr29 = ptrtoint i64* %vr28 to i64
	%vr30 = add i64 %vr29, 32
	%vr31 = inttoptr i64 %vr30 to i64*
	store i64 1, i64* %vr31

	; store Lt_1383+40 := 13
	%vr32 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr33 = ptrtoint i64* %vr32 to i64
	%vr34 = add i64 %vr33, 40
	%vr35 = inttoptr i64 %vr34 to i64*
	store i64 13, i64* %vr35

	; store Lt_1383+48 := 0
	%vr36 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr37 = ptrtoint i64* %vr36 to i64
	%vr38 = add i64 %vr37, 48
	%vr39 = inttoptr i64 %vr38 to i64*
	store i64 0, i64* %vr39

	; store Lt_1383+56 := 12
	%vr40 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to i64*
	%vr41 = ptrtoint i64* %vr40 to i64
	%vr42 = add i64 %vr41, 56
	%vr43 = inttoptr i64 %vr42 to i64*
	store i64 12, i64* %vr43

	; call fb_ArrayDestructStr()
	; arg Lt_1383
	%vr44 = bitcast %CPU6510.FBARRAY1* %Lt_1383.228 to %FBARRAY*
	call void @fb_ArrayDestructStr( %FBARRAY* %vr44 )
	ret void
}

define %FBSTRING* @_ZN7CPU6510cv8FBSTRINGEv( %CPU6510* %THIS.229$ ) nounwind
{

	; paramvar THIS
	%THIS.229 = alloca %CPU6510*
	store %CPU6510* %THIS.229$, %CPU6510** %THIS.229

	; localvar fb$result
	%fb$result.230 = alloca %FBSTRING

	; localvar LT_1393
	%LT_1393.231 = alloca %FBSTRING

	; localvar LT_1394
	%LT_1394.232 = alloca %FBSTRING

	; localvar LT_1395
	%LT_1395.233 = alloca %FBSTRING

	; localvar LT_1396
	%LT_1396.234 = alloca %FBSTRING

	; localvar LT_1397
	%LT_1397.235 = alloca %FBSTRING

	; localvar LT_1398
	%LT_1398.236 = alloca %FBSTRING

	; localvar LT_1399
	%LT_1399.237 = alloca %FBSTRING

	; localvar LT_139A
	%LT_139A.238 = alloca %FBSTRING

	; localvar LT_139B
	%LT_139B.239 = alloca %FBSTRING

	; localvar LT_139C
	%LT_139C.240 = alloca %FBSTRING

	; localvar LT_139D
	%LT_139D.241 = alloca %FBSTRING

	; localvar LT_139E
	%LT_139E.242 = alloca %FBSTRING

	; localvar LT_139F
	%LT_139F.243 = alloca %FBSTRING

	; localvar LT_13A0
	%LT_13A0.244 = alloca %FBSTRING

	; localvar LT_13A1
	%LT_13A1.245 = alloca %FBSTRING

	; localvar LT_13A2
	%LT_13A2.246 = alloca %FBSTRING

	; localvar LT_13A3
	%LT_13A3.247 = alloca %FBSTRING

	; localvar LT_13A4
	%LT_13A4.248 = alloca %FBSTRING

	; localvar LT_13A5
	%LT_13A5.249 = alloca %FBSTRING

	; localvar LT_13A6
	%LT_13A6.250 = alloca %FBSTRING

	; localvar LT_13A7
	%LT_13A7.251 = alloca %FBSTRING

	; localvar LT_13A8
	%LT_13A8.252 = alloca %FBSTRING

	; localvar LT_13A9
	%LT_13A9.253 = alloca %FBSTRING

	; localvar LT_13AA
	%LT_13AA.254 = alloca %FBSTRING

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast %FBSTRING* %fb$result.230 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 24, i32 1, i1 false )

	; label .Lt_1384
	br label %.Lt_1384
.Lt_1384:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; call fb_ULongintToStr()
	; arg vr5
	%vr11 = call %FBSTRING* @fb_ULongintToStr( i64 %vr5 )
	%vr13 = bitcast i8* bitcast ([4 x i8]* @Lt_1392 to i8*) to i8*

	; deref THIS
	%vr15 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr15 SHR 1
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr22 = bitcast i64 1 to i64
	%vr17 = ashr i64 %vr20, %vr22

	; bop vr17 AND 1
	%vr23 = and i64 %vr17, 1

	; call fb_ULongintToStr()
	; arg vr23
	%vr25 = call %FBSTRING* @fb_ULongintToStr( i64 %vr23 )
	%vr27 = bitcast i8* bitcast ([4 x i8]* @Lt_1391 to i8*) to i8*

	; deref THIS
	%vr29 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr29 SHR 2
	%vr32 = ptrtoint %CPU6510* %vr29 to i64
	%vr33 = inttoptr i64 %vr32 to i64*
	%vr34 = load i64, i64* %vr33
	%vr36 = bitcast i64 2 to i64
	%vr31 = ashr i64 %vr34, %vr36

	; bop vr31 AND 1
	%vr37 = and i64 %vr31, 1

	; call fb_ULongintToStr()
	; arg vr37
	%vr39 = call %FBSTRING* @fb_ULongintToStr( i64 %vr37 )
	%vr41 = bitcast i8* bitcast ([4 x i8]* @Lt_1390 to i8*) to i8*

	; deref THIS
	%vr43 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr43 SHR 3
	%vr46 = ptrtoint %CPU6510* %vr43 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	%vr48 = load i64, i64* %vr47
	%vr50 = bitcast i64 3 to i64
	%vr45 = ashr i64 %vr48, %vr50

	; bop vr45 AND 1
	%vr51 = and i64 %vr45, 1

	; call fb_ULongintToStr()
	; arg vr51
	%vr53 = call %FBSTRING* @fb_ULongintToStr( i64 %vr51 )
	%vr55 = bitcast i8* bitcast ([4 x i8]* @Lt_138F to i8*) to i8*

	; deref THIS
	%vr57 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr57 SHR 4
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr64 = bitcast i64 4 to i64
	%vr59 = ashr i64 %vr62, %vr64

	; bop vr59 AND 1
	%vr65 = and i64 %vr59, 1

	; call fb_ULongintToStr()
	; arg vr65
	%vr67 = call %FBSTRING* @fb_ULongintToStr( i64 %vr65 )
	%vr69 = bitcast i8* bitcast ([4 x i8]* @Lt_138E to i8*) to i8*
	%vr70 = bitcast i8* bitcast ([3 x i8]* @Lt_138D to i8*) to i8*

	; deref THIS
	%vr72 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr72 SHR 6
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr79 = bitcast i64 6 to i64
	%vr74 = ashr i64 %vr77, %vr79

	; bop vr74 AND 1
	%vr80 = and i64 %vr74, 1

	; call fb_ULongintToStr()
	; arg vr80
	%vr82 = call %FBSTRING* @fb_ULongintToStr( i64 %vr80 )
	%vr84 = bitcast i8* bitcast ([4 x i8]* @Lt_138C to i8*) to i8*

	; deref THIS
	%vr86 = load %CPU6510*, %CPU6510** %THIS.229

	; bop vr86 SHR 7
	%vr89 = ptrtoint %CPU6510* %vr86 to i64
	%vr90 = inttoptr i64 %vr89 to i64*
	%vr91 = load i64, i64* %vr90
	%vr93 = bitcast i64 7 to i64
	%vr88 = ashr i64 %vr91, %vr93

	; bop vr88 AND 1
	%vr94 = and i64 %vr88, 1

	; call fb_ULongintToStr()
	; arg vr94
	%vr96 = call %FBSTRING* @fb_ULongintToStr( i64 %vr94 )
	%vr98 = bitcast i8* bitcast ([4 x i8]* @Lt_138B to i8*) to i8*

	; deref THIS
	%vr100 = load %CPU6510*, %CPU6510** %THIS.229

	; call fb_HEXEx_b()
	; arg vr100+14
	%vr102 = ptrtoint %CPU6510* %vr100 to i64
	%vr103 = add i64 %vr102, 14
	%vr104 = inttoptr i64 %vr103 to i8*
	%vr105 = load i8, i8* %vr104
	; arg 2
	%vr101 = call %FBSTRING* @fb_HEXEx_b( i8 %vr105, i32 2 )
	%vr108 = bitcast i8* bitcast ([4 x i8]* @Lt_138A to i8*) to i8*

	; deref THIS
	%vr110 = load %CPU6510*, %CPU6510** %THIS.229

	; call fb_HEXEx_b()
	; arg vr110+10
	%vr112 = ptrtoint %CPU6510* %vr110 to i64
	%vr113 = add i64 %vr112, 10
	%vr114 = inttoptr i64 %vr113 to i8*
	%vr115 = load i8, i8* %vr114
	; arg 2
	%vr111 = call %FBSTRING* @fb_HEXEx_b( i8 %vr115, i32 2 )
	%vr118 = bitcast i8* bitcast ([4 x i8]* @Lt_1389 to i8*) to i8*

	; deref THIS
	%vr120 = load %CPU6510*, %CPU6510** %THIS.229

	; call fb_HEXEx_b()
	; arg vr120+9
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = add i64 %vr122, 9
	%vr124 = inttoptr i64 %vr123 to i8*
	%vr125 = load i8, i8* %vr124
	; arg 2
	%vr121 = call %FBSTRING* @fb_HEXEx_b( i8 %vr125, i32 2 )
	%vr128 = bitcast i8* bitcast ([4 x i8]* @Lt_1388 to i8*) to i8*

	; deref THIS
	%vr130 = load %CPU6510*, %CPU6510** %THIS.229

	; call fb_HEXEx_b()
	; arg vr130+8
	%vr132 = ptrtoint %CPU6510* %vr130 to i64
	%vr133 = add i64 %vr132, 8
	%vr134 = inttoptr i64 %vr133 to i8*
	%vr135 = load i8, i8* %vr134
	; arg 2
	%vr131 = call %FBSTRING* @fb_HEXEx_b( i8 %vr135, i32 2 )
	%vr138 = bitcast i8* bitcast ([4 x i8]* @Lt_1387 to i8*) to i8*

	; deref THIS
	%vr140 = load %CPU6510*, %CPU6510** %THIS.229

	; call fb_HEXEx_s()
	; arg vr140+12
	%vr142 = ptrtoint %CPU6510* %vr140 to i64
	%vr143 = add i64 %vr142, 12
	%vr144 = inttoptr i64 %vr143 to i16*
	%vr145 = load i16, i16* %vr144
	; arg 4
	%vr141 = call %FBSTRING* @fb_HEXEx_s( i16 %vr145, i32 4 )
	%vr148 = bitcast i8* bitcast ([4 x i8]* @Lt_1386 to i8*) to i8*

	; addrof LT_1393

	; memclear LT_1393
	%vr150 = bitcast %FBSTRING* %LT_1393.231 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr150, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1393

	; call fb_StrConcat()
	; arg LT_1393
	; arg vr148
	; arg 4
	; arg vr141
	%vr154 = bitcast %FBSTRING* %vr141 to i8*
	; arg -1
	%vr152 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1393.231, i8* %vr148, i64 4, i8* %vr154, i64 -1 )

	; addrof LT_1394

	; memclear LT_1394
	%vr157 = bitcast %FBSTRING* %LT_1394.232 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr157, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1394

	; call fb_StrConcat()
	; arg LT_1394
	; arg vr152
	%vr160 = bitcast %FBSTRING* %vr152 to i8*
	; arg -1
	; arg vr138
	; arg 4
	%vr159 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1394.232, i8* %vr160, i64 -1, i8* %vr138, i64 4 )

	; addrof LT_1395

	; memclear LT_1395
	%vr164 = bitcast %FBSTRING* %LT_1395.233 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr164, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1395

	; call fb_StrConcat()
	; arg LT_1395
	; arg vr159
	%vr167 = bitcast %FBSTRING* %vr159 to i8*
	; arg -1
	; arg vr131
	%vr169 = bitcast %FBSTRING* %vr131 to i8*
	; arg -1
	%vr166 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1395.233, i8* %vr167, i64 -1, i8* %vr169, i64 -1 )

	; addrof LT_1396

	; memclear LT_1396
	%vr172 = bitcast %FBSTRING* %LT_1396.234 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr172, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1396

	; call fb_StrConcat()
	; arg LT_1396
	; arg vr166
	%vr175 = bitcast %FBSTRING* %vr166 to i8*
	; arg -1
	; arg vr128
	; arg 4
	%vr174 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1396.234, i8* %vr175, i64 -1, i8* %vr128, i64 4 )

	; addrof LT_1397

	; memclear LT_1397
	%vr179 = bitcast %FBSTRING* %LT_1397.235 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr179, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1397

	; call fb_StrConcat()
	; arg LT_1397
	; arg vr174
	%vr182 = bitcast %FBSTRING* %vr174 to i8*
	; arg -1
	; arg vr121
	%vr184 = bitcast %FBSTRING* %vr121 to i8*
	; arg -1
	%vr181 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1397.235, i8* %vr182, i64 -1, i8* %vr184, i64 -1 )

	; addrof LT_1398

	; memclear LT_1398
	%vr187 = bitcast %FBSTRING* %LT_1398.236 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr187, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1398

	; call fb_StrConcat()
	; arg LT_1398
	; arg vr181
	%vr190 = bitcast %FBSTRING* %vr181 to i8*
	; arg -1
	; arg vr118
	; arg 4
	%vr189 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1398.236, i8* %vr190, i64 -1, i8* %vr118, i64 4 )

	; addrof LT_1399

	; memclear LT_1399
	%vr194 = bitcast %FBSTRING* %LT_1399.237 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr194, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1399

	; call fb_StrConcat()
	; arg LT_1399
	; arg vr189
	%vr197 = bitcast %FBSTRING* %vr189 to i8*
	; arg -1
	; arg vr111
	%vr199 = bitcast %FBSTRING* %vr111 to i8*
	; arg -1
	%vr196 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1399.237, i8* %vr197, i64 -1, i8* %vr199, i64 -1 )

	; addrof LT_139A

	; memclear LT_139A
	%vr202 = bitcast %FBSTRING* %LT_139A.238 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr202, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139A

	; call fb_StrConcat()
	; arg LT_139A
	; arg vr196
	%vr205 = bitcast %FBSTRING* %vr196 to i8*
	; arg -1
	; arg vr108
	; arg 4
	%vr204 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139A.238, i8* %vr205, i64 -1, i8* %vr108, i64 4 )

	; addrof LT_139B

	; memclear LT_139B
	%vr209 = bitcast %FBSTRING* %LT_139B.239 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr209, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139B

	; call fb_StrConcat()
	; arg LT_139B
	; arg vr204
	%vr212 = bitcast %FBSTRING* %vr204 to i8*
	; arg -1
	; arg vr101
	%vr214 = bitcast %FBSTRING* %vr101 to i8*
	; arg -1
	%vr211 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139B.239, i8* %vr212, i64 -1, i8* %vr214, i64 -1 )

	; addrof LT_139C

	; memclear LT_139C
	%vr217 = bitcast %FBSTRING* %LT_139C.240 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr217, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139C

	; call fb_StrConcat()
	; arg LT_139C
	; arg vr211
	%vr220 = bitcast %FBSTRING* %vr211 to i8*
	; arg -1
	; arg vr98
	; arg 4
	%vr219 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139C.240, i8* %vr220, i64 -1, i8* %vr98, i64 4 )

	; addrof LT_139D

	; memclear LT_139D
	%vr224 = bitcast %FBSTRING* %LT_139D.241 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr224, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139D

	; call fb_StrConcat()
	; arg LT_139D
	; arg vr219
	%vr227 = bitcast %FBSTRING* %vr219 to i8*
	; arg -1
	; arg vr96
	%vr229 = bitcast %FBSTRING* %vr96 to i8*
	; arg -1
	%vr226 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139D.241, i8* %vr227, i64 -1, i8* %vr229, i64 -1 )

	; addrof LT_139E

	; memclear LT_139E
	%vr232 = bitcast %FBSTRING* %LT_139E.242 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr232, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139E

	; call fb_StrConcat()
	; arg LT_139E
	; arg vr226
	%vr235 = bitcast %FBSTRING* %vr226 to i8*
	; arg -1
	; arg vr84
	; arg 4
	%vr234 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139E.242, i8* %vr235, i64 -1, i8* %vr84, i64 4 )

	; addrof LT_139F

	; memclear LT_139F
	%vr239 = bitcast %FBSTRING* %LT_139F.243 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr239, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_139F

	; call fb_StrConcat()
	; arg LT_139F
	; arg vr234
	%vr242 = bitcast %FBSTRING* %vr234 to i8*
	; arg -1
	; arg vr82
	%vr244 = bitcast %FBSTRING* %vr82 to i8*
	; arg -1
	%vr241 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_139F.243, i8* %vr242, i64 -1, i8* %vr244, i64 -1 )

	; addrof LT_13A0

	; memclear LT_13A0
	%vr247 = bitcast %FBSTRING* %LT_13A0.244 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr247, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A0

	; call fb_StrConcat()
	; arg LT_13A0
	; arg vr241
	%vr250 = bitcast %FBSTRING* %vr241 to i8*
	; arg -1
	; arg vr70
	; arg 3
	%vr249 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A0.244, i8* %vr250, i64 -1, i8* %vr70, i64 3 )

	; addrof LT_13A1

	; memclear LT_13A1
	%vr254 = bitcast %FBSTRING* %LT_13A1.245 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr254, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A1

	; call fb_StrConcat()
	; arg LT_13A1
	; arg vr249
	%vr257 = bitcast %FBSTRING* %vr249 to i8*
	; arg -1
	; arg vr69
	; arg 4
	%vr256 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A1.245, i8* %vr257, i64 -1, i8* %vr69, i64 4 )

	; addrof LT_13A2

	; memclear LT_13A2
	%vr261 = bitcast %FBSTRING* %LT_13A2.246 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr261, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A2

	; call fb_StrConcat()
	; arg LT_13A2
	; arg vr256
	%vr264 = bitcast %FBSTRING* %vr256 to i8*
	; arg -1
	; arg vr67
	%vr266 = bitcast %FBSTRING* %vr67 to i8*
	; arg -1
	%vr263 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A2.246, i8* %vr264, i64 -1, i8* %vr266, i64 -1 )

	; addrof LT_13A3

	; memclear LT_13A3
	%vr269 = bitcast %FBSTRING* %LT_13A3.247 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr269, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A3

	; call fb_StrConcat()
	; arg LT_13A3
	; arg vr263
	%vr272 = bitcast %FBSTRING* %vr263 to i8*
	; arg -1
	; arg vr55
	; arg 4
	%vr271 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A3.247, i8* %vr272, i64 -1, i8* %vr55, i64 4 )

	; addrof LT_13A4

	; memclear LT_13A4
	%vr276 = bitcast %FBSTRING* %LT_13A4.248 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr276, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A4

	; call fb_StrConcat()
	; arg LT_13A4
	; arg vr271
	%vr279 = bitcast %FBSTRING* %vr271 to i8*
	; arg -1
	; arg vr53
	%vr281 = bitcast %FBSTRING* %vr53 to i8*
	; arg -1
	%vr278 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A4.248, i8* %vr279, i64 -1, i8* %vr281, i64 -1 )

	; addrof LT_13A5

	; memclear LT_13A5
	%vr284 = bitcast %FBSTRING* %LT_13A5.249 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr284, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A5

	; call fb_StrConcat()
	; arg LT_13A5
	; arg vr278
	%vr287 = bitcast %FBSTRING* %vr278 to i8*
	; arg -1
	; arg vr41
	; arg 4
	%vr286 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A5.249, i8* %vr287, i64 -1, i8* %vr41, i64 4 )

	; addrof LT_13A6

	; memclear LT_13A6
	%vr291 = bitcast %FBSTRING* %LT_13A6.250 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr291, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A6

	; call fb_StrConcat()
	; arg LT_13A6
	; arg vr286
	%vr294 = bitcast %FBSTRING* %vr286 to i8*
	; arg -1
	; arg vr39
	%vr296 = bitcast %FBSTRING* %vr39 to i8*
	; arg -1
	%vr293 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A6.250, i8* %vr294, i64 -1, i8* %vr296, i64 -1 )

	; addrof LT_13A7

	; memclear LT_13A7
	%vr299 = bitcast %FBSTRING* %LT_13A7.251 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr299, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A7

	; call fb_StrConcat()
	; arg LT_13A7
	; arg vr293
	%vr302 = bitcast %FBSTRING* %vr293 to i8*
	; arg -1
	; arg vr27
	; arg 4
	%vr301 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A7.251, i8* %vr302, i64 -1, i8* %vr27, i64 4 )

	; addrof LT_13A8

	; memclear LT_13A8
	%vr306 = bitcast %FBSTRING* %LT_13A8.252 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr306, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A8

	; call fb_StrConcat()
	; arg LT_13A8
	; arg vr301
	%vr309 = bitcast %FBSTRING* %vr301 to i8*
	; arg -1
	; arg vr25
	%vr311 = bitcast %FBSTRING* %vr25 to i8*
	; arg -1
	%vr308 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A8.252, i8* %vr309, i64 -1, i8* %vr311, i64 -1 )

	; addrof LT_13A9

	; memclear LT_13A9
	%vr314 = bitcast %FBSTRING* %LT_13A9.253 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr314, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13A9

	; call fb_StrConcat()
	; arg LT_13A9
	; arg vr308
	%vr317 = bitcast %FBSTRING* %vr308 to i8*
	; arg -1
	; arg vr13
	; arg 4
	%vr316 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13A9.253, i8* %vr317, i64 -1, i8* %vr13, i64 4 )

	; addrof LT_13AA

	; memclear LT_13AA
	%vr321 = bitcast %FBSTRING* %LT_13AA.254 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr321, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_13AA

	; call fb_StrConcat()
	; arg LT_13AA
	; arg vr316
	%vr324 = bitcast %FBSTRING* %vr316 to i8*
	; arg -1
	; arg vr11
	%vr326 = bitcast %FBSTRING* %vr11 to i8*
	; arg -1
	%vr323 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_13AA.254, i8* %vr324, i64 -1, i8* %vr326, i64 -1 )

	; addrof fb$result
	%vr329 = bitcast %FBSTRING* %fb$result.230 to i8*

	; call fb_StrInit()
	; arg vr329
	; arg -1
	; arg vr323
	%vr332 = bitcast %FBSTRING* %vr323 to i8*
	; arg -1
	; arg 0
	%vr330 = call %FBSTRING* @fb_StrInit( i8* %vr329, i64 -1, i8* %vr332, i64 -1, i32 0 )

	; goto .Lt_1385
	br label %.Lt_1385
.Lt_13AB:

	; label .Lt_1385
	br label %.Lt_1385
.Lt_1385:

	; addrof fb$result
	%vr336 = bitcast %FBSTRING* %fb$result.230 to %FBSTRING*

	; call fb_StrAllocTempResult()
	; arg vr336
	%vr337 = call %FBSTRING* @fb_StrAllocTempResult( %FBSTRING* %vr336 )
}

define i64 @_ZN7CPU65104TICKEy( %CPU6510* %THIS.255$, i64 %FLG.256$ ) nounwind
{

	; paramvar THIS
	%THIS.255 = alloca %CPU6510*
	store %CPU6510* %THIS.255$, %CPU6510** %THIS.255

	; paramvar FLG
	%FLG.256 = alloca i64
	store i64 %FLG.256$, i64* %FLG.256

	; localvar fb$result
	%fb$result.257 = alloca i64

	; localvar MSG
	%MSG.258 = alloca %FBSTRING

	; localvar V
	%V.259 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.257 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13AC
	br label %.Lt_13AC
.Lt_13AC:

	; addrof MSG

	; memclear MSG
	%vr3 = bitcast %FBSTRING* %MSG.258 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 24, i32 1, i1 false )

	; addrof V

	; memclear V
	%vr5 = bitcast %MULTI* %V.259 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr7 = load %CPU6510*, %CPU6510** %THIS.255

	; addrof vr7+24
	%vr9 = ptrtoint %CPU6510* %vr7 to i64
	%vr10 = add i64 %vr9, 24
	%vr11 = inttoptr i64 %vr10 to %OPCODE*

	; deref THIS
	%vr13 = load %CPU6510*, %CPU6510** %THIS.255

	; conv vr13+12 => vr14
	%vr15 = ptrtoint %CPU6510* %vr13 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr14 = zext i16 %vr18 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.255

	; call READUBYTE()
	; arg vr20+16
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 16
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	; arg vr14
	%vr21 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr25, i64 %vr14 )

	; conv vr21 => vr26
	%vr26 = sext i8 %vr21 to i64

	; bop vr26 * 56
	%vr27 = mul i64 %vr26, 56

	; bop THIS + vr27
	%vr29 = load %CPU6510*, %CPU6510** %THIS.255
	%vr30 = inttoptr i64 %vr27 to %CPU6510*
	%vr28 = add %CPU6510* %vr29, %vr30

	; addrof vr28+80
	%vr32 = ptrtoint %CPU6510* %vr28 to i64
	%vr33 = add i64 %vr32, 80
	%vr34 = inttoptr i64 %vr33 to %OPCODE*

	; memmove vr11 <= vr34
	%vr35 = bitcast %OPCODE* %vr11 to i8*
	%vr36 = bitcast %OPCODE* %vr34 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr35, i8* %vr36, i32 56, i32 1, i1 false )

	; deref THIS
	%vr38 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr38+64 := 0
	%vr39 = ptrtoint %CPU6510* %vr38 to i64
	%vr40 = add i64 %vr39, 64
	%vr41 = inttoptr i64 %vr40 to i16*
	store i16 trunc (i64 0 to i16), i16* %vr41

	; bop TICKS + 1
	%vr43 = load i64, i64* @TICKS.260
	%vr42 = add i64 %vr43, 1

	; store TICKS := vr42
	store i64 %vr42, i64* @TICKS.260

	; deref THIS
	%vr45 = load %CPU6510*, %CPU6510** %THIS.255

	; conv vr45+12 => vr46
	%vr47 = ptrtoint %CPU6510* %vr45 to i64
	%vr48 = add i64 %vr47, 12
	%vr49 = inttoptr i64 %vr48 to i16*
	%vr50 = load i16, i16* %vr49
	%vr46 = sext i16 %vr50 to i64

	; bop vr46 + 1
	%vr51 = add i64 %vr46, 1

	; conv vr51 => vr52
	%vr52 = trunc i64 %vr51 to i16

	; deref THIS
	%vr54 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr54+12 := vr52
	%vr55 = ptrtoint %CPU6510* %vr54 to i64
	%vr56 = add i64 %vr55, 12
	%vr57 = inttoptr i64 %vr56 to i16*
	store i16 %vr52, i16* %vr57

	; localvar LT_13B0
	%LT_13B0.261 = alloca i64

	; deref THIS
	%vr59 = load %CPU6510*, %CPU6510** %THIS.255
	%vr61 = ptrtoint %CPU6510* %vr59 to i64
	%vr62 = add i64 %vr61, 40
	%vr63 = inttoptr i64 %vr62 to i64*
	%vr64 = load i64, i64* %vr63
	%vr60 = bitcast i64 %vr64 to i64

	; store LT_13B0 := vr60
	store i64 %vr60, i64* %LT_13B0.261

	; goto .Lt_13AF
	br label %.Lt_13AF
.Lt_13BE:

	; label .Lt_13B1
	br label %.Lt_13B1
.Lt_13B1:

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13BF:

	; label .Lt_13B2
	br label %.Lt_13B2
.Lt_13B2:

	; deref THIS
	%vr66 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr66+72
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 72
	%vr69 = inttoptr i64 %vr68 to void ( %CPU6510* )**
	%vr70 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr69
	; arg THIS
	%vr71 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr70( %CPU6510* %vr71 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C0:

	; label .Lt_13B3
	br label %.Lt_13B3
.Lt_13B3:

	; call ADR_IMM()
	; arg THIS
	%vr73 = load %CPU6510*, %CPU6510** %THIS.255
	%vr72 = call i64 @_ZN7CPU65107ADR_IMMEv( %CPU6510* %vr73 )

	; conv vr72 => vr74
	%vr74 = trunc i64 %vr72 to i16

	; deref THIS
	%vr76 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr76+64 := vr74
	%vr77 = ptrtoint %CPU6510* %vr76 to i64
	%vr78 = add i64 %vr77, 64
	%vr79 = inttoptr i64 %vr78 to i16*
	store i16 %vr74, i16* %vr79

	; deref THIS
	%vr81 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr81+72
	%vr82 = ptrtoint %CPU6510* %vr81 to i64
	%vr83 = add i64 %vr82, 72
	%vr84 = inttoptr i64 %vr83 to void ( %CPU6510* )**
	%vr85 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr84
	; arg THIS
	%vr86 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr85( %CPU6510* %vr86 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C1:

	; label .Lt_13B4
	br label %.Lt_13B4
.Lt_13B4:

	; call ADR_ABS()
	; arg THIS
	%vr88 = load %CPU6510*, %CPU6510** %THIS.255
	%vr87 = call i64 @_ZN7CPU65107ADR_ABSEv( %CPU6510* %vr88 )

	; conv vr87 => vr89
	%vr89 = trunc i64 %vr87 to i16

	; deref THIS
	%vr91 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr91+64 := vr89
	%vr92 = ptrtoint %CPU6510* %vr91 to i64
	%vr93 = add i64 %vr92, 64
	%vr94 = inttoptr i64 %vr93 to i16*
	store i16 %vr89, i16* %vr94

	; deref THIS
	%vr96 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr96+72
	%vr97 = ptrtoint %CPU6510* %vr96 to i64
	%vr98 = add i64 %vr97, 72
	%vr99 = inttoptr i64 %vr98 to void ( %CPU6510* )**
	%vr100 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr99
	; arg THIS
	%vr101 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr100( %CPU6510* %vr101 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C2:

	; label .Lt_13B5
	br label %.Lt_13B5
.Lt_13B5:

	; call ADR_ZERO()
	; arg THIS
	%vr103 = load %CPU6510*, %CPU6510** %THIS.255
	%vr102 = call i64 @_ZN7CPU65108ADR_ZEROEv( %CPU6510* %vr103 )

	; conv vr102 => vr104
	%vr104 = trunc i64 %vr102 to i16

	; deref THIS
	%vr106 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr106+64 := vr104
	%vr107 = ptrtoint %CPU6510* %vr106 to i64
	%vr108 = add i64 %vr107, 64
	%vr109 = inttoptr i64 %vr108 to i16*
	store i16 %vr104, i16* %vr109

	; deref THIS
	%vr111 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr111+72
	%vr112 = ptrtoint %CPU6510* %vr111 to i64
	%vr113 = add i64 %vr112, 72
	%vr114 = inttoptr i64 %vr113 to void ( %CPU6510* )**
	%vr115 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr114
	; arg THIS
	%vr116 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr115( %CPU6510* %vr116 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C3:

	; label .Lt_13B6
	br label %.Lt_13B6
.Lt_13B6:

	; call ADR_ZEROX()
	; arg THIS
	%vr118 = load %CPU6510*, %CPU6510** %THIS.255
	%vr117 = call i64 @_ZN7CPU65109ADR_ZEROXEv( %CPU6510* %vr118 )

	; conv vr117 => vr119
	%vr119 = trunc i64 %vr117 to i16

	; deref THIS
	%vr121 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr121+64 := vr119
	%vr122 = ptrtoint %CPU6510* %vr121 to i64
	%vr123 = add i64 %vr122, 64
	%vr124 = inttoptr i64 %vr123 to i16*
	store i16 %vr119, i16* %vr124

	; deref THIS
	%vr126 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr126+72
	%vr127 = ptrtoint %CPU6510* %vr126 to i64
	%vr128 = add i64 %vr127, 72
	%vr129 = inttoptr i64 %vr128 to void ( %CPU6510* )**
	%vr130 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr129
	; arg THIS
	%vr131 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr130( %CPU6510* %vr131 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C4:

	; label .Lt_13B7
	br label %.Lt_13B7
.Lt_13B7:

	; call ADR_ZEROY()
	; arg THIS
	%vr133 = load %CPU6510*, %CPU6510** %THIS.255
	%vr132 = call i64 @_ZN7CPU65109ADR_ZEROYEv( %CPU6510* %vr133 )

	; conv vr132 => vr134
	%vr134 = trunc i64 %vr132 to i16

	; deref THIS
	%vr136 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr136+64 := vr134
	%vr137 = ptrtoint %CPU6510* %vr136 to i64
	%vr138 = add i64 %vr137, 64
	%vr139 = inttoptr i64 %vr138 to i16*
	store i16 %vr134, i16* %vr139

	; deref THIS
	%vr141 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr141+72
	%vr142 = ptrtoint %CPU6510* %vr141 to i64
	%vr143 = add i64 %vr142, 72
	%vr144 = inttoptr i64 %vr143 to void ( %CPU6510* )**
	%vr145 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr144
	; arg THIS
	%vr146 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr145( %CPU6510* %vr146 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C5:

	; label .Lt_13B8
	br label %.Lt_13B8
.Lt_13B8:

	; call ADR_ABSX()
	; arg THIS
	%vr148 = load %CPU6510*, %CPU6510** %THIS.255
	%vr147 = call i64 @_ZN7CPU65108ADR_ABSXEv( %CPU6510* %vr148 )

	; conv vr147 => vr149
	%vr149 = trunc i64 %vr147 to i16

	; deref THIS
	%vr151 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr151+64 := vr149
	%vr152 = ptrtoint %CPU6510* %vr151 to i64
	%vr153 = add i64 %vr152, 64
	%vr154 = inttoptr i64 %vr153 to i16*
	store i16 %vr149, i16* %vr154

	; deref THIS
	%vr156 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr156+72
	%vr157 = ptrtoint %CPU6510* %vr156 to i64
	%vr158 = add i64 %vr157, 72
	%vr159 = inttoptr i64 %vr158 to void ( %CPU6510* )**
	%vr160 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr159
	; arg THIS
	%vr161 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr160( %CPU6510* %vr161 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C6:

	; label .Lt_13B9
	br label %.Lt_13B9
.Lt_13B9:

	; call ADR_ABSY()
	; arg THIS
	%vr163 = load %CPU6510*, %CPU6510** %THIS.255
	%vr162 = call i64 @_ZN7CPU65108ADR_ABSYEv( %CPU6510* %vr163 )

	; conv vr162 => vr164
	%vr164 = trunc i64 %vr162 to i16

	; deref THIS
	%vr166 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr166+64 := vr164
	%vr167 = ptrtoint %CPU6510* %vr166 to i64
	%vr168 = add i64 %vr167, 64
	%vr169 = inttoptr i64 %vr168 to i16*
	store i16 %vr164, i16* %vr169

	; deref THIS
	%vr171 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr171+72
	%vr172 = ptrtoint %CPU6510* %vr171 to i64
	%vr173 = add i64 %vr172, 72
	%vr174 = inttoptr i64 %vr173 to void ( %CPU6510* )**
	%vr175 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr174
	; arg THIS
	%vr176 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr175( %CPU6510* %vr176 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C7:

	; label .Lt_13BA
	br label %.Lt_13BA
.Lt_13BA:

	; call ADR_REL()
	; arg THIS
	%vr178 = load %CPU6510*, %CPU6510** %THIS.255
	%vr177 = call i64 @_ZN7CPU65107ADR_RELEv( %CPU6510* %vr178 )

	; conv vr177 => vr179
	%vr179 = trunc i64 %vr177 to i16

	; deref THIS
	%vr181 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr181+64 := vr179
	%vr182 = ptrtoint %CPU6510* %vr181 to i64
	%vr183 = add i64 %vr182, 64
	%vr184 = inttoptr i64 %vr183 to i16*
	store i16 %vr179, i16* %vr184

	; deref THIS
	%vr186 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr186+72
	%vr187 = ptrtoint %CPU6510* %vr186 to i64
	%vr188 = add i64 %vr187, 72
	%vr189 = inttoptr i64 %vr188 to void ( %CPU6510* )**
	%vr190 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr189
	; arg THIS
	%vr191 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr190( %CPU6510* %vr191 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C8:

	; label .Lt_13BB
	br label %.Lt_13BB
.Lt_13BB:

	; call ADR_INDX()
	; arg THIS
	%vr193 = load %CPU6510*, %CPU6510** %THIS.255
	%vr192 = call i64 @_ZN7CPU65108ADR_INDXEv( %CPU6510* %vr193 )

	; conv vr192 => vr194
	%vr194 = trunc i64 %vr192 to i16

	; deref THIS
	%vr196 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr196+64 := vr194
	%vr197 = ptrtoint %CPU6510* %vr196 to i64
	%vr198 = add i64 %vr197, 64
	%vr199 = inttoptr i64 %vr198 to i16*
	store i16 %vr194, i16* %vr199

	; deref THIS
	%vr201 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr201+72
	%vr202 = ptrtoint %CPU6510* %vr201 to i64
	%vr203 = add i64 %vr202, 72
	%vr204 = inttoptr i64 %vr203 to void ( %CPU6510* )**
	%vr205 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr204
	; arg THIS
	%vr206 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr205( %CPU6510* %vr206 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13C9:

	; label .Lt_13BC
	br label %.Lt_13BC
.Lt_13BC:

	; call ADR_INDY()
	; arg THIS
	%vr208 = load %CPU6510*, %CPU6510** %THIS.255
	%vr207 = call i64 @_ZN7CPU65108ADR_INDYEv( %CPU6510* %vr208 )

	; conv vr207 => vr209
	%vr209 = trunc i64 %vr207 to i16

	; deref THIS
	%vr211 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr211+64 := vr209
	%vr212 = ptrtoint %CPU6510* %vr211 to i64
	%vr213 = add i64 %vr212, 64
	%vr214 = inttoptr i64 %vr213 to i16*
	store i16 %vr209, i16* %vr214

	; deref THIS
	%vr216 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr216+72
	%vr217 = ptrtoint %CPU6510* %vr216 to i64
	%vr218 = add i64 %vr217, 72
	%vr219 = inttoptr i64 %vr218 to void ( %CPU6510* )**
	%vr220 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr219
	; arg THIS
	%vr221 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr220( %CPU6510* %vr221 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13CA:

	; label .Lt_13BD
	br label %.Lt_13BD
.Lt_13BD:

	; call ADR_IND()
	; arg THIS
	%vr223 = load %CPU6510*, %CPU6510** %THIS.255
	%vr222 = call i64 @_ZN7CPU65107ADR_INDEv( %CPU6510* %vr223 )

	; conv vr222 => vr224
	%vr224 = trunc i64 %vr222 to i16

	; deref THIS
	%vr226 = load %CPU6510*, %CPU6510** %THIS.255

	; store vr226+64 := vr224
	%vr227 = ptrtoint %CPU6510* %vr226 to i64
	%vr228 = add i64 %vr227, 64
	%vr229 = inttoptr i64 %vr228 to i16*
	store i16 %vr224, i16* %vr229

	; deref THIS
	%vr231 = load %CPU6510*, %CPU6510** %THIS.255

	; callptr vr231+72
	%vr232 = ptrtoint %CPU6510* %vr231 to i64
	%vr233 = add i64 %vr232, 72
	%vr234 = inttoptr i64 %vr233 to void ( %CPU6510* )**
	%vr235 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr234
	; arg THIS
	%vr236 = load %CPU6510*, %CPU6510** %THIS.255
	call void %vr235( %CPU6510* %vr236 )

	; goto .Lt_13AE
	br label %.Lt_13AE
.Lt_13CB:

	; label .Lt_13AF
	br label %.Lt_13AF
.Lt_13AF:

	; jmptb LT_13B0
	%vr237 = load i64, i64* %LT_13B0.261
	switch i64 %vr237, label %.Lt_13AE [
		i64 0, label %.Lt_13B1
		i64 1, label %.Lt_13B2
		i64 2, label %.Lt_13B3
		i64 3, label %.Lt_13B4
		i64 4, label %.Lt_13B5
		i64 5, label %.Lt_13B6
		i64 6, label %.Lt_13B7
		i64 7, label %.Lt_13B8
		i64 8, label %.Lt_13B9
		i64 9, label %.Lt_13BA
		i64 10, label %.Lt_13BB
		i64 11, label %.Lt_13BC
		i64 12, label %.Lt_13BD
	]

	; label .Lt_13AE
	br label %.Lt_13AE
.Lt_13AE:

	; store fb$result := 0
	store i64 0, i64* %fb$result.257

	; addrof MSG
	%vr239 = bitcast %FBSTRING* %MSG.258 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr239
	call void @fb_StrDelete( %FBSTRING* %vr239 )

	; goto .Lt_13AD
	br label %.Lt_13AD
.Lt_13CC:

	; addrof MSG
	%vr241 = bitcast %FBSTRING* %MSG.258 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr241
	call void @fb_StrDelete( %FBSTRING* %vr241 )

	; label .Lt_13AD
	br label %.Lt_13AD
.Lt_13AD:

	; loadres fb$result
	%vr243 = load i64, i64* %fb$result.257
	ret i64 %vr243
}

define i64 @_ZN7CPU65107ADR_UNKEv( %CPU6510* %THIS.262$ ) nounwind
{

	; paramvar THIS
	%THIS.262 = alloca %CPU6510*
	store %CPU6510* %THIS.262$, %CPU6510** %THIS.262

	; localvar fb$result
	%fb$result.263 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.263 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13CD
	br label %.Lt_13CD
.Lt_13CD:

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; store fb$result := 0
	store i64 0, i64* %fb$result.263

	; goto .Lt_13CE
	br label %.Lt_13CE
.Lt_13CF:

	; label .Lt_13CE
	br label %.Lt_13CE
.Lt_13CE:

	; loadres fb$result
	%vr4 = load i64, i64* %fb$result.263
	ret i64 %vr4
}

define i64 @_ZN7CPU65107ADR_IMMEv( %CPU6510* %THIS.264$ ) nounwind
{

	; paramvar THIS
	%THIS.264 = alloca %CPU6510*
	store %CPU6510* %THIS.264$, %CPU6510** %THIS.264

	; localvar fb$result
	%fb$result.265 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.265 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13D0
	br label %.Lt_13D0
.Lt_13D0:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.264

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; store fb$result := vr4
	store i64 %vr4, i64* %fb$result.265

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.264

	; conv vr10+12 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = sext i16 %vr15 to i64

	; bop vr11 + 1
	%vr16 = add i64 %vr11, 1

	; conv vr16 => vr17
	%vr17 = trunc i64 %vr16 to i16

	; deref THIS
	%vr19 = load %CPU6510*, %CPU6510** %THIS.264

	; store vr19+12 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	store i16 %vr17, i16* %vr22

	; label .Lt_13D1
	br label %.Lt_13D1
.Lt_13D1:

	; loadres fb$result
	%vr24 = load i64, i64* %fb$result.265
	ret i64 %vr24
}

define i64 @_ZN7CPU65107ADR_RELEv( %CPU6510* %THIS.266$ ) nounwind
{

	; paramvar THIS
	%THIS.266 = alloca %CPU6510*
	store %CPU6510* %THIS.266$, %CPU6510** %THIS.266

	; localvar fb$result
	%fb$result.267 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.267 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13D2
	br label %.Lt_13D2
.Lt_13D2:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.266

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; store fb$result := vr4
	store i64 %vr4, i64* %fb$result.267

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.266

	; conv vr10+12 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = sext i16 %vr15 to i64

	; bop vr11 + 1
	%vr16 = add i64 %vr11, 1

	; conv vr16 => vr17
	%vr17 = trunc i64 %vr16 to i16

	; deref THIS
	%vr19 = load %CPU6510*, %CPU6510** %THIS.266

	; store vr19+12 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	store i16 %vr17, i16* %vr22

	; label .Lt_13D3
	br label %.Lt_13D3
.Lt_13D3:

	; loadres fb$result
	%vr24 = load i64, i64* %fb$result.267
	ret i64 %vr24
}

define i64 @_ZN7CPU65107ADR_ABSEv( %CPU6510* %THIS.268$ ) nounwind
{

	; paramvar THIS
	%THIS.268 = alloca %CPU6510*
	store %CPU6510* %THIS.268$, %CPU6510** %THIS.268

	; localvar fb$result
	%fb$result.269 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.269 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13D4
	br label %.Lt_13D4
.Lt_13D4:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.268

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.268

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = zext i16 %vr11 to i64

	; store fb$result := vr16
	store i64 %vr16, i64* %fb$result.269

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.268

	; conv vr18+12 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	%vr23 = load i16, i16* %vr22
	%vr19 = sext i16 %vr23 to i64

	; bop vr19 + 2
	%vr24 = add i64 %vr19, 2

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.268

	; store vr27+12 := vr25
	%vr28 = ptrtoint %CPU6510* %vr27 to i64
	%vr29 = add i64 %vr28, 12
	%vr30 = inttoptr i64 %vr29 to i16*
	store i16 %vr25, i16* %vr30

	; label .Lt_13D5
	br label %.Lt_13D5
.Lt_13D5:

	; loadres fb$result
	%vr32 = load i64, i64* %fb$result.269
	ret i64 %vr32
}

define i64 @_ZN7CPU65108ADR_ZEROEv( %CPU6510* %THIS.270$ ) nounwind
{

	; paramvar THIS
	%THIS.270 = alloca %CPU6510*
	store %CPU6510* %THIS.270$, %CPU6510** %THIS.270

	; localvar fb$result
	%fb$result.271 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.271 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13D6
	br label %.Lt_13D6
.Lt_13D6:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.270

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.270

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; bop vr16 AND 255
	%vr17 = and i64 %vr16, 255
	%vr18 = bitcast i64 %vr17 to i64

	; store fb$result := vr18
	store i64 %vr18, i64* %fb$result.271

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.270

	; conv vr20+12 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 12
	%vr24 = inttoptr i64 %vr23 to i16*
	%vr25 = load i16, i16* %vr24
	%vr21 = sext i16 %vr25 to i64

	; bop vr21 + 1
	%vr26 = add i64 %vr21, 1

	; conv vr26 => vr27
	%vr27 = trunc i64 %vr26 to i16

	; deref THIS
	%vr29 = load %CPU6510*, %CPU6510** %THIS.270

	; store vr29+12 := vr27
	%vr30 = ptrtoint %CPU6510* %vr29 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	store i16 %vr27, i16* %vr32

	; label .Lt_13D7
	br label %.Lt_13D7
.Lt_13D7:

	; loadres fb$result
	%vr34 = load i64, i64* %fb$result.271
	ret i64 %vr34
}

define i64 @_ZN7CPU65109ADR_ZEROXEv( %CPU6510* %THIS.272$ ) nounwind
{

	; paramvar THIS
	%THIS.272 = alloca %CPU6510*
	store %CPU6510* %THIS.272$, %CPU6510** %THIS.272

	; localvar fb$result
	%fb$result.273 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.273 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13D8
	br label %.Lt_13D8
.Lt_13D8:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.272

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.272

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.272

	; conv vr18+9 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 9
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19

	; bop vr24 AND 255
	%vr25 = and i64 %vr24, 255
	%vr26 = bitcast i64 %vr25 to i64

	; store fb$result := vr26
	store i64 %vr26, i64* %fb$result.273

	; deref THIS
	%vr28 = load %CPU6510*, %CPU6510** %THIS.272

	; conv vr28+12 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = sext i16 %vr33 to i64

	; bop vr29 + 1
	%vr34 = add i64 %vr29, 1

	; conv vr34 => vr35
	%vr35 = trunc i64 %vr34 to i16

	; deref THIS
	%vr37 = load %CPU6510*, %CPU6510** %THIS.272

	; store vr37+12 := vr35
	%vr38 = ptrtoint %CPU6510* %vr37 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr35, i16* %vr40

	; label .Lt_13D9
	br label %.Lt_13D9
.Lt_13D9:

	; loadres fb$result
	%vr42 = load i64, i64* %fb$result.273
	ret i64 %vr42
}

define i64 @_ZN7CPU65109ADR_ZEROYEv( %CPU6510* %THIS.274$ ) nounwind
{

	; paramvar THIS
	%THIS.274 = alloca %CPU6510*
	store %CPU6510* %THIS.274$, %CPU6510** %THIS.274

	; localvar fb$result
	%fb$result.275 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.275 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13DA
	br label %.Lt_13DA
.Lt_13DA:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.274

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.274

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.274

	; conv vr18+10 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 10
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19

	; bop vr24 AND 255
	%vr25 = and i64 %vr24, 255
	%vr26 = bitcast i64 %vr25 to i64

	; store fb$result := vr26
	store i64 %vr26, i64* %fb$result.275

	; deref THIS
	%vr28 = load %CPU6510*, %CPU6510** %THIS.274

	; conv vr28+12 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = sext i16 %vr33 to i64

	; bop vr29 + 1
	%vr34 = add i64 %vr29, 1

	; conv vr34 => vr35
	%vr35 = trunc i64 %vr34 to i16

	; deref THIS
	%vr37 = load %CPU6510*, %CPU6510** %THIS.274

	; store vr37+12 := vr35
	%vr38 = ptrtoint %CPU6510* %vr37 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr35, i16* %vr40

	; label .Lt_13DB
	br label %.Lt_13DB
.Lt_13DB:

	; loadres fb$result
	%vr42 = load i64, i64* %fb$result.275
	ret i64 %vr42
}

define i64 @_ZN7CPU65108ADR_ABSXEv( %CPU6510* %THIS.276$ ) nounwind
{

	; paramvar THIS
	%THIS.276 = alloca %CPU6510*
	store %CPU6510* %THIS.276$, %CPU6510** %THIS.276

	; localvar fb$result
	%fb$result.277 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.277 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13DC
	br label %.Lt_13DC
.Lt_13DC:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.276

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.276

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i16 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.276

	; conv vr18+9 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 9
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19
	%vr25 = bitcast i64 %vr24 to i64

	; store fb$result := vr25
	store i64 %vr25, i64* %fb$result.277

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.276

	; conv vr27+12 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 12
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = sext i16 %vr32 to i64

	; bop vr28 + 2
	%vr33 = add i64 %vr28, 2

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i16

	; deref THIS
	%vr36 = load %CPU6510*, %CPU6510** %THIS.276

	; store vr36+12 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 12
	%vr39 = inttoptr i64 %vr38 to i16*
	store i16 %vr34, i16* %vr39

	; label .Lt_13DD
	br label %.Lt_13DD
.Lt_13DD:

	; loadres fb$result
	%vr41 = load i64, i64* %fb$result.277
	ret i64 %vr41
}

define i64 @_ZN7CPU65108ADR_ABSYEv( %CPU6510* %THIS.278$ ) nounwind
{

	; paramvar THIS
	%THIS.278 = alloca %CPU6510*
	store %CPU6510* %THIS.278$, %CPU6510** %THIS.278

	; localvar fb$result
	%fb$result.279 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.279 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13DE
	br label %.Lt_13DE
.Lt_13DE:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.278

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.278

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i16 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.278

	; conv vr18+10 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 10
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19
	%vr25 = bitcast i64 %vr24 to i64

	; store fb$result := vr25
	store i64 %vr25, i64* %fb$result.279

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.278

	; conv vr27+12 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 12
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = sext i16 %vr32 to i64

	; bop vr28 + 2
	%vr33 = add i64 %vr28, 2

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i16

	; deref THIS
	%vr36 = load %CPU6510*, %CPU6510** %THIS.278

	; store vr36+12 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 12
	%vr39 = inttoptr i64 %vr38 to i16*
	store i16 %vr34, i16* %vr39

	; label .Lt_13DF
	br label %.Lt_13DF
.Lt_13DF:

	; loadres fb$result
	%vr41 = load i64, i64* %fb$result.279
	ret i64 %vr41
}

define i64 @_ZN7CPU65108ADR_INDXEv( %CPU6510* %THIS.280$ ) nounwind
{

	; paramvar THIS
	%THIS.280 = alloca %CPU6510*
	store %CPU6510* %THIS.280$, %CPU6510** %THIS.280

	; localvar fb$result
	%fb$result.281 = alloca i64

	; localvar V
	%V.282 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.281 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13E0
	br label %.Lt_13E0
.Lt_13E0:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.282 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.280

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; conv vr13 => vr18
	%vr18 = sext i8 %vr13 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; bop vr18 + vr21
	%vr26 = add i64 %vr18, %vr21

	; bop vr26 AND 255
	%vr27 = and i64 %vr26, 255

	; conv vr27 => vr28
	%vr28 = trunc i64 %vr27 to i16

	; store V := vr28
	%vr29 = bitcast %MULTI* %V.282 to i16*
	store i16 %vr28, i16* %vr29

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.282 to i16*
	%vr32 = load i16, i16* %vr31
	%vr30 = zext i16 %vr32 to i64

	; deref THIS
	%vr34 = load %CPU6510*, %CPU6510** %THIS.280

	; call READUSHORT()
	; arg vr34+16
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = add i64 %vr36, 16
	%vr38 = inttoptr i64 %vr37 to %MEMORY_T**
	%vr39 = load %MEMORY_T*, %MEMORY_T** %vr38
	; arg vr30
	%vr35 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr39, i64 %vr30 )

	; store V := vr35
	%vr40 = bitcast %MULTI* %V.282 to i16*
	store i16 %vr35, i16* %vr40

	; deref THIS
	%vr42 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr42+12 => vr43
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = add i64 %vr44, 12
	%vr46 = inttoptr i64 %vr45 to i16*
	%vr47 = load i16, i16* %vr46
	%vr43 = sext i16 %vr47 to i64

	; bop vr43 + 1
	%vr48 = add i64 %vr43, 1

	; conv vr48 => vr49
	%vr49 = trunc i64 %vr48 to i16

	; deref THIS
	%vr51 = load %CPU6510*, %CPU6510** %THIS.280

	; store vr51+12 := vr49
	%vr52 = ptrtoint %CPU6510* %vr51 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr49, i16* %vr54

	; conv V => vr55
	%vr56 = bitcast %MULTI* %V.282 to i16*
	%vr57 = load i16, i16* %vr56
	%vr55 = zext i16 %vr57 to i64

	; store fb$result := vr55
	store i64 %vr55, i64* %fb$result.281

	; goto .Lt_13E1
	br label %.Lt_13E1
.Lt_13E2:

	; label .Lt_13E1
	br label %.Lt_13E1
.Lt_13E1:

	; loadres fb$result
	%vr59 = load i64, i64* %fb$result.281
	ret i64 %vr59
}

define i64 @_ZN7CPU65108ADR_INDYEv( %CPU6510* %THIS.283$ ) nounwind
{

	; paramvar THIS
	%THIS.283 = alloca %CPU6510*
	store %CPU6510* %THIS.283$, %CPU6510** %THIS.283

	; localvar fb$result
	%fb$result.284 = alloca i64

	; localvar V
	%V.285 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.284 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13E3
	br label %.Lt_13E3
.Lt_13E3:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.285 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.283

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.283

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; conv vr13 => vr18
	%vr18 = zext i8 %vr13 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.283

	; call READUSHORT()
	; arg vr20+16
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 16
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	; arg vr18
	%vr21 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr25, i64 %vr18 )

	; store V := vr21
	%vr26 = bitcast %MULTI* %V.285 to i16*
	store i16 %vr21, i16* %vr26

	; conv V => vr27
	%vr28 = bitcast %MULTI* %V.285 to i16*
	%vr29 = load i16, i16* %vr28
	%vr27 = sext i16 %vr29 to i64

	; deref THIS
	%vr31 = load %CPU6510*, %CPU6510** %THIS.283

	; conv vr31+10 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = add i64 %vr33, 10
	%vr35 = inttoptr i64 %vr34 to i8*
	%vr36 = load i8, i8* %vr35
	%vr32 = sext i8 %vr36 to i64

	; bop vr27 + vr32
	%vr37 = add i64 %vr27, %vr32

	; conv vr37 => vr38
	%vr38 = trunc i64 %vr37 to i16

	; store V := vr38
	%vr39 = bitcast %MULTI* %V.285 to i16*
	store i16 %vr38, i16* %vr39

	; conv V => vr40
	%vr41 = bitcast %MULTI* %V.285 to i16*
	%vr42 = load i16, i16* %vr41
	%vr40 = zext i16 %vr42 to i64

	; store fb$result := vr40
	store i64 %vr40, i64* %fb$result.284

	; deref THIS
	%vr44 = load %CPU6510*, %CPU6510** %THIS.283

	; conv vr44+12 => vr45
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = add i64 %vr46, 12
	%vr48 = inttoptr i64 %vr47 to i16*
	%vr49 = load i16, i16* %vr48
	%vr45 = sext i16 %vr49 to i64

	; bop vr45 + 1
	%vr50 = add i64 %vr45, 1

	; conv vr50 => vr51
	%vr51 = trunc i64 %vr50 to i16

	; deref THIS
	%vr53 = load %CPU6510*, %CPU6510** %THIS.283

	; store vr53+12 := vr51
	%vr54 = ptrtoint %CPU6510* %vr53 to i64
	%vr55 = add i64 %vr54, 12
	%vr56 = inttoptr i64 %vr55 to i16*
	store i16 %vr51, i16* %vr56

	; label .Lt_13E4
	br label %.Lt_13E4
.Lt_13E4:

	; loadres fb$result
	%vr58 = load i64, i64* %fb$result.284
	ret i64 %vr58
}

define i64 @_ZN7CPU65107ADR_INDEv( %CPU6510* %THIS.286$ ) nounwind
{

	; paramvar THIS
	%THIS.286 = alloca %CPU6510*
	store %CPU6510* %THIS.286$, %CPU6510** %THIS.286

	; localvar fb$result
	%fb$result.287 = alloca i64

	; localvar V
	%V.288 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.287 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13E5
	br label %.Lt_13E5
.Lt_13E5:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.288 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.286

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.286

	; call READUSHORT()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store V := vr13
	%vr18 = bitcast %MULTI* %V.288 to i16*
	store i16 %vr13, i16* %vr18

	; conv V => vr19
	%vr20 = bitcast %MULTI* %V.288 to i16*
	%vr21 = load i16, i16* %vr20
	%vr19 = zext i16 %vr21 to i64

	; deref THIS
	%vr23 = load %CPU6510*, %CPU6510** %THIS.286

	; call READUSHORT()
	; arg vr23+16
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 16
	%vr27 = inttoptr i64 %vr26 to %MEMORY_T**
	%vr28 = load %MEMORY_T*, %MEMORY_T** %vr27
	; arg vr19
	%vr24 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr28, i64 %vr19 )

	; store V := vr24
	%vr29 = bitcast %MULTI* %V.288 to i16*
	store i16 %vr24, i16* %vr29

	; deref THIS
	%vr31 = load %CPU6510*, %CPU6510** %THIS.286

	; conv vr31+12 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = add i64 %vr33, 12
	%vr35 = inttoptr i64 %vr34 to i16*
	%vr36 = load i16, i16* %vr35
	%vr32 = sext i16 %vr36 to i64

	; bop vr32 + 2
	%vr37 = add i64 %vr32, 2

	; conv vr37 => vr38
	%vr38 = trunc i64 %vr37 to i16

	; deref THIS
	%vr40 = load %CPU6510*, %CPU6510** %THIS.286

	; store vr40+12 := vr38
	%vr41 = ptrtoint %CPU6510* %vr40 to i64
	%vr42 = add i64 %vr41, 12
	%vr43 = inttoptr i64 %vr42 to i16*
	store i16 %vr38, i16* %vr43

	; conv V => vr44
	%vr45 = bitcast %MULTI* %V.288 to i16*
	%vr46 = load i16, i16* %vr45
	%vr44 = zext i16 %vr46 to i64

	; store fb$result := vr44
	store i64 %vr44, i64* %fb$result.287

	; goto .Lt_13E6
	br label %.Lt_13E6
.Lt_13E7:

	; label .Lt_13E6
	br label %.Lt_13E6
.Lt_13E6:

	; loadres fb$result
	%vr48 = load i64, i64* %fb$result.287
	ret i64 %vr48
}

define void @_ZN7CPU65104PUSHEy( %CPU6510* %THIS.289$, i64 %B.290$ ) nounwind
{

	; paramvar THIS
	%THIS.289 = alloca %CPU6510*
	store %CPU6510* %THIS.289$, %CPU6510** %THIS.289

	; paramvar B
	%B.290 = alloca i64
	store i64 %B.290$, i64* %B.290

	; label .Lt_13E8
	br label %.Lt_13E8
.Lt_13E8:

	; deref THIS
	%vr1 = load %CPU6510*, %CPU6510** %THIS.289

	; conv vr1+14 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 14
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref THIS
	%vr8 = load %CPU6510*, %CPU6510** %THIS.289

	; call WRITEUBYTE()
	; arg vr8+16
	%vr9 = ptrtoint %CPU6510* %vr8 to i64
	%vr10 = add i64 %vr9, 16
	%vr11 = inttoptr i64 %vr10 to %MEMORY_T**
	%vr12 = load %MEMORY_T*, %MEMORY_T** %vr11
	; arg vr2
	; arg B
	%vr13 = load i64, i64* %B.290
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr12, i64 %vr2, i64 %vr13 )

	; deref THIS
	%vr15 = load %CPU6510*, %CPU6510** %THIS.289

	; conv vr15+14 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 14
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = sext i8 %vr20 to i64

	; bop vr16 + -1
	%vr21 = add i64 %vr16, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i8

	; deref THIS
	%vr24 = load %CPU6510*, %CPU6510** %THIS.289

	; store vr24+14 := vr22
	%vr25 = ptrtoint %CPU6510* %vr24 to i64
	%vr26 = add i64 %vr25, 14
	%vr27 = inttoptr i64 %vr26 to i8*
	store i8 %vr22, i8* %vr27

	; label .Lt_13E9
	br label %.Lt_13E9
.Lt_13E9:
	ret void
}

define i64 @_ZN7CPU65104PULLEv( %CPU6510* %THIS.291$ ) nounwind
{

	; paramvar THIS
	%THIS.291 = alloca %CPU6510*
	store %CPU6510* %THIS.291$, %CPU6510** %THIS.291

	; localvar fb$result
	%fb$result.292 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.292 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_13EA
	br label %.Lt_13EA
.Lt_13EA:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.291

	; conv vr3+14 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 14
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; bop vr4 + 1
	%vr9 = add i64 %vr4, 1

	; conv vr9 => vr10
	%vr10 = trunc i64 %vr9 to i8

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.291

	; store vr12+14 := vr10
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 14
	%vr15 = inttoptr i64 %vr14 to i8*
	store i8 %vr10, i8* %vr15

	; deref THIS
	%vr17 = load %CPU6510*, %CPU6510** %THIS.291

	; conv vr17+14 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 14
	%vr21 = inttoptr i64 %vr20 to i16*
	%vr22 = load i16, i16* %vr21
	%vr18 = zext i16 %vr22 to i64

	; deref THIS
	%vr24 = load %CPU6510*, %CPU6510** %THIS.291

	; call READUBYTE()
	; arg vr24+16
	%vr26 = ptrtoint %CPU6510* %vr24 to i64
	%vr27 = add i64 %vr26, 16
	%vr28 = inttoptr i64 %vr27 to %MEMORY_T**
	%vr29 = load %MEMORY_T*, %MEMORY_T** %vr28
	; arg vr18
	%vr25 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr29, i64 %vr18 )

	; conv vr25 => vr30
	%vr30 = zext i8 %vr25 to i64

	; store fb$result := vr30
	store i64 %vr30, i64* %fb$result.292

	; goto .Lt_13EB
	br label %.Lt_13EB
.Lt_13EC:

	; label .Lt_13EB
	br label %.Lt_13EB
.Lt_13EB:

	; loadres fb$result
	%vr32 = load i64, i64* %fb$result.292
	ret i64 %vr32
}

define void @INS_UNK( %CPU6510* %CPU.293$ ) nounwind
{

	; paramvar CPU
	%CPU.293 = alloca %CPU6510*
	store %CPU6510* %CPU.293$, %CPU6510** %CPU.293

	; label .Lt_13ED
	br label %.Lt_13ED
.Lt_13ED:

	; label .Lt_13EE
	br label %.Lt_13EE
.Lt_13EE:
	ret void
}

define void @INS_ADC( %CPU6510* %CPU.294$ ) nounwind
{

	; paramvar CPU
	%CPU.294 = alloca %CPU6510*
	store %CPU6510* %CPU.294$, %CPU6510** %CPU.294

	; localvar V
	%V.295 = alloca %MULTI

	; localvar UB
	%UB.296 = alloca i8

	; localvar LT_13F4
	%LT_13F4.297 = alloca i64

	; localvar LT_13F6
	%LT_13F6.298 = alloca i64

	; localvar LT_13F8
	%LT_13F8.299 = alloca i64

	; localvar LT_13FA
	%LT_13FA.300 = alloca i64

	; label .Lt_13EF
	br label %.Lt_13EF
.Lt_13EF:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.295 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof UB

	; memclear UB
	%vr3 = bitcast i8* %UB.296 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.294

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.294

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store UB := vr13
	store i8 %vr13, i8* %UB.296

	; deref CPU
	%vr19 = load %CPU6510*, %CPU6510** %CPU.294

	; conv vr19+8 => vr20
	%vr21 = ptrtoint %CPU6510* %vr19 to i64
	%vr22 = add i64 %vr21, 8
	%vr23 = inttoptr i64 %vr22 to i8*
	%vr24 = load i8, i8* %vr23
	%vr20 = sext i8 %vr24 to i64

	; conv UB => vr25
	%vr26 = load i8, i8* %UB.296
	%vr25 = sext i8 %vr26 to i64

	; bop vr20 + vr25
	%vr27 = add i64 %vr20, %vr25

	; conv vr27 => vr28
	%vr28 = trunc i64 %vr27 to i16

	; store V := vr28
	%vr29 = bitcast %MULTI* %V.295 to i16*
	store i16 %vr28, i16* %vr29

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.294

	; bop vr31 AND 1
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, 1

	; branchbop vr33 <> 1
	%vr38 = icmp ne i64 %vr33, 1
	br i1 %vr38, label %.Lt_13F2, label %.Lt_13FB
.Lt_13FB:

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.295 to i16*
	%vr41 = load i16, i16* %vr40
	%vr39 = sext i16 %vr41 to i64

	; bop vr39 + 1
	%vr42 = add i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i16

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.295 to i16*
	store i16 %vr43, i16* %vr44

	; label .Lt_13F2
	br label %.Lt_13F2
.Lt_13F2:

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.294

	; bop vr46 AND -65
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -65

	; deref CPU
	%vr54 = load %CPU6510*, %CPU6510** %CPU.294

	; conv vr54+8 => vr55
	%vr56 = ptrtoint %CPU6510* %vr54 to i64
	%vr57 = add i64 %vr56, 8
	%vr58 = inttoptr i64 %vr57 to i8*
	%vr59 = load i8, i8* %vr58
	%vr55 = sext i8 %vr59 to i64

	; conv UB => vr60
	%vr61 = load i8, i8* %UB.296
	%vr60 = sext i8 %vr61 to i64

	; bop vr55 XOR vr60
	%vr62 = xor i64 %vr55, %vr60

	; bop vr62 OR -129
	%vr63 = or i64 %vr62, -129

	; uop NOT vr63
	%vr64 = xor i64 %vr63, -1

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.294

	; conv vr66+8 => vr67
	%vr68 = ptrtoint %CPU6510* %vr66 to i64
	%vr69 = add i64 %vr68, 8
	%vr70 = inttoptr i64 %vr69 to i8*
	%vr71 = load i8, i8* %vr70
	%vr67 = sext i8 %vr71 to i64

	; conv V => vr72
	%vr73 = bitcast %MULTI* %V.295 to i8*
	%vr74 = load i8, i8* %vr73
	%vr72 = sext i8 %vr74 to i64

	; bop vr67 XOR vr72
	%vr75 = xor i64 %vr67, %vr72

	; bop vr75 AND 128
	%vr76 = and i64 %vr75, 128

	; bop vr64 AND vr76
	%vr77 = and i64 %vr64, %vr76

	; branchbop vr77 == 0
	%vr78 = icmp eq i64 %vr77, 0
	br i1 %vr78, label %.Lt_13F3, label %.Lt_13FC
.Lt_13FC:

	; store LT_13F4 := 1
	store i64 1, i64* %LT_13F4.297

	; goto .Lt_13FD
	br label %.Lt_13FD
.Lt_13FE:

	; label .Lt_13F3
	br label %.Lt_13F3
.Lt_13F3:

	; store LT_13F4 := 0
	store i64 0, i64* %LT_13F4.297

	; label .Lt_13FD
	br label %.Lt_13FD
.Lt_13FD:
	%vr80 = load i64, i64* %LT_13F4.297
	%vr79 = bitcast i64 %vr80 to i64

	; bop vr79 AND 1
	%vr81 = and i64 %vr79, 1

	; bop vr81 SHL 6
	%vr83 = bitcast i64 6 to i64
	%vr82 = shl i64 %vr81, %vr83

	; bop vr48 OR vr82
	%vr84 = or i64 %vr48, %vr82

	; deref CPU
	%vr86 = load %CPU6510*, %CPU6510** %CPU.294

	; store vr86 := vr84
	%vr88 = ptrtoint %CPU6510* %vr86 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	store i64 %vr84, i64* %vr89

	; deref CPU
	%vr91 = load %CPU6510*, %CPU6510** %CPU.294

	; store vr91+8 := V
	%vr92 = bitcast %MULTI* %V.295 to i8*
	%vr93 = load i8, i8* %vr92
	%vr94 = ptrtoint %CPU6510* %vr91 to i64
	%vr95 = add i64 %vr94, 8
	%vr96 = inttoptr i64 %vr95 to i8*
	store i8 %vr93, i8* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.294

	; bop vr98 AND -2
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -2

	; conv V => vr105
	%vr106 = bitcast %MULTI* %V.295 to i16*
	%vr107 = load i16, i16* %vr106
	%vr105 = sext i16 %vr107 to i64

	; branchbop vr105 <= 255
	%vr108 = icmp sle i64 %vr105, 255
	br i1 %vr108, label %.Lt_13F5, label %.Lt_13FF
.Lt_13FF:

	; store LT_13F6 := 1
	store i64 1, i64* %LT_13F6.298

	; goto .Lt_1400
	br label %.Lt_1400
.Lt_1401:

	; label .Lt_13F5
	br label %.Lt_13F5
.Lt_13F5:

	; store LT_13F6 := 0
	store i64 0, i64* %LT_13F6.298

	; label .Lt_1400
	br label %.Lt_1400
.Lt_1400:
	%vr110 = load i64, i64* %LT_13F6.298
	%vr109 = bitcast i64 %vr110 to i64

	; bop vr109 AND 1
	%vr111 = and i64 %vr109, 1

	; bop vr100 OR vr111
	%vr112 = or i64 %vr100, %vr111

	; deref CPU
	%vr114 = load %CPU6510*, %CPU6510** %CPU.294

	; store vr114 := vr112
	%vr116 = ptrtoint %CPU6510* %vr114 to i64
	%vr117 = inttoptr i64 %vr116 to i64*
	store i64 %vr112, i64* %vr117

	; deref CPU
	%vr119 = load %CPU6510*, %CPU6510** %CPU.294

	; bop vr119 AND -3
	%vr122 = ptrtoint %CPU6510* %vr119 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	%vr124 = load i64, i64* %vr123
	%vr121 = and i64 %vr124, -3

	; conv V => vr126
	%vr127 = bitcast %MULTI* %V.295 to i8*
	%vr128 = load i8, i8* %vr127
	%vr126 = sext i8 %vr128 to i64

	; branchbop vr126 <> 0
	%vr129 = icmp ne i64 %vr126, 0
	br i1 %vr129, label %.Lt_13F7, label %.Lt_1402
.Lt_1402:

	; store LT_13F8 := 1
	store i64 1, i64* %LT_13F8.299

	; goto .Lt_1403
	br label %.Lt_1403
.Lt_1404:

	; label .Lt_13F7
	br label %.Lt_13F7
.Lt_13F7:

	; store LT_13F8 := 0
	store i64 0, i64* %LT_13F8.299

	; label .Lt_1403
	br label %.Lt_1403
.Lt_1403:
	%vr131 = load i64, i64* %LT_13F8.299
	%vr130 = bitcast i64 %vr131 to i64

	; bop vr130 AND 1
	%vr132 = and i64 %vr130, 1

	; bop vr132 SHL 1
	%vr134 = bitcast i64 1 to i64
	%vr133 = shl i64 %vr132, %vr134

	; bop vr121 OR vr133
	%vr135 = or i64 %vr121, %vr133

	; deref CPU
	%vr137 = load %CPU6510*, %CPU6510** %CPU.294

	; store vr137 := vr135
	%vr139 = ptrtoint %CPU6510* %vr137 to i64
	%vr140 = inttoptr i64 %vr139 to i64*
	store i64 %vr135, i64* %vr140

	; deref CPU
	%vr142 = load %CPU6510*, %CPU6510** %CPU.294

	; bop vr142 AND -129
	%vr145 = ptrtoint %CPU6510* %vr142 to i64
	%vr146 = inttoptr i64 %vr145 to i64*
	%vr147 = load i64, i64* %vr146
	%vr144 = and i64 %vr147, -129

	; conv V => vr149
	%vr150 = bitcast %MULTI* %V.295 to i8*
	%vr151 = load i8, i8* %vr150
	%vr149 = sext i8 %vr151 to i64

	; branchbop vr149 >= 0
	%vr152 = icmp sge i64 %vr149, 0
	br i1 %vr152, label %.Lt_13F9, label %.Lt_1405
.Lt_1405:

	; store LT_13FA := 1
	store i64 1, i64* %LT_13FA.300

	; goto .Lt_1406
	br label %.Lt_1406
.Lt_1407:

	; label .Lt_13F9
	br label %.Lt_13F9
.Lt_13F9:

	; store LT_13FA := 0
	store i64 0, i64* %LT_13FA.300

	; label .Lt_1406
	br label %.Lt_1406
.Lt_1406:
	%vr154 = load i64, i64* %LT_13FA.300
	%vr153 = bitcast i64 %vr154 to i64

	; bop vr153 AND 1
	%vr155 = and i64 %vr153, 1

	; bop vr155 SHL 7
	%vr157 = bitcast i64 7 to i64
	%vr156 = shl i64 %vr155, %vr157

	; bop vr144 OR vr156
	%vr158 = or i64 %vr144, %vr156

	; deref CPU
	%vr160 = load %CPU6510*, %CPU6510** %CPU.294

	; store vr160 := vr158
	%vr162 = ptrtoint %CPU6510* %vr160 to i64
	%vr163 = inttoptr i64 %vr162 to i64*
	store i64 %vr158, i64* %vr163

	; label .Lt_13F0
	br label %.Lt_13F0
.Lt_13F0:
	ret void
}

define void @INS_AND( %CPU6510* %CPU.301$ ) nounwind
{

	; paramvar CPU
	%CPU.301 = alloca %CPU6510*
	store %CPU6510* %CPU.301$, %CPU6510** %CPU.301

	; localvar LT_140B
	%LT_140B.302 = alloca i64

	; localvar LT_140D
	%LT_140D.303 = alloca i64

	; label .Lt_1408
	br label %.Lt_1408
.Lt_1408:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.301

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 AND vr21
	%vr22 = and i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.301

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_140A, label %.Lt_140E
.Lt_140E:

	; store LT_140B := 1
	store i64 1, i64* %LT_140B.302

	; goto .Lt_140F
	br label %.Lt_140F
.Lt_1410:

	; label .Lt_140A
	br label %.Lt_140A
.Lt_140A:

	; store LT_140B := 0
	store i64 0, i64* %LT_140B.302

	; label .Lt_140F
	br label %.Lt_140F
.Lt_140F:
	%vr46 = load i64, i64* %LT_140B.302
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.301

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_140C, label %.Lt_1411
.Lt_1411:

	; store LT_140D := 1
	store i64 1, i64* %LT_140D.303

	; goto .Lt_1412
	br label %.Lt_1412
.Lt_1413:

	; label .Lt_140C
	br label %.Lt_140C
.Lt_140C:

	; store LT_140D := 0
	store i64 0, i64* %LT_140D.303

	; label .Lt_1412
	br label %.Lt_1412
.Lt_1412:
	%vr73 = load i64, i64* %LT_140D.303
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_1409
	br label %.Lt_1409
.Lt_1409:
	ret void
}

define void @INS_ASL( %CPU6510* %CPU.304$ ) nounwind
{

	; paramvar CPU
	%CPU.304 = alloca %CPU6510*
	store %CPU6510* %CPU.304$, %CPU6510** %CPU.304

	; localvar V
	%V.305 = alloca %MULTI

	; localvar LT_1417
	%LT_1417.306 = alloca i64

	; localvar LT_1419
	%LT_1419.307 = alloca i64

	; localvar LT_141B
	%LT_141B.308 = alloca i64

	; label .Lt_1414
	br label %.Lt_1414
.Lt_1414:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.305 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.304

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.304

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.305 to i8*
	store i8 %vr11, i8* %vr16

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.304

	; bop vr18 AND -2
	%vr21 = ptrtoint %CPU6510* %vr18 to i64
	%vr22 = inttoptr i64 %vr21 to i64*
	%vr23 = load i64, i64* %vr22
	%vr20 = and i64 %vr23, -2

	; conv V => vr25
	%vr26 = bitcast %MULTI* %V.305 to i8*
	%vr27 = load i8, i8* %vr26
	%vr25 = sext i8 %vr27 to i64

	; bop vr25 AND 128
	%vr28 = and i64 %vr25, 128

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_1416, label %.Lt_141C
.Lt_141C:

	; store LT_1417 := 1
	store i64 1, i64* %LT_1417.306

	; goto .Lt_141D
	br label %.Lt_141D
.Lt_141E:

	; label .Lt_1416
	br label %.Lt_1416
.Lt_1416:

	; store LT_1417 := 0
	store i64 0, i64* %LT_1417.306

	; label .Lt_141D
	br label %.Lt_141D
.Lt_141D:
	%vr31 = load i64, i64* %LT_1417.306
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr20 OR vr32
	%vr33 = or i64 %vr20, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.304

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.305 to i8*
	%vr41 = load i8, i8* %vr40
	%vr39 = sext i8 %vr41 to i64

	; bop vr39 SHL 1
	%vr42 = shl i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i8

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.305 to i8*
	store i8 %vr43, i8* %vr44

	; conv V => vr45
	%vr46 = bitcast %MULTI* %V.305 to i8*
	%vr47 = load i8, i8* %vr46
	%vr45 = zext i8 %vr47 to i64

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.304

	; conv vr49+64 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 64
	%vr53 = inttoptr i64 %vr52 to i16*
	%vr54 = load i16, i16* %vr53
	%vr50 = zext i16 %vr54 to i64

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.304

	; call WRITEUBYTE()
	; arg vr56+16
	%vr57 = ptrtoint %CPU6510* %vr56 to i64
	%vr58 = add i64 %vr57, 16
	%vr59 = inttoptr i64 %vr58 to %MEMORY_T**
	%vr60 = load %MEMORY_T*, %MEMORY_T** %vr59
	; arg vr50
	; arg vr45
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr60, i64 %vr50, i64 %vr45 )

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.304

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.305 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = sext i8 %vr71 to i64

	; branchbop vr69 <> 0
	%vr72 = icmp ne i64 %vr69, 0
	br i1 %vr72, label %.Lt_1418, label %.Lt_141F
.Lt_141F:

	; store LT_1419 := 1
	store i64 1, i64* %LT_1419.307

	; goto .Lt_1420
	br label %.Lt_1420
.Lt_1421:

	; label .Lt_1418
	br label %.Lt_1418
.Lt_1418:

	; store LT_1419 := 0
	store i64 0, i64* %LT_1419.307

	; label .Lt_1420
	br label %.Lt_1420
.Lt_1420:
	%vr74 = load i64, i64* %LT_1419.307
	%vr73 = bitcast i64 %vr74 to i64

	; bop vr73 AND 1
	%vr75 = and i64 %vr73, 1

	; bop vr75 SHL 1
	%vr77 = bitcast i64 1 to i64
	%vr76 = shl i64 %vr75, %vr77

	; bop vr64 OR vr76
	%vr78 = or i64 %vr64, %vr76

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.304

	; store vr80 := vr78
	%vr82 = ptrtoint %CPU6510* %vr80 to i64
	%vr83 = inttoptr i64 %vr82 to i64*
	store i64 %vr78, i64* %vr83

	; deref CPU
	%vr85 = load %CPU6510*, %CPU6510** %CPU.304

	; bop vr85 AND -129
	%vr88 = ptrtoint %CPU6510* %vr85 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	%vr90 = load i64, i64* %vr89
	%vr87 = and i64 %vr90, -129

	; conv V => vr92
	%vr93 = bitcast %MULTI* %V.305 to i8*
	%vr94 = load i8, i8* %vr93
	%vr92 = sext i8 %vr94 to i64

	; branchbop vr92 >= 0
	%vr95 = icmp sge i64 %vr92, 0
	br i1 %vr95, label %.Lt_141A, label %.Lt_1422
.Lt_1422:

	; store LT_141B := 1
	store i64 1, i64* %LT_141B.308

	; goto .Lt_1423
	br label %.Lt_1423
.Lt_1424:

	; label .Lt_141A
	br label %.Lt_141A
.Lt_141A:

	; store LT_141B := 0
	store i64 0, i64* %LT_141B.308

	; label .Lt_1423
	br label %.Lt_1423
.Lt_1423:
	%vr97 = load i64, i64* %LT_141B.308
	%vr96 = bitcast i64 %vr97 to i64

	; bop vr96 AND 1
	%vr98 = and i64 %vr96, 1

	; bop vr98 SHL 7
	%vr100 = bitcast i64 7 to i64
	%vr99 = shl i64 %vr98, %vr100

	; bop vr87 OR vr99
	%vr101 = or i64 %vr87, %vr99

	; deref CPU
	%vr103 = load %CPU6510*, %CPU6510** %CPU.304

	; store vr103 := vr101
	%vr105 = ptrtoint %CPU6510* %vr103 to i64
	%vr106 = inttoptr i64 %vr105 to i64*
	store i64 %vr101, i64* %vr106

	; label .Lt_1415
	br label %.Lt_1415
.Lt_1415:
	ret void
}

define void @INS_ASLA( %CPU6510* %CPU.309$ ) nounwind
{

	; paramvar CPU
	%CPU.309 = alloca %CPU6510*
	store %CPU6510* %CPU.309$, %CPU6510** %CPU.309

	; localvar LT_1428
	%LT_1428.310 = alloca i64

	; localvar LT_142A
	%LT_142A.311 = alloca i64

	; localvar LT_142C
	%LT_142C.312 = alloca i64

	; label .Lt_1425
	br label %.Lt_1425
.Lt_1425:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.309

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.309

	; conv vr9+8 => vr10
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 8
	%vr13 = inttoptr i64 %vr12 to i8*
	%vr14 = load i8, i8* %vr13
	%vr10 = sext i8 %vr14 to i64

	; bop vr10 AND 128
	%vr15 = and i64 %vr10, 128

	; branchbop vr15 == 0
	%vr16 = icmp eq i64 %vr15, 0
	br i1 %vr16, label %.Lt_1427, label %.Lt_142D
.Lt_142D:

	; store LT_1428 := 1
	store i64 1, i64* %LT_1428.310

	; goto .Lt_142E
	br label %.Lt_142E
.Lt_142F:

	; label .Lt_1427
	br label %.Lt_1427
.Lt_1427:

	; store LT_1428 := 0
	store i64 0, i64* %LT_1428.310

	; label .Lt_142E
	br label %.Lt_142E
.Lt_142E:
	%vr18 = load i64, i64* %LT_1428.310
	%vr17 = bitcast i64 %vr18 to i64

	; bop vr17 AND 1
	%vr19 = and i64 %vr17, 1

	; bop vr3 OR vr19
	%vr20 = or i64 %vr3, %vr19

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.309

	; store vr22 := vr20
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = inttoptr i64 %vr24 to i64*
	store i64 %vr20, i64* %vr25

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.309

	; conv vr27+8 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 8
	%vr31 = inttoptr i64 %vr30 to i8*
	%vr32 = load i8, i8* %vr31
	%vr28 = sext i8 %vr32 to i64

	; bop vr28 SHL 1
	%vr33 = shl i64 %vr28, 1

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i8

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.309

	; store vr36+8 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 8
	%vr39 = inttoptr i64 %vr38 to i8*
	store i8 %vr34, i8* %vr39

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.309

	; bop vr41 AND -3
	%vr44 = ptrtoint %CPU6510* %vr41 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	%vr46 = load i64, i64* %vr45
	%vr43 = and i64 %vr46, -3

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.309

	; conv vr49+8 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 8
	%vr53 = inttoptr i64 %vr52 to i8*
	%vr54 = load i8, i8* %vr53
	%vr50 = sext i8 %vr54 to i64

	; branchbop vr50 <> 0
	%vr55 = icmp ne i64 %vr50, 0
	br i1 %vr55, label %.Lt_1429, label %.Lt_1430
.Lt_1430:

	; store LT_142A := 1
	store i64 1, i64* %LT_142A.311

	; goto .Lt_1431
	br label %.Lt_1431
.Lt_1432:

	; label .Lt_1429
	br label %.Lt_1429
.Lt_1429:

	; store LT_142A := 0
	store i64 0, i64* %LT_142A.311

	; label .Lt_1431
	br label %.Lt_1431
.Lt_1431:
	%vr57 = load i64, i64* %LT_142A.311
	%vr56 = bitcast i64 %vr57 to i64

	; bop vr56 AND 1
	%vr58 = and i64 %vr56, 1

	; bop vr58 SHL 1
	%vr60 = bitcast i64 1 to i64
	%vr59 = shl i64 %vr58, %vr60

	; bop vr43 OR vr59
	%vr61 = or i64 %vr43, %vr59

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.309

	; store vr63 := vr61
	%vr65 = ptrtoint %CPU6510* %vr63 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	store i64 %vr61, i64* %vr66

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.309

	; bop vr68 AND -129
	%vr71 = ptrtoint %CPU6510* %vr68 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	%vr73 = load i64, i64* %vr72
	%vr70 = and i64 %vr73, -129

	; deref CPU
	%vr76 = load %CPU6510*, %CPU6510** %CPU.309

	; conv vr76+8 => vr77
	%vr78 = ptrtoint %CPU6510* %vr76 to i64
	%vr79 = add i64 %vr78, 8
	%vr80 = inttoptr i64 %vr79 to i8*
	%vr81 = load i8, i8* %vr80
	%vr77 = sext i8 %vr81 to i64

	; branchbop vr77 >= 0
	%vr82 = icmp sge i64 %vr77, 0
	br i1 %vr82, label %.Lt_142B, label %.Lt_1433
.Lt_1433:

	; store LT_142C := 1
	store i64 1, i64* %LT_142C.312

	; goto .Lt_1434
	br label %.Lt_1434
.Lt_1435:

	; label .Lt_142B
	br label %.Lt_142B
.Lt_142B:

	; store LT_142C := 0
	store i64 0, i64* %LT_142C.312

	; label .Lt_1434
	br label %.Lt_1434
.Lt_1434:
	%vr84 = load i64, i64* %LT_142C.312
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr70 OR vr86
	%vr88 = or i64 %vr70, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.309

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_1426
	br label %.Lt_1426
.Lt_1426:
	ret void
}

define void @INS_BCC( %CPU6510* %CPU.313$ ) nounwind
{

	; paramvar CPU
	%CPU.313 = alloca %CPU6510*
	store %CPU6510* %CPU.313$, %CPU6510** %CPU.313

	; label .Lt_1436
	br label %.Lt_1436
.Lt_1436:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.313

	; bop vr1 AND 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, 1

	; branchbop vr3 <> 0
	%vr8 = icmp ne i64 %vr3, 0
	br i1 %vr8, label %.Lt_1439, label %.Lt_143A
.Lt_143A:

	; localvar V
	%V.314 = alloca %MULTI

	; addrof V

	; memclear V
	%vr10 = bitcast %MULTI* %V.314 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr10, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.313

	; store V := vr12+12
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 12
	%vr15 = inttoptr i64 %vr14 to i16*
	%vr16 = load i16, i16* %vr15
	%vr17 = bitcast %MULTI* %V.314 to i16*
	store i16 %vr16, i16* %vr17

	; conv V => vr18
	%vr19 = bitcast %MULTI* %V.314 to i16*
	%vr20 = load i16, i16* %vr19
	%vr18 = sext i16 %vr20 to i64

	; bop vr18 + -1
	%vr21 = add i64 %vr18, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i16

	; store V := vr22
	%vr23 = bitcast %MULTI* %V.314 to i16*
	store i16 %vr22, i16* %vr23

	; conv V => vr24
	%vr25 = bitcast %MULTI* %V.314 to i16*
	%vr26 = load i16, i16* %vr25
	%vr24 = sext i16 %vr26 to i64

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.313

	; conv vr28+64 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 64
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = zext i16 %vr33 to i64

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.313

	; call READBYTE()
	; arg vr35+16
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = add i64 %vr37, 16
	%vr39 = inttoptr i64 %vr38 to %MEMORY_T**
	%vr40 = load %MEMORY_T*, %MEMORY_T** %vr39
	; arg vr29
	%vr36 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr40, i64 %vr29 )

	; conv vr36 => vr41
	%vr41 = sext i8 %vr36 to i64

	; bop vr24 + vr41
	%vr42 = add i64 %vr24, %vr41

	; bop vr42 + 1
	%vr43 = add i64 %vr42, 1

	; conv vr43 => vr44
	%vr44 = trunc i64 %vr43 to i16

	; store V := vr44
	%vr45 = bitcast %MULTI* %V.314 to i16*
	store i16 %vr44, i16* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.313

	; store vr47+12 := V
	%vr48 = bitcast %MULTI* %V.314 to i16*
	%vr49 = load i16, i16* %vr48
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = add i64 %vr50, 12
	%vr52 = inttoptr i64 %vr51 to i16*
	store i16 %vr49, i16* %vr52

	; label .Lt_1439
	br label %.Lt_1439
.Lt_1439:

	; label .Lt_1438
	br label %.Lt_1438
.Lt_1438:

	; label .Lt_1437
	br label %.Lt_1437
.Lt_1437:
	ret void
}

define void @INS_BCS( %CPU6510* %CPU.315$ ) nounwind
{

	; paramvar CPU
	%CPU.315 = alloca %CPU6510*
	store %CPU6510* %CPU.315$, %CPU6510** %CPU.315

	; label .Lt_143B
	br label %.Lt_143B
.Lt_143B:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.315

	; bop vr1 AND 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, 1

	; branchbop vr3 == 0
	%vr8 = icmp eq i64 %vr3, 0
	br i1 %vr8, label %.Lt_143E, label %.Lt_143F
.Lt_143F:

	; localvar V
	%V.316 = alloca %MULTI

	; addrof V

	; memclear V
	%vr10 = bitcast %MULTI* %V.316 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr10, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.315

	; store V := vr12+12
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 12
	%vr15 = inttoptr i64 %vr14 to i16*
	%vr16 = load i16, i16* %vr15
	%vr17 = bitcast %MULTI* %V.316 to i16*
	store i16 %vr16, i16* %vr17

	; conv V => vr18
	%vr19 = bitcast %MULTI* %V.316 to i16*
	%vr20 = load i16, i16* %vr19
	%vr18 = sext i16 %vr20 to i64

	; bop vr18 + -1
	%vr21 = add i64 %vr18, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i16

	; store V := vr22
	%vr23 = bitcast %MULTI* %V.316 to i16*
	store i16 %vr22, i16* %vr23

	; conv V => vr24
	%vr25 = bitcast %MULTI* %V.316 to i16*
	%vr26 = load i16, i16* %vr25
	%vr24 = sext i16 %vr26 to i64

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.315

	; conv vr28+64 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 64
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = zext i16 %vr33 to i64

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.315

	; call READBYTE()
	; arg vr35+16
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = add i64 %vr37, 16
	%vr39 = inttoptr i64 %vr38 to %MEMORY_T**
	%vr40 = load %MEMORY_T*, %MEMORY_T** %vr39
	; arg vr29
	%vr36 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr40, i64 %vr29 )

	; conv vr36 => vr41
	%vr41 = sext i8 %vr36 to i64

	; bop vr24 + vr41
	%vr42 = add i64 %vr24, %vr41

	; bop vr42 + 1
	%vr43 = add i64 %vr42, 1

	; conv vr43 => vr44
	%vr44 = trunc i64 %vr43 to i16

	; store V := vr44
	%vr45 = bitcast %MULTI* %V.316 to i16*
	store i16 %vr44, i16* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.315

	; store vr47+12 := V
	%vr48 = bitcast %MULTI* %V.316 to i16*
	%vr49 = load i16, i16* %vr48
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = add i64 %vr50, 12
	%vr52 = inttoptr i64 %vr51 to i16*
	store i16 %vr49, i16* %vr52

	; label .Lt_143E
	br label %.Lt_143E
.Lt_143E:

	; label .Lt_143D
	br label %.Lt_143D
.Lt_143D:

	; label .Lt_143C
	br label %.Lt_143C
.Lt_143C:
	ret void
}

define void @INS_BEQ( %CPU6510* %CPU.317$ ) nounwind
{

	; paramvar CPU
	%CPU.317 = alloca %CPU6510*
	store %CPU6510* %CPU.317$, %CPU6510** %CPU.317

	; label .Lt_1440
	br label %.Lt_1440
.Lt_1440:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.317

	; bop vr1 SHR 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 1 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 1
	%vr10 = icmp ne i64 %vr9, 1
	br i1 %vr10, label %.Lt_1443, label %.Lt_1444
.Lt_1444:

	; localvar V
	%V.318 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.318 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.317

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.318 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.318 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.318 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.318 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.317

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.317

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.318 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.317

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.318 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1443
	br label %.Lt_1443
.Lt_1443:

	; label .Lt_1442
	br label %.Lt_1442
.Lt_1442:

	; label .Lt_1441
	br label %.Lt_1441
.Lt_1441:
	ret void
}

define void @INS_BIT( %CPU6510* %CPU.319$ ) nounwind
{

	; paramvar CPU
	%CPU.319 = alloca %CPU6510*
	store %CPU6510* %CPU.319$, %CPU6510** %CPU.319

	; localvar B
	%B.320 = alloca i8

	; localvar LT_1448
	%LT_1448.321 = alloca i64

	; localvar LT_144A
	%LT_144A.322 = alloca i64

	; localvar LT_144C
	%LT_144C.323 = alloca i64

	; label .Lt_1445
	br label %.Lt_1445
.Lt_1445:

	; addrof B

	; memclear B
	call void @llvm.memset.p0i8.i32( i8* %B.320, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr2 = load %CPU6510*, %CPU6510** %CPU.319

	; conv vr2+64 => vr3
	%vr4 = ptrtoint %CPU6510* %vr2 to i64
	%vr5 = add i64 %vr4, 64
	%vr6 = inttoptr i64 %vr5 to i16*
	%vr7 = load i16, i16* %vr6
	%vr3 = zext i16 %vr7 to i64

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.319

	; call READBYTE()
	; arg vr9+16
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 16
	%vr13 = inttoptr i64 %vr12 to %MEMORY_T**
	%vr14 = load %MEMORY_T*, %MEMORY_T** %vr13
	; arg vr3
	%vr10 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr14, i64 %vr3 )

	; store B := vr10
	store i8 %vr10, i8* %B.320

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.319

	; bop vr16 AND -129
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = inttoptr i64 %vr19 to i64*
	%vr21 = load i64, i64* %vr20
	%vr18 = and i64 %vr21, -129

	; conv B => vr23
	%vr24 = load i8, i8* %B.320
	%vr23 = sext i8 %vr24 to i64

	; bop vr23 AND 128
	%vr25 = and i64 %vr23, 128

	; branchbop vr25 == 0
	%vr26 = icmp eq i64 %vr25, 0
	br i1 %vr26, label %.Lt_1447, label %.Lt_144D
.Lt_144D:

	; store LT_1448 := 1
	store i64 1, i64* %LT_1448.321

	; goto .Lt_144E
	br label %.Lt_144E
.Lt_144F:

	; label .Lt_1447
	br label %.Lt_1447
.Lt_1447:

	; store LT_1448 := 0
	store i64 0, i64* %LT_1448.321

	; label .Lt_144E
	br label %.Lt_144E
.Lt_144E:
	%vr28 = load i64, i64* %LT_1448.321
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 7
	%vr31 = bitcast i64 7 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr18 OR vr30
	%vr32 = or i64 %vr18, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.319

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.319

	; bop vr39 AND -65
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -65

	; conv B => vr46
	%vr47 = load i8, i8* %B.320
	%vr46 = sext i8 %vr47 to i64

	; bop vr46 AND 64
	%vr48 = and i64 %vr46, 64

	; branchbop vr48 == 0
	%vr49 = icmp eq i64 %vr48, 0
	br i1 %vr49, label %.Lt_1449, label %.Lt_1450
.Lt_1450:

	; store LT_144A := 1
	store i64 1, i64* %LT_144A.322

	; goto .Lt_1451
	br label %.Lt_1451
.Lt_1452:

	; label .Lt_1449
	br label %.Lt_1449
.Lt_1449:

	; store LT_144A := 0
	store i64 0, i64* %LT_144A.322

	; label .Lt_1451
	br label %.Lt_1451
.Lt_1451:
	%vr51 = load i64, i64* %LT_144A.322
	%vr50 = bitcast i64 %vr51 to i64

	; bop vr50 AND 1
	%vr52 = and i64 %vr50, 1

	; bop vr52 SHL 6
	%vr54 = bitcast i64 6 to i64
	%vr53 = shl i64 %vr52, %vr54

	; bop vr41 OR vr53
	%vr55 = or i64 %vr41, %vr53

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.319

	; store vr57 := vr55
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to i64*
	store i64 %vr55, i64* %vr60

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.319

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv B => vr69
	%vr70 = load i8, i8* %B.320
	%vr69 = sext i8 %vr70 to i64

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.319

	; conv vr72+9 => vr73
	%vr74 = ptrtoint %CPU6510* %vr72 to i64
	%vr75 = add i64 %vr74, 9
	%vr76 = inttoptr i64 %vr75 to i8*
	%vr77 = load i8, i8* %vr76
	%vr73 = sext i8 %vr77 to i64

	; bop vr69 AND vr73
	%vr78 = and i64 %vr69, %vr73

	; branchbop vr78 <> 0
	%vr79 = icmp ne i64 %vr78, 0
	br i1 %vr79, label %.Lt_144B, label %.Lt_1453
.Lt_1453:

	; store LT_144C := 1
	store i64 1, i64* %LT_144C.323

	; goto .Lt_1454
	br label %.Lt_1454
.Lt_1455:

	; label .Lt_144B
	br label %.Lt_144B
.Lt_144B:

	; store LT_144C := 0
	store i64 0, i64* %LT_144C.323

	; label .Lt_1454
	br label %.Lt_1454
.Lt_1454:
	%vr81 = load i64, i64* %LT_144C.323
	%vr80 = bitcast i64 %vr81 to i64

	; bop vr80 AND 1
	%vr82 = and i64 %vr80, 1

	; bop vr82 SHL 1
	%vr84 = bitcast i64 1 to i64
	%vr83 = shl i64 %vr82, %vr84

	; bop vr64 OR vr83
	%vr85 = or i64 %vr64, %vr83

	; deref CPU
	%vr87 = load %CPU6510*, %CPU6510** %CPU.319

	; store vr87 := vr85
	%vr89 = ptrtoint %CPU6510* %vr87 to i64
	%vr90 = inttoptr i64 %vr89 to i64*
	store i64 %vr85, i64* %vr90

	; label .Lt_1446
	br label %.Lt_1446
.Lt_1446:
	ret void
}

define void @INS_BMI( %CPU6510* %CPU.324$ ) nounwind
{

	; paramvar CPU
	%CPU.324 = alloca %CPU6510*
	store %CPU6510* %CPU.324$, %CPU6510** %CPU.324

	; label .Lt_1456
	br label %.Lt_1456
.Lt_1456:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.324

	; bop vr1 SHR 7
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 7 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 == 0
	%vr10 = icmp eq i64 %vr9, 0
	br i1 %vr10, label %.Lt_1459, label %.Lt_145A
.Lt_145A:

	; localvar V
	%V.325 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.325 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.324

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.325 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.325 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.325 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.325 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.324

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.324

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.325 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.324

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.325 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1459
	br label %.Lt_1459
.Lt_1459:

	; label .Lt_1458
	br label %.Lt_1458
.Lt_1458:

	; label .Lt_1457
	br label %.Lt_1457
.Lt_1457:
	ret void
}

define void @INS_BNE( %CPU6510* %CPU.326$ ) nounwind
{

	; paramvar CPU
	%CPU.326 = alloca %CPU6510*
	store %CPU6510* %CPU.326$, %CPU6510** %CPU.326

	; label .Lt_145B
	br label %.Lt_145B
.Lt_145B:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.326

	; bop vr1 SHR 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 1 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_145E, label %.Lt_145F
.Lt_145F:

	; localvar V
	%V.327 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.327 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.326

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.327 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.327 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.327 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.327 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.326

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.326

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.327 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.326

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.327 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_145E
	br label %.Lt_145E
.Lt_145E:

	; label .Lt_145D
	br label %.Lt_145D
.Lt_145D:

	; label .Lt_145C
	br label %.Lt_145C
.Lt_145C:
	ret void
}

define void @INS_BPL( %CPU6510* %CPU.328$ ) nounwind
{

	; paramvar CPU
	%CPU.328 = alloca %CPU6510*
	store %CPU6510* %CPU.328$, %CPU6510** %CPU.328

	; label .Lt_1460
	br label %.Lt_1460
.Lt_1460:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.328

	; bop vr1 SHR 7
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 7 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_1463, label %.Lt_1464
.Lt_1464:

	; localvar V
	%V.329 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.329 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.328

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.329 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.329 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.328

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.328

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.328

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.329 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1463
	br label %.Lt_1463
.Lt_1463:

	; label .Lt_1462
	br label %.Lt_1462
.Lt_1462:

	; label .Lt_1461
	br label %.Lt_1461
.Lt_1461:
	ret void
}

define void @INS_BRK( %CPU6510* %CPU.330$ ) nounwind
{

	; paramvar CPU
	%CPU.330 = alloca %CPU6510*
	store %CPU6510* %CPU.330$, %CPU6510** %CPU.330

	; label .Lt_1465
	br label %.Lt_1465
.Lt_1465:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.330

	; conv vr1+12 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 12
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = sext i16 %vr6 to i64

	; bop vr2 + 1
	%vr7 = add i64 %vr2, 1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i16

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.330

	; store vr10+12 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 12
	%vr13 = inttoptr i64 %vr12 to i16*
	store i16 %vr8, i16* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.330

	; conv vr15+13 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 13
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = zext i8 %vr20 to i64

	; call PUSH()
	; arg CPU
	%vr21 = load %CPU6510*, %CPU6510** %CPU.330
	; arg vr16
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr21, i64 %vr16 )

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.330

	; conv vr23+12 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 12
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = zext i8 %vr28 to i64

	; call PUSH()
	; arg CPU
	%vr29 = load %CPU6510*, %CPU6510** %CPU.330
	; arg vr24
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr29, i64 %vr24 )

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.330

	; conv vr31 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = inttoptr i64 %vr33 to i8*
	%vr35 = load i8, i8* %vr34
	%vr32 = zext i8 %vr35 to i64

	; call PUSH()
	; arg CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.330
	; arg vr32
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr36, i64 %vr32 )

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.330

	; bop vr38 AND -17
	%vr41 = ptrtoint %CPU6510* %vr38 to i64
	%vr42 = inttoptr i64 %vr41 to i64*
	%vr43 = load i64, i64* %vr42
	%vr40 = and i64 %vr43, -17

	; bop vr40 OR 16
	%vr45 = or i64 %vr40, 16

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.330

	; store vr47 := vr45
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	store i64 %vr45, i64* %vr50

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.330

	; bop vr52 AND -5
	%vr55 = ptrtoint %CPU6510* %vr52 to i64
	%vr56 = inttoptr i64 %vr55 to i64*
	%vr57 = load i64, i64* %vr56
	%vr54 = and i64 %vr57, -5

	; bop vr54 OR 4
	%vr59 = or i64 %vr54, 4

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.330

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.330

	; call READUSHORT()
	; arg vr66+16
	%vr68 = ptrtoint %CPU6510* %vr66 to i64
	%vr69 = add i64 %vr68, 16
	%vr70 = inttoptr i64 %vr69 to %MEMORY_T**
	%vr71 = load %MEMORY_T*, %MEMORY_T** %vr70
	; arg 65534
	%vr67 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr71, i64 65534 )

	; deref CPU
	%vr73 = load %CPU6510*, %CPU6510** %CPU.330

	; store vr73+12 := vr67
	%vr74 = ptrtoint %CPU6510* %vr73 to i64
	%vr75 = add i64 %vr74, 12
	%vr76 = inttoptr i64 %vr75 to i16*
	store i16 %vr67, i16* %vr76

	; label .Lt_1466
	br label %.Lt_1466
.Lt_1466:
	ret void
}

define void @INS_BVC( %CPU6510* %CPU.331$ ) nounwind
{

	; paramvar CPU
	%CPU.331 = alloca %CPU6510*
	store %CPU6510* %CPU.331$, %CPU6510** %CPU.331

	; label .Lt_1467
	br label %.Lt_1467
.Lt_1467:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.331

	; bop vr1 SHR 6
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 6 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_146A, label %.Lt_146B
.Lt_146B:

	; localvar V
	%V.332 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.332 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.331

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.332 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.332 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.332 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.332 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.331

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.331

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.332 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.331

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.332 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_146A
	br label %.Lt_146A
.Lt_146A:

	; label .Lt_1469
	br label %.Lt_1469
.Lt_1469:

	; label .Lt_1468
	br label %.Lt_1468
.Lt_1468:
	ret void
}

define void @INS_BVS( %CPU6510* %CPU.333$ ) nounwind
{

	; paramvar CPU
	%CPU.333 = alloca %CPU6510*
	store %CPU6510* %CPU.333$, %CPU6510** %CPU.333

	; label .Lt_146C
	br label %.Lt_146C
.Lt_146C:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.333

	; bop vr1 SHR 6
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 6 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 == 0
	%vr10 = icmp eq i64 %vr9, 0
	br i1 %vr10, label %.Lt_146F, label %.Lt_1470
.Lt_1470:

	; localvar V
	%V.334 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.334 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.333

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.334 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.334 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.334 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.334 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.333

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.333

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.334 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.333

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.334 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_146F
	br label %.Lt_146F
.Lt_146F:

	; label .Lt_146E
	br label %.Lt_146E
.Lt_146E:

	; label .Lt_146D
	br label %.Lt_146D
.Lt_146D:
	ret void
}

define void @INS_CLC( %CPU6510* %CPU.335$ ) nounwind
{

	; paramvar CPU
	%CPU.335 = alloca %CPU6510*
	store %CPU6510* %CPU.335$, %CPU6510** %CPU.335

	; label .Lt_1471
	br label %.Lt_1471
.Lt_1471:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.335

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.335

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1472
	br label %.Lt_1472
.Lt_1472:
	ret void
}

define void @INS_CLD( %CPU6510* %CPU.336$ ) nounwind
{

	; paramvar CPU
	%CPU.336 = alloca %CPU6510*
	store %CPU6510* %CPU.336$, %CPU6510** %CPU.336

	; label .Lt_1473
	br label %.Lt_1473
.Lt_1473:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.336

	; bop vr1 AND -9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -9

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.336

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1474
	br label %.Lt_1474
.Lt_1474:
	ret void
}

define void @INS_CLI( %CPU6510* %CPU.337$ ) nounwind
{

	; paramvar CPU
	%CPU.337 = alloca %CPU6510*
	store %CPU6510* %CPU.337$, %CPU6510** %CPU.337

	; label .Lt_1475
	br label %.Lt_1475
.Lt_1475:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.337

	; bop vr1 AND -5
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -5

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.337

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1476
	br label %.Lt_1476
.Lt_1476:
	ret void
}

define void @INS_CLV( %CPU6510* %CPU.338$ ) nounwind
{

	; paramvar CPU
	%CPU.338 = alloca %CPU6510*
	store %CPU6510* %CPU.338$, %CPU6510** %CPU.338

	; label .Lt_1477
	br label %.Lt_1477
.Lt_1477:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.338

	; bop vr1 AND -65
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -65

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.338

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1478
	br label %.Lt_1478
.Lt_1478:
	ret void
}

define void @INS_CMP( %CPU6510* %CPU.339$ ) nounwind
{

	; paramvar CPU
	%CPU.339 = alloca %CPU6510*
	store %CPU6510* %CPU.339$, %CPU6510** %CPU.339

	; localvar V
	%V.340 = alloca %MULTI

	; localvar LT_147C
	%LT_147C.341 = alloca i64

	; localvar LT_147E
	%LT_147E.342 = alloca i64

	; localvar LT_1480
	%LT_1480.343 = alloca i64

	; label .Lt_1479
	br label %.Lt_1479
.Lt_1479:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.340 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.339

	; conv vr3+8 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 8
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.339

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.339

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.340 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.339

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.340 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_147B, label %.Lt_1481
.Lt_1481:

	; store LT_147C := 1
	store i64 1, i64* %LT_147C.341

	; goto .Lt_1482
	br label %.Lt_1482
.Lt_1483:

	; label .Lt_147B
	br label %.Lt_147B
.Lt_147B:

	; store LT_147C := 0
	store i64 0, i64* %LT_147C.341

	; label .Lt_1482
	br label %.Lt_1482
.Lt_1482:
	%vr40 = load i64, i64* %LT_147C.341
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.339

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.339

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.340 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_147D, label %.Lt_1484
.Lt_1484:

	; store LT_147E := 1
	store i64 1, i64* %LT_147E.342

	; goto .Lt_1485
	br label %.Lt_1485
.Lt_1486:

	; label .Lt_147D
	br label %.Lt_147D
.Lt_147D:

	; store LT_147E := 0
	store i64 0, i64* %LT_147E.342

	; label .Lt_1485
	br label %.Lt_1485
.Lt_1485:
	%vr61 = load i64, i64* %LT_147E.342
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.339

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.339

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.340 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_147F, label %.Lt_1487
.Lt_1487:

	; store LT_1480 := 1
	store i64 1, i64* %LT_1480.343

	; goto .Lt_1488
	br label %.Lt_1488
.Lt_1489:

	; label .Lt_147F
	br label %.Lt_147F
.Lt_147F:

	; store LT_1480 := 0
	store i64 0, i64* %LT_1480.343

	; label .Lt_1488
	br label %.Lt_1488
.Lt_1488:
	%vr84 = load i64, i64* %LT_1480.343
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.339

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_147A
	br label %.Lt_147A
.Lt_147A:
	ret void
}

define void @INS_CPX( %CPU6510* %CPU.344$ ) nounwind
{

	; paramvar CPU
	%CPU.344 = alloca %CPU6510*
	store %CPU6510* %CPU.344$, %CPU6510** %CPU.344

	; localvar V
	%V.345 = alloca %MULTI

	; localvar LT_148D
	%LT_148D.346 = alloca i64

	; localvar LT_148F
	%LT_148F.347 = alloca i64

	; localvar LT_1491
	%LT_1491.348 = alloca i64

	; label .Lt_148A
	br label %.Lt_148A
.Lt_148A:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.345 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.344

	; conv vr3+9 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 9
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.344

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.344

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.345 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.344

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.345 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_148C, label %.Lt_1492
.Lt_1492:

	; store LT_148D := 1
	store i64 1, i64* %LT_148D.346

	; goto .Lt_1493
	br label %.Lt_1493
.Lt_1494:

	; label .Lt_148C
	br label %.Lt_148C
.Lt_148C:

	; store LT_148D := 0
	store i64 0, i64* %LT_148D.346

	; label .Lt_1493
	br label %.Lt_1493
.Lt_1493:
	%vr40 = load i64, i64* %LT_148D.346
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.344

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.344

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.345 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_148E, label %.Lt_1495
.Lt_1495:

	; store LT_148F := 1
	store i64 1, i64* %LT_148F.347

	; goto .Lt_1496
	br label %.Lt_1496
.Lt_1497:

	; label .Lt_148E
	br label %.Lt_148E
.Lt_148E:

	; store LT_148F := 0
	store i64 0, i64* %LT_148F.347

	; label .Lt_1496
	br label %.Lt_1496
.Lt_1496:
	%vr61 = load i64, i64* %LT_148F.347
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.344

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.344

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.345 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_1490, label %.Lt_1498
.Lt_1498:

	; store LT_1491 := 1
	store i64 1, i64* %LT_1491.348

	; goto .Lt_1499
	br label %.Lt_1499
.Lt_149A:

	; label .Lt_1490
	br label %.Lt_1490
.Lt_1490:

	; store LT_1491 := 0
	store i64 0, i64* %LT_1491.348

	; label .Lt_1499
	br label %.Lt_1499
.Lt_1499:
	%vr84 = load i64, i64* %LT_1491.348
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.344

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_148B
	br label %.Lt_148B
.Lt_148B:
	ret void
}

define void @INS_CPY( %CPU6510* %CPU.349$ ) nounwind
{

	; paramvar CPU
	%CPU.349 = alloca %CPU6510*
	store %CPU6510* %CPU.349$, %CPU6510** %CPU.349

	; localvar V
	%V.350 = alloca %MULTI

	; localvar LT_149E
	%LT_149E.351 = alloca i64

	; localvar LT_14A0
	%LT_14A0.352 = alloca i64

	; localvar LT_14A2
	%LT_14A2.353 = alloca i64

	; label .Lt_149B
	br label %.Lt_149B
.Lt_149B:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.350 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.349

	; conv vr3+10 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 10
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.349

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.349

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.350 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.349

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.350 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_149D, label %.Lt_14A3
.Lt_14A3:

	; store LT_149E := 1
	store i64 1, i64* %LT_149E.351

	; goto .Lt_14A4
	br label %.Lt_14A4
.Lt_14A5:

	; label .Lt_149D
	br label %.Lt_149D
.Lt_149D:

	; store LT_149E := 0
	store i64 0, i64* %LT_149E.351

	; label .Lt_14A4
	br label %.Lt_14A4
.Lt_14A4:
	%vr40 = load i64, i64* %LT_149E.351
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.349

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.349

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.350 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_149F, label %.Lt_14A6
.Lt_14A6:

	; store LT_14A0 := 1
	store i64 1, i64* %LT_14A0.352

	; goto .Lt_14A7
	br label %.Lt_14A7
.Lt_14A8:

	; label .Lt_149F
	br label %.Lt_149F
.Lt_149F:

	; store LT_14A0 := 0
	store i64 0, i64* %LT_14A0.352

	; label .Lt_14A7
	br label %.Lt_14A7
.Lt_14A7:
	%vr61 = load i64, i64* %LT_14A0.352
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.349

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.349

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.350 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_14A1, label %.Lt_14A9
.Lt_14A9:

	; store LT_14A2 := 1
	store i64 1, i64* %LT_14A2.353

	; goto .Lt_14AA
	br label %.Lt_14AA
.Lt_14AB:

	; label .Lt_14A1
	br label %.Lt_14A1
.Lt_14A1:

	; store LT_14A2 := 0
	store i64 0, i64* %LT_14A2.353

	; label .Lt_14AA
	br label %.Lt_14AA
.Lt_14AA:
	%vr84 = load i64, i64* %LT_14A2.353
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.349

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_149C
	br label %.Lt_149C
.Lt_149C:
	ret void
}

define void @INS_DEC( %CPU6510* %CPU.354$ ) nounwind
{

	; paramvar CPU
	%CPU.354 = alloca %CPU6510*
	store %CPU6510* %CPU.354$, %CPU6510** %CPU.354

	; localvar V
	%V.355 = alloca %MULTI

	; localvar LT_14AF
	%LT_14AF.356 = alloca i64

	; localvar LT_14B1
	%LT_14B1.357 = alloca i64

	; label .Lt_14AC
	br label %.Lt_14AC
.Lt_14AC:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.355 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.354

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.354

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.355 to i8*
	store i8 %vr11, i8* %vr16

	; conv V => vr17
	%vr18 = bitcast %MULTI* %V.355 to i8*
	%vr19 = load i8, i8* %vr18
	%vr17 = sext i8 %vr19 to i64

	; bop vr17 + -1
	%vr20 = add i64 %vr17, -1

	; conv vr20 => vr21
	%vr21 = trunc i64 %vr20 to i8

	; store V := vr21
	%vr22 = bitcast %MULTI* %V.355 to i8*
	store i8 %vr21, i8* %vr22

	; deref CPU
	%vr24 = load %CPU6510*, %CPU6510** %CPU.354

	; bop vr24 AND -3
	%vr27 = ptrtoint %CPU6510* %vr24 to i64
	%vr28 = inttoptr i64 %vr27 to i64*
	%vr29 = load i64, i64* %vr28
	%vr26 = and i64 %vr29, -3

	; conv V => vr31
	%vr32 = bitcast %MULTI* %V.355 to i8*
	%vr33 = load i8, i8* %vr32
	%vr31 = sext i8 %vr33 to i64

	; branchbop vr31 <> 0
	%vr34 = icmp ne i64 %vr31, 0
	br i1 %vr34, label %.Lt_14AE, label %.Lt_14B2
.Lt_14B2:

	; store LT_14AF := 1
	store i64 1, i64* %LT_14AF.356

	; goto .Lt_14B3
	br label %.Lt_14B3
.Lt_14B4:

	; label .Lt_14AE
	br label %.Lt_14AE
.Lt_14AE:

	; store LT_14AF := 0
	store i64 0, i64* %LT_14AF.356

	; label .Lt_14B3
	br label %.Lt_14B3
.Lt_14B3:
	%vr36 = load i64, i64* %LT_14AF.356
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr26 OR vr38
	%vr40 = or i64 %vr26, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.354

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.354

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; conv V => vr54
	%vr55 = bitcast %MULTI* %V.355 to i8*
	%vr56 = load i8, i8* %vr55
	%vr54 = sext i8 %vr56 to i64

	; branchbop vr54 >= 0
	%vr57 = icmp sge i64 %vr54, 0
	br i1 %vr57, label %.Lt_14B0, label %.Lt_14B5
.Lt_14B5:

	; store LT_14B1 := 1
	store i64 1, i64* %LT_14B1.357

	; goto .Lt_14B6
	br label %.Lt_14B6
.Lt_14B7:

	; label .Lt_14B0
	br label %.Lt_14B0
.Lt_14B0:

	; store LT_14B1 := 0
	store i64 0, i64* %LT_14B1.357

	; label .Lt_14B6
	br label %.Lt_14B6
.Lt_14B6:
	%vr59 = load i64, i64* %LT_14B1.357
	%vr58 = bitcast i64 %vr59 to i64

	; bop vr58 AND 1
	%vr60 = and i64 %vr58, 1

	; bop vr60 SHL 7
	%vr62 = bitcast i64 7 to i64
	%vr61 = shl i64 %vr60, %vr62

	; bop vr49 OR vr61
	%vr63 = or i64 %vr49, %vr61

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.354

	; store vr65 := vr63
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = inttoptr i64 %vr67 to i64*
	store i64 %vr63, i64* %vr68

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.355 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = zext i8 %vr71 to i64

	; deref CPU
	%vr73 = load %CPU6510*, %CPU6510** %CPU.354

	; conv vr73+64 => vr74
	%vr75 = ptrtoint %CPU6510* %vr73 to i64
	%vr76 = add i64 %vr75, 64
	%vr77 = inttoptr i64 %vr76 to i16*
	%vr78 = load i16, i16* %vr77
	%vr74 = zext i16 %vr78 to i64

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.354

	; call WRITEUBYTE()
	; arg vr80+16
	%vr81 = ptrtoint %CPU6510* %vr80 to i64
	%vr82 = add i64 %vr81, 16
	%vr83 = inttoptr i64 %vr82 to %MEMORY_T**
	%vr84 = load %MEMORY_T*, %MEMORY_T** %vr83
	; arg vr74
	; arg vr69
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr84, i64 %vr74, i64 %vr69 )

	; label .Lt_14AD
	br label %.Lt_14AD
.Lt_14AD:
	ret void
}

define void @INS_DEX( %CPU6510* %CPU.358$ ) nounwind
{

	; paramvar CPU
	%CPU.358 = alloca %CPU6510*
	store %CPU6510* %CPU.358$, %CPU6510** %CPU.358

	; localvar LT_14BB
	%LT_14BB.359 = alloca i64

	; localvar LT_14BD
	%LT_14BD.360 = alloca i64

	; label .Lt_14B8
	br label %.Lt_14B8
.Lt_14B8:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr1+9 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 9
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr10+9 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 9
	%vr13 = inttoptr i64 %vr12 to i8*
	store i8 %vr8, i8* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.358

	; bop vr15 AND -3
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr17 = and i64 %vr20, -3

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr23+9 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 9
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = sext i8 %vr28 to i64

	; branchbop vr24 <> 0
	%vr29 = icmp ne i64 %vr24, 0
	br i1 %vr29, label %.Lt_14BA, label %.Lt_14BE
.Lt_14BE:

	; store LT_14BB := 1
	store i64 1, i64* %LT_14BB.359

	; goto .Lt_14BF
	br label %.Lt_14BF
.Lt_14C0:

	; label .Lt_14BA
	br label %.Lt_14BA
.Lt_14BA:

	; store LT_14BB := 0
	store i64 0, i64* %LT_14BB.359

	; label .Lt_14BF
	br label %.Lt_14BF
.Lt_14BF:
	%vr31 = load i64, i64* %LT_14BB.359
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr32 SHL 1
	%vr34 = bitcast i64 1 to i64
	%vr33 = shl i64 %vr32, %vr34

	; bop vr17 OR vr33
	%vr35 = or i64 %vr17, %vr33

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr37 := vr35
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	store i64 %vr35, i64* %vr40

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.358

	; bop vr42 AND -129
	%vr45 = ptrtoint %CPU6510* %vr42 to i64
	%vr46 = inttoptr i64 %vr45 to i64*
	%vr47 = load i64, i64* %vr46
	%vr44 = and i64 %vr47, -129

	; deref CPU
	%vr50 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr50+9 => vr51
	%vr52 = ptrtoint %CPU6510* %vr50 to i64
	%vr53 = add i64 %vr52, 9
	%vr54 = inttoptr i64 %vr53 to i8*
	%vr55 = load i8, i8* %vr54
	%vr51 = sext i8 %vr55 to i64

	; branchbop vr51 >= 0
	%vr56 = icmp sge i64 %vr51, 0
	br i1 %vr56, label %.Lt_14BC, label %.Lt_14C1
.Lt_14C1:

	; store LT_14BD := 1
	store i64 1, i64* %LT_14BD.360

	; goto .Lt_14C2
	br label %.Lt_14C2
.Lt_14C3:

	; label .Lt_14BC
	br label %.Lt_14BC
.Lt_14BC:

	; store LT_14BD := 0
	store i64 0, i64* %LT_14BD.360

	; label .Lt_14C2
	br label %.Lt_14C2
.Lt_14C2:
	%vr58 = load i64, i64* %LT_14BD.360
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr44 OR vr60
	%vr62 = or i64 %vr44, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_14B9
	br label %.Lt_14B9
.Lt_14B9:
	ret void
}

define void @INS_DEY( %CPU6510* %CPU.361$ ) nounwind
{

	; paramvar CPU
	%CPU.361 = alloca %CPU6510*
	store %CPU6510* %CPU.361$, %CPU6510** %CPU.361

	; localvar LT_14C7
	%LT_14C7.362 = alloca i64

	; localvar LT_14C9
	%LT_14C9.363 = alloca i64

	; label .Lt_14C4
	br label %.Lt_14C4
.Lt_14C4:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr1+10 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 10
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr10+10 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 10
	%vr13 = inttoptr i64 %vr12 to i8*
	store i8 %vr8, i8* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.361

	; bop vr15 AND -3
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr17 = and i64 %vr20, -3

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr23+10 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 10
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = sext i8 %vr28 to i64

	; branchbop vr24 <> 0
	%vr29 = icmp ne i64 %vr24, 0
	br i1 %vr29, label %.Lt_14C6, label %.Lt_14CA
.Lt_14CA:

	; store LT_14C7 := 1
	store i64 1, i64* %LT_14C7.362

	; goto .Lt_14CB
	br label %.Lt_14CB
.Lt_14CC:

	; label .Lt_14C6
	br label %.Lt_14C6
.Lt_14C6:

	; store LT_14C7 := 0
	store i64 0, i64* %LT_14C7.362

	; label .Lt_14CB
	br label %.Lt_14CB
.Lt_14CB:
	%vr31 = load i64, i64* %LT_14C7.362
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr32 SHL 1
	%vr34 = bitcast i64 1 to i64
	%vr33 = shl i64 %vr32, %vr34

	; bop vr17 OR vr33
	%vr35 = or i64 %vr17, %vr33

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr37 := vr35
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	store i64 %vr35, i64* %vr40

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.361

	; bop vr42 AND -129
	%vr45 = ptrtoint %CPU6510* %vr42 to i64
	%vr46 = inttoptr i64 %vr45 to i64*
	%vr47 = load i64, i64* %vr46
	%vr44 = and i64 %vr47, -129

	; deref CPU
	%vr50 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr50+10 => vr51
	%vr52 = ptrtoint %CPU6510* %vr50 to i64
	%vr53 = add i64 %vr52, 10
	%vr54 = inttoptr i64 %vr53 to i8*
	%vr55 = load i8, i8* %vr54
	%vr51 = sext i8 %vr55 to i64

	; branchbop vr51 >= 0
	%vr56 = icmp sge i64 %vr51, 0
	br i1 %vr56, label %.Lt_14C8, label %.Lt_14CD
.Lt_14CD:

	; store LT_14C9 := 1
	store i64 1, i64* %LT_14C9.363

	; goto .Lt_14CE
	br label %.Lt_14CE
.Lt_14CF:

	; label .Lt_14C8
	br label %.Lt_14C8
.Lt_14C8:

	; store LT_14C9 := 0
	store i64 0, i64* %LT_14C9.363

	; label .Lt_14CE
	br label %.Lt_14CE
.Lt_14CE:
	%vr58 = load i64, i64* %LT_14C9.363
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr44 OR vr60
	%vr62 = or i64 %vr44, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_14C5
	br label %.Lt_14C5
.Lt_14C5:
	ret void
}

define void @INS_EOR( %CPU6510* %CPU.364$ ) nounwind
{

	; paramvar CPU
	%CPU.364 = alloca %CPU6510*
	store %CPU6510* %CPU.364$, %CPU6510** %CPU.364

	; localvar LT_14D3
	%LT_14D3.365 = alloca i64

	; localvar LT_14D5
	%LT_14D5.366 = alloca i64

	; label .Lt_14D0
	br label %.Lt_14D0
.Lt_14D0:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.364

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 XOR vr21
	%vr22 = xor i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.364

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.364

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_14D2, label %.Lt_14D6
.Lt_14D6:

	; store LT_14D3 := 1
	store i64 1, i64* %LT_14D3.365

	; goto .Lt_14D7
	br label %.Lt_14D7
.Lt_14D8:

	; label .Lt_14D2
	br label %.Lt_14D2
.Lt_14D2:

	; store LT_14D3 := 0
	store i64 0, i64* %LT_14D3.365

	; label .Lt_14D7
	br label %.Lt_14D7
.Lt_14D7:
	%vr46 = load i64, i64* %LT_14D3.365
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.364

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.364

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_14D4, label %.Lt_14D9
.Lt_14D9:

	; store LT_14D5 := 1
	store i64 1, i64* %LT_14D5.366

	; goto .Lt_14DA
	br label %.Lt_14DA
.Lt_14DB:

	; label .Lt_14D4
	br label %.Lt_14D4
.Lt_14D4:

	; store LT_14D5 := 0
	store i64 0, i64* %LT_14D5.366

	; label .Lt_14DA
	br label %.Lt_14DA
.Lt_14DA:
	%vr73 = load i64, i64* %LT_14D5.366
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.364

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_14D1
	br label %.Lt_14D1
.Lt_14D1:
	ret void
}

define void @INS_INC( %CPU6510* %CPU.367$ ) nounwind
{

	; paramvar CPU
	%CPU.367 = alloca %CPU6510*
	store %CPU6510* %CPU.367$, %CPU6510** %CPU.367

	; localvar V
	%V.368 = alloca %MULTI

	; localvar LT_14DF
	%LT_14DF.369 = alloca i64

	; localvar LT_14E1
	%LT_14E1.370 = alloca i64

	; label .Lt_14DC
	br label %.Lt_14DC
.Lt_14DC:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.368 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.367

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.367

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.368 to i8*
	store i8 %vr11, i8* %vr16

	; conv V => vr17
	%vr18 = bitcast %MULTI* %V.368 to i16*
	%vr19 = load i16, i16* %vr18
	%vr17 = sext i16 %vr19 to i64

	; bop vr17 + 1
	%vr20 = add i64 %vr17, 1

	; conv vr20 => vr21
	%vr21 = trunc i64 %vr20 to i16

	; store V := vr21
	%vr22 = bitcast %MULTI* %V.368 to i16*
	store i16 %vr21, i16* %vr22

	; conv V => vr23
	%vr24 = bitcast %MULTI* %V.368 to i8*
	%vr25 = load i8, i8* %vr24
	%vr23 = zext i8 %vr25 to i64

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.367

	; conv vr27+64 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 64
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = zext i16 %vr32 to i64

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.367

	; call WRITEBYTE()
	; arg vr34+16
	%vr35 = ptrtoint %CPU6510* %vr34 to i64
	%vr36 = add i64 %vr35, 16
	%vr37 = inttoptr i64 %vr36 to %MEMORY_T**
	%vr38 = load %MEMORY_T*, %MEMORY_T** %vr37
	; arg vr28
	; arg vr23
	call void @_ZN8MEMORY_T9WRITEBYTEEyy( %MEMORY_T* %vr38, i64 %vr28, i64 %vr23 )

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.367

	; bop vr40 AND -3
	%vr43 = ptrtoint %CPU6510* %vr40 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	%vr45 = load i64, i64* %vr44
	%vr42 = and i64 %vr45, -3

	; conv V => vr47
	%vr48 = bitcast %MULTI* %V.368 to i8*
	%vr49 = load i8, i8* %vr48
	%vr47 = sext i8 %vr49 to i64

	; branchbop vr47 <> 0
	%vr50 = icmp ne i64 %vr47, 0
	br i1 %vr50, label %.Lt_14DE, label %.Lt_14E2
.Lt_14E2:

	; store LT_14DF := 1
	store i64 1, i64* %LT_14DF.369

	; goto .Lt_14E3
	br label %.Lt_14E3
.Lt_14E4:

	; label .Lt_14DE
	br label %.Lt_14DE
.Lt_14DE:

	; store LT_14DF := 0
	store i64 0, i64* %LT_14DF.369

	; label .Lt_14E3
	br label %.Lt_14E3
.Lt_14E3:
	%vr52 = load i64, i64* %LT_14DF.369
	%vr51 = bitcast i64 %vr52 to i64

	; bop vr51 AND 1
	%vr53 = and i64 %vr51, 1

	; bop vr53 SHL 1
	%vr55 = bitcast i64 1 to i64
	%vr54 = shl i64 %vr53, %vr55

	; bop vr42 OR vr54
	%vr56 = or i64 %vr42, %vr54

	; deref CPU
	%vr58 = load %CPU6510*, %CPU6510** %CPU.367

	; store vr58 := vr56
	%vr60 = ptrtoint %CPU6510* %vr58 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	store i64 %vr56, i64* %vr61

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.367

	; bop vr63 AND -129
	%vr66 = ptrtoint %CPU6510* %vr63 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	%vr68 = load i64, i64* %vr67
	%vr65 = and i64 %vr68, -129

	; conv V => vr70
	%vr71 = bitcast %MULTI* %V.368 to i8*
	%vr72 = load i8, i8* %vr71
	%vr70 = sext i8 %vr72 to i64

	; branchbop vr70 >= 0
	%vr73 = icmp sge i64 %vr70, 0
	br i1 %vr73, label %.Lt_14E0, label %.Lt_14E5
.Lt_14E5:

	; store LT_14E1 := 1
	store i64 1, i64* %LT_14E1.370

	; goto .Lt_14E6
	br label %.Lt_14E6
.Lt_14E7:

	; label .Lt_14E0
	br label %.Lt_14E0
.Lt_14E0:

	; store LT_14E1 := 0
	store i64 0, i64* %LT_14E1.370

	; label .Lt_14E6
	br label %.Lt_14E6
.Lt_14E6:
	%vr75 = load i64, i64* %LT_14E1.370
	%vr74 = bitcast i64 %vr75 to i64

	; bop vr74 AND 1
	%vr76 = and i64 %vr74, 1

	; bop vr76 SHL 7
	%vr78 = bitcast i64 7 to i64
	%vr77 = shl i64 %vr76, %vr78

	; bop vr65 OR vr77
	%vr79 = or i64 %vr65, %vr77

	; deref CPU
	%vr81 = load %CPU6510*, %CPU6510** %CPU.367

	; store vr81 := vr79
	%vr83 = ptrtoint %CPU6510* %vr81 to i64
	%vr84 = inttoptr i64 %vr83 to i64*
	store i64 %vr79, i64* %vr84

	; label .Lt_14DD
	br label %.Lt_14DD
.Lt_14DD:
	ret void
}

define void @INS_INX( %CPU6510* %CPU.371$ ) nounwind
{

	; paramvar CPU
	%CPU.371 = alloca %CPU6510*
	store %CPU6510* %CPU.371$, %CPU6510** %CPU.371

	; localvar V
	%V.372 = alloca %MULTI

	; localvar LT_14EB
	%LT_14EB.373 = alloca i64

	; localvar LT_14ED
	%LT_14ED.374 = alloca i64

	; label .Lt_14E8
	br label %.Lt_14E8
.Lt_14E8:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.372 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.371

	; store V := vr3+9
	%vr4 = ptrtoint %CPU6510* %vr3 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = bitcast %MULTI* %V.372 to i8*
	store i8 %vr7, i8* %vr8

	; conv V => vr9
	%vr10 = bitcast %MULTI* %V.372 to i16*
	%vr11 = load i16, i16* %vr10
	%vr9 = sext i16 %vr11 to i64

	; bop vr9 + 1
	%vr12 = add i64 %vr9, 1

	; conv vr12 => vr13
	%vr13 = trunc i64 %vr12 to i16

	; store V := vr13
	%vr14 = bitcast %MULTI* %V.372 to i16*
	store i16 %vr13, i16* %vr14

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.371

	; store vr16+9 := V
	%vr17 = bitcast %MULTI* %V.372 to i8*
	%vr18 = load i8, i8* %vr17
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = add i64 %vr19, 9
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr18, i8* %vr21

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.371

	; bop vr23 AND -3
	%vr26 = ptrtoint %CPU6510* %vr23 to i64
	%vr27 = inttoptr i64 %vr26 to i64*
	%vr28 = load i64, i64* %vr27
	%vr25 = and i64 %vr28, -3

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.372 to i8*
	%vr32 = load i8, i8* %vr31
	%vr30 = sext i8 %vr32 to i64

	; branchbop vr30 <> 0
	%vr33 = icmp ne i64 %vr30, 0
	br i1 %vr33, label %.Lt_14EA, label %.Lt_14EE
.Lt_14EE:

	; store LT_14EB := 1
	store i64 1, i64* %LT_14EB.373

	; goto .Lt_14EF
	br label %.Lt_14EF
.Lt_14F0:

	; label .Lt_14EA
	br label %.Lt_14EA
.Lt_14EA:

	; store LT_14EB := 0
	store i64 0, i64* %LT_14EB.373

	; label .Lt_14EF
	br label %.Lt_14EF
.Lt_14EF:
	%vr35 = load i64, i64* %LT_14EB.373
	%vr34 = bitcast i64 %vr35 to i64

	; bop vr34 AND 1
	%vr36 = and i64 %vr34, 1

	; bop vr36 SHL 1
	%vr38 = bitcast i64 1 to i64
	%vr37 = shl i64 %vr36, %vr38

	; bop vr25 OR vr37
	%vr39 = or i64 %vr25, %vr37

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.371

	; store vr41 := vr39
	%vr43 = ptrtoint %CPU6510* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	store i64 %vr39, i64* %vr44

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.371

	; bop vr46 AND -129
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -129

	; conv V => vr53
	%vr54 = bitcast %MULTI* %V.372 to i8*
	%vr55 = load i8, i8* %vr54
	%vr53 = sext i8 %vr55 to i64

	; branchbop vr53 >= 0
	%vr56 = icmp sge i64 %vr53, 0
	br i1 %vr56, label %.Lt_14EC, label %.Lt_14F1
.Lt_14F1:

	; store LT_14ED := 1
	store i64 1, i64* %LT_14ED.374

	; goto .Lt_14F2
	br label %.Lt_14F2
.Lt_14F3:

	; label .Lt_14EC
	br label %.Lt_14EC
.Lt_14EC:

	; store LT_14ED := 0
	store i64 0, i64* %LT_14ED.374

	; label .Lt_14F2
	br label %.Lt_14F2
.Lt_14F2:
	%vr58 = load i64, i64* %LT_14ED.374
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr48 OR vr60
	%vr62 = or i64 %vr48, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.371

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_14E9
	br label %.Lt_14E9
.Lt_14E9:
	ret void
}

define void @INS_INY( %CPU6510* %CPU.375$ ) nounwind
{

	; paramvar CPU
	%CPU.375 = alloca %CPU6510*
	store %CPU6510* %CPU.375$, %CPU6510** %CPU.375

	; localvar V
	%V.376 = alloca %MULTI

	; localvar LT_14F7
	%LT_14F7.377 = alloca i64

	; localvar LT_14F9
	%LT_14F9.378 = alloca i64

	; label .Lt_14F4
	br label %.Lt_14F4
.Lt_14F4:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.376 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.375

	; store V := vr3+10
	%vr4 = ptrtoint %CPU6510* %vr3 to i64
	%vr5 = add i64 %vr4, 10
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = bitcast %MULTI* %V.376 to i8*
	store i8 %vr7, i8* %vr8

	; conv V => vr9
	%vr10 = bitcast %MULTI* %V.376 to i16*
	%vr11 = load i16, i16* %vr10
	%vr9 = sext i16 %vr11 to i64

	; bop vr9 + 1
	%vr12 = add i64 %vr9, 1

	; conv vr12 => vr13
	%vr13 = trunc i64 %vr12 to i16

	; store V := vr13
	%vr14 = bitcast %MULTI* %V.376 to i16*
	store i16 %vr13, i16* %vr14

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.375

	; store vr16+10 := V
	%vr17 = bitcast %MULTI* %V.376 to i8*
	%vr18 = load i8, i8* %vr17
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = add i64 %vr19, 10
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr18, i8* %vr21

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.375

	; bop vr23 AND -3
	%vr26 = ptrtoint %CPU6510* %vr23 to i64
	%vr27 = inttoptr i64 %vr26 to i64*
	%vr28 = load i64, i64* %vr27
	%vr25 = and i64 %vr28, -3

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.376 to i8*
	%vr32 = load i8, i8* %vr31
	%vr30 = sext i8 %vr32 to i64

	; branchbop vr30 <> 0
	%vr33 = icmp ne i64 %vr30, 0
	br i1 %vr33, label %.Lt_14F6, label %.Lt_14FA
.Lt_14FA:

	; store LT_14F7 := 1
	store i64 1, i64* %LT_14F7.377

	; goto .Lt_14FB
	br label %.Lt_14FB
.Lt_14FC:

	; label .Lt_14F6
	br label %.Lt_14F6
.Lt_14F6:

	; store LT_14F7 := 0
	store i64 0, i64* %LT_14F7.377

	; label .Lt_14FB
	br label %.Lt_14FB
.Lt_14FB:
	%vr35 = load i64, i64* %LT_14F7.377
	%vr34 = bitcast i64 %vr35 to i64

	; bop vr34 AND 1
	%vr36 = and i64 %vr34, 1

	; bop vr36 SHL 1
	%vr38 = bitcast i64 1 to i64
	%vr37 = shl i64 %vr36, %vr38

	; bop vr25 OR vr37
	%vr39 = or i64 %vr25, %vr37

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.375

	; store vr41 := vr39
	%vr43 = ptrtoint %CPU6510* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	store i64 %vr39, i64* %vr44

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.375

	; bop vr46 AND -129
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -129

	; conv V => vr53
	%vr54 = bitcast %MULTI* %V.376 to i8*
	%vr55 = load i8, i8* %vr54
	%vr53 = sext i8 %vr55 to i64

	; branchbop vr53 >= 0
	%vr56 = icmp sge i64 %vr53, 0
	br i1 %vr56, label %.Lt_14F8, label %.Lt_14FD
.Lt_14FD:

	; store LT_14F9 := 1
	store i64 1, i64* %LT_14F9.378

	; goto .Lt_14FE
	br label %.Lt_14FE
.Lt_14FF:

	; label .Lt_14F8
	br label %.Lt_14F8
.Lt_14F8:

	; store LT_14F9 := 0
	store i64 0, i64* %LT_14F9.378

	; label .Lt_14FE
	br label %.Lt_14FE
.Lt_14FE:
	%vr58 = load i64, i64* %LT_14F9.378
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr48 OR vr60
	%vr62 = or i64 %vr48, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.375

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_14F5
	br label %.Lt_14F5
.Lt_14F5:
	ret void
}

define void @INS_JMP( %CPU6510* %CPU.379$ ) nounwind
{

	; paramvar CPU
	%CPU.379 = alloca %CPU6510*
	store %CPU6510* %CPU.379$, %CPU6510** %CPU.379

	; label .Lt_1500
	br label %.Lt_1500
.Lt_1500:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.379

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.379

	; store vr3+12 := vr1+64
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 64
	%vr6 = inttoptr i64 %vr5 to i16*
	%vr7 = load i16, i16* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 12
	%vr10 = inttoptr i64 %vr9 to i16*
	store i16 %vr7, i16* %vr10

	; label .Lt_1501
	br label %.Lt_1501
.Lt_1501:
	ret void
}

define void @INS_JSR( %CPU6510* %CPU.380$ ) nounwind
{

	; paramvar CPU
	%CPU.380 = alloca %CPU6510*
	store %CPU6510* %CPU.380$, %CPU6510** %CPU.380

	; label .Lt_1502
	br label %.Lt_1502
.Lt_1502:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.380

	; conv vr1+12 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 12
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = sext i16 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i16

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.380

	; store vr10+12 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 12
	%vr13 = inttoptr i64 %vr12 to i16*
	store i16 %vr8, i16* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.380

	; conv vr15+13 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 13
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = zext i8 %vr20 to i64

	; call PUSH()
	; arg CPU
	%vr21 = load %CPU6510*, %CPU6510** %CPU.380
	; arg vr16
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr21, i64 %vr16 )

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.380

	; conv vr23+12 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 12
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = zext i8 %vr28 to i64

	; call PUSH()
	; arg CPU
	%vr29 = load %CPU6510*, %CPU6510** %CPU.380
	; arg vr24
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr29, i64 %vr24 )

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.380

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.380

	; store vr33+12 := vr31+64
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = add i64 %vr34, 64
	%vr36 = inttoptr i64 %vr35 to i16*
	%vr37 = load i16, i16* %vr36
	%vr38 = ptrtoint %CPU6510* %vr33 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr37, i16* %vr40

	; label .Lt_1503
	br label %.Lt_1503
.Lt_1503:
	ret void
}

define void @INS_LDA( %CPU6510* %CPU.381$ ) nounwind
{

	; paramvar CPU
	%CPU.381 = alloca %CPU6510*
	store %CPU6510* %CPU.381$, %CPU6510** %CPU.381

	; localvar LT_1507
	%LT_1507.382 = alloca i64

	; localvar LT_1509
	%LT_1509.383 = alloca i64

	; label .Lt_1504
	br label %.Lt_1504
.Lt_1504:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.381

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr15+8 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 8
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.381

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr28+8 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 8
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_1506, label %.Lt_150A
.Lt_150A:

	; store LT_1507 := 1
	store i64 1, i64* %LT_1507.382

	; goto .Lt_150B
	br label %.Lt_150B
.Lt_150C:

	; label .Lt_1506
	br label %.Lt_1506
.Lt_1506:

	; store LT_1507 := 0
	store i64 0, i64* %LT_1507.382

	; label .Lt_150B
	br label %.Lt_150B
.Lt_150B:
	%vr36 = load i64, i64* %LT_1507.382
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.381

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr55+8 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 8
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_1508, label %.Lt_150D
.Lt_150D:

	; store LT_1509 := 1
	store i64 1, i64* %LT_1509.383

	; goto .Lt_150E
	br label %.Lt_150E
.Lt_150F:

	; label .Lt_1508
	br label %.Lt_1508
.Lt_1508:

	; store LT_1509 := 0
	store i64 0, i64* %LT_1509.383

	; label .Lt_150E
	br label %.Lt_150E
.Lt_150E:
	%vr63 = load i64, i64* %LT_1509.383
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_1505
	br label %.Lt_1505
.Lt_1505:
	ret void
}

define void @INS_LDX( %CPU6510* %CPU.384$ ) nounwind
{

	; paramvar CPU
	%CPU.384 = alloca %CPU6510*
	store %CPU6510* %CPU.384$, %CPU6510** %CPU.384

	; localvar LT_1513
	%LT_1513.385 = alloca i64

	; localvar LT_1515
	%LT_1515.386 = alloca i64

	; label .Lt_1510
	br label %.Lt_1510
.Lt_1510:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.384

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr15+9 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 9
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.384

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr28+9 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 9
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_1512, label %.Lt_1516
.Lt_1516:

	; store LT_1513 := 1
	store i64 1, i64* %LT_1513.385

	; goto .Lt_1517
	br label %.Lt_1517
.Lt_1518:

	; label .Lt_1512
	br label %.Lt_1512
.Lt_1512:

	; store LT_1513 := 0
	store i64 0, i64* %LT_1513.385

	; label .Lt_1517
	br label %.Lt_1517
.Lt_1517:
	%vr36 = load i64, i64* %LT_1513.385
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.384

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr55+9 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 9
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_1514, label %.Lt_1519
.Lt_1519:

	; store LT_1515 := 1
	store i64 1, i64* %LT_1515.386

	; goto .Lt_151A
	br label %.Lt_151A
.Lt_151B:

	; label .Lt_1514
	br label %.Lt_1514
.Lt_1514:

	; store LT_1515 := 0
	store i64 0, i64* %LT_1515.386

	; label .Lt_151A
	br label %.Lt_151A
.Lt_151A:
	%vr63 = load i64, i64* %LT_1515.386
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_1511
	br label %.Lt_1511
.Lt_1511:
	ret void
}

define void @INS_LDY( %CPU6510* %CPU.387$ ) nounwind
{

	; paramvar CPU
	%CPU.387 = alloca %CPU6510*
	store %CPU6510* %CPU.387$, %CPU6510** %CPU.387

	; localvar LT_151F
	%LT_151F.388 = alloca i64

	; localvar LT_1521
	%LT_1521.389 = alloca i64

	; label .Lt_151C
	br label %.Lt_151C
.Lt_151C:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.387

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.387

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr15+10 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 10
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.387

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.387

	; conv vr28+10 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 10
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_151E, label %.Lt_1522
.Lt_1522:

	; store LT_151F := 1
	store i64 1, i64* %LT_151F.388

	; goto .Lt_1523
	br label %.Lt_1523
.Lt_1524:

	; label .Lt_151E
	br label %.Lt_151E
.Lt_151E:

	; store LT_151F := 0
	store i64 0, i64* %LT_151F.388

	; label .Lt_1523
	br label %.Lt_1523
.Lt_1523:
	%vr36 = load i64, i64* %LT_151F.388
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.387

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.387

	; conv vr55+10 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 10
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_1520, label %.Lt_1525
.Lt_1525:

	; store LT_1521 := 1
	store i64 1, i64* %LT_1521.389

	; goto .Lt_1526
	br label %.Lt_1526
.Lt_1527:

	; label .Lt_1520
	br label %.Lt_1520
.Lt_1520:

	; store LT_1521 := 0
	store i64 0, i64* %LT_1521.389

	; label .Lt_1526
	br label %.Lt_1526
.Lt_1526:
	%vr63 = load i64, i64* %LT_1521.389
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_151D
	br label %.Lt_151D
.Lt_151D:
	ret void
}

define void @INS_LSR( %CPU6510* %CPU.390$ ) nounwind
{

	; paramvar CPU
	%CPU.390 = alloca %CPU6510*
	store %CPU6510* %CPU.390$, %CPU6510** %CPU.390

	; localvar V
	%V.391 = alloca %MULTI

	; localvar LT_152B
	%LT_152B.392 = alloca i64

	; localvar LT_152D
	%LT_152D.393 = alloca i64

	; localvar LT_152F
	%LT_152F.394 = alloca i64

	; label .Lt_1528
	br label %.Lt_1528
.Lt_1528:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.391 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.390

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.390

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.391 to i8*
	store i8 %vr11, i8* %vr16

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.390

	; bop vr18 AND -2
	%vr21 = ptrtoint %CPU6510* %vr18 to i64
	%vr22 = inttoptr i64 %vr21 to i64*
	%vr23 = load i64, i64* %vr22
	%vr20 = and i64 %vr23, -2

	; conv V => vr25
	%vr26 = bitcast %MULTI* %V.391 to i8*
	%vr27 = load i8, i8* %vr26
	%vr25 = sext i8 %vr27 to i64

	; bop vr25 AND 1
	%vr28 = and i64 %vr25, 1

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_152A, label %.Lt_1530
.Lt_1530:

	; store LT_152B := 1
	store i64 1, i64* %LT_152B.392

	; goto .Lt_1531
	br label %.Lt_1531
.Lt_1532:

	; label .Lt_152A
	br label %.Lt_152A
.Lt_152A:

	; store LT_152B := 0
	store i64 0, i64* %LT_152B.392

	; label .Lt_1531
	br label %.Lt_1531
.Lt_1531:
	%vr31 = load i64, i64* %LT_152B.392
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr20 OR vr32
	%vr33 = or i64 %vr20, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.390

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.391 to i8*
	%vr41 = load i8, i8* %vr40
	%vr39 = sext i8 %vr41 to i64

	; bop vr39 SHR 1
	%vr42 = ashr i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i8

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.391 to i8*
	store i8 %vr43, i8* %vr44

	; conv V => vr45
	%vr46 = bitcast %MULTI* %V.391 to i8*
	%vr47 = load i8, i8* %vr46
	%vr45 = zext i8 %vr47 to i64

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.390

	; conv vr49+64 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 64
	%vr53 = inttoptr i64 %vr52 to i16*
	%vr54 = load i16, i16* %vr53
	%vr50 = zext i16 %vr54 to i64

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.390

	; call WRITEUBYTE()
	; arg vr56+16
	%vr57 = ptrtoint %CPU6510* %vr56 to i64
	%vr58 = add i64 %vr57, 16
	%vr59 = inttoptr i64 %vr58 to %MEMORY_T**
	%vr60 = load %MEMORY_T*, %MEMORY_T** %vr59
	; arg vr50
	; arg vr45
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr60, i64 %vr50, i64 %vr45 )

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.390

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.391 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = sext i8 %vr71 to i64

	; branchbop vr69 <> 0
	%vr72 = icmp ne i64 %vr69, 0
	br i1 %vr72, label %.Lt_152C, label %.Lt_1533
.Lt_1533:

	; store LT_152D := 1
	store i64 1, i64* %LT_152D.393

	; goto .Lt_1534
	br label %.Lt_1534
.Lt_1535:

	; label .Lt_152C
	br label %.Lt_152C
.Lt_152C:

	; store LT_152D := 0
	store i64 0, i64* %LT_152D.393

	; label .Lt_1534
	br label %.Lt_1534
.Lt_1534:
	%vr74 = load i64, i64* %LT_152D.393
	%vr73 = bitcast i64 %vr74 to i64

	; bop vr73 AND 1
	%vr75 = and i64 %vr73, 1

	; bop vr75 SHL 1
	%vr77 = bitcast i64 1 to i64
	%vr76 = shl i64 %vr75, %vr77

	; bop vr64 OR vr76
	%vr78 = or i64 %vr64, %vr76

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.390

	; store vr80 := vr78
	%vr82 = ptrtoint %CPU6510* %vr80 to i64
	%vr83 = inttoptr i64 %vr82 to i64*
	store i64 %vr78, i64* %vr83

	; deref CPU
	%vr85 = load %CPU6510*, %CPU6510** %CPU.390

	; bop vr85 AND -129
	%vr88 = ptrtoint %CPU6510* %vr85 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	%vr90 = load i64, i64* %vr89
	%vr87 = and i64 %vr90, -129

	; conv V => vr92
	%vr93 = bitcast %MULTI* %V.391 to i8*
	%vr94 = load i8, i8* %vr93
	%vr92 = sext i8 %vr94 to i64

	; branchbop vr92 >= 1
	%vr95 = icmp sge i64 %vr92, 1
	br i1 %vr95, label %.Lt_152E, label %.Lt_1536
.Lt_1536:

	; store LT_152F := 1
	store i64 1, i64* %LT_152F.394

	; goto .Lt_1537
	br label %.Lt_1537
.Lt_1538:

	; label .Lt_152E
	br label %.Lt_152E
.Lt_152E:

	; store LT_152F := 0
	store i64 0, i64* %LT_152F.394

	; label .Lt_1537
	br label %.Lt_1537
.Lt_1537:
	%vr97 = load i64, i64* %LT_152F.394
	%vr96 = bitcast i64 %vr97 to i64

	; bop vr96 AND 1
	%vr98 = and i64 %vr96, 1

	; bop vr98 SHL 7
	%vr100 = bitcast i64 7 to i64
	%vr99 = shl i64 %vr98, %vr100

	; bop vr87 OR vr99
	%vr101 = or i64 %vr87, %vr99

	; deref CPU
	%vr103 = load %CPU6510*, %CPU6510** %CPU.390

	; store vr103 := vr101
	%vr105 = ptrtoint %CPU6510* %vr103 to i64
	%vr106 = inttoptr i64 %vr105 to i64*
	store i64 %vr101, i64* %vr106

	; label .Lt_1529
	br label %.Lt_1529
.Lt_1529:
	ret void
}

define void @INS_LSRA( %CPU6510* %CPU.395$ ) nounwind
{

	; paramvar CPU
	%CPU.395 = alloca %CPU6510*
	store %CPU6510* %CPU.395$, %CPU6510** %CPU.395

	; localvar LT_153C
	%LT_153C.396 = alloca i64

	; localvar LT_153E
	%LT_153E.397 = alloca i64

	; localvar LT_1540
	%LT_1540.398 = alloca i64

	; label .Lt_1539
	br label %.Lt_1539
.Lt_1539:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.395

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.395

	; conv vr9+8 => vr10
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 8
	%vr13 = inttoptr i64 %vr12 to i8*
	%vr14 = load i8, i8* %vr13
	%vr10 = sext i8 %vr14 to i64

	; bop vr10 AND 1
	%vr15 = and i64 %vr10, 1

	; branchbop vr15 == 0
	%vr16 = icmp eq i64 %vr15, 0
	br i1 %vr16, label %.Lt_153B, label %.Lt_1541
.Lt_1541:

	; store LT_153C := 1
	store i64 1, i64* %LT_153C.396

	; goto .Lt_1542
	br label %.Lt_1542
.Lt_1543:

	; label .Lt_153B
	br label %.Lt_153B
.Lt_153B:

	; store LT_153C := 0
	store i64 0, i64* %LT_153C.396

	; label .Lt_1542
	br label %.Lt_1542
.Lt_1542:
	%vr18 = load i64, i64* %LT_153C.396
	%vr17 = bitcast i64 %vr18 to i64

	; bop vr17 AND 1
	%vr19 = and i64 %vr17, 1

	; bop vr3 OR vr19
	%vr20 = or i64 %vr3, %vr19

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.395

	; store vr22 := vr20
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = inttoptr i64 %vr24 to i64*
	store i64 %vr20, i64* %vr25

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.395

	; conv vr27+8 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 8
	%vr31 = inttoptr i64 %vr30 to i8*
	%vr32 = load i8, i8* %vr31
	%vr28 = sext i8 %vr32 to i64

	; bop vr28 SHR 1
	%vr33 = ashr i64 %vr28, 1

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i8

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.395

	; store vr36+8 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 8
	%vr39 = inttoptr i64 %vr38 to i8*
	store i8 %vr34, i8* %vr39

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.395

	; bop vr41 AND -3
	%vr44 = ptrtoint %CPU6510* %vr41 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	%vr46 = load i64, i64* %vr45
	%vr43 = and i64 %vr46, -3

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.395

	; conv vr49+8 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 8
	%vr53 = inttoptr i64 %vr52 to i8*
	%vr54 = load i8, i8* %vr53
	%vr50 = sext i8 %vr54 to i64

	; branchbop vr50 <> 0
	%vr55 = icmp ne i64 %vr50, 0
	br i1 %vr55, label %.Lt_153D, label %.Lt_1544
.Lt_1544:

	; store LT_153E := 1
	store i64 1, i64* %LT_153E.397

	; goto .Lt_1545
	br label %.Lt_1545
.Lt_1546:

	; label .Lt_153D
	br label %.Lt_153D
.Lt_153D:

	; store LT_153E := 0
	store i64 0, i64* %LT_153E.397

	; label .Lt_1545
	br label %.Lt_1545
.Lt_1545:
	%vr57 = load i64, i64* %LT_153E.397
	%vr56 = bitcast i64 %vr57 to i64

	; bop vr56 AND 1
	%vr58 = and i64 %vr56, 1

	; bop vr58 SHL 1
	%vr60 = bitcast i64 1 to i64
	%vr59 = shl i64 %vr58, %vr60

	; bop vr43 OR vr59
	%vr61 = or i64 %vr43, %vr59

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.395

	; store vr63 := vr61
	%vr65 = ptrtoint %CPU6510* %vr63 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	store i64 %vr61, i64* %vr66

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.395

	; bop vr68 AND -129
	%vr71 = ptrtoint %CPU6510* %vr68 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	%vr73 = load i64, i64* %vr72
	%vr70 = and i64 %vr73, -129

	; deref CPU
	%vr76 = load %CPU6510*, %CPU6510** %CPU.395

	; conv vr76+8 => vr77
	%vr78 = ptrtoint %CPU6510* %vr76 to i64
	%vr79 = add i64 %vr78, 8
	%vr80 = inttoptr i64 %vr79 to i8*
	%vr81 = load i8, i8* %vr80
	%vr77 = sext i8 %vr81 to i64

	; branchbop vr77 >= 0
	%vr82 = icmp sge i64 %vr77, 0
	br i1 %vr82, label %.Lt_153F, label %.Lt_1547
.Lt_1547:

	; store LT_1540 := 1
	store i64 1, i64* %LT_1540.398

	; goto .Lt_1548
	br label %.Lt_1548
.Lt_1549:

	; label .Lt_153F
	br label %.Lt_153F
.Lt_153F:

	; store LT_1540 := 0
	store i64 0, i64* %LT_1540.398

	; label .Lt_1548
	br label %.Lt_1548
.Lt_1548:
	%vr84 = load i64, i64* %LT_1540.398
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr70 OR vr86
	%vr88 = or i64 %vr70, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.395

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_153A
	br label %.Lt_153A
.Lt_153A:
	ret void
}

define void @INS_NOP( %CPU6510* %CPU.399$ ) nounwind
{

	; paramvar CPU
	%CPU.399 = alloca %CPU6510*
	store %CPU6510* %CPU.399$, %CPU6510** %CPU.399

	; label .Lt_154A
	br label %.Lt_154A
.Lt_154A:

	; label .Lt_154B
	br label %.Lt_154B
.Lt_154B:
	ret void
}

define void @INS_ORA( %CPU6510* %CPU.400$ ) nounwind
{

	; paramvar CPU
	%CPU.400 = alloca %CPU6510*
	store %CPU6510* %CPU.400$, %CPU6510** %CPU.400

	; localvar LT_154F
	%LT_154F.401 = alloca i64

	; localvar LT_1551
	%LT_1551.402 = alloca i64

	; label .Lt_154C
	br label %.Lt_154C
.Lt_154C:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.400

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.400

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.400

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 OR vr21
	%vr22 = or i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.400

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.400

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.400

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_154E, label %.Lt_1552
.Lt_1552:

	; store LT_154F := 1
	store i64 1, i64* %LT_154F.401

	; goto .Lt_1553
	br label %.Lt_1553
.Lt_1554:

	; label .Lt_154E
	br label %.Lt_154E
.Lt_154E:

	; store LT_154F := 0
	store i64 0, i64* %LT_154F.401

	; label .Lt_1553
	br label %.Lt_1553
.Lt_1553:
	%vr46 = load i64, i64* %LT_154F.401
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.400

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.400

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.400

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_1550, label %.Lt_1555
.Lt_1555:

	; store LT_1551 := 1
	store i64 1, i64* %LT_1551.402

	; goto .Lt_1556
	br label %.Lt_1556
.Lt_1557:

	; label .Lt_1550
	br label %.Lt_1550
.Lt_1550:

	; store LT_1551 := 0
	store i64 0, i64* %LT_1551.402

	; label .Lt_1556
	br label %.Lt_1556
.Lt_1556:
	%vr73 = load i64, i64* %LT_1551.402
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.400

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_154D
	br label %.Lt_154D
.Lt_154D:
	ret void
}

define void @INS_PHA( %CPU6510* %CPU.403$ ) nounwind
{

	; paramvar CPU
	%CPU.403 = alloca %CPU6510*
	store %CPU6510* %CPU.403$, %CPU6510** %CPU.403

	; label .Lt_1558
	br label %.Lt_1558
.Lt_1558:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.403

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; call PUSH()
	; arg CPU
	%vr7 = load %CPU6510*, %CPU6510** %CPU.403
	; arg vr2
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr7, i64 %vr2 )

	; label .Lt_1559
	br label %.Lt_1559
.Lt_1559:
	ret void
}

define void @INS_PHP( %CPU6510* %CPU.404$ ) nounwind
{

	; paramvar CPU
	%CPU.404 = alloca %CPU6510*
	store %CPU6510* %CPU.404$, %CPU6510** %CPU.404

	; label .Lt_155A
	br label %.Lt_155A
.Lt_155A:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.404

	; conv vr1 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = inttoptr i64 %vr3 to i8*
	%vr5 = load i8, i8* %vr4
	%vr2 = zext i8 %vr5 to i64

	; call PUSH()
	; arg CPU
	%vr6 = load %CPU6510*, %CPU6510** %CPU.404
	; arg vr2
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr6, i64 %vr2 )

	; label .Lt_155B
	br label %.Lt_155B
.Lt_155B:
	ret void
}

define void @INS_PLA( %CPU6510* %CPU.405$ ) nounwind
{

	; paramvar CPU
	%CPU.405 = alloca %CPU6510*
	store %CPU6510* %CPU.405$, %CPU6510** %CPU.405

	; localvar LT_155F
	%LT_155F.406 = alloca i64

	; localvar LT_1561
	%LT_1561.407 = alloca i64

	; label .Lt_155C
	br label %.Lt_155C
.Lt_155C:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.405
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.405

	; store vr4+8 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = add i64 %vr5, 8
	%vr7 = inttoptr i64 %vr6 to i8*
	store i8 %vr2, i8* %vr7

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.405

	; bop vr9 AND -3
	%vr12 = ptrtoint %CPU6510* %vr9 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	%vr14 = load i64, i64* %vr13
	%vr11 = and i64 %vr14, -3

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.405

	; conv vr17+8 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 8
	%vr21 = inttoptr i64 %vr20 to i8*
	%vr22 = load i8, i8* %vr21
	%vr18 = sext i8 %vr22 to i64

	; branchbop vr18 <> 0
	%vr23 = icmp ne i64 %vr18, 0
	br i1 %vr23, label %.Lt_155E, label %.Lt_1562
.Lt_1562:

	; store LT_155F := 1
	store i64 1, i64* %LT_155F.406

	; goto .Lt_1563
	br label %.Lt_1563
.Lt_1564:

	; label .Lt_155E
	br label %.Lt_155E
.Lt_155E:

	; store LT_155F := 0
	store i64 0, i64* %LT_155F.406

	; label .Lt_1563
	br label %.Lt_1563
.Lt_1563:
	%vr25 = load i64, i64* %LT_155F.406
	%vr24 = bitcast i64 %vr25 to i64

	; bop vr24 AND 1
	%vr26 = and i64 %vr24, 1

	; bop vr26 SHL 1
	%vr28 = bitcast i64 1 to i64
	%vr27 = shl i64 %vr26, %vr28

	; bop vr11 OR vr27
	%vr29 = or i64 %vr11, %vr27

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.405

	; store vr31 := vr29
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	store i64 %vr29, i64* %vr34

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.405

	; bop vr36 AND -129
	%vr39 = ptrtoint %CPU6510* %vr36 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	%vr41 = load i64, i64* %vr40
	%vr38 = and i64 %vr41, -129

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.405

	; conv vr44+8 => vr45
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = add i64 %vr46, 8
	%vr48 = inttoptr i64 %vr47 to i8*
	%vr49 = load i8, i8* %vr48
	%vr45 = sext i8 %vr49 to i64

	; branchbop vr45 >= 0
	%vr50 = icmp sge i64 %vr45, 0
	br i1 %vr50, label %.Lt_1560, label %.Lt_1565
.Lt_1565:

	; store LT_1561 := 1
	store i64 1, i64* %LT_1561.407

	; goto .Lt_1566
	br label %.Lt_1566
.Lt_1567:

	; label .Lt_1560
	br label %.Lt_1560
.Lt_1560:

	; store LT_1561 := 0
	store i64 0, i64* %LT_1561.407

	; label .Lt_1566
	br label %.Lt_1566
.Lt_1566:
	%vr52 = load i64, i64* %LT_1561.407
	%vr51 = bitcast i64 %vr52 to i64

	; bop vr51 AND 1
	%vr53 = and i64 %vr51, 1

	; bop vr53 SHL 7
	%vr55 = bitcast i64 7 to i64
	%vr54 = shl i64 %vr53, %vr55

	; bop vr38 OR vr54
	%vr56 = or i64 %vr38, %vr54

	; deref CPU
	%vr58 = load %CPU6510*, %CPU6510** %CPU.405

	; store vr58 := vr56
	%vr60 = ptrtoint %CPU6510* %vr58 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	store i64 %vr56, i64* %vr61

	; label .Lt_155D
	br label %.Lt_155D
.Lt_155D:
	ret void
}

define void @INS_PLP( %CPU6510* %CPU.408$ ) nounwind
{

	; paramvar CPU
	%CPU.408 = alloca %CPU6510*
	store %CPU6510* %CPU.408$, %CPU6510** %CPU.408

	; label .Lt_1568
	br label %.Lt_1568
.Lt_1568:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.408
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.408

	; store vr4 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = inttoptr i64 %vr5 to i8*
	store i8 %vr2, i8* %vr6

	; label .Lt_1569
	br label %.Lt_1569
.Lt_1569:
	ret void
}

define void @INS_ROL( %CPU6510* %CPU.409$ ) nounwind
{

	; paramvar CPU
	%CPU.409 = alloca %CPU6510*
	store %CPU6510* %CPU.409$, %CPU6510** %CPU.409

	; localvar V
	%V.410 = alloca %MULTI

	; localvar CARY
	%CARY.411 = alloca i8

	; localvar LT_156D
	%LT_156D.412 = alloca i64

	; localvar LT_156F
	%LT_156F.413 = alloca i64

	; localvar LT_1573
	%LT_1573.414 = alloca i64

	; localvar LT_1575
	%LT_1575.415 = alloca i64

	; label .Lt_156A
	br label %.Lt_156A
.Lt_156A:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.410 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof CARY

	; memclear CARY
	%vr3 = bitcast i8* %CARY.411 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.409

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.409

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store V := vr13
	%vr18 = bitcast %MULTI* %V.410 to i8*
	store i8 %vr13, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.409

	; bop vr20 AND 1
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, 1

	; branchbop vr22 <> 1
	%vr27 = icmp ne i64 %vr22, 1
	br i1 %vr27, label %.Lt_156C, label %.Lt_1576
.Lt_1576:

	; store LT_156D := 1
	store i64 1, i64* %LT_156D.412

	; goto .Lt_1577
	br label %.Lt_1577
.Lt_1578:

	; label .Lt_156C
	br label %.Lt_156C
.Lt_156C:

	; store LT_156D := 0
	store i64 0, i64* %LT_156D.412

	; label .Lt_1577
	br label %.Lt_1577
.Lt_1577:

	; conv LT_156D => vr28
	%vr29 = load i64, i64* %LT_156D.412
	%vr28 = trunc i64 %vr29 to i8

	; store CARY := vr28
	store i8 %vr28, i8* %CARY.411

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.409

	; bop vr31 AND -2
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, -2

	; conv V => vr38
	%vr39 = bitcast %MULTI* %V.410 to i8*
	%vr40 = load i8, i8* %vr39
	%vr38 = sext i8 %vr40 to i64

	; bop vr38 AND 128
	%vr41 = and i64 %vr38, 128

	; branchbop vr41 == 0
	%vr42 = icmp eq i64 %vr41, 0
	br i1 %vr42, label %.Lt_156E, label %.Lt_1579
.Lt_1579:

	; store LT_156F := 1
	store i64 1, i64* %LT_156F.413

	; goto .Lt_157A
	br label %.Lt_157A
.Lt_157B:

	; label .Lt_156E
	br label %.Lt_156E
.Lt_156E:

	; store LT_156F := 0
	store i64 0, i64* %LT_156F.413

	; label .Lt_157A
	br label %.Lt_157A
.Lt_157A:
	%vr44 = load i64, i64* %LT_156F.413
	%vr43 = bitcast i64 %vr44 to i64

	; bop vr43 AND 1
	%vr45 = and i64 %vr43, 1

	; bop vr33 OR vr45
	%vr46 = or i64 %vr33, %vr45

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.409

	; store vr48 := vr46
	%vr50 = ptrtoint %CPU6510* %vr48 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	store i64 %vr46, i64* %vr51

	; conv V => vr52
	%vr53 = bitcast %MULTI* %V.410 to i8*
	%vr54 = load i8, i8* %vr53
	%vr52 = sext i8 %vr54 to i64

	; bop vr52 SHL 1
	%vr55 = shl i64 %vr52, 1

	; conv vr55 => vr56
	%vr56 = trunc i64 %vr55 to i8

	; store V := vr56
	%vr57 = bitcast %MULTI* %V.410 to i8*
	store i8 %vr56, i8* %vr57

	; conv CARY => vr58
	%vr59 = load i8, i8* %CARY.411
	%vr58 = sext i8 %vr59 to i64

	; branchbop vr58 == 0
	%vr60 = icmp eq i64 %vr58, 0
	br i1 %vr60, label %.Lt_1571, label %.Lt_157C
.Lt_157C:

	; conv V => vr61
	%vr62 = bitcast %MULTI* %V.410 to i8*
	%vr63 = load i8, i8* %vr62
	%vr61 = sext i8 %vr63 to i64

	; bop vr61 OR 1
	%vr64 = or i64 %vr61, 1

	; conv vr64 => vr65
	%vr65 = trunc i64 %vr64 to i8

	; store V := vr65
	%vr66 = bitcast %MULTI* %V.410 to i8*
	store i8 %vr65, i8* %vr66

	; label .Lt_1571
	br label %.Lt_1571
.Lt_1571:

	; conv V => vr67
	%vr68 = bitcast %MULTI* %V.410 to i8*
	%vr69 = load i8, i8* %vr68
	%vr67 = zext i8 %vr69 to i64

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.409

	; conv vr71+64 => vr72
	%vr73 = ptrtoint %CPU6510* %vr71 to i64
	%vr74 = add i64 %vr73, 64
	%vr75 = inttoptr i64 %vr74 to i16*
	%vr76 = load i16, i16* %vr75
	%vr72 = zext i16 %vr76 to i64

	; deref CPU
	%vr78 = load %CPU6510*, %CPU6510** %CPU.409

	; call WRITEUBYTE()
	; arg vr78+16
	%vr79 = ptrtoint %CPU6510* %vr78 to i64
	%vr80 = add i64 %vr79, 16
	%vr81 = inttoptr i64 %vr80 to %MEMORY_T**
	%vr82 = load %MEMORY_T*, %MEMORY_T** %vr81
	; arg vr72
	; arg vr67
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr82, i64 %vr72, i64 %vr67 )

	; deref CPU
	%vr84 = load %CPU6510*, %CPU6510** %CPU.409

	; bop vr84 AND -3
	%vr87 = ptrtoint %CPU6510* %vr84 to i64
	%vr88 = inttoptr i64 %vr87 to i64*
	%vr89 = load i64, i64* %vr88
	%vr86 = and i64 %vr89, -3

	; conv V => vr91
	%vr92 = bitcast %MULTI* %V.410 to i8*
	%vr93 = load i8, i8* %vr92
	%vr91 = sext i8 %vr93 to i64

	; branchbop vr91 <> 0
	%vr94 = icmp ne i64 %vr91, 0
	br i1 %vr94, label %.Lt_1572, label %.Lt_157D
.Lt_157D:

	; store LT_1573 := 1
	store i64 1, i64* %LT_1573.414

	; goto .Lt_157E
	br label %.Lt_157E
.Lt_157F:

	; label .Lt_1572
	br label %.Lt_1572
.Lt_1572:

	; store LT_1573 := 0
	store i64 0, i64* %LT_1573.414

	; label .Lt_157E
	br label %.Lt_157E
.Lt_157E:
	%vr96 = load i64, i64* %LT_1573.414
	%vr95 = bitcast i64 %vr96 to i64

	; bop vr95 AND 1
	%vr97 = and i64 %vr95, 1

	; bop vr97 SHL 1
	%vr99 = bitcast i64 1 to i64
	%vr98 = shl i64 %vr97, %vr99

	; bop vr86 OR vr98
	%vr100 = or i64 %vr86, %vr98

	; deref CPU
	%vr102 = load %CPU6510*, %CPU6510** %CPU.409

	; store vr102 := vr100
	%vr104 = ptrtoint %CPU6510* %vr102 to i64
	%vr105 = inttoptr i64 %vr104 to i64*
	store i64 %vr100, i64* %vr105

	; deref CPU
	%vr107 = load %CPU6510*, %CPU6510** %CPU.409

	; bop vr107 AND -129
	%vr110 = ptrtoint %CPU6510* %vr107 to i64
	%vr111 = inttoptr i64 %vr110 to i64*
	%vr112 = load i64, i64* %vr111
	%vr109 = and i64 %vr112, -129

	; conv V => vr114
	%vr115 = bitcast %MULTI* %V.410 to i8*
	%vr116 = load i8, i8* %vr115
	%vr114 = sext i8 %vr116 to i64

	; branchbop vr114 >= 1
	%vr117 = icmp sge i64 %vr114, 1
	br i1 %vr117, label %.Lt_1574, label %.Lt_1580
.Lt_1580:

	; store LT_1575 := 1
	store i64 1, i64* %LT_1575.415

	; goto .Lt_1581
	br label %.Lt_1581
.Lt_1582:

	; label .Lt_1574
	br label %.Lt_1574
.Lt_1574:

	; store LT_1575 := 0
	store i64 0, i64* %LT_1575.415

	; label .Lt_1581
	br label %.Lt_1581
.Lt_1581:
	%vr119 = load i64, i64* %LT_1575.415
	%vr118 = bitcast i64 %vr119 to i64

	; bop vr118 AND 1
	%vr120 = and i64 %vr118, 1

	; bop vr120 SHL 7
	%vr122 = bitcast i64 7 to i64
	%vr121 = shl i64 %vr120, %vr122

	; bop vr109 OR vr121
	%vr123 = or i64 %vr109, %vr121

	; deref CPU
	%vr125 = load %CPU6510*, %CPU6510** %CPU.409

	; store vr125 := vr123
	%vr127 = ptrtoint %CPU6510* %vr125 to i64
	%vr128 = inttoptr i64 %vr127 to i64*
	store i64 %vr123, i64* %vr128

	; label .Lt_156B
	br label %.Lt_156B
.Lt_156B:
	ret void
}

define void @INS_ROLA( %CPU6510* %CPU.416$ ) nounwind
{

	; paramvar CPU
	%CPU.416 = alloca %CPU6510*
	store %CPU6510* %CPU.416$, %CPU6510** %CPU.416

	; localvar CARY
	%CARY.417 = alloca i8

	; localvar LT_1586
	%LT_1586.418 = alloca i64

	; localvar LT_1588
	%LT_1588.419 = alloca i64

	; localvar LT_158C
	%LT_158C.420 = alloca i64

	; localvar LT_158E
	%LT_158E.421 = alloca i64

	; label .Lt_1583
	br label %.Lt_1583
.Lt_1583:

	; addrof CARY

	; memclear CARY
	%vr1 = bitcast i8* %CARY.417 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.416

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; branchbop vr5 <> 1
	%vr10 = icmp ne i64 %vr5, 1
	br i1 %vr10, label %.Lt_1585, label %.Lt_158F
.Lt_158F:

	; store LT_1586 := 1
	store i64 1, i64* %LT_1586.418

	; goto .Lt_1590
	br label %.Lt_1590
.Lt_1591:

	; label .Lt_1585
	br label %.Lt_1585
.Lt_1585:

	; store LT_1586 := 0
	store i64 0, i64* %LT_1586.418

	; label .Lt_1590
	br label %.Lt_1590
.Lt_1590:

	; conv LT_1586 => vr11
	%vr12 = load i64, i64* %LT_1586.418
	%vr11 = trunc i64 %vr12 to i8

	; store CARY := vr11
	store i8 %vr11, i8* %CARY.417

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.416

	; bop vr14 AND -2
	%vr17 = ptrtoint %CPU6510* %vr14 to i64
	%vr18 = inttoptr i64 %vr17 to i64*
	%vr19 = load i64, i64* %vr18
	%vr16 = and i64 %vr19, -2

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.416

	; conv vr22+8 => vr23
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = add i64 %vr24, 8
	%vr26 = inttoptr i64 %vr25 to i8*
	%vr27 = load i8, i8* %vr26
	%vr23 = sext i8 %vr27 to i64

	; bop vr23 AND 128
	%vr28 = and i64 %vr23, 128

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_1587, label %.Lt_1592
.Lt_1592:

	; store LT_1588 := 1
	store i64 1, i64* %LT_1588.419

	; goto .Lt_1593
	br label %.Lt_1593
.Lt_1594:

	; label .Lt_1587
	br label %.Lt_1587
.Lt_1587:

	; store LT_1588 := 0
	store i64 0, i64* %LT_1588.419

	; label .Lt_1593
	br label %.Lt_1593
.Lt_1593:
	%vr31 = load i64, i64* %LT_1588.419
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr16 OR vr32
	%vr33 = or i64 %vr16, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.416

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.416

	; conv vr40+8 => vr41
	%vr42 = ptrtoint %CPU6510* %vr40 to i64
	%vr43 = add i64 %vr42, 8
	%vr44 = inttoptr i64 %vr43 to i8*
	%vr45 = load i8, i8* %vr44
	%vr41 = sext i8 %vr45 to i64

	; bop vr41 SHL 1
	%vr46 = shl i64 %vr41, 1

	; conv vr46 => vr47
	%vr47 = trunc i64 %vr46 to i8

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.416

	; store vr49+8 := vr47
	%vr50 = ptrtoint %CPU6510* %vr49 to i64
	%vr51 = add i64 %vr50, 8
	%vr52 = inttoptr i64 %vr51 to i8*
	store i8 %vr47, i8* %vr52

	; conv CARY => vr53
	%vr54 = load i8, i8* %CARY.417
	%vr53 = sext i8 %vr54 to i64

	; branchbop vr53 == 0
	%vr55 = icmp eq i64 %vr53, 0
	br i1 %vr55, label %.Lt_158A, label %.Lt_1595
.Lt_1595:

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.416

	; conv vr57+8 => vr58
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = add i64 %vr59, 8
	%vr61 = inttoptr i64 %vr60 to i8*
	%vr62 = load i8, i8* %vr61
	%vr58 = sext i8 %vr62 to i64

	; bop vr58 OR 1
	%vr63 = or i64 %vr58, 1

	; conv vr63 => vr64
	%vr64 = trunc i64 %vr63 to i8

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.416

	; store vr66+8 := vr64
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	store i8 %vr64, i8* %vr69

	; label .Lt_158A
	br label %.Lt_158A
.Lt_158A:

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.416

	; bop vr71 AND -3
	%vr74 = ptrtoint %CPU6510* %vr71 to i64
	%vr75 = inttoptr i64 %vr74 to i64*
	%vr76 = load i64, i64* %vr75
	%vr73 = and i64 %vr76, -3

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.416

	; conv vr79+8 => vr80
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 8
	%vr83 = inttoptr i64 %vr82 to i8*
	%vr84 = load i8, i8* %vr83
	%vr80 = sext i8 %vr84 to i64

	; branchbop vr80 <> 0
	%vr85 = icmp ne i64 %vr80, 0
	br i1 %vr85, label %.Lt_158B, label %.Lt_1596
.Lt_1596:

	; store LT_158C := 1
	store i64 1, i64* %LT_158C.420

	; goto .Lt_1597
	br label %.Lt_1597
.Lt_1598:

	; label .Lt_158B
	br label %.Lt_158B
.Lt_158B:

	; store LT_158C := 0
	store i64 0, i64* %LT_158C.420

	; label .Lt_1597
	br label %.Lt_1597
.Lt_1597:
	%vr87 = load i64, i64* %LT_158C.420
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 AND 1
	%vr88 = and i64 %vr86, 1

	; bop vr88 SHL 1
	%vr90 = bitcast i64 1 to i64
	%vr89 = shl i64 %vr88, %vr90

	; bop vr73 OR vr89
	%vr91 = or i64 %vr73, %vr89

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.416

	; store vr93 := vr91
	%vr95 = ptrtoint %CPU6510* %vr93 to i64
	%vr96 = inttoptr i64 %vr95 to i64*
	store i64 %vr91, i64* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.416

	; bop vr98 AND -129
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -129

	; deref CPU
	%vr106 = load %CPU6510*, %CPU6510** %CPU.416

	; conv vr106+8 => vr107
	%vr108 = ptrtoint %CPU6510* %vr106 to i64
	%vr109 = add i64 %vr108, 8
	%vr110 = inttoptr i64 %vr109 to i8*
	%vr111 = load i8, i8* %vr110
	%vr107 = sext i8 %vr111 to i64

	; branchbop vr107 >= 0
	%vr112 = icmp sge i64 %vr107, 0
	br i1 %vr112, label %.Lt_158D, label %.Lt_1599
.Lt_1599:

	; store LT_158E := 1
	store i64 1, i64* %LT_158E.421

	; goto .Lt_159A
	br label %.Lt_159A
.Lt_159B:

	; label .Lt_158D
	br label %.Lt_158D
.Lt_158D:

	; store LT_158E := 0
	store i64 0, i64* %LT_158E.421

	; label .Lt_159A
	br label %.Lt_159A
.Lt_159A:
	%vr114 = load i64, i64* %LT_158E.421
	%vr113 = bitcast i64 %vr114 to i64

	; bop vr113 AND 1
	%vr115 = and i64 %vr113, 1

	; bop vr115 SHL 7
	%vr117 = bitcast i64 7 to i64
	%vr116 = shl i64 %vr115, %vr117

	; bop vr100 OR vr116
	%vr118 = or i64 %vr100, %vr116

	; deref CPU
	%vr120 = load %CPU6510*, %CPU6510** %CPU.416

	; store vr120 := vr118
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	store i64 %vr118, i64* %vr123

	; label .Lt_1584
	br label %.Lt_1584
.Lt_1584:
	ret void
}

define void @INS_ROR( %CPU6510* %CPU.422$ ) nounwind
{

	; paramvar CPU
	%CPU.422 = alloca %CPU6510*
	store %CPU6510* %CPU.422$, %CPU6510** %CPU.422

	; localvar V
	%V.423 = alloca %MULTI

	; localvar CARY
	%CARY.424 = alloca i8

	; localvar LT_159F
	%LT_159F.425 = alloca i64

	; localvar LT_15A1
	%LT_15A1.426 = alloca i64

	; localvar LT_15A5
	%LT_15A5.427 = alloca i64

	; localvar LT_15A7
	%LT_15A7.428 = alloca i64

	; label .Lt_159C
	br label %.Lt_159C
.Lt_159C:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.423 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof CARY

	; memclear CARY
	%vr3 = bitcast i8* %CARY.424 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.422

	; bop vr5 AND 1
	%vr8 = ptrtoint %CPU6510* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to i64*
	%vr10 = load i64, i64* %vr9
	%vr7 = and i64 %vr10, 1

	; branchbop vr7 <> 1
	%vr12 = icmp ne i64 %vr7, 1
	br i1 %vr12, label %.Lt_159E, label %.Lt_15A8
.Lt_15A8:

	; store LT_159F := 1
	store i64 1, i64* %LT_159F.425

	; goto .Lt_15A9
	br label %.Lt_15A9
.Lt_15AA:

	; label .Lt_159E
	br label %.Lt_159E
.Lt_159E:

	; store LT_159F := 0
	store i64 0, i64* %LT_159F.425

	; label .Lt_15A9
	br label %.Lt_15A9
.Lt_15A9:

	; conv LT_159F => vr13
	%vr14 = load i64, i64* %LT_159F.425
	%vr13 = trunc i64 %vr14 to i8

	; store CARY := vr13
	store i8 %vr13, i8* %CARY.424

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.422

	; conv vr16+64 => vr17
	%vr18 = ptrtoint %CPU6510* %vr16 to i64
	%vr19 = add i64 %vr18, 64
	%vr20 = inttoptr i64 %vr19 to i16*
	%vr21 = load i16, i16* %vr20
	%vr17 = zext i16 %vr21 to i64

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.422

	; call READUBYTE()
	; arg vr23+16
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 16
	%vr27 = inttoptr i64 %vr26 to %MEMORY_T**
	%vr28 = load %MEMORY_T*, %MEMORY_T** %vr27
	; arg vr17
	%vr24 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr28, i64 %vr17 )

	; store V := vr24
	%vr29 = bitcast %MULTI* %V.423 to i8*
	store i8 %vr24, i8* %vr29

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.422

	; bop vr31 AND -2
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, -2

	; conv V => vr38
	%vr39 = bitcast %MULTI* %V.423 to i8*
	%vr40 = load i8, i8* %vr39
	%vr38 = sext i8 %vr40 to i64

	; bop vr38 AND 1
	%vr41 = and i64 %vr38, 1

	; branchbop vr41 == 0
	%vr42 = icmp eq i64 %vr41, 0
	br i1 %vr42, label %.Lt_15A0, label %.Lt_15AB
.Lt_15AB:

	; store LT_15A1 := 1
	store i64 1, i64* %LT_15A1.426

	; goto .Lt_15AC
	br label %.Lt_15AC
.Lt_15AD:

	; label .Lt_15A0
	br label %.Lt_15A0
.Lt_15A0:

	; store LT_15A1 := 0
	store i64 0, i64* %LT_15A1.426

	; label .Lt_15AC
	br label %.Lt_15AC
.Lt_15AC:
	%vr44 = load i64, i64* %LT_15A1.426
	%vr43 = bitcast i64 %vr44 to i64

	; bop vr43 AND 1
	%vr45 = and i64 %vr43, 1

	; bop vr33 OR vr45
	%vr46 = or i64 %vr33, %vr45

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.422

	; store vr48 := vr46
	%vr50 = ptrtoint %CPU6510* %vr48 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	store i64 %vr46, i64* %vr51

	; conv V => vr52
	%vr53 = bitcast %MULTI* %V.423 to i8*
	%vr54 = load i8, i8* %vr53
	%vr52 = sext i8 %vr54 to i64

	; bop vr52 SHR 1
	%vr55 = ashr i64 %vr52, 1

	; conv vr55 => vr56
	%vr56 = trunc i64 %vr55 to i8

	; store V := vr56
	%vr57 = bitcast %MULTI* %V.423 to i8*
	store i8 %vr56, i8* %vr57

	; conv CARY => vr58
	%vr59 = load i8, i8* %CARY.424
	%vr58 = sext i8 %vr59 to i64

	; branchbop vr58 == 0
	%vr60 = icmp eq i64 %vr58, 0
	br i1 %vr60, label %.Lt_15A3, label %.Lt_15AE
.Lt_15AE:

	; conv V => vr61
	%vr62 = bitcast %MULTI* %V.423 to i8*
	%vr63 = load i8, i8* %vr62
	%vr61 = sext i8 %vr63 to i64

	; bop vr61 OR 128
	%vr64 = or i64 %vr61, 128

	; conv vr64 => vr65
	%vr65 = trunc i64 %vr64 to i8

	; store V := vr65
	%vr66 = bitcast %MULTI* %V.423 to i8*
	store i8 %vr65, i8* %vr66

	; label .Lt_15A3
	br label %.Lt_15A3
.Lt_15A3:

	; conv V => vr67
	%vr68 = bitcast %MULTI* %V.423 to i8*
	%vr69 = load i8, i8* %vr68
	%vr67 = zext i8 %vr69 to i64

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.422

	; conv vr71+64 => vr72
	%vr73 = ptrtoint %CPU6510* %vr71 to i64
	%vr74 = add i64 %vr73, 64
	%vr75 = inttoptr i64 %vr74 to i16*
	%vr76 = load i16, i16* %vr75
	%vr72 = zext i16 %vr76 to i64

	; deref CPU
	%vr78 = load %CPU6510*, %CPU6510** %CPU.422

	; call WRITEUBYTE()
	; arg vr78+16
	%vr79 = ptrtoint %CPU6510* %vr78 to i64
	%vr80 = add i64 %vr79, 16
	%vr81 = inttoptr i64 %vr80 to %MEMORY_T**
	%vr82 = load %MEMORY_T*, %MEMORY_T** %vr81
	; arg vr72
	; arg vr67
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr82, i64 %vr72, i64 %vr67 )

	; deref CPU
	%vr84 = load %CPU6510*, %CPU6510** %CPU.422

	; bop vr84 AND -3
	%vr87 = ptrtoint %CPU6510* %vr84 to i64
	%vr88 = inttoptr i64 %vr87 to i64*
	%vr89 = load i64, i64* %vr88
	%vr86 = and i64 %vr89, -3

	; conv V => vr91
	%vr92 = bitcast %MULTI* %V.423 to i8*
	%vr93 = load i8, i8* %vr92
	%vr91 = sext i8 %vr93 to i64

	; branchbop vr91 <> 0
	%vr94 = icmp ne i64 %vr91, 0
	br i1 %vr94, label %.Lt_15A4, label %.Lt_15AF
.Lt_15AF:

	; store LT_15A5 := 1
	store i64 1, i64* %LT_15A5.427

	; goto .Lt_15B0
	br label %.Lt_15B0
.Lt_15B1:

	; label .Lt_15A4
	br label %.Lt_15A4
.Lt_15A4:

	; store LT_15A5 := 0
	store i64 0, i64* %LT_15A5.427

	; label .Lt_15B0
	br label %.Lt_15B0
.Lt_15B0:
	%vr96 = load i64, i64* %LT_15A5.427
	%vr95 = bitcast i64 %vr96 to i64

	; bop vr95 AND 1
	%vr97 = and i64 %vr95, 1

	; bop vr97 SHL 1
	%vr99 = bitcast i64 1 to i64
	%vr98 = shl i64 %vr97, %vr99

	; bop vr86 OR vr98
	%vr100 = or i64 %vr86, %vr98

	; deref CPU
	%vr102 = load %CPU6510*, %CPU6510** %CPU.422

	; store vr102 := vr100
	%vr104 = ptrtoint %CPU6510* %vr102 to i64
	%vr105 = inttoptr i64 %vr104 to i64*
	store i64 %vr100, i64* %vr105

	; deref CPU
	%vr107 = load %CPU6510*, %CPU6510** %CPU.422

	; bop vr107 AND -129
	%vr110 = ptrtoint %CPU6510* %vr107 to i64
	%vr111 = inttoptr i64 %vr110 to i64*
	%vr112 = load i64, i64* %vr111
	%vr109 = and i64 %vr112, -129

	; conv V => vr114
	%vr115 = bitcast %MULTI* %V.423 to i8*
	%vr116 = load i8, i8* %vr115
	%vr114 = sext i8 %vr116 to i64

	; branchbop vr114 >= 0
	%vr117 = icmp sge i64 %vr114, 0
	br i1 %vr117, label %.Lt_15A6, label %.Lt_15B2
.Lt_15B2:

	; store LT_15A7 := 1
	store i64 1, i64* %LT_15A7.428

	; goto .Lt_15B3
	br label %.Lt_15B3
.Lt_15B4:

	; label .Lt_15A6
	br label %.Lt_15A6
.Lt_15A6:

	; store LT_15A7 := 0
	store i64 0, i64* %LT_15A7.428

	; label .Lt_15B3
	br label %.Lt_15B3
.Lt_15B3:
	%vr119 = load i64, i64* %LT_15A7.428
	%vr118 = bitcast i64 %vr119 to i64

	; bop vr118 AND 1
	%vr120 = and i64 %vr118, 1

	; bop vr120 SHL 7
	%vr122 = bitcast i64 7 to i64
	%vr121 = shl i64 %vr120, %vr122

	; bop vr109 OR vr121
	%vr123 = or i64 %vr109, %vr121

	; deref CPU
	%vr125 = load %CPU6510*, %CPU6510** %CPU.422

	; store vr125 := vr123
	%vr127 = ptrtoint %CPU6510* %vr125 to i64
	%vr128 = inttoptr i64 %vr127 to i64*
	store i64 %vr123, i64* %vr128

	; label .Lt_159D
	br label %.Lt_159D
.Lt_159D:
	ret void
}

define void @INS_RORA( %CPU6510* %CPU.429$ ) nounwind
{

	; paramvar CPU
	%CPU.429 = alloca %CPU6510*
	store %CPU6510* %CPU.429$, %CPU6510** %CPU.429

	; localvar CARY
	%CARY.430 = alloca i8

	; localvar LT_15B8
	%LT_15B8.431 = alloca i64

	; localvar LT_15BA
	%LT_15BA.432 = alloca i64

	; localvar LT_15BE
	%LT_15BE.433 = alloca i64

	; localvar LT_15C0
	%LT_15C0.434 = alloca i64

	; label .Lt_15B5
	br label %.Lt_15B5
.Lt_15B5:

	; addrof CARY

	; memclear CARY
	%vr1 = bitcast i8* %CARY.430 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.429

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; branchbop vr5 <> 1
	%vr10 = icmp ne i64 %vr5, 1
	br i1 %vr10, label %.Lt_15B7, label %.Lt_15C1
.Lt_15C1:

	; store LT_15B8 := 1
	store i64 1, i64* %LT_15B8.431

	; goto .Lt_15C2
	br label %.Lt_15C2
.Lt_15C3:

	; label .Lt_15B7
	br label %.Lt_15B7
.Lt_15B7:

	; store LT_15B8 := 0
	store i64 0, i64* %LT_15B8.431

	; label .Lt_15C2
	br label %.Lt_15C2
.Lt_15C2:

	; conv LT_15B8 => vr11
	%vr12 = load i64, i64* %LT_15B8.431
	%vr11 = trunc i64 %vr12 to i8

	; store CARY := vr11
	store i8 %vr11, i8* %CARY.430

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.429

	; bop vr14 AND -2
	%vr17 = ptrtoint %CPU6510* %vr14 to i64
	%vr18 = inttoptr i64 %vr17 to i64*
	%vr19 = load i64, i64* %vr18
	%vr16 = and i64 %vr19, -2

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.429

	; conv vr22+8 => vr23
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = add i64 %vr24, 8
	%vr26 = inttoptr i64 %vr25 to i8*
	%vr27 = load i8, i8* %vr26
	%vr23 = sext i8 %vr27 to i64

	; bop vr23 AND 1
	%vr28 = and i64 %vr23, 1

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_15B9, label %.Lt_15C4
.Lt_15C4:

	; store LT_15BA := 1
	store i64 1, i64* %LT_15BA.432

	; goto .Lt_15C5
	br label %.Lt_15C5
.Lt_15C6:

	; label .Lt_15B9
	br label %.Lt_15B9
.Lt_15B9:

	; store LT_15BA := 0
	store i64 0, i64* %LT_15BA.432

	; label .Lt_15C5
	br label %.Lt_15C5
.Lt_15C5:
	%vr31 = load i64, i64* %LT_15BA.432
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr16 OR vr32
	%vr33 = or i64 %vr16, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.429

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.429

	; conv vr40+8 => vr41
	%vr42 = ptrtoint %CPU6510* %vr40 to i64
	%vr43 = add i64 %vr42, 8
	%vr44 = inttoptr i64 %vr43 to i8*
	%vr45 = load i8, i8* %vr44
	%vr41 = sext i8 %vr45 to i64

	; bop vr41 SHR 1
	%vr46 = ashr i64 %vr41, 1

	; conv vr46 => vr47
	%vr47 = trunc i64 %vr46 to i8

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.429

	; store vr49+8 := vr47
	%vr50 = ptrtoint %CPU6510* %vr49 to i64
	%vr51 = add i64 %vr50, 8
	%vr52 = inttoptr i64 %vr51 to i8*
	store i8 %vr47, i8* %vr52

	; conv CARY => vr53
	%vr54 = load i8, i8* %CARY.430
	%vr53 = sext i8 %vr54 to i64

	; branchbop vr53 == 0
	%vr55 = icmp eq i64 %vr53, 0
	br i1 %vr55, label %.Lt_15BC, label %.Lt_15C7
.Lt_15C7:

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.429

	; conv vr57+8 => vr58
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = add i64 %vr59, 8
	%vr61 = inttoptr i64 %vr60 to i8*
	%vr62 = load i8, i8* %vr61
	%vr58 = sext i8 %vr62 to i64

	; bop vr58 OR 128
	%vr63 = or i64 %vr58, 128

	; conv vr63 => vr64
	%vr64 = trunc i64 %vr63 to i8

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.429

	; store vr66+8 := vr64
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	store i8 %vr64, i8* %vr69

	; label .Lt_15BC
	br label %.Lt_15BC
.Lt_15BC:

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.429

	; bop vr71 AND -3
	%vr74 = ptrtoint %CPU6510* %vr71 to i64
	%vr75 = inttoptr i64 %vr74 to i64*
	%vr76 = load i64, i64* %vr75
	%vr73 = and i64 %vr76, -3

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.429

	; conv vr79+8 => vr80
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 8
	%vr83 = inttoptr i64 %vr82 to i8*
	%vr84 = load i8, i8* %vr83
	%vr80 = sext i8 %vr84 to i64

	; branchbop vr80 <> 0
	%vr85 = icmp ne i64 %vr80, 0
	br i1 %vr85, label %.Lt_15BD, label %.Lt_15C8
.Lt_15C8:

	; store LT_15BE := 1
	store i64 1, i64* %LT_15BE.433

	; goto .Lt_15C9
	br label %.Lt_15C9
.Lt_15CA:

	; label .Lt_15BD
	br label %.Lt_15BD
.Lt_15BD:

	; store LT_15BE := 0
	store i64 0, i64* %LT_15BE.433

	; label .Lt_15C9
	br label %.Lt_15C9
.Lt_15C9:
	%vr87 = load i64, i64* %LT_15BE.433
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 AND 1
	%vr88 = and i64 %vr86, 1

	; bop vr88 SHL 1
	%vr90 = bitcast i64 1 to i64
	%vr89 = shl i64 %vr88, %vr90

	; bop vr73 OR vr89
	%vr91 = or i64 %vr73, %vr89

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.429

	; store vr93 := vr91
	%vr95 = ptrtoint %CPU6510* %vr93 to i64
	%vr96 = inttoptr i64 %vr95 to i64*
	store i64 %vr91, i64* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.429

	; bop vr98 AND -129
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -129

	; deref CPU
	%vr106 = load %CPU6510*, %CPU6510** %CPU.429

	; conv vr106+8 => vr107
	%vr108 = ptrtoint %CPU6510* %vr106 to i64
	%vr109 = add i64 %vr108, 8
	%vr110 = inttoptr i64 %vr109 to i8*
	%vr111 = load i8, i8* %vr110
	%vr107 = sext i8 %vr111 to i64

	; branchbop vr107 >= 0
	%vr112 = icmp sge i64 %vr107, 0
	br i1 %vr112, label %.Lt_15BF, label %.Lt_15CB
.Lt_15CB:

	; store LT_15C0 := 1
	store i64 1, i64* %LT_15C0.434

	; goto .Lt_15CC
	br label %.Lt_15CC
.Lt_15CD:

	; label .Lt_15BF
	br label %.Lt_15BF
.Lt_15BF:

	; store LT_15C0 := 0
	store i64 0, i64* %LT_15C0.434

	; label .Lt_15CC
	br label %.Lt_15CC
.Lt_15CC:
	%vr114 = load i64, i64* %LT_15C0.434
	%vr113 = bitcast i64 %vr114 to i64

	; bop vr113 AND 1
	%vr115 = and i64 %vr113, 1

	; bop vr115 SHL 7
	%vr117 = bitcast i64 7 to i64
	%vr116 = shl i64 %vr115, %vr117

	; bop vr100 OR vr116
	%vr118 = or i64 %vr100, %vr116

	; deref CPU
	%vr120 = load %CPU6510*, %CPU6510** %CPU.429

	; store vr120 := vr118
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	store i64 %vr118, i64* %vr123

	; label .Lt_15B6
	br label %.Lt_15B6
.Lt_15B6:
	ret void
}

define void @INS_RTI( %CPU6510* %CPU.435$ ) nounwind
{

	; paramvar CPU
	%CPU.435 = alloca %CPU6510*
	store %CPU6510* %CPU.435$, %CPU6510** %CPU.435

	; label .Lt_15CE
	br label %.Lt_15CE
.Lt_15CE:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.435
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.435

	; store vr4 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = inttoptr i64 %vr5 to i8*
	store i8 %vr2, i8* %vr6

	; call PULL()
	; arg CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.435
	%vr7 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr8 )

	; conv vr7 => vr9
	%vr9 = trunc i64 %vr7 to i8

	; deref CPU
	%vr11 = load %CPU6510*, %CPU6510** %CPU.435

	; store vr11+12 := vr9
	%vr12 = ptrtoint %CPU6510* %vr11 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i8*
	store i8 %vr9, i8* %vr14

	; call PULL()
	; arg CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.435
	%vr15 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr16 )

	; conv vr15 => vr17
	%vr17 = trunc i64 %vr15 to i8

	; deref CPU
	%vr19 = load %CPU6510*, %CPU6510** %CPU.435

	; store vr19+13 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 13
	%vr22 = inttoptr i64 %vr21 to i8*
	store i8 %vr17, i8* %vr22

	; deref CPU
	%vr24 = load %CPU6510*, %CPU6510** %CPU.435

	; conv vr24+12 => vr25
	%vr26 = ptrtoint %CPU6510* %vr24 to i64
	%vr27 = add i64 %vr26, 12
	%vr28 = inttoptr i64 %vr27 to i16*
	%vr29 = load i16, i16* %vr28
	%vr25 = sext i16 %vr29 to i64

	; bop vr25 + 1
	%vr30 = add i64 %vr25, 1

	; conv vr30 => vr31
	%vr31 = trunc i64 %vr30 to i16

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.435

	; store vr33+12 := vr31
	%vr34 = ptrtoint %CPU6510* %vr33 to i64
	%vr35 = add i64 %vr34, 12
	%vr36 = inttoptr i64 %vr35 to i16*
	store i16 %vr31, i16* %vr36

	; label .Lt_15CF
	br label %.Lt_15CF
.Lt_15CF:
	ret void
}

define void @INS_RTS( %CPU6510* %CPU.436$ ) nounwind
{

	; paramvar CPU
	%CPU.436 = alloca %CPU6510*
	store %CPU6510* %CPU.436$, %CPU6510** %CPU.436

	; label .Lt_15D0
	br label %.Lt_15D0
.Lt_15D0:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.436
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.436

	; store vr4+12 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i8*
	store i8 %vr2, i8* %vr7

	; call PULL()
	; arg CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.436
	%vr8 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr9 )

	; conv vr8 => vr10
	%vr10 = trunc i64 %vr8 to i8

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.436

	; store vr12+13 := vr10
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 13
	%vr15 = inttoptr i64 %vr14 to i8*
	store i8 %vr10, i8* %vr15

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.436

	; conv vr17+12 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 12
	%vr21 = inttoptr i64 %vr20 to i16*
	%vr22 = load i16, i16* %vr21
	%vr18 = sext i16 %vr22 to i64

	; bop vr18 + 1
	%vr23 = add i64 %vr18, 1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; deref CPU
	%vr26 = load %CPU6510*, %CPU6510** %CPU.436

	; store vr26+12 := vr24
	%vr27 = ptrtoint %CPU6510* %vr26 to i64
	%vr28 = add i64 %vr27, 12
	%vr29 = inttoptr i64 %vr28 to i16*
	store i16 %vr24, i16* %vr29

	; label .Lt_15D1
	br label %.Lt_15D1
.Lt_15D1:
	ret void
}

define void @INS_SBC( %CPU6510* %CPU.437$ ) nounwind
{

	; paramvar CPU
	%CPU.437 = alloca %CPU6510*
	store %CPU6510* %CPU.437$, %CPU6510** %CPU.437

	; localvar V
	%V.438 = alloca %MULTI

	; localvar B
	%B.439 = alloca %MULTI

	; localvar LT_15D7
	%LT_15D7.440 = alloca i64

	; localvar LT_15D9
	%LT_15D9.441 = alloca i64

	; localvar LT_15DB
	%LT_15DB.442 = alloca i64

	; localvar LT_15DD
	%LT_15DD.443 = alloca i64

	; label .Lt_15D2
	br label %.Lt_15D2
.Lt_15D2:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.438 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof B

	; memclear B
	%vr3 = bitcast %MULTI* %B.439 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.437

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.437

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store B := vr13
	%vr18 = bitcast %MULTI* %B.439 to i8*
	store i8 %vr13, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.437

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; conv B => vr26
	%vr27 = bitcast %MULTI* %B.439 to i8*
	%vr28 = load i8, i8* %vr27
	%vr26 = sext i8 %vr28 to i64

	; bop vr21 - vr26
	%vr29 = sub i64 %vr21, %vr26

	; conv vr29 => vr30
	%vr30 = trunc i64 %vr29 to i16

	; store V := vr30
	%vr31 = bitcast %MULTI* %V.438 to i16*
	store i16 %vr30, i16* %vr31

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.437

	; bop vr33 AND 1
	%vr36 = ptrtoint %CPU6510* %vr33 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	%vr38 = load i64, i64* %vr37
	%vr35 = and i64 %vr38, 1

	; branchbop vr35 <> 0
	%vr40 = icmp ne i64 %vr35, 0
	br i1 %vr40, label %.Lt_15D5, label %.Lt_15DE
.Lt_15DE:

	; conv V => vr41
	%vr42 = bitcast %MULTI* %V.438 to i16*
	%vr43 = load i16, i16* %vr42
	%vr41 = sext i16 %vr43 to i64

	; bop vr41 + -1
	%vr44 = add i64 %vr41, -1

	; conv vr44 => vr45
	%vr45 = trunc i64 %vr44 to i16

	; store V := vr45
	%vr46 = bitcast %MULTI* %V.438 to i16*
	store i16 %vr45, i16* %vr46

	; label .Lt_15D5
	br label %.Lt_15D5
.Lt_15D5:

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.437

	; bop vr48 AND -65
	%vr51 = ptrtoint %CPU6510* %vr48 to i64
	%vr52 = inttoptr i64 %vr51 to i64*
	%vr53 = load i64, i64* %vr52
	%vr50 = and i64 %vr53, -65

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.437

	; conv vr56+8 => vr57
	%vr58 = ptrtoint %CPU6510* %vr56 to i64
	%vr59 = add i64 %vr58, 8
	%vr60 = inttoptr i64 %vr59 to i8*
	%vr61 = load i8, i8* %vr60
	%vr57 = sext i8 %vr61 to i64

	; conv B => vr62
	%vr63 = bitcast %MULTI* %B.439 to i8*
	%vr64 = load i8, i8* %vr63
	%vr62 = sext i8 %vr64 to i64

	; bop vr57 XOR vr62
	%vr65 = xor i64 %vr57, %vr62

	; bop vr65 AND 128
	%vr66 = and i64 %vr65, 128

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.437

	; conv vr68+8 => vr69
	%vr70 = ptrtoint %CPU6510* %vr68 to i64
	%vr71 = add i64 %vr70, 8
	%vr72 = inttoptr i64 %vr71 to i8*
	%vr73 = load i8, i8* %vr72
	%vr69 = sext i8 %vr73 to i64

	; conv V => vr74
	%vr75 = bitcast %MULTI* %V.438 to i8*
	%vr76 = load i8, i8* %vr75
	%vr74 = sext i8 %vr76 to i64

	; bop vr69 XOR vr74
	%vr77 = xor i64 %vr69, %vr74

	; bop vr77 AND 128
	%vr78 = and i64 %vr77, 128

	; bop vr66 AND vr78
	%vr79 = and i64 %vr66, %vr78

	; branchbop vr79 == 0
	%vr80 = icmp eq i64 %vr79, 0
	br i1 %vr80, label %.Lt_15D6, label %.Lt_15DF
.Lt_15DF:

	; store LT_15D7 := 1
	store i64 1, i64* %LT_15D7.440

	; goto .Lt_15E0
	br label %.Lt_15E0
.Lt_15E1:

	; label .Lt_15D6
	br label %.Lt_15D6
.Lt_15D6:

	; store LT_15D7 := 0
	store i64 0, i64* %LT_15D7.440

	; label .Lt_15E0
	br label %.Lt_15E0
.Lt_15E0:
	%vr82 = load i64, i64* %LT_15D7.440
	%vr81 = bitcast i64 %vr82 to i64

	; bop vr81 AND 1
	%vr83 = and i64 %vr81, 1

	; bop vr83 SHL 6
	%vr85 = bitcast i64 6 to i64
	%vr84 = shl i64 %vr83, %vr85

	; bop vr50 OR vr84
	%vr86 = or i64 %vr50, %vr84

	; deref CPU
	%vr88 = load %CPU6510*, %CPU6510** %CPU.437

	; store vr88 := vr86
	%vr90 = ptrtoint %CPU6510* %vr88 to i64
	%vr91 = inttoptr i64 %vr90 to i64*
	store i64 %vr86, i64* %vr91

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.437

	; store vr93+8 := V
	%vr94 = bitcast %MULTI* %V.438 to i8*
	%vr95 = load i8, i8* %vr94
	%vr96 = ptrtoint %CPU6510* %vr93 to i64
	%vr97 = add i64 %vr96, 8
	%vr98 = inttoptr i64 %vr97 to i8*
	store i8 %vr95, i8* %vr98

	; deref CPU
	%vr100 = load %CPU6510*, %CPU6510** %CPU.437

	; bop vr100 AND -2
	%vr103 = ptrtoint %CPU6510* %vr100 to i64
	%vr104 = inttoptr i64 %vr103 to i64*
	%vr105 = load i64, i64* %vr104
	%vr102 = and i64 %vr105, -2

	; conv V => vr107
	%vr108 = bitcast %MULTI* %V.438 to i16*
	%vr109 = load i16, i16* %vr108
	%vr107 = sext i16 %vr109 to i64

	; branchbop vr107 > 255
	%vr110 = icmp sgt i64 %vr107, 255
	br i1 %vr110, label %.Lt_15D8, label %.Lt_15E2
.Lt_15E2:

	; store LT_15D9 := 1
	store i64 1, i64* %LT_15D9.441

	; goto .Lt_15E3
	br label %.Lt_15E3
.Lt_15E4:

	; label .Lt_15D8
	br label %.Lt_15D8
.Lt_15D8:

	; store LT_15D9 := 0
	store i64 0, i64* %LT_15D9.441

	; label .Lt_15E3
	br label %.Lt_15E3
.Lt_15E3:
	%vr112 = load i64, i64* %LT_15D9.441
	%vr111 = bitcast i64 %vr112 to i64

	; bop vr111 AND 1
	%vr113 = and i64 %vr111, 1

	; bop vr102 OR vr113
	%vr114 = or i64 %vr102, %vr113

	; deref CPU
	%vr116 = load %CPU6510*, %CPU6510** %CPU.437

	; store vr116 := vr114
	%vr118 = ptrtoint %CPU6510* %vr116 to i64
	%vr119 = inttoptr i64 %vr118 to i64*
	store i64 %vr114, i64* %vr119

	; deref CPU
	%vr121 = load %CPU6510*, %CPU6510** %CPU.437

	; bop vr121 AND -3
	%vr124 = ptrtoint %CPU6510* %vr121 to i64
	%vr125 = inttoptr i64 %vr124 to i64*
	%vr126 = load i64, i64* %vr125
	%vr123 = and i64 %vr126, -3

	; conv V => vr128
	%vr129 = bitcast %MULTI* %V.438 to i8*
	%vr130 = load i8, i8* %vr129
	%vr128 = sext i8 %vr130 to i64

	; branchbop vr128 <> 0
	%vr131 = icmp ne i64 %vr128, 0
	br i1 %vr131, label %.Lt_15DA, label %.Lt_15E5
.Lt_15E5:

	; store LT_15DB := 1
	store i64 1, i64* %LT_15DB.442

	; goto .Lt_15E6
	br label %.Lt_15E6
.Lt_15E7:

	; label .Lt_15DA
	br label %.Lt_15DA
.Lt_15DA:

	; store LT_15DB := 0
	store i64 0, i64* %LT_15DB.442

	; label .Lt_15E6
	br label %.Lt_15E6
.Lt_15E6:
	%vr133 = load i64, i64* %LT_15DB.442
	%vr132 = bitcast i64 %vr133 to i64

	; bop vr132 AND 1
	%vr134 = and i64 %vr132, 1

	; bop vr134 SHL 1
	%vr136 = bitcast i64 1 to i64
	%vr135 = shl i64 %vr134, %vr136

	; bop vr123 OR vr135
	%vr137 = or i64 %vr123, %vr135

	; deref CPU
	%vr139 = load %CPU6510*, %CPU6510** %CPU.437

	; store vr139 := vr137
	%vr141 = ptrtoint %CPU6510* %vr139 to i64
	%vr142 = inttoptr i64 %vr141 to i64*
	store i64 %vr137, i64* %vr142

	; deref CPU
	%vr144 = load %CPU6510*, %CPU6510** %CPU.437

	; bop vr144 AND -129
	%vr147 = ptrtoint %CPU6510* %vr144 to i64
	%vr148 = inttoptr i64 %vr147 to i64*
	%vr149 = load i64, i64* %vr148
	%vr146 = and i64 %vr149, -129

	; conv V => vr151
	%vr152 = bitcast %MULTI* %V.438 to i8*
	%vr153 = load i8, i8* %vr152
	%vr151 = sext i8 %vr153 to i64

	; branchbop vr151 >= 0
	%vr154 = icmp sge i64 %vr151, 0
	br i1 %vr154, label %.Lt_15DC, label %.Lt_15E8
.Lt_15E8:

	; store LT_15DD := 1
	store i64 1, i64* %LT_15DD.443

	; goto .Lt_15E9
	br label %.Lt_15E9
.Lt_15EA:

	; label .Lt_15DC
	br label %.Lt_15DC
.Lt_15DC:

	; store LT_15DD := 0
	store i64 0, i64* %LT_15DD.443

	; label .Lt_15E9
	br label %.Lt_15E9
.Lt_15E9:
	%vr156 = load i64, i64* %LT_15DD.443
	%vr155 = bitcast i64 %vr156 to i64

	; bop vr155 AND 1
	%vr157 = and i64 %vr155, 1

	; bop vr157 SHL 7
	%vr159 = bitcast i64 7 to i64
	%vr158 = shl i64 %vr157, %vr159

	; bop vr146 OR vr158
	%vr160 = or i64 %vr146, %vr158

	; deref CPU
	%vr162 = load %CPU6510*, %CPU6510** %CPU.437

	; store vr162 := vr160
	%vr164 = ptrtoint %CPU6510* %vr162 to i64
	%vr165 = inttoptr i64 %vr164 to i64*
	store i64 %vr160, i64* %vr165

	; label .Lt_15D3
	br label %.Lt_15D3
.Lt_15D3:
	ret void
}

define void @INS_SEC( %CPU6510* %CPU.444$ ) nounwind
{

	; paramvar CPU
	%CPU.444 = alloca %CPU6510*
	store %CPU6510* %CPU.444$, %CPU6510** %CPU.444

	; label .Lt_15EB
	br label %.Lt_15EB
.Lt_15EB:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.444

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; bop vr3 OR 1
	%vr8 = or i64 %vr3, 1

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.444

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_15EC
	br label %.Lt_15EC
.Lt_15EC:
	ret void
}

define void @INS_SED( %CPU6510* %CPU.445$ ) nounwind
{

	; paramvar CPU
	%CPU.445 = alloca %CPU6510*
	store %CPU6510* %CPU.445$, %CPU6510** %CPU.445

	; label .Lt_15ED
	br label %.Lt_15ED
.Lt_15ED:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.445

	; bop vr1 AND -9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -9

	; bop vr3 OR 8
	%vr8 = or i64 %vr3, 8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.445

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_15EE
	br label %.Lt_15EE
.Lt_15EE:
	ret void
}

define void @INS_SEI( %CPU6510* %CPU.446$ ) nounwind
{

	; paramvar CPU
	%CPU.446 = alloca %CPU6510*
	store %CPU6510* %CPU.446$, %CPU6510** %CPU.446

	; label .Lt_15EF
	br label %.Lt_15EF
.Lt_15EF:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.446

	; bop vr1 AND -5
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -5

	; bop vr3 OR 4
	%vr8 = or i64 %vr3, 4

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.446

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_15F0
	br label %.Lt_15F0
.Lt_15F0:
	ret void
}

define void @INS_STA( %CPU6510* %CPU.447$ ) nounwind
{

	; paramvar CPU
	%CPU.447 = alloca %CPU6510*
	store %CPU6510* %CPU.447$, %CPU6510** %CPU.447

	; label .Lt_15F1
	br label %.Lt_15F1
.Lt_15F1:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.447

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.447

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.447

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_15F2
	br label %.Lt_15F2
.Lt_15F2:
	ret void
}

define void @INS_STX( %CPU6510* %CPU.448$ ) nounwind
{

	; paramvar CPU
	%CPU.448 = alloca %CPU6510*
	store %CPU6510* %CPU.448$, %CPU6510** %CPU.448

	; label .Lt_15F3
	br label %.Lt_15F3
.Lt_15F3:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.448

	; conv vr1+9 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 9
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.448

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.448

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_15F4
	br label %.Lt_15F4
.Lt_15F4:
	ret void
}

define void @INS_STY( %CPU6510* %CPU.449$ ) nounwind
{

	; paramvar CPU
	%CPU.449 = alloca %CPU6510*
	store %CPU6510* %CPU.449$, %CPU6510** %CPU.449

	; label .Lt_15F5
	br label %.Lt_15F5
.Lt_15F5:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.449

	; conv vr1+10 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 10
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.449

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.449

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_15F6
	br label %.Lt_15F6
.Lt_15F6:
	ret void
}

define void @INS_TAX( %CPU6510* %CPU.450$ ) nounwind
{

	; paramvar CPU
	%CPU.450 = alloca %CPU6510*
	store %CPU6510* %CPU.450$, %CPU6510** %CPU.450

	; localvar LT_15FA
	%LT_15FA.451 = alloca i64

	; localvar LT_15FC
	%LT_15FC.452 = alloca i64

	; label .Lt_15F7
	br label %.Lt_15F7
.Lt_15F7:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.450

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr3+9 := vr1+8
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 8
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 9
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.450

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.450

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_15F9, label %.Lt_15FD
.Lt_15FD:

	; store LT_15FA := 1
	store i64 1, i64* %LT_15FA.451

	; goto .Lt_15FE
	br label %.Lt_15FE
.Lt_15FF:

	; label .Lt_15F9
	br label %.Lt_15F9
.Lt_15F9:

	; store LT_15FA := 0
	store i64 0, i64* %LT_15FA.451

	; label .Lt_15FE
	br label %.Lt_15FE
.Lt_15FE:
	%vr28 = load i64, i64* %LT_15FA.451
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.450

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.450

	; conv vr47+9 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 9
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_15FB, label %.Lt_1600
.Lt_1600:

	; store LT_15FC := 1
	store i64 1, i64* %LT_15FC.452

	; goto .Lt_1601
	br label %.Lt_1601
.Lt_1602:

	; label .Lt_15FB
	br label %.Lt_15FB
.Lt_15FB:

	; store LT_15FC := 0
	store i64 0, i64* %LT_15FC.452

	; label .Lt_1601
	br label %.Lt_1601
.Lt_1601:
	%vr55 = load i64, i64* %LT_15FC.452
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_15F8
	br label %.Lt_15F8
.Lt_15F8:
	ret void
}

define void @INS_TAY( %CPU6510* %CPU.453$ ) nounwind
{

	; paramvar CPU
	%CPU.453 = alloca %CPU6510*
	store %CPU6510* %CPU.453$, %CPU6510** %CPU.453

	; localvar LT_1606
	%LT_1606.454 = alloca i64

	; localvar LT_1608
	%LT_1608.455 = alloca i64

	; label .Lt_1603
	br label %.Lt_1603
.Lt_1603:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.453

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr3+10 := vr1+8
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 8
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 10
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.453

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.453

	; conv vr20+10 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 10
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_1605, label %.Lt_1609
.Lt_1609:

	; store LT_1606 := 1
	store i64 1, i64* %LT_1606.454

	; goto .Lt_160A
	br label %.Lt_160A
.Lt_160B:

	; label .Lt_1605
	br label %.Lt_1605
.Lt_1605:

	; store LT_1606 := 0
	store i64 0, i64* %LT_1606.454

	; label .Lt_160A
	br label %.Lt_160A
.Lt_160A:
	%vr28 = load i64, i64* %LT_1606.454
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.453

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.453

	; conv vr47+10 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 10
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_1607, label %.Lt_160C
.Lt_160C:

	; store LT_1608 := 1
	store i64 1, i64* %LT_1608.455

	; goto .Lt_160D
	br label %.Lt_160D
.Lt_160E:

	; label .Lt_1607
	br label %.Lt_1607
.Lt_1607:

	; store LT_1608 := 0
	store i64 0, i64* %LT_1608.455

	; label .Lt_160D
	br label %.Lt_160D
.Lt_160D:
	%vr55 = load i64, i64* %LT_1608.455
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_1604
	br label %.Lt_1604
.Lt_1604:
	ret void
}

define void @INS_TSX( %CPU6510* %CPU.456$ ) nounwind
{

	; paramvar CPU
	%CPU.456 = alloca %CPU6510*
	store %CPU6510* %CPU.456$, %CPU6510** %CPU.456

	; localvar LT_1612
	%LT_1612.457 = alloca i64

	; localvar LT_1614
	%LT_1614.458 = alloca i64

	; label .Lt_160F
	br label %.Lt_160F
.Lt_160F:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.456

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr3+9 := vr1+14
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 14
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 9
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.456

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.456

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_1611, label %.Lt_1615
.Lt_1615:

	; store LT_1612 := 1
	store i64 1, i64* %LT_1612.457

	; goto .Lt_1616
	br label %.Lt_1616
.Lt_1617:

	; label .Lt_1611
	br label %.Lt_1611
.Lt_1611:

	; store LT_1612 := 0
	store i64 0, i64* %LT_1612.457

	; label .Lt_1616
	br label %.Lt_1616
.Lt_1616:
	%vr28 = load i64, i64* %LT_1612.457
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.456

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.456

	; conv vr47+9 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 9
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_1613, label %.Lt_1618
.Lt_1618:

	; store LT_1614 := 1
	store i64 1, i64* %LT_1614.458

	; goto .Lt_1619
	br label %.Lt_1619
.Lt_161A:

	; label .Lt_1613
	br label %.Lt_1613
.Lt_1613:

	; store LT_1614 := 0
	store i64 0, i64* %LT_1614.458

	; label .Lt_1619
	br label %.Lt_1619
.Lt_1619:
	%vr55 = load i64, i64* %LT_1614.458
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_1610
	br label %.Lt_1610
.Lt_1610:
	ret void
}

define void @INS_TXA( %CPU6510* %CPU.459$ ) nounwind
{

	; paramvar CPU
	%CPU.459 = alloca %CPU6510*
	store %CPU6510* %CPU.459$, %CPU6510** %CPU.459

	; localvar LT_161E
	%LT_161E.460 = alloca i64

	; localvar LT_1620
	%LT_1620.461 = alloca i64

	; label .Lt_161B
	br label %.Lt_161B
.Lt_161B:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.459

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.459

	; store vr3+8 := vr1+9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 8
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.459

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.459

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_161D, label %.Lt_1621
.Lt_1621:

	; store LT_161E := 1
	store i64 1, i64* %LT_161E.460

	; goto .Lt_1622
	br label %.Lt_1622
.Lt_1623:

	; label .Lt_161D
	br label %.Lt_161D
.Lt_161D:

	; store LT_161E := 0
	store i64 0, i64* %LT_161E.460

	; label .Lt_1622
	br label %.Lt_1622
.Lt_1622:
	%vr28 = load i64, i64* %LT_161E.460
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.459

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.459

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.459

	; conv vr47+8 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 8
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_161F, label %.Lt_1624
.Lt_1624:

	; store LT_1620 := 1
	store i64 1, i64* %LT_1620.461

	; goto .Lt_1625
	br label %.Lt_1625
.Lt_1626:

	; label .Lt_161F
	br label %.Lt_161F
.Lt_161F:

	; store LT_1620 := 0
	store i64 0, i64* %LT_1620.461

	; label .Lt_1625
	br label %.Lt_1625
.Lt_1625:
	%vr55 = load i64, i64* %LT_1620.461
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.459

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_161C
	br label %.Lt_161C
.Lt_161C:
	ret void
}

define void @INS_TXS( %CPU6510* %CPU.462$ ) nounwind
{

	; paramvar CPU
	%CPU.462 = alloca %CPU6510*
	store %CPU6510* %CPU.462$, %CPU6510** %CPU.462

	; label .Lt_1627
	br label %.Lt_1627
.Lt_1627:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.462

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.462

	; store vr3+14 := vr1+9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 14
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; label .Lt_1628
	br label %.Lt_1628
.Lt_1628:
	ret void
}

define void @INS_TYA( %CPU6510* %CPU.463$ ) nounwind
{

	; paramvar CPU
	%CPU.463 = alloca %CPU6510*
	store %CPU6510* %CPU.463$, %CPU6510** %CPU.463

	; localvar LT_162C
	%LT_162C.464 = alloca i64

	; localvar LT_162E
	%LT_162E.465 = alloca i64

	; label .Lt_1629
	br label %.Lt_1629
.Lt_1629:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.463

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.463

	; store vr3+8 := vr1+10
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 10
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 8
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.463

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.463

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_162B, label %.Lt_162F
.Lt_162F:

	; store LT_162C := 1
	store i64 1, i64* %LT_162C.464

	; goto .Lt_1630
	br label %.Lt_1630
.Lt_1631:

	; label .Lt_162B
	br label %.Lt_162B
.Lt_162B:

	; store LT_162C := 0
	store i64 0, i64* %LT_162C.464

	; label .Lt_1630
	br label %.Lt_1630
.Lt_1630:
	%vr28 = load i64, i64* %LT_162C.464
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.463

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.463

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.463

	; conv vr47+8 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 8
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_162D, label %.Lt_1632
.Lt_1632:

	; store LT_162E := 1
	store i64 1, i64* %LT_162E.465

	; goto .Lt_1633
	br label %.Lt_1633
.Lt_1634:

	; label .Lt_162D
	br label %.Lt_162D
.Lt_162D:

	; store LT_162E := 0
	store i64 0, i64* %LT_162E.465

	; label .Lt_1633
	br label %.Lt_1633
.Lt_1633:
	%vr55 = load i64, i64* %LT_162E.465
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.463

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_162A
	br label %.Lt_162A
.Lt_162A:
	ret void
}

define void @INS_R32( %CPU6510* %CPU.466$ ) nounwind
{

	; paramvar CPU
	%CPU.466 = alloca %CPU6510*
	store %CPU6510* %CPU.466$, %CPU6510** %CPU.466

	; localvar V
	%V.467 = alloca %MULTI

	; label .Lt_1635
	br label %.Lt_1635
.Lt_1635:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.467 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.466

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i32*
	%vr8 = load i32, i32* %vr7
	%vr4 = zext i32 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.466

	; call PEEK64()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = trunc i64 %vr11 to i8

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.466

	; store vr18+8 := vr16
	%vr19 = ptrtoint %CPU6510* %vr18 to i64
	%vr20 = add i64 %vr19, 8
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr16, i8* %vr21

	; label .Lt_1636
	br label %.Lt_1636
.Lt_1636:
	ret void
}

define void @INS_W32( %CPU6510* %CPU.468$ ) nounwind
{

	; paramvar CPU
	%CPU.468 = alloca %CPU6510*
	store %CPU6510* %CPU.468$, %CPU6510** %CPU.468

	; label .Lt_1637
	br label %.Lt_1637
.Lt_1637:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.468

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.468

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i32*
	%vr13 = load i32, i32* %vr12
	%vr9 = zext i32 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.468

	; call POKE64()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_1638
	br label %.Lt_1638
.Lt_1638:
	ret void
}

define void @INS_R64( %CPU6510* %CPU.469$ ) nounwind
{

	; paramvar CPU
	%CPU.469 = alloca %CPU6510*
	store %CPU6510* %CPU.469$, %CPU6510** %CPU.469

	; localvar V
	%V.470 = alloca %MULTI

	; label .Lt_1639
	br label %.Lt_1639
.Lt_1639:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.470 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.469

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.469

	; call PEEK64()
	; arg vr5+16
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 16
	%vr9 = inttoptr i64 %vr8 to %MEMORY_T**
	%vr10 = load %MEMORY_T*, %MEMORY_T** %vr9
	; arg vr3+64
	%vr11 = ptrtoint %CPU6510* %vr3 to i64
	%vr12 = add i64 %vr11, 64
	%vr13 = inttoptr i64 %vr12 to i64*
	%vr14 = load i64, i64* %vr13
	%vr6 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr10, i64 %vr14 )

	; conv vr6 => vr15
	%vr15 = trunc i64 %vr6 to i8

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr17+8 := vr15
	%vr18 = ptrtoint %CPU6510* %vr17 to i64
	%vr19 = add i64 %vr18, 8
	%vr20 = inttoptr i64 %vr19 to i8*
	store i8 %vr15, i8* %vr20

	; label .Lt_163A
	br label %.Lt_163A
.Lt_163A:
	ret void
}

define void @INS_W64( %CPU6510* %CPU.471$ ) nounwind
{

	; paramvar CPU
	%CPU.471 = alloca %CPU6510*
	store %CPU6510* %CPU.471$, %CPU6510** %CPU.471

	; label .Lt_163B
	br label %.Lt_163B
.Lt_163B:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.471

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.471

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.471

	; call POKE64()
	; arg vr10+16
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 16
	%vr13 = inttoptr i64 %vr12 to %MEMORY_T**
	%vr14 = load %MEMORY_T*, %MEMORY_T** %vr13
	; arg vr8+64
	%vr15 = ptrtoint %CPU6510* %vr8 to i64
	%vr16 = add i64 %vr15, 64
	%vr17 = inttoptr i64 %vr16 to i64*
	%vr18 = load i64, i64* %vr17
	; arg vr2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr14, i64 %vr18, i64 %vr2 )

	; label .Lt_163C
	br label %.Lt_163C
.Lt_163C:
	ret void
}

define i64 @INTERRUPTSERVICE( %CPU6510* %CPU.472$ ) nounwind
{

	; paramvar CPU
	%CPU.472 = alloca %CPU6510*
	store %CPU6510* %CPU.472$, %CPU6510** %CPU.472

	; localvar fb$result
	%fb$result.473 = alloca i64

	; localvar KEY
	%KEY.474 = alloca i64

	; localvar IRQTICKS
	%IRQTICKS.475 = alloca i64

	; localvar NCHARS
	%NCHARS.476 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.473 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_1AA8
	br label %.Lt_1AA8
.Lt_1AA8:

	; addrof KEY

	; memclear KEY
	%vr3 = bitcast i64* %KEY.474 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; addrof IRQTICKS

	; memclear IRQTICKS
	%vr5 = bitcast i64* %IRQTICKS.475 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr7 = load %CPU6510*, %CPU6510** %CPU.472

	; bop vr7 SHR 2
	%vr10 = ptrtoint %CPU6510* %vr7 to i64
	%vr11 = inttoptr i64 %vr10 to i64*
	%vr12 = load i64, i64* %vr11
	%vr14 = bitcast i64 2 to i64
	%vr9 = ashr i64 %vr12, %vr14

	; bop vr9 AND 1
	%vr15 = and i64 %vr9, 1

	; branchbop vr15 <> 1
	%vr16 = icmp ne i64 %vr15, 1
	br i1 %vr16, label %.Lt_1AAB, label %.Lt_1AE5
.Lt_1AE5:

	; store fb$result := 0
	store i64 0, i64* %fb$result.473

	; goto .Lt_1AA9
	br label %.Lt_1AA9
.Lt_1AE6:

	; label .Lt_1AAB
	br label %.Lt_1AAB
.Lt_1AAB:

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.472

	; call READUBYTE()
	; arg vr18+16
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 16
	%vr22 = inttoptr i64 %vr21 to %MEMORY_T**
	%vr23 = load %MEMORY_T*, %MEMORY_T** %vr22
	; arg 198
	%vr19 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr23, i64 198 )

	; conv vr19 => vr24
	%vr24 = sext i8 %vr19 to i64

	; store NCHARS := vr24
	store i64 %vr24, i64* %NCHARS.476

	; branchbop NCHARS >= 10
	%vr26 = load i64, i64* %NCHARS.476
	%vr25 = icmp sge i64 %vr26, 10
	br i1 %vr25, label %.Lt_1AAD, label %.Lt_1AE7
.Lt_1AE7:

	; localvar STRKEY
	%STRKEY.477 = alloca %FBSTRING

	; call fb_Inkey()
	%vr27 = call %FBSTRING* @fb_Inkey(  )

	; addrof STRKEY
	%vr29 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_StrInit()
	; arg vr29
	; arg -1
	; arg vr27
	%vr32 = bitcast %FBSTRING* %vr27 to i8*
	; arg -1
	; arg 0
	%vr30 = call %FBSTRING* @fb_StrInit( i8* %vr29, i64 -1, i8* %vr32, i64 -1, i32 0 )

	; addrof STRKEY
	%vr36 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_StrLen()
	; arg vr36
	; arg -1
	%vr37 = call i64 @fb_StrLen( i8* %vr36, i64 -1 )

	; store KEY := vr37
	store i64 %vr37, i64* %KEY.474

	; branchbop KEY == 0
	%vr40 = load i64, i64* %KEY.474
	%vr39 = icmp eq i64 %vr40, 0
	br i1 %vr39, label %.Lt_1AAF, label %.Lt_1AE8
.Lt_1AE8:

	; bop STRKEY + KEY
	%vr42 = bitcast %FBSTRING* %STRKEY.477 to i8**
	%vr43 = load i8*, i8** %vr42
	%vr44 = load i64, i64* %KEY.474
	%vr45 = bitcast i8* %vr43 to i8*
	%vr46 = inttoptr i64 %vr44 to i8*
	%vr41 = add i8* %vr45, %vr46

	; conv vr41+-1 => vr47
	%vr48 = ptrtoint i8* %vr41 to i64
	%vr49 = add i64 %vr48, -1
	%vr50 = inttoptr i64 %vr49 to i8*
	%vr51 = load i8, i8* %vr50
	%vr47 = sext i8 %vr51 to i64

	; bop KEY SHL 8
	%vr53 = load i64, i64* %KEY.474
	%vr52 = shl i64 %vr53, 8

	; bop vr47 + vr52
	%vr54 = add i64 %vr47, %vr52

	; bop vr54 + -256
	%vr55 = add i64 %vr54, -256

	; store KEY := vr55
	store i64 %vr55, i64* %KEY.474

	; branchbop KEY <> 27
	%vr57 = load i64, i64* %KEY.474
	%vr56 = icmp ne i64 %vr57, 27
	br i1 %vr56, label %.Lt_1AB1, label %.Lt_1AE9
.Lt_1AE9:

	; label .Lt_1AB2
	br label %.Lt_1AB2
.Lt_1AB2:

	; call fb_End()
	; arg 0
	call void @fb_End( i32 0 )

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AEA:

	; label .Lt_1AB1
	br label %.Lt_1AB1
.Lt_1AB1:

	; branchbop KEY < 65
	%vr60 = load i64, i64* %KEY.474
	%vr59 = icmp slt i64 %vr60, 65
	br i1 %vr59, label %.Lt_1AB3, label %.Lt_1AEB
.Lt_1AEB:

	; branchbop KEY > 90
	%vr62 = load i64, i64* %KEY.474
	%vr61 = icmp sgt i64 %vr62, 90
	br i1 %vr61, label %.Lt_1AB3, label %.Lt_1AEC
.Lt_1AEC:

	; label .Lt_1AB4
	br label %.Lt_1AB4
.Lt_1AB4:

	; bop KEY + 32
	%vr64 = load i64, i64* %KEY.474
	%vr63 = add i64 %vr64, 32

	; store KEY := vr63
	store i64 %vr63, i64* %KEY.474

	; call fb_CHR()
	; arg 1
	; arg KEY
	%vr67 = load i64, i64* %KEY.474
	%vr68 = inttoptr i64 %vr67 to i8*
	%vr65 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr68 )
	%vr69 = bitcast %FBSTRING* @S.478 to i8*

	; call fb_StrConcatAssign()
	; arg vr69
	; arg -1
	; arg vr65
	%vr72 = bitcast %FBSTRING* %vr65 to i8*
	; arg -1
	; arg 0
	%vr70 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr69, i64 -1, i8* %vr72, i64 -1, i32 0 )

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AED:

	; label .Lt_1AB3
	br label %.Lt_1AB3
.Lt_1AB3:

	; branchbop KEY < 97
	%vr76 = load i64, i64* %KEY.474
	%vr75 = icmp slt i64 %vr76, 97
	br i1 %vr75, label %.Lt_1AB5, label %.Lt_1AEE
.Lt_1AEE:

	; branchbop KEY > 122
	%vr78 = load i64, i64* %KEY.474
	%vr77 = icmp sgt i64 %vr78, 122
	br i1 %vr77, label %.Lt_1AB5, label %.Lt_1AEF
.Lt_1AEF:

	; label .Lt_1AB6
	br label %.Lt_1AB6
.Lt_1AB6:

	; bop KEY + -32
	%vr80 = load i64, i64* %KEY.474
	%vr79 = add i64 %vr80, -32

	; store KEY := vr79
	store i64 %vr79, i64* %KEY.474

	; call fb_CHR()
	; arg 1
	; arg KEY
	%vr83 = load i64, i64* %KEY.474
	%vr84 = inttoptr i64 %vr83 to i8*
	%vr81 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr84 )
	%vr85 = bitcast %FBSTRING* @S.478 to i8*

	; call fb_StrConcatAssign()
	; arg vr85
	; arg -1
	; arg vr81
	%vr88 = bitcast %FBSTRING* %vr81 to i8*
	; arg -1
	; arg 0
	%vr86 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr85, i64 -1, i8* %vr88, i64 -1, i32 0 )

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AF0:

	; label .Lt_1AB5
	br label %.Lt_1AB5
.Lt_1AB5:

	; branchbop KEY <> 316
	%vr92 = load i64, i64* %KEY.474
	%vr91 = icmp ne i64 %vr92, 316
	br i1 %vr91, label %.Lt_1AB7, label %.Lt_1AF1
.Lt_1AF1:

	; label .Lt_1AB8
	br label %.Lt_1AB8
.Lt_1AB8:

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr93 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr99 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr99
	%vr102 = bitcast %FBSTRING* %vr99 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr102, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr104 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_1AB9
	%vr111 = bitcast i8* bitcast ([15 x i8]* @Lt_1AB9 to i8*) to i8*
	; arg 14
	%vr110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr111, i64 14 )

	; call fb_ConsoleInput()
	; arg vr110
	%vr114 = bitcast %FBSTRING* %vr110 to %FBSTRING*
	; arg -1
	; arg -1
	%vr113 = call i32 @fb_ConsoleInput( %FBSTRING* %vr114, i32 -1, i32 -1 )

	; addrof STRKEY
	%vr118 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_InputString()
	; arg vr118
	; arg -1
	; arg 0
	%vr119 = call i32 @fb_InputString( i8* %vr118, i64 -1, i32 0 )

	; addrof STRKEY
	%vr123 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_StrLen()
	; arg vr123
	; arg -1
	%vr124 = call i64 @fb_StrLen( i8* %vr123, i64 -1 )

	; branchbop vr124 == 0
	%vr126 = icmp eq i64 %vr124, 0
	br i1 %vr126, label %.Lt_1ABB, label %.Lt_1AF2
.Lt_1AF2:

	; call fb_FileFree()
	%vr127 = call i32 @fb_FileFree(  )

	; conv vr127 => vr128
	%vr128 = sext i32 %vr127 to i64

	; store KEY := vr128
	store i64 %vr128, i64* %KEY.474

	; conv KEY => vr129
	%vr130 = load i64, i64* %KEY.474
	%vr129 = trunc i64 %vr130 to i32

	; addrof STRKEY
	%vr132 = bitcast %FBSTRING* %STRKEY.477 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr132
	; arg 0
	; arg 2
	; arg 0
	; arg vr129
	; arg 0
	%vr133 = call i32 @fb_FileOpen( %FBSTRING* %vr132, i32 0, i32 2, i32 0, i32 %vr129, i32 0 )

	; conv vr133 => vr138
	%vr138 = sext i32 %vr133 to i64

	; branchbop vr138 <> 0
	%vr139 = icmp ne i64 %vr138, 0
	br i1 %vr139, label %.Lt_1ABD, label %.Lt_1AF3
.Lt_1AF3:

	; localvar U8
	%U8.479 = alloca i8

	; localvar NBYTES
	%NBYTES.480 = alloca i64

	; addrof U8

	; memclear U8
	%vr141 = bitcast i8* %U8.479 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr141, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr143 = load %CPU6510*, %CPU6510** %CPU.472

	; call READUSHORT()
	; arg vr143+16
	%vr145 = ptrtoint %CPU6510* %vr143 to i64
	%vr146 = add i64 %vr145, 16
	%vr147 = inttoptr i64 %vr146 to %MEMORY_T**
	%vr148 = load %MEMORY_T*, %MEMORY_T** %vr147
	; arg 45
	%vr144 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr148, i64 45 )

	; conv vr144 => vr149
	%vr149 = sext i16 %vr144 to i64

	; store NBYTES := vr149
	store i64 %vr149, i64* %NBYTES.480

	; bop NBYTES + -2048
	%vr151 = load i64, i64* %NBYTES.480
	%vr150 = add i64 %vr151, -2048

	; store NBYTES := vr150
	store i64 %vr150, i64* %NBYTES.480

	; addrof NBYTES
	%vr153 = bitcast i64* %NBYTES.480 to i8*

	; conv KEY => vr154
	%vr155 = load i64, i64* %KEY.474
	%vr154 = trunc i64 %vr155 to i32

	; call fb_FilePutLarge()
	; arg vr154
	; arg 0
	; arg vr153
	; arg 8
	%vr156 = call i32 @fb_FilePutLarge( i32 %vr154, i64 0, i8* %vr153, i64 8 )

	; localvar I
	%I.481 = alloca i64

	; localvar LT_1ABE
	%LT_1ABE.482 = alloca i64

	; store I := 0
	store i64 0, i64* %I.481

	; bop NBYTES + -1
	%vr160 = load i64, i64* %NBYTES.480
	%vr159 = add i64 %vr160, -1

	; store LT_1ABE := vr159
	store i64 %vr159, i64* %LT_1ABE.482

	; goto .Lt_1ABF
	br label %.Lt_1ABF
.Lt_1AF4:

	; label .Lt_1AC2
	br label %.Lt_1AC2
.Lt_1AC2:

	; bop I + 2048
	%vr162 = load i64, i64* %I.481
	%vr161 = add i64 %vr162, 2048
	%vr163 = bitcast i64 %vr161 to i64

	; deref CPU
	%vr165 = load %CPU6510*, %CPU6510** %CPU.472

	; call READUBYTE()
	; arg vr165+16
	%vr167 = ptrtoint %CPU6510* %vr165 to i64
	%vr168 = add i64 %vr167, 16
	%vr169 = inttoptr i64 %vr168 to %MEMORY_T**
	%vr170 = load %MEMORY_T*, %MEMORY_T** %vr169
	; arg vr163
	%vr166 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr170, i64 %vr163 )

	; store U8 := vr166
	store i8 %vr166, i8* %U8.479

	; addrof U8
	%vr172 = bitcast i8* %U8.479 to i8*

	; conv KEY => vr173
	%vr174 = load i64, i64* %KEY.474
	%vr173 = trunc i64 %vr174 to i32

	; call fb_FilePutLarge()
	; arg vr173
	; arg 0
	; arg vr172
	; arg 1
	%vr175 = call i32 @fb_FilePutLarge( i32 %vr173, i64 0, i8* %vr172, i64 1 )

	; label .Lt_1AC0
	br label %.Lt_1AC0
.Lt_1AC0:

	; bop I + 1
	%vr179 = load i64, i64* %I.481
	%vr178 = add i64 %vr179, 1

	; store I := vr178
	store i64 %vr178, i64* %I.481

	; label .Lt_1ABF
	br label %.Lt_1ABF
.Lt_1ABF:

	; branchbop I <= LT_1ABE
	%vr181 = load i64, i64* %I.481
	%vr182 = load i64, i64* %LT_1ABE.482
	%vr180 = icmp sle i64 %vr181, %vr182
	br i1 %vr180, label %.Lt_1AC2, label %.Lt_1AF5
.Lt_1AF5:

	; label .Lt_1AC1
	br label %.Lt_1AC1
.Lt_1AC1:

	; conv KEY => vr183
	%vr184 = load i64, i64* %KEY.474
	%vr183 = trunc i64 %vr184 to i32

	; call fb_FileClose()
	; arg vr183
	%vr185 = call i32 @fb_FileClose( i32 %vr183 )

	; goto .Lt_1ABC
	br label %.Lt_1ABC
.Lt_1AF6:

	; label .Lt_1ABD
	br label %.Lt_1ABD
.Lt_1ABD:

	; localvar LT_1AC4
	%LT_1AC4.483 = alloca %FBSTRING

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr186 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr192 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr192
	%vr195 = bitcast %FBSTRING* %vr192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr195, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr197 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; addrof STRKEY
	%vr204 = bitcast %FBSTRING* %STRKEY.477 to i8*
	%vr205 = bitcast i8* bitcast ([15 x i8]* @Lt_1AC3 to i8*) to i8*

	; addrof LT_1AC4

	; memclear LT_1AC4
	%vr207 = bitcast %FBSTRING* %LT_1AC4.483 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr207, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1AC4

	; call fb_StrConcat()
	; arg LT_1AC4
	; arg vr205
	; arg 15
	; arg vr204
	; arg -1
	%vr209 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1AC4.483, i8* %vr205, i64 15, i8* %vr204, i64 -1 )

	; call fb_PrintString()
	; arg 0
	; arg vr209
	%vr213 = bitcast %FBSTRING* %vr209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr213, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; label .Lt_1ABC
	br label %.Lt_1ABC
.Lt_1ABC:

	; label .Lt_1ABB
	br label %.Lt_1ABB
.Lt_1ABB:

	; label .Lt_1ABA
	br label %.Lt_1ABA
.Lt_1ABA:

	; call fb_GfxLine()
	; arg 0
	; arg 0
	%vr216 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr217 = fpext float 0x0000000000000000 to float
	; arg 863
	%vr218 = fpext float 0x408AF80000000000 to float
	; arg 7
	%vr219 = fpext float 0x401C000000000000 to float
	; arg 3
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr216, float %vr217, float %vr218, float %vr219, i32 3, i32 2, i32 65535, i32 0 )

	; store KEY := 0
	store i64 0, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AF7:

	; label .Lt_1AB7
	br label %.Lt_1AB7
.Lt_1AB7:

	; branchbop KEY <> 317
	%vr225 = load i64, i64* %KEY.474
	%vr224 = icmp ne i64 %vr225, 317
	br i1 %vr224, label %.Lt_1AC5, label %.Lt_1AF8
.Lt_1AF8:

	; label .Lt_1AC6
	br label %.Lt_1AC6
.Lt_1AC6:

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr226 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr232 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr232
	%vr235 = bitcast %FBSTRING* %vr232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr235, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr237 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_1AC7
	%vr244 = bitcast i8* bitcast ([15 x i8]* @Lt_1AC7 to i8*) to i8*
	; arg 14
	%vr243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr244, i64 14 )

	; call fb_ConsoleInput()
	; arg vr243
	%vr247 = bitcast %FBSTRING* %vr243 to %FBSTRING*
	; arg -1
	; arg -1
	%vr246 = call i32 @fb_ConsoleInput( %FBSTRING* %vr247, i32 -1, i32 -1 )

	; addrof STRKEY
	%vr251 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_InputString()
	; arg vr251
	; arg -1
	; arg 0
	%vr252 = call i32 @fb_InputString( i8* %vr251, i64 -1, i32 0 )

	; addrof STRKEY
	%vr256 = bitcast %FBSTRING* %STRKEY.477 to i8*

	; call fb_StrLen()
	; arg vr256
	; arg -1
	%vr257 = call i64 @fb_StrLen( i8* %vr256, i64 -1 )

	; branchbop vr257 == 0
	%vr259 = icmp eq i64 %vr257, 0
	br i1 %vr259, label %.Lt_1AC9, label %.Lt_1AF9
.Lt_1AF9:

	; call fb_FileFree()
	%vr260 = call i32 @fb_FileFree(  )

	; conv vr260 => vr261
	%vr261 = sext i32 %vr260 to i64

	; store KEY := vr261
	store i64 %vr261, i64* %KEY.474

	; conv KEY => vr262
	%vr263 = load i64, i64* %KEY.474
	%vr262 = trunc i64 %vr263 to i32

	; addrof STRKEY
	%vr265 = bitcast %FBSTRING* %STRKEY.477 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr265
	; arg 0
	; arg 1
	; arg 0
	; arg vr262
	; arg 0
	%vr266 = call i32 @fb_FileOpen( %FBSTRING* %vr265, i32 0, i32 1, i32 0, i32 %vr262, i32 0 )

	; conv vr266 => vr271
	%vr271 = sext i32 %vr266 to i64

	; branchbop vr271 <> 0
	%vr272 = icmp ne i64 %vr271, 0
	br i1 %vr272, label %.Lt_1ACB, label %.Lt_1AFA
.Lt_1AFA:

	; localvar U8
	%U8.484 = alloca i8

	; localvar NBYTES
	%NBYTES.485 = alloca i64

	; addrof U8

	; memclear U8
	%vr274 = bitcast i8* %U8.484 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr274, i8 0, i32 1, i32 1, i1 false )

	; addrof NBYTES

	; memclear NBYTES
	%vr276 = bitcast i64* %NBYTES.485 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr276, i8 0, i32 8, i32 1, i1 false )

	; addrof NBYTES
	%vr278 = bitcast i64* %NBYTES.485 to i8*

	; conv KEY => vr279
	%vr280 = load i64, i64* %KEY.474
	%vr279 = trunc i64 %vr280 to i32

	; call fb_FileGetLarge()
	; arg vr279
	; arg 0
	; arg vr278
	; arg 8
	%vr281 = call i32 @fb_FileGetLarge( i32 %vr279, i64 0, i8* %vr278, i64 8 )

	; localvar I
	%I.486 = alloca i64

	; localvar LT_1ACC
	%LT_1ACC.487 = alloca i64

	; store I := 0
	store i64 0, i64* %I.486

	; bop NBYTES + -1
	%vr285 = load i64, i64* %NBYTES.485
	%vr284 = add i64 %vr285, -1

	; store LT_1ACC := vr284
	store i64 %vr284, i64* %LT_1ACC.487

	; goto .Lt_1ACD
	br label %.Lt_1ACD
.Lt_1AFB:

	; label .Lt_1AD0
	br label %.Lt_1AD0
.Lt_1AD0:

	; addrof U8
	%vr287 = bitcast i8* %U8.484 to i8*

	; conv KEY => vr288
	%vr289 = load i64, i64* %KEY.474
	%vr288 = trunc i64 %vr289 to i32

	; call fb_FileGetLarge()
	; arg vr288
	; arg 0
	; arg vr287
	; arg 1
	%vr290 = call i32 @fb_FileGetLarge( i32 %vr288, i64 0, i8* %vr287, i64 1 )

	; conv U8 => vr293
	%vr294 = load i8, i8* %U8.484
	%vr293 = zext i8 %vr294 to i64

	; bop I + 2048
	%vr296 = load i64, i64* %I.486
	%vr295 = add i64 %vr296, 2048
	%vr297 = bitcast i64 %vr295 to i64

	; deref CPU
	%vr299 = load %CPU6510*, %CPU6510** %CPU.472

	; call WRITEUBYTE()
	; arg vr299+16
	%vr300 = ptrtoint %CPU6510* %vr299 to i64
	%vr301 = add i64 %vr300, 16
	%vr302 = inttoptr i64 %vr301 to %MEMORY_T**
	%vr303 = load %MEMORY_T*, %MEMORY_T** %vr302
	; arg vr297
	; arg vr293
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr303, i64 %vr297, i64 %vr293 )

	; label .Lt_1ACE
	br label %.Lt_1ACE
.Lt_1ACE:

	; bop I + 1
	%vr305 = load i64, i64* %I.486
	%vr304 = add i64 %vr305, 1

	; store I := vr304
	store i64 %vr304, i64* %I.486

	; label .Lt_1ACD
	br label %.Lt_1ACD
.Lt_1ACD:

	; branchbop I <= LT_1ACC
	%vr307 = load i64, i64* %I.486
	%vr308 = load i64, i64* %LT_1ACC.487
	%vr306 = icmp sle i64 %vr307, %vr308
	br i1 %vr306, label %.Lt_1AD0, label %.Lt_1AFC
.Lt_1AFC:

	; label .Lt_1ACF
	br label %.Lt_1ACF
.Lt_1ACF:

	; conv KEY => vr309
	%vr310 = load i64, i64* %KEY.474
	%vr309 = trunc i64 %vr310 to i32

	; call fb_FileClose()
	; arg vr309
	%vr311 = call i32 @fb_FileClose( i32 %vr309 )

	; bop NBYTES + 2048
	%vr313 = load i64, i64* %NBYTES.485
	%vr312 = add i64 %vr313, 2048

	; store NBYTES := vr312
	store i64 %vr312, i64* %NBYTES.485
	%vr315 = load i64, i64* %NBYTES.485
	%vr314 = bitcast i64 %vr315 to i64

	; deref CPU
	%vr317 = load %CPU6510*, %CPU6510** %CPU.472

	; call WRITEUSHORT()
	; arg vr317+16
	%vr318 = ptrtoint %CPU6510* %vr317 to i64
	%vr319 = add i64 %vr318, 16
	%vr320 = inttoptr i64 %vr319 to %MEMORY_T**
	%vr321 = load %MEMORY_T*, %MEMORY_T** %vr320
	; arg 45
	; arg vr314
	call void @_ZN8MEMORY_T11WRITEUSHORTEyy( %MEMORY_T* %vr321, i64 45, i64 %vr314 )

	; deref CPU
	%vr323 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr323+12 := 42282
	%vr324 = ptrtoint %CPU6510* %vr323 to i64
	%vr325 = add i64 %vr324, 12
	%vr326 = inttoptr i64 %vr325 to i16*
	store i16 trunc (i64 42282 to i16), i16* %vr326

	; goto .Lt_1ACA
	br label %.Lt_1ACA
.Lt_1AFD:

	; label .Lt_1ACB
	br label %.Lt_1ACB
.Lt_1ACB:

	; localvar LT_1AD2
	%LT_1AD2.488 = alloca %FBSTRING

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr327 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr333 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr333
	%vr336 = bitcast %FBSTRING* %vr333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr336, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr338 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; addrof STRKEY
	%vr345 = bitcast %FBSTRING* %STRKEY.477 to i8*
	%vr346 = bitcast i8* bitcast ([13 x i8]* @Lt_1AD1 to i8*) to i8*

	; addrof LT_1AD2

	; memclear LT_1AD2
	%vr348 = bitcast %FBSTRING* %LT_1AD2.488 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr348, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_1AD2

	; call fb_StrConcat()
	; arg LT_1AD2
	; arg vr346
	; arg 13
	; arg vr345
	; arg -1
	%vr350 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_1AD2.488, i8* %vr346, i64 13, i8* %vr345, i64 -1 )

	; call fb_PrintString()
	; arg 0
	; arg vr350
	%vr354 = bitcast %FBSTRING* %vr350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr354, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; label .Lt_1ACA
	br label %.Lt_1ACA
.Lt_1ACA:

	; label .Lt_1AC9
	br label %.Lt_1AC9
.Lt_1AC9:

	; label .Lt_1AC8
	br label %.Lt_1AC8
.Lt_1AC8:

	; call fb_GfxLine()
	; arg 0
	; arg 0
	%vr357 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr358 = fpext float 0x0000000000000000 to float
	; arg 863
	%vr359 = fpext float 0x408AF80000000000 to float
	; arg 7
	%vr360 = fpext float 0x401C000000000000 to float
	; arg 3
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr357, float %vr358, float %vr359, float %vr360, i32 3, i32 2, i32 65535, i32 0 )

	; store KEY := 0
	store i64 0, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AFE:

	; label .Lt_1AC5
	br label %.Lt_1AC5
.Lt_1AC5:

	; branchbop KEY <> 327
	%vr366 = load i64, i64* %KEY.474
	%vr365 = icmp ne i64 %vr366, 327
	br i1 %vr365, label %.Lt_1AD3, label %.Lt_1AFF
.Lt_1AFF:

	; label .Lt_1AD4
	br label %.Lt_1AD4
.Lt_1AD4:

	; store KEY := 19
	store i64 19, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1B00:

	; label .Lt_1AD3
	br label %.Lt_1AD3
.Lt_1AD3:

	; branchbop KEY <> 8
	%vr368 = load i64, i64* %KEY.474
	%vr367 = icmp ne i64 %vr368, 8
	br i1 %vr367, label %.Lt_1AD5, label %.Lt_1B01
.Lt_1B01:

	; label .Lt_1AD6
	br label %.Lt_1AD6
.Lt_1AD6:

	; store KEY := 20
	store i64 20, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1B02:

	; label .Lt_1AD5
	br label %.Lt_1AD5
.Lt_1AD5:

	; branchbop KEY <> 331
	%vr370 = load i64, i64* %KEY.474
	%vr369 = icmp ne i64 %vr370, 331
	br i1 %vr369, label %.Lt_1AD7, label %.Lt_1B03
.Lt_1B03:

	; label .Lt_1AD8
	br label %.Lt_1AD8
.Lt_1AD8:

	; store KEY := 157
	store i64 157, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1B04:

	; label .Lt_1AD7
	br label %.Lt_1AD7
.Lt_1AD7:

	; branchbop KEY <> 328
	%vr372 = load i64, i64* %KEY.474
	%vr371 = icmp ne i64 %vr372, 328
	br i1 %vr371, label %.Lt_1AD9, label %.Lt_1B05
.Lt_1B05:

	; label .Lt_1ADA
	br label %.Lt_1ADA
.Lt_1ADA:

	; store KEY := 145
	store i64 145, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1B06:

	; label .Lt_1AD9
	br label %.Lt_1AD9
.Lt_1AD9:

	; branchbop KEY <> 333
	%vr374 = load i64, i64* %KEY.474
	%vr373 = icmp ne i64 %vr374, 333
	br i1 %vr373, label %.Lt_1ADB, label %.Lt_1B07
.Lt_1B07:

	; label .Lt_1ADC
	br label %.Lt_1ADC
.Lt_1ADC:

	; store KEY := 29
	store i64 29, i64* %KEY.474

	; goto .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1B08:

	; label .Lt_1ADB
	br label %.Lt_1ADB
.Lt_1ADB:

	; branchbop KEY <> 336
	%vr376 = load i64, i64* %KEY.474
	%vr375 = icmp ne i64 %vr376, 336
	br i1 %vr375, label %.Lt_1ADD, label %.Lt_1B09
.Lt_1B09:

	; label .Lt_1ADE
	br label %.Lt_1ADE
.Lt_1ADE:

	; store KEY := 17
	store i64 17, i64* %KEY.474

	; label .Lt_1ADD
	br label %.Lt_1ADD
.Lt_1ADD:

	; label .Lt_1AB0
	br label %.Lt_1AB0
.Lt_1AB0:

	; branchbop KEY == 0
	%vr378 = load i64, i64* %KEY.474
	%vr377 = icmp eq i64 %vr378, 0
	br i1 %vr377, label %.Lt_1AE0, label %.Lt_1B0A
.Lt_1B0A:
	%vr380 = load i64, i64* %KEY.474
	%vr379 = bitcast i64 %vr380 to i64

	; bop NCHARS + 631
	%vr382 = load i64, i64* %NCHARS.476
	%vr381 = add i64 %vr382, 631
	%vr383 = bitcast i64 %vr381 to i64

	; deref CPU
	%vr385 = load %CPU6510*, %CPU6510** %CPU.472

	; call WRITEUBYTE()
	; arg vr385+16
	%vr386 = ptrtoint %CPU6510* %vr385 to i64
	%vr387 = add i64 %vr386, 16
	%vr388 = inttoptr i64 %vr387 to %MEMORY_T**
	%vr389 = load %MEMORY_T*, %MEMORY_T** %vr388
	; arg vr383
	; arg vr379
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr389, i64 %vr383, i64 %vr379 )

	; bop NCHARS + 1
	%vr391 = load i64, i64* %NCHARS.476
	%vr390 = add i64 %vr391, 1
	%vr392 = bitcast i64 %vr390 to i64

	; deref CPU
	%vr394 = load %CPU6510*, %CPU6510** %CPU.472

	; call WRITEUBYTE()
	; arg vr394+16
	%vr395 = ptrtoint %CPU6510* %vr394 to i64
	%vr396 = add i64 %vr395, 16
	%vr397 = inttoptr i64 %vr396 to %MEMORY_T**
	%vr398 = load %MEMORY_T*, %MEMORY_T** %vr397
	; arg 198
	; arg vr392
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr398, i64 198, i64 %vr392 )

	; label .Lt_1AE0
	br label %.Lt_1AE0
.Lt_1AE0:

	; label .Lt_1ADF
	br label %.Lt_1ADF
.Lt_1ADF:

	; label .Lt_1AAF
	br label %.Lt_1AAF
.Lt_1AAF:

	; label .Lt_1AAE
	br label %.Lt_1AAE
.Lt_1AAE:

	; addrof STRKEY
	%vr400 = bitcast %FBSTRING* %STRKEY.477 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr400
	call void @fb_StrDelete( %FBSTRING* %vr400 )

	; label .Lt_1AAD
	br label %.Lt_1AAD
.Lt_1AAD:

	; label .Lt_1AAC
	br label %.Lt_1AAC
.Lt_1AAC:

	; deref CPU
	%vr402 = load %CPU6510*, %CPU6510** %CPU.472

	; conv vr402+13 => vr403
	%vr404 = ptrtoint %CPU6510* %vr402 to i64
	%vr405 = add i64 %vr404, 13
	%vr406 = inttoptr i64 %vr405 to i8*
	%vr407 = load i8, i8* %vr406
	%vr403 = zext i8 %vr407 to i64

	; call PUSH()
	; arg CPU
	%vr408 = load %CPU6510*, %CPU6510** %CPU.472
	; arg vr403
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr408, i64 %vr403 )

	; deref CPU
	%vr410 = load %CPU6510*, %CPU6510** %CPU.472

	; conv vr410+12 => vr411
	%vr412 = ptrtoint %CPU6510* %vr410 to i64
	%vr413 = add i64 %vr412, 12
	%vr414 = inttoptr i64 %vr413 to i8*
	%vr415 = load i8, i8* %vr414
	%vr411 = zext i8 %vr415 to i64

	; call PUSH()
	; arg CPU
	%vr416 = load %CPU6510*, %CPU6510** %CPU.472
	; arg vr411
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr416, i64 %vr411 )

	; deref CPU
	%vr418 = load %CPU6510*, %CPU6510** %CPU.472

	; conv vr418 => vr419
	%vr420 = ptrtoint %CPU6510* %vr418 to i64
	%vr421 = inttoptr i64 %vr420 to i8*
	%vr422 = load i8, i8* %vr421
	%vr419 = zext i8 %vr422 to i64

	; call PUSH()
	; arg CPU
	%vr423 = load %CPU6510*, %CPU6510** %CPU.472
	; arg vr419
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr423, i64 %vr419 )

	; deref CPU
	%vr425 = load %CPU6510*, %CPU6510** %CPU.472

	; call READUBYTE()
	; arg vr425+16
	%vr427 = ptrtoint %CPU6510* %vr425 to i64
	%vr428 = add i64 %vr427, 16
	%vr429 = inttoptr i64 %vr428 to %MEMORY_T**
	%vr430 = load %MEMORY_T*, %MEMORY_T** %vr429
	; arg 65534
	%vr426 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr430, i64 65534 )

	; deref CPU
	%vr432 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr432+13 := vr426
	%vr433 = ptrtoint %CPU6510* %vr432 to i64
	%vr434 = add i64 %vr433, 13
	%vr435 = inttoptr i64 %vr434 to i8*
	store i8 %vr426, i8* %vr435

	; deref CPU
	%vr437 = load %CPU6510*, %CPU6510** %CPU.472

	; call READUBYTE()
	; arg vr437+16
	%vr439 = ptrtoint %CPU6510* %vr437 to i64
	%vr440 = add i64 %vr439, 16
	%vr441 = inttoptr i64 %vr440 to %MEMORY_T**
	%vr442 = load %MEMORY_T*, %MEMORY_T** %vr441
	; arg 65535
	%vr438 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr442, i64 65535 )

	; deref CPU
	%vr444 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr444+12 := vr438
	%vr445 = ptrtoint %CPU6510* %vr444 to i64
	%vr446 = add i64 %vr445, 12
	%vr447 = inttoptr i64 %vr446 to i8*
	store i8 %vr438, i8* %vr447

	; deref CPU
	%vr449 = load %CPU6510*, %CPU6510** %CPU.472

	; bop vr449 AND -17
	%vr452 = ptrtoint %CPU6510* %vr449 to i64
	%vr453 = inttoptr i64 %vr452 to i64*
	%vr454 = load i64, i64* %vr453
	%vr451 = and i64 %vr454, -17

	; deref CPU
	%vr457 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr457 := vr451
	%vr459 = ptrtoint %CPU6510* %vr457 to i64
	%vr460 = inttoptr i64 %vr459 to i64*
	store i64 %vr451, i64* %vr460

	; deref CPU
	%vr462 = load %CPU6510*, %CPU6510** %CPU.472

	; bop vr462 AND -5
	%vr465 = ptrtoint %CPU6510* %vr462 to i64
	%vr466 = inttoptr i64 %vr465 to i64*
	%vr467 = load i64, i64* %vr466
	%vr464 = and i64 %vr467, -5

	; bop vr464 OR 4
	%vr469 = or i64 %vr464, 4

	; deref CPU
	%vr471 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr471 := vr469
	%vr473 = ptrtoint %CPU6510* %vr471 to i64
	%vr474 = inttoptr i64 %vr473 to i64*
	store i64 %vr469, i64* %vr474

	; label .Lt_1AE1
	br label %.Lt_1AE1
.Lt_1AE1:

	; deref CPU
	%vr476 = load %CPU6510*, %CPU6510** %CPU.472

	; branchbop vr476+24 == 64
	%vr479 = ptrtoint %CPU6510* %vr476 to i64
	%vr480 = add i64 %vr479, 24
	%vr481 = inttoptr i64 %vr480 to i64*
	%vr482 = load i64, i64* %vr481
	%vr478 = icmp eq i64 %vr482, 64
	br i1 %vr478, label %.Lt_1AE2, label %.Lt_1B0B
.Lt_1B0B:

	; call TICK()
	; arg CPU
	%vr485 = load %CPU6510*, %CPU6510** %CPU.472
	; arg -1
	%vr484 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr485, i64 -1 )

	; bop IRQTICKS + 1
	%vr487 = load i64, i64* %IRQTICKS.475
	%vr486 = add i64 %vr487, 1

	; store IRQTICKS := vr486
	store i64 %vr486, i64* %IRQTICKS.475

	; goto .Lt_1AE1
	br label %.Lt_1AE1
.Lt_1B0C:

	; label .Lt_1AE2
	br label %.Lt_1AE2
.Lt_1AE2:

	; call PULL()
	; arg CPU
	%vr489 = load %CPU6510*, %CPU6510** %CPU.472
	%vr488 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr489 )

	; conv vr488 => vr490
	%vr490 = trunc i64 %vr488 to i8

	; deref CPU
	%vr492 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr492 := vr490
	%vr493 = ptrtoint %CPU6510* %vr492 to i64
	%vr494 = inttoptr i64 %vr493 to i8*
	store i8 %vr490, i8* %vr494

	; call PULL()
	; arg CPU
	%vr496 = load %CPU6510*, %CPU6510** %CPU.472
	%vr495 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr496 )

	; conv vr495 => vr497
	%vr497 = trunc i64 %vr495 to i8

	; deref CPU
	%vr499 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr499+12 := vr497
	%vr500 = ptrtoint %CPU6510* %vr499 to i64
	%vr501 = add i64 %vr500, 12
	%vr502 = inttoptr i64 %vr501 to i8*
	store i8 %vr497, i8* %vr502

	; call PULL()
	; arg CPU
	%vr504 = load %CPU6510*, %CPU6510** %CPU.472
	%vr503 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr504 )

	; conv vr503 => vr505
	%vr505 = trunc i64 %vr503 to i8

	; deref CPU
	%vr507 = load %CPU6510*, %CPU6510** %CPU.472

	; store vr507+13 := vr505
	%vr508 = ptrtoint %CPU6510* %vr507 to i64
	%vr509 = add i64 %vr508, 13
	%vr510 = inttoptr i64 %vr509 to i8*
	store i8 %vr505, i8* %vr510

	; branchbop KEY <> 13
	%vr512 = load i64, i64* %KEY.474
	%vr511 = icmp ne i64 %vr512, 13
	br i1 %vr511, label %.Lt_1AE4, label %.Lt_1B0D
.Lt_1B0D:

	; store FLAG := 1
	store i64 1, i64* @FLAG

	; goto .Lt_1AE3
	br label %.Lt_1AE3
.Lt_1B0E:

	; label .Lt_1AE4
	br label %.Lt_1AE4
.Lt_1AE4:

	; store FLAG := 0
	store i64 0, i64* @FLAG

	; label .Lt_1AE3
	br label %.Lt_1AE3
.Lt_1AE3:

	; store fb$result := IRQTICKS
	%vr513 = load i64, i64* %IRQTICKS.475
	store i64 %vr513, i64* %fb$result.473

	; goto .Lt_1AA9
	br label %.Lt_1AA9
.Lt_1B0F:

	; label .Lt_1AA9
	br label %.Lt_1AA9
.Lt_1AA9:

	; loadres fb$result
	%vr515 = load i64, i64* %fb$result.473
	ret i64 %vr515
}

define i32 @main( i32 %__FB_ARGC__.489$, i8** %__FB_ARGV__.490$ ) nounwind
{

	; paramvar __FB_ARGC__
	%__FB_ARGC__.489 = alloca i32
	store i32 %__FB_ARGC__.489$, i32* %__FB_ARGC__.489

	; paramvar __FB_ARGV__
	%__FB_ARGV__.490 = alloca i8**
	store i8** %__FB_ARGV__.490$, i8*** %__FB_ARGV__.490

	; localvar fb$result
	%fb$result.491 = alloca i32

	; localvar COMPUTER
	%COMPUTER.492 = alloca %C64_T

	; localvar TICKS
	%TICKS.493 = alloca i64

	; localvar RES
	%RES.494 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i32* %fb$result.491 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 4, i32 1, i1 false )

	; call fb_Init()
	; arg __FB_ARGC__
	%vr2 = load i32, i32* %__FB_ARGC__.489
	; arg __FB_ARGV__
	%vr3 = load i8**, i8*** %__FB_ARGV__.490
	; arg 0
	call void @fb_Init( i32 %vr2, i8** %vr3, i32 0 )
	%vr4 = bitcast %__FB_DATADESC$* @.Lt_1371 to i8*

	; call fb_DataRestore()
	; arg vr4
	call void @fb_DataRestore( i8* %vr4 )

	; label .Lt_0002
	br label %.Lt_0002
.Lt_0002:

	; store SYS_OFFSET := 49152
	store double 0x40E8000000000000, double* @SYS_OFFSET

	; label .Lt_1370
	br label %.Lt_1370
.Lt_1370:

	; label .Lt_1378
	br label %.Lt_1378
.Lt_1378:

	; addrof COMPUTER

	; call ()
	; arg COMPUTER
	call void @_ZN5C64_TC1Ev( %C64_T* %COMPUTER.492 )

	; addrof TICKS

	; memclear TICKS
	%vr7 = bitcast i64* %TICKS.493 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr7, i8 0, i32 8, i32 1, i1 false )

	; addrof RES

	; memclear RES
	%vr9 = bitcast i64* %RES.494 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_1B10
	br label %.Lt_1B10
.Lt_1B10:

	; bop TICKS + 1
	%vr11 = load i64, i64* %TICKS.493
	%vr10 = add i64 %vr11, 1

	; store TICKS := vr10
	store i64 %vr10, i64* %TICKS.493

	; branchbop FLAG <> 1
	%vr13 = load i64, i64* @FLAG
	%vr12 = icmp ne i64 %vr13, 1
	br i1 %vr12, label %.Lt_1B14, label %.Lt_1B18
.Lt_1B18:
	%vr15 = load i64, i64* %TICKS.493
	%vr14 = bitcast i64 %vr15 to i64

	; call TICK()
	; arg COMPUTER+8
	%vr17 = bitcast %C64_T* %COMPUTER.492 to %CPU6510**
	%vr18 = ptrtoint %CPU6510** %vr17 to i64
	%vr19 = add i64 %vr18, 8
	%vr20 = inttoptr i64 %vr19 to %CPU6510**
	%vr21 = load %CPU6510*, %CPU6510** %vr20
	; arg vr14
	%vr16 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr21, i64 %vr14 )

	; goto .Lt_1B13
	br label %.Lt_1B13
.Lt_1B19:

	; label .Lt_1B14
	br label %.Lt_1B14
.Lt_1B14:

	; call TICK()
	; arg COMPUTER+8
	%vr23 = bitcast %C64_T* %COMPUTER.492 to %CPU6510**
	%vr24 = ptrtoint %CPU6510** %vr23 to i64
	%vr25 = add i64 %vr24, 8
	%vr26 = inttoptr i64 %vr25 to %CPU6510**
	%vr27 = load %CPU6510*, %CPU6510** %vr26
	; arg -1
	%vr22 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr27, i64 -1 )

	; label .Lt_1B13
	br label %.Lt_1B13
.Lt_1B13:

	; bop TICKS MOD 24000
	%vr29 = load i64, i64* %TICKS.493
	%vr28 = srem i64 %vr29, 24000

	; branchbop vr28 <> 0
	%vr30 = icmp ne i64 %vr28, 0
	br i1 %vr30, label %.Lt_1B16, label %.Lt_1B1A
.Lt_1B1A:

	; call INTERRUPTSERVICE()
	; arg COMPUTER+8
	%vr32 = bitcast %C64_T* %COMPUTER.492 to %CPU6510**
	%vr33 = ptrtoint %CPU6510** %vr32 to i64
	%vr34 = add i64 %vr33, 8
	%vr35 = inttoptr i64 %vr34 to %CPU6510**
	%vr36 = load %CPU6510*, %CPU6510** %vr35
	%vr31 = call i64 @INTERRUPTSERVICE( %CPU6510* %vr36 )

	; bop TICKS + vr31
	%vr38 = load i64, i64* %TICKS.493
	%vr37 = add i64 %vr38, %vr31

	; store TICKS := vr37
	store i64 %vr37, i64* %TICKS.493

	; call fb_GfxLock()
	call void @fb_GfxLock(  )
	%vr40 = bitcast i8* @fb_hPutPSet to void ( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* )*
	%vr39 = bitcast void ( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* )* %vr40 to i8*

	; call fb_GfxPut()
	; arg 0
	; arg 0
	%vr42 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr43 = fpext float 0x0000000000000000 to float
	; arg BGIMAGE
	%vr44 = load i8*, i8** @BGIMAGE
	%vr45 = bitcast i8* %vr44 to i8*
	; arg -65536
	; arg -65536
	; arg -65536
	; arg -65536
	; arg 0
	; arg 1
	; arg vr39
	; arg -1
	; arg 0
	; arg 0
	%vr41 = call i32 @fb_GfxPut( i8* 0, float %vr42, float %vr43, i8* %vr45, i32 -65536, i32 -65536, i32 -65536, i32 -65536, i32 0, i32 1, i8* %vr39, i32 -1, i8* 0, i8* 0 )
	%vr54 = bitcast i8* @fb_hPutOr to void ( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* )*
	%vr53 = bitcast void ( i8*, i8*, i32, i32, i32, i32, i32, i8*, i8* )* %vr54 to i8*

	; call fb_GfxPut()
	; arg 0
	; arg 0
	%vr56 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr57 = fpext float 0x0000000000000000 to float
	; arg FGIMAGE
	%vr58 = load i8*, i8** @FGIMAGE
	%vr59 = bitcast i8* %vr58 to i8*
	; arg -65536
	; arg -65536
	; arg -65536
	; arg -65536
	; arg 0
	; arg 4
	; arg vr53
	; arg -1
	; arg 0
	; arg 0
	%vr55 = call i32 @fb_GfxPut( i8* 0, float %vr56, float %vr57, i8* %vr59, i32 -65536, i32 -65536, i32 -65536, i32 -65536, i32 0, i32 4, i8* %vr53, i32 -1, i8* 0, i8* 0 )

	; call fb_GfxUnlock()
	; arg -1
	; arg -1
	call void @fb_GfxUnlock( i32 -1, i32 -1 )

	; label .Lt_1B16
	br label %.Lt_1B16
.Lt_1B16:

	; label .Lt_1B15
	br label %.Lt_1B15
.Lt_1B15:

	; label .Lt_1B12
	br label %.Lt_1B12
.Lt_1B12:

	; goto .Lt_1B10
	br label %.Lt_1B10
.Lt_1B1B:

	; label .Lt_1B11
	br label %.Lt_1B11
.Lt_1B11:

	; addrof COMPUTER

	; call ()
	; arg COMPUTER
	call void @_ZN5C64_TD1Ev( %C64_T* %COMPUTER.492 )

	; label .Lt_0003
	br label %.Lt_0003
.Lt_0003:

	; call fb_End()
	; arg 0
	call void @fb_End( i32 0 )

	; loadres fb$result
	%vr72 = load i32, i32* %fb$result.491
	ret i32 %vr72
}

define private void @_ZN9SHADERTOYC1Ev( %SHADERTOY* %THIS.495$ ) nounwind
{

	; paramvar THIS
	%THIS.495 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.495$, %SHADERTOY** %THIS.495
	%vr1 = load %SHADERTOY*, %SHADERTOY** %THIS.495
	%vr0 = bitcast %SHADERTOY* %vr1 to i32*

	; addrof vr0
	%vr3 = ptrtoint i32* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i32*

	; memclear vr4
	%vr5 = bitcast i32* %vr4 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 4, i32 1, i1 false )

	; bop THIS + 4
	%vr7 = load %SHADERTOY*, %SHADERTOY** %THIS.495
	%vr8 = inttoptr i64 4 to %SHADERTOY*
	%vr6 = add %SHADERTOY* %vr7, %vr8
	%vr9 = bitcast %SHADERTOY* %vr6 to i32*

	; addrof vr9
	%vr11 = ptrtoint i32* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i32*

	; memclear vr12
	%vr13 = bitcast i32* %vr12 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr13, i8 0, i32 4, i32 1, i1 false )

	; bop THIS + 8
	%vr15 = load %SHADERTOY*, %SHADERTOY** %THIS.495
	%vr16 = inttoptr i64 8 to %SHADERTOY*
	%vr14 = add %SHADERTOY* %vr15, %vr16
	%vr17 = bitcast %SHADERTOY* %vr14 to %FBSTRING*

	; addrof vr17
	%vr19 = ptrtoint %FBSTRING* %vr17 to i64
	%vr20 = inttoptr i64 %vr19 to %FBSTRING*

	; memclear vr20
	%vr21 = bitcast %FBSTRING* %vr20 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21, i8 0, i32 24, i32 1, i1 false )

	; label .Lt_0336
	br label %.Lt_0336
.Lt_0336:

	; label .Lt_0337
	br label %.Lt_0337
.Lt_0337:
	ret void
}

define private void @_ZN9SHADERTOYaSERKS_( %SHADERTOY* %THIS.496$, %SHADERTOY* %__FB_RHS__.497$ ) nounwind
{

	; paramvar THIS
	%THIS.496 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.496$, %SHADERTOY** %THIS.496

	; paramvar __FB_RHS__
	%__FB_RHS__.497 = alloca %SHADERTOY*
	store %SHADERTOY* %__FB_RHS__.497$, %SHADERTOY** %__FB_RHS__.497

	; label .Lt_0338
	br label %.Lt_0338
.Lt_0338:
	%vr1 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.497
	%vr0 = bitcast %SHADERTOY* %vr1 to i32*
	%vr3 = load %SHADERTOY*, %SHADERTOY** %THIS.496
	%vr2 = bitcast %SHADERTOY* %vr3 to i32*

	; store vr2 := vr0
	%vr4 = ptrtoint i32* %vr0 to i64
	%vr5 = inttoptr i64 %vr4 to i32*
	%vr6 = load i32, i32* %vr5
	%vr7 = ptrtoint i32* %vr2 to i64
	%vr8 = inttoptr i64 %vr7 to i32*
	store i32 %vr6, i32* %vr8

	; bop __FB_RHS__ + 4
	%vr10 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.497
	%vr11 = bitcast %SHADERTOY* %vr10 to %SHADERTOY*
	%vr12 = inttoptr i64 4 to %SHADERTOY*
	%vr9 = add %SHADERTOY* %vr11, %vr12
	%vr13 = bitcast %SHADERTOY* %vr9 to i32*

	; bop THIS + 4
	%vr15 = load %SHADERTOY*, %SHADERTOY** %THIS.496
	%vr16 = inttoptr i64 4 to %SHADERTOY*
	%vr14 = add %SHADERTOY* %vr15, %vr16
	%vr17 = bitcast %SHADERTOY* %vr14 to i32*

	; store vr17 := vr13
	%vr18 = ptrtoint i32* %vr13 to i64
	%vr19 = inttoptr i64 %vr18 to i32*
	%vr20 = load i32, i32* %vr19
	%vr21 = ptrtoint i32* %vr17 to i64
	%vr22 = inttoptr i64 %vr21 to i32*
	store i32 %vr20, i32* %vr22

	; bop __FB_RHS__ + 8
	%vr24 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.497
	%vr25 = bitcast %SHADERTOY* %vr24 to %SHADERTOY*
	%vr26 = inttoptr i64 8 to %SHADERTOY*
	%vr23 = add %SHADERTOY* %vr25, %vr26
	%vr27 = bitcast %SHADERTOY* %vr23 to %FBSTRING*

	; addrof vr27
	%vr29 = ptrtoint %FBSTRING* %vr27 to i64
	%vr30 = inttoptr i64 %vr29 to %FBSTRING*
	%vr31 = bitcast %FBSTRING* %vr30 to i8*

	; bop THIS + 8
	%vr33 = load %SHADERTOY*, %SHADERTOY** %THIS.496
	%vr34 = inttoptr i64 8 to %SHADERTOY*
	%vr32 = add %SHADERTOY* %vr33, %vr34
	%vr35 = bitcast %SHADERTOY* %vr32 to %FBSTRING*

	; addrof vr35
	%vr37 = ptrtoint %FBSTRING* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to %FBSTRING*
	%vr39 = bitcast %FBSTRING* %vr38 to i8*

	; call fb_StrAssign()
	; arg vr39
	; arg -1
	; arg vr31
	; arg -1
	; arg 0
	%vr40 = call %FBSTRING* @fb_StrAssign( i8* %vr39, i64 -1, i8* %vr31, i64 -1, i32 0 )

	; label .Lt_0339
	br label %.Lt_0339
.Lt_0339:
	ret void
}

define private void @_ZN7CPU6510aSERKS_( %CPU6510* %THIS.498$, %CPU6510* %__FB_RHS__.499$ ) nounwind
{

	; paramvar THIS
	%THIS.498 = alloca %CPU6510*
	store %CPU6510* %THIS.498$, %CPU6510** %THIS.498

	; paramvar __FB_RHS__
	%__FB_RHS__.499 = alloca %CPU6510*
	store %CPU6510* %__FB_RHS__.499$, %CPU6510** %__FB_RHS__.499

	; localvar LT_03AD
	%LT_03AD.500 = alloca i64

	; localvar LT_03AF
	%LT_03AF.501 = alloca %OPCODE*

	; localvar LT_03B0
	%LT_03B0.502 = alloca %OPCODE*

	; localvar LT_03B1
	%LT_03B1.503 = alloca i64

	; localvar LT_03B3
	%LT_03B3.504 = alloca %FBSTRING*

	; localvar LT_03B4
	%LT_03B4.505 = alloca %FBSTRING*

	; label .Lt_03AB
	br label %.Lt_03AB
.Lt_03AB:
	%vr1 = load %CPU6510*, %CPU6510** %THIS.498
	%vr0 = bitcast %CPU6510* %vr1 to i8*

	; addrof vr0
	%vr3 = ptrtoint i8* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i8*
	%vr6 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr5 = bitcast %CPU6510* %vr6 to i8*

	; addrof vr5
	%vr8 = ptrtoint i8* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to i8*

	; memmove vr4 <= vr9
	%vr10 = bitcast i8* %vr4 to i8*
	%vr11 = bitcast i8* %vr9 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr10, i8* %vr11, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr13 = load %CPU6510*, %CPU6510** %THIS.498
	%vr14 = inttoptr i64 8 to %CPU6510*
	%vr12 = add %CPU6510* %vr13, %vr14
	%vr15 = bitcast %CPU6510* %vr12 to i8*

	; addrof vr15
	%vr17 = ptrtoint i8* %vr15 to i64
	%vr18 = inttoptr i64 %vr17 to i8*

	; bop __FB_RHS__ + 8
	%vr20 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr21 = bitcast %CPU6510* %vr20 to %CPU6510*
	%vr22 = inttoptr i64 8 to %CPU6510*
	%vr19 = add %CPU6510* %vr21, %vr22
	%vr23 = bitcast %CPU6510* %vr19 to i8*

	; addrof vr23
	%vr25 = ptrtoint i8* %vr23 to i64
	%vr26 = inttoptr i64 %vr25 to i8*

	; memmove vr18 <= vr26
	%vr27 = bitcast i8* %vr18 to i8*
	%vr28 = bitcast i8* %vr26 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr27, i8* %vr28, i32 1, i32 1, i1 false )

	; bop THIS + 9
	%vr30 = load %CPU6510*, %CPU6510** %THIS.498
	%vr31 = inttoptr i64 9 to %CPU6510*
	%vr29 = add %CPU6510* %vr30, %vr31
	%vr32 = bitcast %CPU6510* %vr29 to i8*

	; addrof vr32
	%vr34 = ptrtoint i8* %vr32 to i64
	%vr35 = inttoptr i64 %vr34 to i8*

	; bop __FB_RHS__ + 9
	%vr37 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr38 = bitcast %CPU6510* %vr37 to %CPU6510*
	%vr39 = inttoptr i64 9 to %CPU6510*
	%vr36 = add %CPU6510* %vr38, %vr39
	%vr40 = bitcast %CPU6510* %vr36 to i8*

	; addrof vr40
	%vr42 = ptrtoint i8* %vr40 to i64
	%vr43 = inttoptr i64 %vr42 to i8*

	; memmove vr35 <= vr43
	%vr44 = bitcast i8* %vr35 to i8*
	%vr45 = bitcast i8* %vr43 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr44, i8* %vr45, i32 1, i32 1, i1 false )

	; bop THIS + 10
	%vr47 = load %CPU6510*, %CPU6510** %THIS.498
	%vr48 = inttoptr i64 10 to %CPU6510*
	%vr46 = add %CPU6510* %vr47, %vr48
	%vr49 = bitcast %CPU6510* %vr46 to i8*

	; addrof vr49
	%vr51 = ptrtoint i8* %vr49 to i64
	%vr52 = inttoptr i64 %vr51 to i8*

	; bop __FB_RHS__ + 10
	%vr54 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr55 = bitcast %CPU6510* %vr54 to %CPU6510*
	%vr56 = inttoptr i64 10 to %CPU6510*
	%vr53 = add %CPU6510* %vr55, %vr56
	%vr57 = bitcast %CPU6510* %vr53 to i8*

	; addrof vr57
	%vr59 = ptrtoint i8* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to i8*

	; memmove vr52 <= vr60
	%vr61 = bitcast i8* %vr52 to i8*
	%vr62 = bitcast i8* %vr60 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr61, i8* %vr62, i32 1, i32 1, i1 false )

	; bop THIS + 12
	%vr64 = load %CPU6510*, %CPU6510** %THIS.498
	%vr65 = inttoptr i64 12 to %CPU6510*
	%vr63 = add %CPU6510* %vr64, %vr65
	%vr66 = bitcast %CPU6510* %vr63 to i16*

	; addrof vr66
	%vr68 = ptrtoint i16* %vr66 to i64
	%vr69 = inttoptr i64 %vr68 to i16*

	; bop __FB_RHS__ + 12
	%vr71 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr72 = bitcast %CPU6510* %vr71 to %CPU6510*
	%vr73 = inttoptr i64 12 to %CPU6510*
	%vr70 = add %CPU6510* %vr72, %vr73
	%vr74 = bitcast %CPU6510* %vr70 to i16*

	; addrof vr74
	%vr76 = ptrtoint i16* %vr74 to i64
	%vr77 = inttoptr i64 %vr76 to i16*

	; memmove vr69 <= vr77
	%vr78 = bitcast i16* %vr69 to i8*
	%vr79 = bitcast i16* %vr77 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr78, i8* %vr79, i32 2, i32 1, i1 false )

	; bop THIS + 14
	%vr81 = load %CPU6510*, %CPU6510** %THIS.498
	%vr82 = inttoptr i64 14 to %CPU6510*
	%vr80 = add %CPU6510* %vr81, %vr82
	%vr83 = bitcast %CPU6510* %vr80 to i16*

	; addrof vr83
	%vr85 = ptrtoint i16* %vr83 to i64
	%vr86 = inttoptr i64 %vr85 to i16*

	; bop __FB_RHS__ + 14
	%vr88 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr89 = bitcast %CPU6510* %vr88 to %CPU6510*
	%vr90 = inttoptr i64 14 to %CPU6510*
	%vr87 = add %CPU6510* %vr89, %vr90
	%vr91 = bitcast %CPU6510* %vr87 to i16*

	; addrof vr91
	%vr93 = ptrtoint i16* %vr91 to i64
	%vr94 = inttoptr i64 %vr93 to i16*

	; memmove vr86 <= vr94
	%vr95 = bitcast i16* %vr86 to i8*
	%vr96 = bitcast i16* %vr94 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr95, i8* %vr96, i32 2, i32 1, i1 false )

	; bop __FB_RHS__ + 16
	%vr98 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr99 = bitcast %CPU6510* %vr98 to %CPU6510*
	%vr100 = inttoptr i64 16 to %CPU6510*
	%vr97 = add %CPU6510* %vr99, %vr100
	%vr101 = bitcast %CPU6510* %vr97 to %MEMORY_T**

	; bop THIS + 16
	%vr103 = load %CPU6510*, %CPU6510** %THIS.498
	%vr104 = inttoptr i64 16 to %CPU6510*
	%vr102 = add %CPU6510* %vr103, %vr104
	%vr105 = bitcast %CPU6510* %vr102 to %MEMORY_T**

	; store vr105 := vr101
	%vr106 = ptrtoint %MEMORY_T** %vr101 to i64
	%vr107 = inttoptr i64 %vr106 to %MEMORY_T**
	%vr108 = load %MEMORY_T*, %MEMORY_T** %vr107
	%vr109 = ptrtoint %MEMORY_T** %vr105 to i64
	%vr110 = inttoptr i64 %vr109 to %MEMORY_T**
	store %MEMORY_T* %vr108, %MEMORY_T** %vr110

	; bop THIS + 24
	%vr112 = load %CPU6510*, %CPU6510** %THIS.498
	%vr113 = inttoptr i64 24 to %CPU6510*
	%vr111 = add %CPU6510* %vr112, %vr113
	%vr114 = bitcast %CPU6510* %vr111 to %OPCODE*

	; addrof vr114
	%vr116 = ptrtoint %OPCODE* %vr114 to i64
	%vr117 = inttoptr i64 %vr116 to %OPCODE*

	; bop __FB_RHS__ + 24
	%vr119 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr120 = bitcast %CPU6510* %vr119 to %CPU6510*
	%vr121 = inttoptr i64 24 to %CPU6510*
	%vr118 = add %CPU6510* %vr120, %vr121
	%vr122 = bitcast %CPU6510* %vr118 to %OPCODE*

	; addrof vr122
	%vr124 = ptrtoint %OPCODE* %vr122 to i64
	%vr125 = inttoptr i64 %vr124 to %OPCODE*

	; memmove vr117 <= vr125
	%vr126 = bitcast %OPCODE* %vr117 to i8*
	%vr127 = bitcast %OPCODE* %vr125 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr126, i8* %vr127, i32 56, i32 1, i1 false )

	; bop THIS + 80
	%vr129 = load %CPU6510*, %CPU6510** %THIS.498
	%vr130 = inttoptr i64 80 to %CPU6510*
	%vr128 = add %CPU6510* %vr129, %vr130
	%vr131 = bitcast %CPU6510* %vr128 to %OPCODE*

	; addrof vr131
	%vr133 = ptrtoint %OPCODE* %vr131 to i64
	%vr134 = inttoptr i64 %vr133 to %OPCODE*

	; store LT_03AF := vr134
	store %OPCODE* %vr134, %OPCODE** %LT_03AF.501

	; bop __FB_RHS__ + 80
	%vr136 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr137 = bitcast %CPU6510* %vr136 to %CPU6510*
	%vr138 = inttoptr i64 80 to %CPU6510*
	%vr135 = add %CPU6510* %vr137, %vr138
	%vr139 = bitcast %CPU6510* %vr135 to %OPCODE*

	; addrof vr139
	%vr141 = ptrtoint %OPCODE* %vr139 to i64
	%vr142 = inttoptr i64 %vr141 to %OPCODE*

	; store LT_03B0 := vr142
	store %OPCODE* %vr142, %OPCODE** %LT_03B0.502

	; store LT_03AD := 0
	store i64 0, i64* %LT_03AD.500

	; label .Lt_03AE
	br label %.Lt_03AE
.Lt_03AE:

	; memmove LT_03AF <= LT_03B0
	%vr143 = load %OPCODE*, %OPCODE** %LT_03AF.501
	%vr144 = load %OPCODE*, %OPCODE** %LT_03B0.502
	%vr145 = bitcast %OPCODE* %vr143 to i8*
	%vr146 = bitcast %OPCODE* %vr144 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr145, i8* %vr146, i32 56, i32 1, i1 false )

	; bop LT_03AF + 56
	%vr148 = load %OPCODE*, %OPCODE** %LT_03AF.501
	%vr149 = inttoptr i64 56 to %OPCODE*
	%vr147 = add %OPCODE* %vr148, %vr149

	; store LT_03AF := vr147
	store %OPCODE* %vr147, %OPCODE** %LT_03AF.501

	; bop LT_03B0 + 56
	%vr151 = load %OPCODE*, %OPCODE** %LT_03B0.502
	%vr152 = inttoptr i64 56 to %OPCODE*
	%vr150 = add %OPCODE* %vr151, %vr152

	; store LT_03B0 := vr150
	store %OPCODE* %vr150, %OPCODE** %LT_03B0.502

	; bop LT_03AD + 1
	%vr154 = load i64, i64* %LT_03AD.500
	%vr153 = add i64 %vr154, 1

	; store LT_03AD := vr153
	store i64 %vr153, i64* %LT_03AD.500

	; branchbop LT_03AD <> 256
	%vr156 = load i64, i64* %LT_03AD.500
	%vr155 = icmp ne i64 %vr156, 256
	br i1 %vr155, label %.Lt_03AE, label %.Lt_1B1C
.Lt_1B1C:

	; bop THIS + 14416
	%vr158 = load %CPU6510*, %CPU6510** %THIS.498
	%vr159 = inttoptr i64 14416 to %CPU6510*
	%vr157 = add %CPU6510* %vr158, %vr159
	%vr160 = bitcast %CPU6510* %vr157 to %FBSTRING*

	; addrof vr160
	%vr162 = ptrtoint %FBSTRING* %vr160 to i64
	%vr163 = inttoptr i64 %vr162 to %FBSTRING*

	; store LT_03B3 := vr163
	store %FBSTRING* %vr163, %FBSTRING** %LT_03B3.504

	; bop __FB_RHS__ + 14416
	%vr165 = load %CPU6510*, %CPU6510** %__FB_RHS__.499
	%vr166 = bitcast %CPU6510* %vr165 to %CPU6510*
	%vr167 = inttoptr i64 14416 to %CPU6510*
	%vr164 = add %CPU6510* %vr166, %vr167
	%vr168 = bitcast %CPU6510* %vr164 to %FBSTRING*

	; addrof vr168
	%vr170 = ptrtoint %FBSTRING* %vr168 to i64
	%vr171 = inttoptr i64 %vr170 to %FBSTRING*

	; store LT_03B4 := vr171
	store %FBSTRING* %vr171, %FBSTRING** %LT_03B4.505

	; store LT_03B1 := 0
	store i64 0, i64* %LT_03B1.503

	; label .Lt_03B2
	br label %.Lt_03B2
.Lt_03B2:
	%vr173 = load %FBSTRING*, %FBSTRING** %LT_03B4.505
	%vr172 = bitcast %FBSTRING* %vr173 to i8*
	%vr175 = load %FBSTRING*, %FBSTRING** %LT_03B3.504
	%vr174 = bitcast %FBSTRING* %vr175 to i8*

	; call fb_StrAssign()
	; arg vr174
	; arg -1
	; arg vr172
	; arg -1
	; arg 0
	%vr176 = call %FBSTRING* @fb_StrAssign( i8* %vr174, i64 -1, i8* %vr172, i64 -1, i32 0 )

	; bop LT_03B3 + 24
	%vr181 = load %FBSTRING*, %FBSTRING** %LT_03B3.504
	%vr182 = inttoptr i64 24 to %FBSTRING*
	%vr180 = add %FBSTRING* %vr181, %vr182

	; store LT_03B3 := vr180
	store %FBSTRING* %vr180, %FBSTRING** %LT_03B3.504

	; bop LT_03B4 + 24
	%vr184 = load %FBSTRING*, %FBSTRING** %LT_03B4.505
	%vr185 = inttoptr i64 24 to %FBSTRING*
	%vr183 = add %FBSTRING* %vr184, %vr185

	; store LT_03B4 := vr183
	store %FBSTRING* %vr183, %FBSTRING** %LT_03B4.505

	; bop LT_03B1 + 1
	%vr187 = load i64, i64* %LT_03B1.503
	%vr186 = add i64 %vr187, 1

	; store LT_03B1 := vr186
	store i64 %vr186, i64* %LT_03B1.503

	; branchbop LT_03B1 <> 13
	%vr189 = load i64, i64* %LT_03B1.503
	%vr188 = icmp ne i64 %vr189, 13
	br i1 %vr188, label %.Lt_03B2, label %.Lt_1B1D
.Lt_1B1D:

	; label .Lt_03AC
	br label %.Lt_03AC
.Lt_03AC:
	ret void
}
