%FBSTRING = type { i8*, i64, i64 }
	%__FB_ARRAYDIMTB$ = type { i64, i64, i64 }
%SHADERTOY = type { i32, i32, %FBSTRING }
%MEMORY_T = type { [65535 x double], [16384 x double], [16384 x double], [16384 x double], [1000 x double] }
%FLAGS = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%MULTI = type { i8*, i8*, double, double, i64, i64, float, float, i32, i32, i16, i16, i8, i8, i8, i8 }
%OPCODE = type { i64, [4 x i8], i64, i64, i64, %MULTI, void ( %CPU6510* )* }
%CPU6510 = type { i8, %FLAGS, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, %MEMORY_T*, %OPCODE, [256 x %OPCODE], [13 x %FBSTRING] }
%C64_T = type { %MEMORY_T*, %CPU6510* }
	%VEC3 = type { float, float, float }
	%__FB_DATADESC$ = type <{ i16, i8* }>
	%FBARRAY = type { i8*, i8*, i64, i64, i64, [8 x %__FB_ARRAYDIMTB$] }
declare void @llvm.memset.p0i8.i32(i8*, i8, i32, i32, i1) nounwind
declare void @llvm.memmove.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1) nounwind
declare double @llvm.floor.f64(double) nounwind
declare double @llvm.nearbyint.f64(double) nounwind

declare void @fb_ArrayDestructStr( %FBARRAY* ) nounwind
declare i32 @fb_Locate( i32, i32, i32, i32, i32 ) nounwind
declare void @fb_Cls( i32 ) nounwind
declare i32 @fb_Color( i32, i32, i32 ) nounwind
declare %FBSTRING* @fb_Inkey(  ) nounwind naked
declare i32 @fb_PageCopy( i32, i32 ) nounwind
declare void @fb_DataRestore( i8* ) nounwind
declare void @fb_DataReadStr( i8*, i64, i32 ) nounwind
declare void @fb_DataReadLongint( i64* ) nounwind
declare void @fb_DataReadULongint( i64* ) nounwind
declare i32 @fb_FileOpen( %FBSTRING*, i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_FileClose( i32 ) nounwind
declare i32 @fb_FilePutLarge( i32, i64, i8*, i64 ) nounwind
declare i32 @fb_FileGetLarge( i32, i64, i8*, i64 ) nounwind
declare i32 @fb_FileLineInput( i32, i8*, i64, i32 ) nounwind
declare i32 @fb_ConsoleInput( %FBSTRING*, i32, i32 ) nounwind
declare i32 @fb_InputString( i8*, i64, i32 ) nounwind
declare i32 @fb_FileFree(  ) nounwind
declare i32 @fb_FileEof( i32 ) nounwind
declare i64 @fb_FileSize( i32 ) nounwind
declare void @fb_GfxPset( i8*, float, float, i32, i32, i32 ) nounwind
declare void @fb_GfxLine( i8*, float, float, float, float, i32, i32, i32, i32 ) nounwind
declare void @fb_GfxPaint( i8*, float, float, i32, i32, %FBSTRING*, i32, i32 ) nounwind
declare i64 @fb_GfxDrawString( i8*, float, float, i32, %FBSTRING*, i32, i8*, i32, i8*, i8*, i8* ) nounwind
declare void @fb_GfxPalette( i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxScreen( i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxScreenRes( i32, i32, i32, i32, i32, i32 ) nounwind
declare i32 @fb_GfxFlip( i32, i32 ) nounwind
declare void @fb_GfxLock(  ) nounwind
declare void @fb_GfxUnlock( i32, i32 ) nounwind
declare i8* @fb_GfxScreenPtr(  ) nounwind
declare void @fb_GfxSetWindowTitle( %FBSTRING* ) nounwind
declare i32 @fb_GetMouse64( i64*, i64*, i64*, i64*, i64* ) nounwind
declare void @fb_GfxScreenInfo( i64*, i64*, i64*, i64*, i64*, i64*, %FBSTRING* ) nounwind
declare i32 @fb_GfxScreenList( i32 ) nounwind
declare i8* @fb_GfxImageCreate( i32, i32, i32, i32, i32 ) nounwind
declare void @fb_GfxImageDestroy( i8* ) nounwind
declare i32 @fb_GfxImageInfo( i8*, i64*, i64*, i64*, i64*, i8**, i64* ) nounwind
declare void @fb_GfxControl_i( i32, i64*, i64*, i64*, i64* ) nounwind
declare i8* @fb_GfxGetGLProcAddress( i8* ) nounwind
declare double @fb_Rnd( float ) nounwind
declare i64 @llabs( i64 ) nounwind
declare i64 @fb_GetMemAvail( i32 ) nounwind
declare i8* @malloc( i64 ) nounwind
declare void @free( i8* ) nounwind
declare void @fb_PrintVoid( i32, i32 ) nounwind
declare void @fb_PrintString( i32, %FBSTRING*, i32 ) nounwind
declare %FBSTRING* @fb_StrInit( i8*, i64, i8*, i64, i32 ) nounwind
declare %FBSTRING* @fb_StrAssign( i8*, i64, i8*, i64, i32 ) nounwind
declare void @fb_StrDelete( %FBSTRING* ) nounwind
declare %FBSTRING* @fb_StrConcat( %FBSTRING*, i8*, i64, i8*, i64 ) nounwind
declare i32 @fb_StrCompare( i8*, i64, i8*, i64 ) nounwind
declare %FBSTRING* @fb_StrConcatAssign( i8*, i64, i8*, i64, i32 ) nounwind
declare %FBSTRING* @fb_StrAllocTempResult( %FBSTRING* ) nounwind
declare %FBSTRING* @fb_StrAllocTempDescZEx( i8*, i64 ) nounwind
declare %FBSTRING* @fb_LongintToStr( i64 ) nounwind
declare %FBSTRING* @fb_ULongintToStr( i64 ) nounwind
declare %FBSTRING* @fb_DoubleToStr( double ) nounwind
declare %FBSTRING* @fb_StrMid( %FBSTRING*, i64, i64 ) nounwind
declare i64 @fb_StrLen( i8*, i64 ) nounwind
declare i32 @fb_ASC( %FBSTRING*, i64 ) nounwind
declare %FBSTRING* @fb_CHR( i32, ... ) nounwind
declare %FBSTRING* @fb_HEXEx_b( i8, i32 ) nounwind naked
declare %FBSTRING* @fb_HEXEx_s( i16, i32 ) nounwind naked
declare %FBSTRING* @fb_SPACE( i64 ) nounwind naked
declare %FBSTRING* @fb_StrLcase2( %FBSTRING*, i32 ) nounwind
declare void @fb_End( i32 ) nounwind
declare double @fb_Timer(  ) nounwind
declare i32 @fb_Shell( %FBSTRING* ) nounwind
declare i32 @fb_Chain( %FBSTRING* ) nounwind
declare void @fb_Sleep( i32 ) nounwind
declare void @fb_Beep(  ) nounwind
declare void @glRectf( float, float, float, float ) nounwind
declare void @glTexParameteri( i32, i32, i32 ) nounwind
declare void @glTexImage2D( i32, i32, i32, i32, i32, i32, i32, i32, i8* ) nounwind
declare void @glGenTextures( i32, i32* ) nounwind
declare void @glBindTexture( i32, i32 ) nounwind
declare void @glActiveTexture( i32 ) nounwind

%fb_RTTI$ = type { i8*, i8*, %fb_RTTI$* }
@__fb_ZTS6Object = global %fb_RTTI$ zeroinitializer
@Lt_0000 = private constant [1 x i8] c"\00"
@SWCH = global double zeroinitializer
@MR = global i32 zeroinitializer
@OFFSET = global i32 zeroinitializer
@SYS_OFFSET = global i32 zeroinitializer
@IMAGE = global i8* zeroinitializer
@STRCODE = global %FBSTRING zeroinitializer
@FILENAME = global %FBSTRING zeroinitializer
@Lt_0250 = private constant [18 x i8] c"press any key ...\00"
@GLCREATESHADER = global i32 ( i32 )* zeroinitializer
@GLDELETESHADER = global void ( i32 )* zeroinitializer
@GLSHADERSOURCE = global void ( i32, i32, i8**, i32* )* zeroinitializer
@GLCOMPILESHADER = global void ( i32 )* zeroinitializer
@GLGETSHADERIV = global void ( i32, i32, i32* )* zeroinitializer
@GLGETSHADERINFOLOG = global void ( i32, i32, i32*, i8* )* zeroinitializer
@GLCREATEPROGRAM = global i32 (  )* zeroinitializer
@GLDELETEPROGRAM = global void ( i32 )* zeroinitializer
@GLATTACHSHADER = global void ( i32, i32 )* zeroinitializer
@GLDETACHSHADER = global void ( i32, i32 )* zeroinitializer
@GLLINKPROGRAM = global void ( i32 )* zeroinitializer
@GLGETPROGRAMIV = global void ( i32, i32, i32* )* zeroinitializer
@GLGETPROGRAMINFOLOG = global void ( i32, i32, i32*, i8* )* zeroinitializer
@GLUSEPROGRAM = global void ( i32 )* zeroinitializer
@GLGETUNIFORMLOCATION = global i32 ( i32, i8* )* zeroinitializer
@GLUNIFORM1F = global void ( i32, float )* zeroinitializer
@GLUNIFORM2F = global void ( i32, float, float )* zeroinitializer
@GLUNIFORM3F = global void ( i32, float, float, float )* zeroinitializer
@GLUNIFORM3FV = global void ( i32, i32, float* )* zeroinitializer
@GLUNIFORM4F = global void ( i32, float, float, float, float )* zeroinitializer
@GLUNIFORM4FV = global void ( i32, i32, float* )* zeroinitializer
@GLUNIFORM1I = global void ( i32, i32 )* zeroinitializer
@Lt_0290 = private constant [11 x i8] c"screenres(\00"
@Lt_0291 = private constant [2 x i8] c",\00"
@Lt_0292 = private constant [11 x i8] c") failed !\00"
@Lt_0298 = private constant [15 x i8] c"glCreateShader\00"
@Lt_029C = private constant [15 x i8] c"glDeleteShader\00"
@Lt_02A0 = private constant [15 x i8] c"glShaderSource\00"
@Lt_02A4 = private constant [16 x i8] c"glCompileShader\00"
@Lt_02A8 = private constant [14 x i8] c"glGetShaderiv\00"
@Lt_02AC = private constant [19 x i8] c"glGetShaderInfoLog\00"
@Lt_02B0 = private constant [16 x i8] c"glCreateProgram\00"
@Lt_02B4 = private constant [16 x i8] c"glDeleteProgram\00"
@Lt_02B8 = private constant [15 x i8] c"glAttachShader\00"
@Lt_02BC = private constant [15 x i8] c"glDetachShader\00"
@Lt_02C0 = private constant [14 x i8] c"glLinkProgram\00"
@Lt_02C4 = private constant [15 x i8] c"glGetProgramiv\00"
@Lt_02C8 = private constant [20 x i8] c"glGetProgramInfoLog\00"
@Lt_02CC = private constant [13 x i8] c"glUseProgram\00"
@Lt_02D0 = private constant [21 x i8] c"glGetUniformLocation\00"
@Lt_02D4 = private constant [12 x i8] c"glUniform1i\00"
@Lt_02D8 = private constant [12 x i8] c"glUniform1f\00"
@Lt_02DC = private constant [12 x i8] c"glUniform3f\00"
@Lt_02E0 = private constant [13 x i8] c"glUniform3fv\00"
@Lt_02E4 = private constant [12 x i8] c"glUniform4f\00"
@Lt_02E8 = private constant [13 x i8] c"glUniform4fv\00"
@Lt_02EC = private constant [38 x i8] c"load and compile shader pese wait ...\00"
@Lt_0349 = private constant [2 x i8] c"\22\00"
@Lt_034A = private constant [21 x i8] c"can't read shader: \22\00"
@Lt_034B = private constant [3 x i8] c" !\00"
@Lt_0351 = private constant [2 x i8] c"\0A\00"
@Lt_0359 = private constant [14 x i8] c"#version 460\0A\00"
@Lt_035A = private constant [32 x i8] c"uniform float     iGlobalTime;\0A\00"
@Lt_035B = private constant [26 x i8] c"uniform float     iTime;\0A\00"
@Lt_035C = private constant [32 x i8] c"uniform vec3      iResolution;\0A\00"
@Lt_035D = private constant [31 x i8] c"uniform float     iTimeDelta;\0A\00"
@Lt_035E = private constant [31 x i8] c"uniform float     iFrameRate;\0A\00"
@Lt_035F = private constant [27 x i8] c"uniform int       iFrame;\0A\00"
@Lt_0360 = private constant [36 x i8] c"uniform float     iChannelTime[4];\0A\00"
@Lt_0361 = private constant [42 x i8] c"uniform vec3      iChannelResolution[4];\0A\00"
@Lt_0362 = private constant [32 x i8] c"uniform float     iSampleRate;\0A\00"
@Lt_0363 = private constant [27 x i8] c"uniform vec4      iMouse;\0A\00"
@Lt_0364 = private constant [26 x i8] c"uniform vec4      iDate;\0A\00"
@Lt_0365 = private constant [30 x i8] c"uniform sampler2D iChannel0;\0A\00"
@Lt_0366 = private constant [30 x i8] c"uniform sampler2D iChannel1;\0A\00"
@Lt_0367 = private constant [30 x i8] c"uniform sampler2D iChannel2;\0A\00"
@Lt_0368 = private constant [30 x i8] c"uniform sampler2D iChannel3;\0A\00"
@Lt_0369 = private constant [28 x i8] c"uniform samplerCube iCube;\0A\00"
@Lt_036C = private constant [15 x i8] c"void main() {\0A\00"
@Lt_036D = private constant [15 x i8] c"  vec4 color;\0A\00"
@Lt_036E = private constant [23 x i8] c"  // call user shader\0A\00"
@Lt_036F = private constant [38 x i8] c"  mainImage(color, gl_FragCoord.xy);\0A\00"
@Lt_0370 = private constant [18 x i8] c"  color.w = 1.0;\0A\00"
@Lt_0371 = private constant [25 x i8] c"  gl_FragColor = color;\0A\00"
@Lt_0372 = private constant [3 x i8] c"}\0A\00"
@Lt_0373 = private constant [29 x i8] c"#define main_image mainImage\00"
@Lt_0374 = private constant [29 x i8] c"#define frag_color fragColor\00"
@Lt_0375 = private constant [29 x i8] c"#define frag_coord fragCoord\00"
@Lt_0376 = private constant [33 x i8] c"#define i_resolution iResolution\00"
@Lt_0377 = private constant [21 x i8] c"#define i_time iTime\00"
@Lt_0378 = private constant [39 x i8] c"  main_image(color, gl_FragCoord.xy);\0A\00"
@Lt_037D = private constant [44 x i8] c"glCreateShader(GL_FRAGMENT_SHADER) failed !\00"
@Lt_0380 = private constant [42 x i8] c"glCompileShader(FragmentShader) failed !\0A\00"
@Lt_0384 = private constant [27 x i8] c"glCreateProgram() failed !\00"
@Lt_0387 = private constant [26 x i8] c"glLinkProgram() failed !\0A\00"
@SPR0 = global i8* zeroinitializer
@SPR1 = global i8* zeroinitializer
@SPR2 = global i8* zeroinitializer
@SPR3 = global i8* zeroinitializer
@SPR4 = global i8* zeroinitializer
@SPR5 = global i8* zeroinitializer
@SPR6 = global i8* zeroinitializer
@SPR7 = global i8* zeroinitializer
@RASTER = global i8* zeroinitializer
@UFLAG = global i8 zeroinitializer
@UPDATEDSCREEN = global i16 zeroinitializer
@Lt_03BA = private constant [8 x i8] c"1644829\00"
@Lt_03BB = private constant [9 x i8] c"16579833\00"
@Lt_03BC = private constant [8 x i8] c"5018426\00"
@Lt_03BD = private constant [9 x i8] c"16430842\00"
@Lt_03C1 = private constant [9 x i8] c"15585917\00"
@Lt_03C2 = private constant [8 x i8] c"7301839\00"
@Lt_03C3 = private constant [9 x i8] c"14176068\00"
@Lt_03C4 = private constant [8 x i8] c"9174011\00"
@Lt_03C8 = private constant [8 x i8] c"6019228\00"
@Lt_03C9 = private constant [7 x i8] c"491347\00"
@Lt_03CA = private constant [9 x i8] c"10481539\00"
@Lt_03CB = private constant [8 x i8] c"5461847\00"
@Lt_03CF = private constant [9 x i8] c"10986407\00"
@Lt_03D0 = private constant [9 x i8] c"12564475\00"
@Lt_03D1 = private constant [9 x i8] c"16753559\00"
@Lt_03D2 = private constant [9 x i8] c"15200233\00"
@Lt_03EA = private constant [18 x i8] c"64c.251913-01.bin\00"
@Lt_03F7 = private constant [18 x i8] c"./chargen/641.c64\00"
@Lt_0403 = private constant [12 x i8] c" RAM SYSTEM\00"
@Lt_04CC = private constant [36 x i8] c"mplayer -vo xv -fs -alang en dvd://\00"
@Lt_04CD = private constant [22 x i8] c" -dvd-device /dev/sr0\00"
@Lt_04D2 = private constant [67 x i8] c"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0\00"
@Lt_051F = private constant [23 x i8] c"./shaders/pc/demo.glsl\00"
@Lt_0522 = private constant [7 x i8] c"file: \00"
@Lt_0523 = private constant [3 x i8] c"\0A\0A\00"
@Lt_0528 = private constant [8 x i8] c" ok ...\00"
@Lt_0543 = private constant [10 x i8] c"FreeBASIC\00"
@Lt_0544 = private constant [14 x i8] c"Shadertoy.com\00"
@Lt_054F = private constant [10 x i8] c"iChannel0\00"
@Lt_0552 = private constant [12 x i8] c"iGlobalTime\00"
@Lt_0553 = private constant [6 x i8] c"iTime\00"
@Lt_0554 = private constant [12 x i8] c"iResolution\00"
@Lt_0555 = private constant [7 x i8] c"iMouse\00"
@Lt_0556 = private constant [7 x i8] c"iFrame\00"
@Lt_056E = private constant [7 x i8] c" fps: \00"
@Lt_057A = private constant [9 x i8] c"tmp.glsl\00"
@Lt_057B = private constant [19 x i8] c"// The MIT License\00"
@Lt_057C = private constant [75 x i8] c"// Dartmouth BASIC Copyright \C2\A9 1964-1979 John G. Kem\C3\A9ny, Thomas E. Kurtz\00"
@Lt_057D = private constant [72 x i8] c"// Microsoft BASIC      Copyright \C2\A9 1975-present Microsoft Corporation\00"
@Lt_057E = private constant [79 x i8] c"// Commodore KERNAL ROM Copyright \C2\A9 1977-1994 Commodore International Limited\00"
@Lt_057F = private constant [53 x i8] c"//                      Copyright \C2\A9 1995-1996 Escom\00"
@Lt_0580 = private constant [66 x i8] c"//                      Copyright \C2\A9 1997-2008 Tulip Computers NV\00"
@Lt_0581 = private constant [59 x i8] c"//                      Copyright \C2\A9 2008-2009 Nedfield NV\00"
@Lt_0582 = private constant [68 x i8] c"// MOS Technology 6510  Copyright \C2\A9 1982-2001 MOS Technology, Inc.\00"
@Lt_0583 = private constant [60 x i8] c"// OpenGL Shading Language Copyright \C2\A9 2004-2006 OpenGLARB\00"
@Lt_0584 = private constant [69 x i8] c"//    \09\09    \09      Copyright \C2\A9 2006-present The Khronos Group, Inc.\00"
@Lt_0585 = private constant [70 x i8] c"// FreeBASIC Copyright \C2\A9 2004-present The FreeBASIC Development Team\00"
@Lt_0586 = private constant [67 x i8] c"// Shadertoy Copyright \C2\A9 2013-present Inigo Quilez & Pol Jeremias\00"
@Lt_0587 = private constant [60 x i8] c"// Project Manhattan Copyright \C2\A9 2019-present Jacob Dahlen\00"
@Lt_0588 = private constant [64 x i8] c"// Permission is hereby granted, free of charge, to any person \00"
@Lt_0589 = private constant [67 x i8] c"// obtaining a copy of this software and associated documentation \00"
@Lt_058A = private constant [72 x i8] c"// files (the 'Software'), to deal in the Software without restriction,\00"
@Lt_058B = private constant [73 x i8] c"// including without limitation the rights to use, copy, modify, merge, \00"
@Lt_058C = private constant [73 x i8] c"// publish, distribute, sublicense, and/or sell copies of the Software, \00"
@Lt_058D = private constant [70 x i8] c"// and to permit persons to whom the Software is furnished to do so, \00"
@Lt_058E = private constant [71 x i8] c"// subject to the following conditions: The above copyright notice and\00"
@Lt_058F = private constant [61 x i8] c"// this permission notice shall be included in all copies or\00"
@Lt_0590 = private constant [41 x i8] c"// substantial portions of the Software.\00"
@Lt_0591 = private constant [67 x i8] c"// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\00"
@Lt_0592 = private constant [67 x i8] c"// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\00"
@Lt_0593 = private constant [60 x i8] c"// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\00"
@Lt_0594 = private constant [63 x i8] c"// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\00"
@Lt_0595 = private constant [64 x i8] c"// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\00"
@Lt_0596 = private constant [70 x i8] c"// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\00"
@Lt_0597 = private constant [65 x i8] c"// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\00"
@Lt_0598 = private constant [29 x i8] c"// DEALINGS IN THE SOFTWARE.\00"
@Lt_0599 = private constant [22 x i8] c"#if HW_PERFORMANCE==0\00"
@Lt_059A = private constant [13 x i8] c"#define AA 1\00"
@Lt_059B = private constant [6 x i8] c"#else\00"
@Lt_059C = private constant [26 x i8] c"#define AA 2             \00"
@Lt_059D = private constant [7 x i8] c"#endif\00"
@Lt_059E = private constant [29 x i8] c"#define ZERO (min(iFrame,0))\00"
@Lt_059F = private constant [19 x i8] c"#define SAMPLES 32\00"
@Lt_05A0 = private constant [20 x i8] c"#define MAXDEPTH 10\00"
@Lt_05A1 = private constant [7 x i8] c"#if 1 \00"
@Lt_05A2 = private constant [26 x i8] c"#define INVERSEAO 1      \00"
@Lt_05A3 = private constant [26 x i8] c"#define MINWEIGHTMODE 0  \00"
@Lt_05A4 = private constant [25 x i8] c"#define WEIGHTMODE 1    \00"
@Lt_05A5 = private constant [20 x i8] c"#define INVERSEAO 0\00"
@Lt_05A6 = private constant [24 x i8] c"#define MINWEIGHTMODE 1\00"
@Lt_05A7 = private constant [21 x i8] c"#define WEIGHTMODE 0\00"
@Lt_05A8 = private constant [87 x i8] c"#define PI 3.1415926535897932384626433832795028841971693993751058209749445923078164062\00"
@Lt_05A9 = private constant [33 x i8] c"#define OBJECT_MAP_FUNCTION map1\00"
@Lt_05AA = private constant [18 x i8] c"#define RECURSION\00"
@Lt_05AB = private constant [22 x i8] c"#define RAY_COUNT 15 \00"
@Lt_05AC = private constant [28 x i8] c"#define calcRecursion rec4 \00"
@Lt_05AD = private constant [27 x i8] c"#define DIST_EPSILON 0.005\00"
@Lt_05AE = private constant [19 x i8] c"#define ID_SKY 3.0\00"
@Lt_05AF = private constant [21 x i8] c"#define ID_FLOOR 1.0\00"
@Lt_05B0 = private constant [23 x i8] c"#define ID_LIGHT 1.001\00"
@Lt_05B1 = private constant [28 x i8] c"#define ID_GLASS_WALL 2.000\00"
@Lt_05B2 = private constant [17 x i8] c"#define ETA 0.75\00"
@Lt_05B3 = private constant [16 x i8] c"#define M_PI PI\00"
@Lt_05B4 = private constant [24 x i8] c"#define DENSITY_MIN 0.1\00"
@Lt_05B5 = private constant [24 x i8] c"#define DENSITY_MAX 1.0\00"
@Lt_05B6 = private constant [43 x i8] c"#define MATERIAL_COLOR vec3(0.5,0.8,1)*0.1\00"
@Lt_05B7 = private constant [38 x i8] c"#define AIR_COLOR vec3(0.5,0.8,1)*0.1\00"
@Lt_05B8 = private constant [43 x i8] c"#define SURFACE_COLOR vec3(0.8,1.,0.8)*1.0\00"
@Lt_05BA = private constant [125 x i8] c"#define horiz(s, e, p) if(s.x < p.x && p.x <= e.x) return mix(s.y, e.y, notsosmoothstep(0., 1., (p.x - s.x) / (e.x - s.x)));\00"
@Lt_05BB = private constant [22 x i8] c"#define iterations 17\00"
@Lt_05BC = private constant [24 x i8] c"#define formuparam 0.53\00"
@Lt_05BD = private constant [20 x i8] c"#define volsteps 20\00"
@Lt_05BE = private constant [21 x i8] c"#define stepsize 0.1\00"
@Lt_05BF = private constant [21 x i8] c"#define zoom   0.800\00"
@Lt_05C0 = private constant [21 x i8] c"#define tile   0.850\00"
@Lt_05C1 = private constant [22 x i8] c"#define speed  0.010 \00"
@Lt_05C2 = private constant [26 x i8] c"#define brightness 0.0015\00"
@Lt_05C3 = private constant [25 x i8] c"#define darkmatter 0.300\00"
@Lt_05C4 = private constant [25 x i8] c"#define distfading 0.730\00"
@Lt_05C5 = private constant [25 x i8] c"#define saturation 0.850\00"
@Lt_05C6 = private constant [20 x i8] c"#define D_DEMO_FREE\00"
@Lt_05C7 = private constant [19 x i8] c"#ifdef D_DEMO_FREE\00"
@Lt_05C8 = private constant [28 x i8] c"    #define D_FOG_NOISE 1.0\00"
@Lt_05C9 = private constant [29 x i8] c"    #define D_STRONG_FOG 0.0\00"
@Lt_05CA = private constant [37 x i8] c"    #define D_VOLUME_SHADOW_ENABLE 1\00"
@Lt_05CB = private constant [40 x i8] c"    #define D_USE_IMPROVE_INTEGRATION 1\00"
@Lt_05CC = private constant [44 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_FLAT)\00"
@Lt_05CD = private constant [30 x i8] c"    #define D_STRONG_FOG 10.0\00"
@Lt_05CE = private constant [28 x i8] c"    #define D_FOG_NOISE 0.0\00"
@Lt_05CF = private constant [34 x i8] c"\09#define D_VOLUME_SHADOW_ENABLE 1\00"
@Lt_05D0 = private constant [45 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_NOISE)\00"
@Lt_05D1 = private constant [29 x i8] c"    #define D_STRONG_FOG 5.0\00"
@Lt_05D2 = private constant [63 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_FLAT_NOVOLUMETRICSHADOW)\00"
@Lt_05D3 = private constant [34 x i8] c"\09#define D_VOLUME_SHADOW_ENABLE 0\00"
@Lt_05D4 = private constant [64 x i8] c"#elif defined(D_DEMO_SHOW_IMPROVEMENT_NOISE_NOVOLUMETRICSHADOW)\00"
@Lt_05D5 = private constant [29 x i8] c"    #define D_STRONG_FOG 3.0\00"
@Lt_05D6 = private constant [31 x i8] c"#define D_UPDATE_TRANS_FIRST 0\00"
@Lt_05D7 = private constant [27 x i8] c"#define D_DETAILED_WALLS 0\00"
@Lt_05D8 = private constant [35 x i8] c"#define D_MAX_STEP_LENGTH_ENABLE 1\00"
@Lt_05D9 = private constant [69 x i8] c"#define LPOS vec3( 20.0+15.0*sin(iTime), 15.0+12.0*cos(iTime),-20.0)\00"
@Lt_05DA = private constant [42 x i8] c"#define LCOL (600.0*vec3( 1.0, 0.9, 0.5))\00"
@Lt_05DB = private constant [21 x i8] c"const float pi = PI;\00"
@Lt_05DC = private constant [26 x i8] c"const float maxHei = 0.8;\00"
@Lt_05DD = private constant [53 x i8] c"const vec3 sunDir = normalize( vec3(0.2,0.1,0.02) );\00"
@Lt_05DE = private constant [49 x i8] c"vec3 LIGHT_DIR = normalize(vec3(-0.6,0.7,-0.3));\00"
@Lt_05DF = private constant [9 x i8] c"vec4 ot;\00"
@Lt_05E0 = private constant [16 x i8] c"float kl = 0.0;\00"
@Lt_05E1 = private constant [12 x i8] c"int ef = 0;\00"
@Lt_05E2 = private constant [18 x i8] c"float seed = 0.0;\00"
@Lt_05E3 = private constant [12 x i8] c"float href;\00"
@Lt_05E4 = private constant [12 x i8] c"float hsha;\00"
@Lt_05E5 = private constant [12 x i8] c"struct CP {\00"
@Lt_05E6 = private constant [16 x i8] c"    float dist;\00"
@Lt_05E7 = private constant [17 x i8] c"    vec3 normal;\00"
@Lt_05E8 = private constant [15 x i8] c"    float mat;\00"
@Lt_05E9 = private constant [12 x i8] c"    vec3 p;\00"
@Lt_05EA = private constant [3 x i8] c"};\00"
@Lt_05EB = private constant [5 x i8] c"    \00"
@Lt_05EC = private constant [13 x i8] c"struct Ray {\00"
@Lt_05ED = private constant [13 x i8] c"    vec3 rd;\00"
@Lt_05EE = private constant [11 x i8] c"    CP cp;\00"
@Lt_05EF = private constant [14 x i8] c"    vec3 col;\00"
@Lt_05F0 = private constant [17 x i8] c"    float share;\00"
@Lt_05F1 = private constant [15 x i8] c"    float eta;\00"
@Lt_05F2 = private constant [69 x i8] c"//------------------------------------------------------------------\00"
@Lt_05F3 = private constant [58 x i8] c"float rand() { return fract(sin(seed++)*43758.5453123); }\00"
@Lt_05F4 = private constant [22 x i8] c"float rand(vec2 n) { \00"
@Lt_05F5 = private constant [64 x i8] c"\09return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\00"
@Lt_05F6 = private constant [2 x i8] c"}\00"
@Lt_05F7 = private constant [21 x i8] c"float rand1(vec2 co)\00"
@Lt_05F8 = private constant [2 x i8] c"{\00"
@Lt_05F9 = private constant [65 x i8] c"    return fract(sin(dot(co.xy ,vec2(12.98,78.23))) * 43758.54);\00"
@Lt_05FA = private constant [22 x i8] c"float noise(vec2 n) {\00"
@Lt_05FB = private constant [32 x i8] c"\09const vec2 d = vec2(0.0, 1.0);\00"
@Lt_05FC = private constant [68 x i8] c"\09vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\00"
@Lt_05FD = private constant [95 x i8] c"\09return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\00"
@Lt_05FE = private constant [41 x i8] c"float noise(vec3 p) //Thx to Las^Mercury\00"
@Lt_05FF = private constant [20 x i8] c"\09vec3 i = floor(p);\00"
@Lt_0600 = private constant [64 x i8] c"\09vec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\00"
@Lt_0601 = private constant [41 x i8] c"\09vec3 f = cos((p-i)*acos(-1.))*(-.5)+.5;\00"
@Lt_0602 = private constant [52 x i8] c"\09a = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\00"
@Lt_0603 = private constant [30 x i8] c"\09a.xy = mix(a.xz, a.yw, f.y);\00"
@Lt_0604 = private constant [28 x i8] c"\09return mix(a.x, a.y, f.z);\00"
@Lt_0605 = private constant [40 x i8] c"float smin( float a, float b, float k )\00"
@Lt_0606 = private constant [35 x i8] c"    float h = max(k-abs(a-b),0.0);\00"
@Lt_0607 = private constant [35 x i8] c"    return min(a, b) - h*h*0.25/k;\00"
@Lt_0608 = private constant [37 x i8] c"vec2 smin( vec2 a, vec2 b, float k )\00"
@Lt_0609 = private constant [54 x i8] c"    float h = clamp( 0.5+0.5*(b.x-a.x)/k, 0.0, 1.0 );\00"
@Lt_060A = private constant [41 x i8] c"    return mix( b, a, h ) - k*h*(1.0-h);\00"
@Lt_060B = private constant [40 x i8] c"float smax( float a, float b, float k )\00"
@Lt_060C = private constant [35 x i8] c"    return max(a, b) + h*h*0.25/k;\00"
@Lt_060D = private constant [33 x i8] c"vec3 rotXaxis(vec3 p, float rad)\00"
@Lt_060E = private constant [45 x i8] c"\09float z2 = cos(rad) * p.z - sin(rad) * p.y;\00"
@Lt_060F = private constant [45 x i8] c"\09float y2 = sin(rad) * p.z + cos(rad) * p.y;\00"
@Lt_0610 = private constant [11 x i8] c"\09p.z = z2;\00"
@Lt_0611 = private constant [11 x i8] c"\09p.y = y2;\00"
@Lt_0612 = private constant [11 x i8] c"\09return p;\00"
@Lt_0613 = private constant [34 x i8] c"vec3 rotYaxis(vec3 p, float rad) \00"
@Lt_0614 = private constant [45 x i8] c"\09float x2 = cos(rad) * p.x - sin(rad) * p.z;\00"
@Lt_0615 = private constant [45 x i8] c"\09float z2 = sin(rad) * p.x + cos(rad) * p.z;\00"
@Lt_0616 = private constant [11 x i8] c"\09p.x = x2;\00"
@Lt_0617 = private constant [53 x i8] c"float sdEllipsoid( in vec3 p, in vec3 c, in vec3 r )\00"
@Lt_0618 = private constant [62 x i8] c"    return (length( (p-c)/r ) - 1.0) * min(min(r.x,r.y),r.z);\00"
@Lt_0619 = private constant [24 x i8] c"float sdPlane( vec3 p )\00"
@Lt_061A = private constant [13 x i8] c"\09return p.y;\00"
@Lt_061B = private constant [34 x i8] c"float sdSphere( vec3 p, float s )\00"
@Lt_061C = private constant [24 x i8] c"    return length(p)-s;\00"
@Lt_061D = private constant [31 x i8] c"float sphere(vec3 p, vec4 spr)\00"
@Lt_061E = private constant [35 x i8] c"\09return length(spr.xyz-p) - spr.w;\00"
@Lt_061F = private constant [20 x i8] c"float flame(vec3 p)\00"
@Lt_0620 = private constant [57 x i8] c"\09float d = sphere(p*vec3(1.,.5,1.), vec4(.0,-1.,.0,1.));\00"
@Lt_0621 = private constant [73 x i8] c"\09return d + (noise(p+vec3(.0,iTime*2.,.0)) + noise(p*3.)*.5)*.25*(p.y) ;\00"
@Lt_0622 = private constant [39 x i8] c"float sdSphere( in vec3 p, in vec4 s )\00"
@Lt_0623 = private constant [34 x i8] c"    return length(p-s.xyz) - s.w;\00"
@Lt_0624 = private constant [30 x i8] c"float sdBox( vec3 p, vec3 b )\00"
@Lt_0625 = private constant [25 x i8] c"    vec3 d = abs(p) - b;\00"
@Lt_0626 = private constant [64 x i8] c"    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\00"
@Lt_0627 = private constant [23 x i8] c"float Boxes(vec3 pos) \00"
@Lt_0628 = private constant [23 x i8] c"vec3 rok = vec3(0.35);\00"
@Lt_0629 = private constant [9 x i8] c"float m;\00"
@Lt_062A = private constant [109 x i8] c"m = length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3,0.0),iTime*0.3 ),iTime*0.15))-rok,0.0))-0.03; // Cube\00"
@Lt_062B = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3, 1.2),iTime*0.21),iTime*0.24))-rok,0.0))-0.03); \00"
@Lt_062C = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(0.0,-0.3,-1.2),iTime*0.2 ),iTime*0.3 ))-rok,0.0))-0.03); \00"
@Lt_062D = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(1.2,-0.3, 0.0),iTime*0.17),iTime*0.26))-rok,0.0))-0.03); \00"
@Lt_062E = private constant [111 x i8] c"m = min (m,length(max(abs(rotYaxis(rotXaxis(pos+vec3(-1.2,-0.3,0.0),iTime*0.32),iTime*0.2 ))-rok,0.0))-0.03); \00"
@Lt_062F = private constant [10 x i8] c"return m;\00"
@Lt_0630 = private constant [27 x i8] c"float Singlebox(vec3 pos) \00"
@Lt_0632 = private constant [141 x i8] c"return length(max(abs(rotXaxis(pos+vec3(0.0,-0.5,0.0),iTime*0.47))-vec3(0.55-0.025*(kl+0.4)*sin(pos.z*pos.x*pos.y*35.)),0.0))-0.025; // Cube\00"
@Lt_0633 = private constant [58 x i8] c"float sdEllipsoid( in vec3 p, in vec3 r ) // approximated\00"
@Lt_0634 = private constant [28 x i8] c"    float k0 = length(p/r);\00"
@Lt_0635 = private constant [32 x i8] c"    float k1 = length(p/(r*r));\00"
@Lt_0636 = private constant [27 x i8] c"    return k0*(k0-1.0)/k1;\00"
@Lt_0637 = private constant [44 x i8] c"float udRoundBox( vec3 p, vec3 b, float r )\00"
@Lt_0638 = private constant [40 x i8] c"    return length(max(abs(p)-b,0.0))-r;\00"
@Lt_0639 = private constant [32 x i8] c"float sdTorus( vec3 p, vec2 t )\00"
@Lt_063A = private constant [53 x i8] c"    return length( vec2(length(p.xz)-t.x,p.y) )-t.y;\00"
@Lt_063B = private constant [69 x i8] c"float sdCappedTorus(in vec3 p, in vec2 sc, in float ra, in float rb)\00"
@Lt_063C = private constant [20 x i8] c"    p.x = abs(p.x);\00"
@Lt_063D = private constant [65 x i8] c"    float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\00"
@Lt_063E = private constant [53 x i8] c"    return sqrt( dot(p,p) + ra*ra - 2.0*ra*k ) - rb;\00"
@Lt_063F = private constant [35 x i8] c"float sdHexPrism( vec3 p, vec2 h )\00"
@Lt_0640 = private constant [21 x i8] c"    vec3 q = abs(p);\00"
@Lt_0641 = private constant [6 x i8] c"#if 0\00"
@Lt_0642 = private constant [61 x i8] c"    return max(q.z-h.y,max((q.x*0.866025+q.y*0.5),q.y)-h.x);\00"
@Lt_0643 = private constant [24 x i8] c"    float d1 = q.z-h.y;\00"
@Lt_0644 = private constant [52 x i8] c"    float d2 = max((q.x*0.866025+q.y*0.5),q.y)-h.x;\00"
@Lt_0645 = private constant [63 x i8] c"    return length(max(vec2(d1,d2),0.0)) + min(max(d1,d2), 0.);\00"
@Lt_0646 = private constant [51 x i8] c"float sdCapsule( vec3 p, vec3 a, vec3 b, float r )\00"
@Lt_0647 = private constant [26 x i8] c"\09vec3 pa = p-a, ba = b-a;\00"
@Lt_0648 = private constant [53 x i8] c"\09float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\00"
@Lt_0649 = private constant [33 x i8] c"\09return length( pa - ba*h ) - r;\00"
@Lt_064A = private constant [63 x i8] c"float sdRoundCone( in vec3 p, in float r1, float r2, float h )\00"
@Lt_064B = private constant [40 x i8] c"    vec2 q = vec2( length(p.xz), p.y );\00"
@Lt_064C = private constant [25 x i8] c"    float b = (r1-r2)/h;\00"
@Lt_064D = private constant [29 x i8] c"    float a = sqrt(1.0-b*b);\00"
@Lt_064E = private constant [33 x i8] c"    float k = dot(q,vec2(-b,a));\00"
@Lt_064F = private constant [41 x i8] c"    if( k < 0.0 ) return length(q) - r1;\00"
@Lt_0650 = private constant [53 x i8] c"    if( k > a*h ) return length(q-vec2(0.0,h)) - r2;\00"
@Lt_0651 = private constant [9 x i8] c"        \00"
@Lt_0652 = private constant [36 x i8] c"    return dot(q, vec2(a,b) ) - r1;\00"
@Lt_0653 = private constant [42 x i8] c"float dot2(in vec3 v ) {return dot(v,v);}\00"
@Lt_0654 = private constant [62 x i8] c"float sdRoundCone(vec3 p, vec3 a, vec3 b, float r1, float r2)\00"
@Lt_0655 = private constant [64 x i8] c"    // sampling independent computations (only depend on shape)\00"
@Lt_0656 = private constant [22 x i8] c"    vec3  ba = b - a;\00"
@Lt_0657 = private constant [27 x i8] c"    float l2 = dot(ba,ba);\00"
@Lt_0658 = private constant [24 x i8] c"    float rr = r1 - r2;\00"
@Lt_0659 = private constant [27 x i8] c"    float a2 = l2 - rr*rr;\00"
@Lt_065A = private constant [24 x i8] c"    float il2 = 1.0/l2;\00"
@Lt_065B = private constant [39 x i8] c"    // sampling dependant computations\00"
@Lt_065C = private constant [21 x i8] c"    vec3 pa = p - a;\00"
@Lt_065D = private constant [26 x i8] c"    float y = dot(pa,ba);\00"
@Lt_065E = private constant [22 x i8] c"    float z = y - l2;\00"
@Lt_065F = private constant [37 x i8] c"    float x2 = dot2( pa*l2 - ba*y );\00"
@Lt_0660 = private constant [23 x i8] c"    float y2 = y*y*l2;\00"
@Lt_0661 = private constant [23 x i8] c"    float z2 = z*z*l2;\00"
@Lt_0662 = private constant [27 x i8] c"    // single square root!\00"
@Lt_0663 = private constant [33 x i8] c"    float k = sign(rr)*rr*rr*x2;\00"
@Lt_0664 = private constant [68 x i8] c"    if( sign(z)*a2*z2 > k ) return  sqrt(x2 + z2)        *il2 - r2;\00"
@Lt_0665 = private constant [68 x i8] c"    if( sign(y)*a2*y2 < k ) return  sqrt(x2 + y2)        *il2 - r1;\00"
@Lt_0666 = private constant [68 x i8] c"                            return (sqrt(x2*a2*il2)+y*rr)*il2 - r1;\00"
@Lt_0667 = private constant [42 x i8] c"float sdEquilateralTriangle(  in vec2 p )\00"
@Lt_0668 = private constant [41 x i8] c"    const float k = 1.73205;//sqrt(3.0);\00"
@Lt_0669 = private constant [26 x i8] c"    p.x = abs(p.x) - 1.0;\00"
@Lt_066A = private constant [23 x i8] c"    p.y = p.y + 1.0/k;\00"
@Lt_066B = private constant [71 x i8] c"    if( p.x + k*p.y > 0.0 ) p = vec2( p.x - k*p.y, -k*p.x - p.y )/2.0;\00"
@Lt_066C = private constant [55 x i8] c"    p.x += 2.0 - 2.0*clamp( (p.x+2.0)/2.0, 0.0, 1.0 );\00"
@Lt_066D = private constant [33 x i8] c"    return -length(p)*sign(p.y);\00"
@Lt_066E = private constant [35 x i8] c"float sdTriPrism( vec3 p, vec2 h )\00"
@Lt_066F = private constant [64 x i8] c"    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\00"
@Lt_0670 = private constant [55 x i8] c"    float d2 = max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5;\00"
@Lt_0671 = private constant [12 x i8] c"// vertical\00"
@Lt_0672 = private constant [35 x i8] c"float sdCylinder( vec3 p, vec2 h )\00"
@Lt_0673 = private constant [46 x i8] c"    vec2 d = abs(vec2(length(p.xz),p.y)) - h;\00"
@Lt_0674 = private constant [55 x i8] c"    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\00"
@Lt_0675 = private constant [25 x i8] c"// arbitrary orientation\00"
@Lt_0676 = private constant [50 x i8] c"float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\00"
@Lt_0677 = private constant [21 x i8] c"    vec3 ba = b - a;\00"
@Lt_0678 = private constant [29 x i8] c"    float baba = dot(ba,ba);\00"
@Lt_0679 = private constant [29 x i8] c"    float paba = dot(pa,ba);\00"
@Lt_067A = private constant [48 x i8] c"    float x = length(pa*baba-ba*paba) - r*baba;\00"
@Lt_067B = private constant [43 x i8] c"    float y = abs(paba-baba*0.5)-baba*0.5;\00"
@Lt_067C = private constant [20 x i8] c"    float x2 = x*x;\00"
@Lt_067D = private constant [25 x i8] c"    float y2 = y*y*baba;\00"
@Lt_067E = private constant [78 x i8] c"    float d = (max(x,y)<0.0)?-min(x2,y2):(((x>0.0)?x2:0.0)+((y>0.0)?y2:0.0));\00"
@Lt_067F = private constant [38 x i8] c"    return sign(d)*sqrt(abs(d))/baba;\00"
@Lt_0680 = private constant [41 x i8] c"float sdCappedCylinder( vec3 p, vec2 h )\00"
@Lt_0681 = private constant [44 x i8] c"  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\00"
@Lt_0682 = private constant [53 x i8] c"  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\00"
@Lt_0683 = private constant [37 x i8] c"float sdCone( in vec3 p, in vec3 c )\00"
@Lt_0684 = private constant [25 x i8] c"    float d1 = -q.y-c.z;\00"
@Lt_0685 = private constant [39 x i8] c"    float d2 = max( dot(q,c.xy), q.y);\00"
@Lt_0686 = private constant [45 x i8] c"float dot2( in vec2 v ) { return dot(v,v); }\00"
@Lt_0687 = private constant [64 x i8] c"float sdCone( in vec3 p, in float h, in float r1, in float r2 )\00"
@Lt_0688 = private constant [26 x i8] c"    vec2 k1 = vec2(r2,h);\00"
@Lt_0689 = private constant [33 x i8] c"    vec2 k2 = vec2(r2-r1,2.0*h);\00"
@Lt_068A = private constant [64 x i8] c"    vec2 ca = vec2(q.x-min(q.x,(q.y < 0.0)?r1:r2), abs(q.y)-h);\00"
@Lt_068B = private constant [68 x i8] c"    vec2 cb = q - k1 + k2*clamp( dot(k1-q,k2)/dot2(k2), 0.0, 1.0 );\00"
@Lt_068C = private constant [55 x i8] c"    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;\00"
@Lt_068D = private constant [45 x i8] c"    return s*sqrt( min(dot2(ca),dot2(cb)) );\00"
@Lt_068E = private constant [57 x i8] c"float sdCone(vec3 p, vec3 a, vec3 b, float ra, float rb)\00"
@Lt_068F = private constant [24 x i8] c"    float rba  = rb-ra;\00"
@Lt_0690 = private constant [31 x i8] c"    float baba = dot(b-a,b-a);\00"
@Lt_0691 = private constant [31 x i8] c"    float papa = dot(p-a,p-a);\00"
@Lt_0692 = private constant [36 x i8] c"    float paba = dot(p-a,b-a)/baba;\00"
@Lt_0693 = private constant [45 x i8] c"    float x = sqrt( papa - paba*paba*baba );\00"
@Lt_0694 = private constant [47 x i8] c"    float cax = max(0.0,x-((paba<0.5)?ra:rb));\00"
@Lt_0695 = private constant [35 x i8] c"    float cay = abs(paba-0.5)-0.5;\00"
@Lt_0696 = private constant [30 x i8] c"    float k = rba*rba + baba;\00"
@Lt_0697 = private constant [59 x i8] c"    float f = clamp( (rba*(x-ra)+paba*baba)/k, 0.0, 1.0 );\00"
@Lt_0698 = private constant [30 x i8] c"    float cbx = x-ra - f*rba;\00"
@Lt_0699 = private constant [26 x i8] c"    float cby = paba - f;\00"
@Lt_069A = private constant [53 x i8] c"    float s = (cbx < 0.0 && cay < 0.0) ? -1.0 : 1.0;\00"
@Lt_069B = private constant [47 x i8] c"    return s*sqrt( min(cax*cax + cay*cay*baba,\00"
@Lt_069C = private constant [50 x i8] c"                       cbx*cbx + cby*cby*baba) );\00"
@Lt_069D = private constant [71 x i8] c"float sdConeSection( in vec3 p, in float h, in float r1, in float r2 )\00"
@Lt_069E = private constant [25 x i8] c"    float d1 = -p.y - h;\00"
@Lt_069F = private constant [23 x i8] c"    float q = p.y - h;\00"
@Lt_06A0 = private constant [30 x i8] c"    float si = 0.5*(r1-r2)/h;\00"
@Lt_06A1 = private constant [72 x i8] c"    float d2 = max( sqrt( dot(p.xz,p.xz)*(1.0-si*si)) + q*si - r2, q );\00"
@Lt_06A2 = private constant [46 x i8] c"// c is the sin/cos of the desired cone angle\00"
@Lt_06A3 = private constant [47 x i8] c"float sdSolidAngle(vec3 pos, vec2 c, float ra)\00"
@Lt_06A4 = private constant [44 x i8] c"    vec2 p = vec2( length(pos.xz), pos.y );\00"
@Lt_06A5 = private constant [30 x i8] c"    float l = length(p) - ra;\00"
@Lt_06A6 = private constant [50 x i8] c"\09float m = length(p - c*clamp(dot(p,c),0.0,ra) );\00"
@Lt_06A7 = private constant [43 x i8] c"    return max(l,m*sign(c.y*p.x-c.x*p.y));\00"
@Lt_06A8 = private constant [36 x i8] c"float sdOctahedron(vec3 p, float s)\00"
@Lt_06A9 = private constant [16 x i8] c"    p = abs(p);\00"
@Lt_06AA = private constant [35 x i8] c"    float m = p.x + p.y + p.z - s;\00"
@Lt_06AB = private constant [22 x i8] c"    // exact distance\00"
@Lt_06AC = private constant [10 x i8] c"    #if 0\00"
@Lt_06AD = private constant [34 x i8] c"    vec3 o = min(3.0*p - m, 0.0);\00"
@Lt_06AE = private constant [57 x i8] c"    o = max(6.0*p - m*2.0 - o*3.0 + (o.x+o.y+o.z), 0.0);\00"
@Lt_06AF = private constant [42 x i8] c"    return length(p - s*o/(o.x+o.y+o.z));\00"
@Lt_06B0 = private constant [11 x i8] c"    #endif\00"
@Lt_06B1 = private constant [10 x i8] c"    #if 1\00"
@Lt_06B2 = private constant [10 x i8] c" \09vec3 q;\00"
@Lt_06B3 = private constant [38 x i8] c"         if( 3.0*p.x < m ) q = p.xyz;\00"
@Lt_06B4 = private constant [38 x i8] c"    else if( 3.0*p.y < m ) q = p.yzx;\00"
@Lt_06B5 = private constant [38 x i8] c"    else if( 3.0*p.z < m ) q = p.zxy;\00"
@Lt_06B6 = private constant [30 x i8] c"    else return m*0.57735027;\00"
@Lt_06B7 = private constant [45 x i8] c"    float k = clamp(0.5*(q.z-q.y+s),0.0,s); \00"
@Lt_06B8 = private constant [45 x i8] c"    return length(vec3(q.x,q.y-s+k,q.z-k)); \00"
@Lt_06B9 = private constant [24 x i8] c"    // bound, not exact\00"
@Lt_06BA = private constant [22 x i8] c"\09return m*0.57735027;\00"
@Lt_06BB = private constant [41 x i8] c"float sdPyramid( in vec3 p, in float h )\00"
@Lt_06BC = private constant [27 x i8] c"    float m2 = h*h + 0.25;\00"
@Lt_06BD = private constant [16 x i8] c"    // symmetry\00"
@Lt_06BE = private constant [22 x i8] c"    p.xz = abs(p.xz);\00"
@Lt_06BF = private constant [36 x i8] c"    p.xz = (p.z>p.x) ? p.zx : p.xz;\00"
@Lt_06C0 = private constant [17 x i8] c"    p.xz -= 0.5;\00"
@Lt_06C1 = private constant [2 x i8] c"\09\00"
@Lt_06C2 = private constant [36 x i8] c"    // project into face plane (2D)\00"
@Lt_06C3 = private constant [59 x i8] c"    vec3 q = vec3( p.z, h*p.y - 0.5*p.x, h*p.x + 0.5*p.y);\00"
@Lt_06C4 = private constant [4 x i8] c"   \00"
@Lt_06C5 = private constant [29 x i8] c"    float s = max(-q.x,0.0);\00"
@Lt_06C6 = private constant [58 x i8] c"    float t = clamp( (q.y-0.5*p.z)/(m2+0.25), 0.0, 1.0 );\00"
@Lt_06C7 = private constant [44 x i8] c"    float a = m2*(q.x+s)*(q.x+s) + q.y*q.y;\00"
@Lt_06C8 = private constant [63 x i8] c"\09float b = m2*(q.x+0.5*t)*(q.x+0.5*t) + (q.y-m2*t)*(q.y-m2*t);\00"
@Lt_06C9 = private constant [64 x i8] c"    float d2 = min(q.y,-q.x*m2-q.y*0.5) > 0.0 ? 0.0 : min(a,b);\00"
@Lt_06CA = private constant [42 x i8] c"    // recover 3D and scale, and add sign\00"
@Lt_06CB = private constant [59 x i8] c"    return sqrt( (d2+q.z*q.z)/m2 ) * sign(max(q.z,-p.y));;\00"
@Lt_06CC = private constant [66 x i8] c"float sdPryamid4(vec3 p, vec3 h ) // h = { cos a, sin a, height }\00"
@Lt_06CD = private constant [39 x i8] c"    // Tetrahedron = Octahedron - Cube\00"
@Lt_06CE = private constant [64 x i8] c"    float box = sdBox( p - vec3(0,-2.0*h.z,0), vec3(2.0*h.z) );\00"
@Lt_06CF = private constant [19 x i8] c"    float d = 0.0;\00"
@Lt_06D0 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3( -h.x, h.y, 0 )) ));\00"
@Lt_06D1 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  h.x, h.y, 0 )) ));\00"
@Lt_06D2 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  0, h.y, h.x )) ));\00"
@Lt_06D3 = private constant [54 x i8] c"    d = max( d, abs( dot(p, vec3(  0, h.y,-h.x )) ));\00"
@Lt_06D4 = private constant [26 x i8] c"    float octa = d - h.z;\00"
@Lt_06D5 = private constant [42 x i8] c"    return max(-box,octa); // Subtraction\00"
@Lt_06D6 = private constant [73 x i8] c"vec2 sdStick(vec3 p, vec3 a, vec3 b, float r1, float r2) // approximated\00"
@Lt_06D7 = private constant [29 x i8] c"    vec3 pa = p-a, ba = b-a;\00"
@Lt_06D8 = private constant [69 x i8] c"\09return vec2( length( pa - ba*h ) - mix(r1,r2,h*h*(3.0-2.0*h)), h );\00"
@Lt_06D9 = private constant [66 x i8] c"float sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\00"
@Lt_06DA = private constant [20 x i8] c"\09vec2 e0 = p1 - p0;\00"
@Lt_06DB = private constant [20 x i8] c"\09vec2 e1 = p2 - p1;\00"
@Lt_06DC = private constant [20 x i8] c"\09vec2 e2 = p0 - p2;\00"
@Lt_06DD = private constant [19 x i8] c"\09vec2 v0 = p - p0;\00"
@Lt_06DE = private constant [19 x i8] c"\09vec2 v1 = p - p1;\00"
@Lt_06DF = private constant [19 x i8] c"\09vec2 v2 = p - p2;\00"
@Lt_06E0 = private constant [62 x i8] c"\09vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\00"
@Lt_06E1 = private constant [62 x i8] c"\09vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\00"
@Lt_06E2 = private constant [62 x i8] c"\09vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\00"
@Lt_06E3 = private constant [45 x i8] c"    float s = sign( e0.x*e2.y - e0.y*e2.x );\00"
@Lt_06E4 = private constant [73 x i8] c"    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\00"
@Lt_06E5 = private constant [74 x i8] c"                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\00"
@Lt_06E6 = private constant [74 x i8] c"                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\00"
@Lt_06E7 = private constant [30 x i8] c"\09return -sqrt(d.x)*sign(d.y);\00"
@Lt_06E8 = private constant [24 x i8] c"float menger(vec3 pos )\00"
@Lt_06E9 = private constant [32 x i8] c"\09float d = sdBox(pos,vec3(1.));\00"
@Lt_06EA = private constant [48 x i8] c"\09float s = 1.63+0.07*sin(0.53*iTime)-0.3*pos.y;\00"
@Lt_06EB = private constant [26 x i8] c"\09for( int m=0; m<2; m++ )\00"
@Lt_06EC = private constant [3 x i8] c"\09{\00"
@Lt_06ED = private constant [38 x i8] c"      vec3 a = mod( pos*s, 2.0 )-1.0;\00"
@Lt_06EE = private constant [16 x i8] c"      s *= 3.0;\00"
@Lt_06EF = private constant [41 x i8] c"\09  vec3 r = abs(1.0 - 3.0*abs(a))-0.025;\00"
@Lt_06F0 = private constant [31 x i8] c"      float da = max(r.x,r.y);\00"
@Lt_06F1 = private constant [31 x i8] c"      float db = max(r.y,r.z);\00"
@Lt_06F2 = private constant [31 x i8] c"      float dc = max(r.z,r.x);\00"
@Lt_06F3 = private constant [44 x i8] c"      float c = (min(da,min(db,dc))-1.0)/s;\00"
@Lt_06F4 = private constant [20 x i8] c"      d = max(d,c);\00"
@Lt_06F5 = private constant [5 x i8] c"   }\00"
@Lt_06F6 = private constant [14 x i8] c"    return d;\00"
@Lt_06F7 = private constant [33 x i8] c"vec3 hsv2rgb_smooth( in vec3 c )\00"
@Lt_06F8 = private constant [83 x i8] c"    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\00"
@Lt_06F9 = private constant [50 x i8] c"\09rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\09\00"
@Lt_06FA = private constant [41 x i8] c"\09return c.z * mix( vec3(1.0), rgb, c.y);\00"
@Lt_06FB = private constant [57 x i8] c"float notsosmoothstep(float edge0, float edge1, float x)\00"
@Lt_06FC = private constant [55 x i8] c"    x = clamp((x - edge0)/(edge1 - edge0), 0.0, 1.0); \00"
@Lt_06FD = private constant [41 x i8] c"    return mix(x*x*(3. - 2.*x), x, 0.2);\00"
@Lt_06FE = private constant [24 x i8] c"float length2( vec2 p )\00"
@Lt_06FF = private constant [38 x i8] c"    return sqrt( p.x*p.x + p.y*p.y );\00"
@Lt_0700 = private constant [24 x i8] c"float length6( vec2 p )\00"
@Lt_0701 = private constant [24 x i8] c"    p = p*p*p; p = p*p;\00"
@Lt_0702 = private constant [38 x i8] c"    return pow( p.x + p.y, 1.0/6.0 );\00"
@Lt_0703 = private constant [24 x i8] c"float length8( vec2 p )\00"
@Lt_0704 = private constant [31 x i8] c"    p = p*p; p = p*p; p = p*p;\00"
@Lt_0705 = private constant [38 x i8] c"    return pow( p.x + p.y, 1.0/8.0 );\00"
@Lt_0706 = private constant [34 x i8] c"float sdTorus82( vec3 p, vec2 t )\00"
@Lt_0707 = private constant [42 x i8] c"    vec2 q = vec2(length2(p.xz)-t.x,p.y);\00"
@Lt_0708 = private constant [27 x i8] c"    return length8(q)-t.y;\00"
@Lt_0709 = private constant [34 x i8] c"float sdTorus88( vec3 p, vec2 t )\00"
@Lt_070A = private constant [42 x i8] c"    vec2 q = vec2(length8(p.xz)-t.x,p.y);\00"
@Lt_070B = private constant [36 x i8] c"float sdCylinder6( vec3 p, vec2 h )\00"
@Lt_070C = private constant [51 x i8] c"    return max( length6(p.xz)-h.x, abs(p.y)-h.y );\00"
@Lt_070D = private constant [32 x i8] c"float opS( float d1, float d2 )\00"
@Lt_070E = private constant [24 x i8] c"    return max(-d2,d1);\00"
@Lt_070F = private constant [30 x i8] c"vec3 opS(  vec3 d1, vec3 d2 )\00"
@Lt_0710 = private constant [32 x i8] c"    return -d1.x>d2.x ? d2: d1;\00"
@Lt_0711 = private constant [29 x i8] c"vec2 opU( vec2 d1, vec2 d2 )\00"
@Lt_0712 = private constant [31 x i8] c"\09return (d1.x<d2.x) ? d1 : d2;\00"
@Lt_0713 = private constant [29 x i8] c"vec3 opU( vec3 d1, vec3 d2 )\00"
@Lt_0714 = private constant [29 x i8] c"vec4 opU( vec4 d1, vec4 d2 )\00"
@Lt_0715 = private constant [29 x i8] c"vec3 opRep( vec3 p, vec3 c )\00"
@Lt_0716 = private constant [27 x i8] c"    return mod(p,c)-0.5*c;\00"
@Lt_0717 = private constant [23 x i8] c"vec3 opTwist( vec3 p )\00"
@Lt_0718 = private constant [35 x i8] c"    float  c = cos(10.0*p.y+10.0);\00"
@Lt_0719 = private constant [35 x i8] c"    float  s = sin(10.0*p.y+10.0);\00"
@Lt_071A = private constant [31 x i8] c"    mat2   m = mat2(c,-s,s,c);\00"
@Lt_071B = private constant [29 x i8] c"    return vec3(m*p.xz,p.y);\00"
@Lt_071C = private constant [51 x i8] c"float sdCircle( in vec2 p, in vec2 c, in float r )\00"
@Lt_071D = private constant [28 x i8] c"    return length(p-c) - r;\00"
@Lt_071E = private constant [41 x i8] c"vec2 udSegment( vec3 p, vec3 a, vec3 b )\00"
@Lt_071F = private constant [40 x i8] c"\09return vec2( length( pa - ba*h ), h );\00"
@Lt_0720 = private constant [56 x i8] c"float det( vec2 a, vec2 b ) { return a.x*b.y-b.x*a.y; }\00"
@Lt_0721 = private constant [46 x i8] c"vec3 getClosest( vec2 b0, vec2 b1, vec2 b2 ) \00"
@Lt_0722 = private constant [30 x i8] c"    float a =     det(b0,b2);\00"
@Lt_0723 = private constant [30 x i8] c"    float b = 2.0*det(b1,b0);\00"
@Lt_0724 = private constant [30 x i8] c"    float d = 2.0*det(b2,b1);\00"
@Lt_0725 = private constant [25 x i8] c"    float f = b*d - a*a;\00"
@Lt_0726 = private constant [23 x i8] c"    vec2  d21 = b2-b1;\00"
@Lt_0727 = private constant [23 x i8] c"    vec2  d10 = b1-b0;\00"
@Lt_0728 = private constant [23 x i8] c"    vec2  d20 = b2-b0;\00"
@Lt_0729 = private constant [63 x i8] c"    vec2  gf = 2.0*(b*d21+d*d10+a*d20); gf = vec2(gf.y,-gf.x);\00"
@Lt_072A = private constant [33 x i8] c"    vec2  pp = -f*gf/dot(gf,gf);\00"
@Lt_072B = private constant [23 x i8] c"    vec2  d0p = b0-pp;\00"
@Lt_072C = private constant [29 x i8] c"    float ap = det(d0p,d20);\00"
@Lt_072D = private constant [33 x i8] c"    float bp = 2.0*det(d10,d0p);\00"
@Lt_072E = private constant [54 x i8] c"    float t = clamp( (ap+bp)/(2.0*a+b+d), 0.0 ,1.0 );\00"
@Lt_072F = private constant [57 x i8] c"    return vec3( mix(mix(b0,b1,t), mix(b1,b2,t),t), t );\00"
@Lt_0730 = private constant [48 x i8] c"vec4 sdBezier( vec3 a, vec3 b, vec3 c, vec3 p )\00"
@Lt_0731 = private constant [42 x i8] c"\09vec3 w = normalize( cross( c-b, a-b ) );\00"
@Lt_0732 = private constant [28 x i8] c"\09vec3 u = normalize( c-b );\00"
@Lt_0733 = private constant [38 x i8] c"\09vec3 v =          ( cross( w, u ) );\00"
@Lt_0734 = private constant [43 x i8] c"\09vec2 a2 = vec2( dot(a-b,u), dot(a-b,v) );\00"
@Lt_0735 = private constant [24 x i8] c"\09vec2 b2 = vec2( 0.0 );\00"
@Lt_0736 = private constant [43 x i8] c"\09vec2 c2 = vec2( dot(c-b,u), dot(c-b,v) );\00"
@Lt_0737 = private constant [55 x i8] c"\09vec3 p3 = vec3( dot(p-b,u), dot(p-b,v), dot(p-b,w) );\00"
@Lt_0738 = private constant [55 x i8] c"\09vec3 cp = getClosest( a2-p3.xy, b2-p3.xy, c2-p3.xy );\00"
@Lt_0739 = private constant [77 x i8] c"\09return vec4( sqrt(dot(cp.xy,cp.xy)+p3.z*p3.z), cp.z, length(cp.xy), p3.z );\00"
@Lt_073A = private constant [37 x i8] c"vec3 smax( vec3 a, vec3 b, float k )\00"
@Lt_073B = private constant [48 x i8] c"\09vec3 h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\00"
@Lt_073C = private constant [38 x i8] c"\09return mix( a, b, h ) + k*h*(1.0-h);\00"
@Lt_073D = private constant [78 x i8] c"//---------------------------------------------------------------------------\00"
@Lt_073E = private constant [23 x i8] c"float hash1( float n )\00"
@Lt_073F = private constant [40 x i8] c"    return fract(sin(n)*43758.5453123);\00"
@Lt_0740 = private constant [22 x i8] c"vec3 hash3( float n )\00"
@Lt_0741 = private constant [58 x i8] c"    return fract(sin(n+vec3(0.0,13.1,31.3))*158.5453123);\00"
@Lt_0742 = private constant [35 x i8] c"vec3 forwardSF( float i, float n) \00"
@Lt_0743 = private constant [30 x i8] c"    const float PHI = PI*0.5;\00"
@Lt_0744 = private constant [37 x i8] c"    float phi = 2.0*PI*fract(i/PHI);\00"
@Lt_0745 = private constant [36 x i8] c"    float zi = 1.0 - (2.0*i+1.0)/n;\00"
@Lt_0746 = private constant [41 x i8] c"    float sinTheta = sqrt( 1.0 - zi*zi);\00"
@Lt_0747 = private constant [60 x i8] c"    return vec3( cos(phi)*sinTheta, sin(phi)*sinTheta, zi);\00"
@Lt_0748 = private constant [25 x i8] c"vec3 map3(in vec3 pos) {\00"
@Lt_0749 = private constant [79 x i8] c"    vec3 res =  vec3(sdBox(pos-vec3(0,0.29,0), vec3(0.5)),ID_GLASS_WALL, ETA);\00"
@Lt_074A = private constant [23 x i8] c"    res.x =abs(res.x);\00"
@Lt_074B = private constant [79 x i8] c"    res = opU(res, vec3(sdSphere(pos-vec3(0,0.8,0),0.4),ID_GLASS_WALL, ETA)); \00"
@Lt_074C = private constant [13 x i8] c"\09return res;\00"
@Lt_074D = private constant [25 x i8] c"vec3 map4(in vec3 pos) {\00"
@Lt_074E = private constant [25 x i8] c"vec3 map2(in vec3 pos) {\00"
@Lt_074F = private constant [95 x i8] c"   vec3 res =  vec3((sdCappedCylinder(pos-vec3(0,0.4,0), vec2(0.8,0.5))), ID_GLASS_WALL, ETA);\00"
@Lt_0750 = private constant [79 x i8] c"    res = opS(res, vec3(sdSphere(pos-vec3(0,0.8,0),0.4),ID_GLASS_WALL, ETA)); \00"
@Lt_0751 = private constant [14 x i8] c" \09return res;\00"
@Lt_0752 = private constant [25 x i8] c"vec3 map1(in vec3 pos) {\00"
@Lt_0753 = private constant [24 x i8] c"vec3 map(in vec3 pos) {\00"
@Lt_0754 = private constant [53 x i8] c"    vec3 plane = vec3(sdPlane(pos), ID_FLOOR, -1. );\00"
@Lt_0755 = private constant [22 x i8] c"    vec3 res = plane;\00"
@Lt_0756 = private constant [31 x i8] c"#ifdef OBJECT_MAP_FUNCTION    \00"
@Lt_0757 = private constant [46 x i8] c"\09res =opU(res, OBJECT_MAP_FUNCTION(pos));    \00"
@Lt_0758 = private constant [34 x i8] c"    float t = mod(iTime*0.1, 4.);\00"
@Lt_0759 = private constant [18 x i8] c"    if (t < 1.) {\00"
@Lt_075A = private constant [32 x i8] c"    \09res = opU(res, map1(pos));\00"
@Lt_075B = private constant [23 x i8] c"    } else if (t<2.) {\00"
@Lt_075C = private constant [35 x i8] c"       \09res = opU(res, map2(pos));\00"
@Lt_075D = private constant [23 x i8] c"    } else if (t<3.) {\00"
@Lt_075E = private constant [35 x i8] c"        res = opU(res, map3(pos));\00"
@Lt_075F = private constant [23 x i8] c"    } else if (t<4.) {\00"
@Lt_0760 = private constant [35 x i8] c"        res = opU(res, map4(pos));\00"
@Lt_0761 = private constant [6 x i8] c"    }\00"
@Lt_0762 = private constant [16 x i8] c"    return res;\00"
@Lt_0763 = private constant [37 x i8] c"vec4 map( in vec3 pos, float atime )\00"
@Lt_0764 = private constant [16 x i8] c"    hsha = 1.0;\00"
@Lt_0765 = private constant [29 x i8] c"    float t1 = fract(atime);\00"
@Lt_0766 = private constant [46 x i8] c"    float t4 = abs(fract(atime*0.5)-0.5)/0.5;\00"
@Lt_0767 = private constant [31 x i8] c"    float p = 4.0*t1*(1.0-t1);\00"
@Lt_0768 = private constant [52 x i8] c"    float pp = 4.0*(1.0-2.0*t1); // derivative of p\00"
@Lt_0769 = private constant [42 x i8] c"    vec3 cen = vec3( 0.5*(-1.0 + 2.0*t4),\00"
@Lt_076A = private constant [41 x i8] c"                     pow(p,2.0-p) + 0.1,\00"
@Lt_076B = private constant [56 x i8] c"                     floor(atime) + pow(t1,0.7) -1.0 );\00"
@Lt_076C = private constant [12 x i8] c"    // body\00"
@Lt_076D = private constant [43 x i8] c"    vec2 uu = normalize(vec2( 1.0, -pp ));\00"
@Lt_076E = private constant [33 x i8] c"    vec2 vv = vec2(-uu.y, uu.x);\00"
@Lt_076F = private constant [28 x i8] c"    float sy = 0.5 + 0.5*p;\00"
@Lt_0770 = private constant [48 x i8] c"    float compress = 1.0-smoothstep(0.0,0.4,p);\00"
@Lt_0771 = private constant [39 x i8] c"    sy = sy*(1.0-compress) + compress;\00"
@Lt_0772 = private constant [23 x i8] c"    float sz = 1.0/sy;\00"
@Lt_0773 = private constant [24 x i8] c"    vec3 q = pos - cen;\00"
@Lt_0774 = private constant [39 x i8] c"    float rot = -0.25*(-1.0 + 2.0*t4);\00"
@Lt_0775 = private constant [25 x i8] c"    float rc = cos(rot);\00"
@Lt_0776 = private constant [25 x i8] c"    float rs = sin(rot);\00"
@Lt_0777 = private constant [38 x i8] c"    q.xy = mat2x2(rc,rs,-rs,rc)*q.xy;\00"
@Lt_0778 = private constant [16 x i8] c"    vec3 r = q;\00"
@Lt_0779 = private constant [13 x i8] c"\09href = q.y;\00"
@Lt_077A = private constant [47 x i8] c"    q.yz = vec2( dot(uu,q.yz), dot(vv,q.yz) );\00"
@Lt_077B = private constant [86 x i8] c"    vec4 res = vec4( sdEllipsoid( q, vec3(0.25, 0.25*sy, 0.25*sz) ), 2.0, 0.0, 1.0 );\00"
@Lt_077C = private constant [47 x i8] c"    if( res.x-1.0 < pos.y ) // bounding volume\00"
@Lt_077D = private constant [33 x i8] c"    float t2 = fract(atime+0.8);\00"
@Lt_077E = private constant [39 x i8] c"    float p2 = 0.5-0.5*cos(6.2831*t2);\00"
@Lt_077F = private constant [24 x i8] c"    r.z += 0.05-0.2*p2;\00"
@Lt_0780 = private constant [23 x i8] c"    r.y += 0.2*sy-0.2;\00"
@Lt_0781 = private constant [38 x i8] c"    vec3 sq = vec3( abs(r.x), r.yz );\00"
@Lt_0782 = private constant [9 x i8] c"\09// head\00"
@Lt_0783 = private constant [16 x i8] c"    vec3 h = r;\00"
@Lt_0784 = private constant [33 x i8] c"    float hr = sin(0.791*atime);\00"
@Lt_0785 = private constant [51 x i8] c"    hr = 0.7*sign(hr)*smoothstep(0.5,0.7,abs(hr));\00"
@Lt_0786 = private constant [58 x i8] c"    h.xz = mat2x2(cos(hr),sin(hr),-sin(hr),cos(hr))*h.xz;\00"
@Lt_0787 = private constant [38 x i8] c"    vec3 hq = vec3( abs(h.x), h.yz );\00"
@Lt_0788 = private constant [74 x i8] c"   \09float d  = sdEllipsoid( h-vec3(0.0,0.20,0.02), vec3(0.08,0.2,0.15) );\00"
@Lt_0789 = private constant [71 x i8] c"\09float d2 = sdEllipsoid( h-vec3(0.0,0.21,-0.1), vec3(0.20,0.2,0.20) );\00"
@Lt_078A = private constant [25 x i8] c"\09d = smin( d, d2, 0.1 );\00"
@Lt_078B = private constant [35 x i8] c"    res.x = smin( res.x, d, 0.1 );\00"
@Lt_078C = private constant [22 x i8] c"    // belly wrinkles\00"
@Lt_078D = private constant [6 x i8] c"    {\00"
@Lt_078E = private constant [37 x i8] c"    float yy = r.y-0.02-2.5*r.x*r.x;\00"
@Lt_078F = private constant [68 x i8] c"    res.x += 0.001*sin(yy*120.0)*(1.0-smoothstep(0.0,0.1,abs(yy)));\00"
@Lt_0790 = private constant [12 x i8] c"    // arms\00"
@Lt_0791 = private constant [119 x i8] c"    vec2 arms = sdStick( sq, vec3(0.18-0.06*hr*sign(r.x),0.2,-0.05), vec3(0.3+0.1*p2,-0.2+0.3*p2,-0.15), 0.03, 0.06 );\00"
@Lt_0792 = private constant [85 x i8] c"    res.xz = smin( res.xz, arms, 0.01+0.04*(1.0-arms.y)*(1.0-arms.y)*(1.0-arms.y) );\00"
@Lt_0793 = private constant [12 x i8] c"    // ears\00"
@Lt_0794 = private constant [33 x i8] c"    float t3 = fract(atime+0.9);\00"
@Lt_0795 = private constant [32 x i8] c"    float p3 = 4.0*t3*(1.0-t3);\00"
@Lt_0796 = private constant [101 x i8] c"    vec2 ear = sdStick( hq, vec3(0.15,0.32,-0.05), vec3(0.2+0.05*p3,0.2+0.2*p3,-0.07), 0.01, 0.04 );\00"
@Lt_0797 = private constant [40 x i8] c"    res.xz = smin( res.xz, ear, 0.01 );\00"
@Lt_0798 = private constant [13 x i8] c"    // mouth\00"
@Lt_0799 = private constant [80 x i8] c"   \09d = sdEllipsoid( h-vec3(0.0,0.15+4.0*hq.x*hq.x,0.15), vec3(0.1,0.04,0.2) );\00"
@Lt_079A = private constant [45 x i8] c"    res.w = 0.3+0.7*clamp( d*150.0,0.0,1.0);\00"
@Lt_079B = private constant [37 x i8] c"    res.x = smax( res.x, -d, 0.03 );\00"
@Lt_079C = private constant [9 x i8] c"\09// legs\00"
@Lt_079D = private constant [45 x i8] c"    float t6 = cos(6.2831*(atime*0.5+0.25));\00"
@Lt_079E = private constant [40 x i8] c"    float ccc = cos(1.57*t6*sign(r.x));\00"
@Lt_079F = private constant [40 x i8] c"    float sss = sin(1.57*t6*sign(r.x));\00"
@Lt_07A0 = private constant [54 x i8] c"\09vec3 base = vec3(0.12,-0.07,-0.1); base.y -= 0.1/sy;\00"
@Lt_07A1 = private constant [80 x i8] c"    vec2 legs = sdStick( sq, base, base + vec3(0.2,-ccc,sss)*0.2, 0.04, 0.07 );\00"
@Lt_07A2 = private constant [41 x i8] c"    res.xz = smin( res.xz, legs, 0.07 );\00"
@Lt_07A3 = private constant [11 x i8] c"    // eye\00"
@Lt_07A4 = private constant [52 x i8] c"    float blink = pow(0.5+0.5*sin(2.1*iTime),20.0);\00"
@Lt_07A5 = private constant [72 x i8] c"    float eyeball = sdSphere(hq-vec3(0.08,0.27,0.06),0.065+0.02*blink);\00"
@Lt_07A6 = private constant [42 x i8] c"    res.x = smin( res.x, eyeball, 0.03 );\00"
@Lt_07A7 = private constant [38 x i8] c"    vec3 cq = hq-vec3(0.1,0.34,0.08);\00"
@Lt_07A8 = private constant [44 x i8] c"    cq.xy = mat2x2(0.8,0.6,-0.6,0.8)*cq.xy;\00"
@Lt_07A9 = private constant [49 x i8] c"    d = sdEllipsoid( cq, vec3(0.06,0.03,0.03) );\00"
@Lt_07AA = private constant [36 x i8] c"    res.x = smin( res.x, d, 0.03 );\00"
@Lt_07AB = private constant [94 x i8] c"    float eo = 1.0-0.5*smoothstep(0.01,0.04,length((hq.xy-vec2(0.095,0.285))*vec2(1.0,1.1)));\00"
@Lt_07AC = private constant [79 x i8] c"    res = opU( res, vec4(sdSphere(hq-vec3(0.08,0.28,0.08),0.060),3.0,0.0,eo));\00"
@Lt_07AD = private constant [83 x i8] c"    res = opU( res, vec4(sdSphere(hq-vec3(0.075,0.28,0.102),0.0395),4.0,0.0,1.0));\00"
@Lt_07AE = private constant [3 x i8] c"\09}\00"
@Lt_07AF = private constant [14 x i8] c"    // ground\00"
@Lt_07B0 = private constant [60 x i8] c"    float fh = -0.1 - 0.05*(sin(pos.x*2.0)+sin(pos.z*2.0));\00"
@Lt_07B1 = private constant [34 x i8] c"    float t5 = fract(atime+0.05);\00"
@Lt_07B2 = private constant [37 x i8] c"    float k = length(pos.xz-cen.xz);\00"
@Lt_07B3 = private constant [39 x i8] c"    float tt = t5*15.0-6.2831 - k*3.0;\00"
@Lt_07B4 = private constant [79 x i8] c"    fh -= 0.1*exp(-k*k)*sin(tt)*exp(-max(tt,0.0)/2.0)*smoothstep(0.0,0.01,t5);\00"
@Lt_07B5 = private constant [26 x i8] c"    float d = pos.y - fh;\00"
@Lt_07B6 = private constant [15 x i8] c"    // bubbles\00"
@Lt_07B7 = private constant [75 x i8] c"    vec3 vp = vec3( mod(abs(pos.x),3.0)-1.5,pos.y,mod(pos.z+1.5,3.0)-1.5);\00"
@Lt_07B8 = private constant [64 x i8] c"    vec2 id = vec2( floor(pos.x/3.0), floor((pos.z+1.5)/3.0) );\00"
@Lt_07B9 = private constant [39 x i8] c"    float fid = id.x*11.1 + id.y*31.7;\00"
@Lt_07BA = private constant [43 x i8] c"    float fy = fract(fid*1.312+atime*0.1);\00"
@Lt_07BB = private constant [27 x i8] c"    float y = -1.0+4.0*fy;\00"
@Lt_07BC = private constant [48 x i8] c"    vec3  rad = vec3(0.7,1.0+0.5*sin(fid),0.7);\00"
@Lt_07BD = private constant [67 x i8] c"    rad -= 0.1*(sin(pos.x*3.0)+sin(pos.y*4.0)+sin(pos.z*5.0));    \00"
@Lt_07BE = private constant [33 x i8] c"    float siz = 4.0*fy*(1.0-fy);\00"
@Lt_07BF = private constant [59 x i8] c"    float d2 = sdEllipsoid( vp-vec3(0.5,y,0.0), siz*rad );\00"
@Lt_07C0 = private constant [85 x i8] c"    d2 -= 0.03*smoothstep(-1.0,1.0,sin(18.0*pos.x)+sin(18.0*pos.y)+sin(18.0*pos.z));\00"
@Lt_07C1 = private constant [15 x i8] c"    d2 *= 0.6;\00"
@Lt_07C2 = private constant [22 x i8] c"    d2 = min(d2,2.0);\00"
@Lt_07C3 = private constant [29 x i8] c"    d = smin( d, d2, 0.32 );\00"
@Lt_07C4 = private constant [65 x i8] c"    if( d<res.x ) { res = vec4(d,1.0,0.0,1.0); hsha=sqrt(siz); }\00"
@Lt_07C5 = private constant [13 x i8] c"    // candy\00"
@Lt_07C6 = private constant [20 x i8] c"    float fs = 5.0;\00"
@Lt_07C7 = private constant [49 x i8] c"    vec3 qos = fs*vec3(pos.x, pos.y-fh, pos.z );\00"
@Lt_07C8 = private constant [58 x i8] c"    vec2 id = vec2( floor(qos.x+0.5), floor(qos.z+0.5) );\00"
@Lt_07C9 = private constant [70 x i8] c"    vec3 vp = vec3( fract(qos.x+0.5)-0.5,qos.y,fract(qos.z+0.5)-0.5);\00"
@Lt_07CA = private constant [69 x i8] c"    vp.xz += 0.1*cos( id.x*130.143 + id.y*120.372 + vec2(0.0,2.0) );\00"
@Lt_07CB = private constant [61 x i8] c"    float den = sin(id.x*0.1+sin(id.y*0.091))+sin(id.y*0.1);\00"
@Lt_07CC = private constant [41 x i8] c"    float fid = id.x*0.143 + id.y*0.372;\00"
@Lt_07CD = private constant [60 x i8] c"    float ra = smoothstep(0.0,0.1,den*0.1+fract(fid)-0.95);\00"
@Lt_07CE = private constant [36 x i8] c"    d = sdSphere( vp, 0.35*ra )/fs;\00"
@Lt_07CF = private constant [47 x i8] c"    if( d<res.x ) res = vec4(d,5.0,qos.y,1.0);\00"
@Lt_07D0 = private constant [50 x i8] c"vec2 iBox( in vec3 ro, in vec3 rd, in vec3 rad ) \00"
@Lt_07D1 = private constant [21 x i8] c"    vec3 m = 1.0/rd;\00"
@Lt_07D2 = private constant [19 x i8] c"    vec3 n = m*ro;\00"
@Lt_07D3 = private constant [25 x i8] c"    vec3 k = abs(m)*rad;\00"
@Lt_07D4 = private constant [22 x i8] c"    vec3 t1 = -n - k;\00"
@Lt_07D5 = private constant [22 x i8] c"    vec3 t2 = -n + k;\00"
@Lt_07D6 = private constant [46 x i8] c"\09return vec2( max( max( t1.x, t1.y ), t1.z ),\00"
@Lt_07D7 = private constant [48 x i8] c"\09             min( min( t2.x, t2.y ), t2.z ) );\00"
@Lt_07D8 = private constant [47 x i8] c"float mapShell( in vec3 p, out vec4 matInfo ) \00"
@Lt_07D9 = private constant [30 x i8] c"    const float sc = 1.0/1.0;\00"
@Lt_07DA = private constant [36 x i8] c"    p -= vec3(0.05,0.12,-0.09);    \00"
@Lt_07DB = private constant [13 x i8] c"    p *= sc;\00"
@Lt_07DC = private constant [62 x i8] c"    vec3 q = mat3(-0.6333234236, -0.7332753384, 0.2474039592,\00"
@Lt_07DD = private constant [62 x i8] c"                   0.7738444477, -0.6034162289, 0.1924931824,\00"
@Lt_07DE = private constant [67 x i8] c"                   0.0081370606,  0.3133626215, 0.9495986813) * p;\00"
@Lt_07DF = private constant [28 x i8] c"    const float b = 0.1759;\00"
@Lt_07E0 = private constant [30 x i8] c"    float r = length( q.xy );\00"
@Lt_07E1 = private constant [32 x i8] c"    float t = atan( q.y, q.x );\00"
@Lt_07E2 = private constant [2 x i8] c" \00"
@Lt_07E3 = private constant [86 x i8] c"    // https://swiftcoder.wordpress.com/2010/06/21/logarithmic-spiral-distance-field/\00"
@Lt_07E4 = private constant [39 x i8] c"    float n = (log(r)/b - t)/(2.0*pi);\00"
@Lt_07E5 = private constant [27 x i8] c"    const float th = 0.11;\00"
@Lt_07E6 = private constant [39 x i8] c"    float nm = (log(th)/b-t)/(2.0*pi);\00"
@Lt_07E7 = private constant [19 x i8] c"    n = min(n,nm);\00"
@Lt_07E8 = private constant [27 x i8] c"    float ni = floor( n );\00"
@Lt_07E9 = private constant [42 x i8] c"    float r1 = exp( b * (t + 2.0*pi*ni));\00"
@Lt_07EA = private constant [30 x i8] c"    float r2 = r1 * 3.019863;\00"
@Lt_07EB = private constant [14 x i8] c"    //-------\00"
@Lt_07EC = private constant [78 x i8] c"    float h1 = q.z + 1.5*r1 - 0.5; float d1 = sqrt((r1-r)*(r1-r)+h1*h1) - r1;\00"
@Lt_07ED = private constant [78 x i8] c"    float h2 = q.z + 1.5*r2 - 0.5; float d2 = sqrt((r2-r)*(r2-r)+h2*h2) - r2;\00"
@Lt_07EE = private constant [21 x i8] c"    float d, dx, dy;\00"
@Lt_07EF = private constant [44 x i8] c"    if( d1<d2 ) { d = d1; dx=r1-r; dy=h1; }\00"
@Lt_07F0 = private constant [44 x i8] c"    else        { d = d2; dx=r2-r; dy=h2; }\00"
@Lt_07F1 = private constant [61 x i8] c"    float di = textureLod( iChannel2, vec2(t+r,0.5), 0. ).x;\00"
@Lt_07F2 = private constant [19 x i8] c"    d += 0.002*di;\00"
@Lt_07F3 = private constant [43 x i8] c"    matInfo = vec4(dx,dy,r/0.4,t/3.14159);\00"
@Lt_07F4 = private constant [16 x i8] c"    vec3 s = q;\00"
@Lt_07F5 = private constant [34 x i8] c"    q = q - vec3(0.34,-0.1,0.03);\00"
@Lt_07F6 = private constant [40 x i8] c"    q.xy = mat2(0.8,0.6,-0.6,0.8)*q.xy;\00"
@Lt_07F7 = private constant [55 x i8] c"    d = smin( d, sdTorus( q, vec2(0.28,0.05) ), 0.06);\00"
@Lt_07F8 = private constant [82 x i8] c"    d = smax( d, -sdEllipsoid(q,vec3(0.0,0.0,0.0),vec3(0.24,0.36,0.24) ), 0.03 );\00"
@Lt_07F9 = private constant [83 x i8] c"    d = smax( d, -sdEllipsoid(s,vec3(0.52,-0.0,0.0),vec3(0.42,0.23,0.5) ), 0.05 );\00"
@Lt_07FA = private constant [17 x i8] c"    return d/sc;\00"
@Lt_07FB = private constant [42 x i8] c"vec2 mapSnail( vec3 p, out vec4 matInfo )\00"
@Lt_07FC = private constant [38 x i8] c"    vec3 head = vec3(-0.76,0.6,-0.3);\00"
@Lt_07FD = private constant [23 x i8] c"    vec3 q = p - head;\00"
@Lt_07FE = private constant [6 x i8] c"#if 1\00"
@Lt_07FF = private constant [102 x i8] c"    vec4 b1 = sdBezier( vec3(-0.13,-0.65,0.0), vec3(0.24,0.9+0.1,0.0), head+vec3(0.04,0.01,0.0), p );\00"
@Lt_0800 = private constant [21 x i8] c"    float d1 = b1.x;\00"
@Lt_0801 = private constant [75 x i8] c"    d1 -= smoothstep(0.0,0.2,b1.y)*(0.16 - 0.07*smoothstep(0.5,1.0,b1.y));\00"
@Lt_0802 = private constant [98 x i8] c"    b1 = sdBezier( vec3(-0.085,0.0,0.0), vec3(-0.1,0.9-0.05,0.0), head+vec3(0.06,-0.08,0.0), p );\00"
@Lt_0803 = private constant [21 x i8] c"    float d2 = b1.x;\00"
@Lt_0804 = private constant [27 x i8] c"    d2 -= 0.1 - 0.06*b1.y;\00"
@Lt_0805 = private constant [31 x i8] c"    d1 = smin( d1, d2, 0.03 );\00"
@Lt_0806 = private constant [26 x i8] c"    matInfo.xyz = b1.yzw;\00"
@Lt_0807 = private constant [108 x i8] c"    vec4 b1 = sdBezier( vec3(-0.13,-0.65,0.0), vec3(0.24,0.9+0.11,0.0), head+vec3(0.05,0.01-0.02,0.0), p );\00"
@Lt_0808 = private constant [80 x i8] c"    d1 -= smoothstep(0.0,0.2,b1.y)*(0.16 - 0.75*0.07*smoothstep(0.5,1.0,b1.y));\00"
@Lt_0809 = private constant [14 x i8] c"    float d2;\00"
@Lt_080A = private constant [51 x i8] c"    d2 = sdSphere( q, vec4(0.0,-0.06,0.0,0.085) );\00"
@Lt_080B = private constant [65 x i8] c"    d1 = smin( d1, sdSphere(p,vec4(0.05,0.52,0.0,0.13)), 0.07 );\00"
@Lt_080C = private constant [40 x i8] c"    q.xz = mat2(0.8,0.6,-0.6,0.8)*q.xz;\00"
@Lt_080D = private constant [38 x i8] c"    vec3 sq = vec3( q.xy, abs(q.z) );\00"
@Lt_080E = private constant [19 x i8] c"    // top antenas\00"
@Lt_080F = private constant [84 x i8] c"    vec3 af = 0.05*sin(0.5*iTime+vec3(0.0,1.0,3.0) + vec3(2.0,1.0,0.0)*sign(q.z) );\00"
@Lt_0810 = private constant [84 x i8] c"    vec4 b2 = sdBezier( vec3(0.0), vec3(-0.1,0.2,0.2), vec3(-0.3,0.2,0.3)+af, sq );\00"
@Lt_0811 = private constant [21 x i8] c"    float d3 = b2.x;\00"
@Lt_0812 = private constant [29 x i8] c"    d3 -= 0.03 - 0.025*b2.y;\00"
@Lt_0813 = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.04 );\00"
@Lt_0814 = private constant [66 x i8] c"    d3 = sdSphere( sq, vec4(-0.3,0.2,0.3,0.016) + vec4(af,0.0) );\00"
@Lt_0815 = private constant [35 x i8] c"    d1 = smin( d1, d3, 0.01 );    \00"
@Lt_0816 = private constant [22 x i8] c"    // bottom antenas\00"
@Lt_0817 = private constant [84 x i8] c"    vec3 bf = 0.02*sin(0.3*iTime+vec3(4.0,1.0,2.0) + vec3(3.0,0.0,1.0)*sign(q.z) );\00"
@Lt_0818 = private constant [79 x i8] c"    vec2 b3 = udSegment( sq, vec3(0.06,-0.05,0.0), vec3(-0.04,-0.2,0.18)+bf );\00"
@Lt_0819 = private constant [15 x i8] c"    d3 = b3.x;\00"
@Lt_081A = private constant [29 x i8] c"    d3 -= 0.025 - 0.02*b3.y;\00"
@Lt_081B = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.06 );\00"
@Lt_081C = private constant [67 x i8] c"    d3 = sdSphere( sq, vec4(-0.04,-0.2,0.18,0.008)+vec4(bf,0.0) );\00"
@Lt_081D = private constant [31 x i8] c"    d1 = smin( d1, d3, 0.02 );\00"
@Lt_081E = private constant [14 x i8] c"    // bottom\00"
@Lt_081F = private constant [38 x i8] c"    vec3 pp = p-vec3(-0.17,0.15,0.0);\00"
@Lt_0820 = private constant [28 x i8] c"    float co = 0.988771078;\00"
@Lt_0821 = private constant [28 x i8] c"    float si = 0.149438132;\00"
@Lt_0822 = private constant [38 x i8] c"    pp.xy = mat2(co,-si,si,co)*pp.xy;\00"
@Lt_0823 = private constant [87 x i8] c"    d1 = smin( d1, sdEllipsoid( pp, vec3(0.0,0.0,0.0), vec3(0.084,0.3,0.15) ), 0.05 );\00"
@Lt_0824 = private constant [90 x i8] c"    d1 = smax( d1, -sdEllipsoid( pp, vec3(-0.08,-0.0,0.0), vec3(0.06,0.55,0.1) ), 0.02 );\00"
@Lt_0825 = private constant [12 x i8] c"    // disp\00"
@Lt_0826 = private constant [57 x i8] c"    float dis = textureLod( iChannel1, 5.0*p.xy, 0. ).x;\00"
@Lt_0827 = private constant [57 x i8] c"    float dx = 0.5 + 0.5*(1.0-smoothstep(0.5,1.0,b1.y));\00"
@Lt_0828 = private constant [28 x i8] c"    d1 -= 0.005*dis*dx*0.5;\00"
@Lt_0829 = private constant [25 x i8] c"    return vec2(d1,1.0);\00"
@Lt_082A = private constant [27 x i8] c"float mapDrop( in vec3 p )\00"
@Lt_082B = private constant [33 x i8] c"    p -= vec3(-0.26,0.25,-0.02);\00"
@Lt_082C = private constant [24 x i8] c"    p.x -= 2.5*p.y*p.y;\00"
@Lt_082D = private constant [77 x i8] c"    return sdCapsule( p, vec3(0.0,-0.06,0.0), vec3(0.014,0.06,0.0), 0.037 );\00"
@Lt_082E = private constant [27 x i8] c"float mapLeaf( in vec3 p )\00"
@Lt_082F = private constant [31 x i8] c"    p -= vec3(-1.8,0.6,-0.75);\00"
@Lt_0830 = private constant [44 x i8] c"    p = mat3(0.671212, 0.366685, -0.644218,\00"
@Lt_0831 = private constant [44 x i8] c"            -0.479426, 0.877583,  0.000000,\00"
@Lt_0832 = private constant [47 x i8] c"             0.565354, 0.308854,  0.764842)*p;\00"
@Lt_0833 = private constant [36 x i8] c"    p.y += 0.2*exp(-abs(2.0*p.z) );\00"
@Lt_0834 = private constant [86 x i8] c"    float ph = 0.25*50.0*p.x - 0.25*75.0*abs(p.z);// + 1.0*sin(5.0*p.x)*sin(5.0*p.z);\00"
@Lt_0835 = private constant [26 x i8] c"    float rr = sin( ph );\00"
@Lt_0836 = private constant [20 x i8] c"    rr = rr*rr;    \00"
@Lt_0837 = private constant [21 x i8] c"    p.y += 0.005*rr;\00"
@Lt_0838 = private constant [44 x i8] c"    float r = clamp((p.x+2.0)/4.0,0.0,1.0);\00"
@Lt_0839 = private constant [40 x i8] c"    r = 0.0001 + r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_083A = private constant [24 x i8] c"    rr = sin( ph*2.0 );\00"
@Lt_083B = private constant [35 x i8] c"    rr *= 0.5+0.5*sin( p.x*12.0 );\00"
@Lt_083C = private constant [25 x i8] c"    float ri = 0.035*rr;\00"
@Lt_083D = private constant [66 x i8] c"    float d = sdEllipsoid( p, vec3(0.0), vec3(2.0,0.25*r,r+ri) );\00"
@Lt_083E = private constant [25 x i8] c"    float d2 = p.y-0.02;\00"
@Lt_083F = private constant [30 x i8] c"    d = smax( d, -d2, 0.02 );\00"
@Lt_0840 = private constant [43 x i8] c"vec2 mapOpaque( vec3 p, out vec4 matInfo )\00"
@Lt_0841 = private constant [25 x i8] c"    matInfo = vec4(0.0);\00"
@Lt_0842 = private constant [21 x i8] c"   \09//--------------\00"
@Lt_0843 = private constant [39 x i8] c"    vec2 res = mapSnail( p, matInfo );\00"
@Lt_0844 = private constant [22 x i8] c"    //---------------\00"
@Lt_0845 = private constant [21 x i8] c"    vec4 tmpMatInfo;\00"
@Lt_0846 = private constant [46 x i8] c"    float d4 = mapShell( p, tmpMatInfo );    \00"
@Lt_0847 = private constant [66 x i8] c"    if( d4<res.x  ) { res = vec2(d4,2.0); matInfo = tmpMatInfo; }\00"
@Lt_0848 = private constant [13 x i8] c"    // plant\00"
@Lt_0849 = private constant [91 x i8] c"    vec4 b3 = sdBezier( vec3(-0.15,-1.5,0.0), vec3(-0.1,0.5,0.0), vec3(-0.6,1.5,0.0), p );\00"
@Lt_084A = private constant [15 x i8] c"    d4 = b3.x;\00"
@Lt_084B = private constant [28 x i8] c"    d4 -= 0.04 - 0.02*b3.y;\00"
@Lt_084C = private constant [44 x i8] c"    if( d4<res.x  ) { res = vec2(d4,3.0); }\00"
@Lt_084D = private constant [32 x i8] c"\09//----------------------------\00"
@Lt_084E = private constant [29 x i8] c"    float d5 = mapLeaf( p );\00"
@Lt_084F = private constant [39 x i8] c"    if( d5<res.x ) res = vec2(d5,4.0);\00"
@Lt_0850 = private constant [51 x i8] c"vec3 calcNormalOpaque( in vec3 pos, in float eps )\00"
@Lt_0851 = private constant [13 x i8] c"    vec4 kk;\00"
@Lt_0852 = private constant [40 x i8] c"    vec2 e = vec2(1.0,-1.0)*0.5773*eps;\00"
@Lt_0853 = private constant [62 x i8] c"    return normalize( e.xyy*mapOpaque( pos + e.xyy, kk ).x + \00"
@Lt_0854 = private constant [47 x i8] c"\09\09\09\09\09  e.yyx*mapOpaque( pos + e.yyx, kk ).x + \00"
@Lt_0855 = private constant [47 x i8] c"\09\09\09\09\09  e.yxy*mapOpaque( pos + e.yxy, kk ).x + \00"
@Lt_0856 = private constant [47 x i8] c"\09\09\09\09\09  e.xxx*mapOpaque( pos + e.xxx, kk ).x );\00"
@Lt_0857 = private constant [85 x i8] c"    // inspired by klems - a way to prevent the compiler from inlining map() 4 times\00"
@Lt_0858 = private constant [24 x i8] c"    vec3 n = vec3(0.0);\00"
@Lt_0859 = private constant [32 x i8] c"    for( int i=ZERO; i<4; i++ )\00"
@Lt_085A = private constant [73 x i8] c"        vec3 e = 0.5773*(2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);\00"
@Lt_085B = private constant [42 x i8] c"        n += e*mapOpaque(pos+eps*e,kk).x;\00"
@Lt_085C = private constant [25 x i8] c"    return normalize(n);\00"
@Lt_085D = private constant [11 x i8] c"#endif    \00"
@Lt_085E = private constant [76 x i8] c"//=========================================================================\00"
@Lt_085F = private constant [37 x i8] c"float mapLeafWaterDrops( in vec3 p )\00"
@Lt_0860 = private constant [16 x i8] c"    vec3 s = p;\00"
@Lt_0861 = private constant [3 x i8] c"  \00"
@Lt_0862 = private constant [16 x i8] c"    vec3 q = p;\00"
@Lt_0863 = private constant [31 x i8] c"    r = r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_0864 = private constant [64 x i8] c"    float d0 = sdEllipsoid( p, vec3(0.0), vec3(2.0,0.25*r,r) );\00"
@Lt_0865 = private constant [78 x i8] c"    float d1 = sdEllipsoid( q, vec3(0.5,0.0,0.2), 1.0*vec3(0.15,0.13,0.15) );\00"
@Lt_0866 = private constant [82 x i8] c"    float d2 = sdEllipsoid( q, vec3(0.8,-0.07,-0.15), 0.5*vec3(0.15,0.13,0.15) );\00"
@Lt_0867 = private constant [79 x i8] c"    float d3 = sdEllipsoid( s, vec3(0.76,-0.8,0.6), 0.5*vec3(0.15,0.2,0.15) );\00"
@Lt_0868 = private constant [77 x i8] c"    float d4 = sdEllipsoid( q, vec3(-0.5,0.09,-0.2), vec3(0.04,0.03,0.04) );\00"
@Lt_0869 = private constant [29 x i8] c"    d3 = max( d3, p.y-0.01);\00"
@Lt_086A = private constant [42 x i8] c"    return min( min(d1,d4), min(d2,d3) );\00"
@Lt_086B = private constant [48 x i8] c"vec2 mapTransparent( vec3 p, out vec4 matInfo )\00"
@Lt_086C = private constant [29 x i8] c"    float d5 = mapDrop( p );\00"
@Lt_086D = private constant [30 x i8] c"    vec2  res = vec2(d5,4.0);\00"
@Lt_086E = private constant [39 x i8] c"    float d6 = mapLeafWaterDrops( p );\00"
@Lt_086F = private constant [30 x i8] c"    res.x = min( res.x, d6 );\00"
@Lt_0870 = private constant [56 x i8] c"vec3 calcNormalTransparent( in vec3 pos, in float eps )\00"
@Lt_0871 = private constant [67 x i8] c"    return normalize( e.xyy*mapTransparent( pos + e.xyy, kk ).x + \00"
@Lt_0872 = private constant [52 x i8] c"\09\09\09\09\09  e.yyx*mapTransparent( pos + e.yyx, kk ).x + \00"
@Lt_0873 = private constant [52 x i8] c"\09\09\09\09\09  e.yxy*mapTransparent( pos + e.yxy, kk ).x + \00"
@Lt_0874 = private constant [52 x i8] c"\09\09\09\09\09  e.xxx*mapTransparent( pos + e.xxx, kk ).x );\00"
@Lt_0875 = private constant [41 x i8] c"float calcAO( in vec3 pos, in vec3 nor )\00"
@Lt_0876 = private constant [17 x i8] c"\09float ao = 0.0;\00"
@Lt_0877 = private constant [33 x i8] c"    for( int i=ZERO; i<32; i++ )\00"
@Lt_0878 = private constant [47 x i8] c"        vec3 ap = forwardSF( float(i), 32.0 );\00"
@Lt_0879 = private constant [35 x i8] c"        float h = hash1(float(i));\00"
@Lt_087A = private constant [37 x i8] c"\09\09ap *= sign( dot(ap,nor) ) * h*0.1;\00"
@Lt_087B = private constant [77 x i8] c"        ao += clamp( mapOpaque( pos + nor*0.01 + ap, kk ).x*3.0, 0.0, 1.0 );\00"
@Lt_087C = private constant [13 x i8] c"\09ao /= 32.0;\00"
@Lt_087D = private constant [38 x i8] c"    return clamp( ao*6.0, 0.0, 1.0 );\00"
@Lt_087E = private constant [42 x i8] c"float calcSSS( in vec3 pos, in vec3 nor )\00"
@Lt_087F = private constant [18 x i8] c"\09float occ = 0.0;\00"
@Lt_0880 = private constant [32 x i8] c"    for( int i=ZERO; i<8; i++ )\00"
@Lt_0881 = private constant [45 x i8] c"        float h = 0.002 + 0.11*float(i)/7.0;\00"
@Lt_0882 = private constant [74 x i8] c"        vec3 dir = normalize( sin( float(i)*13.0 + vec3(0.0,2.1,4.2) ) );\00"
@Lt_0883 = private constant [35 x i8] c"        dir *= sign(dot(dir,nor));\00"
@Lt_0884 = private constant [47 x i8] c"        occ += (h-mapOpaque(pos-h*dir, kk).x);\00"
@Lt_0885 = private constant [53 x i8] c"    occ = clamp( 1.0 - 11.0*occ/8.0, 0.0, 1.0 );    \00"
@Lt_0886 = private constant [20 x i8] c"    return occ*occ;\00"
@Lt_0887 = private constant [59 x i8] c"float calcSoftshadow( in vec3 ro, in vec3 rd, float time )\00"
@Lt_0888 = private constant [21 x i8] c"    float res = 1.0;\00"
@Lt_0889 = private constant [23 x i8] c"    float tmax = 12.0;\00"
@Lt_088A = private constant [59 x i8] c"    float tp = (3.5-ro.y)/rd.y; // raytrace bounding plane\00"
@Lt_088B = private constant [41 x i8] c"    if( tp>0.0 ) tmax = min( tmax, tp );\00"
@Lt_088C = private constant [12 x i8] c"\09#endif    \00"
@Lt_088D = private constant [20 x i8] c"    float t = 0.02;\00"
@Lt_088E = private constant [30 x i8] c"    for( int i=0; i<50; i++ )\00"
@Lt_088F = private constant [38 x i8] c"\09\09float h = map( ro + rd*t, time ).x;\00"
@Lt_0890 = private constant [51 x i8] c"        res = min( res, mix(1.0,16.0*h/t, hsha) );\00"
@Lt_0891 = private constant [37 x i8] c"        t += clamp( h, 0.05, 0.40 );\00"
@Lt_0892 = private constant [41 x i8] c"        if( res<0.005 || t>tmax ) break;\00"
@Lt_0893 = private constant [35 x i8] c"    return clamp( res, 0.0, 1.0 );\00"
@Lt_0894 = private constant [43 x i8] c"vec3 calcNormal( in vec3 pos, float time )\00"
@Lt_0895 = private constant [42 x i8] c"    vec2 e = vec2(1.0,-1.0)*0.5773*0.001;\00"
@Lt_0896 = private constant [58 x i8] c"    return normalize( e.xyy*map( pos + e.xyy, time ).x + \00"
@Lt_0897 = private constant [43 x i8] c"\09\09\09\09\09  e.yyx*map( pos + e.yyx, time ).x + \00"
@Lt_0898 = private constant [43 x i8] c"\09\09\09\09\09  e.yxy*map( pos + e.yxy, time ).x + \00"
@Lt_0899 = private constant [43 x i8] c"\09\09\09\09\09  e.xxx*map( pos + e.xxx, time ).x );\00"
@Lt_089A = private constant [40 x i8] c"        n += e*map(pos+0.001*e,time).x;\00"
@Lt_089B = private constant [57 x i8] c"vec3 jitter(vec3 d, float phi, float sina, float cosa) {\00"
@Lt_089C = private constant [76 x i8] c"    vec3 w = normalize(d), u = normalize(cross(w.yzx, w)), v = cross(w, u);\00"
@Lt_089D = private constant [56 x i8] c"    return (u*cos(phi) + v*sin(phi)) * sina + w * cosa;\00"
@Lt_089E = private constant [60 x i8] c"float calcOcclusion( in vec3 pos, in vec3 nor, float time )\00"
@Lt_089F = private constant [21 x i8] c"    float sca = 1.0;\00"
@Lt_08A0 = private constant [32 x i8] c"    for( int i=ZERO; i<5; i++ )\00"
@Lt_08A1 = private constant [44 x i8] c"        float h = 0.01 + 0.11*float(i)/4.0;\00"
@Lt_08A2 = private constant [33 x i8] c"        vec3 opos = pos + h*nor;\00"
@Lt_08A3 = private constant [39 x i8] c"        float d = map( opos, time ).x;\00"
@Lt_08A4 = private constant [26 x i8] c"        occ += (h-d)*sca;\00"
@Lt_08A5 = private constant [21 x i8] c"        sca *= 0.95;\00"
@Lt_08A6 = private constant [45 x i8] c"    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\00"
@Lt_08A7 = private constant [56 x i8] c"float calcSoftShadow( in vec3 ro, in vec3 rd, float k )\00"
@Lt_08A8 = private constant [17 x i8] c"    vec4 kk;    \00"
@Lt_08A9 = private constant [20 x i8] c"    float t = 0.01;\00"
@Lt_08AA = private constant [47 x i8] c"        float h = mapOpaque(ro + rd*t, kk ).x;\00"
@Lt_08AB = private constant [53 x i8] c"        res = min( res, smoothstep(0.0,1.0,k*h/t) );\00"
@Lt_08AC = private constant [36 x i8] c"        t += clamp( h, 0.04, 0.1 );\00"
@Lt_08AD = private constant [24 x i8] c"\09\09if( res<0.01 ) break;\00"
@Lt_08AE = private constant [31 x i8] c"    return clamp(res,0.0,1.0);\00"
@Lt_08AF = private constant [63 x i8] c"float checkersGradBox( in vec2 p, in vec2 dpdx, in vec2 dpdy )\00"
@Lt_08B0 = private constant [21 x i8] c"    // filter kernel\00"
@Lt_08B1 = private constant [42 x i8] c"    vec2 w = abs(dpdx)+abs(dpdy) + 0.001;\00"
@Lt_08B2 = private constant [40 x i8] c"    // analytical integral (box filter)\00"
@Lt_08B3 = private constant [82 x i8] c"    vec2 i = 2.0*(abs(fract((p-0.5*w)*0.5)-0.5)-abs(fract((p+0.5*w)*0.5)-0.5))/w;\00"
@Lt_08B4 = private constant [19 x i8] c"    // xor pattern\00"
@Lt_08B5 = private constant [48 x i8] c"    return 0.5 - 0.5*i.x*i.y;                  \00"
@Lt_08B6 = private constant [84 x i8] c"vec3 shadeOpaque( in vec3 ro, in vec3 rd, in float t, in float m, in vec4 matInfo )\00"
@Lt_08B7 = private constant [23 x i8] c"    float eps = 0.002;\00"
@Lt_08B8 = private constant [26 x i8] c"    vec3 pos = ro + t*rd;\00"
@Lt_08B9 = private constant [45 x i8] c"    vec3 nor = calcNormalOpaque( pos, eps );\00"
@Lt_08BA = private constant [28 x i8] c"    vec3 mateD = vec3(0.0);\00"
@Lt_08BB = private constant [28 x i8] c"    vec3 mateS = vec3(0.0);\00"
@Lt_08BC = private constant [28 x i8] c"    vec2 mateK = vec2(0.0);\00"
@Lt_08BD = private constant [28 x i8] c"    vec3 mateE = vec3(0.0);\00"
@Lt_08BE = private constant [22 x i8] c"    float focc = 1.0;\00"
@Lt_08BF = private constant [22 x i8] c"    float fsha = 1.0;\00"
@Lt_08C0 = private constant [30 x i8] c"    if( m<1.5 ) // snail body\00"
@Lt_08C1 = private constant [56 x i8] c"        float dis = texture( iChannel1, 5.0*pos.xy ).x;\00"
@Lt_08C2 = private constant [80 x i8] c"        float be = sdEllipsoid( pos, vec3(-0.3,-0.5,-0.1), vec3(0.2,1.0,0.5) );\00"
@Lt_08C3 = private constant [56 x i8] c"        be = 1.0-smoothstep( -0.01, 0.01, be );        \00"
@Lt_08C4 = private constant [40 x i8] c"        float ff = abs(matInfo.x-0.20);\00"
@Lt_08C5 = private constant [73 x i8] c"        mateS = 6.0*mix( 0.7*vec3(2.0,1.2,0.2), vec3(2.5,1.8,0.9), ff );\00"
@Lt_08C6 = private constant [26 x i8] c"        mateS += 2.0*dis;\00"
@Lt_08C7 = private constant [22 x i8] c"        mateS *= 1.5;\00"
@Lt_08C8 = private constant [34 x i8] c"        mateS *= 1.0 + 0.5*ff*ff;\00"
@Lt_08C9 = private constant [29 x i8] c"        mateS *= 1.0-0.5*be;\00"
@Lt_08CA = private constant [35 x i8] c"        mateD = vec3(1.0,0.8,0.4);\00"
@Lt_08CB = private constant [22 x i8] c"        mateD *= dis;\00"
@Lt_08CC = private constant [24 x i8] c"        mateD *= 0.015;\00"
@Lt_08CD = private constant [44 x i8] c"        mateD += vec3(0.8,0.4,0.3)*0.15*be;\00"
@Lt_08CE = private constant [45 x i8] c"        mateK = vec2( 60.0, 0.7 + 2.0*dis );\00"
@Lt_08CF = private constant [54 x i8] c"        float f = clamp( dot( -rd, nor ), 0.0, 1.0 );\00"
@Lt_08D0 = private constant [31 x i8] c"        f = 1.0-pow( f, 8.0 );\00"
@Lt_08D1 = private constant [68 x i8] c"        f = 1.0 - (1.0-f)*(1.0-texture( iChannel2, 0.3*pos.xy ).x);\00"
@Lt_08D2 = private constant [58 x i8] c"        mateS *= vec3(0.5,0.1,0.0) + f*vec3(0.5,0.9,1.0);\00"
@Lt_08D3 = private constant [57 x i8] c"        float b = 1.0-smoothstep( 0.25,0.55,abs(pos.y));\00"
@Lt_08D4 = private constant [90 x i8] c"        focc = 0.2 + 0.8*smoothstep( 0.0, 0.15, sdSphere(pos,vec4(0.05,0.52,0.0,0.13)) );\00"
@Lt_08D5 = private constant [27 x i8] c"\09else if( m<2.5 ) // shell\00"
@Lt_08D6 = private constant [27 x i8] c"        mateK = vec2(0.0);\00"
@Lt_08D7 = private constant [80 x i8] c"        float tip = 1.0-smoothstep(0.05,0.4, length(pos-vec3(0.17,0.2,0.35)) );\00"
@Lt_08D8 = private constant [77 x i8] c"        mateD = mix( 0.7*vec3(0.2,0.21,0.22), 0.2*vec3(0.15,0.1,0.0), tip );\00"
@Lt_08D9 = private constant [78 x i8] c"        vec2 uv = vec2( .5*atan(matInfo.x,matInfo.y)/3.1416, 1.5*matInfo.w );\00"
@Lt_08DA = private constant [84 x i8] c"        vec3 ral = texture( iChannel1, vec2(2.0*matInfo.w+matInfo.z*0.5,0.5) ).xxx;\00"
@Lt_08DB = private constant [34 x i8] c"        mateD *= 0.25 + 0.75*ral;\00"
@Lt_08DC = private constant [87 x i8] c"        float pa = smoothstep(-0.2,0.2, 0.3+sin(2.0+40.0*uv.x + 3.0*sin(11.0*uv.x)) );\00"
@Lt_08DD = private constant [57 x i8] c"        float bar = mix(pa,1.0,smoothstep(0.7,1.0,tip));\00"
@Lt_08DE = private constant [82 x i8] c"        bar *= (matInfo.z<0.6) ? 1.0 : smoothstep( 0.17, 0.21, abs(matInfo.w)  );\00"
@Lt_08DF = private constant [62 x i8] c"        mateD *= vec3(0.06,0.03,0.0)+vec3(0.94,0.97,1.0)*bar;\00"
@Lt_08E0 = private constant [35 x i8] c"        mateK = vec2( 64.0, 0.2 );\00"
@Lt_08E1 = private constant [59 x i8] c"        mateS = 1.5*vec3(1.0,0.65,0.6) * (1.0-tip);//*0.5;\00"
@Lt_08E2 = private constant [30 x i8] c"    else if( m<3.5 ) // plant\00"
@Lt_08E3 = private constant [40 x i8] c"        mateD = vec3(0.05,0.1,0.0)*0.2;\00"
@Lt_08E4 = private constant [41 x i8] c"        mateS = vec3(0.1,0.2,0.02)*25.0;\00"
@Lt_08E5 = private constant [31 x i8] c"        mateK = vec2(5.0,1.0);\00"
@Lt_08E6 = private constant [55 x i8] c"        float fre = clamp(1.0+dot(nor,rd), 0.0, 1.0 );\00"
@Lt_08E7 = private constant [44 x i8] c"        mateD += 0.2*fre*vec3(1.0,0.5,0.1);\00"
@Lt_08E8 = private constant [56 x i8] c"        vec3 te = texture( iChannel2, pos.xy*0.2 ).xyz;\00"
@Lt_08E9 = private constant [31 x i8] c"        mateS *= 0.5 + 1.5*te;\00"
@Lt_08EA = private constant [55 x i8] c"        mateE = 0.5*vec3(0.1,0.1,0.03)*(0.2+0.8*te.x);\00"
@Lt_08EB = private constant [32 x i8] c"    else //if( m<4.5 ) // leave\00"
@Lt_08EC = private constant [45 x i8] c"        vec3 p = pos - vec3(-1.8,0.6,-0.75);\00"
@Lt_08ED = private constant [20 x i8] c"        vec3 s = p;\00"
@Lt_08EE = private constant [48 x i8] c"        p = mat3(0.671212, 0.366685, -0.644218,\00"
@Lt_08EF = private constant [48 x i8] c"                -0.479426, 0.877583,  0.000000,\00"
@Lt_08F0 = private constant [51 x i8] c"                 0.565354, 0.308854,  0.764842)*p;\00"
@Lt_08F1 = private constant [20 x i8] c"        vec3 q = p;\00"
@Lt_08F2 = private constant [40 x i8] c"        p.y += 0.2*exp(-abs(2.0*p.z) );\00"
@Lt_08F3 = private constant [53 x i8] c"        float v = smoothstep( 0.01, 0.02, abs(p.z));\00"
@Lt_08F4 = private constant [70 x i8] c"        float rr = sin( 4.0*0.25*50.0*p.x - 4.0*0.25*75.0*abs(p.z) );\00"
@Lt_08F5 = private constant [55 x i8] c"        vec3 te = texture( iChannel2, p.xz*0.35 ).xyz;\00"
@Lt_08F6 = private constant [48 x i8] c"        float r = clamp((p.x+2.0)/4.0,0.0,1.0);\00"
@Lt_08F7 = private constant [35 x i8] c"        r = r*(1.0-r)*(1.0-r)*6.0;\00"
@Lt_08F8 = private constant [45 x i8] c"        float ff = length(p.xz/vec2(2.0,r));\00"
@Lt_08F9 = private constant [72 x i8] c"        mateD = mix( vec3(0.07,0.1,0.0), vec3(0.05,0.2,0.01)*0.25, v );\00"
@Lt_08FA = private constant [60 x i8] c"        mateD = mix( mateD, vec3(0.16,0.2,0.01)*0.25, ff );\00"
@Lt_08FB = private constant [32 x i8] c"        mateD *= 1.0 + 0.25*te;\00"
@Lt_08FC = private constant [22 x i8] c"        mateD *= 0.8;\00"
@Lt_08FD = private constant [41 x i8] c"        mateS = vec3(0.15,0.2,0.02)*0.8;\00"
@Lt_08FE = private constant [31 x i8] c"        mateS *= 1.0 + 0.2*rr;\00"
@Lt_08FF = private constant [22 x i8] c"        mateS *= 0.8;\00"
@Lt_0900 = private constant [33 x i8] c"        mateK = vec2(64.0,0.25);\00"
@Lt_0901 = private constant [32 x i8] c"        //---------------------\00"
@Lt_0902 = private constant [71 x i8] c"        nor.xz += v*0.15*(-1.0+2.0*texture( iChannel3, 1.0*p.xz ).xy);\00"
@Lt_0903 = private constant [32 x i8] c"        nor = normalize( nor );\00"
@Lt_0904 = private constant [96 x i8] c"        float d1 = sdEllipsoid( q, vec3( 0.5-0.07, 0.0,  0.20), 1.0*vec3(1.4*0.15,0.13,0.15) );\00"
@Lt_0905 = private constant [96 x i8] c"        float d2 = sdEllipsoid( q, vec3( 0.8-0.05,-0.07,-0.15), 0.5*vec3(1.3*0.15,0.13,0.15) );\00"
@Lt_0906 = private constant [96 x i8] c"        float d4 = sdEllipsoid( q, vec3(-0.5-0.07, 0.09,-0.20), 1.0*vec3(1.4*0.04,0.03,0.04) );\00"
@Lt_0907 = private constant [39 x i8] c"        float dd = min(d1,min(d2,d4));\00"
@Lt_0908 = private constant [52 x i8] c"        fsha = 0.05 + 0.95*smoothstep(0.0,0.05,dd);\00"
@Lt_0909 = private constant [65 x i8] c"        d1 = abs( sdCircle( q.xz, vec2( 0.5, 0.20), 1.0*0.15 ));\00"
@Lt_090A = private constant [65 x i8] c"        d2 = abs( sdCircle( q.xz, vec2( 0.8,-0.15), 0.5*0.15 ));\00"
@Lt_090B = private constant [65 x i8] c"        d4 = abs( sdCircle( q.xz, vec2(-0.5,-0.20), 1.0*0.04 ));\00"
@Lt_090C = private constant [33 x i8] c"        dd = min(d1,min(d2,d4));\00"
@Lt_090D = private constant [53 x i8] c"        focc *= 0.55 + 0.45*smoothstep(0.0,0.08,dd);\00"
@Lt_090E = private constant [54 x i8] c"        d1 = distance( q.xz, vec2( 0.5-0.07, 0.20) );\00"
@Lt_090F = private constant [54 x i8] c"        d2 = distance( q.xz, vec2( 0.8-0.03,-0.15) );\00"
@Lt_0910 = private constant [51 x i8] c"        fsha += (1.0-smoothstep(0.0,0.10,d1))*1.5;\00"
@Lt_0911 = private constant [55 x i8] c"        fsha += (1.0-smoothstep(0.0,0.05,d2))*1.5;    \00"
@Lt_0912 = private constant [39 x i8] c"    vec3 hal = normalize( sunDir-rd );\00"
@Lt_0913 = private constant [51 x i8] c"    float fre = clamp(1.0+dot(nor,rd), 0.0, 1.0 );\00"
@Lt_0914 = private constant [41 x i8] c"    float occ = calcAO( pos, nor )*focc;\00"
@Lt_0915 = private constant [37 x i8] c"    float sss = calcSSS( pos, nor );\00"
@Lt_0916 = private constant [77 x i8] c"    sss = sss*occ + fre*occ + (0.5+0.5*fre)*pow(abs(matInfo.x-0.2),1.0)*occ;\00"
@Lt_0917 = private constant [53 x i8] c"    float dif1 = clamp( dot(nor,sunDir), 0.0, 1.0 );\00"
@Lt_0918 = private constant [54 x i8] c"    float sha = calcSoftShadow( pos, sunDir, 20.0 ); \00"
@Lt_0919 = private constant [22 x i8] c"    dif1 *= sha*fsha;\00"
@Lt_091A = private constant [50 x i8] c"    float spe1 = clamp( dot(nor,hal), 0.0, 1.0 );\00"
@Lt_091B = private constant [50 x i8] c"    float bou = clamp( 0.3-0.7*nor.y, 0.0, 1.0 );\00"
@Lt_091C = private constant [20 x i8] c"    // illumination\00"
@Lt_091D = private constant [26 x i8] c"    vec3 col = vec3(0.0);\00"
@Lt_091E = private constant [60 x i8] c"    col += 7.0*vec3(1.7,1.2,0.6)*dif1*2.0;           // sun\00"
@Lt_091F = private constant [64 x i8] c"    col += 4.0*vec3(0.2,1.2,1.6)*occ*(0.5+0.5*nor.y);    // sky\00"
@Lt_0920 = private constant [67 x i8] c"    col += 1.8*vec3(0.1,2.0,0.1)*bou*occ;                // bounce\00"
@Lt_0921 = private constant [18 x i8] c"    col *= mateD;\00"
@Lt_0922 = private constant [96 x i8] c"    col += 0.4*sss*(vec3(0.15,0.1,0.05)+vec3(0.85,0.9,0.95)*dif1)*(0.05+0.95*occ)*mateS; // sss\00"
@Lt_0923 = private constant [38 x i8] c"    col = pow(col,vec3(0.6,0.8,1.0));\00"
@Lt_0924 = private constant [120 x i8] c"    col += vec3(1.0,1.0,1.0)*0.2*pow( spe1, 1.0+mateK.x )*dif1*(0.04+0.96*pow(fre,4.0))*mateK.x*mateK.y;   // sun lobe1\00"
@Lt_0925 = private constant [120 x i8] c"    col += vec3(1.0,1.0,1.0)*0.1*pow( spe1, 1.0+mateK.x/3.0 )*dif1*(0.1+0.9*pow(fre,4.0))*mateK.x*mateK.y; // sun lobe2\00"
@Lt_0927 = private constant [151 x i8] c"\09col += 0.1*vec3(1.0,max(1.5-0.7*col.y,0.0),2.0)*occ*occ*smoothstep( 0.0, 0.3, reflect( rd, nor ).y )*mateK.x*mateK.y*(0.04+0.96*pow(fre,5.0)); // sky\00"
@Lt_0928 = private constant [18 x i8] c"    col += mateE;\00"
@Lt_0929 = private constant [24 x i8] c"    return col;        \00"
@Lt_092A = private constant [118 x i8] c"vec3 shadeTransparent( in vec3 ro, in vec3 rd, in float t, in float m, in vec4 matInfo, in vec3 col, in float depth )\00"
@Lt_092B = private constant [23 x i8] c"    vec3 oriCol = col;\00"
@Lt_092C = private constant [26 x i8] c"    float dz = depth - t;\00"
@Lt_092D = private constant [39 x i8] c"    float ao = clamp(dz*50.0,0.0,1.0);\00"
@Lt_092E = private constant [27 x i8] c"    vec3  pos = ro + t*rd;\00"
@Lt_092F = private constant [53 x i8] c"    vec3  nor = calcNormalTransparent( pos, 0.002 );\00"
@Lt_0930 = private constant [57 x i8] c"    float fre = clamp( 1.0 + dot( rd, nor ), 0.0, 1.0 );\00"
@Lt_0931 = private constant [40 x i8] c"    vec3  hal = normalize( sunDir-rd );\00"
@Lt_0932 = private constant [37 x i8] c"    vec3  ref = reflect( -rd, nor );\00"
@Lt_0933 = private constant [53 x i8] c"    float spe2 = clamp( dot(ref,sunDir), 0.0, 1.0 );\00"
@Lt_0934 = private constant [28 x i8] c"    float ds = 1.6 - col.y;\00"
@Lt_0935 = private constant [60 x i8] c"    col *= mix( vec3(0.0,0.0,0.0), vec3(0.4,0.6,0.4), ao );\00"
@Lt_0936 = private constant [55 x i8] c"    col += ds*1.5*vec3(1.0,0.9,0.8)*pow( spe1, 80.0 );\00"
@Lt_0937 = private constant [61 x i8] c"    col += ds*0.2*vec3(0.9,1.0,1.0)*smoothstep(0.4,0.8,fre);\00"
@Lt_0938 = private constant [112 x i8] c"    col += ds*0.9*vec3(0.6,0.7,1.0)*smoothstep( -0.5, 0.5, -reflect( rd, nor ).y )*smoothstep(0.2,0.4,fre);    \00"
@Lt_0939 = private constant [55 x i8] c"    col += ds*0.5*vec3(1.0,0.9,0.8)*pow( spe2, 80.0 );\00"
@Lt_093A = private constant [55 x i8] c"    col += ds*0.5*vec3(1.0,0.9,0.8)*pow( spe2, 16.0 );\00"
@Lt_093B = private constant [107 x i8] c"    col += vec3(0.8,1.0,0.8)*0.5*smoothstep(0.3,0.6,texture( iChannel1, 0.8*nor.xy ).x)*(0.1+0.9*fre*fre);\00"
@Lt_093C = private constant [27 x i8] c"    // hide aliasing a bit\00"
@Lt_093D = private constant [57 x i8] c"    return mix( col, oriCol, smoothstep(0.6,1.0,fre) ); \00"
@Lt_093E = private constant [47 x i8] c"//--------------------------------------------\00"
@Lt_093F = private constant [31 x i8] c"vec3 calcNormal( in vec3 pos )\00"
@Lt_0940 = private constant [38 x i8] c"\09vec3 eps = vec3( 0.0001, 0.0, 0.0 );\00"
@Lt_0941 = private constant [26 x i8] c"    float d = map(pos).x;\00"
@Lt_0942 = private constant [28 x i8] c"    return normalize( vec3(\00"
@Lt_0943 = private constant [29 x i8] c"\09    map(pos+eps.xyy).x - d,\00"
@Lt_0944 = private constant [29 x i8] c"\09    map(pos+eps.yxy).x - d,\00"
@Lt_0945 = private constant [29 x i8] c"\09    map(pos+eps.yyx).x - d)\00"
@Lt_0946 = private constant [4 x i8] c"\09);\00"
@Lt_0947 = private constant [39 x i8] c"CP findIntersection(vec3 p, vec3 rd) {\00"
@Lt_0948 = private constant [6 x i8] c"     \00"
@Lt_0949 = private constant [24 x i8] c"    float tmin = 0.000;\00"
@Lt_094A = private constant [23 x i8] c"    float tmax = 50.0;\00"
@Lt_094B = private constant [30 x i8] c"\09float precis = DIST_EPSILON;\00"
@Lt_094C = private constant [20 x i8] c"    float t = tmin;\00"
@Lt_094D = private constant [21 x i8] c"    float eta = -1.;\00"
@Lt_094E = private constant [14 x i8] c"    vec3 res;\00"
@Lt_094F = private constant [23 x i8] c"\09  \09res = map(p+rd*t);\00"
@Lt_0950 = private constant [21 x i8] c"        eta = res.z;\00"
@Lt_0951 = private constant [44 x i8] c"        if( res.x<precis || t>tmax ) break;\00"
@Lt_0952 = private constant [20 x i8] c"        t += res.x;\00"
@Lt_0953 = private constant [13 x i8] c"    p+=rd*t;\00"
@Lt_0954 = private constant [63 x i8] c"    // calculate normal in the father point to avoid artifacts\00"
@Lt_0955 = private constant [46 x i8] c"    vec3 n = calcNormal(p-rd*(precis-res.x));\00"
@Lt_0956 = private constant [32 x i8] c"    CP cp = CP(t, n, res.y, p);\00"
@Lt_0957 = private constant [15 x i8] c"    return cp;\00"
@Lt_0958 = private constant [107 x i8] c"vec2 intersectOpaque( in vec3 ro, in vec3 rd, const float mindist, const float maxdist, out vec4 matInfo )\00"
@Lt_0959 = private constant [27 x i8] c"    vec2 res = vec2(-1.0);\00"
@Lt_095A = private constant [23 x i8] c"    float t = mindist;\00"
@Lt_095B = private constant [33 x i8] c"    for( int i=ZERO; i<64; i++ )\00"
@Lt_095C = private constant [28 x i8] c"        vec3 p = ro + t*rd;\00"
@Lt_095D = private constant [42 x i8] c"        vec2 h = mapOpaque( p, matInfo );\00"
@Lt_095E = private constant [27 x i8] c"        res = vec2(t,h.y);\00"
@Lt_095F = private constant [49 x i8] c"        if( h.x<(0.001*t) ||  t>maxdist ) break;\00"
@Lt_0960 = private constant [22 x i8] c"        t += h.x*0.9;\00"
@Lt_0961 = private constant [112 x i8] c"vec2 intersectTransparent( in vec3 ro, in vec3 rd, const float mindist, const float maxdist, out vec4 matInfo )\00"
@Lt_0962 = private constant [47 x i8] c"        vec2 h = mapTransparent( p, matInfo );\00"
@Lt_0963 = private constant [18 x i8] c"        t += h.x;\00"
@Lt_0964 = private constant [59 x i8] c"vec3 refractCaustic(vec3 p, vec3 rd, vec3 ld, float eta) {\00"
@Lt_0965 = private constant [24 x i8] c"     vec3 cl = vec3(1);\00"
@Lt_0966 = private constant [33 x i8] c"    for(int j = 0; j < 2; ++j) {\00"
@Lt_0967 = private constant [41 x i8] c"        CP cp = findIntersection(p, rd);\00"
@Lt_0968 = private constant [33 x i8] c"        if (length(cp.p) > 2.) {\00"
@Lt_0969 = private constant [19 x i8] c"            break;\00"
@Lt_096A = private constant [10 x i8] c"        }\00"
@Lt_096B = private constant [58 x i8] c"        cl *= SURFACE_COLOR;//*(abs(dot(rd, cp.normal)));\00"
@Lt_096C = private constant [58 x i8] c"        vec3 normal = sign(dot(rd, cp.normal))*cp.normal;\00"
@Lt_096D = private constant [40 x i8] c"        rd = refract(rd, -normal, eta);\00"
@Lt_096E = private constant [18 x i8] c"        p = cp.p;\00"
@Lt_096F = private constant [22 x i8] c"        eta = 1./eta;\00"
@Lt_0970 = private constant [37 x i8] c"        p += normal*DIST_EPSILON*2.;\00"
@Lt_0971 = private constant [49 x i8] c"     float d = clamp( dot( rd, ld ), 0.0, 1.0 );\00"
@Lt_0972 = private constant [40 x i8] c"     return smoothstep(0.99, 1., d)*cl;\00"
@Lt_0973 = private constant [40 x i8] c"vec3 caustic(vec3 p,vec3 ld, Ray ray) {\00"
@Lt_0974 = private constant [49 x i8] c"    vec3 VX = normalize(cross(ld, vec3(0,1,0)));\00"
@Lt_0975 = private constant [42 x i8] c"\09vec3 VY = normalize(cross(ld, VX));     \00"
@Lt_0976 = private constant [22 x i8] c"    vec3 c = vec3(0);\00"
@Lt_0977 = private constant [20 x i8] c"    const int N =3;\00"
@Lt_0978 = private constant [37 x i8] c"    p += ray.cp.normal*DIST_EPSILON;\00"
@Lt_0979 = private constant [32 x i8] c"    for(int i = 0; i < N;++i) {\00"
@Lt_097A = private constant [67 x i8] c"        float n1 = rand(p.xz*10. + vec2(iTime*2. +float(i)*123.));\00"
@Lt_097B = private constant [66 x i8] c"        float n2 = rand(p.xz*15. +vec2(iTime*3. +float(i)*111.));\00"
@Lt_097C = private constant [52 x i8] c"        vec3 rd = ld+(VX*(n1-0.5)+VY*(n2-0.5))*0.1;\00"
@Lt_097D = private constant [19 x i8] c"       // rd = ld;\00"
@Lt_097E = private constant [28 x i8] c"        rd = normalize(rd);\00"
@Lt_097F = private constant [49 x i8] c" \09\09vec3 cl = refractCaustic(p, rd, ld, ray.eta);\00"
@Lt_0980 = private constant [39 x i8] c"      \09c += cl* dot(rd,ray.cp.normal);\00"
@Lt_0981 = private constant [26 x i8] c"    return c*3./float(N);\00"
@Lt_0982 = private constant [33 x i8] c"vec3 getFloorColor(in Ray ray) {\00"
@Lt_0983 = private constant [24 x i8] c"    vec3 col = vec3(0);\00"
@Lt_0984 = private constant [25 x i8] c"    vec3 pos = ray.cp.p;\00"
@Lt_0985 = private constant [49 x i8] c"    vec3 ref = reflect( ray.rd, ray.cp.normal );\00"
@Lt_0986 = private constant [62 x i8] c"    float f = mod( floor(5.0*pos.z) + floor(5.0*pos.x), 2.0);\00"
@Lt_0987 = private constant [33 x i8] c"    col = 0.4 + 0.1*f*vec3(1.0);\00"
@Lt_0988 = private constant [68 x i8] c"    float dif = clamp( dot( ray.cp.normal, LIGHT_DIR ), 0.0, 1.0 );\00"
@Lt_0989 = private constant [27 x i8] c"    vec3 brdf = vec3(0.0);\00"
@Lt_098A = private constant [42 x i8] c"    brdf += caustic(pos, LIGHT_DIR, ray);\00"
@Lt_098B = private constant [43 x i8] c"    brdf += 1.20*dif*vec3(1.00,0.90,0.60);\00"
@Lt_098C = private constant [20 x i8] c"    col = col*brdf;\00"
@Lt_098D = private constant [25 x i8] c"    // exclude branching\00"
@Lt_098E = private constant [39 x i8] c"    col *= (ID_GLASS_WALL-ray.cp.mat);\00"
@Lt_098F = private constant [16 x i8] c"    return col;\00"
@Lt_0990 = private constant [28 x i8] c"vec3 getColor(in Ray ray) {\00"
@Lt_0991 = private constant [62 x i8] c"    vec3 p = ray.cp.p ;// can be used by SURFACE_COLOR define\00"
@Lt_0992 = private constant [39 x i8] c"    vec3 c1 = ray.col * SURFACE_COLOR;\00"
@Lt_0993 = private constant [34 x i8] c"    vec3 c2 = getFloorColor(ray);\00"
@Lt_0994 = private constant [47 x i8] c"    return mix(c2, c1, ray.cp.mat - ID_FLOOR);\00"
@Lt_0995 = private constant [3 x i8] c"} \00"
@Lt_0996 = private constant [28 x i8] c"vec3 getRayColor(Ray ray) {\00"
@Lt_0997 = private constant [75 x i8] c"    float d = mix(DENSITY_MIN, DENSITY_MAX, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0998 = private constant [82 x i8] c"    vec3 matColor = mix(AIR_COLOR, MATERIAL_COLOR, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_0999 = private constant [30 x i8] c"    vec3 col = getColor(ray);\00"
@Lt_099A = private constant [35 x i8] c"    float q = exp(-d*ray.cp.dist);\00"
@Lt_099B = private constant [33 x i8] c"    col = col*q+matColor*(1.-q);\00"
@Lt_099C = private constant [26 x i8] c"    return col*ray.share;\00"
@Lt_099D = private constant [38 x i8] c"vec3 getColor(in Ray ray, vec3 pos) {\00"
@Lt_099E = private constant [34 x i8] c"    if (ray.cp.mat == ID_FLOOR) {\00"
@Lt_099F = private constant [28 x i8] c"        const float m = 3.;\00"
@Lt_09A0 = private constant [56 x i8] c"        vec2 p = fract(vec2(-pos.x+0.5,pos.z+0.5)/m)*m;\00"
@Lt_09A1 = private constant [44 x i8] c"        col = texture(iChannel0, p.xy).xyz;\00"
@Lt_09A2 = private constant [13 x i8] c"    } else {\00"
@Lt_09A3 = private constant [39 x i8] c"        col = ray.col * SURFACE_COLOR;\00"
@Lt_09A4 = private constant [14 x i8] c" \09return col;\00"
@Lt_09A5 = private constant [4 x i8] c"}  \00"
@Lt_09A6 = private constant [17 x i8] c"#ifdef RECURSION\00"
@Lt_09A7 = private constant [54 x i8] c"void getRays(inout Ray ray, out Ray r1, out Ray r2) {\00"
@Lt_09A8 = private constant [24 x i8] c"     vec3 p = ray.cp.p;\00"
@Lt_09A9 = private constant [43 x i8] c"    float cs = dot(ray.cp.normal, ray.rd);\00"
@Lt_09AA = private constant [28 x i8] c"    // simple approximation\00"
@Lt_09AB = private constant [33 x i8] c"    float fresnel = 1.0-abs(cs);\00"
@Lt_09AC = private constant [42 x i8] c"    vec3 normal = sign(cs)*ray.cp.normal;\00"
@Lt_09AD = private constant [51 x i8] c"    vec3 refr = refract(ray.rd, -normal, ray.eta);\00"
@Lt_09AE = private constant [48 x i8] c"    vec3 refl = reflect(ray.rd, ray.cp.normal);\00"
@Lt_09AF = private constant [37 x i8] c"    vec3 z = normal*DIST_EPSILON*2.;\00"
@Lt_09B0 = private constant [12 x i8] c"    p += z;\00"
@Lt_09B1 = private constant [80 x i8] c"    r1 = Ray(refr, findIntersection(p, refr),  vec3(0),1.-fresnel, 1./ray.eta);\00"
@Lt_09B2 = private constant [15 x i8] c"    p -= 2.*z;\00"
@Lt_09B3 = private constant [74 x i8] c"    r2 = Ray( refl, findIntersection(p, refl), vec3(0),fresnel, ray.eta);\00"
@Lt_09B4 = private constant [30 x i8] c"// set of recursion functions\00"
@Lt_09B5 = private constant [27 x i8] c"void rec2(inout Ray ray) {\00"
@Lt_09B6 = private constant [15 x i8] c"    Ray r1,r2;\00"
@Lt_09B7 = private constant [26 x i8] c"    getRays(ray, r1, r2);\00"
@Lt_09B8 = private constant [32 x i8] c"    ray.col += getRayColor(r1);\00"
@Lt_09B9 = private constant [32 x i8] c"    ray.col += getRayColor(r2);\00"
@Lt_09BA = private constant [27 x i8] c"void rec3(inout Ray ray) {\00"
@Lt_09BB = private constant [14 x i8] c"    rec2(r1);\00"
@Lt_09BC = private constant [14 x i8] c"    rec2(r2);\00"
@Lt_09BD = private constant [27 x i8] c"void rec4(inout Ray ray) {\00"
@Lt_09BE = private constant [14 x i8] c"    rec3(r1);\00"
@Lt_09BF = private constant [14 x i8] c"    rec3(r2);\00"
@Lt_09C0 = private constant [27 x i8] c"void rec5(inout Ray ray) {\00"
@Lt_09C1 = private constant [14 x i8] c"    rec4(r1);\00"
@Lt_09C2 = private constant [14 x i8] c"    rec4(r2);\00"
@Lt_09C3 = private constant [27 x i8] c"void rec6(inout Ray ray) {\00"
@Lt_09C4 = private constant [14 x i8] c"    rec5(r1);\00"
@Lt_09C5 = private constant [14 x i8] c"    rec5(r2);\00"
@Lt_09C6 = private constant [32 x i8] c"vec3 castRay(vec3 p, vec3 rd) {\00"
@Lt_09C7 = private constant [37 x i8] c"    CP cp = findIntersection(p, rd);\00"
@Lt_09C8 = private constant [46 x i8] c"    Ray ray = Ray( rd, cp, vec3(0), 1., ETA);\00"
@Lt_09C9 = private constant [24 x i8] c"    calcRecursion(ray);\00"
@Lt_09CA = private constant [33 x i8] c"    ray.col += getRayColor(ray);\00"
@Lt_09CB = private constant [17 x i8] c"\09return ray.col;\00"
@Lt_09CC = private constant [21 x i8] c"Ray rays[RAY_COUNT];\00"
@Lt_09CD = private constant [46 x i8] c"    rays[0] = Ray( rd, cp, vec3(0), 1., ETA);\00"
@Lt_09CE = private constant [43 x i8] c"    for(int i = 0; i < RAY_COUNT/2; ++i) {\00"
@Lt_09CF = private constant [27 x i8] c"        Ray ray = rays[i];\00"
@Lt_09D0 = private constant [21 x i8] c"\09\09vec3 p = ray.cp.p;\00"
@Lt_09D1 = private constant [48 x i8] c"       \09 float cs = dot(ray.cp.normal, ray.rd);\00"
@Lt_09D2 = private constant [37 x i8] c"        float fresnel = 1.0-abs(cs);\00"
@Lt_09D3 = private constant [59 x i8] c"        //float fresnel =mix(0.2, 1., pow(1.-abs(cs),2.));\00"
@Lt_09D4 = private constant [47 x i8] c"         vec3 normal = sign(cs)*ray.cp.normal;\00"
@Lt_09D5 = private constant [52 x i8] c"    \09vec3 refr = refract(ray.rd, -normal, ray.eta);\00"
@Lt_09D6 = private constant [52 x i8] c"        vec3 refl = reflect(ray.rd, ray.cp.normal);\00"
@Lt_09D7 = private constant [41 x i8] c"        vec3 z = normal*DIST_EPSILON*2.;\00"
@Lt_09D8 = private constant [16 x i8] c"        p += z;\00"
@Lt_09D9 = private constant [93 x i8] c"        rays[i*2+1] = Ray(refr, findIntersection(p, refr),  vec3(0),1.-fresnel, 1./ray.eta);\00"
@Lt_09DA = private constant [19 x i8] c"        p -= 2.*z;\00"
@Lt_09DB = private constant [89 x i8] c"        rays[i*2 + 2] = Ray( refl, findIntersection(p, refl), vec3(0),fresnel, ray.eta);\00"
@Lt_09DC = private constant [41 x i8] c"    for(int i = RAY_COUNT-1; i>=0;--i) {\00"
@Lt_09DD = private constant [28 x i8] c"        vec3 p =  ray.cp.p;\00"
@Lt_09DE = private constant [16 x i8] c"\09\09vec3 atColor;\00"
@Lt_09DF = private constant [80 x i8] c"        float  d = mix(DENSITY_MIN, DENSITY_MAX, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_09E0 = private constant [86 x i8] c"        vec3 matColor = mix(AIR_COLOR, MATERIAL_COLOR, (ray.eta - ETA)/(1./ETA-ETA));\00"
@Lt_09E1 = private constant [37 x i8] c"        vec3 col = getColor(ray, p);\00"
@Lt_09E2 = private constant [39 x i8] c"        float q = exp(-d*ray.cp.dist);\00"
@Lt_09E3 = private constant [37 x i8] c"        col = col*q+matColor*(1.-q);\00"
@Lt_09E4 = private constant [44 x i8] c"        rays[(i-1)/2].col += col*ray.share;\00"
@Lt_09E5 = private constant [21 x i8] c"\09return rays[0].col;\00"
@Lt_09E6 = private constant [29 x i8] c"vec3 background( in vec3 d )\00"
@Lt_09E7 = private constant [21 x i8] c"    // cheap cubemap\00"
@Lt_09E8 = private constant [21 x i8] c"    vec3 n = abs(d);\00"
@Lt_09E9 = private constant [48 x i8] c"    vec2 uv = (n.x>n.y && n.x>n.z) ? d.yz/d.x: \00"
@Lt_09EA = private constant [47 x i8] c"              (n.y>n.x && n.y>n.z) ? d.zx/d.y:\00"
@Lt_09EB = private constant [47 x i8] c"                                     d.xy/d.z;\00"
@Lt_09EC = private constant [18 x i8] c"    // fancy blur\00"
@Lt_09ED = private constant [29 x i8] c"    vec3  col = vec3( 0.0 );\00"
@Lt_09EE = private constant [34 x i8] c"    for( int i=ZERO; i<200; i++ )\00"
@Lt_09EF = private constant [34 x i8] c"        float h = float(i)/200.0;\00"
@Lt_09F0 = private constant [34 x i8] c"        float an = 31.0*6.2831*h;\00"
@Lt_09F1 = private constant [49 x i8] c"        vec2  of = vec2( cos(an), sin(an) ) * h;\00"
@Lt_09F2 = private constant [71 x i8] c"        vec3 tmp = texture( iChannel2, uv*0.25 + 0.0075*of, 4.0 ).yxz;\00"
@Lt_09F3 = private constant [37 x i8] c"        col = smax( col, tmp, 0.5 );\00"
@Lt_09F4 = private constant [43 x i8] c"    return pow(col,vec3(3.5,3.0,6.0))*0.2;\00"
@Lt_09F5 = private constant [30 x i8] c"float horizonHeight(vec2 pos)\00"
@Lt_09F6 = private constant [50 x i8] c"    horiz( vec2(-1, 0.1), vec2(-0.8, 0.3), pos );\00"
@Lt_09F7 = private constant [52 x i8] c"    horiz( vec2(-0.8, 0.3), vec2(-0.6, 0.4), pos );\00"
@Lt_09F8 = private constant [52 x i8] c"    horiz( vec2(-0.6, 0.4), vec2(-0.3, 0.2), pos );\00"
@Lt_09F9 = private constant [53 x i8] c"    horiz( vec2(-0.3, 0.2), vec2(-0.1, 0.25), pos );\00"
@Lt_09FA = private constant [52 x i8] c"    horiz( vec2(-0.1, 0.25), vec2(-0., 0.2), pos );\00"
@Lt_09FB = private constant [49 x i8] c"    horiz( vec2(-0., 0.2), vec2(.1, 0.3), pos );\00"
@Lt_09FC = private constant [50 x i8] c"    horiz( vec2(.1, 0.3), vec2(.24, 0.32), pos );\00"
@Lt_09FD = private constant [50 x i8] c"    horiz( vec2(.24, 0.32), vec2(.3, 0.3), pos );\00"
@Lt_09FE = private constant [50 x i8] c"    horiz( vec2(.3, 0.3), vec2(.34, 0.32), pos );\00"
@Lt_09FF = private constant [52 x i8] c"    horiz( vec2(.34, 0.32), vec2(.36, 0.31), pos );\00"
@Lt_0A00 = private constant [51 x i8] c"    horiz( vec2(.36, 0.31), vec2(.4, 0.27), pos );\00"
@Lt_0A01 = private constant [51 x i8] c"    horiz( vec2(.4, 0.27), vec2(.47, 0.23), pos );\00"
@Lt_0A02 = private constant [51 x i8] c"    horiz( vec2(.47, 0.23), vec2(.6, 0.15), pos );\00"
@Lt_0A03 = private constant [49 x i8] c"    horiz( vec2(.6, 0.15), vec2(.8, 0.3), pos );\00"
@Lt_0A04 = private constant [48 x i8] c"    horiz( vec2(.8, 0.3), vec2(1., 0.2), pos );\00"
@Lt_0A05 = private constant [22 x i8] c"vec3 sunColor(vec2 p)\00"
@Lt_0A06 = private constant [35 x i8] c"    #define suncenter vec2(0, 0.1)\00"
@Lt_0A07 = private constant [26 x i8] c"    #define sunradius 0.6\00"
@Lt_0A08 = private constant [28 x i8] c"    #define sunfalloff 0.23\00"
@Lt_0A09 = private constant [43 x i8] c"    #define suncolor vec3(0.8, 0.05, 0.05)\00"
@Lt_0A0A = private constant [26 x i8] c"    #define skyradius 0.8\00"
@Lt_0A0B = private constant [27 x i8] c"    #define skyfalloff 0.3\00"
@Lt_0A0C = private constant [39 x i8] c"    #define skycolor vec3(0.05,0.,0.1)\00"
@Lt_0A0D = private constant [80 x i8] c"    #define noise(x) (1. - texture(iChannel0, p*2.).r * 1. * (1.-sqrt(x)*0.92))\00"
@Lt_0A0E = private constant [103 x i8] c"    float sunbrightness = smoothstep(sunradius+sunfalloff, sunradius-sunfalloff, length(p-suncenter));\00"
@Lt_0A0F = private constant [111 x i8] c"    float skymask = smoothstep(skyradius+skyfalloff, skyradius-skyfalloff, length(p*vec2(0.5, 1.)-suncenter));\00"
@Lt_0A10 = private constant [101 x i8] c"    return mix(skycolor*skymask*noise(skymask*0.5), suncolor, sunbrightness * noise(sunbrightness));\00"
@Lt_0A11 = private constant [21 x i8] c"vec3 bgColor(vec2 p)\00"
@Lt_0A12 = private constant [40 x i8] c"    #define bgcolor vec3(0., 0.25, 0.7)\00"
@Lt_0A13 = private constant [81 x i8] c"    #define noise2(x) (1. - texture(iChannel0, p*2.).r * 1. * (1.-sqrt(x)*0.72))\00"
@Lt_0A14 = private constant [24 x i8] c"    p.y += p.x*p.x*0.1;\00"
@Lt_0A15 = private constant [84 x i8] c"    float dist = sdTriangle(vec2(-1.5, 0.05), vec2(2.5, -0.7), vec2(-1.5, -1.), p);\00"
@Lt_0A16 = private constant [98 x i8] c"    float mask = clamp(smoothstep(-0.2, 0.2, -dist) - smoothstep(-1., 1.5, p.x)*0.6, 0., 1.)*0.8;\00"
@Lt_0A17 = private constant [26 x i8] c"    mask *= noise2(mask);\00"
@Lt_0A18 = private constant [31 x i8] c"    return vec3(mask*bgcolor);\00"
@Lt_0A19 = private constant [19 x i8] c"vec3 prism(vec2 p)\00"
@Lt_0A1A = private constant [41 x i8] c"    #define f1color vec3(0.5, 0.5, 0.24)\00"
@Lt_0A1B = private constant [43 x i8] c"    #define f1color2 vec3(0.57, 0.27, 0.2)\00"
@Lt_0A1C = private constant [90 x i8] c" \09float f1 = sdTriangle(vec2(-.195, -0.205), vec2(0.175, -0.24), vec2(-0.095, -0.38), p);\00"
@Lt_0A1D = private constant [76 x i8] c"    vec3 f1col = smoothstep(0.01, -0.0, f1)*f1color*(p.x+0.26+p.y*0.5)*10.;\00"
@Lt_0A1E = private constant [52 x i8] c"    f1col += smoothstep(0.01, -0.0, f1)*(f1color2);\00"
@Lt_0A1F = private constant [40 x i8] c"    #define f2color vec3(0.4, 0.6, 0.7)\00"
@Lt_0A20 = private constant [85 x i8] c"    float f2 = sdTriangle(vec2(-.2, -0.21), vec2(-0.1, -0.39), vec2(-0.2, -0.6), p);\00"
@Lt_0A21 = private constant [88 x i8] c"    f2 = min(f2, sdTriangle(vec2(-.1, -0.77), vec2(-0.1, -0.39), vec2(-0.2, -0.6), p));\00"
@Lt_0A22 = private constant [114 x i8] c"    vec3 f2col = clamp(smoothstep(0.01, -0.0, f2)* f2color * (.6-length(p-vec2(-0.15, -0.4)))*0.4, 0., 1.) * 2.6;\00"
@Lt_0A23 = private constant [43 x i8] c"    #define f3color vec3(-0.5, -0.5, -0.5)\00"
@Lt_0A24 = private constant [88 x i8] c"    float f3 = sdTriangle(vec2(0.18, -0.24), vec2(.18, -0.63), vec2(-0.095, -0.39), p);\00"
@Lt_0A25 = private constant [92 x i8] c"    f3 = min(f3, sdTriangle(vec2(-.095, -0.77), vec2(.18, -0.63), vec2(-0.095, -0.39), p));\00"
@Lt_0A26 = private constant [102 x i8] c"    vec3 f3col = clamp(smoothstep(0.01, -0.0, f3) * (.4-length(p-vec2(0.04, -0.5))), 0., 1.)*f3color;\00"
@Lt_0A27 = private constant [65 x i8] c"    return (f2col+f1col+f3col)*noise(length(f2col+f1col+f3col));\00"
@Lt_0A28 = private constant [18 x i8] c"vec3 beam(vec2 p)\00"
@Lt_0A29 = private constant [46 x i8] c"    #define whitebeamcolor vec3(0.5, 0.5, 1.)\00"
@Lt_0A2A = private constant [86 x i8] c"    float wb = sdTriangle(vec2(-.14, -0.47), vec2(-.16, -0.45), vec2(-25., -10.), p);\00"
@Lt_0A2B = private constant [68 x i8] c"    vec3 wbcol = whitebeamcolor * smoothstep(0.015, -0.015, wb)*2.;\00"
@Lt_0A2C = private constant [81 x i8] c"    float rb = sdTriangle(vec2(.04, -0.47), vec2(30., -51.), vec2(25., -5.), p);\00"
@Lt_0A2D = private constant [53 x i8] c"    #define leg1 (vec2(25., -5.) - vec2(.04, -0.47))\00"
@Lt_0A2E = private constant [38 x i8] c"    #define ang1 atan(leg1.y, leg1.x)\00"
@Lt_0A2F = private constant [54 x i8] c"    #define leg2 (vec2(30., -51.) - vec2(.04, -0.47))\00"
@Lt_0A30 = private constant [38 x i8] c"    #define ang2 atan(leg2.y, leg2.x)\00"
@Lt_0A31 = private constant [44 x i8] c"    #define rbleg(x) (x - vec2(.04, -0.47))\00"
@Lt_0A32 = private constant [82 x i8] c"    #define rbangle(xv) ((atan(rbleg(xv).y, rbleg(xv).x) - ang1) / (ang2 - ang1))\00"
@Lt_0A33 = private constant [42 x i8] c"    float rainbowangle = -rbangle(p)-0.1;\00"
@Lt_0A35 = private constant [142 x i8] c"    vec3 rbcol = hsv2rgb_smooth(vec3(rainbowangle, 0.7 - length(rbleg(p))*0.2, 0.6 - length(rbleg(p))*0.2)) *  smoothstep(0.015, -0.015, rb);\00"
@Lt_0A36 = private constant [55 x i8] c"    return (wbcol + rbcol)*noise(length(wbcol+rbcol));\00"
@Lt_0A37 = private constant [31 x i8] c"vec3 render(vec3 p, vec3 rd) {\00"
@Lt_0A38 = private constant [30 x i8] c"    vec3 col= castRay(p, rd);\00"
@Lt_0A39 = private constant [49 x i8] c"vec3 render( in vec3 ro, in vec3 rd, in vec2 q )\00"
@Lt_0A3A = private constant [36 x i8] c"    //-----------------------------\00"
@Lt_0A3B = private constant [33 x i8] c"    vec3 col = background( rd );\00"
@Lt_0A3C = private constant [25 x i8] c"    float mindist = 1.0;\00"
@Lt_0A3D = private constant [25 x i8] c"    float maxdist = 4.0;\00"
@Lt_0A3E = private constant [18 x i8] c"    vec4 matInfo;\00"
@Lt_0A3F = private constant [68 x i8] c"    vec2 tm = intersectOpaque( ro, rd, mindist, maxdist, matInfo );\00"
@Lt_0A40 = private constant [38 x i8] c"    if( tm.y>-0.5 && tm.x < maxdist )\00"
@Lt_0A41 = private constant [58 x i8] c"        col = shadeOpaque( ro, rd, tm.x, tm.y, matInfo );\00"
@Lt_0A42 = private constant [24 x i8] c"        maxdist = tm.x;\00"
@Lt_0A43 = private constant [68 x i8] c"    tm = intersectTransparent( ro, rd, mindist, maxdist, matInfo );\00"
@Lt_0A44 = private constant [77 x i8] c"        col = shadeTransparent( ro, rd, tm.x, tm.y, matInfo, col, maxdist );\00"
@Lt_0A45 = private constant [47 x i8] c"    float sun = clamp(dot(rd,sunDir),0.0,1.0);\00"
@Lt_0A46 = private constant [47 x i8] c"    col += 1.0*vec3(1.5,0.8,0.7)*pow(sun,4.0);\00"
@Lt_0A47 = private constant [34 x i8] c"    col = pow( col, vec3(0.45) );\00"
@Lt_0A48 = private constant [90 x i8] c"    col = vec3(1.05,1.0,1.0)*col*(0.7+0.3*col*max(3.0-2.0*col,0.0)) + vec3(0.0,0.0,0.04);\00"
@Lt_0A49 = private constant [64 x i8] c"    col *= 0.3 + 0.7*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.1);\00"
@Lt_0A4A = private constant [35 x i8] c"    return clamp( col, 0.0, 1.0 );\00"
@Lt_0A4B = private constant [51 x i8] c"mat3 setCamera( in vec3 ro, in vec3 ta, float cr )\00"
@Lt_0A4C = private constant [29 x i8] c"\09vec3 cw = normalize(ta-ro);\00"
@Lt_0A4D = private constant [39 x i8] c"\09vec3 cp = vec3(sin(cr), cos(cr),0.0);\00"
@Lt_0A4E = private constant [38 x i8] c"\09vec3 cu = normalize( cross(cw,cp) );\00"
@Lt_0A4F = private constant [38 x i8] c"\09vec3 cv =          ( cross(cu,cw) );\00"
@Lt_0A50 = private constant [31 x i8] c"    return mat3( cu, cv, cw );\00"
@Lt_0A51 = private constant [41 x i8] c"mat3 setCamera( in vec3 ro, in vec3 rt )\00"
@Lt_0A52 = private constant [31 x i8] c"    vec3 w = normalize(ro-rt);\00"
@Lt_0A53 = private constant [33 x i8] c"    float m = sqrt(1.0-w.y*w.y);\00"
@Lt_0A54 = private constant [38 x i8] c"    return mat3( w.z,     0.0, -w.x, \00"
@Lt_0A55 = private constant [41 x i8] c"                 0.0,     m*m, -w.z*w.y,\00"
@Lt_0A56 = private constant [41 x i8] c"                 w.x*m, w.y*m,  w.z*m );\00"
@Lt_0A57 = private constant [29 x i8] c"vec3 cycle(vec3 c, float s) \00"
@Lt_0A58 = private constant [56 x i8] c"\09float Cycles = max(1.175494351e-38F,3.402823466e+38F);\00"
@Lt_0A59 = private constant [95 x i8] c"\09return vec3(PI*0.125)+(PI*0.125)*vec3(cos(s*Cycles+c.x),cos(s*Cycles+c.y),cos(s*Cycles+c.z));\00"
@Lt_0A5A = private constant [21 x i8] c"vec3 getColor(int o)\00"
@Lt_0A5B = private constant [36 x i8] c"\09vec4 Z = vec4(0.3, 0.5, 0.6, 0.2);\00"
@Lt_0A5C = private constant [37 x i8] c"\09vec4 Y = vec4(0.1, 0.5, 1.0, -0.5);\00"
@Lt_0A5D = private constant [36 x i8] c"\09vec4 X = vec4(0.7, 0.8, 1.0, 0.3);\00"
@Lt_0A5E = private constant [105 x i8] c"\09vec3 orbitColor = cycle(X.xyz,ot.x)*X.w*ot.x + cycle(Y.xyz,ot.y)*Y.w*ot.y + cycle(Z.xyz,ot.z)*Z.w*ot.z;\00"
@Lt_0A5F = private constant [48 x i8] c"\09if (orbitColor.x >= 1.05125) orbitColor.x =0.;\00"
@Lt_0A60 = private constant [48 x i8] c"\09if (orbitColor.y >= 1.05125) orbitColor.y =0.;\00"
@Lt_0A61 = private constant [48 x i8] c"\09if (orbitColor.z >= 1.05125) orbitColor.z =0.;\00"
@Lt_0A62 = private constant [43 x i8] c"\09return clamp(3.0*orbitColor,0.0,1.05125);\00"
@Lt_0A63 = private constant [20 x i8] c"float scene(vec3 p)\00"
@Lt_0A64 = private constant [46 x i8] c"\09return min(100.-length(p) , abs(flame(p)) );\00"
@Lt_0A65 = private constant [34 x i8] c"vec4 raymarch(vec3 org, vec3 dir)\00"
@Lt_0A66 = private constant [40 x i8] c"\09float d = 0.0, glow = 0.0, eps = 0.02;\00"
@Lt_0A67 = private constant [16 x i8] c"\09vec3  p = org;\00"
@Lt_0A68 = private constant [22 x i8] c"\09bool glowed = false;\00"
@Lt_0A69 = private constant [25 x i8] c"\09for(int i=0; i<64; i++)\00"
@Lt_0A6A = private constant [22 x i8] c"\09\09d = scene(p) + eps;\00"
@Lt_0A6B = private constant [16 x i8] c"\09\09p += d * dir;\00"
@Lt_0A6C = private constant [14 x i8] c"\09\09if( d>eps )\00"
@Lt_0A6D = private constant [4 x i8] c"\09\09{\00"
@Lt_0A6E = private constant [21 x i8] c"\09\09\09if(flame(p) < .0)\00"
@Lt_0A6F = private constant [17 x i8] c"\09\09\09\09glowed=true;\00"
@Lt_0A70 = private constant [14 x i8] c"\09\09\09if(glowed)\00"
@Lt_0A71 = private constant [31 x i8] c"       \09\09\09glow = float(i)/64.;\00"
@Lt_0A72 = private constant [4 x i8] c"\09\09}\00"
@Lt_0A73 = private constant [22 x i8] c"\09return vec4(p,glow);\00"
@Lt_0A74 = private constant [35 x i8] c"float displacementSimple( vec2 p )\00"
@Lt_0A75 = private constant [13 x i8] c"    float f;\00"
@Lt_0A76 = private constant [63 x i8] c"    f  = 0.5000* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0A77 = private constant [63 x i8] c"    f += 0.2500* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0A78 = private constant [63 x i8] c"    f += 0.1250* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0A79 = private constant [63 x i8] c"    f += 0.0625* textureLod( iChannel0, p, 0.0 ).x; p = p*2.0;\00"
@Lt_0A7A = private constant [14 x i8] c"    return f;\00"
@Lt_0A7B = private constant [43 x i8] c"vec3 getSceneColor(vec3 p, float material)\00"
@Lt_0A7C = private constant [19 x i8] c"\09if(material==1.0)\00"
@Lt_0A7D = private constant [30 x i8] c"\09\09return vec3(1.0, 0.5, 0.5);\00"
@Lt_0A7E = private constant [24 x i8] c"\09else if(material==2.0)\00"
@Lt_0A7F = private constant [30 x i8] c"\09\09return vec3(0.5, 1.0, 0.5);\00"
@Lt_0A80 = private constant [24 x i8] c"\09else if(material==3.0)\00"
@Lt_0A81 = private constant [30 x i8] c"\09\09return vec3(0.5, 0.5, 1.0);\00"
@Lt_0A82 = private constant [29 x i8] c"\09return vec3(0.0, 0.0, 0.0);\00"
@Lt_0A83 = private constant [53 x i8] c"float getClosestDistance(vec3 p, out float material)\00"
@Lt_0A84 = private constant [16 x i8] c"\09float d = 0.0;\00"
@Lt_0A85 = private constant [29 x i8] c"#if D_MAX_STEP_LENGTH_ENABLE\00"
@Lt_0A86 = private constant [76 x i8] c"    float minD = 1.0; // restrict max step for better scattering evaluation\00"
@Lt_0A87 = private constant [26 x i8] c"\09float minD = 10000000.0;\00"
@Lt_0A88 = private constant [17 x i8] c"\09material = 0.0;\00"
@Lt_0A89 = private constant [24 x i8] c"    float yNoise = 0.0;\00"
@Lt_0A8A = private constant [24 x i8] c"    float xNoise = 0.0;\00"
@Lt_0A8B = private constant [24 x i8] c"    float zNoise = 0.0;\00"
@Lt_0A8C = private constant [21 x i8] c"#if D_DETAILED_WALLS\00"
@Lt_0A8D = private constant [64 x i8] c"    yNoise = 1.0*clamp(displacementSimple(p.xz*0.005),0.0,1.0);\00"
@Lt_0A8E = private constant [64 x i8] c"    xNoise = 2.0*clamp(displacementSimple(p.zy*0.005),0.0,1.0);\00"
@Lt_0A8F = private constant [63 x i8] c"    zNoise = 0.5*clamp(displacementSimple(p.xy*0.01),0.0,1.0);\00"
@Lt_0A90 = private constant [29 x i8] c"\09d = max(0.0, p.y - yNoise);\00"
@Lt_0A91 = private constant [12 x i8] c"\09if(d<minD)\00"
@Lt_0A92 = private constant [12 x i8] c"\09\09minD = d;\00"
@Lt_0A93 = private constant [18 x i8] c"\09\09material = 2.0;\00"
@Lt_0A94 = private constant [28 x i8] c"\09d = max(0.0,p.x - xNoise);\00"
@Lt_0A95 = private constant [18 x i8] c"\09\09material = 1.0;\00"
@Lt_0A96 = private constant [33 x i8] c"\09d = max(0.0,40.0-p.x - xNoise);\00"
@Lt_0A97 = private constant [29 x i8] c"\09d = max(0.0,-p.z - zNoise);\00"
@Lt_0A98 = private constant [18 x i8] c"\09\09material = 3.0;\00"
@Lt_0A99 = private constant [14 x i8] c"\09return minD;\00"
@Lt_0A9A = private constant [32 x i8] c"vec3 evaluateLight(in vec3 pos)\00"
@Lt_0A9B = private constant [26 x i8] c"    vec3 lightPos = LPOS;\00"
@Lt_0A9C = private constant [26 x i8] c"    vec3 lightCol = LCOL;\00"
@Lt_0A9D = private constant [27 x i8] c"    vec3 L = lightPos-pos;\00"
@Lt_0A9E = private constant [36 x i8] c"    return lightCol * 1.0/dot(L,L);\00"
@Lt_0A9F = private constant [48 x i8] c"vec3 evaluateLight(in vec3 pos, in vec3 normal)\00"
@Lt_0AA0 = private constant [35 x i8] c"    float distanceToL = length(L);\00"
@Lt_0AA1 = private constant [32 x i8] c"    vec3 Lnorm = L/distanceToL;\00"
@Lt_0AA2 = private constant [60 x i8] c"    return max(0.0,dot(normal,Lnorm)) * evaluateLight(pos);\00"
@Lt_0AA3 = private constant [65 x i8] c"// To simplify: wavelength independent scattering and extinction\00"
@Lt_0AA4 = private constant [76 x i8] c"void getParticipatingMedia(out float sigmaS, out float sigmaE, in vec3 pos)\00"
@Lt_0AA5 = private constant [106 x i8] c"    float heightFog = 7.0 + D_FOG_NOISE*3.0*clamp(displacementSimple(pos.xz*0.005 + iTime*0.01),0.0,1.0);\00"
@Lt_0AA6 = private constant [60 x i8] c"    heightFog = 0.3*clamp((heightFog-pos.y)*1.0, 0.0, 1.0);\00"
@Lt_0AA7 = private constant [54 x i8] c"    const float fogFactor = 1.0 + D_STRONG_FOG * 5.0;\00"
@Lt_0AA8 = private constant [36 x i8] c"    const float sphereRadius = 5.0;\00"
@Lt_0AA9 = private constant [101 x i8] c"    float sphereFog = clamp((sphereRadius-length(pos-vec3(20.0,19.0,-17.0)))/sphereRadius, 0.0,1.0);\00"
@Lt_0AAA = private constant [36 x i8] c"    const float constantFog = 0.02;\00"
@Lt_0AAB = private constant [60 x i8] c"    sigmaS = constantFog + heightFog*fogFactor + sphereFog;\00"
@Lt_0AAC = private constant [30 x i8] c"    const float sigmaA = 0.0;\00"
@Lt_0AAD = private constant [88 x i8] c"    sigmaE = max(0.000000001, sigmaA + sigmaS); // to avoid division by zero extinction\00"
@Lt_0AAE = private constant [22 x i8] c"float phaseFunction()\00"
@Lt_0AAF = private constant [27 x i8] c"    return 1.0/(4.0*3.14);\00"
@Lt_0AB0 = private constant [49 x i8] c"float volumetricShadow(in vec3 from, in vec3 to)\00"
@Lt_0AB1 = private constant [27 x i8] c"#if D_VOLUME_SHADOW_ENABLE\00"
@Lt_0AB2 = private constant [82 x i8] c"    const float numStep = 16.0; // quality control. Bump to avoid shadow alisaing\00"
@Lt_0AB3 = private constant [24 x i8] c"    float shadow = 1.0;\00"
@Lt_0AB4 = private constant [24 x i8] c"    float sigmaS = 0.0;\00"
@Lt_0AB5 = private constant [24 x i8] c"    float sigmaE = 0.0;\00"
@Lt_0AB6 = private constant [42 x i8] c"    float dd = length(to-from) / numStep;\00"
@Lt_0AB7 = private constant [98 x i8] c"    for(float s=0.5; s<(numStep-0.1); s+=1.0)// start at 0.5 to sample at center of integral part\00"
@Lt_0AB8 = private constant [51 x i8] c"        vec3 pos = from + (to-from)*(s/(numStep));\00"
@Lt_0AB9 = private constant [52 x i8] c"        getParticipatingMedia(sigmaS, sigmaE, pos);\00"
@Lt_0ABA = private constant [37 x i8] c"        shadow *= exp(-sigmaE * dd);\00"
@Lt_0ABB = private constant [19 x i8] c"    return shadow;\00"
@Lt_0ABC = private constant [16 x i8] c"    return 1.0;\00"
@Lt_0ABE = private constant [140 x i8] c"void traceScene(bool improvedScattering, vec3 rO, vec3 rD, inout vec3 finalPos, inout vec3 normal, inout vec3 albedo, inout vec4 scatTrans)\00"
@Lt_0ABF = private constant [26 x i8] c"\09const int numIter = 100;\00"
@Lt_0AC0 = private constant [62 x i8] c"    // Initialise volumetric scattering integration (to view)\00"
@Lt_0AC1 = private constant [31 x i8] c"    float transmittance = 1.0;\00"
@Lt_0AC2 = private constant [47 x i8] c"    vec3 scatteredLight = vec3(0.0, 0.0, 0.0);\00"
@Lt_0AC3 = private constant [74 x i8] c"\09float d = 1.0; // hack: always have a first step of 1 unit to go further\00"
@Lt_0AC4 = private constant [23 x i8] c"\09float material = 0.0;\00"
@Lt_0AC5 = private constant [31 x i8] c"\09vec3 p = vec3(0.0, 0.0, 0.0);\00"
@Lt_0AC6 = private constant [20 x i8] c"    float dd = 0.0;\00"
@Lt_0AC7 = private constant [29 x i8] c"\09for(int i=0; i<numIter;++i)\00"
@Lt_0AC8 = private constant [22 x i8] c"\09\09vec3 p = rO + d*rD;\00"
@Lt_0AC9 = private constant [47 x i8] c"    \09getParticipatingMedia(sigmaS, sigmaE, p);\00"
@Lt_0ACA = private constant [69 x i8] c"        if(D_USE_IMPROVE_INTEGRATION>0) // freedom/tweakable version\00"
@Lt_0ACB = private constant [31 x i8] c"        if(improvedScattering)\00"
@Lt_0ACC = private constant [10 x i8] c"        {\00"
@Lt_0ACE = private constant [124 x i8] c"            // See slide 28 at http://www.frostbite.com/2015/08/physically-based-unified-volumetric-rendering-in-frostbite/\00"
@Lt_0ACF = private constant [113 x i8] c"            vec3 S = evaluateLight(p) * sigmaS * phaseFunction()* volumetricShadow(p,lightPos);// incoming light\00"
@Lt_0AD0 = private constant [106 x i8] c"            vec3 Sint = (S - S * exp(-sigmaE * dd)) / sigmaE; // integrate along the current step segment\00"
@Lt_0AD2 = private constant [131 x i8] c"            scatteredLight += transmittance * Sint; // accumulate and also take into account the transmittance from previous steps\00"
@Lt_0AD3 = private constant [61 x i8] c"            // Evaluate transmittance to view independentely\00"
@Lt_0AD4 = private constant [48 x i8] c"            transmittance *= exp(-sigmaE * dd);\00"
@Lt_0AD5 = private constant [7 x i8] c"\09\09else\00"
@Lt_0AD6 = private constant [57 x i8] c"            // Basic scatering/transmittance integration\00"
@Lt_0AD7 = private constant [33 x i8] c"        #if D_UPDATE_TRANS_FIRST\00"
@Lt_0AD8 = private constant [15 x i8] c"        #endif\00"
@Lt_0ADA = private constant [127 x i8] c"            scatteredLight += sigmaS * evaluateLight(p) * phaseFunction() * volumetricShadow(p,lightPos) * transmittance * dd;\00"
@Lt_0ADB = private constant [34 x i8] c"        #if !D_UPDATE_TRANS_FIRST\00"
@Lt_0ADC = private constant [3 x i8] c"\09\09\00"
@Lt_0ADD = private constant [46 x i8] c"        dd = getClosestDistance(p, material);\00"
@Lt_0ADE = private constant [19 x i8] c"        if(dd<0.2)\00"
@Lt_0ADF = private constant [82 x i8] c"            break; // give back a lot of performance without too much visual loss\00"
@Lt_0AE0 = private constant [11 x i8] c"\09\09d += dd;\00"
@Lt_0AE1 = private constant [38 x i8] c"\09albedo = getSceneColor(p, material);\00"
@Lt_0AE2 = private constant [26 x i8] c"    finalPos = rO + d*rD;\00"
@Lt_0AE3 = private constant [35 x i8] c"    normal = calcNormal(finalPos);\00"
@Lt_0AE4 = private constant [53 x i8] c"    scatTrans = vec4(scatteredLight, transmittance);\00"
@Lt_0AE5 = private constant [56 x i8] c"void mainImage( out vec4 fragColor, in vec2 fragCoord )\00"
@Lt_0AEA = private constant [11 x i8] c"vec2 uv,p;\00"
@Lt_0AED = private constant [36 x i8] c"vec2 uv = fragCoord/iResolution.xy;\00"
@Lt_0AF0 = private constant [39 x i8] c"vec2 uv = fragCoord.xy/iResolution.xy;\00"
@Lt_0AF3 = private constant [43 x i8] c"vec2 uv = fragCoord.xy/iResolution.xy-0.5;\00"
@Lt_0AF6 = private constant [59 x i8] c"vec2 uv = (fragCoord.xy * 2.0 / iResolution.xy) - vec2(1);\00"
@Lt_0AF9 = private constant [42 x i8] c"vec2 uv2= gl_FragCoord.xy/iResolution.xy;\00"
@Lt_0AFC = private constant [80 x i8] c"vec2 uv2 = vec2(2.0,2.0*hfactor)*fragCoord.xy/iResolution.xy-vec2(1.0,hfactor);\00"
@Lt_0AFF = private constant [36 x i8] c"vec2 mo = iMouse.xy/iResolution.xy;\00"
@Lt_0B02 = private constant [52 x i8] c"vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\00"
@Lt_0B05 = private constant [55 x i8] c"vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\00"
@Lt_0B08 = private constant [56 x i8] c"vec2 p = (-iResolution.xy+2.0*fragCoord)/iResolution.y;\00"
@Lt_0B0B = private constant [59 x i8] c"vec2 p = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\00"
@Lt_0B0E = private constant [59 x i8] c"vec2 p = (2.0*(fragCoord+o)-iResolution.xy)/iResolution.y;\00"
@Lt_0B11 = private constant [60 x i8] c"vec2 p = (-iResolution.xy+2.0*(fragCoord+o))/iResolution.y;\00"
@Lt_0B14 = private constant [64 x i8] c"vec2 p = (-iResolution.xy+2.0*(fragCoord.xy+rr))/iResolution.y;\00"
@Lt_0B17 = private constant [72 x i8] c"vec2 px = (2.0*(fragCoord+vec2(1.0,0.0))-iResolution.xy)/iResolution.y;\00"
@Lt_0B1A = private constant [72 x i8] c"vec2 py = (2.0*(fragCoord+vec2(0.0,1.0))-iResolution.xy)/iResolution.y;\00"
@Lt_0B1D = private constant [35 x i8] c"vec2 q = fragCoord/iResolution.xy;\00"
@Lt_0B20 = private constant [38 x i8] c"vec2 q = fragCoord.xy/iResolution.xy;\00"
@Lt_0B23 = private constant [43 x i8] c"vec2 q = (fragCoord.xy+rr)/iResolution.xy;\00"
@Lt_0B26 = private constant [50 x i8] c"vec2 rr = vec2( float(m), float(n) ) / float(AA);\00"
@Lt_0B29 = private constant [53 x i8] c"vec2 v = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\00"
@Lt_0B2C = private constant [18 x i8] c"vec3 v=vec3(0.0);\00"
@Lt_0B2F = private constant [22 x i8] c"vec3 p=from+s*dir*.5;\00"
@Lt_0B32 = private constant [25 x i8] c"vec3 c = render(ro, rd);\00"
@Lt_0B35 = private constant [27 x i8] c"vec3 from=vec3(1.,.5,0.5);\00"
@Lt_0B38 = private constant [27 x i8] c"vec3 dir=vec3(uv*zoom,1.);\00"
@Lt_0B3B = private constant [22 x i8] c"vec3 col = vec3(0.0);\00"
@Lt_0B3E = private constant [32 x i8] c"vec3 col = render( ro, rd, q );\00"
@Lt_0B41 = private constant [35 x i8] c"vec3 col = render( ro, rd, time );\00"
@Lt_0B44 = private constant [39 x i8] c"vec3 col = render( ro, rd, rdx, rdy );\00"
@Lt_0B47 = private constant [52 x i8] c"vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\00"
@Lt_0B4A = private constant [26 x i8] c"vec3 ta = vec3( 0,0.4,0);\00"
@Lt_0B4D = private constant [30 x i8] c"vec3 ta = vec3(-0.6,0.2,0.0);\00"
@Lt_0B50 = private constant [35 x i8] c"vec3 ta = vec3( 0.5, -0.4, -0.5 );\00"
@Lt_0B53 = private constant [36 x i8] c"vec3 ta = vec3( -0.5, -0.4,  0.5 );\00"
@Lt_0B56 = private constant [52 x i8] c"vec3 ta = vec3( 0.0, 0.65, -0.6+time*1.0 - 0.4*cl);\00"
@Lt_0B59 = private constant [9 x i8] c"vec3 ro;\00"
@Lt_0B5C = private constant [57 x i8] c"vec3 ro = ta + vec3( 1.3*cos(an), -0.250, 1.3*sin(an) );\00"
@Lt_0B5F = private constant [62 x i8] c"vec3 ro = vec3(-0.4,0.2,0.0) + 2.2*vec3(cos(an),0.0,sin(an));\00"
@Lt_0B62 = private constant [62 x i8] c"vec3 ro = vec3(cos(time + mo.x)*X, Y, X*sin(time + mo.x) )*R;\00"
@Lt_0B65 = private constant [99 x i8] c"vec3 ro = ta + vec3( 4.5*cos(0.1*time + 6.0*mo.x), 1.0 + 2.0*mo.y, 4.5*sin(0.1*time + 6.0*mo.x) );\00"
@Lt_0B68 = private constant [105 x i8] c"vec3 ro = vec3( -0.5+3.5*cos(0.1*time + 6.0*mo.x), 1.0 + 2.0*mo.y, 0.5 + 4.0*sin(0.1*time + 6.0*mo.x) );\00"
@Lt_0B6B = private constant [22 x i8] c"vec3 tot = vec3(0.0);\00"
@Lt_0B6E = private constant [40 x i8] c"vec3 rd = ca * normalize( vec3(p,2.5));\00"
@Lt_0B71 = private constant [40 x i8] c"vec3 rd = ca * normalize( vec3(p,1.8));\00"
@Lt_0B74 = private constant [41 x i8] c"vec3 rd = normalize( ca * vec3(p,-2.8));\00"
@Lt_0B77 = private constant [43 x i8] c"vec3 rd = normalize(p.x*cu+p.y*cv+7.5*cw);\00"
@Lt_0B7A = private constant [44 x i8] c"vec3 rd = ca * normalize( vec3(uv.xy,2.5));\00"
@Lt_0B7D = private constant [44 x i8] c"vec3 rd = ca  * normalize( vec3(p.xy,2.0));\00"
@Lt_0B80 = private constant [42 x i8] c"vec3 rdx = ca * normalize( vec3(px,2.5));\00"
@Lt_0B83 = private constant [42 x i8] c"vec3 rdy = ca * normalize( vec3(py,2.5));\00"
@Lt_0B86 = private constant [46 x i8] c"vec3 cw = normalize(vec3(0., 0.25, 0.) - ro);\00"
@Lt_0B89 = private constant [31 x i8] c"vec3 cp = vec3(0.0, 1.0, 0.0);\00"
@Lt_0B8C = private constant [36 x i8] c"vec3 cu = normalize(cross(cw, cp));\00"
@Lt_0B8F = private constant [36 x i8] c"vec3 cv = normalize(cross(cu, cw));\00"
@Lt_0B92 = private constant [23 x i8] c"vec3 pos = ro + rd *t;\00"
@Lt_0B95 = private constant [28 x i8] c"vec3 nor = calcNormal(pos);\00"
@Lt_0B98 = private constant [29 x i8] c"vec3 ligvec = SURFACE_COLOR;\00"
@Lt_0B9B = private constant [30 x i8] c"vec3 lig = normalize(ligvec);\00"
@Lt_0B9E = private constant [39 x i8] c"vec3 color = (3.5-0.35*t)*getColor(1);\00"
@Lt_0BA1 = private constant [22 x i8] c"vec3 ro2r = pos-rd/t;\00"
@Lt_0BA4 = private constant [29 x i8] c"vec3 rd2r = reflect(rd,nor);\00"
@Lt_0BA7 = private constant [24 x i8] c"vec3 pos2r = vec3(0.0);\00"
@Lt_0BAA = private constant [32 x i8] c"vec3 nor2r = calcNormal(pos2r);\00"
@Lt_0BAD = private constant [33 x i8] c"vec3 rd2 = refract(rd,nor,0.78);\00"
@Lt_0BB0 = private constant [27 x i8] c"vec3 pos2 = pos + rd2* t2;\00"
@Lt_0BB3 = private constant [30 x i8] c"vec3 nor2 = calcNormal(pos2);\00"
@Lt_0BB6 = private constant [20 x i8] c"vec3 ro3 = pos2+rd;\00"
@Lt_0BB9 = private constant [45 x i8] c"vec3 rd3 = rd2+0.002*rand1(gl_FragCoord.xy);\00"
@Lt_0BBC = private constant [27 x i8] c"vec3 pos3 = ro3 + rd3* t3;\00"
@Lt_0BBF = private constant [30 x i8] c"vec3 nor3 = calcNormal(pos3);\00"
@Lt_0BC2 = private constant [30 x i8] c"vec3 org = vec3(0., -2., 4.);\00"
@Lt_0BC5 = private constant [49 x i8] c"vec3 dir = normalize(vec3(v.x*1.6, -v.y, -1.5));\00"
@Lt_0BC8 = private constant [29 x i8] c"vec4 p = raymarch(org, dir);\00"
@Lt_0BCB = private constant [67 x i8] c"vec4 col = mix(vec4(1.,.5,.1,1.), vec4(0.1,.5,1.,1.), p.y*.02+.4);\00"
@Lt_0BCE = private constant [18 x i8] c"vec3 rO = camPos;\00"
@Lt_0BD1 = private constant [20 x i8] c"vec3 finalPos = rO;\00"
@Lt_0BD4 = private constant [36 x i8] c"vec3 camX   = vec3( 1.0, 0.0, 0.0);\00"
@Lt_0BD7 = private constant [36 x i8] c"vec3 camY   = vec3( 0.0, 1.0, 0.0);\00"
@Lt_0BDA = private constant [36 x i8] c"vec3 camZ   = vec3( 0.0, 0.0, 1.0);\00"
@Lt_0BDD = private constant [36 x i8] c"vec3 albedo = vec3( 0.0, 0.0, 0.0);\00"
@Lt_0BE0 = private constant [36 x i8] c"vec3 normal = vec3( 0.0, 0.0, 0.0);\00"
@Lt_0BE3 = private constant [39 x i8] c"vec3 camPos = vec3( 20.0, 18.0,-50.0);\00"
@Lt_0BE6 = private constant [53 x i8] c"vec3 rD = normalize(uv2.x*camX + uv2.y*camY + camZ);\00"
@Lt_0BE9 = private constant [89 x i8] c"vec3 color=(albedo/3.14)*evaluateLight(finalPos,normal)*volumetricShadow(finalPos,LPOS);\00"
@Lt_0BEC = private constant [45 x i8] c"vec4 scatTrans = vec4( 0.0, 0.0, 0.0, 0.0 );\00"
@Lt_0BEF = private constant [25 x i8] c"fragColor = vec4(c,1.0);\00"
@Lt_0BF2 = private constant [27 x i8] c"fragColor = vec4(col,1.0);\00"
@Lt_0BF5 = private constant [27 x i8] c"fragColor = vec4(tot,1.0);\00"
@Lt_0BF8 = private constant [29 x i8] c"fragColor = vec4(color,1.0);\00"
@Lt_0BFB = private constant [30 x i8] c"fragColor = vec4(v*0.01,1.0);\00"
@Lt_0BFE = private constant [33 x i8] c"fragColor = vec4(col*blend,1.0);\00"
@Lt_0C01 = private constant [30 x i8] c"fragColor.rgb += bgColor(uv);\00"
@Lt_0C04 = private constant [31 x i8] c"fragColor.rgb = render(ro,rd);\00"
@Lt_0C07 = private constant [64 x i8] c"fragColor.rgb += beam(uv*vec2(iResolution.x/iResolution.y, 1));\00"
@Lt_0C0A = private constant [65 x i8] c"fragColor.rgb += prism(uv*vec2(iResolution.x/iResolution.y, 1));\00"
@Lt_0C0D = private constant [49 x i8] c"fragColor = mix(vec4(0.), col, pow(glow*2.,4.));\00"
@Lt_0C10 = private constant [88 x i8] c"fragColor = vec4(sunmask*sunColor(uv * vec2(iResolution.x/iResolution.y / 1.4, 1)), 1);\00"
@Lt_0C13 = private constant [19 x i8] c"float pa,a=pa=0.0;\00"
@Lt_0C16 = private constant [22 x i8] c"float s=0.1,fade=1.0;\00"
@Lt_0C19 = private constant [38 x i8] c"float dm=max(0.,darkmatter-a*a*.001);\00"
@Lt_0C1C = private constant [39 x i8] c"float a1=.5+iMouse.x/iResolution.x*2.;\00"
@Lt_0C1F = private constant [39 x i8] c"float a2=.8+iMouse.y/iResolution.y*2.;\00"
@Lt_0C22 = private constant [18 x i8] c"float glow = p.w;\00"
@Lt_0C25 = private constant [15 x i8] c"float R = 4.3;\00"
@Lt_0C28 = private constant [21 x i8] c"float Y = sin(mo.y);\00"
@Lt_0C2B = private constant [21 x i8] c"float X = cos(mo.y);\00"
@Lt_0C2E = private constant [28 x i8] c"float x = 3.0 * cos(theta);\00"
@Lt_0C31 = private constant [28 x i8] c"float z = 3.0 * sin(theta);\00"
@Lt_0C34 = private constant [20 x i8] c"float time = iTime;\00"
@Lt_0C37 = private constant [23 x i8] c"float time =iTime*0.1;\00"
@Lt_0C3A = private constant [27 x i8] c"float time = 15.0 + iTime;\00"
@Lt_0C3D = private constant [29 x i8] c"float time=iTime*speed+0.25;\00"
@Lt_0C40 = private constant [31 x i8] c"float time = 15.0 + iTime*1.5;\00"
@Lt_0C43 = private constant [70 x i8] c"float time = iTime - 0.5*(1.0/24.0)*(float(m*AA+n)+d)/float(AA*AA-1);\00"
@Lt_0C46 = private constant [26 x i8] c"float cl = sin(0.5*time);\00"
@Lt_0C49 = private constant [38 x i8] c"float an = 1.57 + 0.7*sin(0.15*time);\00"
@Lt_0C4C = private constant [45 x i8] c"float an = 1.87 - 0.04*(1.0-cos(0.5*iTime));\00"
@Lt_0C4F = private constant [61 x i8] c"float d = 0.5*sin(fragCoord.x*147.0)*sin(fragCoord.y*131.0);\00"
@Lt_0C52 = private constant [29 x i8] c"float ti = fract(time-0.15);\00"
@Lt_0C55 = private constant [41 x i8] c"float t4 = abs(fract(time*0.5)-0.5)/0.5;\00"
@Lt_0C58 = private constant [87 x i8] c"float sunmask = smoothstep(-sunmaskfeather, sunmaskfeather, uv.y - horizonHeight(uv));\00"
@Lt_0C5B = private constant [27 x i8] c"float bou = -1.0 + 2.0*t4;\00"
@Lt_0C5E = private constant [30 x i8] c"float t = castRay(ro,rd,12.);\00"
@Lt_0C61 = private constant [31 x i8] c"float t2 = castRay2(pos, rd2);\00"
@Lt_0C64 = private constant [33 x i8] c"float sh = softshadow(pos, lig);\00"
@Lt_0C67 = private constant [35 x i8] c"float t3 = castRay(ro3, rd3, 10.);\00"
@Lt_0C6A = private constant [37 x i8] c"float theta = sin(iTime*0.1) * 6.28;\00"
@Lt_0C6D = private constant [38 x i8] c"float t2r = castRay(ro2r, rd2r, 7.0);\00"
@Lt_0C70 = private constant [40 x i8] c"float dif = clamp(dot(lig, nor),0.,1.);\00"
@Lt_0C73 = private constant [46 x i8] c"float dif2 = clamp(dot(lig, nor2), 0.0, 1.0);\00"
@Lt_0C76 = private constant [47 x i8] c"float dif3 = clamp(dot(lig, -nor3), 0.0, 1.0);\00"
@Lt_0C79 = private constant [48 x i8] c"float dif2r = clamp(dot(lig, nor2r), 0.0, 1.0);\00"
@Lt_0C7C = private constant [54 x i8] c"float blend=min(2.*abs(sin((0.1*iTime)*PI/3.2)),1.0);\00"
@Lt_0C7F = private constant [63 x i8] c"float spec = pow(clamp(dot(reflect(rd, nor), lig),0.,1.),16.);\00"
@Lt_0C82 = private constant [66 x i8] c"float spec2 = pow(clamp(dot(reflect(rd2, nor2), lig),0.,1.),16.);\00"
@Lt_0C85 = private constant [75 x i8] c"float spec2r = pow(clamp(dot(reflect(rd2r, nor2r), lig), 0.0, 1.0), 16.0);\00"
@Lt_0C88 = private constant [61 x i8] c"float hfactor = float(iResolution.y) / float(iResolution.x);\00"
@Lt_0C8B = private constant [50 x i8] c"mat2 rot1=mat2(cos(a1),sin(a1),-sin(a1),cos(a1));\00"
@Lt_0C8E = private constant [50 x i8] c"mat2 rot2=mat2(cos(a2),sin(a2),-sin(a2),cos(a2));\00"
@Lt_0C91 = private constant [36 x i8] c"mat3 ca = setCamera( ro, ta, 0.0 );\00"
@Lt_0C94 = private constant [31 x i8] c"mat3 ca = setCamera( ro, ta );\00"
@Lt_0C97 = private constant [9 x i8] c"#if AA>1\00"
@Lt_0C9A = private constant [29 x i8] c"for( int m=ZERO; m<AA; m++ )\00"
@Lt_0C9D = private constant [29 x i8] c"for( int n=ZERO; n<AA; n++ )\00"
@Lt_0CA0 = private constant [33 x i8] c"for (int r=0; r<volsteps; r++) {\00"
@Lt_0CA3 = private constant [35 x i8] c"for (int i=0; i<iterations; i++) {\00"
@Lt_0CAC = private constant [15 x i8] c"col+=.6*spec2;\00"
@Lt_0CAF = private constant [16 x i8] c"col.g+=.3*dif2;\00"
@Lt_0CB2 = private constant [17 x i8] c"col.r+=0.3*dif2;\00"
@Lt_0CB5 = private constant [17 x i8] c"col.b+=0.3*dif2;\00"
@Lt_0CB8 = private constant [21 x i8] c"col /= float(AA*AA);\00"
@Lt_0CBB = private constant [21 x i8] c"col+=0.1*dif3*color;\00"
@Lt_0CBE = private constant [26 x i8] c"col*=clamp(sh, 0.0, 1.0);\00"
@Lt_0CC1 = private constant [26 x i8] c"col /= sin(float(AA*AA));\00"
@Lt_0CC4 = private constant [26 x i8] c"col = 1.35*col/(1.0+col);\00"
@Lt_0CC7 = private constant [27 x i8] c"col+=0.04*(1.-dif3)*color;\00"
@Lt_0CCA = private constant [27 x i8] c"col-=1.-dot(uv,1.-uv)*2.4;\00"
@Lt_0CCD = private constant [28 x i8] c"col=0.3*dif+0.5*color+spec;\00"
@Lt_0CD0 = private constant [28 x i8] c"col += render( ro, rd, q );\00"
@Lt_0CD3 = private constant [31 x i8] c"col+=0.1*(dif2r*color+spec2r);\00"
@Lt_0CD6 = private constant [31 x i8] c"col-=0.04*rand1(uv2.xy*iTime);\00"
@Lt_0CD9 = private constant [31 x i8] c"col = pow( col, vec3(0.4545));\00"
@Lt_0CDC = private constant [32 x i8] c"col = col*vec3(1.11,0.89,0.79);\00"
@Lt_0CDF = private constant [40 x i8] c"col*=.9+.1*sin(2.*uv2.y*iResolution.y);\00"
@Lt_0CE2 = private constant [53 x i8] c"col=mix(col, vec3(.4,.5,.6), exp(-(2.-(0.18*t)) ) );\00"
@Lt_0CE5 = private constant [12 x i8] c"tot += col;\00"
@Lt_0CE8 = private constant [21 x i8] c"tot /= float(AA*AA);\00"
@Lt_0CEB = private constant [26 x i8] c"tot = clamp(tot,0.0,1.0);\00"
@Lt_0CEE = private constant [29 x i8] c"tot = tot*tot*(3.0-2.0*tot);\00"
@Lt_0CF1 = private constant [61 x i8] c"tot *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\00"
@Lt_0CF4 = private constant [3 x i8] c" }\00"
@Lt_0CF7 = private constant [14 x i8] c"time += -2.6;\00"
@Lt_0CFA = private constant [13 x i8] c"time *= 0.9;\00"
@Lt_0CFD = private constant [22 x i8] c"ti = 4.0*ti*(1.0-ti);\00"
@Lt_0D00 = private constant [56 x i8] c"ta.y += 0.15*ti*ti*(3.0-2.0*ti)*smoothstep(0.4,0.9,cl);\00"
@Lt_0D03 = private constant [79 x i8] c"ro += 0.06*sin(time*12.0+vec3(0.0,2.0,4.0))*smoothstep( 0.85, 1.0, abs(bou) );\00"
@Lt_0D06 = private constant [35 x i8] c"uv.x*=iResolution.x/iResolution.y;\00"
@Lt_0D0A = private constant [145 x i8] c"uv.x = 1.0+ (mod(gl_FragCoord.x-(iResolution.x/2.),((iResolution.x/4.)*(-1.5*blend+0.501)+(iResolution.x/4.)))-1.*gl_FragCoord.x)/iResolution.x;\00"
@Lt_0D0E = private constant [173 x i8] c"uv.x = 1.0+(mod(gl_FragCoord.x-sin(iTime)*gl_FragCoord.y-(iResolution.x/2.),((iResolution.x/4.)*(-1.5*blend+0.501) +(iResolution.x/4.)))-(1.*gl_FragCoord.x))/iResolution.x;\00"
@Lt_0D11 = private constant [44 x i8] c"uv.y = 1.0-(gl_FragCoord.y /iResolution.y);\00"
@Lt_0D15 = private constant [173 x i8] c"uv.y = 1.0+(mod(gl_FragCoord.y+sin(iTime)*gl_FragCoord.x-(iResolution.y/2.),((iResolution.y/4.)*(-1.5*blend+0.501) +(iResolution.y/4.)))-(1.*gl_FragCoord.y))/iResolution.y;\00"
@Lt_0D18 = private constant [35 x i8] c"uv.y*=iResolution.y/iResolution.x;\00"
@Lt_0D1B = private constant [22 x i8] c"if (r>6) fade*=1.-dm;\00"
@Lt_0D1E = private constant [31 x i8] c"if (mo.x==mo.y && mo.x==0.0) {\00"
@Lt_0D21 = private constant [22 x i8] c"if (t3>=10.0)t3=10.0;\00"
@Lt_0D24 = private constant [22 x i8] c"if (t>= 12.0) t=12.0;\00"
@Lt_0D27 = private constant [23 x i8] c"if (iTime>150.0) ef=1;\00"
@Lt_0D2A = private constant [36 x i8] c"if (iTime>30.0 && iTime<60.0) ef=1;\00"
@Lt_0D2D = private constant [36 x i8] c"if (iTime>60.0 && iTime<90.0) ef=2;\00"
@Lt_0D30 = private constant [37 x i8] c"if (iTime>90.0 && iTime<120.0) ef=3;\00"
@Lt_0D33 = private constant [37 x i8] c"if (iTime>120.0 && iTime<150.0)ef=0;\00"
@Lt_0D36 = private constant [18 x i8] c"if (ef==0||ef==2)\00"
@Lt_0D39 = private constant [18 x i8] c"if (ef==1||ef==3)\00"
@Lt_0D3C = private constant [48 x i8] c"if (ef==1) ro = vec3(x*0.2+1.0, 4.0, 0.6*z-3.);\00"
@Lt_0D3F = private constant [50 x i8] c"if (ef==4) ro = vec3(0.0, 0.3+0.10*iTime, 0.001);\00"
@Lt_0D42 = private constant [50 x i8] c"if (ef==3) ro = vec3(0.0, 36.-0.24*iTime, 0.001);\00"
@Lt_0D45 = private constant [73 x i8] c"if (ef==0||ef==2) ro = vec3(x*2.0, 2.0+2.*sin((iTime+37.)*0.15), z*1.4);\00"
@Lt_0D48 = private constant [74 x i8] c"if (ef==4){ uv.xy = gl_FragCoord.xy /iResolution.xy; p = uv * 2.0 - 1.0;}\00"
@Lt_0D4B = private constant [89 x i8] c"if (ef==4||ef==2||ef==1) ligvec = vec3(0.4*sin(iTime*0.2), 1.0, 0.4*cos(iTime*0.3))*1.0;\00"
@Lt_0D4E = private constant [28 x i8] c"if(iMouse.x+iMouse.y > 0.0)\00"
@Lt_0D51 = private constant [45 x i8] c"if(abs(fragCoord.x-(iResolution.x*0.5))<0.6)\00"
@Lt_0D54 = private constant [21 x i8] c"mo = vec2(0.42,0.4);\00"
@Lt_0D57 = private constant [12 x i8] c"mo.y+=0.02;\00"
@Lt_0D5A = private constant [13 x i8] c"mo.y *=1.57;\00"
@Lt_0D5D = private constant [12 x i8] c"mo.x*=10.0;\00"
@Lt_0D60 = private constant [29 x i8] c"#define sunmaskfeather 0.013\00"
@Lt_0D63 = private constant [25 x i8] c"p = (1.-uv) * 2.0 - 1.0;\00"
@Lt_0D66 = private constant [30 x i8] c"p=abs(p)/dot(p,p)-formuparam;\00"
@Lt_0D69 = private constant [42 x i8] c"p = abs(vec3(tile)-mod(p,vec3(tile*2.)));\00"
@Lt_0D6C = private constant [36 x i8] c"p.x *= iResolution.x/iResolution.y;\00"
@Lt_0D6F = private constant [26 x i8] c"pos2r = ro2r + rd2r* t2r;\00"
@Lt_0D72 = private constant [22 x i8] c"pos2 = pos + rd2* t2;\00"
@Lt_0D75 = private constant [27 x i8] c"rd2 = refract(rd,nor,0.8);\00"
@Lt_0D78 = private constant [28 x i8] c"rd2 = refract(rd,nor,0.82);\00"
@Lt_0D7B = private constant [25 x i8] c"t2 = castRay2(pos, rd2);\00"
@Lt_0D7E = private constant [25 x i8] c"nor2 = calcNormal(pos2);\00"
@Lt_0D81 = private constant [39 x i8] c"dif2 = clamp(dot(lig, nor2), 0.0,1.0);\00"
@Lt_0D84 = private constant [51 x i8] c"color = clamp(1.+(1.-0.2*t3)*getColor(1),0.0,8.0);\00"
@Lt_0D87 = private constant [15 x i8] c"color.r = 0.5;\00"
@Lt_0D8A = private constant [45 x i8] c"color = color * scatTrans.w + scatTrans.xyz;\00"
@Lt_0D8D = private constant [35 x i8] c"color = pow(color, vec3(1.0/2.2));\00"
@Lt_0D90 = private constant [85 x i8] c"traceScene( fragCoord.x>(iResolution.x/2.0),rO,rD,finalPos,normal,albedo,scatTrans);\00"
@Lt_0D93 = private constant [88 x i8] c"camPos+=vec3(0.05,0.12,0.0)*(vec3(iMouse.x,iMouse.y,0.0)-vec3(iResolution.xy*0.5,0.0));\00"
@Lt_0D96 = private constant [20 x i8] c"#ifndef D_DEMO_FREE\00"
@Lt_0D99 = private constant [36 x i8] c"v.x *= iResolution.x/iResolution.y;\00"
@Lt_0D9C = private constant [9 x i8] c"#if AA<2\00"
@Lt_0DB1 = private constant [11 x i8] c"./chargen/\00"
@Lt_0DB2 = private constant [5 x i8] c".c64\00"
@Lt_0DE1 = private constant [6 x i8] c"wine \00"
@Lt_0DE9 = private constant [8 x i8] c"dosbox \00"
@Lt_0DEA = private constant [19 x i8] c" -fullscreen -exit\00"
@Lt_0DEF = private constant [5 x i8] c".asm\00"
@Lt_0DF7 = private constant [6 x i8] c"nasm \00"
@Lt_0DF8 = private constant [13 x i8] c".asm -f bin \00"
@Lt_0DF9 = private constant [5 x i8] c".bin\00"
@Lt_0E00 = private constant [29 x i8] c"dosbox -fullscreen -c 'boot \00"
@Lt_0E01 = private constant [2 x i8] c"'\00"
@Lt_0E02 = private constant [7 x i8] c" -exit\00"
@Lt_0E06 = private constant [11 x i8] c"rm tmp.bin\00"
@Lt_1194 = private constant [4 x i8] c"PC:\00"
@Lt_1195 = private constant [4 x i8] c" A:\00"
@Lt_1196 = private constant [4 x i8] c" X:\00"
@Lt_1197 = private constant [4 x i8] c" Y:\00"
@Lt_1198 = private constant [4 x i8] c" S:\00"
@Lt_1199 = private constant [4 x i8] c" N:\00"
@Lt_119A = private constant [4 x i8] c" V:\00"
@Lt_119B = private constant [3 x i8] c" -\00"
@Lt_119C = private constant [4 x i8] c" B:\00"
@Lt_119D = private constant [4 x i8] c" D:\00"
@Lt_119E = private constant [4 x i8] c" I:\00"
@Lt_119F = private constant [4 x i8] c" Z:\00"
@Lt_11A0 = private constant [4 x i8] c" C:\00"
@Lt_144B = private constant [4 x i8] c"BRK\00"
@Lt_144C = private constant [2 x i8] c"0\00"
@Lt_144D = private constant [2 x i8] c"1\00"
@Lt_144E = private constant [2 x i8] c"7\00"
@Lt_144F = private constant [4 x i8] c"ORA\00"
@Lt_1453 = private constant [3 x i8] c"10\00"
@Lt_1454 = private constant [2 x i8] c"6\00"
@Lt_1455 = private constant [2 x i8] c"2\00"
@Lt_1456 = private constant [4 x i8] c"R32\00"
@Lt_145A = private constant [2 x i8] c"3\00"
@Lt_145B = private constant [4 x i8] c"W32\00"
@Lt_145F = private constant [4 x i8] c"R64\00"
@Lt_1463 = private constant [2 x i8] c"4\00"
@Lt_1467 = private constant [2 x i8] c"5\00"
@Lt_1468 = private constant [4 x i8] c"ASL\00"
@Lt_146C = private constant [4 x i8] c"W64\00"
@Lt_1470 = private constant [4 x i8] c"PHP\00"
@Lt_1474 = private constant [2 x i8] c"8\00"
@Lt_1478 = private constant [2 x i8] c"9\00"
@Lt_147C = private constant [4 x i8] c"***\00"
@Lt_1480 = private constant [3 x i8] c"11\00"
@Lt_1484 = private constant [3 x i8] c"12\00"
@Lt_1488 = private constant [3 x i8] c"13\00"
@Lt_148C = private constant [3 x i8] c"14\00"
@Lt_1490 = private constant [3 x i8] c"15\00"
@Lt_1491 = private constant [4 x i8] c"BPL\00"
@Lt_1495 = private constant [3 x i8] c"16\00"
@Lt_1499 = private constant [3 x i8] c"17\00"
@Lt_149D = private constant [3 x i8] c"18\00"
@Lt_14A1 = private constant [3 x i8] c"19\00"
@Lt_14A5 = private constant [3 x i8] c"20\00"
@Lt_14A9 = private constant [3 x i8] c"21\00"
@Lt_14AD = private constant [3 x i8] c"22\00"
@Lt_14B1 = private constant [3 x i8] c"23\00"
@Lt_14B2 = private constant [4 x i8] c"CLC\00"
@Lt_14B6 = private constant [3 x i8] c"24\00"
@Lt_14BA = private constant [3 x i8] c"25\00"
@Lt_14BE = private constant [3 x i8] c"26\00"
@Lt_14C2 = private constant [3 x i8] c"27\00"
@Lt_14C6 = private constant [3 x i8] c"28\00"
@Lt_14CA = private constant [3 x i8] c"29\00"
@Lt_14CE = private constant [3 x i8] c"30\00"
@Lt_14D2 = private constant [3 x i8] c"31\00"
@Lt_14D3 = private constant [4 x i8] c"JSR\00"
@Lt_14D7 = private constant [3 x i8] c"32\00"
@Lt_14D8 = private constant [4 x i8] c"AND\00"
@Lt_14DC = private constant [3 x i8] c"33\00"
@Lt_14E0 = private constant [3 x i8] c"34\00"
@Lt_14E4 = private constant [3 x i8] c"35\00"
@Lt_14E5 = private constant [4 x i8] c"BIT\00"
@Lt_14E9 = private constant [3 x i8] c"36\00"
@Lt_14ED = private constant [3 x i8] c"37\00"
@Lt_14EE = private constant [4 x i8] c"ROL\00"
@Lt_14F2 = private constant [3 x i8] c"38\00"
@Lt_14F6 = private constant [3 x i8] c"39\00"
@Lt_14F7 = private constant [4 x i8] c"PLP\00"
@Lt_14FB = private constant [3 x i8] c"40\00"
@Lt_14FF = private constant [3 x i8] c"41\00"
@Lt_1503 = private constant [3 x i8] c"42\00"
@Lt_1507 = private constant [3 x i8] c"43\00"
@Lt_150B = private constant [3 x i8] c"44\00"
@Lt_150F = private constant [3 x i8] c"45\00"
@Lt_1513 = private constant [3 x i8] c"46\00"
@Lt_1517 = private constant [3 x i8] c"47\00"
@Lt_1518 = private constant [4 x i8] c"BMI\00"
@Lt_151C = private constant [3 x i8] c"48\00"
@Lt_1520 = private constant [3 x i8] c"49\00"
@Lt_1524 = private constant [3 x i8] c"50\00"
@Lt_1528 = private constant [3 x i8] c"51\00"
@Lt_152C = private constant [3 x i8] c"52\00"
@Lt_1530 = private constant [3 x i8] c"53\00"
@Lt_1534 = private constant [3 x i8] c"54\00"
@Lt_1538 = private constant [3 x i8] c"55\00"
@Lt_1539 = private constant [4 x i8] c"SEC\00"
@Lt_153D = private constant [3 x i8] c"56\00"
@Lt_1541 = private constant [3 x i8] c"57\00"
@Lt_1545 = private constant [3 x i8] c"58\00"
@Lt_1549 = private constant [3 x i8] c"59\00"
@Lt_154D = private constant [3 x i8] c"60\00"
@Lt_1551 = private constant [3 x i8] c"61\00"
@Lt_1555 = private constant [3 x i8] c"62\00"
@Lt_1559 = private constant [3 x i8] c"63\00"
@Lt_155A = private constant [4 x i8] c"RTI\00"
@Lt_155E = private constant [3 x i8] c"64\00"
@Lt_155F = private constant [4 x i8] c"EOR\00"
@Lt_1563 = private constant [3 x i8] c"65\00"
@Lt_1567 = private constant [3 x i8] c"66\00"
@Lt_156B = private constant [3 x i8] c"67\00"
@Lt_156F = private constant [3 x i8] c"68\00"
@Lt_1573 = private constant [3 x i8] c"69\00"
@Lt_1574 = private constant [4 x i8] c"LSR\00"
@Lt_1578 = private constant [3 x i8] c"70\00"
@Lt_157C = private constant [3 x i8] c"71\00"
@Lt_157D = private constant [4 x i8] c"PHA\00"
@Lt_1581 = private constant [3 x i8] c"72\00"
@Lt_1585 = private constant [3 x i8] c"73\00"
@Lt_1589 = private constant [3 x i8] c"74\00"
@Lt_158D = private constant [3 x i8] c"75\00"
@Lt_158E = private constant [4 x i8] c"JMP\00"
@Lt_1592 = private constant [3 x i8] c"76\00"
@Lt_1596 = private constant [3 x i8] c"77\00"
@Lt_159A = private constant [3 x i8] c"78\00"
@Lt_159E = private constant [3 x i8] c"79\00"
@Lt_159F = private constant [4 x i8] c"BVC\00"
@Lt_15A3 = private constant [3 x i8] c"80\00"
@Lt_15A7 = private constant [3 x i8] c"81\00"
@Lt_15AB = private constant [3 x i8] c"82\00"
@Lt_15AF = private constant [3 x i8] c"83\00"
@Lt_15B3 = private constant [3 x i8] c"84\00"
@Lt_15B7 = private constant [3 x i8] c"85\00"
@Lt_15BB = private constant [3 x i8] c"86\00"
@Lt_15BF = private constant [3 x i8] c"87\00"
@Lt_15C0 = private constant [4 x i8] c"CLI\00"
@Lt_15C4 = private constant [3 x i8] c"88\00"
@Lt_15C8 = private constant [3 x i8] c"89\00"
@Lt_15CC = private constant [3 x i8] c"90\00"
@Lt_15D0 = private constant [3 x i8] c"91\00"
@Lt_15D4 = private constant [3 x i8] c"92\00"
@Lt_15D8 = private constant [3 x i8] c"93\00"
@Lt_15DC = private constant [3 x i8] c"94\00"
@Lt_15E0 = private constant [3 x i8] c"95\00"
@Lt_15E1 = private constant [4 x i8] c"RTS\00"
@Lt_15E5 = private constant [3 x i8] c"96\00"
@Lt_15E6 = private constant [4 x i8] c"ADC\00"
@Lt_15EA = private constant [3 x i8] c"97\00"
@Lt_15EE = private constant [3 x i8] c"98\00"
@Lt_15F2 = private constant [3 x i8] c"99\00"
@Lt_15F6 = private constant [4 x i8] c"100\00"
@Lt_15FA = private constant [4 x i8] c"101\00"
@Lt_15FB = private constant [4 x i8] c"ROR\00"
@Lt_15FF = private constant [4 x i8] c"102\00"
@Lt_1603 = private constant [4 x i8] c"103\00"
@Lt_1604 = private constant [4 x i8] c"PLA\00"
@Lt_1608 = private constant [4 x i8] c"104\00"
@Lt_160C = private constant [4 x i8] c"105\00"
@Lt_1610 = private constant [4 x i8] c"106\00"
@Lt_1614 = private constant [4 x i8] c"107\00"
@Lt_1618 = private constant [4 x i8] c"108\00"
@Lt_161C = private constant [4 x i8] c"109\00"
@Lt_1620 = private constant [4 x i8] c"110\00"
@Lt_1624 = private constant [4 x i8] c"111\00"
@Lt_1625 = private constant [4 x i8] c"BVS\00"
@Lt_1629 = private constant [4 x i8] c"112\00"
@Lt_162D = private constant [4 x i8] c"113\00"
@Lt_1631 = private constant [4 x i8] c"114\00"
@Lt_1635 = private constant [4 x i8] c"115\00"
@Lt_1639 = private constant [4 x i8] c"116\00"
@Lt_163D = private constant [4 x i8] c"117\00"
@Lt_1641 = private constant [4 x i8] c"118\00"
@Lt_1645 = private constant [4 x i8] c"119\00"
@Lt_1646 = private constant [4 x i8] c"SEI\00"
@Lt_164A = private constant [4 x i8] c"120\00"
@Lt_164E = private constant [4 x i8] c"121\00"
@Lt_1652 = private constant [4 x i8] c"122\00"
@Lt_1656 = private constant [4 x i8] c"123\00"
@Lt_165A = private constant [4 x i8] c"124\00"
@Lt_165E = private constant [4 x i8] c"125\00"
@Lt_1662 = private constant [4 x i8] c"126\00"
@Lt_1666 = private constant [4 x i8] c"127\00"
@Lt_166A = private constant [4 x i8] c"128\00"
@Lt_166B = private constant [4 x i8] c"STA\00"
@Lt_166F = private constant [4 x i8] c"129\00"
@Lt_1673 = private constant [4 x i8] c"130\00"
@Lt_1677 = private constant [4 x i8] c"131\00"
@Lt_1678 = private constant [4 x i8] c"STY\00"
@Lt_167C = private constant [4 x i8] c"132\00"
@Lt_1680 = private constant [4 x i8] c"133\00"
@Lt_1681 = private constant [4 x i8] c"STX\00"
@Lt_1685 = private constant [4 x i8] c"134\00"
@Lt_1689 = private constant [4 x i8] c"135\00"
@Lt_168A = private constant [4 x i8] c"DEY\00"
@Lt_168E = private constant [4 x i8] c"136\00"
@Lt_1692 = private constant [4 x i8] c"137\00"
@Lt_1693 = private constant [4 x i8] c"TXA\00"
@Lt_1697 = private constant [4 x i8] c"138\00"
@Lt_169B = private constant [4 x i8] c"139\00"
@Lt_169F = private constant [4 x i8] c"140\00"
@Lt_16A3 = private constant [4 x i8] c"141\00"
@Lt_16A7 = private constant [4 x i8] c"142\00"
@Lt_16AB = private constant [4 x i8] c"143\00"
@Lt_16AC = private constant [4 x i8] c"BCC\00"
@Lt_16B0 = private constant [4 x i8] c"144\00"
@Lt_16B4 = private constant [4 x i8] c"145\00"
@Lt_16B8 = private constant [4 x i8] c"146\00"
@Lt_16BC = private constant [4 x i8] c"147\00"
@Lt_16C0 = private constant [4 x i8] c"148\00"
@Lt_16C4 = private constant [4 x i8] c"149\00"
@Lt_16C8 = private constant [4 x i8] c"150\00"
@Lt_16CC = private constant [4 x i8] c"151\00"
@Lt_16CD = private constant [4 x i8] c"TYA\00"
@Lt_16D1 = private constant [4 x i8] c"152\00"
@Lt_16D5 = private constant [4 x i8] c"153\00"
@Lt_16D6 = private constant [4 x i8] c"TXS\00"
@Lt_16DA = private constant [4 x i8] c"154\00"
@Lt_16DE = private constant [4 x i8] c"155\00"
@Lt_16E2 = private constant [4 x i8] c"156\00"
@Lt_16E6 = private constant [4 x i8] c"157\00"
@Lt_16EA = private constant [4 x i8] c"158\00"
@Lt_16EE = private constant [4 x i8] c"159\00"
@Lt_16EF = private constant [4 x i8] c"LDY\00"
@Lt_16F3 = private constant [4 x i8] c"160\00"
@Lt_16F4 = private constant [4 x i8] c"LDA\00"
@Lt_16F8 = private constant [4 x i8] c"161\00"
@Lt_16F9 = private constant [4 x i8] c"LDX\00"
@Lt_16FD = private constant [4 x i8] c"162\00"
@Lt_1701 = private constant [4 x i8] c"163\00"
@Lt_1705 = private constant [4 x i8] c"164\00"
@Lt_1709 = private constant [4 x i8] c"165\00"
@Lt_170D = private constant [4 x i8] c"166\00"
@Lt_1711 = private constant [4 x i8] c"167\00"
@Lt_1712 = private constant [4 x i8] c"TAY\00"
@Lt_1716 = private constant [4 x i8] c"168\00"
@Lt_171A = private constant [4 x i8] c"169\00"
@Lt_171B = private constant [4 x i8] c"TAX\00"
@Lt_171F = private constant [4 x i8] c"170\00"
@Lt_1723 = private constant [4 x i8] c"171\00"
@Lt_1727 = private constant [4 x i8] c"172\00"
@Lt_172B = private constant [4 x i8] c"173\00"
@Lt_172F = private constant [4 x i8] c"174\00"
@Lt_1733 = private constant [4 x i8] c"175\00"
@Lt_1734 = private constant [4 x i8] c"BCS\00"
@Lt_1738 = private constant [4 x i8] c"176\00"
@Lt_173C = private constant [4 x i8] c"177\00"
@Lt_1740 = private constant [4 x i8] c"178\00"
@Lt_1744 = private constant [4 x i8] c"179\00"
@Lt_1748 = private constant [4 x i8] c"180\00"
@Lt_174C = private constant [4 x i8] c"181\00"
@Lt_1750 = private constant [4 x i8] c"182\00"
@Lt_1754 = private constant [4 x i8] c"183\00"
@Lt_1755 = private constant [4 x i8] c"CLV\00"
@Lt_1759 = private constant [4 x i8] c"184\00"
@Lt_175D = private constant [4 x i8] c"185\00"
@Lt_175E = private constant [4 x i8] c"TSX\00"
@Lt_1762 = private constant [4 x i8] c"186\00"
@Lt_1766 = private constant [4 x i8] c"187\00"
@Lt_176A = private constant [4 x i8] c"188\00"
@Lt_176E = private constant [4 x i8] c"189\00"
@Lt_1772 = private constant [4 x i8] c"190\00"
@Lt_1776 = private constant [4 x i8] c"191\00"
@Lt_1777 = private constant [4 x i8] c"CPY\00"
@Lt_177B = private constant [4 x i8] c"192\00"
@Lt_177C = private constant [4 x i8] c"CMP\00"
@Lt_1780 = private constant [4 x i8] c"193\00"
@Lt_1784 = private constant [4 x i8] c"194\00"
@Lt_1788 = private constant [4 x i8] c"195\00"
@Lt_178C = private constant [4 x i8] c"196\00"
@Lt_1790 = private constant [4 x i8] c"197\00"
@Lt_1791 = private constant [4 x i8] c"DEC\00"
@Lt_1795 = private constant [4 x i8] c"198\00"
@Lt_1799 = private constant [4 x i8] c"199\00"
@Lt_179A = private constant [4 x i8] c"INY\00"
@Lt_179E = private constant [4 x i8] c"200\00"
@Lt_17A2 = private constant [4 x i8] c"201\00"
@Lt_17A3 = private constant [4 x i8] c"DEX\00"
@Lt_17A7 = private constant [4 x i8] c"202\00"
@Lt_17AB = private constant [4 x i8] c"203\00"
@Lt_17AF = private constant [4 x i8] c"204\00"
@Lt_17B3 = private constant [4 x i8] c"205\00"
@Lt_17B7 = private constant [4 x i8] c"206\00"
@Lt_17BB = private constant [4 x i8] c"207\00"
@Lt_17BC = private constant [4 x i8] c"BNE\00"
@Lt_17C0 = private constant [4 x i8] c"208\00"
@Lt_17C4 = private constant [4 x i8] c"209\00"
@Lt_17C8 = private constant [4 x i8] c"210\00"
@Lt_17CC = private constant [4 x i8] c"211\00"
@Lt_17D0 = private constant [4 x i8] c"212\00"
@Lt_17D4 = private constant [4 x i8] c"213\00"
@Lt_17D8 = private constant [4 x i8] c"214\00"
@Lt_17DC = private constant [4 x i8] c"215\00"
@Lt_17DD = private constant [4 x i8] c"CLD\00"
@Lt_17E1 = private constant [4 x i8] c"216\00"
@Lt_17E5 = private constant [4 x i8] c"217\00"
@Lt_17E9 = private constant [4 x i8] c"218\00"
@Lt_17ED = private constant [4 x i8] c"219\00"
@Lt_17F1 = private constant [4 x i8] c"220\00"
@Lt_17F5 = private constant [4 x i8] c"221\00"
@Lt_17F9 = private constant [4 x i8] c"222\00"
@Lt_17FD = private constant [4 x i8] c"223\00"
@Lt_17FE = private constant [4 x i8] c"CPX\00"
@Lt_1802 = private constant [4 x i8] c"224\00"
@Lt_1803 = private constant [4 x i8] c"SBC\00"
@Lt_1807 = private constant [4 x i8] c"225\00"
@Lt_180B = private constant [4 x i8] c"226\00"
@Lt_180F = private constant [4 x i8] c"227\00"
@Lt_1813 = private constant [4 x i8] c"228\00"
@Lt_1817 = private constant [4 x i8] c"229\00"
@Lt_1818 = private constant [4 x i8] c"INC\00"
@Lt_181C = private constant [4 x i8] c"230\00"
@Lt_1820 = private constant [4 x i8] c"231\00"
@Lt_1821 = private constant [4 x i8] c"INX\00"
@Lt_1825 = private constant [4 x i8] c"232\00"
@Lt_1829 = private constant [4 x i8] c"233\00"
@Lt_182A = private constant [4 x i8] c"NOP\00"
@Lt_182E = private constant [4 x i8] c"234\00"
@Lt_1832 = private constant [4 x i8] c"235\00"
@Lt_1836 = private constant [4 x i8] c"236\00"
@Lt_183A = private constant [4 x i8] c"237\00"
@Lt_183E = private constant [4 x i8] c"238\00"
@Lt_1842 = private constant [4 x i8] c"239\00"
@Lt_1843 = private constant [4 x i8] c"BEQ\00"
@Lt_1847 = private constant [4 x i8] c"240\00"
@Lt_184B = private constant [4 x i8] c"241\00"
@Lt_184F = private constant [4 x i8] c"242\00"
@Lt_1853 = private constant [4 x i8] c"243\00"
@Lt_1857 = private constant [4 x i8] c"244\00"
@Lt_185B = private constant [4 x i8] c"245\00"
@Lt_185F = private constant [4 x i8] c"246\00"
@Lt_1863 = private constant [4 x i8] c"247\00"
@Lt_1864 = private constant [4 x i8] c"SED\00"
@Lt_1868 = private constant [4 x i8] c"248\00"
@Lt_186C = private constant [4 x i8] c"249\00"
@Lt_1870 = private constant [4 x i8] c"250\00"
@Lt_1874 = private constant [4 x i8] c"251\00"
@Lt_1878 = private constant [4 x i8] c"252\00"
@Lt_187C = private constant [4 x i8] c"253\00"
@Lt_1880 = private constant [4 x i8] c"254\00"
@Lt_1884 = private constant [4 x i8] c"255\00"
@Lt_1885 = private constant [4 x i8] c"UNK\00"
@Lt_1886 = private constant [4 x i8] c"IMP\00"
@Lt_188A = private constant [4 x i8] c"IMM\00"
@Lt_188E = private constant [4 x i8] c"ABS\00"
@Lt_1892 = private constant [5 x i8] c"ZERO\00"
@Lt_1896 = private constant [6 x i8] c"ZEROX\00"
@Lt_189A = private constant [6 x i8] c"ZEROY\00"
@Lt_189E = private constant [5 x i8] c"ABSX\00"
@Lt_18A2 = private constant [5 x i8] c"ABSY\00"
@Lt_18A6 = private constant [4 x i8] c"REL\00"
@Lt_18AA = private constant [5 x i8] c"INDX\00"
@Lt_18AE = private constant [5 x i8] c"INDY\00"
@Lt_18B2 = private constant [4 x i8] c"IND\00"
@FLAG = global i64 zeroinitializer
@Lt_18C7 = private constant [15 x i8] c"save filename:\00"
@Lt_18D1 = private constant [15 x i8] c"can't create: \00"
@Lt_18D5 = private constant [15 x i8] c"load filename:\00"
@Lt_18DF = private constant [13 x i8] c"can't open: \00"
@.Lt_18B4 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18B2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* 0 } ]
@.Lt_18B0 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_18AE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18B4 to i8*) } ]
@.Lt_18AC = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_18AA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18B0 to i8*) } ]
@.Lt_18A8 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_18A6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18AC to i8*) } ]
@.Lt_18A4 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_18A2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A8 to i8*) } ]
@.Lt_18A0 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_189E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A4 to i8*) } ]
@.Lt_189C = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 5 to i16), i8* bitcast (i8* @Lt_189A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_18A0 to i8*) } ]
@.Lt_1898 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 5 to i16), i8* bitcast (i8* @Lt_1896 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_189C to i8*) } ]
@.Lt_1894 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 4 to i16), i8* bitcast (i8* @Lt_1892 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1898 to i8*) } ]
@.Lt_1890 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_188E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1894 to i8*) } ]
@.Lt_188C = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_188A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1890 to i8*) } ]
@.Lt_1888 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1886 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_188C to i8*) } ]
@.Lt_1187 = global [2 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1885 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1888 to i8*) } ]
@.Lt_1882 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1884 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1187 to i8*) } ]
@.Lt_187E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1880 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1818 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1882 to i8*) } ]
@.Lt_187A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_187C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_187E to i8*) } ]
@.Lt_1876 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1878 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_187A to i8*) } ]
@.Lt_1872 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1874 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1876 to i8*) } ]
@.Lt_186E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1870 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1872 to i8*) } ]
@.Lt_186A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_186C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_186E to i8*) } ]
@.Lt_1866 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1868 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1864 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SED }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_186A to i8*) } ]
@.Lt_1861 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1863 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1866 to i8*) } ]
@.Lt_185D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1818 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1861 to i8*) } ]
@.Lt_1859 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_185B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_185D to i8*) } ]
@.Lt_1855 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1857 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1859 to i8*) } ]
@.Lt_1851 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1853 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1855 to i8*) } ]
@.Lt_184D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_184F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1851 to i8*) } ]
@.Lt_1849 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_184B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_184D to i8*) } ]
@.Lt_1845 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1847 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1843 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BEQ }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1849 to i8*) } ]
@.Lt_1840 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1842 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1845 to i8*) } ]
@.Lt_183C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_183E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1818 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1840 to i8*) } ]
@.Lt_1838 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_183A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_183C to i8*) } ]
@.Lt_1834 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1836 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1838 to i8*) } ]
@.Lt_1830 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1832 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1834 to i8*) } ]
@.Lt_182C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_182E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_182A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_NOP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1830 to i8*) } ]
@.Lt_1827 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1829 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_182C to i8*) } ]
@.Lt_1823 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1825 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1821 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1827 to i8*) } ]
@.Lt_181E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1820 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1823 to i8*) } ]
@.Lt_181A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_181C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1818 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_181E to i8*) } ]
@.Lt_1815 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1817 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_181A to i8*) } ]
@.Lt_1811 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1813 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1815 to i8*) } ]
@.Lt_180D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_180F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1811 to i8*) } ]
@.Lt_1809 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_180B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_180D to i8*) } ]
@.Lt_1805 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1807 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1803 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SBC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1809 to i8*) } ]
@.Lt_1800 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1802 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1805 to i8*) } ]
@.Lt_17FB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17FD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1800 to i8*) } ]
@.Lt_17F7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1791 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17FB to i8*) } ]
@.Lt_17F3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17F7 to i8*) } ]
@.Lt_17EF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17F1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17F3 to i8*) } ]
@.Lt_17EB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17EF to i8*) } ]
@.Lt_17E7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17E9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17EB to i8*) } ]
@.Lt_17E3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17E5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17E7 to i8*) } ]
@.Lt_17DF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17DD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLD }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17E3 to i8*) } ]
@.Lt_17DA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17DC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17DF to i8*) } ]
@.Lt_17D6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1791 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17DA to i8*) } ]
@.Lt_17D2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17D6 to i8*) } ]
@.Lt_17CE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17D0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17D2 to i8*) } ]
@.Lt_17CA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17CC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17CE to i8*) } ]
@.Lt_17C6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17C8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17CA to i8*) } ]
@.Lt_17C2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17C4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17C6 to i8*) } ]
@.Lt_17BE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17C0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17BC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BNE }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17C2 to i8*) } ]
@.Lt_17B9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17BB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17BE to i8*) } ]
@.Lt_17B5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17B7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1791 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17B9 to i8*) } ]
@.Lt_17B1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17B3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17B5 to i8*) } ]
@.Lt_17AD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17AF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1777 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17B1 to i8*) } ]
@.Lt_17A9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17AB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17AD to i8*) } ]
@.Lt_17A5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17A7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17A3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17A9 to i8*) } ]
@.Lt_17A0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_17A2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17A5 to i8*) } ]
@.Lt_179C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_179E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_179A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_INY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_17A0 to i8*) } ]
@.Lt_1797 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1799 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_179C to i8*) } ]
@.Lt_1793 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1795 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1791 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1797 to i8*) } ]
@.Lt_178E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1790 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1793 to i8*) } ]
@.Lt_178A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_178C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1777 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_178E to i8*) } ]
@.Lt_1786 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1788 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_178A to i8*) } ]
@.Lt_1782 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1784 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1786 to i8*) } ]
@.Lt_177E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1780 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1782 to i8*) } ]
@.Lt_1779 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_177B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1777 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CPY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_177E to i8*) } ]
@.Lt_1774 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1776 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1779 to i8*) } ]
@.Lt_1770 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1772 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1774 to i8*) } ]
@.Lt_176C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_176E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1770 to i8*) } ]
@.Lt_1768 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_176A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_176C to i8*) } ]
@.Lt_1764 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1766 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1768 to i8*) } ]
@.Lt_1760 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1762 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_175E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TSX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1764 to i8*) } ]
@.Lt_175B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_175D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1760 to i8*) } ]
@.Lt_1757 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1759 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1755 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLV }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_175B to i8*) } ]
@.Lt_1752 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1754 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1757 to i8*) } ]
@.Lt_174E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1750 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1454 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1752 to i8*) } ]
@.Lt_174A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_174C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_174E to i8*) } ]
@.Lt_1746 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1748 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_174A to i8*) } ]
@.Lt_1742 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1744 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1746 to i8*) } ]
@.Lt_173E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1740 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1742 to i8*) } ]
@.Lt_173A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_173C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_173E to i8*) } ]
@.Lt_1736 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1738 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1734 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BCS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_173A to i8*) } ]
@.Lt_1731 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1733 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1736 to i8*) } ]
@.Lt_172D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_172F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1731 to i8*) } ]
@.Lt_1729 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_172B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_172D to i8*) } ]
@.Lt_1725 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1727 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1729 to i8*) } ]
@.Lt_1721 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1723 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1725 to i8*) } ]
@.Lt_171D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_171F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_171B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TAX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1721 to i8*) } ]
@.Lt_1718 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_171A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_171D to i8*) } ]
@.Lt_1714 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1716 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1712 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TAY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1718 to i8*) } ]
@.Lt_170F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1711 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1714 to i8*) } ]
@.Lt_170B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_170D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_170F to i8*) } ]
@.Lt_1707 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1709 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_170B to i8*) } ]
@.Lt_1703 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1705 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1707 to i8*) } ]
@.Lt_16FF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1701 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1703 to i8*) } ]
@.Lt_16FB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16FD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16FF to i8*) } ]
@.Lt_16F6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16FB to i8*) } ]
@.Lt_16F1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16F3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LDY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16F6 to i8*) } ]
@.Lt_16EC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16F1 to i8*) } ]
@.Lt_16E8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16EA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16EC to i8*) } ]
@.Lt_16E4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16E8 to i8*) } ]
@.Lt_16E0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16E2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16E4 to i8*) } ]
@.Lt_16DC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16DE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16E0 to i8*) } ]
@.Lt_16D8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16DA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16D6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TXS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16DC to i8*) } ]
@.Lt_16D3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16D5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16D8 to i8*) } ]
@.Lt_16CF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16D1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TYA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16D3 to i8*) } ]
@.Lt_16CA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16CC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16CF to i8*) } ]
@.Lt_16C6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16C8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1681 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1454 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16CA to i8*) } ]
@.Lt_16C2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16C4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16C6 to i8*) } ]
@.Lt_16BE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16C0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1678 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16C2 to i8*) } ]
@.Lt_16BA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16BC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16BE to i8*) } ]
@.Lt_16B6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16B8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16BA to i8*) } ]
@.Lt_16B2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16B4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16B6 to i8*) } ]
@.Lt_16AE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16B0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16AC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BCC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16B2 to i8*) } ]
@.Lt_16A9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16AB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16AE to i8*) } ]
@.Lt_16A5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16A7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1681 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16A9 to i8*) } ]
@.Lt_16A1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_16A3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16A5 to i8*) } ]
@.Lt_169D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_169F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1678 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_16A1 to i8*) } ]
@.Lt_1699 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_169B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_169D to i8*) } ]
@.Lt_1695 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1697 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1693 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_TXA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1699 to i8*) } ]
@.Lt_1690 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1692 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1695 to i8*) } ]
@.Lt_168C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_168E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_168A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_DEY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1690 to i8*) } ]
@.Lt_1687 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1689 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_168C to i8*) } ]
@.Lt_1683 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1685 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1681 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STX }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1687 to i8*) } ]
@.Lt_167E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1680 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1683 to i8*) } ]
@.Lt_167A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_167C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1678 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STY }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_167E to i8*) } ]
@.Lt_1675 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1677 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_167A to i8*) } ]
@.Lt_1671 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1673 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1675 to i8*) } ]
@.Lt_166D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_STA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1671 to i8*) } ]
@.Lt_1668 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_166A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_166D to i8*) } ]
@.Lt_1664 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1666 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1668 to i8*) } ]
@.Lt_1660 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1662 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1664 to i8*) } ]
@.Lt_165C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1660 to i8*) } ]
@.Lt_1658 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_165A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_165C to i8*) } ]
@.Lt_1654 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1656 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1658 to i8*) } ]
@.Lt_1650 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1652 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1654 to i8*) } ]
@.Lt_164C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_164E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1650 to i8*) } ]
@.Lt_1648 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_164A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1646 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SEI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_164C to i8*) } ]
@.Lt_1643 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1645 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1648 to i8*) } ]
@.Lt_163F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1641 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1643 to i8*) } ]
@.Lt_163B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_163D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_163F to i8*) } ]
@.Lt_1637 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1639 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_163B to i8*) } ]
@.Lt_1633 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1635 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1637 to i8*) } ]
@.Lt_162F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1631 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1633 to i8*) } ]
@.Lt_162B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_162D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_162F to i8*) } ]
@.Lt_1627 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1629 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1625 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BVS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_162B to i8*) } ]
@.Lt_1622 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1624 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1627 to i8*) } ]
@.Lt_161E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1620 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1622 to i8*) } ]
@.Lt_161A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_161C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_161E to i8*) } ]
@.Lt_1616 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1618 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_158E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1484 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_161A to i8*) } ]
@.Lt_1612 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1614 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1616 to i8*) } ]
@.Lt_160E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1610 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1612 to i8*) } ]
@.Lt_160A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_160C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_160E to i8*) } ]
@.Lt_1606 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1608 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1604 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_160A to i8*) } ]
@.Lt_1601 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1603 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1606 to i8*) } ]
@.Lt_15FD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1601 to i8*) } ]
@.Lt_15F8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15FA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15FD to i8*) } ]
@.Lt_15F4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15F6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15F8 to i8*) } ]
@.Lt_15F0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15F2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15F4 to i8*) } ]
@.Lt_15EC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15F0 to i8*) } ]
@.Lt_15E8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15EA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ADC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15EC to i8*) } ]
@.Lt_15E3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15E5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15E1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RTS }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15E8 to i8*) } ]
@.Lt_15DE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15E3 to i8*) } ]
@.Lt_15DA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15DC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1574 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15DE to i8*) } ]
@.Lt_15D6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15DA to i8*) } ]
@.Lt_15D2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15D4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15D6 to i8*) } ]
@.Lt_15CE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15D0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15D2 to i8*) } ]
@.Lt_15CA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15CC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15CE to i8*) } ]
@.Lt_15C6 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15C8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15CA to i8*) } ]
@.Lt_15C2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15C4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_15C0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15C6 to i8*) } ]
@.Lt_15BD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15BF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15C2 to i8*) } ]
@.Lt_15B9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15BB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1574 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15BD to i8*) } ]
@.Lt_15B5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15B7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15B9 to i8*) } ]
@.Lt_15B1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15B3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15B5 to i8*) } ]
@.Lt_15AD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15AF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15B1 to i8*) } ]
@.Lt_15A9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15AB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15AD to i8*) } ]
@.Lt_15A5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15A7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15A9 to i8*) } ]
@.Lt_15A1 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_15A3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_159F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BVC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15A5 to i8*) } ]
@.Lt_159C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_159E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_15A1 to i8*) } ]
@.Lt_1598 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_159A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1574 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_159C to i8*) } ]
@.Lt_1594 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1596 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1598 to i8*) } ]
@.Lt_1590 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1592 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_158E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JMP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1594 to i8*) } ]
@.Lt_158B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_158D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1590 to i8*) } ]
@.Lt_1587 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1589 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1574 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSRA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_158B to i8*) } ]
@.Lt_1583 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1585 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1587 to i8*) } ]
@.Lt_157F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1581 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_157D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PHA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1583 to i8*) } ]
@.Lt_157A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_157C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_157F to i8*) } ]
@.Lt_1576 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1578 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1574 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_LSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_157A to i8*) } ]
@.Lt_1571 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1573 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1576 to i8*) } ]
@.Lt_156D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_156F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1571 to i8*) } ]
@.Lt_1569 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_156B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_156D to i8*) } ]
@.Lt_1565 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1567 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1569 to i8*) } ]
@.Lt_1561 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1563 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_EOR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1565 to i8*) } ]
@.Lt_155C = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_155E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_155A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_RTI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1561 to i8*) } ]
@.Lt_1557 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1559 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_155C to i8*) } ]
@.Lt_1553 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1555 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1557 to i8*) } ]
@.Lt_154F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1551 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1553 to i8*) } ]
@.Lt_154B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_154D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_154F to i8*) } ]
@.Lt_1547 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1549 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_154B to i8*) } ]
@.Lt_1543 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1545 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1547 to i8*) } ]
@.Lt_153F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1541 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1543 to i8*) } ]
@.Lt_153B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_153D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1539 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_SEC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_153F to i8*) } ]
@.Lt_1536 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1538 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_153B to i8*) } ]
@.Lt_1532 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1534 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1536 to i8*) } ]
@.Lt_152E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1530 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1532 to i8*) } ]
@.Lt_152A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_152C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_152E to i8*) } ]
@.Lt_1526 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1528 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_152A to i8*) } ]
@.Lt_1522 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1524 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1526 to i8*) } ]
@.Lt_151E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1520 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1522 to i8*) } ]
@.Lt_151A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_151C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1518 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BMI }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_151E to i8*) } ]
@.Lt_1515 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1517 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_151A to i8*) } ]
@.Lt_1511 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1513 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1515 to i8*) } ]
@.Lt_150D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_150F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1511 to i8*) } ]
@.Lt_1509 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_150B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14E5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BIT }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_150D to i8*) } ]
@.Lt_1505 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1507 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1509 to i8*) } ]
@.Lt_1501 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1503 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1505 to i8*) } ]
@.Lt_14FD = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14FF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1501 to i8*) } ]
@.Lt_14F9 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14FB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14F7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PLP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14FD to i8*) } ]
@.Lt_14F4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14F6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14F9 to i8*) } ]
@.Lt_14F0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14F2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14EE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ROL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14F4 to i8*) } ]
@.Lt_14EB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14ED to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14F0 to i8*) } ]
@.Lt_14E7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14E9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14E5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BIT }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14EB to i8*) } ]
@.Lt_14E2 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14E4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14E7 to i8*) } ]
@.Lt_14DE = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14E0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14E2 to i8*) } ]
@.Lt_14DA = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14DC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_AND }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14DE to i8*) } ]
@.Lt_14D5 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14D7 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14D3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_JSR }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14DA to i8*) } ]
@.Lt_14D0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14D2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14D5 to i8*) } ]
@.Lt_14CC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14CE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1468 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14D0 to i8*) } ]
@.Lt_14C8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14CC to i8*) } ]
@.Lt_14C4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14C6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14C8 to i8*) } ]
@.Lt_14C0 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14C2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14C4 to i8*) } ]
@.Lt_14BC = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14BE to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14C0 to i8*) } ]
@.Lt_14B8 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14BA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14BC to i8*) } ]
@.Lt_14B4 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14B6 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_14B2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_CLC }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14B8 to i8*) } ]
@.Lt_14AF = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14B1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14B4 to i8*) } ]
@.Lt_14AB = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14AD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1468 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14AF to i8*) } ]
@.Lt_14A7 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14A9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14AB to i8*) } ]
@.Lt_14A3 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14A5 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14A7 to i8*) } ]
@.Lt_149F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_14A1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_14A3 to i8*) } ]
@.Lt_149B = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_149D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_149F to i8*) } ]
@.Lt_1497 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1499 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_149B to i8*) } ]
@.Lt_1493 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1495 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1491 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BPL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1497 to i8*) } ]
@.Lt_148E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1490 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1493 to i8*) } ]
@.Lt_148A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_148C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1468 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_148E to i8*) } ]
@.Lt_1486 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1488 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_148A to i8*) } ]
@.Lt_1482 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1484 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1486 to i8*) } ]
@.Lt_147E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1480 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_147C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_UNK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1482 to i8*) } ]
@.Lt_147A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1468 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASLA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_147E to i8*) } ]
@.Lt_1476 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1478 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_147A to i8*) } ]
@.Lt_1472 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1474 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1470 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_PHP }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1476 to i8*) } ]
@.Lt_146E = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_146C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_W64 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1472 to i8*) } ]
@.Lt_146A = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1454 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1468 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ASL }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_146E to i8*) } ]
@.Lt_1465 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1467 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_146A to i8*) } ]
@.Lt_1461 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1463 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_145F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_R64 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1465 to i8*) } ]
@.Lt_145D = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_145B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_W32 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1461 to i8*) } ]
@.Lt_1458 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_1456 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_145A to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_R32 }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_145D to i8*) } ]
@.Lt_1451 = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144F to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 2 to i16), i8* bitcast (i8* @Lt_1453 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1454 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_1455 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_ORA }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1458 to i8*) } ]
@.Lt_117F = global [7 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 3 to i16), i8* bitcast (i8* @Lt_144B to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144D to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144E to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 1 to i16), i8* bitcast (i8* @Lt_144C to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -2 to i16), i8* @INS_BRK }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_1451 to i8*) } ]
@.Lt_03CD = global [5 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03CF to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03D0 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03D1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03D2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_117F to i8*) } ]
@.Lt_03C6 = global [5 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03C8 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 6 to i16), i8* bitcast (i8* @Lt_03C9 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03CA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03CB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_03CD to i8*) } ]
@.Lt_03BF = global [5 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03C1 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03C2 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03C3 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03C4 to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_03C6 to i8*) } ]
@.Lt_03B8 = global [5 x %__FB_DATADESC$] [ %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03BA to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03BB to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 7 to i16), i8* bitcast (i8* @Lt_03BC to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 8 to i16), i8* bitcast (i8* @Lt_03BD to i8*) }, %__FB_DATADESC$ { i16 trunc (i64 -1 to i16), i8* bitcast (%__FB_DATADESC$* @.Lt_03BF to i8*) } ]
@llvm.global_ctors = appending global [1 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @fb_ctor__c64dvdzglsl }]

define void @ERROREXIT( %FBSTRING* %MSG.0$ ) nounwind
{

	; paramvar MSG
	%MSG.0 = alloca %FBSTRING*
	store %FBSTRING* %MSG.0$, %FBSTRING** %MSG.0

	; localvar W
	%W.1 = alloca i64

	; localvar H
	%H.2 = alloca i64

	; label .Lt_024C
	br label %.Lt_024C
.Lt_024C:

	; call fb_GfxScreenPtr()
	%vr0 = call i8* @fb_GfxScreenPtr(  )

	; branchbop vr0 == 0
	%vr1 = icmp eq i8* %vr0, 0
	br i1 %vr1, label %.Lt_024F, label %.Lt_0251
.Lt_0251:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr2 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; label .Lt_024F
	br label %.Lt_024F
.Lt_024F:

	; addrof W

	; memclear W
	%vr9 = bitcast i64* %W.1 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 8, i32 1, i1 false )

	; addrof H

	; memclear H
	%vr11 = bitcast i64* %H.2 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr11, i8 0, i32 8, i32 1, i1 false )
	%vr13 = load %FBSTRING*, %FBSTRING** %MSG.0
	%vr12 = bitcast %FBSTRING* %vr13 to %FBSTRING*

	; call fb_PrintString()
	; arg 0
	; arg vr12
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr12, i32 1 )

	; call fb_PrintVoid()
	; arg 0
	; arg 1
	call void @fb_PrintVoid( i32 0, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0250
	%vr19 = bitcast i8* bitcast ([18 x i8]* @Lt_0250 to i8*) to i8*
	; arg 17
	%vr18 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19, i64 17 )

	; call fb_PrintString()
	; arg 0
	; arg vr18
	%vr22 = bitcast %FBSTRING* %vr18 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr22, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; call fb_End()
	; arg 1
	call void @fb_End( i32 1 )

	; label .Lt_024D
	br label %.Lt_024D
.Lt_024D:
	ret void
}

define void @GLSCREEN( i64 %PIXELWIDTH.3$, i64 %PIXELHEIGHT.4$, i64 %COLORBITS.5$, i64 %DEPTHBITS.6$, i8 %FULLSCREEN.7$ ) nounwind
{

	; paramvar PIXELWIDTH
	%PIXELWIDTH.3 = alloca i64
	store i64 %PIXELWIDTH.3$, i64* %PIXELWIDTH.3

	; paramvar PIXELHEIGHT
	%PIXELHEIGHT.4 = alloca i64
	store i64 %PIXELHEIGHT.4$, i64* %PIXELHEIGHT.4

	; paramvar COLORBITS
	%COLORBITS.5 = alloca i64
	store i64 %COLORBITS.5$, i64* %COLORBITS.5

	; paramvar DEPTHBITS
	%DEPTHBITS.6 = alloca i64
	store i64 %DEPTHBITS.6$, i64* %DEPTHBITS.6

	; paramvar FULLSCREEN
	%FULLSCREEN.7 = alloca i8
	store i8 %FULLSCREEN.7$, i8* %FULLSCREEN.7

	; localvar W
	%W.8 = alloca i64

	; localvar H
	%H.9 = alloca i64

	; localvar B
	%B.10 = alloca i64

	; localvar LT_0256
	%LT_0256.11 = alloca i64

	; localvar LT_0257
	%LT_0257.12 = alloca i64

	; localvar LT_0258
	%LT_0258.13 = alloca i64

	; localvar LT_025A
	%LT_025A.14 = alloca i64

	; localvar LT_025F
	%LT_025F.15 = alloca i64

	; localvar LT_0262
	%LT_0262.16 = alloca i64

	; localvar LT_026B
	%LT_026B.17 = alloca i64

	; localvar LT_026C
	%LT_026C.18 = alloca i64

	; localvar LT_026D
	%LT_026D.19 = alloca i64

	; localvar LT_028B
	%LT_028B.20 = alloca i64

	; label .Lt_0252
	br label %.Lt_0252
.Lt_0252:

	; addrof W

	; memclear W
	%vr1 = bitcast i64* %W.8 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof H

	; memclear H
	%vr3 = bitcast i64* %H.9 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; addrof B

	; memclear B
	%vr5 = bitcast i64* %B.10 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; call fb_GfxScreenPtr()
	%vr6 = call i8* @fb_GfxScreenPtr(  )

	; branchbop vr6 == 0
	%vr7 = icmp eq i8* %vr6, 0
	br i1 %vr7, label %.Lt_0255, label %.Lt_02ED
.Lt_02ED:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr8 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; label .Lt_0255
	br label %.Lt_0255
.Lt_0255:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15, i64 0 )

	; store LT_0258 := 0
	store i64 0, i64* %LT_0258.13

	; store LT_0257 := 0
	store i64 0, i64* %LT_0257.12

	; store LT_0256 := 0
	store i64 0, i64* %LT_0256.11

	; addrof B

	; addrof H

	; addrof W

	; call fb_GfxScreenInfo()
	; arg W
	; arg H
	; arg B
	; arg LT_0256
	; arg LT_0257
	; arg LT_0258
	; arg vr14
	call void @fb_GfxScreenInfo( i64* %W.8, i64* %H.9, i64* %B.10, i64* %LT_0256.11, i64* %LT_0257.12, i64* %LT_0258.13, %FBSTRING* %vr14 )

	; branchbop PIXELWIDTH > 0
	%vr21 = load i64, i64* %PIXELWIDTH.3
	%vr20 = icmp sgt i64 %vr21, 0
	br i1 %vr20, label %.Lt_0259, label %.Lt_02EE
.Lt_02EE:

	; bop PIXELHEIGHT <= 0
	%vr23 = load i64, i64* %PIXELHEIGHT.4
	%vr22 = icmp sle i64 %vr23, 0
	%vr24 = sext i1 %vr22 to i64

	; store LT_025A := vr24
	store i64 %vr24, i64* %LT_025A.14

	; goto .Lt_02EF
	br label %.Lt_02EF
.Lt_02F0:

	; label .Lt_0259
	br label %.Lt_0259
.Lt_0259:

	; store LT_025A := 0
	store i64 0, i64* %LT_025A.14

	; label .Lt_02EF
	br label %.Lt_02EF
.Lt_02EF:

	; branchbop LT_025A == 0
	%vr26 = load i64, i64* %LT_025A.14
	%vr25 = icmp eq i64 %vr26, 0
	br i1 %vr25, label %.Lt_025C, label %.Lt_02F1
.Lt_02F1:

	; store PIXELWIDTH := 640
	store i64 640, i64* %PIXELWIDTH.3

	; store PIXELHEIGHT := 350
	store i64 350, i64* %PIXELHEIGHT.4

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; goto .Lt_025B
	br label %.Lt_025B
.Lt_02F2:

	; label .Lt_025C
	br label %.Lt_025C
.Lt_025C:

	; branchbop PIXELWIDTH <= 0
	%vr28 = load i64, i64* %PIXELWIDTH.3
	%vr27 = icmp sle i64 %vr28, 0
	br i1 %vr27, label %.Lt_025E, label %.Lt_02F3
.Lt_02F3:

	; bop PIXELHEIGHT <= 0
	%vr30 = load i64, i64* %PIXELHEIGHT.4
	%vr29 = icmp sle i64 %vr30, 0
	%vr31 = sext i1 %vr29 to i64

	; store LT_025F := vr31
	store i64 %vr31, i64* %LT_025F.15

	; goto .Lt_02F4
	br label %.Lt_02F4
.Lt_02F5:

	; label .Lt_025E
	br label %.Lt_025E
.Lt_025E:

	; store LT_025F := 0
	store i64 0, i64* %LT_025F.15

	; label .Lt_02F4
	br label %.Lt_02F4
.Lt_02F4:

	; branchbop LT_025F == 0
	%vr33 = load i64, i64* %LT_025F.15
	%vr32 = icmp eq i64 %vr33, 0
	br i1 %vr32, label %.Lt_025D, label %.Lt_02F6
.Lt_02F6:

	; conv PIXELWIDTH => vr34
	%vr35 = load i64, i64* %PIXELWIDTH.3
	%vr34 = sitofp i64 %vr35 to double

	; bop vr34 / 16
	%vr36 = fdiv double %vr34, 0x4030000000000000

	; bop vr36 * 9
	%vr37 = fmul double %vr36, 0x4022000000000000

	; conv vr37 => vr38
	%vr39 = call double @llvm.nearbyint.f64(double %vr37)
	%vr38 = fptosi double %vr39 to i64

	; store PIXELHEIGHT := vr38
	store i64 %vr38, i64* %PIXELHEIGHT.4

	; goto .Lt_025B
	br label %.Lt_025B
.Lt_02F7:

	; label .Lt_025D
	br label %.Lt_025D
.Lt_025D:

	; branchbop PIXELWIDTH > 0
	%vr41 = load i64, i64* %PIXELWIDTH.3
	%vr40 = icmp sgt i64 %vr41, 0
	br i1 %vr40, label %.Lt_0261, label %.Lt_02F8
.Lt_02F8:

	; bop PIXELHEIGHT > 0
	%vr43 = load i64, i64* %PIXELHEIGHT.4
	%vr42 = icmp sgt i64 %vr43, 0
	%vr44 = sext i1 %vr42 to i64

	; store LT_0262 := vr44
	store i64 %vr44, i64* %LT_0262.16

	; goto .Lt_02F9
	br label %.Lt_02F9
.Lt_02FA:

	; label .Lt_0261
	br label %.Lt_0261
.Lt_0261:

	; store LT_0262 := 0
	store i64 0, i64* %LT_0262.16

	; label .Lt_02F9
	br label %.Lt_02F9
.Lt_02F9:

	; branchbop LT_0262 == 0
	%vr46 = load i64, i64* %LT_0262.16
	%vr45 = icmp eq i64 %vr46, 0
	br i1 %vr45, label %.Lt_0260, label %.Lt_02FB
.Lt_02FB:

	; conv PIXELHEIGHT => vr47
	%vr48 = load i64, i64* %PIXELHEIGHT.4
	%vr47 = sitofp i64 %vr48 to double

	; bop vr47 / 9
	%vr49 = fdiv double %vr47, 0x4022000000000000

	; bop vr49 * 16
	%vr50 = fmul double %vr49, 0x4030000000000000

	; conv vr50 => vr51
	%vr52 = call double @llvm.nearbyint.f64(double %vr50)
	%vr51 = fptosi double %vr52 to i64

	; store PIXELWIDTH := vr51
	store i64 %vr51, i64* %PIXELWIDTH.3

	; label .Lt_0260
	br label %.Lt_0260
.Lt_0260:

	; label .Lt_025B
	br label %.Lt_025B
.Lt_025B:

	; branchbop COLORBITS >= 16
	%vr54 = load i64, i64* %COLORBITS.5
	%vr53 = icmp sge i64 %vr54, 16
	br i1 %vr53, label %.Lt_0264, label %.Lt_02FC
.Lt_02FC:

	; store COLORBITS := B
	%vr55 = load i64, i64* %B.10
	store i64 %vr55, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_02FD:

	; label .Lt_0264
	br label %.Lt_0264
.Lt_0264:

	; branchbop COLORBITS >= 24
	%vr57 = load i64, i64* %COLORBITS.5
	%vr56 = icmp sge i64 %vr57, 24
	br i1 %vr56, label %.Lt_0265, label %.Lt_02FE
.Lt_02FE:

	; store COLORBITS := 16
	store i64 16, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_02FF:

	; label .Lt_0265
	br label %.Lt_0265
.Lt_0265:

	; branchbop COLORBITS >= 32
	%vr59 = load i64, i64* %COLORBITS.5
	%vr58 = icmp sge i64 %vr59, 32
	br i1 %vr58, label %.Lt_0266, label %.Lt_0300
.Lt_0300:

	; store COLORBITS := 24
	store i64 24, i64* %COLORBITS.5

	; goto .Lt_0263
	br label %.Lt_0263
.Lt_0301:

	; label .Lt_0266
	br label %.Lt_0266
.Lt_0266:

	; store COLORBITS := 32
	store i64 32, i64* %COLORBITS.5

	; label .Lt_0263
	br label %.Lt_0263
.Lt_0263:

	; branchbop DEPTHBITS > 0
	%vr61 = load i64, i64* %DEPTHBITS.6
	%vr60 = icmp sgt i64 %vr61, 0
	br i1 %vr60, label %.Lt_0268, label %.Lt_0302
.Lt_0302:

	; store DEPTHBITS := 0
	store i64 0, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0303:

	; label .Lt_0268
	br label %.Lt_0268
.Lt_0268:

	; branchbop DEPTHBITS >= 16
	%vr63 = load i64, i64* %DEPTHBITS.6
	%vr62 = icmp sge i64 %vr63, 16
	br i1 %vr62, label %.Lt_0269, label %.Lt_0304
.Lt_0304:

	; store DEPTHBITS := 16
	store i64 16, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0305:

	; label .Lt_0269
	br label %.Lt_0269
.Lt_0269:

	; branchbop DEPTHBITS >= 32
	%vr65 = load i64, i64* %DEPTHBITS.6
	%vr64 = icmp sge i64 %vr65, 32
	br i1 %vr64, label %.Lt_026A, label %.Lt_0306
.Lt_0306:

	; store DEPTHBITS := 24
	store i64 24, i64* %DEPTHBITS.6

	; goto .Lt_0267
	br label %.Lt_0267
.Lt_0307:

	; label .Lt_026A
	br label %.Lt_026A
.Lt_026A:

	; store DEPTHBITS := 32
	store i64 32, i64* %DEPTHBITS.6

	; label .Lt_0267
	br label %.Lt_0267
.Lt_0267:

	; store LT_026D := 2147483648
	store i64 2147483648, i64* %LT_026D.19

	; store LT_026C := 2147483648
	store i64 2147483648, i64* %LT_026C.18

	; store LT_026B := 2147483648
	store i64 2147483648, i64* %LT_026B.17

	; addrof DEPTHBITS

	; call fb_GfxControl_i()
	; arg 110
	; arg DEPTHBITS
	; arg LT_026B
	; arg LT_026C
	; arg LT_026D
	call void @fb_GfxControl_i( i32 110, i64* %DEPTHBITS.6, i64* %LT_026B.17, i64* %LT_026C.18, i64* %LT_026D.19 )

	; branchbop FULLSCREEN == 0
	%vr69 = load i8, i8* %FULLSCREEN.7
	%vr68 = icmp eq i8 %vr69, trunc (i64 0 to i8)
	br i1 %vr68, label %.Lt_026F, label %.Lt_0308
.Lt_0308:

	; localvar FOUNDMODE
	%FOUNDMODE.21 = alloca i32

	; localvar MODE
	%MODE.22 = alloca i32

	; bop PIXELWIDTH < 640
	%vr71 = load i64, i64* %PIXELWIDTH.3
	%vr70 = icmp slt i64 %vr71, 640
	%vr72 = sext i1 %vr70 to i64

	; bop PIXELHEIGHT < 480
	%vr74 = load i64, i64* %PIXELHEIGHT.4
	%vr73 = icmp slt i64 %vr74, 480
	%vr75 = sext i1 %vr73 to i64

	; bop vr72 OR vr75
	%vr76 = or i64 %vr72, %vr75

	; branchbop vr76 == 0
	%vr77 = icmp eq i64 %vr76, 0
	br i1 %vr77, label %.Lt_0271, label %.Lt_0309
.Lt_0309:

	; store PIXELWIDTH := 640
	store i64 640, i64* %PIXELWIDTH.3

	; store PIXELHEIGHT := 480
	store i64 480, i64* %PIXELHEIGHT.4

	; label .Lt_0271
	br label %.Lt_0271
.Lt_0271:

	; label .Lt_0270
	br label %.Lt_0270
.Lt_0270:

	; addrof FOUNDMODE

	; memclear FOUNDMODE
	%vr79 = bitcast i32* %FOUNDMODE.21 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr79, i8 0, i32 4, i32 1, i1 false )

	; conv COLORBITS => vr80
	%vr81 = load i64, i64* %COLORBITS.5
	%vr80 = trunc i64 %vr81 to i32

	; call fb_GfxScreenList()
	; arg vr80
	%vr82 = call i32 @fb_GfxScreenList( i32 %vr80 )

	; store MODE := vr82
	store i32 %vr82, i32* %MODE.22

	; conv MODE => vr83
	%vr84 = load i32, i32* %MODE.22
	%vr83 = sext i32 %vr84 to i64

	; branchbop vr83 == 0
	%vr85 = icmp eq i64 %vr83, 0
	br i1 %vr85, label %.Lt_0273, label %.Lt_030A
.Lt_030A:

	; localvar ERRORVALUE
	%ERRORVALUE.23 = alloca i64

	; localvar ERRORWIDTH
	%ERRORWIDTH.24 = alloca i64

	; localvar ERRORHEIGHT
	%ERRORHEIGHT.25 = alloca i64

	; store ERRORVALUE := 1073741824
	store i64 1073741824, i64* %ERRORVALUE.23

	; addrof ERRORWIDTH

	; memclear ERRORWIDTH
	%vr87 = bitcast i64* %ERRORWIDTH.24 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr87, i8 0, i32 8, i32 1, i1 false )

	; addrof ERRORHEIGHT

	; memclear ERRORHEIGHT
	%vr89 = bitcast i64* %ERRORHEIGHT.25 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr89, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0274
	br label %.Lt_0274
.Lt_0274:

	; conv MODE => vr90
	%vr91 = load i32, i32* %MODE.22
	%vr90 = sext i32 %vr91 to i64

	; branchbop vr90 == 0
	%vr92 = icmp eq i64 %vr90, 0
	br i1 %vr92, label %.Lt_0275, label %.Lt_030B
.Lt_030B:

	; conv MODE => vr93
	%vr94 = load i32, i32* %MODE.22
	%vr93 = zext i32 %vr94 to i64

	; bop vr93 AND 4294901760
	%vr95 = and i64 %vr93, 4294901760

	; bop vr95 SHR 16
	%vr97 = bitcast i64 16 to i64
	%vr96 = ashr i64 %vr95, %vr97
	%vr99 = load i64, i64* %PIXELWIDTH.3
	%vr98 = bitcast i64 %vr99 to i64

	; bop vr96 - vr98
	%vr100 = sub i64 %vr96, %vr98
	%vr101 = bitcast i64 %vr100 to i64

	; call llabs()
	; arg vr101
	%vr102 = call i64 @llabs( i64 %vr101 )

	; store ERRORWIDTH := vr102
	store i64 %vr102, i64* %ERRORWIDTH.24

	; conv MODE => vr105
	%vr106 = load i32, i32* %MODE.22
	%vr105 = zext i32 %vr106 to i64

	; bop vr105 AND 65535
	%vr107 = and i64 %vr105, 65535
	%vr109 = load i64, i64* %PIXELHEIGHT.4
	%vr108 = bitcast i64 %vr109 to i64

	; bop vr107 - vr108
	%vr110 = sub i64 %vr107, %vr108
	%vr111 = bitcast i64 %vr110 to i64

	; call llabs()
	; arg vr111
	%vr112 = call i64 @llabs( i64 %vr111 )

	; store ERRORHEIGHT := vr112
	store i64 %vr112, i64* %ERRORHEIGHT.25

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr116 = load i64, i64* %ERRORWIDTH.24
	%vr117 = load i64, i64* %ERRORHEIGHT.25
	%vr115 = add i64 %vr116, %vr117

	; branchbop vr115 >= ERRORVALUE
	%vr119 = load i64, i64* %ERRORVALUE.23
	%vr118 = icmp sge i64 %vr115, %vr119
	br i1 %vr118, label %.Lt_0277, label %.Lt_030C
.Lt_030C:

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr121 = load i64, i64* %ERRORWIDTH.24
	%vr122 = load i64, i64* %ERRORHEIGHT.25
	%vr120 = add i64 %vr121, %vr122

	; store ERRORVALUE := vr120
	store i64 %vr120, i64* %ERRORVALUE.23

	; store FOUNDMODE := MODE
	%vr123 = load i32, i32* %MODE.22
	store i32 %vr123, i32* %FOUNDMODE.21

	; label .Lt_0277
	br label %.Lt_0277
.Lt_0277:

	; label .Lt_0276
	br label %.Lt_0276
.Lt_0276:

	; call fb_GfxScreenList()
	; arg 0
	%vr124 = call i32 @fb_GfxScreenList( i32 0 )

	; store MODE := vr124
	store i32 %vr124, i32* %MODE.22

	; goto .Lt_0274
	br label %.Lt_0274
.Lt_030D:

	; label .Lt_0275
	br label %.Lt_0275
.Lt_0275:

	; goto .Lt_0272
	br label %.Lt_0272
.Lt_030E:

	; label .Lt_0273
	br label %.Lt_0273
.Lt_0273:

	; localvar BITS
	%BITS.26 = alloca [2 x i32]

	; localvar Lt_0278
	%FBARRAY1 = type { i32*, i32*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_0278.27 = alloca %FBARRAY1

	; addrof BITS

	; memclear BITS
	%vr127 = bitcast i32* %BITS.26 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr127, i8 0, i32 8, i32 1, i1 false )

	; addrof BITS

	; store Lt_0278 := BITS
	%vr129 = bitcast %FBARRAY1* %Lt_0278.27 to i32**
	store i32* %BITS.26, i32** %vr129

	; addrof BITS

	; store Lt_0278+8 := BITS
	%vr131 = bitcast %FBARRAY1* %Lt_0278.27 to i32**
	%vr132 = ptrtoint i32** %vr131 to i64
	%vr133 = add i64 %vr132, 8
	%vr134 = inttoptr i64 %vr133 to i32**
	store i32* %BITS.26, i32** %vr134

	; store Lt_0278+16 := 8
	%vr135 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr136 = ptrtoint i64* %vr135 to i64
	%vr137 = add i64 %vr136, 16
	%vr138 = inttoptr i64 %vr137 to i64*
	store i64 8, i64* %vr138

	; store Lt_0278+24 := 4
	%vr139 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr140 = ptrtoint i64* %vr139 to i64
	%vr141 = add i64 %vr140, 24
	%vr142 = inttoptr i64 %vr141 to i64*
	store i64 4, i64* %vr142

	; store Lt_0278+32 := 1
	%vr143 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr144 = ptrtoint i64* %vr143 to i64
	%vr145 = add i64 %vr144, 32
	%vr146 = inttoptr i64 %vr145 to i64*
	store i64 1, i64* %vr146

	; store Lt_0278+40 := 2
	%vr147 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr148 = ptrtoint i64* %vr147 to i64
	%vr149 = add i64 %vr148, 40
	%vr150 = inttoptr i64 %vr149 to i64*
	store i64 2, i64* %vr150

	; store Lt_0278+48 := 0
	%vr151 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr152 = ptrtoint i64* %vr151 to i64
	%vr153 = add i64 %vr152, 48
	%vr154 = inttoptr i64 %vr153 to i64*
	store i64 0, i64* %vr154

	; store Lt_0278+56 := 1
	%vr155 = bitcast %FBARRAY1* %Lt_0278.27 to i64*
	%vr156 = ptrtoint i64* %vr155 to i64
	%vr157 = add i64 %vr156, 56
	%vr158 = inttoptr i64 %vr157 to i64*
	store i64 1, i64* %vr158

	; branchbop COLORBITS <> 16
	%vr160 = load i64, i64* %COLORBITS.5
	%vr159 = icmp ne i64 %vr160, 16
	br i1 %vr159, label %.Lt_027A, label %.Lt_030F
.Lt_030F:

	; store BITS := 32
	store i32 32, i32* %BITS.26

	; store BITS+4 := 24
	%vr161 = ptrtoint i32* %BITS.26 to i64
	%vr162 = add i64 %vr161, 4
	%vr163 = inttoptr i64 %vr162 to i32*
	store i32 24, i32* %vr163

	; goto .Lt_0279
	br label %.Lt_0279
.Lt_0310:

	; label .Lt_027A
	br label %.Lt_027A
.Lt_027A:

	; branchbop COLORBITS <> 24
	%vr165 = load i64, i64* %COLORBITS.5
	%vr164 = icmp ne i64 %vr165, 24
	br i1 %vr164, label %.Lt_027B, label %.Lt_0311
.Lt_0311:

	; store BITS := 32
	store i32 32, i32* %BITS.26

	; store BITS+4 := 16
	%vr166 = ptrtoint i32* %BITS.26 to i64
	%vr167 = add i64 %vr166, 4
	%vr168 = inttoptr i64 %vr167 to i32*
	store i32 16, i32* %vr168

	; goto .Lt_0279
	br label %.Lt_0279
.Lt_0312:

	; label .Lt_027B
	br label %.Lt_027B
.Lt_027B:

	; store BITS := 24
	store i32 24, i32* %BITS.26

	; store BITS+4 := 16
	%vr169 = ptrtoint i32* %BITS.26 to i64
	%vr170 = add i64 %vr169, 4
	%vr171 = inttoptr i64 %vr170 to i32*
	store i32 16, i32* %vr171

	; label .Lt_0279
	br label %.Lt_0279
.Lt_0279:

	; localvar I
	%I.28 = alloca i64

	; store I := 0
	store i64 0, i64* %I.28

	; label .Lt_027F
	br label %.Lt_027F
.Lt_027F:

	; bop I SHL 2
	%vr173 = load i64, i64* %I.28
	%vr172 = shl i64 %vr173, 2

	; conv BITS+vr172 => vr174
	%vr175 = ptrtoint i32* %BITS.26 to i64
	%vr176 = inttoptr i64 %vr175 to i32*
	%vr177 = load i32, i32* %vr176
	%vr174 = sext i32 %vr177 to i64

	; store COLORBITS := vr174
	store i64 %vr174, i64* %COLORBITS.5

	; conv COLORBITS => vr178
	%vr179 = load i64, i64* %COLORBITS.5
	%vr178 = trunc i64 %vr179 to i32

	; call fb_GfxScreenList()
	; arg vr178
	%vr180 = call i32 @fb_GfxScreenList( i32 %vr178 )

	; store MODE := vr180
	store i32 %vr180, i32* %MODE.22

	; conv MODE => vr181
	%vr182 = load i32, i32* %MODE.22
	%vr181 = sext i32 %vr182 to i64

	; branchbop vr181 == 0
	%vr183 = icmp eq i64 %vr181, 0
	br i1 %vr183, label %.Lt_0281, label %.Lt_0313
.Lt_0313:

	; localvar ERRORVALUE
	%ERRORVALUE.29 = alloca i64

	; localvar ERRORWIDTH
	%ERRORWIDTH.30 = alloca i64

	; localvar ERRORHEIGHT
	%ERRORHEIGHT.31 = alloca i64

	; store ERRORVALUE := 1073741824
	store i64 1073741824, i64* %ERRORVALUE.29

	; addrof ERRORWIDTH

	; memclear ERRORWIDTH
	%vr185 = bitcast i64* %ERRORWIDTH.30 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr185, i8 0, i32 8, i32 1, i1 false )

	; addrof ERRORHEIGHT

	; memclear ERRORHEIGHT
	%vr187 = bitcast i64* %ERRORHEIGHT.31 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr187, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0282
	br label %.Lt_0282
.Lt_0282:

	; conv MODE => vr188
	%vr189 = load i32, i32* %MODE.22
	%vr188 = sext i32 %vr189 to i64

	; branchbop vr188 == 0
	%vr190 = icmp eq i64 %vr188, 0
	br i1 %vr190, label %.Lt_0283, label %.Lt_0314
.Lt_0314:

	; conv MODE => vr191
	%vr192 = load i32, i32* %MODE.22
	%vr191 = zext i32 %vr192 to i64

	; bop vr191 AND 4294901760
	%vr193 = and i64 %vr191, 4294901760

	; bop vr193 SHR 16
	%vr195 = bitcast i64 16 to i64
	%vr194 = ashr i64 %vr193, %vr195
	%vr197 = load i64, i64* %PIXELWIDTH.3
	%vr196 = bitcast i64 %vr197 to i64

	; bop vr194 - vr196
	%vr198 = sub i64 %vr194, %vr196
	%vr199 = bitcast i64 %vr198 to i64

	; call llabs()
	; arg vr199
	%vr200 = call i64 @llabs( i64 %vr199 )

	; store ERRORWIDTH := vr200
	store i64 %vr200, i64* %ERRORWIDTH.30

	; conv MODE => vr203
	%vr204 = load i32, i32* %MODE.22
	%vr203 = zext i32 %vr204 to i64

	; bop vr203 AND 65535
	%vr205 = and i64 %vr203, 65535
	%vr207 = load i64, i64* %PIXELHEIGHT.4
	%vr206 = bitcast i64 %vr207 to i64

	; bop vr205 - vr206
	%vr208 = sub i64 %vr205, %vr206
	%vr209 = bitcast i64 %vr208 to i64

	; call llabs()
	; arg vr209
	%vr210 = call i64 @llabs( i64 %vr209 )

	; store ERRORHEIGHT := vr210
	store i64 %vr210, i64* %ERRORHEIGHT.31

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr214 = load i64, i64* %ERRORWIDTH.30
	%vr215 = load i64, i64* %ERRORHEIGHT.31
	%vr213 = add i64 %vr214, %vr215

	; branchbop vr213 >= ERRORVALUE
	%vr217 = load i64, i64* %ERRORVALUE.29
	%vr216 = icmp sge i64 %vr213, %vr217
	br i1 %vr216, label %.Lt_0285, label %.Lt_0315
.Lt_0315:

	; bop ERRORWIDTH + ERRORHEIGHT
	%vr219 = load i64, i64* %ERRORWIDTH.30
	%vr220 = load i64, i64* %ERRORHEIGHT.31
	%vr218 = add i64 %vr219, %vr220

	; store ERRORVALUE := vr218
	store i64 %vr218, i64* %ERRORVALUE.29

	; store FOUNDMODE := MODE
	%vr221 = load i32, i32* %MODE.22
	store i32 %vr221, i32* %FOUNDMODE.21

	; label .Lt_0285
	br label %.Lt_0285
.Lt_0285:

	; label .Lt_0284
	br label %.Lt_0284
.Lt_0284:

	; call fb_GfxScreenList()
	; arg 0
	%vr222 = call i32 @fb_GfxScreenList( i32 0 )

	; store MODE := vr222
	store i32 %vr222, i32* %MODE.22

	; goto .Lt_0282
	br label %.Lt_0282
.Lt_0316:

	; label .Lt_0283
	br label %.Lt_0283
.Lt_0283:

	; label .Lt_0281
	br label %.Lt_0281
.Lt_0281:

	; label .Lt_0280
	br label %.Lt_0280
.Lt_0280:

	; conv FOUNDMODE => vr224
	%vr225 = load i32, i32* %FOUNDMODE.21
	%vr224 = sext i32 %vr225 to i64

	; branchbop vr224 == 0
	%vr226 = icmp eq i64 %vr224, 0
	br i1 %vr226, label %.Lt_0287, label %.Lt_0317
.Lt_0317:

	; goto .Lt_027E
	br label %.Lt_027E
.Lt_0318:

	; label .Lt_0287
	br label %.Lt_0287
.Lt_0287:

	; label .Lt_027D
	br label %.Lt_027D
.Lt_027D:

	; bop I + 1
	%vr228 = load i64, i64* %I.28
	%vr227 = add i64 %vr228, 1

	; store I := vr227
	store i64 %vr227, i64* %I.28

	; label .Lt_027C
	br label %.Lt_027C
.Lt_027C:

	; branchbop I <= 1
	%vr230 = load i64, i64* %I.28
	%vr229 = icmp sle i64 %vr230, 1
	br i1 %vr229, label %.Lt_027F, label %.Lt_0319
.Lt_0319:

	; label .Lt_027E
	br label %.Lt_027E
.Lt_027E:

	; label .Lt_0272
	br label %.Lt_0272
.Lt_0272:

	; conv FOUNDMODE => vr231
	%vr232 = load i32, i32* %FOUNDMODE.21
	%vr231 = sext i32 %vr232 to i64

	; branchbop vr231 == 0
	%vr233 = icmp eq i64 %vr231, 0
	br i1 %vr233, label %.Lt_0289, label %.Lt_031A
.Lt_031A:

	; conv FOUNDMODE => vr234
	%vr235 = load i32, i32* %FOUNDMODE.21
	%vr234 = zext i32 %vr235 to i64

	; bop vr234 AND 4294901760
	%vr236 = and i64 %vr234, 4294901760

	; bop vr236 SHR 16
	%vr238 = bitcast i64 16 to i64
	%vr237 = ashr i64 %vr236, %vr238
	%vr239 = bitcast i64 %vr237 to i64

	; store PIXELWIDTH := vr239
	store i64 %vr239, i64* %PIXELWIDTH.3

	; conv FOUNDMODE => vr240
	%vr241 = load i32, i32* %FOUNDMODE.21
	%vr240 = zext i32 %vr241 to i64

	; bop vr240 AND 65535
	%vr242 = and i64 %vr240, 65535
	%vr243 = bitcast i64 %vr242 to i64

	; store PIXELHEIGHT := vr243
	store i64 %vr243, i64* %PIXELHEIGHT.4

	; goto .Lt_0288
	br label %.Lt_0288
.Lt_031B:

	; label .Lt_0289
	br label %.Lt_0289
.Lt_0289:

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; label .Lt_0288
	br label %.Lt_0288
.Lt_0288:

	; label .Lt_026F
	br label %.Lt_026F
.Lt_026F:

	; label .Lt_026E
	br label %.Lt_026E
.Lt_026E:

	; conv FULLSCREEN => vr244
	%vr245 = load i8, i8* %FULLSCREEN.7
	%vr244 = sext i8 %vr245 to i64

	; branchbop vr244 == 0
	%vr246 = icmp eq i64 %vr244, 0
	br i1 %vr246, label %.Lt_028A, label %.Lt_031C
.Lt_031C:

	; store LT_028B := 1
	store i64 1, i64* %LT_028B.20

	; goto .Lt_031D
	br label %.Lt_031D
.Lt_031E:

	; label .Lt_028A
	br label %.Lt_028A
.Lt_028A:

	; store LT_028B := 0
	store i64 0, i64* %LT_028B.20

	; label .Lt_031D
	br label %.Lt_031D
.Lt_031D:

	; bop LT_028B OR 2
	%vr248 = load i64, i64* %LT_028B.20
	%vr247 = or i64 %vr248, 2

	; conv vr247 => vr249
	%vr249 = trunc i64 %vr247 to i32

	; conv COLORBITS => vr250
	%vr251 = load i64, i64* %COLORBITS.5
	%vr250 = trunc i64 %vr251 to i32

	; conv PIXELHEIGHT => vr252
	%vr253 = load i64, i64* %PIXELHEIGHT.4
	%vr252 = trunc i64 %vr253 to i32

	; conv PIXELWIDTH => vr254
	%vr255 = load i64, i64* %PIXELWIDTH.3
	%vr254 = trunc i64 %vr255 to i32

	; call fb_GfxScreenRes()
	; arg vr254
	; arg vr252
	; arg vr250
	; arg 1
	; arg vr249
	; arg 0
	%vr256 = call i32 @fb_GfxScreenRes( i32 %vr254, i32 %vr252, i32 %vr250, i32 1, i32 %vr249, i32 0 )

	; conv vr256 => vr259
	%vr259 = sext i32 %vr256 to i64

	; branchbop vr259 == 0
	%vr260 = icmp eq i64 %vr259, 0
	br i1 %vr260, label %.Lt_028D, label %.Lt_031F
.Lt_031F:

	; store FULLSCREEN := 0
	store i8 trunc (i64 0 to i8), i8* %FULLSCREEN.7

	; conv B => vr261
	%vr262 = load i64, i64* %B.10
	%vr261 = trunc i64 %vr262 to i32

	; call fb_GfxScreenRes()
	; arg 640
	; arg 350
	; arg vr261
	; arg 1
	; arg 2
	; arg 0
	%vr263 = call i32 @fb_GfxScreenRes( i32 640, i32 350, i32 %vr261, i32 1, i32 2, i32 0 )

	; conv vr263 => vr269
	%vr269 = sext i32 %vr263 to i64

	; branchbop vr269 == 0
	%vr270 = icmp eq i64 %vr269, 0
	br i1 %vr270, label %.Lt_028F, label %.Lt_0320
.Lt_0320:

	; localvar LT_0293
	%LT_0293.32 = alloca %FBSTRING

	; localvar LT_0294
	%LT_0294.33 = alloca %FBSTRING

	; localvar LT_0295
	%LT_0295.34 = alloca %FBSTRING

	; localvar LT_0296
	%LT_0296.35 = alloca %FBSTRING

	; localvar LT_0297
	%LT_0297.36 = alloca %FBSTRING

	; addrof LT_0297

	; memclear LT_0297
	%vr272 = bitcast %FBSTRING* %LT_0297.36 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr272, i8 0, i32 24, i32 1, i1 false )
	%vr273 = bitcast i8* bitcast ([11 x i8]* @Lt_0292 to i8*) to i8*

	; call fb_LongintToStr()
	; arg H
	%vr276 = load i64, i64* %H.9
	%vr275 = call %FBSTRING* @fb_LongintToStr( i64 %vr276 )
	%vr278 = bitcast i8* bitcast ([2 x i8]* @Lt_0291 to i8*) to i8*

	; call fb_LongintToStr()
	; arg W
	%vr281 = load i64, i64* %W.8
	%vr280 = call %FBSTRING* @fb_LongintToStr( i64 %vr281 )
	%vr283 = bitcast i8* bitcast ([11 x i8]* @Lt_0290 to i8*) to i8*

	; addrof LT_0293

	; memclear LT_0293
	%vr285 = bitcast %FBSTRING* %LT_0293.32 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr285, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0293

	; call fb_StrConcat()
	; arg LT_0293
	; arg vr283
	; arg 11
	; arg vr280
	%vr289 = bitcast %FBSTRING* %vr280 to i8*
	; arg -1
	%vr287 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0293.32, i8* %vr283, i64 11, i8* %vr289, i64 -1 )

	; addrof LT_0294

	; memclear LT_0294
	%vr292 = bitcast %FBSTRING* %LT_0294.33 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr292, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0294

	; call fb_StrConcat()
	; arg LT_0294
	; arg vr287
	%vr295 = bitcast %FBSTRING* %vr287 to i8*
	; arg -1
	; arg vr278
	; arg 2
	%vr294 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0294.33, i8* %vr295, i64 -1, i8* %vr278, i64 2 )

	; addrof LT_0295

	; memclear LT_0295
	%vr299 = bitcast %FBSTRING* %LT_0295.34 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr299, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0295

	; call fb_StrConcat()
	; arg LT_0295
	; arg vr294
	%vr302 = bitcast %FBSTRING* %vr294 to i8*
	; arg -1
	; arg vr275
	%vr304 = bitcast %FBSTRING* %vr275 to i8*
	; arg -1
	%vr301 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0295.34, i8* %vr302, i64 -1, i8* %vr304, i64 -1 )

	; addrof LT_0296

	; memclear LT_0296
	%vr307 = bitcast %FBSTRING* %LT_0296.35 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr307, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0296

	; call fb_StrConcat()
	; arg LT_0296
	; arg vr301
	%vr310 = bitcast %FBSTRING* %vr301 to i8*
	; arg -1
	; arg vr273
	; arg 11
	%vr309 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0296.35, i8* %vr310, i64 -1, i8* %vr273, i64 11 )

	; addrof LT_0297
	%vr314 = bitcast %FBSTRING* %LT_0297.36 to i8*

	; call fb_StrAssign()
	; arg vr314
	; arg -1
	; arg vr309
	%vr317 = bitcast %FBSTRING* %vr309 to i8*
	; arg -1
	; arg 0
	%vr315 = call %FBSTRING* @fb_StrAssign( i8* %vr314, i64 -1, i8* %vr317, i64 -1, i32 0 )

	; addrof LT_0297

	; call ERROREXIT()
	; arg LT_0297
	call void @ERROREXIT( %FBSTRING* %LT_0297.36 )

	; addrof LT_0297
	%vr322 = bitcast %FBSTRING* %LT_0297.36 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr322
	call void @fb_StrDelete( %FBSTRING* %vr322 )

	; label .Lt_028F
	br label %.Lt_028F
.Lt_028F:

	; label .Lt_028E
	br label %.Lt_028E
.Lt_028E:

	; label .Lt_028D
	br label %.Lt_028D
.Lt_028D:

	; label .Lt_028C
	br label %.Lt_028C
.Lt_028C:

	; call fb_GfxFlip()
	; arg -1
	; arg -1
	%vr323 = call i32 @fb_GfxFlip( i32 -1, i32 -1 )

	; call fb_GfxGetGLProcAddress()
	; arg Lt_0298
	%vr327 = bitcast i8* bitcast ([15 x i8]* @Lt_0298 to i8*) to i8*
	%vr326 = call i8* @fb_GfxGetGLProcAddress( i8* %vr327 )
	%vr328 = bitcast i8* %vr326 to i32 ( i32 )*

	; store GLCREATESHADER := vr328
	store i32 ( i32 )* %vr328, i32 ( i32 )** @GLCREATESHADER
	%vr330 = load i32 ( i32 )*, i32 ( i32 )** @GLCREATESHADER
	%vr329 = ptrtoint i32 ( i32 )* %vr330 to i64

	; branchbop vr329 <> 0
	%vr331 = icmp ne i64 %vr329, 0
	br i1 %vr331, label %.Lt_029A, label %.Lt_0321
.Lt_0321:

	; localvar LT_029B
	%LT_029B.37 = alloca %FBSTRING

	; addrof LT_029B

	; memclear LT_029B
	%vr333 = bitcast %FBSTRING* %LT_029B.37 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr333, i8 0, i32 24, i32 1, i1 false )
	%vr334 = bitcast i8* bitcast ([15 x i8]* @Lt_0298 to i8*) to i8*

	; addrof LT_029B
	%vr336 = bitcast %FBSTRING* %LT_029B.37 to i8*

	; call fb_StrAssign()
	; arg vr336
	; arg -1
	; arg vr334
	; arg 15
	; arg 0
	%vr337 = call %FBSTRING* @fb_StrAssign( i8* %vr336, i64 -1, i8* %vr334, i64 15, i32 0 )

	; addrof LT_029B

	; call ERROREXIT()
	; arg LT_029B
	call void @ERROREXIT( %FBSTRING* %LT_029B.37 )

	; addrof LT_029B
	%vr343 = bitcast %FBSTRING* %LT_029B.37 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr343
	call void @fb_StrDelete( %FBSTRING* %vr343 )

	; label .Lt_029A
	br label %.Lt_029A
.Lt_029A:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_029C
	%vr345 = bitcast i8* bitcast ([15 x i8]* @Lt_029C to i8*) to i8*
	%vr344 = call i8* @fb_GfxGetGLProcAddress( i8* %vr345 )
	%vr346 = bitcast i8* %vr344 to void ( i32 )*

	; store GLDELETESHADER := vr346
	store void ( i32 )* %vr346, void ( i32 )** @GLDELETESHADER
	%vr348 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	%vr347 = ptrtoint void ( i32 )* %vr348 to i64

	; branchbop vr347 <> 0
	%vr349 = icmp ne i64 %vr347, 0
	br i1 %vr349, label %.Lt_029E, label %.Lt_0322
.Lt_0322:

	; localvar LT_029F
	%LT_029F.38 = alloca %FBSTRING

	; addrof LT_029F

	; memclear LT_029F
	%vr351 = bitcast %FBSTRING* %LT_029F.38 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr351, i8 0, i32 24, i32 1, i1 false )
	%vr352 = bitcast i8* bitcast ([15 x i8]* @Lt_029C to i8*) to i8*

	; addrof LT_029F
	%vr354 = bitcast %FBSTRING* %LT_029F.38 to i8*

	; call fb_StrAssign()
	; arg vr354
	; arg -1
	; arg vr352
	; arg 15
	; arg 0
	%vr355 = call %FBSTRING* @fb_StrAssign( i8* %vr354, i64 -1, i8* %vr352, i64 15, i32 0 )

	; addrof LT_029F

	; call ERROREXIT()
	; arg LT_029F
	call void @ERROREXIT( %FBSTRING* %LT_029F.38 )

	; addrof LT_029F
	%vr361 = bitcast %FBSTRING* %LT_029F.38 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr361
	call void @fb_StrDelete( %FBSTRING* %vr361 )

	; label .Lt_029E
	br label %.Lt_029E
.Lt_029E:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A0
	%vr363 = bitcast i8* bitcast ([15 x i8]* @Lt_02A0 to i8*) to i8*
	%vr362 = call i8* @fb_GfxGetGLProcAddress( i8* %vr363 )
	%vr364 = bitcast i8* %vr362 to void ( i32, i32, i8**, i32* )*

	; store GLSHADERSOURCE := vr364
	store void ( i32, i32, i8**, i32* )* %vr364, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	%vr366 = load void ( i32, i32, i8**, i32* )*, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	%vr365 = ptrtoint void ( i32, i32, i8**, i32* )* %vr366 to i64

	; branchbop vr365 <> 0
	%vr367 = icmp ne i64 %vr365, 0
	br i1 %vr367, label %.Lt_02A2, label %.Lt_0323
.Lt_0323:

	; localvar LT_02A3
	%LT_02A3.39 = alloca %FBSTRING

	; addrof LT_02A3

	; memclear LT_02A3
	%vr369 = bitcast %FBSTRING* %LT_02A3.39 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr369, i8 0, i32 24, i32 1, i1 false )
	%vr370 = bitcast i8* bitcast ([15 x i8]* @Lt_02A0 to i8*) to i8*

	; addrof LT_02A3
	%vr372 = bitcast %FBSTRING* %LT_02A3.39 to i8*

	; call fb_StrAssign()
	; arg vr372
	; arg -1
	; arg vr370
	; arg 15
	; arg 0
	%vr373 = call %FBSTRING* @fb_StrAssign( i8* %vr372, i64 -1, i8* %vr370, i64 15, i32 0 )

	; addrof LT_02A3

	; call ERROREXIT()
	; arg LT_02A3
	call void @ERROREXIT( %FBSTRING* %LT_02A3.39 )

	; addrof LT_02A3
	%vr379 = bitcast %FBSTRING* %LT_02A3.39 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr379
	call void @fb_StrDelete( %FBSTRING* %vr379 )

	; label .Lt_02A2
	br label %.Lt_02A2
.Lt_02A2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A4
	%vr381 = bitcast i8* bitcast ([16 x i8]* @Lt_02A4 to i8*) to i8*
	%vr380 = call i8* @fb_GfxGetGLProcAddress( i8* %vr381 )
	%vr382 = bitcast i8* %vr380 to void ( i32 )*

	; store GLCOMPILESHADER := vr382
	store void ( i32 )* %vr382, void ( i32 )** @GLCOMPILESHADER
	%vr384 = load void ( i32 )*, void ( i32 )** @GLCOMPILESHADER
	%vr383 = ptrtoint void ( i32 )* %vr384 to i64

	; branchbop vr383 <> 0
	%vr385 = icmp ne i64 %vr383, 0
	br i1 %vr385, label %.Lt_02A6, label %.Lt_0324
.Lt_0324:

	; localvar LT_02A7
	%LT_02A7.40 = alloca %FBSTRING

	; addrof LT_02A7

	; memclear LT_02A7
	%vr387 = bitcast %FBSTRING* %LT_02A7.40 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr387, i8 0, i32 24, i32 1, i1 false )
	%vr388 = bitcast i8* bitcast ([16 x i8]* @Lt_02A4 to i8*) to i8*

	; addrof LT_02A7
	%vr390 = bitcast %FBSTRING* %LT_02A7.40 to i8*

	; call fb_StrAssign()
	; arg vr390
	; arg -1
	; arg vr388
	; arg 16
	; arg 0
	%vr391 = call %FBSTRING* @fb_StrAssign( i8* %vr390, i64 -1, i8* %vr388, i64 16, i32 0 )

	; addrof LT_02A7

	; call ERROREXIT()
	; arg LT_02A7
	call void @ERROREXIT( %FBSTRING* %LT_02A7.40 )

	; addrof LT_02A7
	%vr397 = bitcast %FBSTRING* %LT_02A7.40 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr397
	call void @fb_StrDelete( %FBSTRING* %vr397 )

	; label .Lt_02A6
	br label %.Lt_02A6
.Lt_02A6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02A8
	%vr399 = bitcast i8* bitcast ([14 x i8]* @Lt_02A8 to i8*) to i8*
	%vr398 = call i8* @fb_GfxGetGLProcAddress( i8* %vr399 )
	%vr400 = bitcast i8* %vr398 to void ( i32, i32, i32* )*

	; store GLGETSHADERIV := vr400
	store void ( i32, i32, i32* )* %vr400, void ( i32, i32, i32* )** @GLGETSHADERIV
	%vr402 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	%vr401 = ptrtoint void ( i32, i32, i32* )* %vr402 to i64

	; branchbop vr401 <> 0
	%vr403 = icmp ne i64 %vr401, 0
	br i1 %vr403, label %.Lt_02AA, label %.Lt_0325
.Lt_0325:

	; localvar LT_02AB
	%LT_02AB.41 = alloca %FBSTRING

	; addrof LT_02AB

	; memclear LT_02AB
	%vr405 = bitcast %FBSTRING* %LT_02AB.41 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr405, i8 0, i32 24, i32 1, i1 false )
	%vr406 = bitcast i8* bitcast ([14 x i8]* @Lt_02A8 to i8*) to i8*

	; addrof LT_02AB
	%vr408 = bitcast %FBSTRING* %LT_02AB.41 to i8*

	; call fb_StrAssign()
	; arg vr408
	; arg -1
	; arg vr406
	; arg 14
	; arg 0
	%vr409 = call %FBSTRING* @fb_StrAssign( i8* %vr408, i64 -1, i8* %vr406, i64 14, i32 0 )

	; addrof LT_02AB

	; call ERROREXIT()
	; arg LT_02AB
	call void @ERROREXIT( %FBSTRING* %LT_02AB.41 )

	; addrof LT_02AB
	%vr415 = bitcast %FBSTRING* %LT_02AB.41 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr415
	call void @fb_StrDelete( %FBSTRING* %vr415 )

	; label .Lt_02AA
	br label %.Lt_02AA
.Lt_02AA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02AC
	%vr417 = bitcast i8* bitcast ([19 x i8]* @Lt_02AC to i8*) to i8*
	%vr416 = call i8* @fb_GfxGetGLProcAddress( i8* %vr417 )
	%vr418 = bitcast i8* %vr416 to void ( i32, i32, i32*, i8* )*

	; store GLGETSHADERINFOLOG := vr418
	store void ( i32, i32, i32*, i8* )* %vr418, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	%vr420 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	%vr419 = ptrtoint void ( i32, i32, i32*, i8* )* %vr420 to i64

	; branchbop vr419 <> 0
	%vr421 = icmp ne i64 %vr419, 0
	br i1 %vr421, label %.Lt_02AE, label %.Lt_0326
.Lt_0326:

	; localvar LT_02AF
	%LT_02AF.42 = alloca %FBSTRING

	; addrof LT_02AF

	; memclear LT_02AF
	%vr423 = bitcast %FBSTRING* %LT_02AF.42 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr423, i8 0, i32 24, i32 1, i1 false )
	%vr424 = bitcast i8* bitcast ([19 x i8]* @Lt_02AC to i8*) to i8*

	; addrof LT_02AF
	%vr426 = bitcast %FBSTRING* %LT_02AF.42 to i8*

	; call fb_StrAssign()
	; arg vr426
	; arg -1
	; arg vr424
	; arg 19
	; arg 0
	%vr427 = call %FBSTRING* @fb_StrAssign( i8* %vr426, i64 -1, i8* %vr424, i64 19, i32 0 )

	; addrof LT_02AF

	; call ERROREXIT()
	; arg LT_02AF
	call void @ERROREXIT( %FBSTRING* %LT_02AF.42 )

	; addrof LT_02AF
	%vr433 = bitcast %FBSTRING* %LT_02AF.42 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr433
	call void @fb_StrDelete( %FBSTRING* %vr433 )

	; label .Lt_02AE
	br label %.Lt_02AE
.Lt_02AE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B0
	%vr435 = bitcast i8* bitcast ([16 x i8]* @Lt_02B0 to i8*) to i8*
	%vr434 = call i8* @fb_GfxGetGLProcAddress( i8* %vr435 )
	%vr436 = bitcast i8* %vr434 to i32 (  )*

	; store GLCREATEPROGRAM := vr436
	store i32 (  )* %vr436, i32 (  )** @GLCREATEPROGRAM
	%vr438 = load i32 (  )*, i32 (  )** @GLCREATEPROGRAM
	%vr437 = ptrtoint i32 (  )* %vr438 to i64

	; branchbop vr437 <> 0
	%vr439 = icmp ne i64 %vr437, 0
	br i1 %vr439, label %.Lt_02B2, label %.Lt_0327
.Lt_0327:

	; localvar LT_02B3
	%LT_02B3.43 = alloca %FBSTRING

	; addrof LT_02B3

	; memclear LT_02B3
	%vr441 = bitcast %FBSTRING* %LT_02B3.43 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr441, i8 0, i32 24, i32 1, i1 false )
	%vr442 = bitcast i8* bitcast ([16 x i8]* @Lt_02B0 to i8*) to i8*

	; addrof LT_02B3
	%vr444 = bitcast %FBSTRING* %LT_02B3.43 to i8*

	; call fb_StrAssign()
	; arg vr444
	; arg -1
	; arg vr442
	; arg 16
	; arg 0
	%vr445 = call %FBSTRING* @fb_StrAssign( i8* %vr444, i64 -1, i8* %vr442, i64 16, i32 0 )

	; addrof LT_02B3

	; call ERROREXIT()
	; arg LT_02B3
	call void @ERROREXIT( %FBSTRING* %LT_02B3.43 )

	; addrof LT_02B3
	%vr451 = bitcast %FBSTRING* %LT_02B3.43 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr451
	call void @fb_StrDelete( %FBSTRING* %vr451 )

	; label .Lt_02B2
	br label %.Lt_02B2
.Lt_02B2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B4
	%vr453 = bitcast i8* bitcast ([16 x i8]* @Lt_02B4 to i8*) to i8*
	%vr452 = call i8* @fb_GfxGetGLProcAddress( i8* %vr453 )
	%vr454 = bitcast i8* %vr452 to void ( i32 )*

	; store GLDELETEPROGRAM := vr454
	store void ( i32 )* %vr454, void ( i32 )** @GLDELETEPROGRAM
	%vr456 = load void ( i32 )*, void ( i32 )** @GLDELETEPROGRAM
	%vr455 = ptrtoint void ( i32 )* %vr456 to i64

	; branchbop vr455 <> 0
	%vr457 = icmp ne i64 %vr455, 0
	br i1 %vr457, label %.Lt_02B6, label %.Lt_0328
.Lt_0328:

	; localvar LT_02B7
	%LT_02B7.44 = alloca %FBSTRING

	; addrof LT_02B7

	; memclear LT_02B7
	%vr459 = bitcast %FBSTRING* %LT_02B7.44 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr459, i8 0, i32 24, i32 1, i1 false )
	%vr460 = bitcast i8* bitcast ([16 x i8]* @Lt_02B4 to i8*) to i8*

	; addrof LT_02B7
	%vr462 = bitcast %FBSTRING* %LT_02B7.44 to i8*

	; call fb_StrAssign()
	; arg vr462
	; arg -1
	; arg vr460
	; arg 16
	; arg 0
	%vr463 = call %FBSTRING* @fb_StrAssign( i8* %vr462, i64 -1, i8* %vr460, i64 16, i32 0 )

	; addrof LT_02B7

	; call ERROREXIT()
	; arg LT_02B7
	call void @ERROREXIT( %FBSTRING* %LT_02B7.44 )

	; addrof LT_02B7
	%vr469 = bitcast %FBSTRING* %LT_02B7.44 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr469
	call void @fb_StrDelete( %FBSTRING* %vr469 )

	; label .Lt_02B6
	br label %.Lt_02B6
.Lt_02B6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02B8
	%vr471 = bitcast i8* bitcast ([15 x i8]* @Lt_02B8 to i8*) to i8*
	%vr470 = call i8* @fb_GfxGetGLProcAddress( i8* %vr471 )
	%vr472 = bitcast i8* %vr470 to void ( i32, i32 )*

	; store GLATTACHSHADER := vr472
	store void ( i32, i32 )* %vr472, void ( i32, i32 )** @GLATTACHSHADER
	%vr474 = load void ( i32, i32 )*, void ( i32, i32 )** @GLATTACHSHADER
	%vr473 = ptrtoint void ( i32, i32 )* %vr474 to i64

	; branchbop vr473 <> 0
	%vr475 = icmp ne i64 %vr473, 0
	br i1 %vr475, label %.Lt_02BA, label %.Lt_0329
.Lt_0329:

	; localvar LT_02BB
	%LT_02BB.45 = alloca %FBSTRING

	; addrof LT_02BB

	; memclear LT_02BB
	%vr477 = bitcast %FBSTRING* %LT_02BB.45 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr477, i8 0, i32 24, i32 1, i1 false )
	%vr478 = bitcast i8* bitcast ([15 x i8]* @Lt_02B8 to i8*) to i8*

	; addrof LT_02BB
	%vr480 = bitcast %FBSTRING* %LT_02BB.45 to i8*

	; call fb_StrAssign()
	; arg vr480
	; arg -1
	; arg vr478
	; arg 15
	; arg 0
	%vr481 = call %FBSTRING* @fb_StrAssign( i8* %vr480, i64 -1, i8* %vr478, i64 15, i32 0 )

	; addrof LT_02BB

	; call ERROREXIT()
	; arg LT_02BB
	call void @ERROREXIT( %FBSTRING* %LT_02BB.45 )

	; addrof LT_02BB
	%vr487 = bitcast %FBSTRING* %LT_02BB.45 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr487
	call void @fb_StrDelete( %FBSTRING* %vr487 )

	; label .Lt_02BA
	br label %.Lt_02BA
.Lt_02BA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02BC
	%vr489 = bitcast i8* bitcast ([15 x i8]* @Lt_02BC to i8*) to i8*
	%vr488 = call i8* @fb_GfxGetGLProcAddress( i8* %vr489 )
	%vr490 = bitcast i8* %vr488 to void ( i32, i32 )*

	; store GLDETACHSHADER := vr490
	store void ( i32, i32 )* %vr490, void ( i32, i32 )** @GLDETACHSHADER
	%vr492 = load void ( i32, i32 )*, void ( i32, i32 )** @GLDETACHSHADER
	%vr491 = ptrtoint void ( i32, i32 )* %vr492 to i64

	; branchbop vr491 <> 0
	%vr493 = icmp ne i64 %vr491, 0
	br i1 %vr493, label %.Lt_02BE, label %.Lt_032A
.Lt_032A:

	; localvar LT_02BF
	%LT_02BF.46 = alloca %FBSTRING

	; addrof LT_02BF

	; memclear LT_02BF
	%vr495 = bitcast %FBSTRING* %LT_02BF.46 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr495, i8 0, i32 24, i32 1, i1 false )
	%vr496 = bitcast i8* bitcast ([15 x i8]* @Lt_02BC to i8*) to i8*

	; addrof LT_02BF
	%vr498 = bitcast %FBSTRING* %LT_02BF.46 to i8*

	; call fb_StrAssign()
	; arg vr498
	; arg -1
	; arg vr496
	; arg 15
	; arg 0
	%vr499 = call %FBSTRING* @fb_StrAssign( i8* %vr498, i64 -1, i8* %vr496, i64 15, i32 0 )

	; addrof LT_02BF

	; call ERROREXIT()
	; arg LT_02BF
	call void @ERROREXIT( %FBSTRING* %LT_02BF.46 )

	; addrof LT_02BF
	%vr505 = bitcast %FBSTRING* %LT_02BF.46 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr505
	call void @fb_StrDelete( %FBSTRING* %vr505 )

	; label .Lt_02BE
	br label %.Lt_02BE
.Lt_02BE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C0
	%vr507 = bitcast i8* bitcast ([14 x i8]* @Lt_02C0 to i8*) to i8*
	%vr506 = call i8* @fb_GfxGetGLProcAddress( i8* %vr507 )
	%vr508 = bitcast i8* %vr506 to void ( i32 )*

	; store GLLINKPROGRAM := vr508
	store void ( i32 )* %vr508, void ( i32 )** @GLLINKPROGRAM
	%vr510 = load void ( i32 )*, void ( i32 )** @GLLINKPROGRAM
	%vr509 = ptrtoint void ( i32 )* %vr510 to i64

	; branchbop vr509 <> 0
	%vr511 = icmp ne i64 %vr509, 0
	br i1 %vr511, label %.Lt_02C2, label %.Lt_032B
.Lt_032B:

	; localvar LT_02C3
	%LT_02C3.47 = alloca %FBSTRING

	; addrof LT_02C3

	; memclear LT_02C3
	%vr513 = bitcast %FBSTRING* %LT_02C3.47 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr513, i8 0, i32 24, i32 1, i1 false )
	%vr514 = bitcast i8* bitcast ([14 x i8]* @Lt_02C0 to i8*) to i8*

	; addrof LT_02C3
	%vr516 = bitcast %FBSTRING* %LT_02C3.47 to i8*

	; call fb_StrAssign()
	; arg vr516
	; arg -1
	; arg vr514
	; arg 14
	; arg 0
	%vr517 = call %FBSTRING* @fb_StrAssign( i8* %vr516, i64 -1, i8* %vr514, i64 14, i32 0 )

	; addrof LT_02C3

	; call ERROREXIT()
	; arg LT_02C3
	call void @ERROREXIT( %FBSTRING* %LT_02C3.47 )

	; addrof LT_02C3
	%vr523 = bitcast %FBSTRING* %LT_02C3.47 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr523
	call void @fb_StrDelete( %FBSTRING* %vr523 )

	; label .Lt_02C2
	br label %.Lt_02C2
.Lt_02C2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C4
	%vr525 = bitcast i8* bitcast ([15 x i8]* @Lt_02C4 to i8*) to i8*
	%vr524 = call i8* @fb_GfxGetGLProcAddress( i8* %vr525 )
	%vr526 = bitcast i8* %vr524 to void ( i32, i32, i32* )*

	; store GLGETPROGRAMIV := vr526
	store void ( i32, i32, i32* )* %vr526, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	%vr528 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	%vr527 = ptrtoint void ( i32, i32, i32* )* %vr528 to i64

	; branchbop vr527 <> 0
	%vr529 = icmp ne i64 %vr527, 0
	br i1 %vr529, label %.Lt_02C6, label %.Lt_032C
.Lt_032C:

	; localvar LT_02C7
	%LT_02C7.48 = alloca %FBSTRING

	; addrof LT_02C7

	; memclear LT_02C7
	%vr531 = bitcast %FBSTRING* %LT_02C7.48 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr531, i8 0, i32 24, i32 1, i1 false )
	%vr532 = bitcast i8* bitcast ([15 x i8]* @Lt_02C4 to i8*) to i8*

	; addrof LT_02C7
	%vr534 = bitcast %FBSTRING* %LT_02C7.48 to i8*

	; call fb_StrAssign()
	; arg vr534
	; arg -1
	; arg vr532
	; arg 15
	; arg 0
	%vr535 = call %FBSTRING* @fb_StrAssign( i8* %vr534, i64 -1, i8* %vr532, i64 15, i32 0 )

	; addrof LT_02C7

	; call ERROREXIT()
	; arg LT_02C7
	call void @ERROREXIT( %FBSTRING* %LT_02C7.48 )

	; addrof LT_02C7
	%vr541 = bitcast %FBSTRING* %LT_02C7.48 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr541
	call void @fb_StrDelete( %FBSTRING* %vr541 )

	; label .Lt_02C6
	br label %.Lt_02C6
.Lt_02C6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02C8
	%vr543 = bitcast i8* bitcast ([20 x i8]* @Lt_02C8 to i8*) to i8*
	%vr542 = call i8* @fb_GfxGetGLProcAddress( i8* %vr543 )
	%vr544 = bitcast i8* %vr542 to void ( i32, i32, i32*, i8* )*

	; store GLGETPROGRAMINFOLOG := vr544
	store void ( i32, i32, i32*, i8* )* %vr544, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	%vr546 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	%vr545 = ptrtoint void ( i32, i32, i32*, i8* )* %vr546 to i64

	; branchbop vr545 <> 0
	%vr547 = icmp ne i64 %vr545, 0
	br i1 %vr547, label %.Lt_02CA, label %.Lt_032D
.Lt_032D:

	; localvar LT_02CB
	%LT_02CB.49 = alloca %FBSTRING

	; addrof LT_02CB

	; memclear LT_02CB
	%vr549 = bitcast %FBSTRING* %LT_02CB.49 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr549, i8 0, i32 24, i32 1, i1 false )
	%vr550 = bitcast i8* bitcast ([20 x i8]* @Lt_02C8 to i8*) to i8*

	; addrof LT_02CB
	%vr552 = bitcast %FBSTRING* %LT_02CB.49 to i8*

	; call fb_StrAssign()
	; arg vr552
	; arg -1
	; arg vr550
	; arg 20
	; arg 0
	%vr553 = call %FBSTRING* @fb_StrAssign( i8* %vr552, i64 -1, i8* %vr550, i64 20, i32 0 )

	; addrof LT_02CB

	; call ERROREXIT()
	; arg LT_02CB
	call void @ERROREXIT( %FBSTRING* %LT_02CB.49 )

	; addrof LT_02CB
	%vr559 = bitcast %FBSTRING* %LT_02CB.49 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr559
	call void @fb_StrDelete( %FBSTRING* %vr559 )

	; label .Lt_02CA
	br label %.Lt_02CA
.Lt_02CA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02CC
	%vr561 = bitcast i8* bitcast ([13 x i8]* @Lt_02CC to i8*) to i8*
	%vr560 = call i8* @fb_GfxGetGLProcAddress( i8* %vr561 )
	%vr562 = bitcast i8* %vr560 to void ( i32 )*

	; store GLUSEPROGRAM := vr562
	store void ( i32 )* %vr562, void ( i32 )** @GLUSEPROGRAM
	%vr564 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	%vr563 = ptrtoint void ( i32 )* %vr564 to i64

	; branchbop vr563 <> 0
	%vr565 = icmp ne i64 %vr563, 0
	br i1 %vr565, label %.Lt_02CE, label %.Lt_032E
.Lt_032E:

	; localvar LT_02CF
	%LT_02CF.50 = alloca %FBSTRING

	; addrof LT_02CF

	; memclear LT_02CF
	%vr567 = bitcast %FBSTRING* %LT_02CF.50 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr567, i8 0, i32 24, i32 1, i1 false )
	%vr568 = bitcast i8* bitcast ([13 x i8]* @Lt_02CC to i8*) to i8*

	; addrof LT_02CF
	%vr570 = bitcast %FBSTRING* %LT_02CF.50 to i8*

	; call fb_StrAssign()
	; arg vr570
	; arg -1
	; arg vr568
	; arg 13
	; arg 0
	%vr571 = call %FBSTRING* @fb_StrAssign( i8* %vr570, i64 -1, i8* %vr568, i64 13, i32 0 )

	; addrof LT_02CF

	; call ERROREXIT()
	; arg LT_02CF
	call void @ERROREXIT( %FBSTRING* %LT_02CF.50 )

	; addrof LT_02CF
	%vr577 = bitcast %FBSTRING* %LT_02CF.50 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr577
	call void @fb_StrDelete( %FBSTRING* %vr577 )

	; label .Lt_02CE
	br label %.Lt_02CE
.Lt_02CE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D0
	%vr579 = bitcast i8* bitcast ([21 x i8]* @Lt_02D0 to i8*) to i8*
	%vr578 = call i8* @fb_GfxGetGLProcAddress( i8* %vr579 )
	%vr580 = bitcast i8* %vr578 to i32 ( i32, i8* )*

	; store GLGETUNIFORMLOCATION := vr580
	store i32 ( i32, i8* )* %vr580, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	%vr582 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	%vr581 = ptrtoint i32 ( i32, i8* )* %vr582 to i64

	; branchbop vr581 <> 0
	%vr583 = icmp ne i64 %vr581, 0
	br i1 %vr583, label %.Lt_02D2, label %.Lt_032F
.Lt_032F:

	; localvar LT_02D3
	%LT_02D3.51 = alloca %FBSTRING

	; addrof LT_02D3

	; memclear LT_02D3
	%vr585 = bitcast %FBSTRING* %LT_02D3.51 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr585, i8 0, i32 24, i32 1, i1 false )
	%vr586 = bitcast i8* bitcast ([21 x i8]* @Lt_02D0 to i8*) to i8*

	; addrof LT_02D3
	%vr588 = bitcast %FBSTRING* %LT_02D3.51 to i8*

	; call fb_StrAssign()
	; arg vr588
	; arg -1
	; arg vr586
	; arg 21
	; arg 0
	%vr589 = call %FBSTRING* @fb_StrAssign( i8* %vr588, i64 -1, i8* %vr586, i64 21, i32 0 )

	; addrof LT_02D3

	; call ERROREXIT()
	; arg LT_02D3
	call void @ERROREXIT( %FBSTRING* %LT_02D3.51 )

	; addrof LT_02D3
	%vr595 = bitcast %FBSTRING* %LT_02D3.51 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr595
	call void @fb_StrDelete( %FBSTRING* %vr595 )

	; label .Lt_02D2
	br label %.Lt_02D2
.Lt_02D2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D4
	%vr597 = bitcast i8* bitcast ([12 x i8]* @Lt_02D4 to i8*) to i8*
	%vr596 = call i8* @fb_GfxGetGLProcAddress( i8* %vr597 )
	%vr598 = bitcast i8* %vr596 to void ( i32, i32 )*

	; store GLUNIFORM1I := vr598
	store void ( i32, i32 )* %vr598, void ( i32, i32 )** @GLUNIFORM1I
	%vr600 = load void ( i32, i32 )*, void ( i32, i32 )** @GLUNIFORM1I
	%vr599 = ptrtoint void ( i32, i32 )* %vr600 to i64

	; branchbop vr599 <> 0
	%vr601 = icmp ne i64 %vr599, 0
	br i1 %vr601, label %.Lt_02D6, label %.Lt_0330
.Lt_0330:

	; localvar LT_02D7
	%LT_02D7.52 = alloca %FBSTRING

	; addrof LT_02D7

	; memclear LT_02D7
	%vr603 = bitcast %FBSTRING* %LT_02D7.52 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr603, i8 0, i32 24, i32 1, i1 false )
	%vr604 = bitcast i8* bitcast ([12 x i8]* @Lt_02D4 to i8*) to i8*

	; addrof LT_02D7
	%vr606 = bitcast %FBSTRING* %LT_02D7.52 to i8*

	; call fb_StrAssign()
	; arg vr606
	; arg -1
	; arg vr604
	; arg 12
	; arg 0
	%vr607 = call %FBSTRING* @fb_StrAssign( i8* %vr606, i64 -1, i8* %vr604, i64 12, i32 0 )

	; addrof LT_02D7

	; call ERROREXIT()
	; arg LT_02D7
	call void @ERROREXIT( %FBSTRING* %LT_02D7.52 )

	; addrof LT_02D7
	%vr613 = bitcast %FBSTRING* %LT_02D7.52 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr613
	call void @fb_StrDelete( %FBSTRING* %vr613 )

	; label .Lt_02D6
	br label %.Lt_02D6
.Lt_02D6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02D8
	%vr615 = bitcast i8* bitcast ([12 x i8]* @Lt_02D8 to i8*) to i8*
	%vr614 = call i8* @fb_GfxGetGLProcAddress( i8* %vr615 )
	%vr616 = bitcast i8* %vr614 to void ( i32, float )*

	; store GLUNIFORM1F := vr616
	store void ( i32, float )* %vr616, void ( i32, float )** @GLUNIFORM1F
	%vr618 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	%vr617 = ptrtoint void ( i32, float )* %vr618 to i64

	; branchbop vr617 <> 0
	%vr619 = icmp ne i64 %vr617, 0
	br i1 %vr619, label %.Lt_02DA, label %.Lt_0331
.Lt_0331:

	; localvar LT_02DB
	%LT_02DB.53 = alloca %FBSTRING

	; addrof LT_02DB

	; memclear LT_02DB
	%vr621 = bitcast %FBSTRING* %LT_02DB.53 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr621, i8 0, i32 24, i32 1, i1 false )
	%vr622 = bitcast i8* bitcast ([12 x i8]* @Lt_02D8 to i8*) to i8*

	; addrof LT_02DB
	%vr624 = bitcast %FBSTRING* %LT_02DB.53 to i8*

	; call fb_StrAssign()
	; arg vr624
	; arg -1
	; arg vr622
	; arg 12
	; arg 0
	%vr625 = call %FBSTRING* @fb_StrAssign( i8* %vr624, i64 -1, i8* %vr622, i64 12, i32 0 )

	; addrof LT_02DB

	; call ERROREXIT()
	; arg LT_02DB
	call void @ERROREXIT( %FBSTRING* %LT_02DB.53 )

	; addrof LT_02DB
	%vr631 = bitcast %FBSTRING* %LT_02DB.53 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr631
	call void @fb_StrDelete( %FBSTRING* %vr631 )

	; label .Lt_02DA
	br label %.Lt_02DA
.Lt_02DA:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02DC
	%vr633 = bitcast i8* bitcast ([12 x i8]* @Lt_02DC to i8*) to i8*
	%vr632 = call i8* @fb_GfxGetGLProcAddress( i8* %vr633 )
	%vr634 = bitcast i8* %vr632 to void ( i32, float, float, float )*

	; store GLUNIFORM3F := vr634
	store void ( i32, float, float, float )* %vr634, void ( i32, float, float, float )** @GLUNIFORM3F
	%vr636 = load void ( i32, float, float, float )*, void ( i32, float, float, float )** @GLUNIFORM3F
	%vr635 = ptrtoint void ( i32, float, float, float )* %vr636 to i64

	; branchbop vr635 <> 0
	%vr637 = icmp ne i64 %vr635, 0
	br i1 %vr637, label %.Lt_02DE, label %.Lt_0332
.Lt_0332:

	; localvar LT_02DF
	%LT_02DF.54 = alloca %FBSTRING

	; addrof LT_02DF

	; memclear LT_02DF
	%vr639 = bitcast %FBSTRING* %LT_02DF.54 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr639, i8 0, i32 24, i32 1, i1 false )
	%vr640 = bitcast i8* bitcast ([12 x i8]* @Lt_02DC to i8*) to i8*

	; addrof LT_02DF
	%vr642 = bitcast %FBSTRING* %LT_02DF.54 to i8*

	; call fb_StrAssign()
	; arg vr642
	; arg -1
	; arg vr640
	; arg 12
	; arg 0
	%vr643 = call %FBSTRING* @fb_StrAssign( i8* %vr642, i64 -1, i8* %vr640, i64 12, i32 0 )

	; addrof LT_02DF

	; call ERROREXIT()
	; arg LT_02DF
	call void @ERROREXIT( %FBSTRING* %LT_02DF.54 )

	; addrof LT_02DF
	%vr649 = bitcast %FBSTRING* %LT_02DF.54 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr649
	call void @fb_StrDelete( %FBSTRING* %vr649 )

	; label .Lt_02DE
	br label %.Lt_02DE
.Lt_02DE:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E0
	%vr651 = bitcast i8* bitcast ([13 x i8]* @Lt_02E0 to i8*) to i8*
	%vr650 = call i8* @fb_GfxGetGLProcAddress( i8* %vr651 )
	%vr652 = bitcast i8* %vr650 to void ( i32, i32, float* )*

	; store GLUNIFORM3FV := vr652
	store void ( i32, i32, float* )* %vr652, void ( i32, i32, float* )** @GLUNIFORM3FV
	%vr654 = load void ( i32, i32, float* )*, void ( i32, i32, float* )** @GLUNIFORM3FV
	%vr653 = ptrtoint void ( i32, i32, float* )* %vr654 to i64

	; branchbop vr653 <> 0
	%vr655 = icmp ne i64 %vr653, 0
	br i1 %vr655, label %.Lt_02E2, label %.Lt_0333
.Lt_0333:

	; localvar LT_02E3
	%LT_02E3.55 = alloca %FBSTRING

	; addrof LT_02E3

	; memclear LT_02E3
	%vr657 = bitcast %FBSTRING* %LT_02E3.55 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr657, i8 0, i32 24, i32 1, i1 false )
	%vr658 = bitcast i8* bitcast ([13 x i8]* @Lt_02E0 to i8*) to i8*

	; addrof LT_02E3
	%vr660 = bitcast %FBSTRING* %LT_02E3.55 to i8*

	; call fb_StrAssign()
	; arg vr660
	; arg -1
	; arg vr658
	; arg 13
	; arg 0
	%vr661 = call %FBSTRING* @fb_StrAssign( i8* %vr660, i64 -1, i8* %vr658, i64 13, i32 0 )

	; addrof LT_02E3

	; call ERROREXIT()
	; arg LT_02E3
	call void @ERROREXIT( %FBSTRING* %LT_02E3.55 )

	; addrof LT_02E3
	%vr667 = bitcast %FBSTRING* %LT_02E3.55 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr667
	call void @fb_StrDelete( %FBSTRING* %vr667 )

	; label .Lt_02E2
	br label %.Lt_02E2
.Lt_02E2:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E4
	%vr669 = bitcast i8* bitcast ([12 x i8]* @Lt_02E4 to i8*) to i8*
	%vr668 = call i8* @fb_GfxGetGLProcAddress( i8* %vr669 )
	%vr670 = bitcast i8* %vr668 to void ( i32, float, float, float, float )*

	; store GLUNIFORM4F := vr670
	store void ( i32, float, float, float, float )* %vr670, void ( i32, float, float, float, float )** @GLUNIFORM4F
	%vr672 = load void ( i32, float, float, float, float )*, void ( i32, float, float, float, float )** @GLUNIFORM4F
	%vr671 = ptrtoint void ( i32, float, float, float, float )* %vr672 to i64

	; branchbop vr671 <> 0
	%vr673 = icmp ne i64 %vr671, 0
	br i1 %vr673, label %.Lt_02E6, label %.Lt_0334
.Lt_0334:

	; localvar LT_02E7
	%LT_02E7.56 = alloca %FBSTRING

	; addrof LT_02E7

	; memclear LT_02E7
	%vr675 = bitcast %FBSTRING* %LT_02E7.56 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr675, i8 0, i32 24, i32 1, i1 false )
	%vr676 = bitcast i8* bitcast ([12 x i8]* @Lt_02E4 to i8*) to i8*

	; addrof LT_02E7
	%vr678 = bitcast %FBSTRING* %LT_02E7.56 to i8*

	; call fb_StrAssign()
	; arg vr678
	; arg -1
	; arg vr676
	; arg 12
	; arg 0
	%vr679 = call %FBSTRING* @fb_StrAssign( i8* %vr678, i64 -1, i8* %vr676, i64 12, i32 0 )

	; addrof LT_02E7

	; call ERROREXIT()
	; arg LT_02E7
	call void @ERROREXIT( %FBSTRING* %LT_02E7.56 )

	; addrof LT_02E7
	%vr685 = bitcast %FBSTRING* %LT_02E7.56 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr685
	call void @fb_StrDelete( %FBSTRING* %vr685 )

	; label .Lt_02E6
	br label %.Lt_02E6
.Lt_02E6:

	; call fb_GfxGetGLProcAddress()
	; arg Lt_02E8
	%vr687 = bitcast i8* bitcast ([13 x i8]* @Lt_02E8 to i8*) to i8*
	%vr686 = call i8* @fb_GfxGetGLProcAddress( i8* %vr687 )
	%vr688 = bitcast i8* %vr686 to void ( i32, i32, float* )*

	; store GLUNIFORM4FV := vr688
	store void ( i32, i32, float* )* %vr688, void ( i32, i32, float* )** @GLUNIFORM4FV
	%vr690 = load void ( i32, i32, float* )*, void ( i32, i32, float* )** @GLUNIFORM4FV
	%vr689 = ptrtoint void ( i32, i32, float* )* %vr690 to i64

	; branchbop vr689 <> 0
	%vr691 = icmp ne i64 %vr689, 0
	br i1 %vr691, label %.Lt_02EA, label %.Lt_0335
.Lt_0335:

	; localvar LT_02EB
	%LT_02EB.57 = alloca %FBSTRING

	; addrof LT_02EB

	; memclear LT_02EB
	%vr693 = bitcast %FBSTRING* %LT_02EB.57 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr693, i8 0, i32 24, i32 1, i1 false )
	%vr694 = bitcast i8* bitcast ([13 x i8]* @Lt_02E8 to i8*) to i8*

	; addrof LT_02EB
	%vr696 = bitcast %FBSTRING* %LT_02EB.57 to i8*

	; call fb_StrAssign()
	; arg vr696
	; arg -1
	; arg vr694
	; arg 13
	; arg 0
	%vr697 = call %FBSTRING* @fb_StrAssign( i8* %vr696, i64 -1, i8* %vr694, i64 13, i32 0 )

	; addrof LT_02EB

	; call ERROREXIT()
	; arg LT_02EB
	call void @ERROREXIT( %FBSTRING* %LT_02EB.57 )

	; addrof LT_02EB
	%vr703 = bitcast %FBSTRING* %LT_02EB.57 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr703
	call void @fb_StrDelete( %FBSTRING* %vr703 )

	; label .Lt_02EA
	br label %.Lt_02EA
.Lt_02EA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_02EC
	%vr705 = bitcast i8* bitcast ([38 x i8]* @Lt_02EC to i8*) to i8*
	; arg 37
	%vr704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr705, i64 37 )

	; call fb_GfxSetWindowTitle()
	; arg vr704
	%vr707 = bitcast %FBSTRING* %vr704 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr707 )

	; label .Lt_0253
	br label %.Lt_0253
.Lt_0253:
	ret void
}

define void @_ZN9SHADERTOYD1Ev( %SHADERTOY* %THIS.58$ ) nounwind
{

	; paramvar THIS
	%THIS.58 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.58$, %SHADERTOY** %THIS.58

	; label .Lt_033C
	br label %.Lt_033C
.Lt_033C:

	; deref THIS
	%vr1 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; conv vr1+4 => vr2
	%vr3 = ptrtoint %SHADERTOY* %vr1 to i64
	%vr4 = add i64 %vr3, 4
	%vr5 = inttoptr i64 %vr4 to i32*
	%vr6 = load i32, i32* %vr5
	%vr2 = sext i32 %vr6 to i64

	; branchbop vr2 == 0
	%vr7 = icmp eq i64 %vr2, 0
	br i1 %vr7, label %.Lt_033F, label %.Lt_0342
.Lt_0342:

	; callptr GLUSEPROGRAM
	%vr8 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	; arg 0
	call void %vr8( i32 0 )

	; deref THIS
	%vr10 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; conv vr10 => vr11
	%vr12 = ptrtoint %SHADERTOY* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i32*
	%vr14 = load i32, i32* %vr13
	%vr11 = sext i32 %vr14 to i64

	; branchbop vr11 == 0
	%vr15 = icmp eq i64 %vr11, 0
	br i1 %vr15, label %.Lt_0341, label %.Lt_0343
.Lt_0343:

	; deref THIS
	%vr17 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; deref THIS
	%vr19 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDETACHSHADER
	%vr20 = load void ( i32, i32 )*, void ( i32, i32 )** @GLDETACHSHADER
	; arg vr19+4
	%vr21 = ptrtoint %SHADERTOY* %vr19 to i64
	%vr22 = add i64 %vr21, 4
	%vr23 = inttoptr i64 %vr22 to i32*
	%vr24 = load i32, i32* %vr23
	; arg vr17
	%vr25 = ptrtoint %SHADERTOY* %vr17 to i64
	%vr26 = inttoptr i64 %vr25 to i32*
	%vr27 = load i32, i32* %vr26
	call void %vr20( i32 %vr24, i32 %vr27 )

	; deref THIS
	%vr29 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDELETESHADER
	%vr30 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr29
	%vr31 = ptrtoint %SHADERTOY* %vr29 to i64
	%vr32 = inttoptr i64 %vr31 to i32*
	%vr33 = load i32, i32* %vr32
	call void %vr30( i32 %vr33 )

	; label .Lt_0341
	br label %.Lt_0341
.Lt_0341:

	; label .Lt_0340
	br label %.Lt_0340
.Lt_0340:

	; deref THIS
	%vr35 = load %SHADERTOY*, %SHADERTOY** %THIS.58

	; callptr GLDELETEPROGRAM
	%vr36 = load void ( i32 )*, void ( i32 )** @GLDELETEPROGRAM
	; arg vr35+4
	%vr37 = ptrtoint %SHADERTOY* %vr35 to i64
	%vr38 = add i64 %vr37, 4
	%vr39 = inttoptr i64 %vr38 to i32*
	%vr40 = load i32, i32* %vr39
	call void %vr36( i32 %vr40 )

	; label .Lt_033F
	br label %.Lt_033F
.Lt_033F:

	; label .Lt_033E
	br label %.Lt_033E
.Lt_033E:

	; label .Lt_033D
	br label %.Lt_033D
.Lt_033D:

	; bop THIS + 8
	%vr42 = load %SHADERTOY*, %SHADERTOY** %THIS.58
	%vr43 = inttoptr i64 8 to %SHADERTOY*
	%vr41 = add %SHADERTOY* %vr42, %vr43
	%vr44 = bitcast %SHADERTOY* %vr41 to %FBSTRING*

	; addrof vr44
	%vr46 = ptrtoint %FBSTRING* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to %FBSTRING*
	%vr48 = bitcast %FBSTRING* %vr47 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr48
	call void @fb_StrDelete( %FBSTRING* %vr48 )
	ret void
}

define i8 @_ZN9SHADERTOY11COMPILEFILEER8FBSTRING( %SHADERTOY* %THIS.59$, %FBSTRING* %FILENAME.60$ ) nounwind
{

	; paramvar THIS
	%THIS.59 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.59$, %SHADERTOY** %THIS.59

	; paramvar FILENAME
	%FILENAME.60 = alloca %FBSTRING*
	store %FBSTRING* %FILENAME.60$, %FBSTRING** %FILENAME.60

	; localvar fb$result
	%fb$result.61 = alloca i8

	; localvar CODE
	%CODE.62 = alloca %FBSTRING

	; localvar HFILE
	%HFILE.63 = alloca i32

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.61 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_0344
	br label %.Lt_0344
.Lt_0344:

	; addrof CODE

	; memclear CODE
	%vr3 = bitcast %FBSTRING* %CODE.62 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 24, i32 1, i1 false )

	; call fb_FileFree()
	%vr4 = call i32 @fb_FileFree(  )

	; store HFILE := vr4
	store i32 %vr4, i32* %HFILE.63
	%vr6 = load %FBSTRING*, %FBSTRING** %FILENAME.60
	%vr5 = bitcast %FBSTRING* %vr6 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr5
	; arg 2
	; arg 0
	; arg 0
	; arg HFILE
	%vr11 = load i32, i32* %HFILE.63
	; arg 0
	%vr7 = call i32 @fb_FileOpen( %FBSTRING* %vr5, i32 2, i32 0, i32 0, i32 %vr11, i32 0 )

	; conv vr7 => vr14
	%vr14 = sext i32 %vr7 to i64

	; branchbop vr14 == 0
	%vr15 = icmp eq i64 %vr14, 0
	br i1 %vr15, label %.Lt_0347, label %.Lt_0352
.Lt_0352:

	; localvar LT_034C
	%LT_034C.64 = alloca %FBSTRING

	; localvar LT_034D
	%LT_034D.65 = alloca %FBSTRING

	; localvar LT_034E
	%LT_034E.66 = alloca %FBSTRING
	%vr16 = bitcast i8* bitcast ([3 x i8]* @Lt_034B to i8*) to i8*
	%vr17 = bitcast i8* bitcast ([2 x i8]* @Lt_0349 to i8*) to i8*
	%vr19 = load %FBSTRING*, %FBSTRING** %FILENAME.60
	%vr18 = bitcast %FBSTRING* %vr19 to i8*
	%vr20 = bitcast i8* bitcast ([21 x i8]* @Lt_034A to i8*) to i8*

	; addrof LT_034C

	; memclear LT_034C
	%vr22 = bitcast %FBSTRING* %LT_034C.64 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr22, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034C

	; call fb_StrConcat()
	; arg LT_034C
	; arg vr20
	; arg 21
	; arg vr18
	; arg -1
	%vr24 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034C.64, i8* %vr20, i64 21, i8* %vr18, i64 -1 )

	; addrof LT_034D

	; memclear LT_034D
	%vr28 = bitcast %FBSTRING* %LT_034D.65 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr28, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034D

	; call fb_StrConcat()
	; arg LT_034D
	; arg vr24
	%vr31 = bitcast %FBSTRING* %vr24 to i8*
	; arg -1
	; arg vr17
	; arg 2
	%vr30 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034D.65, i8* %vr31, i64 -1, i8* %vr17, i64 2 )

	; addrof LT_034E

	; memclear LT_034E
	%vr35 = bitcast %FBSTRING* %LT_034E.66 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr35, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_034E

	; call fb_StrConcat()
	; arg LT_034E
	; arg vr30
	%vr38 = bitcast %FBSTRING* %vr30 to i8*
	; arg -1
	; arg vr16
	; arg 3
	%vr37 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_034E.66, i8* %vr38, i64 -1, i8* %vr16, i64 3 )

	; deref THIS
	%vr42 = load %SHADERTOY*, %SHADERTOY** %THIS.59

	; addrof vr42+8
	%vr44 = ptrtoint %SHADERTOY* %vr42 to i64
	%vr45 = add i64 %vr44, 8
	%vr46 = inttoptr i64 %vr45 to %FBSTRING*
	%vr47 = bitcast %FBSTRING* %vr46 to i8*

	; call fb_StrAssign()
	; arg vr47
	; arg -1
	; arg vr37
	%vr50 = bitcast %FBSTRING* %vr37 to i8*
	; arg -1
	; arg 0
	%vr48 = call %FBSTRING* @fb_StrAssign( i8* %vr47, i64 -1, i8* %vr50, i64 -1, i32 0 )

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.61

	; addrof CODE
	%vr54 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr54
	call void @fb_StrDelete( %FBSTRING* %vr54 )

	; goto .Lt_0345
	br label %.Lt_0345
.Lt_0353:

	; label .Lt_0347
	br label %.Lt_0347
.Lt_0347:

	; label .Lt_0346
	br label %.Lt_0346
.Lt_0346:

	; label .Lt_034F
	br label %.Lt_034F
.Lt_034F:

	; call fb_FileEof()
	; arg HFILE
	%vr56 = load i32, i32* %HFILE.63
	%vr55 = call i32 @fb_FileEof( i32 %vr56 )

	; conv vr55 => vr58
	%vr58 = sext i32 %vr55 to i64

	; uop NOT vr58
	%vr59 = xor i64 %vr58, -1

	; branchbop vr59 == 0
	%vr60 = icmp eq i64 %vr59, 0
	br i1 %vr60, label %.Lt_0350, label %.Lt_0354
.Lt_0354:

	; localvar ALINE
	%ALINE.67 = alloca %FBSTRING

	; addrof ALINE

	; memclear ALINE
	%vr62 = bitcast %FBSTRING* %ALINE.67 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr62, i8 0, i32 24, i32 1, i1 false )

	; addrof ALINE
	%vr64 = bitcast %FBSTRING* %ALINE.67 to i8*

	; call fb_FileLineInput()
	; arg HFILE
	%vr66 = load i32, i32* %HFILE.63
	; arg vr64
	; arg -1
	; arg 0
	%vr65 = call i32 @fb_FileLineInput( i32 %vr66, i8* %vr64, i64 -1, i32 0 )

	; addrof ALINE
	%vr71 = bitcast %FBSTRING* %ALINE.67 to i8*

	; addrof CODE
	%vr73 = bitcast %FBSTRING* %CODE.62 to i8*

	; call fb_StrConcatAssign()
	; arg vr73
	; arg -1
	; arg vr71
	; arg -1
	; arg 0
	%vr74 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr73, i64 -1, i8* %vr71, i64 -1, i32 0 )
	%vr78 = bitcast i8* bitcast ([2 x i8]* @Lt_0351 to i8*) to i8*

	; addrof CODE
	%vr80 = bitcast %FBSTRING* %CODE.62 to i8*

	; call fb_StrConcatAssign()
	; arg vr80
	; arg -1
	; arg vr78
	; arg 2
	; arg 0
	%vr81 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr80, i64 -1, i8* %vr78, i64 2, i32 0 )

	; addrof ALINE
	%vr86 = bitcast %FBSTRING* %ALINE.67 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr86
	call void @fb_StrDelete( %FBSTRING* %vr86 )

	; goto .Lt_034F
	br label %.Lt_034F
.Lt_0355:

	; label .Lt_0350
	br label %.Lt_0350
.Lt_0350:

	; call fb_FileClose()
	; arg HFILE
	%vr88 = load i32, i32* %HFILE.63
	%vr87 = call i32 @fb_FileClose( i32 %vr88 )

	; addrof CODE

	; call COMPILECODE()
	; arg THIS
	%vr92 = load %SHADERTOY*, %SHADERTOY** %THIS.59
	; arg CODE
	%vr91 = call i8 @_ZN9SHADERTOY11COMPILECODEER8FBSTRING( %SHADERTOY* %vr92, %FBSTRING* %CODE.62 )

	; store fb$result := vr91
	store i8 %vr91, i8* %fb$result.61

	; addrof CODE
	%vr94 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr94
	call void @fb_StrDelete( %FBSTRING* %vr94 )

	; goto .Lt_0345
	br label %.Lt_0345
.Lt_0356:

	; addrof CODE
	%vr96 = bitcast %FBSTRING* %CODE.62 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr96
	call void @fb_StrDelete( %FBSTRING* %vr96 )

	; label .Lt_0345
	br label %.Lt_0345
.Lt_0345:

	; loadres fb$result
	%vr98 = load i8, i8* %fb$result.61
	ret i8 %vr98
}

define i8 @_ZN9SHADERTOY11COMPILECODEER8FBSTRING( %SHADERTOY* %THIS.68$, %FBSTRING* %USERCODE.69$ ) nounwind
{

	; paramvar THIS
	%THIS.68 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.68$, %SHADERTOY** %THIS.68

	; paramvar USERCODE
	%USERCODE.69 = alloca %FBSTRING*
	store %FBSTRING* %USERCODE.69$, %FBSTRING** %USERCODE.69

	; localvar fb$result
	%fb$result.70 = alloca i8

	; localvar LOGSIZE
	%LOGSIZE.71 = alloca i32

	; localvar STATUS
	%STATUS.72 = alloca i32

	; localvar FRAGMENTPROLOG
	%FRAGMENTPROLOG.73 = alloca %FBSTRING

	; localvar VERSION
	%VERSION.74 = alloca %FBSTRING

	; localvar FRAGMENTEPILOG
	%FRAGMENTEPILOG.75 = alloca %FBSTRING

	; localvar FRAGMENTCODE
	%FRAGMENTCODE.76 = alloca %FBSTRING

	; localvar LT_0379
	%LT_0379.77 = alloca %FBSTRING

	; localvar LT_037A
	%LT_037A.78 = alloca %FBSTRING

	; localvar PCODE
	%PCODE.79 = alloca i8*

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.70 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_0357
	br label %.Lt_0357
.Lt_0357:

	; addrof LOGSIZE

	; memclear LOGSIZE
	%vr3 = bitcast i32* %LOGSIZE.71 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 4, i32 1, i1 false )

	; addrof STATUS

	; memclear STATUS
	%vr5 = bitcast i32* %STATUS.72 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 4, i32 1, i1 false )

	; addrof FRAGMENTPROLOG

	; memclear FRAGMENTPROLOG
	%vr7 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr7, i8 0, i32 24, i32 1, i1 false )

	; addrof VERSION

	; memclear VERSION
	%vr9 = bitcast %FBSTRING* %VERSION.74 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 24, i32 1, i1 false )
	%vr10 = bitcast i8* bitcast ([14 x i8]* @Lt_0359 to i8*) to i8*

	; addrof VERSION
	%vr12 = bitcast %FBSTRING* %VERSION.74 to i8*

	; call fb_StrAssign()
	; arg vr12
	; arg -1
	; arg vr10
	; arg 14
	; arg 0
	%vr13 = call %FBSTRING* @fb_StrAssign( i8* %vr12, i64 -1, i8* %vr10, i64 14, i32 0 )

	; addrof VERSION
	%vr18 = bitcast %FBSTRING* %VERSION.74 to i8*

	; addrof FRAGMENTPROLOG
	%vr20 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrAssign()
	; arg vr20
	; arg -1
	; arg vr18
	; arg -1
	; arg 0
	%vr21 = call %FBSTRING* @fb_StrAssign( i8* %vr20, i64 -1, i8* %vr18, i64 -1, i32 0 )
	%vr25 = bitcast i8* bitcast ([32 x i8]* @Lt_035A to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr27 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr27
	; arg -1
	; arg vr25
	; arg 32
	; arg 0
	%vr28 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr27, i64 -1, i8* %vr25, i64 32, i32 0 )
	%vr32 = bitcast i8* bitcast ([26 x i8]* @Lt_035B to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr34 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr34
	; arg -1
	; arg vr32
	; arg 26
	; arg 0
	%vr35 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr34, i64 -1, i8* %vr32, i64 26, i32 0 )
	%vr39 = bitcast i8* bitcast ([32 x i8]* @Lt_035C to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr41 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr41
	; arg -1
	; arg vr39
	; arg 32
	; arg 0
	%vr42 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr41, i64 -1, i8* %vr39, i64 32, i32 0 )
	%vr46 = bitcast i8* bitcast ([31 x i8]* @Lt_035D to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr48 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr48
	; arg -1
	; arg vr46
	; arg 31
	; arg 0
	%vr49 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr48, i64 -1, i8* %vr46, i64 31, i32 0 )
	%vr53 = bitcast i8* bitcast ([31 x i8]* @Lt_035E to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr55 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr55
	; arg -1
	; arg vr53
	; arg 31
	; arg 0
	%vr56 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr55, i64 -1, i8* %vr53, i64 31, i32 0 )
	%vr60 = bitcast i8* bitcast ([27 x i8]* @Lt_035F to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr62 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr62
	; arg -1
	; arg vr60
	; arg 27
	; arg 0
	%vr63 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr62, i64 -1, i8* %vr60, i64 27, i32 0 )
	%vr67 = bitcast i8* bitcast ([36 x i8]* @Lt_0360 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr69 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr69
	; arg -1
	; arg vr67
	; arg 36
	; arg 0
	%vr70 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr69, i64 -1, i8* %vr67, i64 36, i32 0 )
	%vr74 = bitcast i8* bitcast ([42 x i8]* @Lt_0361 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr76 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr76
	; arg -1
	; arg vr74
	; arg 42
	; arg 0
	%vr77 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr76, i64 -1, i8* %vr74, i64 42, i32 0 )
	%vr81 = bitcast i8* bitcast ([32 x i8]* @Lt_0362 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr83 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr83
	; arg -1
	; arg vr81
	; arg 32
	; arg 0
	%vr84 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr83, i64 -1, i8* %vr81, i64 32, i32 0 )
	%vr88 = bitcast i8* bitcast ([27 x i8]* @Lt_0363 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr90 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr90
	; arg -1
	; arg vr88
	; arg 27
	; arg 0
	%vr91 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr90, i64 -1, i8* %vr88, i64 27, i32 0 )
	%vr95 = bitcast i8* bitcast ([26 x i8]* @Lt_0364 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr97 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr97
	; arg -1
	; arg vr95
	; arg 26
	; arg 0
	%vr98 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr97, i64 -1, i8* %vr95, i64 26, i32 0 )
	%vr102 = bitcast i8* bitcast ([30 x i8]* @Lt_0365 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr104 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr104
	; arg -1
	; arg vr102
	; arg 30
	; arg 0
	%vr105 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr104, i64 -1, i8* %vr102, i64 30, i32 0 )
	%vr109 = bitcast i8* bitcast ([30 x i8]* @Lt_0366 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr111 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr111
	; arg -1
	; arg vr109
	; arg 30
	; arg 0
	%vr112 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr111, i64 -1, i8* %vr109, i64 30, i32 0 )
	%vr116 = bitcast i8* bitcast ([30 x i8]* @Lt_0367 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr118 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr118
	; arg -1
	; arg vr116
	; arg 30
	; arg 0
	%vr119 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr118, i64 -1, i8* %vr116, i64 30, i32 0 )
	%vr123 = bitcast i8* bitcast ([30 x i8]* @Lt_0368 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr125 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr125
	; arg -1
	; arg vr123
	; arg 30
	; arg 0
	%vr126 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr125, i64 -1, i8* %vr123, i64 30, i32 0 )
	%vr130 = bitcast i8* bitcast ([28 x i8]* @Lt_0369 to i8*) to i8*

	; addrof FRAGMENTPROLOG
	%vr132 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; call fb_StrConcatAssign()
	; arg vr132
	; arg -1
	; arg vr130
	; arg 28
	; arg 0
	%vr133 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr132, i64 -1, i8* %vr130, i64 28, i32 0 )

	; addrof FRAGMENTEPILOG

	; memclear FRAGMENTEPILOG
	%vr138 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr138, i8 0, i32 24, i32 1, i1 false )

	; branchbop SWCH <> 0
	%vr140 = load double, double* @SWCH
	%vr139 = icmp ne double %vr140, 0x0000000000000000
	br i1 %vr139, label %.Lt_036B, label %.Lt_0389
.Lt_0389:
	%vr141 = bitcast i8* bitcast ([15 x i8]* @Lt_036C to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr143 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr143
	; arg -1
	; arg vr141
	; arg 15
	; arg 0
	%vr144 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr143, i64 -1, i8* %vr141, i64 15, i32 0 )
	%vr148 = bitcast i8* bitcast ([15 x i8]* @Lt_036D to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr150 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr150
	; arg -1
	; arg vr148
	; arg 15
	; arg 0
	%vr151 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr150, i64 -1, i8* %vr148, i64 15, i32 0 )
	%vr155 = bitcast i8* bitcast ([23 x i8]* @Lt_036E to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr157 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr157
	; arg -1
	; arg vr155
	; arg 23
	; arg 0
	%vr158 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr157, i64 -1, i8* %vr155, i64 23, i32 0 )
	%vr162 = bitcast i8* bitcast ([38 x i8]* @Lt_036F to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr164 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr164
	; arg -1
	; arg vr162
	; arg 38
	; arg 0
	%vr165 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr164, i64 -1, i8* %vr162, i64 38, i32 0 )
	%vr169 = bitcast i8* bitcast ([18 x i8]* @Lt_0370 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr171 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr171
	; arg -1
	; arg vr169
	; arg 18
	; arg 0
	%vr172 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr171, i64 -1, i8* %vr169, i64 18, i32 0 )
	%vr176 = bitcast i8* bitcast ([25 x i8]* @Lt_0371 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr178 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr178
	; arg -1
	; arg vr176
	; arg 25
	; arg 0
	%vr179 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr178, i64 -1, i8* %vr176, i64 25, i32 0 )
	%vr183 = bitcast i8* bitcast ([3 x i8]* @Lt_0372 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr185 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr185
	; arg -1
	; arg vr183
	; arg 3
	; arg 0
	%vr186 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr185, i64 -1, i8* %vr183, i64 3, i32 0 )

	; goto .Lt_036A
	br label %.Lt_036A
.Lt_038A:

	; label .Lt_036B
	br label %.Lt_036B
.Lt_036B:
	%vr190 = bitcast i8* bitcast ([29 x i8]* @Lt_0373 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr192 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr192
	; arg -1
	; arg vr190
	; arg 29
	; arg 0
	%vr193 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr192, i64 -1, i8* %vr190, i64 29, i32 0 )
	%vr197 = bitcast i8* bitcast ([29 x i8]* @Lt_0374 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr199 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr199
	; arg -1
	; arg vr197
	; arg 29
	; arg 0
	%vr200 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr199, i64 -1, i8* %vr197, i64 29, i32 0 )
	%vr204 = bitcast i8* bitcast ([29 x i8]* @Lt_0375 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr206 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr206
	; arg -1
	; arg vr204
	; arg 29
	; arg 0
	%vr207 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr206, i64 -1, i8* %vr204, i64 29, i32 0 )
	%vr211 = bitcast i8* bitcast ([33 x i8]* @Lt_0376 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr213 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr213
	; arg -1
	; arg vr211
	; arg 33
	; arg 0
	%vr214 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr213, i64 -1, i8* %vr211, i64 33, i32 0 )
	%vr218 = bitcast i8* bitcast ([21 x i8]* @Lt_0377 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr220 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr220
	; arg -1
	; arg vr218
	; arg 21
	; arg 0
	%vr221 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr220, i64 -1, i8* %vr218, i64 21, i32 0 )
	%vr225 = bitcast i8* bitcast ([15 x i8]* @Lt_036C to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr227 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr227
	; arg -1
	; arg vr225
	; arg 15
	; arg 0
	%vr228 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr227, i64 -1, i8* %vr225, i64 15, i32 0 )
	%vr232 = bitcast i8* bitcast ([15 x i8]* @Lt_036D to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr234 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr234
	; arg -1
	; arg vr232
	; arg 15
	; arg 0
	%vr235 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr234, i64 -1, i8* %vr232, i64 15, i32 0 )
	%vr239 = bitcast i8* bitcast ([23 x i8]* @Lt_036E to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr241 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr241
	; arg -1
	; arg vr239
	; arg 23
	; arg 0
	%vr242 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr241, i64 -1, i8* %vr239, i64 23, i32 0 )
	%vr246 = bitcast i8* bitcast ([39 x i8]* @Lt_0378 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr248 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr248
	; arg -1
	; arg vr246
	; arg 39
	; arg 0
	%vr249 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr248, i64 -1, i8* %vr246, i64 39, i32 0 )
	%vr253 = bitcast i8* bitcast ([18 x i8]* @Lt_0370 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr255 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr255
	; arg -1
	; arg vr253
	; arg 18
	; arg 0
	%vr256 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr255, i64 -1, i8* %vr253, i64 18, i32 0 )
	%vr260 = bitcast i8* bitcast ([25 x i8]* @Lt_0371 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr262 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr262
	; arg -1
	; arg vr260
	; arg 25
	; arg 0
	%vr263 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr262, i64 -1, i8* %vr260, i64 25, i32 0 )
	%vr267 = bitcast i8* bitcast ([3 x i8]* @Lt_0372 to i8*) to i8*

	; addrof FRAGMENTEPILOG
	%vr269 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*

	; call fb_StrConcatAssign()
	; arg vr269
	; arg -1
	; arg vr267
	; arg 3
	; arg 0
	%vr270 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr269, i64 -1, i8* %vr267, i64 3, i32 0 )

	; label .Lt_036A
	br label %.Lt_036A
.Lt_036A:

	; addrof FRAGMENTEPILOG
	%vr275 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to i8*
	%vr277 = load %FBSTRING*, %FBSTRING** %USERCODE.69
	%vr276 = bitcast %FBSTRING* %vr277 to i8*

	; addrof FRAGMENTPROLOG
	%vr279 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to i8*

	; addrof LT_0379

	; memclear LT_0379
	%vr281 = bitcast %FBSTRING* %LT_0379.77 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr281, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0379

	; call fb_StrConcat()
	; arg LT_0379
	; arg vr279
	; arg -1
	; arg vr276
	; arg -1
	%vr283 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0379.77, i8* %vr279, i64 -1, i8* %vr276, i64 -1 )

	; addrof LT_037A

	; memclear LT_037A
	%vr287 = bitcast %FBSTRING* %LT_037A.78 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr287, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_037A

	; call fb_StrConcat()
	; arg LT_037A
	; arg vr283
	%vr290 = bitcast %FBSTRING* %vr283 to i8*
	; arg -1
	; arg vr275
	; arg -1
	%vr289 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_037A.78, i8* %vr290, i64 -1, i8* %vr275, i64 -1 )

	; addrof FRAGMENTCODE
	%vr294 = bitcast %FBSTRING* %FRAGMENTCODE.76 to i8*

	; call fb_StrInit()
	; arg vr294
	; arg -1
	; arg vr289
	%vr297 = bitcast %FBSTRING* %vr289 to i8*
	; arg -1
	; arg 0
	%vr295 = call %FBSTRING* @fb_StrInit( i8* %vr294, i64 -1, i8* %vr297, i64 -1, i32 0 )

	; callptr GLCREATESHADER
	%vr301 = load i32 ( i32 )*, i32 ( i32 )** @GLCREATESHADER
	; arg 35632
	%vr300 = call i32 %vr301( i32 35632 )

	; deref THIS
	%vr303 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr303 := vr300
	%vr304 = ptrtoint %SHADERTOY* %vr303 to i64
	%vr305 = inttoptr i64 %vr304 to i32*
	store i32 %vr300, i32* %vr305

	; deref THIS
	%vr307 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; conv vr307 => vr308
	%vr309 = ptrtoint %SHADERTOY* %vr307 to i64
	%vr310 = inttoptr i64 %vr309 to i32*
	%vr311 = load i32, i32* %vr310
	%vr308 = sext i32 %vr311 to i64

	; branchbop vr308 <> 0
	%vr312 = icmp ne i64 %vr308, 0
	br i1 %vr312, label %.Lt_037C, label %.Lt_038B
.Lt_038B:
	%vr313 = bitcast i8* bitcast ([44 x i8]* @Lt_037D to i8*) to i8*

	; deref THIS
	%vr315 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr315+8
	%vr317 = ptrtoint %SHADERTOY* %vr315 to i64
	%vr318 = add i64 %vr317, 8
	%vr319 = inttoptr i64 %vr318 to %FBSTRING*
	%vr320 = bitcast %FBSTRING* %vr319 to i8*

	; call fb_StrAssign()
	; arg vr320
	; arg -1
	; arg vr313
	; arg 44
	; arg 0
	%vr321 = call %FBSTRING* @fb_StrAssign( i8* %vr320, i64 -1, i8* %vr313, i64 44, i32 0 )

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr326 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr326
	call void @fb_StrDelete( %FBSTRING* %vr326 )

	; addrof FRAGMENTEPILOG
	%vr328 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr328
	call void @fb_StrDelete( %FBSTRING* %vr328 )

	; addrof VERSION
	%vr330 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr330
	call void @fb_StrDelete( %FBSTRING* %vr330 )

	; addrof FRAGMENTPROLOG
	%vr332 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr332
	call void @fb_StrDelete( %FBSTRING* %vr332 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_038C:

	; label .Lt_037C
	br label %.Lt_037C
.Lt_037C:

	; label .Lt_037B
	br label %.Lt_037B
.Lt_037B:

	; store PCODE := FRAGMENTCODE
	%vr333 = bitcast %FBSTRING* %FRAGMENTCODE.76 to i8**
	%vr334 = load i8*, i8** %vr333
	%vr335 = bitcast i8* %vr334 to i8*
	store i8* %vr335, i8** %PCODE.79

	; addrof PCODE

	; deref THIS
	%vr338 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLSHADERSOURCE
	%vr339 = load void ( i32, i32, i8**, i32* )*, void ( i32, i32, i8**, i32* )** @GLSHADERSOURCE
	; arg vr338
	%vr340 = ptrtoint %SHADERTOY* %vr338 to i64
	%vr341 = inttoptr i64 %vr340 to i32*
	%vr342 = load i32, i32* %vr341
	; arg 1
	; arg PCODE
	%vr343 = bitcast i8** %PCODE.79 to i8**
	; arg 0
	%vr344 = bitcast i32* 0 to i32*
	call void %vr339( i32 %vr342, i32 1, i8** %vr343, i32* %vr344 )

	; deref THIS
	%vr346 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLCOMPILESHADER
	%vr347 = load void ( i32 )*, void ( i32 )** @GLCOMPILESHADER
	; arg vr346
	%vr348 = ptrtoint %SHADERTOY* %vr346 to i64
	%vr349 = inttoptr i64 %vr348 to i32*
	%vr350 = load i32, i32* %vr349
	call void %vr347( i32 %vr350 )

	; addrof STATUS

	; deref THIS
	%vr353 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERIV
	%vr354 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	; arg vr353
	%vr355 = ptrtoint %SHADERTOY* %vr353 to i64
	%vr356 = inttoptr i64 %vr355 to i32*
	%vr357 = load i32, i32* %vr356
	; arg 35713
	; arg STATUS
	call void %vr354( i32 %vr357, i32 35713, i32* %STATUS.72 )

	; conv STATUS => vr358
	%vr359 = load i32, i32* %STATUS.72
	%vr358 = sext i32 %vr359 to i64

	; branchbop vr358 <> 0
	%vr360 = icmp ne i64 %vr358, 0
	br i1 %vr360, label %.Lt_037F, label %.Lt_038D
.Lt_038D:

	; localvar LT_0381
	%LT_0381.80 = alloca %FBSTRING

	; addrof LOGSIZE

	; deref THIS
	%vr363 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERIV
	%vr364 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETSHADERIV
	; arg vr363
	%vr365 = ptrtoint %SHADERTOY* %vr363 to i64
	%vr366 = inttoptr i64 %vr365 to i32*
	%vr367 = load i32, i32* %vr366
	; arg 35716
	; arg LOGSIZE
	call void %vr364( i32 %vr367, i32 35716, i32* %LOGSIZE.71 )

	; conv LOGSIZE => vr368
	%vr369 = load i32, i32* %LOGSIZE.71
	%vr368 = sext i32 %vr369 to i64

	; call fb_SPACE()
	; arg vr368
	%vr370 = call %FBSTRING* @fb_SPACE( i64 %vr368 )

	; deref THIS
	%vr372 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr372+8
	%vr374 = ptrtoint %SHADERTOY* %vr372 to i64
	%vr375 = add i64 %vr374, 8
	%vr376 = inttoptr i64 %vr375 to %FBSTRING*
	%vr377 = bitcast %FBSTRING* %vr376 to i8*

	; call fb_StrAssign()
	; arg vr377
	; arg -1
	; arg vr370
	%vr380 = bitcast %FBSTRING* %vr370 to i8*
	; arg -1
	; arg 0
	%vr378 = call %FBSTRING* @fb_StrAssign( i8* %vr377, i64 -1, i8* %vr380, i64 -1, i32 0 )

	; deref THIS
	%vr384 = load %SHADERTOY*, %SHADERTOY** %THIS.68
	%vr386 = ptrtoint %SHADERTOY* %vr384 to i64
	%vr387 = add i64 %vr386, 8
	%vr388 = inttoptr i64 %vr387 to i8**
	%vr389 = load i8*, i8** %vr388
	%vr385 = bitcast i8* %vr389 to i8*

	; deref THIS
	%vr391 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETSHADERINFOLOG
	%vr392 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETSHADERINFOLOG
	; arg vr391
	%vr393 = ptrtoint %SHADERTOY* %vr391 to i64
	%vr394 = inttoptr i64 %vr393 to i32*
	%vr395 = load i32, i32* %vr394
	; arg LOGSIZE
	%vr396 = load i32, i32* %LOGSIZE.71
	; arg 0
	; arg vr385
	call void %vr392( i32 %vr395, i32 %vr396, i32* 0, i8* %vr385 )

	; deref THIS
	%vr398 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr398+8
	%vr400 = ptrtoint %SHADERTOY* %vr398 to i64
	%vr401 = add i64 %vr400, 8
	%vr402 = inttoptr i64 %vr401 to %FBSTRING*
	%vr403 = bitcast %FBSTRING* %vr402 to i8*
	%vr404 = bitcast i8* bitcast ([42 x i8]* @Lt_0380 to i8*) to i8*

	; addrof LT_0381

	; memclear LT_0381
	%vr406 = bitcast %FBSTRING* %LT_0381.80 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr406, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0381

	; call fb_StrConcat()
	; arg LT_0381
	; arg vr404
	; arg 42
	; arg vr403
	; arg -1
	%vr408 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0381.80, i8* %vr404, i64 42, i8* %vr403, i64 -1 )

	; deref THIS
	%vr412 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr412+8
	%vr414 = ptrtoint %SHADERTOY* %vr412 to i64
	%vr415 = add i64 %vr414, 8
	%vr416 = inttoptr i64 %vr415 to %FBSTRING*
	%vr417 = bitcast %FBSTRING* %vr416 to i8*

	; call fb_StrAssign()
	; arg vr417
	; arg -1
	; arg vr408
	%vr420 = bitcast %FBSTRING* %vr408 to i8*
	; arg -1
	; arg 0
	%vr418 = call %FBSTRING* @fb_StrAssign( i8* %vr417, i64 -1, i8* %vr420, i64 -1, i32 0 )

	; deref THIS
	%vr424 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr425 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr424
	%vr426 = ptrtoint %SHADERTOY* %vr424 to i64
	%vr427 = inttoptr i64 %vr426 to i32*
	%vr428 = load i32, i32* %vr427
	call void %vr425( i32 %vr428 )

	; deref THIS
	%vr430 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr430 := 0
	%vr431 = ptrtoint %SHADERTOY* %vr430 to i64
	%vr432 = inttoptr i64 %vr431 to i32*
	store i32 0, i32* %vr432

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr434 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr434
	call void @fb_StrDelete( %FBSTRING* %vr434 )

	; addrof FRAGMENTEPILOG
	%vr436 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr436
	call void @fb_StrDelete( %FBSTRING* %vr436 )

	; addrof VERSION
	%vr438 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr438
	call void @fb_StrDelete( %FBSTRING* %vr438 )

	; addrof FRAGMENTPROLOG
	%vr440 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr440
	call void @fb_StrDelete( %FBSTRING* %vr440 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_038E:

	; label .Lt_037F
	br label %.Lt_037F
.Lt_037F:

	; label .Lt_037E
	br label %.Lt_037E
.Lt_037E:

	; callptr GLCREATEPROGRAM
	%vr442 = load i32 (  )*, i32 (  )** @GLCREATEPROGRAM
	%vr441 = call i32 %vr442(  )

	; deref THIS
	%vr444 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr444+4 := vr441
	%vr445 = ptrtoint %SHADERTOY* %vr444 to i64
	%vr446 = add i64 %vr445, 4
	%vr447 = inttoptr i64 %vr446 to i32*
	store i32 %vr441, i32* %vr447

	; deref THIS
	%vr449 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; conv vr449+4 => vr450
	%vr451 = ptrtoint %SHADERTOY* %vr449 to i64
	%vr452 = add i64 %vr451, 4
	%vr453 = inttoptr i64 %vr452 to i32*
	%vr454 = load i32, i32* %vr453
	%vr450 = sext i32 %vr454 to i64

	; branchbop vr450 <> 0
	%vr455 = icmp ne i64 %vr450, 0
	br i1 %vr455, label %.Lt_0383, label %.Lt_038F
.Lt_038F:
	%vr456 = bitcast i8* bitcast ([27 x i8]* @Lt_0384 to i8*) to i8*

	; deref THIS
	%vr458 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr458+8
	%vr460 = ptrtoint %SHADERTOY* %vr458 to i64
	%vr461 = add i64 %vr460, 8
	%vr462 = inttoptr i64 %vr461 to %FBSTRING*
	%vr463 = bitcast %FBSTRING* %vr462 to i8*

	; call fb_StrAssign()
	; arg vr463
	; arg -1
	; arg vr456
	; arg 27
	; arg 0
	%vr464 = call %FBSTRING* @fb_StrAssign( i8* %vr463, i64 -1, i8* %vr456, i64 27, i32 0 )

	; deref THIS
	%vr469 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr470 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr469
	%vr471 = ptrtoint %SHADERTOY* %vr469 to i64
	%vr472 = inttoptr i64 %vr471 to i32*
	%vr473 = load i32, i32* %vr472
	call void %vr470( i32 %vr473 )

	; deref THIS
	%vr475 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr475 := 0
	%vr476 = ptrtoint %SHADERTOY* %vr475 to i64
	%vr477 = inttoptr i64 %vr476 to i32*
	store i32 0, i32* %vr477

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr479 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr479
	call void @fb_StrDelete( %FBSTRING* %vr479 )

	; addrof FRAGMENTEPILOG
	%vr481 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr481
	call void @fb_StrDelete( %FBSTRING* %vr481 )

	; addrof VERSION
	%vr483 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr483
	call void @fb_StrDelete( %FBSTRING* %vr483 )

	; addrof FRAGMENTPROLOG
	%vr485 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr485
	call void @fb_StrDelete( %FBSTRING* %vr485 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0390:

	; label .Lt_0383
	br label %.Lt_0383
.Lt_0383:

	; label .Lt_0382
	br label %.Lt_0382
.Lt_0382:

	; deref THIS
	%vr487 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; deref THIS
	%vr489 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLATTACHSHADER
	%vr490 = load void ( i32, i32 )*, void ( i32, i32 )** @GLATTACHSHADER
	; arg vr489+4
	%vr491 = ptrtoint %SHADERTOY* %vr489 to i64
	%vr492 = add i64 %vr491, 4
	%vr493 = inttoptr i64 %vr492 to i32*
	%vr494 = load i32, i32* %vr493
	; arg vr487
	%vr495 = ptrtoint %SHADERTOY* %vr487 to i64
	%vr496 = inttoptr i64 %vr495 to i32*
	%vr497 = load i32, i32* %vr496
	call void %vr490( i32 %vr494, i32 %vr497 )

	; deref THIS
	%vr499 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLLINKPROGRAM
	%vr500 = load void ( i32 )*, void ( i32 )** @GLLINKPROGRAM
	; arg vr499+4
	%vr501 = ptrtoint %SHADERTOY* %vr499 to i64
	%vr502 = add i64 %vr501, 4
	%vr503 = inttoptr i64 %vr502 to i32*
	%vr504 = load i32, i32* %vr503
	call void %vr500( i32 %vr504 )

	; addrof STATUS

	; deref THIS
	%vr507 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMIV
	%vr508 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	; arg vr507+4
	%vr509 = ptrtoint %SHADERTOY* %vr507 to i64
	%vr510 = add i64 %vr509, 4
	%vr511 = inttoptr i64 %vr510 to i32*
	%vr512 = load i32, i32* %vr511
	; arg 35714
	; arg STATUS
	call void %vr508( i32 %vr512, i32 35714, i32* %STATUS.72 )

	; conv STATUS => vr513
	%vr514 = load i32, i32* %STATUS.72
	%vr513 = sext i32 %vr514 to i64

	; branchbop vr513 <> 0
	%vr515 = icmp ne i64 %vr513, 0
	br i1 %vr515, label %.Lt_0386, label %.Lt_0391
.Lt_0391:

	; localvar LT_0388
	%LT_0388.81 = alloca %FBSTRING

	; addrof LOGSIZE

	; deref THIS
	%vr518 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMIV
	%vr519 = load void ( i32, i32, i32* )*, void ( i32, i32, i32* )** @GLGETPROGRAMIV
	; arg vr518+4
	%vr520 = ptrtoint %SHADERTOY* %vr518 to i64
	%vr521 = add i64 %vr520, 4
	%vr522 = inttoptr i64 %vr521 to i32*
	%vr523 = load i32, i32* %vr522
	; arg 35716
	; arg LOGSIZE
	call void %vr519( i32 %vr523, i32 35716, i32* %LOGSIZE.71 )

	; conv LOGSIZE => vr524
	%vr525 = load i32, i32* %LOGSIZE.71
	%vr524 = sext i32 %vr525 to i64

	; call fb_SPACE()
	; arg vr524
	%vr526 = call %FBSTRING* @fb_SPACE( i64 %vr524 )

	; deref THIS
	%vr528 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr528+8
	%vr530 = ptrtoint %SHADERTOY* %vr528 to i64
	%vr531 = add i64 %vr530, 8
	%vr532 = inttoptr i64 %vr531 to %FBSTRING*
	%vr533 = bitcast %FBSTRING* %vr532 to i8*

	; call fb_StrAssign()
	; arg vr533
	; arg -1
	; arg vr526
	%vr536 = bitcast %FBSTRING* %vr526 to i8*
	; arg -1
	; arg 0
	%vr534 = call %FBSTRING* @fb_StrAssign( i8* %vr533, i64 -1, i8* %vr536, i64 -1, i32 0 )

	; deref THIS
	%vr540 = load %SHADERTOY*, %SHADERTOY** %THIS.68
	%vr542 = ptrtoint %SHADERTOY* %vr540 to i64
	%vr543 = add i64 %vr542, 8
	%vr544 = inttoptr i64 %vr543 to i8**
	%vr545 = load i8*, i8** %vr544
	%vr541 = bitcast i8* %vr545 to i8*

	; deref THIS
	%vr547 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLGETPROGRAMINFOLOG
	%vr548 = load void ( i32, i32, i32*, i8* )*, void ( i32, i32, i32*, i8* )** @GLGETPROGRAMINFOLOG
	; arg vr547+4
	%vr549 = ptrtoint %SHADERTOY* %vr547 to i64
	%vr550 = add i64 %vr549, 4
	%vr551 = inttoptr i64 %vr550 to i32*
	%vr552 = load i32, i32* %vr551
	; arg LOGSIZE
	%vr553 = load i32, i32* %LOGSIZE.71
	; arg 0
	; arg vr541
	call void %vr548( i32 %vr552, i32 %vr553, i32* 0, i8* %vr541 )

	; deref THIS
	%vr555 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr555+8
	%vr557 = ptrtoint %SHADERTOY* %vr555 to i64
	%vr558 = add i64 %vr557, 8
	%vr559 = inttoptr i64 %vr558 to %FBSTRING*
	%vr560 = bitcast %FBSTRING* %vr559 to i8*
	%vr561 = bitcast i8* bitcast ([26 x i8]* @Lt_0387 to i8*) to i8*

	; addrof LT_0388

	; memclear LT_0388
	%vr563 = bitcast %FBSTRING* %LT_0388.81 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr563, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0388

	; call fb_StrConcat()
	; arg LT_0388
	; arg vr561
	; arg 26
	; arg vr560
	; arg -1
	%vr565 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0388.81, i8* %vr561, i64 26, i8* %vr560, i64 -1 )

	; deref THIS
	%vr569 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; addrof vr569+8
	%vr571 = ptrtoint %SHADERTOY* %vr569 to i64
	%vr572 = add i64 %vr571, 8
	%vr573 = inttoptr i64 %vr572 to %FBSTRING*
	%vr574 = bitcast %FBSTRING* %vr573 to i8*

	; call fb_StrAssign()
	; arg vr574
	; arg -1
	; arg vr565
	%vr577 = bitcast %FBSTRING* %vr565 to i8*
	; arg -1
	; arg 0
	%vr575 = call %FBSTRING* @fb_StrAssign( i8* %vr574, i64 -1, i8* %vr577, i64 -1, i32 0 )

	; deref THIS
	%vr581 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; callptr GLDELETESHADER
	%vr582 = load void ( i32 )*, void ( i32 )** @GLDELETESHADER
	; arg vr581
	%vr583 = ptrtoint %SHADERTOY* %vr581 to i64
	%vr584 = inttoptr i64 %vr583 to i32*
	%vr585 = load i32, i32* %vr584
	call void %vr582( i32 %vr585 )

	; deref THIS
	%vr587 = load %SHADERTOY*, %SHADERTOY** %THIS.68

	; store vr587 := 0
	%vr588 = ptrtoint %SHADERTOY* %vr587 to i64
	%vr589 = inttoptr i64 %vr588 to i32*
	store i32 0, i32* %vr589

	; store fb$result := 0
	store i8 trunc (i64 0 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr591 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr591
	call void @fb_StrDelete( %FBSTRING* %vr591 )

	; addrof FRAGMENTEPILOG
	%vr593 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr593
	call void @fb_StrDelete( %FBSTRING* %vr593 )

	; addrof VERSION
	%vr595 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr595
	call void @fb_StrDelete( %FBSTRING* %vr595 )

	; addrof FRAGMENTPROLOG
	%vr597 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr597
	call void @fb_StrDelete( %FBSTRING* %vr597 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0392:

	; label .Lt_0386
	br label %.Lt_0386
.Lt_0386:

	; label .Lt_0385
	br label %.Lt_0385
.Lt_0385:

	; store fb$result := -1
	store i8 trunc (i64 -1 to i8), i8* %fb$result.70

	; addrof FRAGMENTCODE
	%vr599 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr599
	call void @fb_StrDelete( %FBSTRING* %vr599 )

	; addrof FRAGMENTEPILOG
	%vr601 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr601
	call void @fb_StrDelete( %FBSTRING* %vr601 )

	; addrof VERSION
	%vr603 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr603
	call void @fb_StrDelete( %FBSTRING* %vr603 )

	; addrof FRAGMENTPROLOG
	%vr605 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr605
	call void @fb_StrDelete( %FBSTRING* %vr605 )

	; goto .Lt_0358
	br label %.Lt_0358
.Lt_0393:

	; addrof FRAGMENTCODE
	%vr607 = bitcast %FBSTRING* %FRAGMENTCODE.76 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr607
	call void @fb_StrDelete( %FBSTRING* %vr607 )

	; addrof FRAGMENTEPILOG
	%vr609 = bitcast %FBSTRING* %FRAGMENTEPILOG.75 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr609
	call void @fb_StrDelete( %FBSTRING* %vr609 )

	; addrof VERSION
	%vr611 = bitcast %FBSTRING* %VERSION.74 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr611
	call void @fb_StrDelete( %FBSTRING* %vr611 )

	; addrof FRAGMENTPROLOG
	%vr613 = bitcast %FBSTRING* %FRAGMENTPROLOG.73 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr613
	call void @fb_StrDelete( %FBSTRING* %vr613 )

	; label .Lt_0358
	br label %.Lt_0358
.Lt_0358:

	; loadres fb$result
	%vr615 = load i8, i8* %fb$result.70
	ret i8 %vr615
}

define void @_ZN5C64_TC1Ev( %C64_T* %THIS.82$ ) nounwind
{

	; paramvar THIS
	%THIS.82 = alloca %C64_T*
	store %C64_T* %THIS.82$, %C64_T** %THIS.82

	; localvar I
	%I.83 = alloca i64

	; localvar C
	%C.84 = alloca i64

	; localvar LT_03D9
	%LT_03D9.85 = alloca %MEMORY_T*

	; localvar LT_03DC
	%LT_03DC.86 = alloca %CPU6510*

	; label .Lt_03D3
	br label %.Lt_03D3
.Lt_03D3:

	; addrof I

	; memclear I
	%vr1 = bitcast i64* %I.83 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof C

	; memclear C
	%vr3 = bitcast i64* %C.84 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )
	%vr5 = load %C64_T*, %C64_T** %THIS.82
	%vr4 = bitcast %C64_T* %vr5 to %MEMORY_T**

	; addrof vr4
	%vr7 = ptrtoint %MEMORY_T** %vr4 to i64
	%vr8 = inttoptr i64 %vr7 to %MEMORY_T**

	; memclear vr8
	%vr9 = bitcast %MEMORY_T** %vr8 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr9, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr11 = load %C64_T*, %C64_T** %THIS.82
	%vr12 = inttoptr i64 8 to %C64_T*
	%vr10 = add %C64_T* %vr11, %vr12
	%vr13 = bitcast %C64_T* %vr10 to %CPU6510**

	; addrof vr13
	%vr15 = ptrtoint %CPU6510** %vr13 to i64
	%vr16 = inttoptr i64 %vr15 to %CPU6510**

	; memclear vr16
	%vr17 = bitcast %CPU6510** %vr16 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr17, i8 0, i32 8, i32 1, i1 false )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr18 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_GfxImageCreate()
	; arg 1920
	; arg 1080
	; arg 0
	; arg 32
	; arg 0
	%vr26 = call i8* @fb_GfxImageCreate( i32 1920, i32 1080, i32 0, i32 32, i32 0 )

	; store IMAGE := vr26
	store i8* %vr26, i8** @IMAGE

	; call fb_GfxImageCreate()
	; arg 1920
	; arg 1
	; arg 0
	; arg 32
	; arg 0
	%vr32 = call i8* @fb_GfxImageCreate( i32 1920, i32 1, i32 0, i32 32, i32 0 )

	; store RASTER := vr32
	store i8* %vr32, i8** @RASTER

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr38 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR0 := vr38
	store i8* %vr38, i8** @SPR0

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr44 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR1 := vr44
	store i8* %vr44, i8** @SPR1

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr50 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR2 := vr50
	store i8* %vr50, i8** @SPR2

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr56 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR3 := vr56
	store i8* %vr56, i8** @SPR3

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr62 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR4 := vr62
	store i8* %vr62, i8** @SPR4

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr68 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR5 := vr68
	store i8* %vr68, i8** @SPR5

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr74 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR6 := vr74
	store i8* %vr74, i8** @SPR6

	; call fb_GfxImageCreate()
	; arg 82
	; arg 51
	; arg 0
	; arg 32
	; arg 0
	%vr80 = call i8* @fb_GfxImageCreate( i32 82, i32 51, i32 0, i32 32, i32 0 )

	; store SPR7 := vr80
	store i8* %vr80, i8** @SPR7

	; store I := 0
	store i64 0, i64* %I.83

	; label .Lt_03D8
	br label %.Lt_03D8
.Lt_03D8:

	; addrof C
	%vr87 = bitcast i64* %C.84 to i64*

	; call fb_DataReadLongint()
	; arg vr87
	call void @fb_DataReadLongint( i64* %vr87 )

	; conv C => vr88
	%vr89 = load i64, i64* %C.84
	%vr88 = trunc i64 %vr89 to i32

	; conv I => vr90
	%vr91 = load i64, i64* %I.83
	%vr90 = trunc i64 %vr91 to i32

	; call fb_GfxPalette()
	; arg vr90
	; arg vr88
	; arg -1
	; arg -1
	call void @fb_GfxPalette( i32 %vr90, i32 %vr88, i32 -1, i32 -1 )

	; label .Lt_03D6
	br label %.Lt_03D6
.Lt_03D6:

	; bop I + 1
	%vr95 = load i64, i64* %I.83
	%vr94 = add i64 %vr95, 1

	; store I := vr94
	store i64 %vr94, i64* %I.83

	; label .Lt_03D5
	br label %.Lt_03D5
.Lt_03D5:

	; branchbop I <= 15
	%vr97 = load i64, i64* %I.83
	%vr96 = icmp sle i64 %vr97, 15
	br i1 %vr96, label %.Lt_03D8, label %.Lt_03DF
.Lt_03DF:

	; label .Lt_03D7
	br label %.Lt_03D7
.Lt_03D7:

	; call malloc()
	; arg 925496
	%vr98 = call i8* @malloc( i64 925496 )
	%vr100 = bitcast i8* %vr98 to %MEMORY_T*

	; store LT_03D9 := vr100
	store %MEMORY_T* %vr100, %MEMORY_T** %LT_03D9.85

	; branchbop LT_03D9 == 0
	%vr102 = load %MEMORY_T*, %MEMORY_T** %LT_03D9.85
	%vr101 = icmp eq %MEMORY_T* %vr102, 0
	br i1 %vr101, label %.Lt_03DB, label %.Lt_03E0
.Lt_03E0:

	; call ()
	; arg LT_03D9
	%vr103 = load %MEMORY_T*, %MEMORY_T** %LT_03D9.85
	call void @_ZN8MEMORY_TC1Ev( %MEMORY_T* %vr103 )

	; label .Lt_03DB
	br label %.Lt_03DB
.Lt_03DB:

	; deref THIS
	%vr105 = load %C64_T*, %C64_T** %THIS.82

	; store vr105 := LT_03D9
	%vr106 = load %MEMORY_T*, %MEMORY_T** %LT_03D9.85
	%vr107 = ptrtoint %C64_T* %vr105 to i64
	%vr108 = inttoptr i64 %vr107 to %MEMORY_T**
	store %MEMORY_T* %vr106, %MEMORY_T** %vr108

	; call malloc()
	; arg 14728
	%vr109 = call i8* @malloc( i64 14728 )
	%vr111 = bitcast i8* %vr109 to %CPU6510*

	; store LT_03DC := vr111
	store %CPU6510* %vr111, %CPU6510** %LT_03DC.86

	; branchbop LT_03DC == 0
	%vr113 = load %CPU6510*, %CPU6510** %LT_03DC.86
	%vr112 = icmp eq %CPU6510* %vr113, 0
	br i1 %vr112, label %.Lt_03DE, label %.Lt_03E1
.Lt_03E1:

	; deref THIS
	%vr115 = load %C64_T*, %C64_T** %THIS.82

	; call ()
	; arg LT_03DC
	%vr116 = load %CPU6510*, %CPU6510** %LT_03DC.86
	; arg vr115
	%vr117 = ptrtoint %C64_T* %vr115 to i64
	%vr118 = inttoptr i64 %vr117 to %MEMORY_T**
	%vr119 = load %MEMORY_T*, %MEMORY_T** %vr118
	call void @_ZN7CPU6510C1EP8MEMORY_T( %CPU6510* %vr116, %MEMORY_T* %vr119 )

	; label .Lt_03DE
	br label %.Lt_03DE
.Lt_03DE:

	; deref THIS
	%vr121 = load %C64_T*, %C64_T** %THIS.82

	; store vr121+8 := LT_03DC
	%vr122 = load %CPU6510*, %CPU6510** %LT_03DC.86
	%vr123 = ptrtoint %C64_T* %vr121 to i64
	%vr124 = add i64 %vr123, 8
	%vr125 = inttoptr i64 %vr124 to %CPU6510**
	store %CPU6510* %vr122, %CPU6510** %vr125

	; label .Lt_03D4
	br label %.Lt_03D4
.Lt_03D4:
	ret void
}

define void @_ZN5C64_TD1Ev( %C64_T* %THIS.87$ ) nounwind
{

	; paramvar THIS
	%THIS.87 = alloca %C64_T*
	store %C64_T* %THIS.87$, %C64_T** %THIS.87

	; label .Lt_03E2
	br label %.Lt_03E2
.Lt_03E2:

	; deref THIS
	%vr1 = load %C64_T*, %C64_T** %THIS.87

	; branchbop vr1+8 == 0
	%vr3 = ptrtoint %C64_T* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to %CPU6510**
	%vr6 = load %CPU6510*, %CPU6510** %vr5
	%vr2 = icmp eq %CPU6510* %vr6, 0
	br i1 %vr2, label %.Lt_03E4, label %.Lt_03E6
.Lt_03E6:

	; deref THIS
	%vr8 = load %C64_T*, %C64_T** %THIS.87

	; call ()
	; arg vr8+8
	%vr9 = ptrtoint %C64_T* %vr8 to i64
	%vr10 = add i64 %vr9, 8
	%vr11 = inttoptr i64 %vr10 to %CPU6510**
	%vr12 = load %CPU6510*, %CPU6510** %vr11
	call void @_ZN7CPU6510D1Ev( %CPU6510* %vr12 )

	; deref THIS
	%vr14 = load %C64_T*, %C64_T** %THIS.87
	%vr16 = ptrtoint %C64_T* %vr14 to i64
	%vr17 = add i64 %vr16, 8
	%vr18 = inttoptr i64 %vr17 to %CPU6510**
	%vr19 = load %CPU6510*, %CPU6510** %vr18
	%vr15 = bitcast %CPU6510* %vr19 to i8*

	; call free()
	; arg vr15
	call void @free( i8* %vr15 )

	; label .Lt_03E4
	br label %.Lt_03E4
.Lt_03E4:

	; deref THIS
	%vr21 = load %C64_T*, %C64_T** %THIS.87

	; branchbop vr21 == 0
	%vr23 = ptrtoint %C64_T* %vr21 to i64
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	%vr22 = icmp eq %MEMORY_T* %vr25, 0
	br i1 %vr22, label %.Lt_03E5, label %.Lt_03E7
.Lt_03E7:

	; deref THIS
	%vr27 = load %C64_T*, %C64_T** %THIS.87

	; call ()
	; arg vr27
	%vr28 = ptrtoint %C64_T* %vr27 to i64
	%vr29 = inttoptr i64 %vr28 to %MEMORY_T**
	%vr30 = load %MEMORY_T*, %MEMORY_T** %vr29
	call void @_ZN8MEMORY_TD1Ev( %MEMORY_T* %vr30 )

	; deref THIS
	%vr32 = load %C64_T*, %C64_T** %THIS.87
	%vr34 = ptrtoint %C64_T* %vr32 to i64
	%vr35 = inttoptr i64 %vr34 to %MEMORY_T**
	%vr36 = load %MEMORY_T*, %MEMORY_T** %vr35
	%vr33 = bitcast %MEMORY_T* %vr36 to i8*

	; call free()
	; arg vr33
	call void @free( i8* %vr33 )

	; label .Lt_03E5
	br label %.Lt_03E5
.Lt_03E5:

	; call fb_GfxImageDestroy()
	; arg SPR0
	%vr37 = load i8*, i8** @SPR0
	%vr38 = bitcast i8* %vr37 to i8*
	call void @fb_GfxImageDestroy( i8* %vr38 )

	; call fb_GfxImageDestroy()
	; arg SPR1
	%vr39 = load i8*, i8** @SPR1
	%vr40 = bitcast i8* %vr39 to i8*
	call void @fb_GfxImageDestroy( i8* %vr40 )

	; call fb_GfxImageDestroy()
	; arg SPR2
	%vr41 = load i8*, i8** @SPR2
	%vr42 = bitcast i8* %vr41 to i8*
	call void @fb_GfxImageDestroy( i8* %vr42 )

	; call fb_GfxImageDestroy()
	; arg SPR3
	%vr43 = load i8*, i8** @SPR3
	%vr44 = bitcast i8* %vr43 to i8*
	call void @fb_GfxImageDestroy( i8* %vr44 )

	; call fb_GfxImageDestroy()
	; arg SPR4
	%vr45 = load i8*, i8** @SPR4
	%vr46 = bitcast i8* %vr45 to i8*
	call void @fb_GfxImageDestroy( i8* %vr46 )

	; call fb_GfxImageDestroy()
	; arg SPR5
	%vr47 = load i8*, i8** @SPR5
	%vr48 = bitcast i8* %vr47 to i8*
	call void @fb_GfxImageDestroy( i8* %vr48 )

	; call fb_GfxImageDestroy()
	; arg SPR6
	%vr49 = load i8*, i8** @SPR6
	%vr50 = bitcast i8* %vr49 to i8*
	call void @fb_GfxImageDestroy( i8* %vr50 )

	; call fb_GfxImageDestroy()
	; arg SPR7
	%vr51 = load i8*, i8** @SPR7
	%vr52 = bitcast i8* %vr51 to i8*
	call void @fb_GfxImageDestroy( i8* %vr52 )

	; call fb_GfxImageDestroy()
	; arg IMAGE
	%vr53 = load i8*, i8** @IMAGE
	%vr54 = bitcast i8* %vr53 to i8*
	call void @fb_GfxImageDestroy( i8* %vr54 )

	; call fb_GfxImageDestroy()
	; arg RASTER
	%vr55 = load i8*, i8** @RASTER
	%vr56 = bitcast i8* %vr55 to i8*
	call void @fb_GfxImageDestroy( i8* %vr56 )

	; call fb_Sleep()
	; arg 1000
	call void @fb_Sleep( i32 1000 )

	; label .Lt_03E3
	br label %.Lt_03E3
.Lt_03E3:
	ret void
}

define void @_ZN8MEMORY_TC1Ev( %MEMORY_T* %THIS.88$ ) nounwind
{

	; paramvar THIS
	%THIS.88 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.88$, %MEMORY_T** %THIS.88

	; localvar I
	%I.89 = alloca i64

	; localvar TMP
	%TMP.90 = alloca i8

	; localvar MEM
	%MEM.91 = alloca %FBSTRING

	; label .Lt_03E8
	br label %.Lt_03E8
.Lt_03E8:
	%vr1 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr0 = bitcast %MEMORY_T* %vr1 to double*

	; addrof vr0
	%vr3 = ptrtoint double* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to double*

	; memclear vr4
	%vr5 = bitcast double* %vr4 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 524280, i32 1, i1 false )

	; bop THIS + 524280
	%vr7 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr8 = inttoptr i64 524280 to %MEMORY_T*
	%vr6 = add %MEMORY_T* %vr7, %vr8
	%vr9 = bitcast %MEMORY_T* %vr6 to double*

	; addrof vr9
	%vr11 = ptrtoint double* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to double*

	; memclear vr12
	%vr13 = bitcast double* %vr12 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr13, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 655352
	%vr15 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr16 = inttoptr i64 655352 to %MEMORY_T*
	%vr14 = add %MEMORY_T* %vr15, %vr16
	%vr17 = bitcast %MEMORY_T* %vr14 to double*

	; addrof vr17
	%vr19 = ptrtoint double* %vr17 to i64
	%vr20 = inttoptr i64 %vr19 to double*

	; memclear vr20
	%vr21 = bitcast double* %vr20 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 786424
	%vr23 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr24 = inttoptr i64 786424 to %MEMORY_T*
	%vr22 = add %MEMORY_T* %vr23, %vr24
	%vr25 = bitcast %MEMORY_T* %vr22 to double*

	; addrof vr25
	%vr27 = ptrtoint double* %vr25 to i64
	%vr28 = inttoptr i64 %vr27 to double*

	; memclear vr28
	%vr29 = bitcast double* %vr28 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr29, i8 0, i32 131072, i32 1, i1 false )

	; bop THIS + 917496
	%vr31 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr32 = inttoptr i64 917496 to %MEMORY_T*
	%vr30 = add %MEMORY_T* %vr31, %vr32
	%vr33 = bitcast %MEMORY_T* %vr30 to double*

	; addrof vr33
	%vr35 = ptrtoint double* %vr33 to i64
	%vr36 = inttoptr i64 %vr35 to double*

	; memclear vr36
	%vr37 = bitcast double* %vr36 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr37, i8 0, i32 8000, i32 1, i1 false )

	; conv SYS_OFFSET => vr38
	%vr39 = load i32, i32* @SYS_OFFSET
	%vr38 = sext i32 %vr39 to i64

	; bop vr38 + 2
	%vr40 = add i64 %vr38, 2
	%vr41 = bitcast i64 %vr40 to i64

	; call POKE64()
	; arg THIS
	%vr42 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr41
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr42, i64 %vr41, i64 255 )

	; conv SYS_OFFSET => vr43
	%vr44 = load i32, i32* @SYS_OFFSET
	%vr43 = sext i32 %vr44 to i64

	; bop vr43 + 3
	%vr45 = add i64 %vr43, 3
	%vr46 = bitcast i64 %vr45 to i64

	; call POKE64()
	; arg THIS
	%vr47 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr46
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr47, i64 %vr46, i64 255 )

	; conv SYS_OFFSET => vr48
	%vr49 = load i32, i32* @SYS_OFFSET
	%vr48 = sext i32 %vr49 to i64

	; bop vr48 + 4
	%vr50 = add i64 %vr48, 4
	%vr51 = bitcast i64 %vr50 to i64

	; call POKE64()
	; arg THIS
	%vr52 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr51
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr52, i64 %vr51, i64 255 )

	; conv SYS_OFFSET => vr53
	%vr54 = load i32, i32* @SYS_OFFSET
	%vr53 = sext i32 %vr54 to i64

	; bop vr53 + 5
	%vr55 = add i64 %vr53, 5
	%vr56 = bitcast i64 %vr55 to i64

	; call POKE64()
	; arg THIS
	%vr57 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr56
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr57, i64 %vr56, i64 255 )

	; conv SYS_OFFSET => vr58
	%vr59 = load i32, i32* @SYS_OFFSET
	%vr58 = sext i32 %vr59 to i64

	; bop vr58 + 9
	%vr60 = add i64 %vr58, 9
	%vr61 = bitcast i64 %vr60 to i64

	; call POKE64()
	; arg THIS
	%vr62 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr61
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr62, i64 %vr61, i64 255 )

	; call POKE64()
	; arg THIS
	%vr63 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 53272
	; arg 31
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr63, i64 53272, i64 31 )

	; conv SYS_OFFSET => vr64
	%vr65 = load i32, i32* @SYS_OFFSET
	%vr64 = sext i32 %vr65 to i64

	; bop vr64 + 231
	%vr66 = add i64 %vr64, 231
	%vr67 = bitcast i64 %vr66 to i64

	; call POKE64()
	; arg THIS
	%vr68 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr67
	; arg 1
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr68, i64 %vr67, i64 1 )

	; conv SYS_OFFSET => vr69
	%vr70 = load i32, i32* @SYS_OFFSET
	%vr69 = sext i32 %vr70 to i64

	; bop vr69 + 232
	%vr71 = add i64 %vr69, 232
	%vr72 = bitcast i64 %vr71 to i64

	; call POKE64()
	; arg THIS
	%vr73 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr72
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr73, i64 %vr72, i64 0 )

	; conv SYS_OFFSET => vr74
	%vr75 = load i32, i32* @SYS_OFFSET
	%vr74 = sext i32 %vr75 to i64

	; bop vr74 + 233
	%vr76 = add i64 %vr74, 233
	%vr77 = bitcast i64 %vr76 to i64

	; call POKE64()
	; arg THIS
	%vr78 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr77
	; arg 7
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr78, i64 %vr77, i64 7 )

	; conv SYS_OFFSET => vr79
	%vr80 = load i32, i32* @SYS_OFFSET
	%vr79 = sext i32 %vr80 to i64

	; bop vr79 + 234
	%vr81 = add i64 %vr79, 234
	%vr82 = bitcast i64 %vr81 to i64

	; call POKE64()
	; arg THIS
	%vr83 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg vr82
	; arg 7
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr83, i64 %vr82, i64 7 )

	; addrof I

	; memclear I
	%vr85 = bitcast i64* %I.89 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr85, i8 0, i32 8, i32 1, i1 false )

	; addrof TMP

	; memclear TMP
	%vr87 = bitcast i8* %TMP.90 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr87, i8 0, i32 1, i32 1, i1 false )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_03EA
	%vr89 = bitcast i8* bitcast ([18 x i8]* @Lt_03EA to i8*) to i8*
	; arg 17
	%vr88 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr89, i64 17 )

	; call fb_FileOpen()
	; arg vr88
	%vr92 = bitcast %FBSTRING* %vr88 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr91 = call i32 @fb_FileOpen( %FBSTRING* %vr92, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; store I := 0
	store i64 0, i64* %I.89

	; label .Lt_03EE
	br label %.Lt_03EE
.Lt_03EE:

	; addrof TMP
	%vr99 = bitcast i8* %TMP.90 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr99
	; arg 1
	%vr100 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr99, i64 1 )

	; conv TMP => vr104
	%vr105 = load i8, i8* %TMP.90
	%vr104 = uitofp i8 %vr105 to double

	; bop I SHL 3
	%vr107 = load i64, i64* %I.89
	%vr106 = shl i64 %vr107, 3

	; bop THIS + vr106
	%vr109 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr110 = inttoptr i64 %vr106 to %MEMORY_T*
	%vr108 = add %MEMORY_T* %vr109, %vr110

	; store vr108+655352 := vr104
	%vr111 = ptrtoint %MEMORY_T* %vr108 to i64
	%vr112 = add i64 %vr111, 655352
	%vr113 = inttoptr i64 %vr112 to double*
	store double %vr104, double* %vr113

	; label .Lt_03EC
	br label %.Lt_03EC
.Lt_03EC:

	; bop I + 1
	%vr115 = load i64, i64* %I.89
	%vr114 = add i64 %vr115, 1

	; store I := vr114
	store i64 %vr114, i64* %I.89

	; label .Lt_03EB
	br label %.Lt_03EB
.Lt_03EB:

	; branchbop I <= 8191
	%vr117 = load i64, i64* %I.89
	%vr116 = icmp sle i64 %vr117, 8191
	br i1 %vr116, label %.Lt_03EE, label %.Lt_0409
.Lt_0409:

	; label .Lt_03ED
	br label %.Lt_03ED
.Lt_03ED:

	; store I := 0
	store i64 0, i64* %I.89

	; label .Lt_03F2
	br label %.Lt_03F2
.Lt_03F2:

	; addrof TMP
	%vr119 = bitcast i8* %TMP.90 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr119
	; arg 1
	%vr120 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr119, i64 1 )

	; conv TMP => vr124
	%vr125 = load i8, i8* %TMP.90
	%vr124 = uitofp i8 %vr125 to double

	; bop I SHL 3
	%vr127 = load i64, i64* %I.89
	%vr126 = shl i64 %vr127, 3

	; bop THIS + vr126
	%vr129 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr130 = inttoptr i64 %vr126 to %MEMORY_T*
	%vr128 = add %MEMORY_T* %vr129, %vr130

	; store vr128+524280 := vr124
	%vr131 = ptrtoint %MEMORY_T* %vr128 to i64
	%vr132 = add i64 %vr131, 524280
	%vr133 = inttoptr i64 %vr132 to double*
	store double %vr124, double* %vr133

	; label .Lt_03F0
	br label %.Lt_03F0
.Lt_03F0:

	; bop I + 1
	%vr135 = load i64, i64* %I.89
	%vr134 = add i64 %vr135, 1

	; store I := vr134
	store i64 %vr134, i64* %I.89

	; label .Lt_03EF
	br label %.Lt_03EF
.Lt_03EF:

	; branchbop I <= 8191
	%vr137 = load i64, i64* %I.89
	%vr136 = icmp sle i64 %vr137, 8191
	br i1 %vr136, label %.Lt_03F2, label %.Lt_040A
.Lt_040A:

	; label .Lt_03F1
	br label %.Lt_03F1
.Lt_03F1:

	; call fb_FileClose()
	; arg 1
	%vr138 = call i32 @fb_FileClose( i32 1 )

	; store I := 0
	store i64 0, i64* %I.89

	; label .Lt_03F6
	br label %.Lt_03F6
.Lt_03F6:

	; bop I SHL 3
	%vr141 = load i64, i64* %I.89
	%vr140 = shl i64 %vr141, 3

	; bop THIS + vr140
	%vr143 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr144 = inttoptr i64 %vr140 to %MEMORY_T*
	%vr142 = add %MEMORY_T* %vr143, %vr144

	; store vr142+786424 := 0
	%vr145 = ptrtoint %MEMORY_T* %vr142 to i64
	%vr146 = add i64 %vr145, 786424
	%vr147 = inttoptr i64 %vr146 to double*
	store double 0x0000000000000000, double* %vr147

	; label .Lt_03F4
	br label %.Lt_03F4
.Lt_03F4:

	; bop I + 1
	%vr149 = load i64, i64* %I.89
	%vr148 = add i64 %vr149, 1

	; store I := vr148
	store i64 %vr148, i64* %I.89

	; label .Lt_03F3
	br label %.Lt_03F3
.Lt_03F3:

	; branchbop I <= 8191
	%vr151 = load i64, i64* %I.89
	%vr150 = icmp sle i64 %vr151, 8191
	br i1 %vr150, label %.Lt_03F6, label %.Lt_040B
.Lt_040B:

	; label .Lt_03F5
	br label %.Lt_03F5
.Lt_03F5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_03F7
	%vr153 = bitcast i8* bitcast ([18 x i8]* @Lt_03F7 to i8*) to i8*
	; arg 17
	%vr152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr153, i64 17 )

	; call fb_FileOpen()
	; arg vr152
	%vr156 = bitcast %FBSTRING* %vr152 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr155 = call i32 @fb_FileOpen( %FBSTRING* %vr156, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; localvar LT_03F8
	%LT_03F8.92 = alloca i64

	; store I := 0
	store i64 0, i64* %I.89

	; call fb_FileSize()
	; arg 1
	%vr162 = call i64 @fb_FileSize( i32 1 )

	; store LT_03F8 := vr162
	store i64 %vr162, i64* %LT_03F8.92

	; goto .Lt_03F9
	br label %.Lt_03F9
.Lt_040C:

	; label .Lt_03FC
	br label %.Lt_03FC
.Lt_03FC:

	; addrof TMP
	%vr167 = bitcast i8* %TMP.90 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr167
	; arg 1
	%vr168 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr167, i64 1 )

	; conv TMP => vr172
	%vr173 = load i8, i8* %TMP.90
	%vr172 = uitofp i8 %vr173 to double

	; bop I SHL 3
	%vr175 = load i64, i64* %I.89
	%vr174 = shl i64 %vr175, 3

	; bop THIS + vr174
	%vr177 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr178 = inttoptr i64 %vr174 to %MEMORY_T*
	%vr176 = add %MEMORY_T* %vr177, %vr178

	; store vr176+786424 := vr172
	%vr179 = ptrtoint %MEMORY_T* %vr176 to i64
	%vr180 = add i64 %vr179, 786424
	%vr181 = inttoptr i64 %vr180 to double*
	store double %vr172, double* %vr181

	; label .Lt_03FA
	br label %.Lt_03FA
.Lt_03FA:

	; bop I + 1
	%vr183 = load i64, i64* %I.89
	%vr182 = add i64 %vr183, 1

	; store I := vr182
	store i64 %vr182, i64* %I.89

	; label .Lt_03F9
	br label %.Lt_03F9
.Lt_03F9:

	; branchbop I <= LT_03F8
	%vr185 = load i64, i64* %I.89
	%vr186 = load i64, i64* %LT_03F8.92
	%vr184 = icmp sle i64 %vr185, %vr186
	br i1 %vr184, label %.Lt_03FC, label %.Lt_040D
.Lt_040D:

	; label .Lt_03FB
	br label %.Lt_03FB
.Lt_03FB:

	; call fb_FileClose()
	; arg 1
	%vr187 = call i32 @fb_FileClose( i32 1 )

	; call POKE64()
	; arg THIS
	%vr189 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 0
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr189, i64 0, i64 255 )

	; call POKE64()
	; arg THIS
	%vr190 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 1
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr190, i64 1, i64 255 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr192 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr191 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr192, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr194 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr195 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr191
	%vr198 = bitcast %FBSTRING* %vr191 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr194, float %vr195, i32 4278190080, i32 0, %FBSTRING* %vr198, i32 0, i32 1073741828 )

	; call POKE64()
	; arg THIS
	%vr201 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49316
	; arg 169
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr201, i64 49316, i64 169 )

	; call POKE64()
	; arg THIS
	%vr202 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49317
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr202, i64 49317, i64 0 )

	; call POKE64()
	; arg THIS
	%vr203 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49318
	; arg 141
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr203, i64 49318, i64 141 )

	; call POKE64()
	; arg THIS
	%vr204 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49319
	; arg 163
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr204, i64 49319, i64 163 )

	; call POKE64()
	; arg THIS
	%vr205 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49320
	; arg 192
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr205, i64 49320, i64 192 )

	; call POKE64()
	; arg THIS
	%vr206 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	; arg 49321
	; arg 96
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr206, i64 49321, i64 96 )

	; addrof MEM

	; memclear MEM
	%vr208 = bitcast %FBSTRING* %MEM.91 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr208, i8 0, i32 24, i32 1, i1 false )

	; deref THIS
	%vr210 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; conv vr210 => vr211
	%vr213 = ptrtoint %MEMORY_T* %vr210 to i64
	%vr214 = inttoptr i64 %vr213 to double*
	%vr215 = load double, double* %vr214
	%vr212 = call double @llvm.nearbyint.f64(double %vr215)
	%vr211 = fptosi double %vr212 to i32

	; call fb_GetMemAvail()
	; arg vr211
	%vr216 = call i64 @fb_GetMemAvail( i32 %vr211 )

	; conv vr216 => vr217
	%vr217 = uitofp i64 %vr216 to double

	; bop vr217 / 1073741824
	%vr218 = fdiv double %vr217, 0x41D0000000000000

	; uop FLOOR vr218
	%vr219 = call double @llvm.floor.f64(double %vr218)

	; call fb_DoubleToStr()
	; arg vr219
	%vr221 = fpext double %vr219 to double
	%vr220 = call %FBSTRING* @fb_DoubleToStr( double %vr221 )

	; addrof MEM
	%vr223 = bitcast %FBSTRING* %MEM.91 to i8*

	; call fb_StrAssign()
	; arg vr223
	; arg -1
	; arg vr220
	%vr226 = bitcast %FBSTRING* %vr220 to i8*
	; arg -1
	; arg 0
	%vr224 = call %FBSTRING* @fb_StrAssign( i8* %vr223, i64 -1, i8* %vr226, i64 -1, i32 0 )

	; localvar LT_03FE
	%LT_03FE.93 = alloca i64

	; addrof MEM
	%vr230 = bitcast %FBSTRING* %MEM.91 to i8*

	; call fb_StrLen()
	; arg vr230
	; arg -1
	%vr231 = call i64 @fb_StrLen( i8* %vr230, i64 -1 )

	; store LT_03FE := vr231
	store i64 %vr231, i64* %LT_03FE.93

	; branchbop LT_03FE <> 1
	%vr234 = load i64, i64* %LT_03FE.93
	%vr233 = icmp ne i64 %vr234, 1
	br i1 %vr233, label %.Lt_03FF, label %.Lt_040E
.Lt_040E:

	; label .Lt_0400
	br label %.Lt_0400
.Lt_0400:

	; addrof MEM
	%vr236 = bitcast %FBSTRING* %MEM.91 to %FBSTRING*

	; call fb_ASC()
	; arg vr236
	; arg 1
	%vr237 = call i32 @fb_ASC( %FBSTRING* %vr236, i64 1 )

	; conv vr237 => vr239
	%vr239 = sext i32 %vr237 to i64

	; bop vr239 AND 63
	%vr240 = and i64 %vr239, 63

	; conv vr240 => vr241
	%vr241 = sitofp i64 %vr240 to double

	; deref THIS
	%vr243 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr243+533712 := vr241
	%vr244 = ptrtoint %MEMORY_T* %vr243 to i64
	%vr245 = add i64 %vr244, 533712
	%vr246 = inttoptr i64 %vr245 to double*
	store double %vr241, double* %vr246

	; deref THIS
	%vr248 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr248+533720 := 71
	%vr249 = ptrtoint %MEMORY_T* %vr248 to i64
	%vr250 = add i64 %vr249, 533720
	%vr251 = inttoptr i64 %vr250 to double*
	store double 0x4051C00000000000, double* %vr251

	; deref THIS
	%vr253 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr253+533728 := 66
	%vr254 = ptrtoint %MEMORY_T* %vr253 to i64
	%vr255 = add i64 %vr254, 533728
	%vr256 = inttoptr i64 %vr255 to double*
	store double 0x4050800000000000, double* %vr256

	; goto .Lt_03FD
	br label %.Lt_03FD
.Lt_040F:

	; label .Lt_03FF
	br label %.Lt_03FF
.Lt_03FF:

	; branchbop LT_03FE <> 2
	%vr258 = load i64, i64* %LT_03FE.93
	%vr257 = icmp ne i64 %vr258, 2
	br i1 %vr257, label %.Lt_0401, label %.Lt_0410
.Lt_0410:

	; label .Lt_0402
	br label %.Lt_0402
.Lt_0402:

	; addrof MEM
	%vr260 = bitcast %FBSTRING* %MEM.91 to %FBSTRING*

	; call fb_StrMid()
	; arg vr260
	; arg 1
	; arg 1
	%vr261 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr260, i64 1, i64 1 )

	; call fb_ASC()
	; arg vr261
	%vr265 = bitcast %FBSTRING* %vr261 to %FBSTRING*
	; arg 1
	%vr264 = call i32 @fb_ASC( %FBSTRING* %vr265, i64 1 )

	; conv vr264 => vr267
	%vr267 = sext i32 %vr264 to i64

	; bop vr267 AND 63
	%vr268 = and i64 %vr267, 63

	; conv vr268 => vr269
	%vr269 = sitofp i64 %vr268 to double

	; deref THIS
	%vr271 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr271+533712 := vr269
	%vr272 = ptrtoint %MEMORY_T* %vr271 to i64
	%vr273 = add i64 %vr272, 533712
	%vr274 = inttoptr i64 %vr273 to double*
	store double %vr269, double* %vr274

	; addrof MEM
	%vr276 = bitcast %FBSTRING* %MEM.91 to %FBSTRING*

	; call fb_StrMid()
	; arg vr276
	; arg 2
	; arg 1
	%vr277 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr276, i64 2, i64 1 )

	; call fb_ASC()
	; arg vr277
	%vr281 = bitcast %FBSTRING* %vr277 to %FBSTRING*
	; arg 1
	%vr280 = call i32 @fb_ASC( %FBSTRING* %vr281, i64 1 )

	; conv vr280 => vr283
	%vr283 = sext i32 %vr280 to i64

	; bop vr283 AND 63
	%vr284 = and i64 %vr283, 63

	; conv vr284 => vr285
	%vr285 = sitofp i64 %vr284 to double

	; deref THIS
	%vr287 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr287+533720 := vr285
	%vr288 = ptrtoint %MEMORY_T* %vr287 to i64
	%vr289 = add i64 %vr288, 533720
	%vr290 = inttoptr i64 %vr289 to double*
	store double %vr285, double* %vr290

	; deref THIS
	%vr292 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr292+533728 := 71
	%vr293 = ptrtoint %MEMORY_T* %vr292 to i64
	%vr294 = add i64 %vr293, 533728
	%vr295 = inttoptr i64 %vr294 to double*
	store double 0x4051C00000000000, double* %vr295

	; deref THIS
	%vr297 = load %MEMORY_T*, %MEMORY_T** %THIS.88

	; store vr297+533736 := 66
	%vr298 = ptrtoint %MEMORY_T* %vr297 to i64
	%vr299 = add i64 %vr298, 533736
	%vr300 = inttoptr i64 %vr299 to double*
	store double 0x4050800000000000, double* %vr300
	%vr301 = bitcast i8* bitcast ([12 x i8]* @Lt_0403 to i8*) to i8*

	; addrof MEM
	%vr303 = bitcast %FBSTRING* %MEM.91 to i8*

	; call fb_StrAssign()
	; arg vr303
	; arg -1
	; arg vr301
	; arg 12
	; arg 0
	%vr304 = call %FBSTRING* @fb_StrAssign( i8* %vr303, i64 -1, i8* %vr301, i64 12, i32 0 )

	; localvar A
	%A.94 = alloca i64

	; localvar LT_0404
	%LT_0404.95 = alloca i64

	; store A := 1
	store i64 1, i64* %A.94

	; addrof MEM
	%vr309 = bitcast %FBSTRING* %MEM.91 to i8*

	; call fb_StrLen()
	; arg vr309
	; arg -1
	%vr310 = call i64 @fb_StrLen( i8* %vr309, i64 -1 )

	; store LT_0404 := vr310
	store i64 %vr310, i64* %LT_0404.95

	; goto .Lt_0405
	br label %.Lt_0405
.Lt_0411:

	; label .Lt_0408
	br label %.Lt_0408
.Lt_0408:

	; addrof MEM
	%vr313 = bitcast %FBSTRING* %MEM.91 to %FBSTRING*

	; call fb_StrMid()
	; arg vr313
	; arg A
	%vr315 = load i64, i64* %A.94
	; arg 1
	%vr314 = call %FBSTRING* @fb_StrMid( %FBSTRING* %vr313, i64 %vr315, i64 1 )

	; call fb_ASC()
	; arg vr314
	%vr319 = bitcast %FBSTRING* %vr314 to %FBSTRING*
	; arg 1
	%vr318 = call i32 @fb_ASC( %FBSTRING* %vr319, i64 1 )

	; conv vr318 => vr321
	%vr321 = uitofp i32 %vr318 to double

	; bop A SHL 3
	%vr323 = load i64, i64* %A.94
	%vr322 = shl i64 %vr323, 3

	; bop THIS + vr322
	%vr325 = load %MEMORY_T*, %MEMORY_T** %THIS.88
	%vr326 = inttoptr i64 %vr322 to %MEMORY_T*
	%vr324 = add %MEMORY_T* %vr325, %vr326

	; store vr324+533736 := vr321
	%vr327 = ptrtoint %MEMORY_T* %vr324 to i64
	%vr328 = add i64 %vr327, 533736
	%vr329 = inttoptr i64 %vr328 to double*
	store double %vr321, double* %vr329

	; label .Lt_0406
	br label %.Lt_0406
.Lt_0406:

	; bop A + 1
	%vr331 = load i64, i64* %A.94
	%vr330 = add i64 %vr331, 1

	; store A := vr330
	store i64 %vr330, i64* %A.94

	; label .Lt_0405
	br label %.Lt_0405
.Lt_0405:

	; branchbop A <= LT_0404
	%vr333 = load i64, i64* %A.94
	%vr334 = load i64, i64* %LT_0404.95
	%vr332 = icmp sle i64 %vr333, %vr334
	br i1 %vr332, label %.Lt_0408, label %.Lt_0412
.Lt_0412:

	; label .Lt_0407
	br label %.Lt_0407
.Lt_0407:

	; label .Lt_0401
	br label %.Lt_0401
.Lt_0401:

	; label .Lt_03FD
	br label %.Lt_03FD
.Lt_03FD:

	; addrof MEM
	%vr336 = bitcast %FBSTRING* %MEM.91 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr336
	call void @fb_StrDelete( %FBSTRING* %vr336 )

	; label .Lt_03E9
	br label %.Lt_03E9
.Lt_03E9:
	ret void
}

define void @_ZN8MEMORY_TD1Ev( %MEMORY_T* %THIS.96$ ) nounwind
{

	; paramvar THIS
	%THIS.96 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.96$, %MEMORY_T** %THIS.96

	; label .Lt_0413
	br label %.Lt_0413
.Lt_0413:

	; label .Lt_0414
	br label %.Lt_0414
.Lt_0414:
	ret void
}

define i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %THIS.97$, i64 %ADR.98$ ) nounwind
{

	; paramvar THIS
	%THIS.97 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.97$, %MEMORY_T** %THIS.97

	; paramvar ADR
	%ADR.98 = alloca i64
	store i64 %ADR.98$, i64* %ADR.98

	; localvar fb$result
	%fb$result.99 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.99 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_0415
	br label %.Lt_0415
.Lt_0415:

	; branchbop ADR < 57344
	%vr4 = load i64, i64* %ADR.98
	%vr3 = icmp slt i64 %vr4, 57344
	br i1 %vr3, label %.Lt_0418, label %.Lt_0423
.Lt_0423:

	; branchbop ADR > 65535
	%vr8 = load i64, i64* %ADR.98
	%vr7 = icmp sgt i64 %vr8, 65535
	br i1 %vr7, label %.Lt_0418, label %.Lt_0424
.Lt_0424:

	; label .Lt_0419
	br label %.Lt_0419
.Lt_0419:

	; bop ADR + -57344
	%vr12 = load i64, i64* %ADR.98
	%vr11 = add i64 %vr12, -57344
	%vr14 = bitcast i64 %vr11 to i64

	; bop vr14 SHL 3
	%vr15 = shl i64 %vr14, 3

	; bop THIS + vr15
	%vr17 = load %MEMORY_T*, %MEMORY_T** %THIS.97
	%vr18 = inttoptr i64 %vr15 to %MEMORY_T*
	%vr16 = add %MEMORY_T* %vr17, %vr18

	; conv vr16+524280 => vr19
	%vr21 = ptrtoint %MEMORY_T* %vr16 to i64
	%vr22 = add i64 %vr21, 524280
	%vr23 = inttoptr i64 %vr22 to double*
	%vr24 = load double, double* %vr23
	%vr20 = call double @llvm.nearbyint.f64(double %vr24)
	%vr19 = fptoui double %vr20 to i64

	; store fb$result := vr19
	store i64 %vr19, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_0425:

	; goto .Lt_0417
	br label %.Lt_0417
.Lt_0426:

	; label .Lt_0418
	br label %.Lt_0418
.Lt_0418:

	; branchbop ADR < 40960
	%vr27 = load i64, i64* %ADR.98
	%vr26 = icmp slt i64 %vr27, 40960
	br i1 %vr26, label %.Lt_041A, label %.Lt_0427
.Lt_0427:

	; branchbop ADR > 49151
	%vr31 = load i64, i64* %ADR.98
	%vr30 = icmp sgt i64 %vr31, 49151
	br i1 %vr30, label %.Lt_041A, label %.Lt_0428
.Lt_0428:

	; label .Lt_041B
	br label %.Lt_041B
.Lt_041B:

	; bop ADR + -40960
	%vr35 = load i64, i64* %ADR.98
	%vr34 = add i64 %vr35, -40960
	%vr37 = bitcast i64 %vr34 to i64

	; bop vr37 SHL 3
	%vr38 = shl i64 %vr37, 3

	; bop THIS + vr38
	%vr40 = load %MEMORY_T*, %MEMORY_T** %THIS.97
	%vr41 = inttoptr i64 %vr38 to %MEMORY_T*
	%vr39 = add %MEMORY_T* %vr40, %vr41

	; conv vr39+655352 => vr42
	%vr44 = ptrtoint %MEMORY_T* %vr39 to i64
	%vr45 = add i64 %vr44, 655352
	%vr46 = inttoptr i64 %vr45 to double*
	%vr47 = load double, double* %vr46
	%vr43 = call double @llvm.nearbyint.f64(double %vr47)
	%vr42 = fptoui double %vr43 to i64

	; store fb$result := vr42
	store i64 %vr42, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_0429:

	; goto .Lt_0417
	br label %.Lt_0417
.Lt_042A:

	; label .Lt_041A
	br label %.Lt_041A
.Lt_041A:

	; branchbop ADR < 55296
	%vr50 = load i64, i64* %ADR.98
	%vr49 = icmp slt i64 %vr50, 55296
	br i1 %vr49, label %.Lt_041C, label %.Lt_042B
.Lt_042B:

	; branchbop ADR > 56319
	%vr54 = load i64, i64* %ADR.98
	%vr53 = icmp sgt i64 %vr54, 56319
	br i1 %vr53, label %.Lt_041C, label %.Lt_042C
.Lt_042C:

	; label .Lt_041D
	br label %.Lt_041D
.Lt_041D:

	; bop ADR + -55296
	%vr58 = load i64, i64* %ADR.98
	%vr57 = add i64 %vr58, -55296
	%vr60 = bitcast i64 %vr57 to i64

	; bop vr60 SHL 3
	%vr61 = shl i64 %vr60, 3

	; bop THIS + vr61
	%vr63 = load %MEMORY_T*, %MEMORY_T** %THIS.97
	%vr64 = inttoptr i64 %vr61 to %MEMORY_T*
	%vr62 = add %MEMORY_T* %vr63, %vr64

	; conv vr62+786424 => vr65
	%vr67 = ptrtoint %MEMORY_T* %vr62 to i64
	%vr68 = add i64 %vr67, 786424
	%vr69 = inttoptr i64 %vr68 to double*
	%vr70 = load double, double* %vr69
	%vr66 = call double @llvm.nearbyint.f64(double %vr70)
	%vr65 = fptoui double %vr66 to i64

	; store fb$result := vr65
	store i64 %vr65, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_042D:

	; goto .Lt_0417
	br label %.Lt_0417
.Lt_042E:

	; label .Lt_041C
	br label %.Lt_041C
.Lt_041C:

	; branchbop ADR < 53248
	%vr73 = load i64, i64* %ADR.98
	%vr72 = icmp slt i64 %vr73, 53248
	br i1 %vr72, label %.Lt_041E, label %.Lt_042F
.Lt_042F:

	; branchbop ADR > 54271
	%vr77 = load i64, i64* %ADR.98
	%vr76 = icmp sgt i64 %vr77, 54271
	br i1 %vr76, label %.Lt_041E, label %.Lt_0430
.Lt_0430:

	; label .Lt_041F
	br label %.Lt_041F
.Lt_041F:

	; localvar REG
	%REG.100 = alloca i64

	; bop ADR AND 63
	%vr81 = load i64, i64* %ADR.98
	%vr80 = and i64 %vr81, 63
	%vr83 = bitcast i64 %vr80 to i64

	; store REG := vr83
	store i64 %vr83, i64* %REG.100

	; branchbop REG <> 18
	%vr85 = load i64, i64* %REG.100
	%vr84 = icmp ne i64 %vr85, 18
	br i1 %vr84, label %.Lt_0421, label %.Lt_0431
.Lt_0431:

	; store fb$result := 0
	store i64 0, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_0432:

	; goto .Lt_0420
	br label %.Lt_0420
.Lt_0433:

	; label .Lt_0421
	br label %.Lt_0421
.Lt_0421:

	; store fb$result := 255
	store i64 255, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_0434:

	; label .Lt_0420
	br label %.Lt_0420
.Lt_0420:

	; goto .Lt_0417
	br label %.Lt_0417
.Lt_0435:

	; label .Lt_041E
	br label %.Lt_041E
.Lt_041E:
	%vr87 = load i64, i64* %ADR.98
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 SHL 3
	%vr88 = shl i64 %vr86, 3

	; bop THIS + vr88
	%vr90 = load %MEMORY_T*, %MEMORY_T** %THIS.97
	%vr91 = inttoptr i64 %vr88 to %MEMORY_T*
	%vr89 = add %MEMORY_T* %vr90, %vr91

	; conv vr89 => vr92
	%vr94 = ptrtoint %MEMORY_T* %vr89 to i64
	%vr95 = inttoptr i64 %vr94 to double*
	%vr96 = load double, double* %vr95
	%vr93 = call double @llvm.nearbyint.f64(double %vr96)
	%vr92 = fptoui double %vr93 to i64

	; store fb$result := vr92
	store i64 %vr92, i64* %fb$result.99

	; goto .Lt_0416
	br label %.Lt_0416
.Lt_0436:

	; label .Lt_0422
	br label %.Lt_0422
.Lt_0422:

	; label .Lt_0417
	br label %.Lt_0417
.Lt_0417:

	; label .Lt_0416
	br label %.Lt_0416
.Lt_0416:

	; loadres fb$result
	%vr98 = load i64, i64* %fb$result.99
	ret i64 %vr98
}

define void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %THIS.101$, i64 %ADR.102$, i64 %V.103$ ) nounwind
{

	; paramvar THIS
	%THIS.101 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.101$, %MEMORY_T** %THIS.101

	; paramvar ADR
	%ADR.102 = alloca i64
	store i64 %ADR.102$, i64* %ADR.102

	; paramvar V
	%V.103 = alloca i64
	store i64 %V.103$, i64* %V.103

	; label .Lt_0437
	br label %.Lt_0437
.Lt_0437:

	; conv V => vr0
	%vr1 = load i64, i64* %V.103
	%vr0 = uitofp i64 %vr1 to double
	%vr3 = load i64, i64* %ADR.102
	%vr2 = bitcast i64 %vr3 to i64

	; bop vr2 SHL 3
	%vr4 = shl i64 %vr2, 3

	; bop THIS + vr4
	%vr6 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr7 = inttoptr i64 %vr4 to %MEMORY_T*
	%vr5 = add %MEMORY_T* %vr6, %vr7

	; store vr5 := vr0
	%vr8 = ptrtoint %MEMORY_T* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to double*
	store double %vr0, double* %vr9

	; bop ADR >= 55296
	%vr12 = load i64, i64* %ADR.102
	%vr13 = bitcast i64 %vr12 to i64
	%vr14 = bitcast i64 55296 to i64
	%vr11 = icmp sge i64 %vr13, %vr14
	%vr15 = sext i1 %vr11 to i64

	; bop ADR <= 56319
	%vr18 = load i64, i64* %ADR.102
	%vr19 = bitcast i64 %vr18 to i64
	%vr20 = bitcast i64 56319 to i64
	%vr17 = icmp sle i64 %vr19, %vr20
	%vr21 = sext i1 %vr17 to i64

	; bop vr15 AND vr21
	%vr22 = and i64 %vr15, %vr21

	; branchbop vr22 == 0
	%vr23 = icmp eq i64 %vr22, 0
	br i1 %vr23, label %.Lt_043A, label %.Lt_0E37
.Lt_0E37:

	; bop ADR + -55296
	%vr26 = load i64, i64* %ADR.102
	%vr25 = add i64 %vr26, -55296

	; store ADR := vr25
	store i64 %vr25, i64* %ADR.102

	; conv V => vr30
	%vr31 = load i64, i64* %V.103
	%vr30 = uitofp i64 %vr31 to double
	%vr33 = load i64, i64* %ADR.102
	%vr32 = bitcast i64 %vr33 to i64

	; bop vr32 SHL 3
	%vr34 = shl i64 %vr32, 3

	; bop THIS + vr34
	%vr36 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr37 = inttoptr i64 %vr34 to %MEMORY_T*
	%vr35 = add %MEMORY_T* %vr36, %vr37

	; store vr35+917496 := vr30
	%vr38 = ptrtoint %MEMORY_T* %vr35 to i64
	%vr39 = add i64 %vr38, 917496
	%vr40 = inttoptr i64 %vr39 to double*
	store double %vr30, double* %vr40

	; bop ADR + 1024
	%vr43 = load i64, i64* %ADR.102
	%vr42 = add i64 %vr43, 1024

	; store ADR := vr42
	store i64 %vr42, i64* %ADR.102
	%vr48 = load i64, i64* %ADR.102
	%vr47 = bitcast i64 %vr48 to i64

	; bop vr47 SHL 3
	%vr49 = shl i64 %vr47, 3

	; bop THIS + vr49
	%vr51 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr52 = inttoptr i64 %vr49 to %MEMORY_T*
	%vr50 = add %MEMORY_T* %vr51, %vr52

	; conv vr50 => vr53
	%vr55 = ptrtoint %MEMORY_T* %vr50 to i64
	%vr56 = inttoptr i64 %vr55 to double*
	%vr57 = load double, double* %vr56
	%vr54 = call double @llvm.nearbyint.f64(double %vr57)
	%vr53 = fptoui double %vr54 to i64

	; store V := vr53
	store i64 %vr53, i64* %V.103

	; label .Lt_043A
	br label %.Lt_043A
.Lt_043A:

	; label .Lt_0439
	br label %.Lt_0439
.Lt_0439:

	; branchbop ADR <> 646
	%vr60 = load i64, i64* %ADR.102
	%vr59 = icmp ne i64 %vr60, 646
	br i1 %vr59, label %.Lt_043C, label %.Lt_0E38
.Lt_0E38:

	; branchbop V <> 0
	%vr64 = load i64, i64* %V.103
	%vr63 = icmp ne i64 %vr64, 0
	br i1 %vr63, label %.Lt_043E, label %.Lt_0E39
.Lt_0E39:

	; label .Lt_043F
	br label %.Lt_043F
.Lt_043F:

	; conv SYS_OFFSET => vr66
	%vr67 = load i32, i32* @SYS_OFFSET
	%vr66 = sext i32 %vr67 to i64

	; bop vr66 + 2
	%vr68 = add i64 %vr66, 2
	%vr69 = bitcast i64 %vr68 to i64

	; call POKE64()
	; arg THIS
	%vr70 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr69
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr70, i64 %vr69, i64 0 )

	; conv SYS_OFFSET => vr71
	%vr72 = load i32, i32* @SYS_OFFSET
	%vr71 = sext i32 %vr72 to i64

	; bop vr71 + 3
	%vr73 = add i64 %vr71, 3
	%vr74 = bitcast i64 %vr73 to i64

	; call POKE64()
	; arg THIS
	%vr75 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr74
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr75, i64 %vr74, i64 0 )

	; conv SYS_OFFSET => vr76
	%vr77 = load i32, i32* @SYS_OFFSET
	%vr76 = sext i32 %vr77 to i64

	; bop vr76 + 4
	%vr78 = add i64 %vr76, 4
	%vr79 = bitcast i64 %vr78 to i64

	; call POKE64()
	; arg THIS
	%vr80 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr79
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr80, i64 %vr79, i64 0 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E3A:

	; label .Lt_043E
	br label %.Lt_043E
.Lt_043E:

	; branchbop V <> 1
	%vr83 = load i64, i64* %V.103
	%vr82 = icmp ne i64 %vr83, 1
	br i1 %vr82, label %.Lt_0440, label %.Lt_0E3B
.Lt_0E3B:

	; label .Lt_0441
	br label %.Lt_0441
.Lt_0441:

	; conv SYS_OFFSET => vr85
	%vr86 = load i32, i32* @SYS_OFFSET
	%vr85 = sext i32 %vr86 to i64

	; bop vr85 + 2
	%vr87 = add i64 %vr85, 2
	%vr88 = bitcast i64 %vr87 to i64

	; call POKE64()
	; arg THIS
	%vr89 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr88
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr89, i64 %vr88, i64 0 )

	; conv SYS_OFFSET => vr90
	%vr91 = load i32, i32* @SYS_OFFSET
	%vr90 = sext i32 %vr91 to i64

	; bop vr90 + 3
	%vr92 = add i64 %vr90, 3
	%vr93 = bitcast i64 %vr92 to i64

	; call POKE64()
	; arg THIS
	%vr94 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr93
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr94, i64 %vr93, i64 0 )

	; conv SYS_OFFSET => vr95
	%vr96 = load i32, i32* @SYS_OFFSET
	%vr95 = sext i32 %vr96 to i64

	; bop vr95 + 4
	%vr97 = add i64 %vr95, 4
	%vr98 = bitcast i64 %vr97 to i64

	; call POKE64()
	; arg THIS
	%vr99 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr98
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr99, i64 %vr98, i64 170 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E3C:

	; label .Lt_0440
	br label %.Lt_0440
.Lt_0440:

	; branchbop V <> 2
	%vr102 = load i64, i64* %V.103
	%vr101 = icmp ne i64 %vr102, 2
	br i1 %vr101, label %.Lt_0442, label %.Lt_0E3D
.Lt_0E3D:

	; label .Lt_0443
	br label %.Lt_0443
.Lt_0443:

	; conv SYS_OFFSET => vr104
	%vr105 = load i32, i32* @SYS_OFFSET
	%vr104 = sext i32 %vr105 to i64

	; bop vr104 + 2
	%vr106 = add i64 %vr104, 2
	%vr107 = bitcast i64 %vr106 to i64

	; call POKE64()
	; arg THIS
	%vr108 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr107
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr108, i64 %vr107, i64 0 )

	; conv SYS_OFFSET => vr109
	%vr110 = load i32, i32* @SYS_OFFSET
	%vr109 = sext i32 %vr110 to i64

	; bop vr109 + 3
	%vr111 = add i64 %vr109, 3
	%vr112 = bitcast i64 %vr111 to i64

	; call POKE64()
	; arg THIS
	%vr113 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr112
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr113, i64 %vr112, i64 170 )

	; conv SYS_OFFSET => vr114
	%vr115 = load i32, i32* @SYS_OFFSET
	%vr114 = sext i32 %vr115 to i64

	; bop vr114 + 4
	%vr116 = add i64 %vr114, 4
	%vr117 = bitcast i64 %vr116 to i64

	; call POKE64()
	; arg THIS
	%vr118 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr117
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr118, i64 %vr117, i64 0 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E3E:

	; label .Lt_0442
	br label %.Lt_0442
.Lt_0442:

	; branchbop V <> 3
	%vr121 = load i64, i64* %V.103
	%vr120 = icmp ne i64 %vr121, 3
	br i1 %vr120, label %.Lt_0444, label %.Lt_0E3F
.Lt_0E3F:

	; label .Lt_0445
	br label %.Lt_0445
.Lt_0445:

	; conv SYS_OFFSET => vr123
	%vr124 = load i32, i32* @SYS_OFFSET
	%vr123 = sext i32 %vr124 to i64

	; bop vr123 + 2
	%vr125 = add i64 %vr123, 2
	%vr126 = bitcast i64 %vr125 to i64

	; call POKE64()
	; arg THIS
	%vr127 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr126
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr127, i64 %vr126, i64 0 )

	; conv SYS_OFFSET => vr128
	%vr129 = load i32, i32* @SYS_OFFSET
	%vr128 = sext i32 %vr129 to i64

	; bop vr128 + 3
	%vr130 = add i64 %vr128, 3
	%vr131 = bitcast i64 %vr130 to i64

	; call POKE64()
	; arg THIS
	%vr132 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr131
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr132, i64 %vr131, i64 170 )

	; conv SYS_OFFSET => vr133
	%vr134 = load i32, i32* @SYS_OFFSET
	%vr133 = sext i32 %vr134 to i64

	; bop vr133 + 4
	%vr135 = add i64 %vr133, 4
	%vr136 = bitcast i64 %vr135 to i64

	; call POKE64()
	; arg THIS
	%vr137 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr136
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr137, i64 %vr136, i64 170 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E40:

	; label .Lt_0444
	br label %.Lt_0444
.Lt_0444:

	; branchbop V <> 4
	%vr140 = load i64, i64* %V.103
	%vr139 = icmp ne i64 %vr140, 4
	br i1 %vr139, label %.Lt_0446, label %.Lt_0E41
.Lt_0E41:

	; label .Lt_0447
	br label %.Lt_0447
.Lt_0447:

	; conv SYS_OFFSET => vr142
	%vr143 = load i32, i32* @SYS_OFFSET
	%vr142 = sext i32 %vr143 to i64

	; bop vr142 + 2
	%vr144 = add i64 %vr142, 2
	%vr145 = bitcast i64 %vr144 to i64

	; call POKE64()
	; arg THIS
	%vr146 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr145
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr146, i64 %vr145, i64 170 )

	; conv SYS_OFFSET => vr147
	%vr148 = load i32, i32* @SYS_OFFSET
	%vr147 = sext i32 %vr148 to i64

	; bop vr147 + 3
	%vr149 = add i64 %vr147, 3
	%vr150 = bitcast i64 %vr149 to i64

	; call POKE64()
	; arg THIS
	%vr151 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr150
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr151, i64 %vr150, i64 0 )

	; conv SYS_OFFSET => vr152
	%vr153 = load i32, i32* @SYS_OFFSET
	%vr152 = sext i32 %vr153 to i64

	; bop vr152 + 4
	%vr154 = add i64 %vr152, 4
	%vr155 = bitcast i64 %vr154 to i64

	; call POKE64()
	; arg THIS
	%vr156 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr155
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr156, i64 %vr155, i64 0 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E42:

	; label .Lt_0446
	br label %.Lt_0446
.Lt_0446:

	; branchbop V <> 5
	%vr159 = load i64, i64* %V.103
	%vr158 = icmp ne i64 %vr159, 5
	br i1 %vr158, label %.Lt_0448, label %.Lt_0E43
.Lt_0E43:

	; label .Lt_0449
	br label %.Lt_0449
.Lt_0449:

	; conv SYS_OFFSET => vr161
	%vr162 = load i32, i32* @SYS_OFFSET
	%vr161 = sext i32 %vr162 to i64

	; bop vr161 + 2
	%vr163 = add i64 %vr161, 2
	%vr164 = bitcast i64 %vr163 to i64

	; call POKE64()
	; arg THIS
	%vr165 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr164
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr165, i64 %vr164, i64 170 )

	; conv SYS_OFFSET => vr166
	%vr167 = load i32, i32* @SYS_OFFSET
	%vr166 = sext i32 %vr167 to i64

	; bop vr166 + 3
	%vr168 = add i64 %vr166, 3
	%vr169 = bitcast i64 %vr168 to i64

	; call POKE64()
	; arg THIS
	%vr170 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr169
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr170, i64 %vr169, i64 0 )

	; conv SYS_OFFSET => vr171
	%vr172 = load i32, i32* @SYS_OFFSET
	%vr171 = sext i32 %vr172 to i64

	; bop vr171 + 4
	%vr173 = add i64 %vr171, 4
	%vr174 = bitcast i64 %vr173 to i64

	; call POKE64()
	; arg THIS
	%vr175 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr174
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr175, i64 %vr174, i64 170 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E44:

	; label .Lt_0448
	br label %.Lt_0448
.Lt_0448:

	; branchbop V <> 6
	%vr178 = load i64, i64* %V.103
	%vr177 = icmp ne i64 %vr178, 6
	br i1 %vr177, label %.Lt_044A, label %.Lt_0E45
.Lt_0E45:

	; label .Lt_044B
	br label %.Lt_044B
.Lt_044B:

	; conv SYS_OFFSET => vr180
	%vr181 = load i32, i32* @SYS_OFFSET
	%vr180 = sext i32 %vr181 to i64

	; bop vr180 + 2
	%vr182 = add i64 %vr180, 2
	%vr183 = bitcast i64 %vr182 to i64

	; call POKE64()
	; arg THIS
	%vr184 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr183
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr184, i64 %vr183, i64 170 )

	; conv SYS_OFFSET => vr185
	%vr186 = load i32, i32* @SYS_OFFSET
	%vr185 = sext i32 %vr186 to i64

	; bop vr185 + 3
	%vr187 = add i64 %vr185, 3
	%vr188 = bitcast i64 %vr187 to i64

	; call POKE64()
	; arg THIS
	%vr189 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr188
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr189, i64 %vr188, i64 85 )

	; conv SYS_OFFSET => vr190
	%vr191 = load i32, i32* @SYS_OFFSET
	%vr190 = sext i32 %vr191 to i64

	; bop vr190 + 4
	%vr192 = add i64 %vr190, 4
	%vr193 = bitcast i64 %vr192 to i64

	; call POKE64()
	; arg THIS
	%vr194 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr193
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr194, i64 %vr193, i64 0 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E46:

	; label .Lt_044A
	br label %.Lt_044A
.Lt_044A:

	; branchbop V <> 7
	%vr197 = load i64, i64* %V.103
	%vr196 = icmp ne i64 %vr197, 7
	br i1 %vr196, label %.Lt_044C, label %.Lt_0E47
.Lt_0E47:

	; label .Lt_044D
	br label %.Lt_044D
.Lt_044D:

	; conv SYS_OFFSET => vr199
	%vr200 = load i32, i32* @SYS_OFFSET
	%vr199 = sext i32 %vr200 to i64

	; bop vr199 + 2
	%vr201 = add i64 %vr199, 2
	%vr202 = bitcast i64 %vr201 to i64

	; call POKE64()
	; arg THIS
	%vr203 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr202
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr203, i64 %vr202, i64 170 )

	; conv SYS_OFFSET => vr204
	%vr205 = load i32, i32* @SYS_OFFSET
	%vr204 = sext i32 %vr205 to i64

	; bop vr204 + 3
	%vr206 = add i64 %vr204, 3
	%vr207 = bitcast i64 %vr206 to i64

	; call POKE64()
	; arg THIS
	%vr208 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr207
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr208, i64 %vr207, i64 170 )

	; conv SYS_OFFSET => vr209
	%vr210 = load i32, i32* @SYS_OFFSET
	%vr209 = sext i32 %vr210 to i64

	; bop vr209 + 4
	%vr211 = add i64 %vr209, 4
	%vr212 = bitcast i64 %vr211 to i64

	; call POKE64()
	; arg THIS
	%vr213 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr212
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr213, i64 %vr212, i64 170 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E48:

	; label .Lt_044C
	br label %.Lt_044C
.Lt_044C:

	; branchbop V <> 8
	%vr216 = load i64, i64* %V.103
	%vr215 = icmp ne i64 %vr216, 8
	br i1 %vr215, label %.Lt_044E, label %.Lt_0E49
.Lt_0E49:

	; label .Lt_044F
	br label %.Lt_044F
.Lt_044F:

	; conv SYS_OFFSET => vr218
	%vr219 = load i32, i32* @SYS_OFFSET
	%vr218 = sext i32 %vr219 to i64

	; bop vr218 + 2
	%vr220 = add i64 %vr218, 2
	%vr221 = bitcast i64 %vr220 to i64

	; call POKE64()
	; arg THIS
	%vr222 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr221
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr222, i64 %vr221, i64 85 )

	; conv SYS_OFFSET => vr223
	%vr224 = load i32, i32* @SYS_OFFSET
	%vr223 = sext i32 %vr224 to i64

	; bop vr223 + 3
	%vr225 = add i64 %vr223, 3
	%vr226 = bitcast i64 %vr225 to i64

	; call POKE64()
	; arg THIS
	%vr227 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr226
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr227, i64 %vr226, i64 85 )

	; conv SYS_OFFSET => vr228
	%vr229 = load i32, i32* @SYS_OFFSET
	%vr228 = sext i32 %vr229 to i64

	; bop vr228 + 4
	%vr230 = add i64 %vr228, 4
	%vr231 = bitcast i64 %vr230 to i64

	; call POKE64()
	; arg THIS
	%vr232 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr231
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr232, i64 %vr231, i64 85 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E4A:

	; label .Lt_044E
	br label %.Lt_044E
.Lt_044E:

	; branchbop V <> 9
	%vr235 = load i64, i64* %V.103
	%vr234 = icmp ne i64 %vr235, 9
	br i1 %vr234, label %.Lt_0450, label %.Lt_0E4B
.Lt_0E4B:

	; label .Lt_0451
	br label %.Lt_0451
.Lt_0451:

	; conv SYS_OFFSET => vr237
	%vr238 = load i32, i32* @SYS_OFFSET
	%vr237 = sext i32 %vr238 to i64

	; bop vr237 + 2
	%vr239 = add i64 %vr237, 2
	%vr240 = bitcast i64 %vr239 to i64

	; call POKE64()
	; arg THIS
	%vr241 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr240
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr241, i64 %vr240, i64 85 )

	; conv SYS_OFFSET => vr242
	%vr243 = load i32, i32* @SYS_OFFSET
	%vr242 = sext i32 %vr243 to i64

	; bop vr242 + 3
	%vr244 = add i64 %vr242, 3
	%vr245 = bitcast i64 %vr244 to i64

	; call POKE64()
	; arg THIS
	%vr246 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr245
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr246, i64 %vr245, i64 85 )

	; conv SYS_OFFSET => vr247
	%vr248 = load i32, i32* @SYS_OFFSET
	%vr247 = sext i32 %vr248 to i64

	; bop vr247 + 4
	%vr249 = add i64 %vr247, 4
	%vr250 = bitcast i64 %vr249 to i64

	; call POKE64()
	; arg THIS
	%vr251 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr250
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr251, i64 %vr250, i64 255 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E4C:

	; label .Lt_0450
	br label %.Lt_0450
.Lt_0450:

	; branchbop V <> 10
	%vr254 = load i64, i64* %V.103
	%vr253 = icmp ne i64 %vr254, 10
	br i1 %vr253, label %.Lt_0452, label %.Lt_0E4D
.Lt_0E4D:

	; label .Lt_0453
	br label %.Lt_0453
.Lt_0453:

	; conv SYS_OFFSET => vr256
	%vr257 = load i32, i32* @SYS_OFFSET
	%vr256 = sext i32 %vr257 to i64

	; bop vr256 + 2
	%vr258 = add i64 %vr256, 2
	%vr259 = bitcast i64 %vr258 to i64

	; call POKE64()
	; arg THIS
	%vr260 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr259
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr260, i64 %vr259, i64 85 )

	; conv SYS_OFFSET => vr261
	%vr262 = load i32, i32* @SYS_OFFSET
	%vr261 = sext i32 %vr262 to i64

	; bop vr261 + 3
	%vr263 = add i64 %vr261, 3
	%vr264 = bitcast i64 %vr263 to i64

	; call POKE64()
	; arg THIS
	%vr265 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr264
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr265, i64 %vr264, i64 255 )

	; conv SYS_OFFSET => vr266
	%vr267 = load i32, i32* @SYS_OFFSET
	%vr266 = sext i32 %vr267 to i64

	; bop vr266 + 4
	%vr268 = add i64 %vr266, 4
	%vr269 = bitcast i64 %vr268 to i64

	; call POKE64()
	; arg THIS
	%vr270 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr269
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr270, i64 %vr269, i64 85 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E4E:

	; label .Lt_0452
	br label %.Lt_0452
.Lt_0452:

	; branchbop V <> 11
	%vr273 = load i64, i64* %V.103
	%vr272 = icmp ne i64 %vr273, 11
	br i1 %vr272, label %.Lt_0454, label %.Lt_0E4F
.Lt_0E4F:

	; label .Lt_0455
	br label %.Lt_0455
.Lt_0455:

	; conv SYS_OFFSET => vr275
	%vr276 = load i32, i32* @SYS_OFFSET
	%vr275 = sext i32 %vr276 to i64

	; bop vr275 + 2
	%vr277 = add i64 %vr275, 2
	%vr278 = bitcast i64 %vr277 to i64

	; call POKE64()
	; arg THIS
	%vr279 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr278
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr279, i64 %vr278, i64 85 )

	; conv SYS_OFFSET => vr280
	%vr281 = load i32, i32* @SYS_OFFSET
	%vr280 = sext i32 %vr281 to i64

	; bop vr280 + 3
	%vr282 = add i64 %vr280, 3
	%vr283 = bitcast i64 %vr282 to i64

	; call POKE64()
	; arg THIS
	%vr284 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr283
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr284, i64 %vr283, i64 255 )

	; conv SYS_OFFSET => vr285
	%vr286 = load i32, i32* @SYS_OFFSET
	%vr285 = sext i32 %vr286 to i64

	; bop vr285 + 4
	%vr287 = add i64 %vr285, 4
	%vr288 = bitcast i64 %vr287 to i64

	; call POKE64()
	; arg THIS
	%vr289 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr288
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr289, i64 %vr288, i64 255 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E50:

	; label .Lt_0454
	br label %.Lt_0454
.Lt_0454:

	; branchbop V <> 12
	%vr292 = load i64, i64* %V.103
	%vr291 = icmp ne i64 %vr292, 12
	br i1 %vr291, label %.Lt_0456, label %.Lt_0E51
.Lt_0E51:

	; label .Lt_0457
	br label %.Lt_0457
.Lt_0457:

	; conv SYS_OFFSET => vr294
	%vr295 = load i32, i32* @SYS_OFFSET
	%vr294 = sext i32 %vr295 to i64

	; bop vr294 + 2
	%vr296 = add i64 %vr294, 2
	%vr297 = bitcast i64 %vr296 to i64

	; call POKE64()
	; arg THIS
	%vr298 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr297
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr298, i64 %vr297, i64 255 )

	; conv SYS_OFFSET => vr299
	%vr300 = load i32, i32* @SYS_OFFSET
	%vr299 = sext i32 %vr300 to i64

	; bop vr299 + 3
	%vr301 = add i64 %vr299, 3
	%vr302 = bitcast i64 %vr301 to i64

	; call POKE64()
	; arg THIS
	%vr303 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr302
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr303, i64 %vr302, i64 85 )

	; conv SYS_OFFSET => vr304
	%vr305 = load i32, i32* @SYS_OFFSET
	%vr304 = sext i32 %vr305 to i64

	; bop vr304 + 4
	%vr306 = add i64 %vr304, 4
	%vr307 = bitcast i64 %vr306 to i64

	; call POKE64()
	; arg THIS
	%vr308 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr307
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr308, i64 %vr307, i64 85 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E52:

	; label .Lt_0456
	br label %.Lt_0456
.Lt_0456:

	; branchbop V <> 13
	%vr311 = load i64, i64* %V.103
	%vr310 = icmp ne i64 %vr311, 13
	br i1 %vr310, label %.Lt_0458, label %.Lt_0E53
.Lt_0E53:

	; label .Lt_0459
	br label %.Lt_0459
.Lt_0459:

	; conv SYS_OFFSET => vr313
	%vr314 = load i32, i32* @SYS_OFFSET
	%vr313 = sext i32 %vr314 to i64

	; bop vr313 + 2
	%vr315 = add i64 %vr313, 2
	%vr316 = bitcast i64 %vr315 to i64

	; call POKE64()
	; arg THIS
	%vr317 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr316
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr317, i64 %vr316, i64 255 )

	; conv SYS_OFFSET => vr318
	%vr319 = load i32, i32* @SYS_OFFSET
	%vr318 = sext i32 %vr319 to i64

	; bop vr318 + 3
	%vr320 = add i64 %vr318, 3
	%vr321 = bitcast i64 %vr320 to i64

	; call POKE64()
	; arg THIS
	%vr322 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr321
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr322, i64 %vr321, i64 85 )

	; conv SYS_OFFSET => vr323
	%vr324 = load i32, i32* @SYS_OFFSET
	%vr323 = sext i32 %vr324 to i64

	; bop vr323 + 4
	%vr325 = add i64 %vr323, 4
	%vr326 = bitcast i64 %vr325 to i64

	; call POKE64()
	; arg THIS
	%vr327 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr326
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr327, i64 %vr326, i64 255 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E54:

	; label .Lt_0458
	br label %.Lt_0458
.Lt_0458:

	; branchbop V <> 14
	%vr330 = load i64, i64* %V.103
	%vr329 = icmp ne i64 %vr330, 14
	br i1 %vr329, label %.Lt_045A, label %.Lt_0E55
.Lt_0E55:

	; label .Lt_045B
	br label %.Lt_045B
.Lt_045B:

	; conv SYS_OFFSET => vr332
	%vr333 = load i32, i32* @SYS_OFFSET
	%vr332 = sext i32 %vr333 to i64

	; bop vr332 + 2
	%vr334 = add i64 %vr332, 2
	%vr335 = bitcast i64 %vr334 to i64

	; call POKE64()
	; arg THIS
	%vr336 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr335
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr336, i64 %vr335, i64 255 )

	; conv SYS_OFFSET => vr337
	%vr338 = load i32, i32* @SYS_OFFSET
	%vr337 = sext i32 %vr338 to i64

	; bop vr337 + 3
	%vr339 = add i64 %vr337, 3
	%vr340 = bitcast i64 %vr339 to i64

	; call POKE64()
	; arg THIS
	%vr341 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr340
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr341, i64 %vr340, i64 255 )

	; conv SYS_OFFSET => vr342
	%vr343 = load i32, i32* @SYS_OFFSET
	%vr342 = sext i32 %vr343 to i64

	; bop vr342 + 4
	%vr344 = add i64 %vr342, 4
	%vr345 = bitcast i64 %vr344 to i64

	; call POKE64()
	; arg THIS
	%vr346 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr345
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr346, i64 %vr345, i64 85 )

	; goto .Lt_043D
	br label %.Lt_043D
.Lt_0E56:

	; label .Lt_045A
	br label %.Lt_045A
.Lt_045A:

	; branchbop V <> 15
	%vr349 = load i64, i64* %V.103
	%vr348 = icmp ne i64 %vr349, 15
	br i1 %vr348, label %.Lt_045C, label %.Lt_0E57
.Lt_0E57:

	; label .Lt_045D
	br label %.Lt_045D
.Lt_045D:

	; conv SYS_OFFSET => vr351
	%vr352 = load i32, i32* @SYS_OFFSET
	%vr351 = sext i32 %vr352 to i64

	; bop vr351 + 2
	%vr353 = add i64 %vr351, 2
	%vr354 = bitcast i64 %vr353 to i64

	; call POKE64()
	; arg THIS
	%vr355 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr354
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr355, i64 %vr354, i64 255 )

	; conv SYS_OFFSET => vr356
	%vr357 = load i32, i32* @SYS_OFFSET
	%vr356 = sext i32 %vr357 to i64

	; bop vr356 + 3
	%vr358 = add i64 %vr356, 3
	%vr359 = bitcast i64 %vr358 to i64

	; call POKE64()
	; arg THIS
	%vr360 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr359
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr360, i64 %vr359, i64 255 )

	; conv SYS_OFFSET => vr361
	%vr362 = load i32, i32* @SYS_OFFSET
	%vr361 = sext i32 %vr362 to i64

	; bop vr361 + 4
	%vr363 = add i64 %vr361, 4
	%vr364 = bitcast i64 %vr363 to i64

	; call POKE64()
	; arg THIS
	%vr365 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr364
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr365, i64 %vr364, i64 255 )

	; label .Lt_045C
	br label %.Lt_045C
.Lt_045C:

	; label .Lt_043D
	br label %.Lt_043D
.Lt_043D:

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0E58:

	; label .Lt_043C
	br label %.Lt_043C
.Lt_043C:

	; branchbop ADR <> 53272
	%vr368 = load i64, i64* %ADR.102
	%vr367 = icmp ne i64 %vr368, 53272
	br i1 %vr367, label %.Lt_045E, label %.Lt_0E59
.Lt_0E59:

	; branchbop V <> 15
	%vr372 = load i64, i64* %V.103
	%vr371 = icmp ne i64 %vr372, 15
	br i1 %vr371, label %.Lt_0460, label %.Lt_0E5A
.Lt_0E5A:

	; label .Lt_0461
	br label %.Lt_0461
.Lt_0461:

	; conv SYS_OFFSET => vr374
	%vr375 = load i32, i32* @SYS_OFFSET
	%vr374 = sext i32 %vr375 to i64

	; bop vr374 + 299
	%vr376 = add i64 %vr374, 299
	%vr377 = bitcast i64 %vr376 to i64

	; call POKE64()
	; arg THIS
	%vr378 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr377
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr378, i64 %vr377, i64 0 )

	; call POKE64()
	; arg THIS
	%vr379 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr379, i64 648, i64 0 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E5B:

	; label .Lt_0460
	br label %.Lt_0460
.Lt_0460:

	; branchbop V <> 31
	%vr382 = load i64, i64* %V.103
	%vr381 = icmp ne i64 %vr382, 31
	br i1 %vr381, label %.Lt_0462, label %.Lt_0E5C
.Lt_0E5C:

	; label .Lt_0463
	br label %.Lt_0463
.Lt_0463:

	; conv SYS_OFFSET => vr384
	%vr385 = load i32, i32* @SYS_OFFSET
	%vr384 = sext i32 %vr385 to i64

	; bop vr384 + 299
	%vr386 = add i64 %vr384, 299
	%vr387 = bitcast i64 %vr386 to i64

	; call POKE64()
	; arg THIS
	%vr388 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr387
	; arg 1024
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr388, i64 %vr387, i64 1024 )

	; call POKE64()
	; arg THIS
	%vr389 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 4
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr389, i64 648, i64 4 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E5D:

	; label .Lt_0462
	br label %.Lt_0462
.Lt_0462:

	; branchbop V <> 47
	%vr392 = load i64, i64* %V.103
	%vr391 = icmp ne i64 %vr392, 47
	br i1 %vr391, label %.Lt_0464, label %.Lt_0E5E
.Lt_0E5E:

	; label .Lt_0465
	br label %.Lt_0465
.Lt_0465:

	; conv SYS_OFFSET => vr394
	%vr395 = load i32, i32* @SYS_OFFSET
	%vr394 = sext i32 %vr395 to i64

	; bop vr394 + 299
	%vr396 = add i64 %vr394, 299
	%vr397 = bitcast i64 %vr396 to i64

	; call POKE64()
	; arg THIS
	%vr398 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr397
	; arg 2048
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr398, i64 %vr397, i64 2048 )

	; call POKE64()
	; arg THIS
	%vr399 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 8
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr399, i64 648, i64 8 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E5F:

	; label .Lt_0464
	br label %.Lt_0464
.Lt_0464:

	; branchbop V <> 63
	%vr402 = load i64, i64* %V.103
	%vr401 = icmp ne i64 %vr402, 63
	br i1 %vr401, label %.Lt_0466, label %.Lt_0E60
.Lt_0E60:

	; label .Lt_0467
	br label %.Lt_0467
.Lt_0467:

	; conv SYS_OFFSET => vr404
	%vr405 = load i32, i32* @SYS_OFFSET
	%vr404 = sext i32 %vr405 to i64

	; bop vr404 + 299
	%vr406 = add i64 %vr404, 299
	%vr407 = bitcast i64 %vr406 to i64

	; call POKE64()
	; arg THIS
	%vr408 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr407
	; arg 3072
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr408, i64 %vr407, i64 3072 )

	; call POKE64()
	; arg THIS
	%vr409 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 12
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr409, i64 648, i64 12 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E61:

	; label .Lt_0466
	br label %.Lt_0466
.Lt_0466:

	; branchbop V <> 79
	%vr412 = load i64, i64* %V.103
	%vr411 = icmp ne i64 %vr412, 79
	br i1 %vr411, label %.Lt_0468, label %.Lt_0E62
.Lt_0E62:

	; label .Lt_0469
	br label %.Lt_0469
.Lt_0469:

	; conv SYS_OFFSET => vr414
	%vr415 = load i32, i32* @SYS_OFFSET
	%vr414 = sext i32 %vr415 to i64

	; bop vr414 + 299
	%vr416 = add i64 %vr414, 299
	%vr417 = bitcast i64 %vr416 to i64

	; call POKE64()
	; arg THIS
	%vr418 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr417
	; arg 4096
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr418, i64 %vr417, i64 4096 )

	; call POKE64()
	; arg THIS
	%vr419 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 16
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr419, i64 648, i64 16 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E63:

	; label .Lt_0468
	br label %.Lt_0468
.Lt_0468:

	; branchbop V <> 95
	%vr422 = load i64, i64* %V.103
	%vr421 = icmp ne i64 %vr422, 95
	br i1 %vr421, label %.Lt_046A, label %.Lt_0E64
.Lt_0E64:

	; label .Lt_046B
	br label %.Lt_046B
.Lt_046B:

	; conv SYS_OFFSET => vr424
	%vr425 = load i32, i32* @SYS_OFFSET
	%vr424 = sext i32 %vr425 to i64

	; bop vr424 + 299
	%vr426 = add i64 %vr424, 299
	%vr427 = bitcast i64 %vr426 to i64

	; call POKE64()
	; arg THIS
	%vr428 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr427
	; arg 5120
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr428, i64 %vr427, i64 5120 )

	; call POKE64()
	; arg THIS
	%vr429 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 20
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr429, i64 648, i64 20 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E65:

	; label .Lt_046A
	br label %.Lt_046A
.Lt_046A:

	; branchbop V <> 111
	%vr432 = load i64, i64* %V.103
	%vr431 = icmp ne i64 %vr432, 111
	br i1 %vr431, label %.Lt_046C, label %.Lt_0E66
.Lt_0E66:

	; label .Lt_046D
	br label %.Lt_046D
.Lt_046D:

	; conv SYS_OFFSET => vr434
	%vr435 = load i32, i32* @SYS_OFFSET
	%vr434 = sext i32 %vr435 to i64

	; bop vr434 + 299
	%vr436 = add i64 %vr434, 299
	%vr437 = bitcast i64 %vr436 to i64

	; call POKE64()
	; arg THIS
	%vr438 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr437
	; arg 6144
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr438, i64 %vr437, i64 6144 )

	; call POKE64()
	; arg THIS
	%vr439 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 24
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr439, i64 648, i64 24 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E67:

	; label .Lt_046C
	br label %.Lt_046C
.Lt_046C:

	; branchbop V <> 127
	%vr442 = load i64, i64* %V.103
	%vr441 = icmp ne i64 %vr442, 127
	br i1 %vr441, label %.Lt_046E, label %.Lt_0E68
.Lt_0E68:

	; label .Lt_046F
	br label %.Lt_046F
.Lt_046F:

	; conv SYS_OFFSET => vr444
	%vr445 = load i32, i32* @SYS_OFFSET
	%vr444 = sext i32 %vr445 to i64

	; bop vr444 + 299
	%vr446 = add i64 %vr444, 299
	%vr447 = bitcast i64 %vr446 to i64

	; call POKE64()
	; arg THIS
	%vr448 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr447
	; arg 7168
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr448, i64 %vr447, i64 7168 )

	; call POKE64()
	; arg THIS
	%vr449 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 28
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr449, i64 648, i64 28 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E69:

	; label .Lt_046E
	br label %.Lt_046E
.Lt_046E:

	; branchbop V <> 143
	%vr452 = load i64, i64* %V.103
	%vr451 = icmp ne i64 %vr452, 143
	br i1 %vr451, label %.Lt_0470, label %.Lt_0E6A
.Lt_0E6A:

	; label .Lt_0471
	br label %.Lt_0471
.Lt_0471:

	; conv SYS_OFFSET => vr454
	%vr455 = load i32, i32* @SYS_OFFSET
	%vr454 = sext i32 %vr455 to i64

	; bop vr454 + 299
	%vr456 = add i64 %vr454, 299
	%vr457 = bitcast i64 %vr456 to i64

	; call POKE64()
	; arg THIS
	%vr458 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr457
	; arg 8192
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr458, i64 %vr457, i64 8192 )

	; call POKE64()
	; arg THIS
	%vr459 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr459, i64 648, i64 32 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E6B:

	; label .Lt_0470
	br label %.Lt_0470
.Lt_0470:

	; branchbop V <> 159
	%vr462 = load i64, i64* %V.103
	%vr461 = icmp ne i64 %vr462, 159
	br i1 %vr461, label %.Lt_0472, label %.Lt_0E6C
.Lt_0E6C:

	; label .Lt_0473
	br label %.Lt_0473
.Lt_0473:

	; conv SYS_OFFSET => vr464
	%vr465 = load i32, i32* @SYS_OFFSET
	%vr464 = sext i32 %vr465 to i64

	; bop vr464 + 299
	%vr466 = add i64 %vr464, 299
	%vr467 = bitcast i64 %vr466 to i64

	; call POKE64()
	; arg THIS
	%vr468 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr467
	; arg 9216
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr468, i64 %vr467, i64 9216 )

	; call POKE64()
	; arg THIS
	%vr469 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 36
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr469, i64 648, i64 36 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E6D:

	; label .Lt_0472
	br label %.Lt_0472
.Lt_0472:

	; branchbop V <> 175
	%vr472 = load i64, i64* %V.103
	%vr471 = icmp ne i64 %vr472, 175
	br i1 %vr471, label %.Lt_0474, label %.Lt_0E6E
.Lt_0E6E:

	; label .Lt_0475
	br label %.Lt_0475
.Lt_0475:

	; conv SYS_OFFSET => vr474
	%vr475 = load i32, i32* @SYS_OFFSET
	%vr474 = sext i32 %vr475 to i64

	; bop vr474 + 299
	%vr476 = add i64 %vr474, 299
	%vr477 = bitcast i64 %vr476 to i64

	; call POKE64()
	; arg THIS
	%vr478 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr477
	; arg 10240
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr478, i64 %vr477, i64 10240 )

	; call POKE64()
	; arg THIS
	%vr479 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 40
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr479, i64 648, i64 40 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E6F:

	; label .Lt_0474
	br label %.Lt_0474
.Lt_0474:

	; branchbop V <> 191
	%vr482 = load i64, i64* %V.103
	%vr481 = icmp ne i64 %vr482, 191
	br i1 %vr481, label %.Lt_0476, label %.Lt_0E70
.Lt_0E70:

	; label .Lt_0477
	br label %.Lt_0477
.Lt_0477:

	; conv SYS_OFFSET => vr484
	%vr485 = load i32, i32* @SYS_OFFSET
	%vr484 = sext i32 %vr485 to i64

	; bop vr484 + 299
	%vr486 = add i64 %vr484, 299
	%vr487 = bitcast i64 %vr486 to i64

	; call POKE64()
	; arg THIS
	%vr488 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr487
	; arg 11264
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr488, i64 %vr487, i64 11264 )

	; call POKE64()
	; arg THIS
	%vr489 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 44
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr489, i64 648, i64 44 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E71:

	; label .Lt_0476
	br label %.Lt_0476
.Lt_0476:

	; branchbop V <> 207
	%vr492 = load i64, i64* %V.103
	%vr491 = icmp ne i64 %vr492, 207
	br i1 %vr491, label %.Lt_0478, label %.Lt_0E72
.Lt_0E72:

	; label .Lt_0479
	br label %.Lt_0479
.Lt_0479:

	; conv SYS_OFFSET => vr494
	%vr495 = load i32, i32* @SYS_OFFSET
	%vr494 = sext i32 %vr495 to i64

	; bop vr494 + 299
	%vr496 = add i64 %vr494, 299
	%vr497 = bitcast i64 %vr496 to i64

	; call POKE64()
	; arg THIS
	%vr498 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr497
	; arg 12288
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr498, i64 %vr497, i64 12288 )

	; call POKE64()
	; arg THIS
	%vr499 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 48
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr499, i64 648, i64 48 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E73:

	; label .Lt_0478
	br label %.Lt_0478
.Lt_0478:

	; branchbop V <> 223
	%vr502 = load i64, i64* %V.103
	%vr501 = icmp ne i64 %vr502, 223
	br i1 %vr501, label %.Lt_047A, label %.Lt_0E74
.Lt_0E74:

	; label .Lt_047B
	br label %.Lt_047B
.Lt_047B:

	; conv SYS_OFFSET => vr504
	%vr505 = load i32, i32* @SYS_OFFSET
	%vr504 = sext i32 %vr505 to i64

	; bop vr504 + 299
	%vr506 = add i64 %vr504, 299
	%vr507 = bitcast i64 %vr506 to i64

	; call POKE64()
	; arg THIS
	%vr508 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr507
	; arg 13312
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr508, i64 %vr507, i64 13312 )

	; call POKE64()
	; arg THIS
	%vr509 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 52
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr509, i64 648, i64 52 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E75:

	; label .Lt_047A
	br label %.Lt_047A
.Lt_047A:

	; branchbop V <> 239
	%vr512 = load i64, i64* %V.103
	%vr511 = icmp ne i64 %vr512, 239
	br i1 %vr511, label %.Lt_047C, label %.Lt_0E76
.Lt_0E76:

	; label .Lt_047D
	br label %.Lt_047D
.Lt_047D:

	; conv SYS_OFFSET => vr514
	%vr515 = load i32, i32* @SYS_OFFSET
	%vr514 = sext i32 %vr515 to i64

	; bop vr514 + 299
	%vr516 = add i64 %vr514, 299
	%vr517 = bitcast i64 %vr516 to i64

	; call POKE64()
	; arg THIS
	%vr518 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr517
	; arg 14336
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr518, i64 %vr517, i64 14336 )

	; call POKE64()
	; arg THIS
	%vr519 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 56
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr519, i64 648, i64 56 )

	; goto .Lt_045F
	br label %.Lt_045F
.Lt_0E77:

	; label .Lt_047C
	br label %.Lt_047C
.Lt_047C:

	; branchbop V <> 255
	%vr522 = load i64, i64* %V.103
	%vr521 = icmp ne i64 %vr522, 255
	br i1 %vr521, label %.Lt_047E, label %.Lt_0E78
.Lt_0E78:

	; label .Lt_047F
	br label %.Lt_047F
.Lt_047F:

	; conv SYS_OFFSET => vr524
	%vr525 = load i32, i32* @SYS_OFFSET
	%vr524 = sext i32 %vr525 to i64

	; bop vr524 + 299
	%vr526 = add i64 %vr524, 299
	%vr527 = bitcast i64 %vr526 to i64

	; call POKE64()
	; arg THIS
	%vr528 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr527
	; arg 15360
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr528, i64 %vr527, i64 15360 )

	; call POKE64()
	; arg THIS
	%vr529 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 648
	; arg 60
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr529, i64 648, i64 60 )

	; label .Lt_047E
	br label %.Lt_047E
.Lt_047E:

	; label .Lt_045F
	br label %.Lt_045F
.Lt_045F:

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0E79:

	; label .Lt_045E
	br label %.Lt_045E
.Lt_045E:

	; bop ADR == 53248
	%vr532 = load i64, i64* %ADR.102
	%vr533 = bitcast i64 %vr532 to i64
	%vr534 = bitcast i64 53248 to i64
	%vr531 = icmp eq i64 %vr533, %vr534
	%vr535 = sext i1 %vr531 to i64

	; bop ADR == 53250
	%vr538 = load i64, i64* %ADR.102
	%vr539 = bitcast i64 %vr538 to i64
	%vr540 = bitcast i64 53250 to i64
	%vr537 = icmp eq i64 %vr539, %vr540
	%vr541 = sext i1 %vr537 to i64

	; bop vr535 OR vr541
	%vr542 = or i64 %vr535, %vr541

	; bop ADR == 53252
	%vr545 = load i64, i64* %ADR.102
	%vr546 = bitcast i64 %vr545 to i64
	%vr547 = bitcast i64 53252 to i64
	%vr544 = icmp eq i64 %vr546, %vr547
	%vr548 = sext i1 %vr544 to i64

	; bop vr542 OR vr548
	%vr549 = or i64 %vr542, %vr548

	; bop ADR == 53254
	%vr552 = load i64, i64* %ADR.102
	%vr553 = bitcast i64 %vr552 to i64
	%vr554 = bitcast i64 53254 to i64
	%vr551 = icmp eq i64 %vr553, %vr554
	%vr555 = sext i1 %vr551 to i64

	; bop vr549 OR vr555
	%vr556 = or i64 %vr549, %vr555

	; bop ADR == 53256
	%vr559 = load i64, i64* %ADR.102
	%vr560 = bitcast i64 %vr559 to i64
	%vr561 = bitcast i64 53256 to i64
	%vr558 = icmp eq i64 %vr560, %vr561
	%vr562 = sext i1 %vr558 to i64

	; bop vr556 OR vr562
	%vr563 = or i64 %vr556, %vr562

	; bop ADR == 53258
	%vr566 = load i64, i64* %ADR.102
	%vr567 = bitcast i64 %vr566 to i64
	%vr568 = bitcast i64 53258 to i64
	%vr565 = icmp eq i64 %vr567, %vr568
	%vr569 = sext i1 %vr565 to i64

	; bop vr563 OR vr569
	%vr570 = or i64 %vr563, %vr569

	; bop ADR == 53260
	%vr573 = load i64, i64* %ADR.102
	%vr574 = bitcast i64 %vr573 to i64
	%vr575 = bitcast i64 53260 to i64
	%vr572 = icmp eq i64 %vr574, %vr575
	%vr576 = sext i1 %vr572 to i64

	; bop vr570 OR vr576
	%vr577 = or i64 %vr570, %vr576

	; bop ADR == 53262
	%vr580 = load i64, i64* %ADR.102
	%vr581 = bitcast i64 %vr580 to i64
	%vr582 = bitcast i64 53262 to i64
	%vr579 = icmp eq i64 %vr581, %vr582
	%vr583 = sext i1 %vr579 to i64

	; bop vr577 OR vr583
	%vr584 = or i64 %vr577, %vr583

	; branchbop vr584 == 0
	%vr585 = icmp eq i64 %vr584, 0
	br i1 %vr585, label %.Lt_0480, label %.Lt_0E7A
.Lt_0E7A:

	; conv SYS_OFFSET => vr586
	%vr587 = load i32, i32* @SYS_OFFSET
	%vr586 = sext i32 %vr587 to i64

	; bop vr586 + 203
	%vr588 = add i64 %vr586, 203
	%vr589 = bitcast i64 %vr588 to i64

	; call POKE64()
	; arg THIS
	%vr590 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr589
	; arg V
	%vr591 = load i64, i64* %V.103
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr590, i64 %vr589, i64 %vr591 )

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0E7B:

	; label .Lt_0480
	br label %.Lt_0480
.Lt_0480:

	; bop ADR == 53249
	%vr594 = load i64, i64* %ADR.102
	%vr595 = bitcast i64 %vr594 to i64
	%vr596 = bitcast i64 53249 to i64
	%vr593 = icmp eq i64 %vr595, %vr596
	%vr597 = sext i1 %vr593 to i64

	; bop ADR == 53251
	%vr600 = load i64, i64* %ADR.102
	%vr601 = bitcast i64 %vr600 to i64
	%vr602 = bitcast i64 53251 to i64
	%vr599 = icmp eq i64 %vr601, %vr602
	%vr603 = sext i1 %vr599 to i64

	; bop vr597 OR vr603
	%vr604 = or i64 %vr597, %vr603

	; bop ADR == 53253
	%vr607 = load i64, i64* %ADR.102
	%vr608 = bitcast i64 %vr607 to i64
	%vr609 = bitcast i64 53253 to i64
	%vr606 = icmp eq i64 %vr608, %vr609
	%vr610 = sext i1 %vr606 to i64

	; bop vr604 OR vr610
	%vr611 = or i64 %vr604, %vr610

	; bop ADR == 53255
	%vr614 = load i64, i64* %ADR.102
	%vr615 = bitcast i64 %vr614 to i64
	%vr616 = bitcast i64 53255 to i64
	%vr613 = icmp eq i64 %vr615, %vr616
	%vr617 = sext i1 %vr613 to i64

	; bop vr611 OR vr617
	%vr618 = or i64 %vr611, %vr617

	; bop ADR == 53257
	%vr621 = load i64, i64* %ADR.102
	%vr622 = bitcast i64 %vr621 to i64
	%vr623 = bitcast i64 53257 to i64
	%vr620 = icmp eq i64 %vr622, %vr623
	%vr624 = sext i1 %vr620 to i64

	; bop vr618 OR vr624
	%vr625 = or i64 %vr618, %vr624

	; bop ADR == 53259
	%vr628 = load i64, i64* %ADR.102
	%vr629 = bitcast i64 %vr628 to i64
	%vr630 = bitcast i64 53259 to i64
	%vr627 = icmp eq i64 %vr629, %vr630
	%vr631 = sext i1 %vr627 to i64

	; bop vr625 OR vr631
	%vr632 = or i64 %vr625, %vr631

	; bop ADR == 53261
	%vr635 = load i64, i64* %ADR.102
	%vr636 = bitcast i64 %vr635 to i64
	%vr637 = bitcast i64 53261 to i64
	%vr634 = icmp eq i64 %vr636, %vr637
	%vr638 = sext i1 %vr634 to i64

	; bop vr632 OR vr638
	%vr639 = or i64 %vr632, %vr638

	; bop ADR == 53263
	%vr642 = load i64, i64* %ADR.102
	%vr643 = bitcast i64 %vr642 to i64
	%vr644 = bitcast i64 53263 to i64
	%vr641 = icmp eq i64 %vr643, %vr644
	%vr645 = sext i1 %vr641 to i64

	; bop vr639 OR vr645
	%vr646 = or i64 %vr639, %vr645

	; branchbop vr646 == 0
	%vr647 = icmp eq i64 %vr646, 0
	br i1 %vr647, label %.Lt_0481, label %.Lt_0E7C
.Lt_0E7C:

	; conv SYS_OFFSET => vr648
	%vr649 = load i32, i32* @SYS_OFFSET
	%vr648 = sext i32 %vr649 to i64

	; bop vr648 + 204
	%vr650 = add i64 %vr648, 204
	%vr651 = bitcast i64 %vr650 to i64

	; call POKE64()
	; arg THIS
	%vr652 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr651
	; arg V
	%vr653 = load i64, i64* %V.103
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr652, i64 %vr651, i64 %vr653 )

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0E7D:

	; label .Lt_0481
	br label %.Lt_0481
.Lt_0481:

	; branchbop ADR <> 53269
	%vr656 = load i64, i64* %ADR.102
	%vr655 = icmp ne i64 %vr656, 53269
	br i1 %vr655, label %.Lt_0482, label %.Lt_0E7E
.Lt_0E7E:

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0E7F:

	; label .Lt_0482
	br label %.Lt_0482
.Lt_0482:

	; branchbop ADR <> 53280
	%vr660 = load i64, i64* %ADR.102
	%vr659 = icmp ne i64 %vr660, 53280
	br i1 %vr659, label %.Lt_0483, label %.Lt_0E80
.Lt_0E80:

	; branchbop V <> 0
	%vr664 = load i64, i64* %V.103
	%vr663 = icmp ne i64 %vr664, 0
	br i1 %vr663, label %.Lt_0485, label %.Lt_0E81
.Lt_0E81:

	; label .Lt_0486
	br label %.Lt_0486
.Lt_0486:

	; conv SYS_OFFSET => vr666
	%vr667 = load i32, i32* @SYS_OFFSET
	%vr666 = sext i32 %vr667 to i64

	; bop vr666 + 172
	%vr668 = add i64 %vr666, 172
	%vr669 = bitcast i64 %vr668 to i64

	; call POKE64()
	; arg THIS
	%vr670 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr669
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr670, i64 %vr669, i64 0 )

	; conv SYS_OFFSET => vr671
	%vr672 = load i32, i32* @SYS_OFFSET
	%vr671 = sext i32 %vr672 to i64

	; bop vr671 + 173
	%vr673 = add i64 %vr671, 173
	%vr674 = bitcast i64 %vr673 to i64

	; call POKE64()
	; arg THIS
	%vr675 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr674
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr675, i64 %vr674, i64 0 )

	; conv SYS_OFFSET => vr676
	%vr677 = load i32, i32* @SYS_OFFSET
	%vr676 = sext i32 %vr677 to i64

	; bop vr676 + 174
	%vr678 = add i64 %vr676, 174
	%vr679 = bitcast i64 %vr678 to i64

	; call POKE64()
	; arg THIS
	%vr680 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr679
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr680, i64 %vr679, i64 0 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E82:

	; label .Lt_0485
	br label %.Lt_0485
.Lt_0485:

	; branchbop V <> 1
	%vr683 = load i64, i64* %V.103
	%vr682 = icmp ne i64 %vr683, 1
	br i1 %vr682, label %.Lt_0487, label %.Lt_0E83
.Lt_0E83:

	; label .Lt_0488
	br label %.Lt_0488
.Lt_0488:

	; conv SYS_OFFSET => vr685
	%vr686 = load i32, i32* @SYS_OFFSET
	%vr685 = sext i32 %vr686 to i64

	; bop vr685 + 172
	%vr687 = add i64 %vr685, 172
	%vr688 = bitcast i64 %vr687 to i64

	; call POKE64()
	; arg THIS
	%vr689 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr688
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr689, i64 %vr688, i64 0 )

	; conv SYS_OFFSET => vr690
	%vr691 = load i32, i32* @SYS_OFFSET
	%vr690 = sext i32 %vr691 to i64

	; bop vr690 + 173
	%vr692 = add i64 %vr690, 173
	%vr693 = bitcast i64 %vr692 to i64

	; call POKE64()
	; arg THIS
	%vr694 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr693
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr694, i64 %vr693, i64 0 )

	; conv SYS_OFFSET => vr695
	%vr696 = load i32, i32* @SYS_OFFSET
	%vr695 = sext i32 %vr696 to i64

	; bop vr695 + 174
	%vr697 = add i64 %vr695, 174
	%vr698 = bitcast i64 %vr697 to i64

	; call POKE64()
	; arg THIS
	%vr699 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr698
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr699, i64 %vr698, i64 170 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E84:

	; label .Lt_0487
	br label %.Lt_0487
.Lt_0487:

	; branchbop V <> 2
	%vr702 = load i64, i64* %V.103
	%vr701 = icmp ne i64 %vr702, 2
	br i1 %vr701, label %.Lt_0489, label %.Lt_0E85
.Lt_0E85:

	; label .Lt_048A
	br label %.Lt_048A
.Lt_048A:

	; conv SYS_OFFSET => vr704
	%vr705 = load i32, i32* @SYS_OFFSET
	%vr704 = sext i32 %vr705 to i64

	; bop vr704 + 172
	%vr706 = add i64 %vr704, 172
	%vr707 = bitcast i64 %vr706 to i64

	; call POKE64()
	; arg THIS
	%vr708 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr707
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr708, i64 %vr707, i64 0 )

	; conv SYS_OFFSET => vr709
	%vr710 = load i32, i32* @SYS_OFFSET
	%vr709 = sext i32 %vr710 to i64

	; bop vr709 + 173
	%vr711 = add i64 %vr709, 173
	%vr712 = bitcast i64 %vr711 to i64

	; call POKE64()
	; arg THIS
	%vr713 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr712
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr713, i64 %vr712, i64 170 )

	; conv SYS_OFFSET => vr714
	%vr715 = load i32, i32* @SYS_OFFSET
	%vr714 = sext i32 %vr715 to i64

	; bop vr714 + 174
	%vr716 = add i64 %vr714, 174
	%vr717 = bitcast i64 %vr716 to i64

	; call POKE64()
	; arg THIS
	%vr718 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr717
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr718, i64 %vr717, i64 0 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E86:

	; label .Lt_0489
	br label %.Lt_0489
.Lt_0489:

	; branchbop V <> 3
	%vr721 = load i64, i64* %V.103
	%vr720 = icmp ne i64 %vr721, 3
	br i1 %vr720, label %.Lt_048B, label %.Lt_0E87
.Lt_0E87:

	; label .Lt_048C
	br label %.Lt_048C
.Lt_048C:

	; conv SYS_OFFSET => vr723
	%vr724 = load i32, i32* @SYS_OFFSET
	%vr723 = sext i32 %vr724 to i64

	; bop vr723 + 172
	%vr725 = add i64 %vr723, 172
	%vr726 = bitcast i64 %vr725 to i64

	; call POKE64()
	; arg THIS
	%vr727 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr726
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr727, i64 %vr726, i64 0 )

	; conv SYS_OFFSET => vr728
	%vr729 = load i32, i32* @SYS_OFFSET
	%vr728 = sext i32 %vr729 to i64

	; bop vr728 + 173
	%vr730 = add i64 %vr728, 173
	%vr731 = bitcast i64 %vr730 to i64

	; call POKE64()
	; arg THIS
	%vr732 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr731
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr732, i64 %vr731, i64 170 )

	; conv SYS_OFFSET => vr733
	%vr734 = load i32, i32* @SYS_OFFSET
	%vr733 = sext i32 %vr734 to i64

	; bop vr733 + 174
	%vr735 = add i64 %vr733, 174
	%vr736 = bitcast i64 %vr735 to i64

	; call POKE64()
	; arg THIS
	%vr737 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr736
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr737, i64 %vr736, i64 170 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E88:

	; label .Lt_048B
	br label %.Lt_048B
.Lt_048B:

	; branchbop V <> 4
	%vr740 = load i64, i64* %V.103
	%vr739 = icmp ne i64 %vr740, 4
	br i1 %vr739, label %.Lt_048D, label %.Lt_0E89
.Lt_0E89:

	; label .Lt_048E
	br label %.Lt_048E
.Lt_048E:

	; conv SYS_OFFSET => vr742
	%vr743 = load i32, i32* @SYS_OFFSET
	%vr742 = sext i32 %vr743 to i64

	; bop vr742 + 172
	%vr744 = add i64 %vr742, 172
	%vr745 = bitcast i64 %vr744 to i64

	; call POKE64()
	; arg THIS
	%vr746 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr745
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr746, i64 %vr745, i64 170 )

	; conv SYS_OFFSET => vr747
	%vr748 = load i32, i32* @SYS_OFFSET
	%vr747 = sext i32 %vr748 to i64

	; bop vr747 + 173
	%vr749 = add i64 %vr747, 173
	%vr750 = bitcast i64 %vr749 to i64

	; call POKE64()
	; arg THIS
	%vr751 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr750
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr751, i64 %vr750, i64 0 )

	; conv SYS_OFFSET => vr752
	%vr753 = load i32, i32* @SYS_OFFSET
	%vr752 = sext i32 %vr753 to i64

	; bop vr752 + 174
	%vr754 = add i64 %vr752, 174
	%vr755 = bitcast i64 %vr754 to i64

	; call POKE64()
	; arg THIS
	%vr756 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr755
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr756, i64 %vr755, i64 0 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E8A:

	; label .Lt_048D
	br label %.Lt_048D
.Lt_048D:

	; branchbop V <> 5
	%vr759 = load i64, i64* %V.103
	%vr758 = icmp ne i64 %vr759, 5
	br i1 %vr758, label %.Lt_048F, label %.Lt_0E8B
.Lt_0E8B:

	; label .Lt_0490
	br label %.Lt_0490
.Lt_0490:

	; conv SYS_OFFSET => vr761
	%vr762 = load i32, i32* @SYS_OFFSET
	%vr761 = sext i32 %vr762 to i64

	; bop vr761 + 172
	%vr763 = add i64 %vr761, 172
	%vr764 = bitcast i64 %vr763 to i64

	; call POKE64()
	; arg THIS
	%vr765 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr764
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr765, i64 %vr764, i64 170 )

	; conv SYS_OFFSET => vr766
	%vr767 = load i32, i32* @SYS_OFFSET
	%vr766 = sext i32 %vr767 to i64

	; bop vr766 + 173
	%vr768 = add i64 %vr766, 173
	%vr769 = bitcast i64 %vr768 to i64

	; call POKE64()
	; arg THIS
	%vr770 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr769
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr770, i64 %vr769, i64 0 )

	; conv SYS_OFFSET => vr771
	%vr772 = load i32, i32* @SYS_OFFSET
	%vr771 = sext i32 %vr772 to i64

	; bop vr771 + 174
	%vr773 = add i64 %vr771, 174
	%vr774 = bitcast i64 %vr773 to i64

	; call POKE64()
	; arg THIS
	%vr775 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr774
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr775, i64 %vr774, i64 170 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E8C:

	; label .Lt_048F
	br label %.Lt_048F
.Lt_048F:

	; branchbop V <> 6
	%vr778 = load i64, i64* %V.103
	%vr777 = icmp ne i64 %vr778, 6
	br i1 %vr777, label %.Lt_0491, label %.Lt_0E8D
.Lt_0E8D:

	; label .Lt_0492
	br label %.Lt_0492
.Lt_0492:

	; conv SYS_OFFSET => vr780
	%vr781 = load i32, i32* @SYS_OFFSET
	%vr780 = sext i32 %vr781 to i64

	; bop vr780 + 172
	%vr782 = add i64 %vr780, 172
	%vr783 = bitcast i64 %vr782 to i64

	; call POKE64()
	; arg THIS
	%vr784 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr783
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr784, i64 %vr783, i64 170 )

	; conv SYS_OFFSET => vr785
	%vr786 = load i32, i32* @SYS_OFFSET
	%vr785 = sext i32 %vr786 to i64

	; bop vr785 + 173
	%vr787 = add i64 %vr785, 173
	%vr788 = bitcast i64 %vr787 to i64

	; call POKE64()
	; arg THIS
	%vr789 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr788
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr789, i64 %vr788, i64 85 )

	; conv SYS_OFFSET => vr790
	%vr791 = load i32, i32* @SYS_OFFSET
	%vr790 = sext i32 %vr791 to i64

	; bop vr790 + 174
	%vr792 = add i64 %vr790, 174
	%vr793 = bitcast i64 %vr792 to i64

	; call POKE64()
	; arg THIS
	%vr794 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr793
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr794, i64 %vr793, i64 0 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E8E:

	; label .Lt_0491
	br label %.Lt_0491
.Lt_0491:

	; branchbop V <> 7
	%vr797 = load i64, i64* %V.103
	%vr796 = icmp ne i64 %vr797, 7
	br i1 %vr796, label %.Lt_0493, label %.Lt_0E8F
.Lt_0E8F:

	; label .Lt_0494
	br label %.Lt_0494
.Lt_0494:

	; conv SYS_OFFSET => vr799
	%vr800 = load i32, i32* @SYS_OFFSET
	%vr799 = sext i32 %vr800 to i64

	; bop vr799 + 172
	%vr801 = add i64 %vr799, 172
	%vr802 = bitcast i64 %vr801 to i64

	; call POKE64()
	; arg THIS
	%vr803 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr802
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr803, i64 %vr802, i64 170 )

	; conv SYS_OFFSET => vr804
	%vr805 = load i32, i32* @SYS_OFFSET
	%vr804 = sext i32 %vr805 to i64

	; bop vr804 + 173
	%vr806 = add i64 %vr804, 173
	%vr807 = bitcast i64 %vr806 to i64

	; call POKE64()
	; arg THIS
	%vr808 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr807
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr808, i64 %vr807, i64 170 )

	; conv SYS_OFFSET => vr809
	%vr810 = load i32, i32* @SYS_OFFSET
	%vr809 = sext i32 %vr810 to i64

	; bop vr809 + 174
	%vr811 = add i64 %vr809, 174
	%vr812 = bitcast i64 %vr811 to i64

	; call POKE64()
	; arg THIS
	%vr813 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr812
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr813, i64 %vr812, i64 170 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E90:

	; label .Lt_0493
	br label %.Lt_0493
.Lt_0493:

	; branchbop V <> 8
	%vr816 = load i64, i64* %V.103
	%vr815 = icmp ne i64 %vr816, 8
	br i1 %vr815, label %.Lt_0495, label %.Lt_0E91
.Lt_0E91:

	; label .Lt_0496
	br label %.Lt_0496
.Lt_0496:

	; conv SYS_OFFSET => vr818
	%vr819 = load i32, i32* @SYS_OFFSET
	%vr818 = sext i32 %vr819 to i64

	; bop vr818 + 172
	%vr820 = add i64 %vr818, 172
	%vr821 = bitcast i64 %vr820 to i64

	; call POKE64()
	; arg THIS
	%vr822 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr821
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr822, i64 %vr821, i64 85 )

	; conv SYS_OFFSET => vr823
	%vr824 = load i32, i32* @SYS_OFFSET
	%vr823 = sext i32 %vr824 to i64

	; bop vr823 + 173
	%vr825 = add i64 %vr823, 173
	%vr826 = bitcast i64 %vr825 to i64

	; call POKE64()
	; arg THIS
	%vr827 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr826
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr827, i64 %vr826, i64 85 )

	; conv SYS_OFFSET => vr828
	%vr829 = load i32, i32* @SYS_OFFSET
	%vr828 = sext i32 %vr829 to i64

	; bop vr828 + 174
	%vr830 = add i64 %vr828, 174
	%vr831 = bitcast i64 %vr830 to i64

	; call POKE64()
	; arg THIS
	%vr832 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr831
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr832, i64 %vr831, i64 85 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E92:

	; label .Lt_0495
	br label %.Lt_0495
.Lt_0495:

	; branchbop V <> 9
	%vr835 = load i64, i64* %V.103
	%vr834 = icmp ne i64 %vr835, 9
	br i1 %vr834, label %.Lt_0497, label %.Lt_0E93
.Lt_0E93:

	; label .Lt_0498
	br label %.Lt_0498
.Lt_0498:

	; conv SYS_OFFSET => vr837
	%vr838 = load i32, i32* @SYS_OFFSET
	%vr837 = sext i32 %vr838 to i64

	; bop vr837 + 172
	%vr839 = add i64 %vr837, 172
	%vr840 = bitcast i64 %vr839 to i64

	; call POKE64()
	; arg THIS
	%vr841 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr840
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr841, i64 %vr840, i64 85 )

	; conv SYS_OFFSET => vr842
	%vr843 = load i32, i32* @SYS_OFFSET
	%vr842 = sext i32 %vr843 to i64

	; bop vr842 + 173
	%vr844 = add i64 %vr842, 173
	%vr845 = bitcast i64 %vr844 to i64

	; call POKE64()
	; arg THIS
	%vr846 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr845
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr846, i64 %vr845, i64 85 )

	; conv SYS_OFFSET => vr847
	%vr848 = load i32, i32* @SYS_OFFSET
	%vr847 = sext i32 %vr848 to i64

	; bop vr847 + 174
	%vr849 = add i64 %vr847, 174
	%vr850 = bitcast i64 %vr849 to i64

	; call POKE64()
	; arg THIS
	%vr851 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr850
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr851, i64 %vr850, i64 255 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E94:

	; label .Lt_0497
	br label %.Lt_0497
.Lt_0497:

	; branchbop V <> 10
	%vr854 = load i64, i64* %V.103
	%vr853 = icmp ne i64 %vr854, 10
	br i1 %vr853, label %.Lt_0499, label %.Lt_0E95
.Lt_0E95:

	; label .Lt_049A
	br label %.Lt_049A
.Lt_049A:

	; call fb_Color()
	; arg -11141291
	; arg 0
	; arg 2
	%vr856 = call i32 @fb_Color( i32 -11141291, i32 0, i32 2 )

	; call fb_GfxLine()
	; arg 0
	; arg 120
	%vr860 = fpext float 0x405E000000000000 to float
	; arg 99
	%vr861 = fpext float 0x4058C00000000000 to float
	; arg 1723
	%vr862 = fpext float 0x409AEC0000000000 to float
	; arg 896
	%vr863 = fpext float 0x408C000000000000 to float
	; arg 0
	; arg 1
	; arg 65535
	; arg -2147483648
	call void @fb_GfxLine( i8* 0, float %vr860, float %vr861, float %vr862, float %vr863, i32 0, i32 1, i32 65535, i32 -2147483648 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr869 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr868 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr869, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr871 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr872 = fpext float 0x0000000000000000 to float
	; arg 0
	; arg 0
	; arg vr868
	%vr875 = bitcast %FBSTRING* %vr868 to %FBSTRING*
	; arg 0
	; arg -1073741820
	call void @fb_GfxPaint( i8* 0, float %vr871, float %vr872, i32 0, i32 0, %FBSTRING* %vr875, i32 0, i32 -1073741820 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E96:

	; label .Lt_0499
	br label %.Lt_0499
.Lt_0499:

	; branchbop V <> 11
	%vr880 = load i64, i64* %V.103
	%vr879 = icmp ne i64 %vr880, 11
	br i1 %vr879, label %.Lt_049B, label %.Lt_0E97
.Lt_0E97:

	; label .Lt_049C
	br label %.Lt_049C
.Lt_049C:

	; conv SYS_OFFSET => vr882
	%vr883 = load i32, i32* @SYS_OFFSET
	%vr882 = sext i32 %vr883 to i64

	; bop vr882 + 172
	%vr884 = add i64 %vr882, 172
	%vr885 = bitcast i64 %vr884 to i64

	; call POKE64()
	; arg THIS
	%vr886 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr885
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr886, i64 %vr885, i64 85 )

	; conv SYS_OFFSET => vr887
	%vr888 = load i32, i32* @SYS_OFFSET
	%vr887 = sext i32 %vr888 to i64

	; bop vr887 + 173
	%vr889 = add i64 %vr887, 173
	%vr890 = bitcast i64 %vr889 to i64

	; call POKE64()
	; arg THIS
	%vr891 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr890
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr891, i64 %vr890, i64 255 )

	; conv SYS_OFFSET => vr892
	%vr893 = load i32, i32* @SYS_OFFSET
	%vr892 = sext i32 %vr893 to i64

	; bop vr892 + 174
	%vr894 = add i64 %vr892, 174
	%vr895 = bitcast i64 %vr894 to i64

	; call POKE64()
	; arg THIS
	%vr896 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr895
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr896, i64 %vr895, i64 255 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E98:

	; label .Lt_049B
	br label %.Lt_049B
.Lt_049B:

	; branchbop V <> 12
	%vr899 = load i64, i64* %V.103
	%vr898 = icmp ne i64 %vr899, 12
	br i1 %vr898, label %.Lt_049D, label %.Lt_0E99
.Lt_0E99:

	; label .Lt_049E
	br label %.Lt_049E
.Lt_049E:

	; conv SYS_OFFSET => vr901
	%vr902 = load i32, i32* @SYS_OFFSET
	%vr901 = sext i32 %vr902 to i64

	; bop vr901 + 172
	%vr903 = add i64 %vr901, 172
	%vr904 = bitcast i64 %vr903 to i64

	; call POKE64()
	; arg THIS
	%vr905 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr904
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr905, i64 %vr904, i64 255 )

	; conv SYS_OFFSET => vr906
	%vr907 = load i32, i32* @SYS_OFFSET
	%vr906 = sext i32 %vr907 to i64

	; bop vr906 + 173
	%vr908 = add i64 %vr906, 173
	%vr909 = bitcast i64 %vr908 to i64

	; call POKE64()
	; arg THIS
	%vr910 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr909
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr910, i64 %vr909, i64 85 )

	; conv SYS_OFFSET => vr911
	%vr912 = load i32, i32* @SYS_OFFSET
	%vr911 = sext i32 %vr912 to i64

	; bop vr911 + 174
	%vr913 = add i64 %vr911, 174
	%vr914 = bitcast i64 %vr913 to i64

	; call POKE64()
	; arg THIS
	%vr915 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr914
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr915, i64 %vr914, i64 85 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E9A:

	; label .Lt_049D
	br label %.Lt_049D
.Lt_049D:

	; branchbop V <> 13
	%vr918 = load i64, i64* %V.103
	%vr917 = icmp ne i64 %vr918, 13
	br i1 %vr917, label %.Lt_049F, label %.Lt_0E9B
.Lt_0E9B:

	; label .Lt_04A0
	br label %.Lt_04A0
.Lt_04A0:

	; conv SYS_OFFSET => vr920
	%vr921 = load i32, i32* @SYS_OFFSET
	%vr920 = sext i32 %vr921 to i64

	; bop vr920 + 172
	%vr922 = add i64 %vr920, 172
	%vr923 = bitcast i64 %vr922 to i64

	; call POKE64()
	; arg THIS
	%vr924 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr923
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr924, i64 %vr923, i64 255 )

	; conv SYS_OFFSET => vr925
	%vr926 = load i32, i32* @SYS_OFFSET
	%vr925 = sext i32 %vr926 to i64

	; bop vr925 + 173
	%vr927 = add i64 %vr925, 173
	%vr928 = bitcast i64 %vr927 to i64

	; call POKE64()
	; arg THIS
	%vr929 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr928
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr929, i64 %vr928, i64 85 )

	; conv SYS_OFFSET => vr930
	%vr931 = load i32, i32* @SYS_OFFSET
	%vr930 = sext i32 %vr931 to i64

	; bop vr930 + 174
	%vr932 = add i64 %vr930, 174
	%vr933 = bitcast i64 %vr932 to i64

	; call POKE64()
	; arg THIS
	%vr934 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr933
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr934, i64 %vr933, i64 255 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E9C:

	; label .Lt_049F
	br label %.Lt_049F
.Lt_049F:

	; branchbop V <> 14
	%vr937 = load i64, i64* %V.103
	%vr936 = icmp ne i64 %vr937, 14
	br i1 %vr936, label %.Lt_04A1, label %.Lt_0E9D
.Lt_0E9D:

	; label .Lt_04A2
	br label %.Lt_04A2
.Lt_04A2:

	; conv SYS_OFFSET => vr939
	%vr940 = load i32, i32* @SYS_OFFSET
	%vr939 = sext i32 %vr940 to i64

	; bop vr939 + 172
	%vr941 = add i64 %vr939, 172
	%vr942 = bitcast i64 %vr941 to i64

	; call POKE64()
	; arg THIS
	%vr943 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr942
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr943, i64 %vr942, i64 255 )

	; conv SYS_OFFSET => vr944
	%vr945 = load i32, i32* @SYS_OFFSET
	%vr944 = sext i32 %vr945 to i64

	; bop vr944 + 173
	%vr946 = add i64 %vr944, 173
	%vr947 = bitcast i64 %vr946 to i64

	; call POKE64()
	; arg THIS
	%vr948 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr947
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr948, i64 %vr947, i64 255 )

	; conv SYS_OFFSET => vr949
	%vr950 = load i32, i32* @SYS_OFFSET
	%vr949 = sext i32 %vr950 to i64

	; bop vr949 + 174
	%vr951 = add i64 %vr949, 174
	%vr952 = bitcast i64 %vr951 to i64

	; call POKE64()
	; arg THIS
	%vr953 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr952
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr953, i64 %vr952, i64 85 )

	; goto .Lt_0484
	br label %.Lt_0484
.Lt_0E9E:

	; label .Lt_04A1
	br label %.Lt_04A1
.Lt_04A1:

	; branchbop V <> 15
	%vr956 = load i64, i64* %V.103
	%vr955 = icmp ne i64 %vr956, 15
	br i1 %vr955, label %.Lt_04A3, label %.Lt_0E9F
.Lt_0E9F:

	; label .Lt_04A4
	br label %.Lt_04A4
.Lt_04A4:

	; conv SYS_OFFSET => vr958
	%vr959 = load i32, i32* @SYS_OFFSET
	%vr958 = sext i32 %vr959 to i64

	; bop vr958 + 172
	%vr960 = add i64 %vr958, 172
	%vr961 = bitcast i64 %vr960 to i64

	; call POKE64()
	; arg THIS
	%vr962 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr961
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr962, i64 %vr961, i64 255 )

	; conv SYS_OFFSET => vr963
	%vr964 = load i32, i32* @SYS_OFFSET
	%vr963 = sext i32 %vr964 to i64

	; bop vr963 + 173
	%vr965 = add i64 %vr963, 173
	%vr966 = bitcast i64 %vr965 to i64

	; call POKE64()
	; arg THIS
	%vr967 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr966
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr967, i64 %vr966, i64 255 )

	; conv SYS_OFFSET => vr968
	%vr969 = load i32, i32* @SYS_OFFSET
	%vr968 = sext i32 %vr969 to i64

	; bop vr968 + 174
	%vr970 = add i64 %vr968, 174
	%vr971 = bitcast i64 %vr970 to i64

	; call POKE64()
	; arg THIS
	%vr972 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr971
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr972, i64 %vr971, i64 255 )

	; label .Lt_04A3
	br label %.Lt_04A3
.Lt_04A3:

	; label .Lt_0484
	br label %.Lt_0484
.Lt_0484:

	; conv SYS_OFFSET => vr973
	%vr974 = load i32, i32* @SYS_OFFSET
	%vr973 = sext i32 %vr974 to i64

	; bop vr973 SHL 3
	%vr975 = shl i64 %vr973, 3

	; bop THIS + vr975
	%vr977 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr978 = inttoptr i64 %vr975 to %MEMORY_T*
	%vr976 = add %MEMORY_T* %vr977, %vr978

	; conv vr976+1376 => vr979
	%vr981 = ptrtoint %MEMORY_T* %vr976 to i64
	%vr982 = add i64 %vr981, 1376
	%vr983 = inttoptr i64 %vr982 to double*
	%vr984 = load double, double* %vr983
	%vr980 = call double @llvm.nearbyint.f64(double %vr984)
	%vr979 = fptosi double %vr980 to i32

	; call fb_Color()
	; arg vr979
	; arg 0
	; arg 2
	%vr985 = call i32 @fb_Color( i32 %vr979, i32 0, i32 2 )

	; call fb_GfxLine()
	; arg 0
	; arg 120
	%vr988 = fpext float 0x405E000000000000 to float
	; arg 99
	%vr989 = fpext float 0x4058C00000000000 to float
	; arg 1723
	%vr990 = fpext float 0x409AEC0000000000 to float
	; arg 896
	%vr991 = fpext float 0x408C000000000000 to float
	; arg 0
	; arg 1
	; arg 65535
	; arg -2147483648
	call void @fb_GfxLine( i8* 0, float %vr988, float %vr989, float %vr990, float %vr991, i32 0, i32 1, i32 65535, i32 -2147483648 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr997 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr997, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr999 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr1000 = fpext float 0x0000000000000000 to float
	; arg 0
	; arg 0
	; arg vr996
	%vr1003 = bitcast %FBSTRING* %vr996 to %FBSTRING*
	; arg 0
	; arg -1073741820
	call void @fb_GfxPaint( i8* 0, float %vr999, float %vr1000, i32 0, i32 0, %FBSTRING* %vr1003, i32 0, i32 -1073741820 )

	; goto .Lt_043B
	br label %.Lt_043B
.Lt_0EA0:

	; label .Lt_0483
	br label %.Lt_0483
.Lt_0483:

	; bop ADR == 53281
	%vr1008 = load i64, i64* %ADR.102
	%vr1009 = bitcast i64 %vr1008 to i64
	%vr1010 = bitcast i64 53281 to i64
	%vr1007 = icmp eq i64 %vr1009, %vr1010
	%vr1011 = sext i1 %vr1007 to i64

	; bop ADR == 53282
	%vr1014 = load i64, i64* %ADR.102
	%vr1015 = bitcast i64 %vr1014 to i64
	%vr1016 = bitcast i64 53282 to i64
	%vr1013 = icmp eq i64 %vr1015, %vr1016
	%vr1017 = sext i1 %vr1013 to i64

	; bop vr1011 OR vr1017
	%vr1018 = or i64 %vr1011, %vr1017

	; bop ADR == 53283
	%vr1021 = load i64, i64* %ADR.102
	%vr1022 = bitcast i64 %vr1021 to i64
	%vr1023 = bitcast i64 53283 to i64
	%vr1020 = icmp eq i64 %vr1022, %vr1023
	%vr1024 = sext i1 %vr1020 to i64

	; bop vr1018 OR vr1024
	%vr1025 = or i64 %vr1018, %vr1024

	; bop ADR == 53284
	%vr1028 = load i64, i64* %ADR.102
	%vr1029 = bitcast i64 %vr1028 to i64
	%vr1030 = bitcast i64 53284 to i64
	%vr1027 = icmp eq i64 %vr1029, %vr1030
	%vr1031 = sext i1 %vr1027 to i64

	; bop vr1025 OR vr1031
	%vr1032 = or i64 %vr1025, %vr1031

	; branchbop vr1032 == 0
	%vr1033 = icmp eq i64 %vr1032, 0
	br i1 %vr1033, label %.Lt_04A5, label %.Lt_0EA1
.Lt_0EA1:

	; branchbop V <> 0
	%vr1036 = load i64, i64* %V.103
	%vr1035 = icmp ne i64 %vr1036, 0
	br i1 %vr1035, label %.Lt_04A7, label %.Lt_0EA2
.Lt_0EA2:

	; label .Lt_04A8
	br label %.Lt_04A8
.Lt_04A8:

	; conv SYS_OFFSET => vr1038
	%vr1039 = load i32, i32* @SYS_OFFSET
	%vr1038 = sext i32 %vr1039 to i64

	; bop vr1038 + 6
	%vr1040 = add i64 %vr1038, 6
	%vr1041 = bitcast i64 %vr1040 to i64

	; call POKE64()
	; arg THIS
	%vr1042 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1041
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1042, i64 %vr1041, i64 0 )

	; conv SYS_OFFSET => vr1043
	%vr1044 = load i32, i32* @SYS_OFFSET
	%vr1043 = sext i32 %vr1044 to i64

	; bop vr1043 + 7
	%vr1045 = add i64 %vr1043, 7
	%vr1046 = bitcast i64 %vr1045 to i64

	; call POKE64()
	; arg THIS
	%vr1047 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1046
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1047, i64 %vr1046, i64 0 )

	; conv SYS_OFFSET => vr1048
	%vr1049 = load i32, i32* @SYS_OFFSET
	%vr1048 = sext i32 %vr1049 to i64

	; bop vr1048 + 8
	%vr1050 = add i64 %vr1048, 8
	%vr1051 = bitcast i64 %vr1050 to i64

	; call POKE64()
	; arg THIS
	%vr1052 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1051
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1052, i64 %vr1051, i64 0 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EA3:

	; label .Lt_04A7
	br label %.Lt_04A7
.Lt_04A7:

	; branchbop V <> 1
	%vr1055 = load i64, i64* %V.103
	%vr1054 = icmp ne i64 %vr1055, 1
	br i1 %vr1054, label %.Lt_04A9, label %.Lt_0EA4
.Lt_0EA4:

	; label .Lt_04AA
	br label %.Lt_04AA
.Lt_04AA:

	; conv SYS_OFFSET => vr1057
	%vr1058 = load i32, i32* @SYS_OFFSET
	%vr1057 = sext i32 %vr1058 to i64

	; bop vr1057 + 6
	%vr1059 = add i64 %vr1057, 6
	%vr1060 = bitcast i64 %vr1059 to i64

	; call POKE64()
	; arg THIS
	%vr1061 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1060
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1061, i64 %vr1060, i64 0 )

	; conv SYS_OFFSET => vr1062
	%vr1063 = load i32, i32* @SYS_OFFSET
	%vr1062 = sext i32 %vr1063 to i64

	; bop vr1062 + 7
	%vr1064 = add i64 %vr1062, 7
	%vr1065 = bitcast i64 %vr1064 to i64

	; call POKE64()
	; arg THIS
	%vr1066 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1065
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1066, i64 %vr1065, i64 0 )

	; conv SYS_OFFSET => vr1067
	%vr1068 = load i32, i32* @SYS_OFFSET
	%vr1067 = sext i32 %vr1068 to i64

	; bop vr1067 + 8
	%vr1069 = add i64 %vr1067, 8
	%vr1070 = bitcast i64 %vr1069 to i64

	; call POKE64()
	; arg THIS
	%vr1071 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1070
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1071, i64 %vr1070, i64 170 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EA5:

	; label .Lt_04A9
	br label %.Lt_04A9
.Lt_04A9:

	; branchbop V <> 2
	%vr1074 = load i64, i64* %V.103
	%vr1073 = icmp ne i64 %vr1074, 2
	br i1 %vr1073, label %.Lt_04AB, label %.Lt_0EA6
.Lt_0EA6:

	; label .Lt_04AC
	br label %.Lt_04AC
.Lt_04AC:

	; conv SYS_OFFSET => vr1076
	%vr1077 = load i32, i32* @SYS_OFFSET
	%vr1076 = sext i32 %vr1077 to i64

	; bop vr1076 + 6
	%vr1078 = add i64 %vr1076, 6
	%vr1079 = bitcast i64 %vr1078 to i64

	; call POKE64()
	; arg THIS
	%vr1080 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1079
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1080, i64 %vr1079, i64 0 )

	; conv SYS_OFFSET => vr1081
	%vr1082 = load i32, i32* @SYS_OFFSET
	%vr1081 = sext i32 %vr1082 to i64

	; bop vr1081 + 7
	%vr1083 = add i64 %vr1081, 7
	%vr1084 = bitcast i64 %vr1083 to i64

	; call POKE64()
	; arg THIS
	%vr1085 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1084
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1085, i64 %vr1084, i64 170 )

	; conv SYS_OFFSET => vr1086
	%vr1087 = load i32, i32* @SYS_OFFSET
	%vr1086 = sext i32 %vr1087 to i64

	; bop vr1086 + 8
	%vr1088 = add i64 %vr1086, 8
	%vr1089 = bitcast i64 %vr1088 to i64

	; call POKE64()
	; arg THIS
	%vr1090 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1089
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1090, i64 %vr1089, i64 0 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EA7:

	; label .Lt_04AB
	br label %.Lt_04AB
.Lt_04AB:

	; branchbop V <> 3
	%vr1093 = load i64, i64* %V.103
	%vr1092 = icmp ne i64 %vr1093, 3
	br i1 %vr1092, label %.Lt_04AD, label %.Lt_0EA8
.Lt_0EA8:

	; label .Lt_04AE
	br label %.Lt_04AE
.Lt_04AE:

	; conv SYS_OFFSET => vr1095
	%vr1096 = load i32, i32* @SYS_OFFSET
	%vr1095 = sext i32 %vr1096 to i64

	; bop vr1095 + 6
	%vr1097 = add i64 %vr1095, 6
	%vr1098 = bitcast i64 %vr1097 to i64

	; call POKE64()
	; arg THIS
	%vr1099 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1098
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1099, i64 %vr1098, i64 0 )

	; conv SYS_OFFSET => vr1100
	%vr1101 = load i32, i32* @SYS_OFFSET
	%vr1100 = sext i32 %vr1101 to i64

	; bop vr1100 + 7
	%vr1102 = add i64 %vr1100, 7
	%vr1103 = bitcast i64 %vr1102 to i64

	; call POKE64()
	; arg THIS
	%vr1104 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1103
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1104, i64 %vr1103, i64 170 )

	; conv SYS_OFFSET => vr1105
	%vr1106 = load i32, i32* @SYS_OFFSET
	%vr1105 = sext i32 %vr1106 to i64

	; bop vr1105 + 8
	%vr1107 = add i64 %vr1105, 8
	%vr1108 = bitcast i64 %vr1107 to i64

	; call POKE64()
	; arg THIS
	%vr1109 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1108
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1109, i64 %vr1108, i64 170 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EA9:

	; label .Lt_04AD
	br label %.Lt_04AD
.Lt_04AD:

	; branchbop V <> 4
	%vr1112 = load i64, i64* %V.103
	%vr1111 = icmp ne i64 %vr1112, 4
	br i1 %vr1111, label %.Lt_04AF, label %.Lt_0EAA
.Lt_0EAA:

	; label .Lt_04B0
	br label %.Lt_04B0
.Lt_04B0:

	; conv SYS_OFFSET => vr1114
	%vr1115 = load i32, i32* @SYS_OFFSET
	%vr1114 = sext i32 %vr1115 to i64

	; bop vr1114 + 6
	%vr1116 = add i64 %vr1114, 6
	%vr1117 = bitcast i64 %vr1116 to i64

	; call POKE64()
	; arg THIS
	%vr1118 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1117
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1118, i64 %vr1117, i64 170 )

	; conv SYS_OFFSET => vr1119
	%vr1120 = load i32, i32* @SYS_OFFSET
	%vr1119 = sext i32 %vr1120 to i64

	; bop vr1119 + 7
	%vr1121 = add i64 %vr1119, 7
	%vr1122 = bitcast i64 %vr1121 to i64

	; call POKE64()
	; arg THIS
	%vr1123 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1122
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1123, i64 %vr1122, i64 0 )

	; conv SYS_OFFSET => vr1124
	%vr1125 = load i32, i32* @SYS_OFFSET
	%vr1124 = sext i32 %vr1125 to i64

	; bop vr1124 + 8
	%vr1126 = add i64 %vr1124, 8
	%vr1127 = bitcast i64 %vr1126 to i64

	; call POKE64()
	; arg THIS
	%vr1128 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1127
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1128, i64 %vr1127, i64 0 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EAB:

	; label .Lt_04AF
	br label %.Lt_04AF
.Lt_04AF:

	; branchbop V <> 5
	%vr1131 = load i64, i64* %V.103
	%vr1130 = icmp ne i64 %vr1131, 5
	br i1 %vr1130, label %.Lt_04B1, label %.Lt_0EAC
.Lt_0EAC:

	; label .Lt_04B2
	br label %.Lt_04B2
.Lt_04B2:

	; conv SYS_OFFSET => vr1133
	%vr1134 = load i32, i32* @SYS_OFFSET
	%vr1133 = sext i32 %vr1134 to i64

	; bop vr1133 + 6
	%vr1135 = add i64 %vr1133, 6
	%vr1136 = bitcast i64 %vr1135 to i64

	; call POKE64()
	; arg THIS
	%vr1137 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1136
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1137, i64 %vr1136, i64 170 )

	; conv SYS_OFFSET => vr1138
	%vr1139 = load i32, i32* @SYS_OFFSET
	%vr1138 = sext i32 %vr1139 to i64

	; bop vr1138 + 7
	%vr1140 = add i64 %vr1138, 7
	%vr1141 = bitcast i64 %vr1140 to i64

	; call POKE64()
	; arg THIS
	%vr1142 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1141
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1142, i64 %vr1141, i64 0 )

	; conv SYS_OFFSET => vr1143
	%vr1144 = load i32, i32* @SYS_OFFSET
	%vr1143 = sext i32 %vr1144 to i64

	; bop vr1143 + 8
	%vr1145 = add i64 %vr1143, 8
	%vr1146 = bitcast i64 %vr1145 to i64

	; call POKE64()
	; arg THIS
	%vr1147 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1146
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1147, i64 %vr1146, i64 170 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EAD:

	; label .Lt_04B1
	br label %.Lt_04B1
.Lt_04B1:

	; branchbop V <> 6
	%vr1150 = load i64, i64* %V.103
	%vr1149 = icmp ne i64 %vr1150, 6
	br i1 %vr1149, label %.Lt_04B3, label %.Lt_0EAE
.Lt_0EAE:

	; label .Lt_04B4
	br label %.Lt_04B4
.Lt_04B4:

	; conv SYS_OFFSET => vr1152
	%vr1153 = load i32, i32* @SYS_OFFSET
	%vr1152 = sext i32 %vr1153 to i64

	; bop vr1152 + 6
	%vr1154 = add i64 %vr1152, 6
	%vr1155 = bitcast i64 %vr1154 to i64

	; call POKE64()
	; arg THIS
	%vr1156 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1155
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1156, i64 %vr1155, i64 170 )

	; conv SYS_OFFSET => vr1157
	%vr1158 = load i32, i32* @SYS_OFFSET
	%vr1157 = sext i32 %vr1158 to i64

	; bop vr1157 + 7
	%vr1159 = add i64 %vr1157, 7
	%vr1160 = bitcast i64 %vr1159 to i64

	; call POKE64()
	; arg THIS
	%vr1161 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1160
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1161, i64 %vr1160, i64 85 )

	; conv SYS_OFFSET => vr1162
	%vr1163 = load i32, i32* @SYS_OFFSET
	%vr1162 = sext i32 %vr1163 to i64

	; bop vr1162 + 8
	%vr1164 = add i64 %vr1162, 8
	%vr1165 = bitcast i64 %vr1164 to i64

	; call POKE64()
	; arg THIS
	%vr1166 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1165
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1166, i64 %vr1165, i64 0 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EAF:

	; label .Lt_04B3
	br label %.Lt_04B3
.Lt_04B3:

	; branchbop V <> 7
	%vr1169 = load i64, i64* %V.103
	%vr1168 = icmp ne i64 %vr1169, 7
	br i1 %vr1168, label %.Lt_04B5, label %.Lt_0EB0
.Lt_0EB0:

	; label .Lt_04B6
	br label %.Lt_04B6
.Lt_04B6:

	; conv SYS_OFFSET => vr1171
	%vr1172 = load i32, i32* @SYS_OFFSET
	%vr1171 = sext i32 %vr1172 to i64

	; bop vr1171 + 6
	%vr1173 = add i64 %vr1171, 6
	%vr1174 = bitcast i64 %vr1173 to i64

	; call POKE64()
	; arg THIS
	%vr1175 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1174
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1175, i64 %vr1174, i64 170 )

	; conv SYS_OFFSET => vr1176
	%vr1177 = load i32, i32* @SYS_OFFSET
	%vr1176 = sext i32 %vr1177 to i64

	; bop vr1176 + 7
	%vr1178 = add i64 %vr1176, 7
	%vr1179 = bitcast i64 %vr1178 to i64

	; call POKE64()
	; arg THIS
	%vr1180 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1179
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1180, i64 %vr1179, i64 170 )

	; conv SYS_OFFSET => vr1181
	%vr1182 = load i32, i32* @SYS_OFFSET
	%vr1181 = sext i32 %vr1182 to i64

	; bop vr1181 + 8
	%vr1183 = add i64 %vr1181, 8
	%vr1184 = bitcast i64 %vr1183 to i64

	; call POKE64()
	; arg THIS
	%vr1185 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1184
	; arg 170
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1185, i64 %vr1184, i64 170 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EB1:

	; label .Lt_04B5
	br label %.Lt_04B5
.Lt_04B5:

	; branchbop V <> 8
	%vr1188 = load i64, i64* %V.103
	%vr1187 = icmp ne i64 %vr1188, 8
	br i1 %vr1187, label %.Lt_04B7, label %.Lt_0EB2
.Lt_0EB2:

	; label .Lt_04B8
	br label %.Lt_04B8
.Lt_04B8:

	; conv SYS_OFFSET => vr1190
	%vr1191 = load i32, i32* @SYS_OFFSET
	%vr1190 = sext i32 %vr1191 to i64

	; bop vr1190 + 6
	%vr1192 = add i64 %vr1190, 6
	%vr1193 = bitcast i64 %vr1192 to i64

	; call POKE64()
	; arg THIS
	%vr1194 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1193
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1194, i64 %vr1193, i64 85 )

	; conv SYS_OFFSET => vr1195
	%vr1196 = load i32, i32* @SYS_OFFSET
	%vr1195 = sext i32 %vr1196 to i64

	; bop vr1195 + 7
	%vr1197 = add i64 %vr1195, 7
	%vr1198 = bitcast i64 %vr1197 to i64

	; call POKE64()
	; arg THIS
	%vr1199 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1198
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1199, i64 %vr1198, i64 85 )

	; conv SYS_OFFSET => vr1200
	%vr1201 = load i32, i32* @SYS_OFFSET
	%vr1200 = sext i32 %vr1201 to i64

	; bop vr1200 + 8
	%vr1202 = add i64 %vr1200, 8
	%vr1203 = bitcast i64 %vr1202 to i64

	; call POKE64()
	; arg THIS
	%vr1204 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1203
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1204, i64 %vr1203, i64 85 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EB3:

	; label .Lt_04B7
	br label %.Lt_04B7
.Lt_04B7:

	; branchbop V <> 9
	%vr1207 = load i64, i64* %V.103
	%vr1206 = icmp ne i64 %vr1207, 9
	br i1 %vr1206, label %.Lt_04B9, label %.Lt_0EB4
.Lt_0EB4:

	; label .Lt_04BA
	br label %.Lt_04BA
.Lt_04BA:

	; conv SYS_OFFSET => vr1209
	%vr1210 = load i32, i32* @SYS_OFFSET
	%vr1209 = sext i32 %vr1210 to i64

	; bop vr1209 + 6
	%vr1211 = add i64 %vr1209, 6
	%vr1212 = bitcast i64 %vr1211 to i64

	; call POKE64()
	; arg THIS
	%vr1213 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1212
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1213, i64 %vr1212, i64 85 )

	; conv SYS_OFFSET => vr1214
	%vr1215 = load i32, i32* @SYS_OFFSET
	%vr1214 = sext i32 %vr1215 to i64

	; bop vr1214 + 7
	%vr1216 = add i64 %vr1214, 7
	%vr1217 = bitcast i64 %vr1216 to i64

	; call POKE64()
	; arg THIS
	%vr1218 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1217
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1218, i64 %vr1217, i64 85 )

	; conv SYS_OFFSET => vr1219
	%vr1220 = load i32, i32* @SYS_OFFSET
	%vr1219 = sext i32 %vr1220 to i64

	; bop vr1219 + 8
	%vr1221 = add i64 %vr1219, 8
	%vr1222 = bitcast i64 %vr1221 to i64

	; call POKE64()
	; arg THIS
	%vr1223 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1222
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1223, i64 %vr1222, i64 255 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EB5:

	; label .Lt_04B9
	br label %.Lt_04B9
.Lt_04B9:

	; branchbop V <> 10
	%vr1226 = load i64, i64* %V.103
	%vr1225 = icmp ne i64 %vr1226, 10
	br i1 %vr1225, label %.Lt_04BB, label %.Lt_0EB6
.Lt_0EB6:

	; label .Lt_04BC
	br label %.Lt_04BC
.Lt_04BC:

	; conv SYS_OFFSET => vr1228
	%vr1229 = load i32, i32* @SYS_OFFSET
	%vr1228 = sext i32 %vr1229 to i64

	; bop vr1228 + 6
	%vr1230 = add i64 %vr1228, 6
	%vr1231 = bitcast i64 %vr1230 to i64

	; call POKE64()
	; arg THIS
	%vr1232 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1231
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1232, i64 %vr1231, i64 85 )

	; conv SYS_OFFSET => vr1233
	%vr1234 = load i32, i32* @SYS_OFFSET
	%vr1233 = sext i32 %vr1234 to i64

	; bop vr1233 + 7
	%vr1235 = add i64 %vr1233, 7
	%vr1236 = bitcast i64 %vr1235 to i64

	; call POKE64()
	; arg THIS
	%vr1237 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1236
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1237, i64 %vr1236, i64 255 )

	; conv SYS_OFFSET => vr1238
	%vr1239 = load i32, i32* @SYS_OFFSET
	%vr1238 = sext i32 %vr1239 to i64

	; bop vr1238 + 8
	%vr1240 = add i64 %vr1238, 8
	%vr1241 = bitcast i64 %vr1240 to i64

	; call POKE64()
	; arg THIS
	%vr1242 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1241
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1242, i64 %vr1241, i64 85 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EB7:

	; label .Lt_04BB
	br label %.Lt_04BB
.Lt_04BB:

	; branchbop V <> 11
	%vr1245 = load i64, i64* %V.103
	%vr1244 = icmp ne i64 %vr1245, 11
	br i1 %vr1244, label %.Lt_04BD, label %.Lt_0EB8
.Lt_0EB8:

	; label .Lt_04BE
	br label %.Lt_04BE
.Lt_04BE:

	; conv SYS_OFFSET => vr1247
	%vr1248 = load i32, i32* @SYS_OFFSET
	%vr1247 = sext i32 %vr1248 to i64

	; bop vr1247 + 6
	%vr1249 = add i64 %vr1247, 6
	%vr1250 = bitcast i64 %vr1249 to i64

	; call POKE64()
	; arg THIS
	%vr1251 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1250
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1251, i64 %vr1250, i64 85 )

	; conv SYS_OFFSET => vr1252
	%vr1253 = load i32, i32* @SYS_OFFSET
	%vr1252 = sext i32 %vr1253 to i64

	; bop vr1252 + 7
	%vr1254 = add i64 %vr1252, 7
	%vr1255 = bitcast i64 %vr1254 to i64

	; call POKE64()
	; arg THIS
	%vr1256 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1255
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1256, i64 %vr1255, i64 255 )

	; conv SYS_OFFSET => vr1257
	%vr1258 = load i32, i32* @SYS_OFFSET
	%vr1257 = sext i32 %vr1258 to i64

	; bop vr1257 + 8
	%vr1259 = add i64 %vr1257, 8
	%vr1260 = bitcast i64 %vr1259 to i64

	; call POKE64()
	; arg THIS
	%vr1261 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1260
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1261, i64 %vr1260, i64 255 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EB9:

	; label .Lt_04BD
	br label %.Lt_04BD
.Lt_04BD:

	; branchbop V <> 12
	%vr1264 = load i64, i64* %V.103
	%vr1263 = icmp ne i64 %vr1264, 12
	br i1 %vr1263, label %.Lt_04BF, label %.Lt_0EBA
.Lt_0EBA:

	; label .Lt_04C0
	br label %.Lt_04C0
.Lt_04C0:

	; conv SYS_OFFSET => vr1266
	%vr1267 = load i32, i32* @SYS_OFFSET
	%vr1266 = sext i32 %vr1267 to i64

	; bop vr1266 + 6
	%vr1268 = add i64 %vr1266, 6
	%vr1269 = bitcast i64 %vr1268 to i64

	; call POKE64()
	; arg THIS
	%vr1270 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1269
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1270, i64 %vr1269, i64 255 )

	; conv SYS_OFFSET => vr1271
	%vr1272 = load i32, i32* @SYS_OFFSET
	%vr1271 = sext i32 %vr1272 to i64

	; bop vr1271 + 7
	%vr1273 = add i64 %vr1271, 7
	%vr1274 = bitcast i64 %vr1273 to i64

	; call POKE64()
	; arg THIS
	%vr1275 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1274
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1275, i64 %vr1274, i64 85 )

	; conv SYS_OFFSET => vr1276
	%vr1277 = load i32, i32* @SYS_OFFSET
	%vr1276 = sext i32 %vr1277 to i64

	; bop vr1276 + 8
	%vr1278 = add i64 %vr1276, 8
	%vr1279 = bitcast i64 %vr1278 to i64

	; call POKE64()
	; arg THIS
	%vr1280 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1279
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1280, i64 %vr1279, i64 85 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EBB:

	; label .Lt_04BF
	br label %.Lt_04BF
.Lt_04BF:

	; branchbop V <> 13
	%vr1283 = load i64, i64* %V.103
	%vr1282 = icmp ne i64 %vr1283, 13
	br i1 %vr1282, label %.Lt_04C1, label %.Lt_0EBC
.Lt_0EBC:

	; label .Lt_04C2
	br label %.Lt_04C2
.Lt_04C2:

	; conv SYS_OFFSET => vr1285
	%vr1286 = load i32, i32* @SYS_OFFSET
	%vr1285 = sext i32 %vr1286 to i64

	; bop vr1285 + 6
	%vr1287 = add i64 %vr1285, 6
	%vr1288 = bitcast i64 %vr1287 to i64

	; call POKE64()
	; arg THIS
	%vr1289 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1288
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1289, i64 %vr1288, i64 255 )

	; conv SYS_OFFSET => vr1290
	%vr1291 = load i32, i32* @SYS_OFFSET
	%vr1290 = sext i32 %vr1291 to i64

	; bop vr1290 + 7
	%vr1292 = add i64 %vr1290, 7
	%vr1293 = bitcast i64 %vr1292 to i64

	; call POKE64()
	; arg THIS
	%vr1294 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1293
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1294, i64 %vr1293, i64 85 )

	; conv SYS_OFFSET => vr1295
	%vr1296 = load i32, i32* @SYS_OFFSET
	%vr1295 = sext i32 %vr1296 to i64

	; bop vr1295 + 8
	%vr1297 = add i64 %vr1295, 8
	%vr1298 = bitcast i64 %vr1297 to i64

	; call POKE64()
	; arg THIS
	%vr1299 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1298
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1299, i64 %vr1298, i64 255 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EBD:

	; label .Lt_04C1
	br label %.Lt_04C1
.Lt_04C1:

	; branchbop V <> 14
	%vr1302 = load i64, i64* %V.103
	%vr1301 = icmp ne i64 %vr1302, 14
	br i1 %vr1301, label %.Lt_04C3, label %.Lt_0EBE
.Lt_0EBE:

	; label .Lt_04C4
	br label %.Lt_04C4
.Lt_04C4:

	; conv SYS_OFFSET => vr1304
	%vr1305 = load i32, i32* @SYS_OFFSET
	%vr1304 = sext i32 %vr1305 to i64

	; bop vr1304 + 6
	%vr1306 = add i64 %vr1304, 6
	%vr1307 = bitcast i64 %vr1306 to i64

	; call POKE64()
	; arg THIS
	%vr1308 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1307
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1308, i64 %vr1307, i64 255 )

	; conv SYS_OFFSET => vr1309
	%vr1310 = load i32, i32* @SYS_OFFSET
	%vr1309 = sext i32 %vr1310 to i64

	; bop vr1309 + 7
	%vr1311 = add i64 %vr1309, 7
	%vr1312 = bitcast i64 %vr1311 to i64

	; call POKE64()
	; arg THIS
	%vr1313 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1312
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1313, i64 %vr1312, i64 255 )

	; conv SYS_OFFSET => vr1314
	%vr1315 = load i32, i32* @SYS_OFFSET
	%vr1314 = sext i32 %vr1315 to i64

	; bop vr1314 + 8
	%vr1316 = add i64 %vr1314, 8
	%vr1317 = bitcast i64 %vr1316 to i64

	; call POKE64()
	; arg THIS
	%vr1318 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1317
	; arg 85
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1318, i64 %vr1317, i64 85 )

	; goto .Lt_04A6
	br label %.Lt_04A6
.Lt_0EBF:

	; label .Lt_04C3
	br label %.Lt_04C3
.Lt_04C3:

	; branchbop V <> 15
	%vr1321 = load i64, i64* %V.103
	%vr1320 = icmp ne i64 %vr1321, 15
	br i1 %vr1320, label %.Lt_04C5, label %.Lt_0EC0
.Lt_0EC0:

	; label .Lt_04C6
	br label %.Lt_04C6
.Lt_04C6:

	; conv SYS_OFFSET => vr1323
	%vr1324 = load i32, i32* @SYS_OFFSET
	%vr1323 = sext i32 %vr1324 to i64

	; bop vr1323 + 6
	%vr1325 = add i64 %vr1323, 6
	%vr1326 = bitcast i64 %vr1325 to i64

	; call POKE64()
	; arg THIS
	%vr1327 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1326
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1327, i64 %vr1326, i64 255 )

	; conv SYS_OFFSET => vr1328
	%vr1329 = load i32, i32* @SYS_OFFSET
	%vr1328 = sext i32 %vr1329 to i64

	; bop vr1328 + 7
	%vr1330 = add i64 %vr1328, 7
	%vr1331 = bitcast i64 %vr1330 to i64

	; call POKE64()
	; arg THIS
	%vr1332 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1331
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1332, i64 %vr1331, i64 255 )

	; conv SYS_OFFSET => vr1333
	%vr1334 = load i32, i32* @SYS_OFFSET
	%vr1333 = sext i32 %vr1334 to i64

	; bop vr1333 + 8
	%vr1335 = add i64 %vr1333, 8
	%vr1336 = bitcast i64 %vr1335 to i64

	; call POKE64()
	; arg THIS
	%vr1337 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr1336
	; arg 255
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr1337, i64 %vr1336, i64 255 )

	; label .Lt_04C5
	br label %.Lt_04C5
.Lt_04C5:

	; label .Lt_04A6
	br label %.Lt_04A6
.Lt_04A6:

	; label .Lt_04A5
	br label %.Lt_04A5
.Lt_04A5:

	; label .Lt_043B
	br label %.Lt_043B
.Lt_043B:

	; branchbop ADR <> 0
	%vr1340 = load i64, i64* %ADR.102
	%vr1339 = icmp ne i64 %vr1340, 0
	br i1 %vr1339, label %.Lt_04C8, label %.Lt_0EC1
.Lt_0EC1:

	; label .Lt_04C9
	br label %.Lt_04C9
.Lt_04C9:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EC2:

	; label .Lt_04C8
	br label %.Lt_04C8
.Lt_04C8:

	; conv SYS_OFFSET => vr1343
	%vr1344 = load i32, i32* @SYS_OFFSET
	%vr1343 = sext i32 %vr1344 to i64
	%vr1345 = bitcast i64 %vr1343 to i64

	; branchbop ADR <> vr1345
	%vr1347 = load i64, i64* %ADR.102
	%vr1346 = icmp ne i64 %vr1347, %vr1345
	br i1 %vr1346, label %.Lt_04CA, label %.Lt_0EC3
.Lt_0EC3:

	; label .Lt_04CB
	br label %.Lt_04CB
.Lt_04CB:

	; localvar LT_04CE
	%LT_04CE.104 = alloca %FBSTRING

	; localvar LT_04CF
	%LT_04CF.105 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr1349 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr1355 = bitcast i8* bitcast ([22 x i8]* @Lt_04CD to i8*) to i8*

	; call fb_ULongintToStr()
	; arg V
	%vr1357 = load i64, i64* %V.103
	%vr1356 = call %FBSTRING* @fb_ULongintToStr( i64 %vr1357 )
	%vr1359 = bitcast i8* bitcast ([36 x i8]* @Lt_04CC to i8*) to i8*

	; addrof LT_04CE

	; memclear LT_04CE
	%vr1361 = bitcast %FBSTRING* %LT_04CE.104 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1361, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_04CE

	; call fb_StrConcat()
	; arg LT_04CE
	; arg vr1359
	; arg 36
	; arg vr1356
	%vr1365 = bitcast %FBSTRING* %vr1356 to i8*
	; arg -1
	%vr1363 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_04CE.104, i8* %vr1359, i64 36, i8* %vr1365, i64 -1 )

	; addrof LT_04CF

	; memclear LT_04CF
	%vr1368 = bitcast %FBSTRING* %LT_04CF.105 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1368, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_04CF

	; call fb_StrConcat()
	; arg LT_04CF
	; arg vr1363
	%vr1371 = bitcast %FBSTRING* %vr1363 to i8*
	; arg -1
	; arg vr1355
	; arg 22
	%vr1370 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_04CF.105, i8* %vr1371, i64 -1, i8* %vr1355, i64 22 )

	; call fb_Shell()
	; arg vr1370
	%vr1375 = bitcast %FBSTRING* %vr1370 to %FBSTRING*
	%vr1374 = call i32 @fb_Shell( %FBSTRING* %vr1375 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr1376 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr1385 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr1384 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr1385, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr1387 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr1388 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr1384
	%vr1391 = bitcast %FBSTRING* %vr1384 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr1387, float %vr1388, i32 4278190080, i32 0, %FBSTRING* %vr1391, i32 0, i32 1073741828 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EC4:

	; label .Lt_04CA
	br label %.Lt_04CA
.Lt_04CA:

	; conv SYS_OFFSET => vr1395
	%vr1396 = load i32, i32* @SYS_OFFSET
	%vr1395 = sext i32 %vr1396 to i64

	; bop vr1395 + 1
	%vr1397 = add i64 %vr1395, 1
	%vr1398 = bitcast i64 %vr1397 to i64

	; branchbop ADR <> vr1398
	%vr1400 = load i64, i64* %ADR.102
	%vr1399 = icmp ne i64 %vr1400, %vr1398
	br i1 %vr1399, label %.Lt_04D0, label %.Lt_0EC5
.Lt_0EC5:

	; label .Lt_04D1
	br label %.Lt_04D1
.Lt_04D1:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr1402 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_04D2
	%vr1409 = bitcast i8* bitcast ([67 x i8]* @Lt_04D2 to i8*) to i8*
	; arg 66
	%vr1408 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr1409, i64 66 )

	; call fb_Shell()
	; arg vr1408
	%vr1412 = bitcast %FBSTRING* %vr1408 to %FBSTRING*
	%vr1411 = call i32 @fb_Shell( %FBSTRING* %vr1412 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr1413 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr1422 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr1421 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr1422, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr1424 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr1425 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr1421
	%vr1428 = bitcast %FBSTRING* %vr1421 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr1424, float %vr1425, i32 4278190080, i32 0, %FBSTRING* %vr1428, i32 0, i32 1073741828 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EC6:

	; label .Lt_04D0
	br label %.Lt_04D0
.Lt_04D0:

	; conv SYS_OFFSET => vr1432
	%vr1433 = load i32, i32* @SYS_OFFSET
	%vr1432 = sext i32 %vr1433 to i64

	; bop vr1432 + 2
	%vr1434 = add i64 %vr1432, 2
	%vr1435 = bitcast i64 %vr1434 to i64

	; branchbop ADR <> vr1435
	%vr1437 = load i64, i64* %ADR.102
	%vr1436 = icmp ne i64 %vr1437, %vr1435
	br i1 %vr1436, label %.Lt_04D3, label %.Lt_0EC7
.Lt_0EC7:

	; label .Lt_04D4
	br label %.Lt_04D4
.Lt_04D4:

	; conv SYS_OFFSET => vr1439
	%vr1440 = load i32, i32* @SYS_OFFSET
	%vr1439 = sext i32 %vr1440 to i64

	; bop vr1439 SHL 3
	%vr1441 = shl i64 %vr1439, 3

	; bop THIS + vr1441
	%vr1443 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1444 = inttoptr i64 %vr1441 to %MEMORY_T*
	%vr1442 = add %MEMORY_T* %vr1443, %vr1444

	; conv vr1442+16 => vr1445
	%vr1447 = ptrtoint %MEMORY_T* %vr1442 to i64
	%vr1448 = add i64 %vr1447, 16
	%vr1449 = inttoptr i64 %vr1448 to double*
	%vr1450 = load double, double* %vr1449
	%vr1446 = call double @llvm.nearbyint.f64(double %vr1450)
	%vr1445 = fptoui double %vr1446 to i64

	; bop vr1445 SHL 16
	%vr1452 = bitcast i64 16 to i64
	%vr1451 = shl i64 %vr1445, %vr1452

	; conv SYS_OFFSET => vr1453
	%vr1454 = load i32, i32* @SYS_OFFSET
	%vr1453 = sext i32 %vr1454 to i64

	; bop vr1453 SHL 3
	%vr1455 = shl i64 %vr1453, 3

	; bop THIS + vr1455
	%vr1457 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1458 = inttoptr i64 %vr1455 to %MEMORY_T*
	%vr1456 = add %MEMORY_T* %vr1457, %vr1458

	; conv vr1456+24 => vr1459
	%vr1461 = ptrtoint %MEMORY_T* %vr1456 to i64
	%vr1462 = add i64 %vr1461, 24
	%vr1463 = inttoptr i64 %vr1462 to double*
	%vr1464 = load double, double* %vr1463
	%vr1460 = call double @llvm.nearbyint.f64(double %vr1464)
	%vr1459 = fptoui double %vr1460 to i64

	; bop vr1459 SHL 8
	%vr1466 = bitcast i64 8 to i64
	%vr1465 = shl i64 %vr1459, %vr1466

	; bop vr1451 OR vr1465
	%vr1467 = or i64 %vr1451, %vr1465

	; conv SYS_OFFSET => vr1468
	%vr1469 = load i32, i32* @SYS_OFFSET
	%vr1468 = sext i32 %vr1469 to i64

	; bop vr1468 SHL 3
	%vr1470 = shl i64 %vr1468, 3

	; bop THIS + vr1470
	%vr1472 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1473 = inttoptr i64 %vr1470 to %MEMORY_T*
	%vr1471 = add %MEMORY_T* %vr1472, %vr1473

	; conv vr1471+32 => vr1474
	%vr1476 = ptrtoint %MEMORY_T* %vr1471 to i64
	%vr1477 = add i64 %vr1476, 32
	%vr1478 = inttoptr i64 %vr1477 to double*
	%vr1479 = load double, double* %vr1478
	%vr1475 = call double @llvm.nearbyint.f64(double %vr1479)
	%vr1474 = fptoui double %vr1475 to i64

	; bop vr1467 OR vr1474
	%vr1480 = or i64 %vr1467, %vr1474

	; conv SYS_OFFSET => vr1481
	%vr1482 = load i32, i32* @SYS_OFFSET
	%vr1481 = sext i32 %vr1482 to i64

	; bop vr1481 SHL 3
	%vr1483 = shl i64 %vr1481, 3

	; bop THIS + vr1483
	%vr1485 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1486 = inttoptr i64 %vr1483 to %MEMORY_T*
	%vr1484 = add %MEMORY_T* %vr1485, %vr1486

	; conv vr1484+40 => vr1487
	%vr1489 = ptrtoint %MEMORY_T* %vr1484 to i64
	%vr1490 = add i64 %vr1489, 40
	%vr1491 = inttoptr i64 %vr1490 to double*
	%vr1492 = load double, double* %vr1491
	%vr1488 = call double @llvm.nearbyint.f64(double %vr1492)
	%vr1487 = fptoui double %vr1488 to i64

	; bop vr1487 SHL 24
	%vr1494 = bitcast i64 24 to i64
	%vr1493 = shl i64 %vr1487, %vr1494

	; bop vr1480 OR vr1493
	%vr1495 = or i64 %vr1480, %vr1493

	; conv vr1495 => vr1496
	%vr1496 = uitofp i64 %vr1495 to double

	; conv SYS_OFFSET => vr1497
	%vr1498 = load i32, i32* @SYS_OFFSET
	%vr1497 = sext i32 %vr1498 to i64

	; bop vr1497 SHL 3
	%vr1499 = shl i64 %vr1497, 3

	; bop THIS + vr1499
	%vr1501 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1502 = inttoptr i64 %vr1499 to %MEMORY_T*
	%vr1500 = add %MEMORY_T* %vr1501, %vr1502

	; store vr1500+1608 := vr1496
	%vr1503 = ptrtoint %MEMORY_T* %vr1500 to i64
	%vr1504 = add i64 %vr1503, 1608
	%vr1505 = inttoptr i64 %vr1504 to double*
	store double %vr1496, double* %vr1505

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EC8:

	; label .Lt_04D3
	br label %.Lt_04D3
.Lt_04D3:

	; conv SYS_OFFSET => vr1507
	%vr1508 = load i32, i32* @SYS_OFFSET
	%vr1507 = sext i32 %vr1508 to i64

	; bop vr1507 + 3
	%vr1509 = add i64 %vr1507, 3
	%vr1510 = bitcast i64 %vr1509 to i64

	; branchbop ADR <> vr1510
	%vr1512 = load i64, i64* %ADR.102
	%vr1511 = icmp ne i64 %vr1512, %vr1510
	br i1 %vr1511, label %.Lt_04D5, label %.Lt_0EC9
.Lt_0EC9:

	; label .Lt_04D6
	br label %.Lt_04D6
.Lt_04D6:

	; conv SYS_OFFSET => vr1514
	%vr1515 = load i32, i32* @SYS_OFFSET
	%vr1514 = sext i32 %vr1515 to i64

	; bop vr1514 SHL 3
	%vr1516 = shl i64 %vr1514, 3

	; bop THIS + vr1516
	%vr1518 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1519 = inttoptr i64 %vr1516 to %MEMORY_T*
	%vr1517 = add %MEMORY_T* %vr1518, %vr1519

	; conv vr1517+16 => vr1520
	%vr1522 = ptrtoint %MEMORY_T* %vr1517 to i64
	%vr1523 = add i64 %vr1522, 16
	%vr1524 = inttoptr i64 %vr1523 to double*
	%vr1525 = load double, double* %vr1524
	%vr1521 = call double @llvm.nearbyint.f64(double %vr1525)
	%vr1520 = fptoui double %vr1521 to i64

	; bop vr1520 SHL 16
	%vr1527 = bitcast i64 16 to i64
	%vr1526 = shl i64 %vr1520, %vr1527

	; conv SYS_OFFSET => vr1528
	%vr1529 = load i32, i32* @SYS_OFFSET
	%vr1528 = sext i32 %vr1529 to i64

	; bop vr1528 SHL 3
	%vr1530 = shl i64 %vr1528, 3

	; bop THIS + vr1530
	%vr1532 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1533 = inttoptr i64 %vr1530 to %MEMORY_T*
	%vr1531 = add %MEMORY_T* %vr1532, %vr1533

	; conv vr1531+24 => vr1534
	%vr1536 = ptrtoint %MEMORY_T* %vr1531 to i64
	%vr1537 = add i64 %vr1536, 24
	%vr1538 = inttoptr i64 %vr1537 to double*
	%vr1539 = load double, double* %vr1538
	%vr1535 = call double @llvm.nearbyint.f64(double %vr1539)
	%vr1534 = fptoui double %vr1535 to i64

	; bop vr1534 SHL 8
	%vr1541 = bitcast i64 8 to i64
	%vr1540 = shl i64 %vr1534, %vr1541

	; bop vr1526 OR vr1540
	%vr1542 = or i64 %vr1526, %vr1540

	; conv SYS_OFFSET => vr1543
	%vr1544 = load i32, i32* @SYS_OFFSET
	%vr1543 = sext i32 %vr1544 to i64

	; bop vr1543 SHL 3
	%vr1545 = shl i64 %vr1543, 3

	; bop THIS + vr1545
	%vr1547 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1548 = inttoptr i64 %vr1545 to %MEMORY_T*
	%vr1546 = add %MEMORY_T* %vr1547, %vr1548

	; conv vr1546+32 => vr1549
	%vr1551 = ptrtoint %MEMORY_T* %vr1546 to i64
	%vr1552 = add i64 %vr1551, 32
	%vr1553 = inttoptr i64 %vr1552 to double*
	%vr1554 = load double, double* %vr1553
	%vr1550 = call double @llvm.nearbyint.f64(double %vr1554)
	%vr1549 = fptoui double %vr1550 to i64

	; bop vr1542 OR vr1549
	%vr1555 = or i64 %vr1542, %vr1549

	; conv SYS_OFFSET => vr1556
	%vr1557 = load i32, i32* @SYS_OFFSET
	%vr1556 = sext i32 %vr1557 to i64

	; bop vr1556 SHL 3
	%vr1558 = shl i64 %vr1556, 3

	; bop THIS + vr1558
	%vr1560 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1561 = inttoptr i64 %vr1558 to %MEMORY_T*
	%vr1559 = add %MEMORY_T* %vr1560, %vr1561

	; conv vr1559+40 => vr1562
	%vr1564 = ptrtoint %MEMORY_T* %vr1559 to i64
	%vr1565 = add i64 %vr1564, 40
	%vr1566 = inttoptr i64 %vr1565 to double*
	%vr1567 = load double, double* %vr1566
	%vr1563 = call double @llvm.nearbyint.f64(double %vr1567)
	%vr1562 = fptoui double %vr1563 to i64

	; bop vr1562 SHL 24
	%vr1569 = bitcast i64 24 to i64
	%vr1568 = shl i64 %vr1562, %vr1569

	; bop vr1555 OR vr1568
	%vr1570 = or i64 %vr1555, %vr1568

	; conv vr1570 => vr1571
	%vr1571 = uitofp i64 %vr1570 to double

	; conv SYS_OFFSET => vr1572
	%vr1573 = load i32, i32* @SYS_OFFSET
	%vr1572 = sext i32 %vr1573 to i64

	; bop vr1572 SHL 3
	%vr1574 = shl i64 %vr1572, 3

	; bop THIS + vr1574
	%vr1576 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1577 = inttoptr i64 %vr1574 to %MEMORY_T*
	%vr1575 = add %MEMORY_T* %vr1576, %vr1577

	; store vr1575+1608 := vr1571
	%vr1578 = ptrtoint %MEMORY_T* %vr1575 to i64
	%vr1579 = add i64 %vr1578, 1608
	%vr1580 = inttoptr i64 %vr1579 to double*
	store double %vr1571, double* %vr1580

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ECA:

	; label .Lt_04D5
	br label %.Lt_04D5
.Lt_04D5:

	; conv SYS_OFFSET => vr1582
	%vr1583 = load i32, i32* @SYS_OFFSET
	%vr1582 = sext i32 %vr1583 to i64

	; bop vr1582 + 4
	%vr1584 = add i64 %vr1582, 4
	%vr1585 = bitcast i64 %vr1584 to i64

	; branchbop ADR <> vr1585
	%vr1587 = load i64, i64* %ADR.102
	%vr1586 = icmp ne i64 %vr1587, %vr1585
	br i1 %vr1586, label %.Lt_04D7, label %.Lt_0ECB
.Lt_0ECB:

	; label .Lt_04D8
	br label %.Lt_04D8
.Lt_04D8:

	; conv SYS_OFFSET => vr1589
	%vr1590 = load i32, i32* @SYS_OFFSET
	%vr1589 = sext i32 %vr1590 to i64

	; bop vr1589 SHL 3
	%vr1591 = shl i64 %vr1589, 3

	; bop THIS + vr1591
	%vr1593 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1594 = inttoptr i64 %vr1591 to %MEMORY_T*
	%vr1592 = add %MEMORY_T* %vr1593, %vr1594

	; conv vr1592+16 => vr1595
	%vr1597 = ptrtoint %MEMORY_T* %vr1592 to i64
	%vr1598 = add i64 %vr1597, 16
	%vr1599 = inttoptr i64 %vr1598 to double*
	%vr1600 = load double, double* %vr1599
	%vr1596 = call double @llvm.nearbyint.f64(double %vr1600)
	%vr1595 = fptoui double %vr1596 to i64

	; bop vr1595 SHL 16
	%vr1602 = bitcast i64 16 to i64
	%vr1601 = shl i64 %vr1595, %vr1602

	; conv SYS_OFFSET => vr1603
	%vr1604 = load i32, i32* @SYS_OFFSET
	%vr1603 = sext i32 %vr1604 to i64

	; bop vr1603 SHL 3
	%vr1605 = shl i64 %vr1603, 3

	; bop THIS + vr1605
	%vr1607 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1608 = inttoptr i64 %vr1605 to %MEMORY_T*
	%vr1606 = add %MEMORY_T* %vr1607, %vr1608

	; conv vr1606+24 => vr1609
	%vr1611 = ptrtoint %MEMORY_T* %vr1606 to i64
	%vr1612 = add i64 %vr1611, 24
	%vr1613 = inttoptr i64 %vr1612 to double*
	%vr1614 = load double, double* %vr1613
	%vr1610 = call double @llvm.nearbyint.f64(double %vr1614)
	%vr1609 = fptoui double %vr1610 to i64

	; bop vr1609 SHL 8
	%vr1616 = bitcast i64 8 to i64
	%vr1615 = shl i64 %vr1609, %vr1616

	; bop vr1601 OR vr1615
	%vr1617 = or i64 %vr1601, %vr1615

	; conv SYS_OFFSET => vr1618
	%vr1619 = load i32, i32* @SYS_OFFSET
	%vr1618 = sext i32 %vr1619 to i64

	; bop vr1618 SHL 3
	%vr1620 = shl i64 %vr1618, 3

	; bop THIS + vr1620
	%vr1622 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1623 = inttoptr i64 %vr1620 to %MEMORY_T*
	%vr1621 = add %MEMORY_T* %vr1622, %vr1623

	; conv vr1621+32 => vr1624
	%vr1626 = ptrtoint %MEMORY_T* %vr1621 to i64
	%vr1627 = add i64 %vr1626, 32
	%vr1628 = inttoptr i64 %vr1627 to double*
	%vr1629 = load double, double* %vr1628
	%vr1625 = call double @llvm.nearbyint.f64(double %vr1629)
	%vr1624 = fptoui double %vr1625 to i64

	; bop vr1617 OR vr1624
	%vr1630 = or i64 %vr1617, %vr1624

	; conv SYS_OFFSET => vr1631
	%vr1632 = load i32, i32* @SYS_OFFSET
	%vr1631 = sext i32 %vr1632 to i64

	; bop vr1631 SHL 3
	%vr1633 = shl i64 %vr1631, 3

	; bop THIS + vr1633
	%vr1635 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1636 = inttoptr i64 %vr1633 to %MEMORY_T*
	%vr1634 = add %MEMORY_T* %vr1635, %vr1636

	; conv vr1634+40 => vr1637
	%vr1639 = ptrtoint %MEMORY_T* %vr1634 to i64
	%vr1640 = add i64 %vr1639, 40
	%vr1641 = inttoptr i64 %vr1640 to double*
	%vr1642 = load double, double* %vr1641
	%vr1638 = call double @llvm.nearbyint.f64(double %vr1642)
	%vr1637 = fptoui double %vr1638 to i64

	; bop vr1637 SHL 24
	%vr1644 = bitcast i64 24 to i64
	%vr1643 = shl i64 %vr1637, %vr1644

	; bop vr1630 OR vr1643
	%vr1645 = or i64 %vr1630, %vr1643

	; conv vr1645 => vr1646
	%vr1646 = uitofp i64 %vr1645 to double

	; conv SYS_OFFSET => vr1647
	%vr1648 = load i32, i32* @SYS_OFFSET
	%vr1647 = sext i32 %vr1648 to i64

	; bop vr1647 SHL 3
	%vr1649 = shl i64 %vr1647, 3

	; bop THIS + vr1649
	%vr1651 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1652 = inttoptr i64 %vr1649 to %MEMORY_T*
	%vr1650 = add %MEMORY_T* %vr1651, %vr1652

	; store vr1650+1608 := vr1646
	%vr1653 = ptrtoint %MEMORY_T* %vr1650 to i64
	%vr1654 = add i64 %vr1653, 1608
	%vr1655 = inttoptr i64 %vr1654 to double*
	store double %vr1646, double* %vr1655

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ECC:

	; label .Lt_04D7
	br label %.Lt_04D7
.Lt_04D7:

	; conv SYS_OFFSET => vr1657
	%vr1658 = load i32, i32* @SYS_OFFSET
	%vr1657 = sext i32 %vr1658 to i64

	; bop vr1657 + 5
	%vr1659 = add i64 %vr1657, 5
	%vr1660 = bitcast i64 %vr1659 to i64

	; branchbop ADR <> vr1660
	%vr1662 = load i64, i64* %ADR.102
	%vr1661 = icmp ne i64 %vr1662, %vr1660
	br i1 %vr1661, label %.Lt_04D9, label %.Lt_0ECD
.Lt_0ECD:

	; label .Lt_04DA
	br label %.Lt_04DA
.Lt_04DA:

	; conv SYS_OFFSET => vr1664
	%vr1665 = load i32, i32* @SYS_OFFSET
	%vr1664 = sext i32 %vr1665 to i64

	; bop vr1664 SHL 3
	%vr1666 = shl i64 %vr1664, 3

	; bop THIS + vr1666
	%vr1668 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1669 = inttoptr i64 %vr1666 to %MEMORY_T*
	%vr1667 = add %MEMORY_T* %vr1668, %vr1669

	; conv vr1667+16 => vr1670
	%vr1672 = ptrtoint %MEMORY_T* %vr1667 to i64
	%vr1673 = add i64 %vr1672, 16
	%vr1674 = inttoptr i64 %vr1673 to double*
	%vr1675 = load double, double* %vr1674
	%vr1671 = call double @llvm.nearbyint.f64(double %vr1675)
	%vr1670 = fptoui double %vr1671 to i64

	; bop vr1670 SHL 16
	%vr1677 = bitcast i64 16 to i64
	%vr1676 = shl i64 %vr1670, %vr1677

	; conv SYS_OFFSET => vr1678
	%vr1679 = load i32, i32* @SYS_OFFSET
	%vr1678 = sext i32 %vr1679 to i64

	; bop vr1678 SHL 3
	%vr1680 = shl i64 %vr1678, 3

	; bop THIS + vr1680
	%vr1682 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1683 = inttoptr i64 %vr1680 to %MEMORY_T*
	%vr1681 = add %MEMORY_T* %vr1682, %vr1683

	; conv vr1681+24 => vr1684
	%vr1686 = ptrtoint %MEMORY_T* %vr1681 to i64
	%vr1687 = add i64 %vr1686, 24
	%vr1688 = inttoptr i64 %vr1687 to double*
	%vr1689 = load double, double* %vr1688
	%vr1685 = call double @llvm.nearbyint.f64(double %vr1689)
	%vr1684 = fptoui double %vr1685 to i64

	; bop vr1684 SHL 8
	%vr1691 = bitcast i64 8 to i64
	%vr1690 = shl i64 %vr1684, %vr1691

	; bop vr1676 OR vr1690
	%vr1692 = or i64 %vr1676, %vr1690

	; conv SYS_OFFSET => vr1693
	%vr1694 = load i32, i32* @SYS_OFFSET
	%vr1693 = sext i32 %vr1694 to i64

	; bop vr1693 SHL 3
	%vr1695 = shl i64 %vr1693, 3

	; bop THIS + vr1695
	%vr1697 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1698 = inttoptr i64 %vr1695 to %MEMORY_T*
	%vr1696 = add %MEMORY_T* %vr1697, %vr1698

	; conv vr1696+32 => vr1699
	%vr1701 = ptrtoint %MEMORY_T* %vr1696 to i64
	%vr1702 = add i64 %vr1701, 32
	%vr1703 = inttoptr i64 %vr1702 to double*
	%vr1704 = load double, double* %vr1703
	%vr1700 = call double @llvm.nearbyint.f64(double %vr1704)
	%vr1699 = fptoui double %vr1700 to i64

	; bop vr1692 OR vr1699
	%vr1705 = or i64 %vr1692, %vr1699

	; conv SYS_OFFSET => vr1706
	%vr1707 = load i32, i32* @SYS_OFFSET
	%vr1706 = sext i32 %vr1707 to i64

	; bop vr1706 SHL 3
	%vr1708 = shl i64 %vr1706, 3

	; bop THIS + vr1708
	%vr1710 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1711 = inttoptr i64 %vr1708 to %MEMORY_T*
	%vr1709 = add %MEMORY_T* %vr1710, %vr1711

	; conv vr1709+40 => vr1712
	%vr1714 = ptrtoint %MEMORY_T* %vr1709 to i64
	%vr1715 = add i64 %vr1714, 40
	%vr1716 = inttoptr i64 %vr1715 to double*
	%vr1717 = load double, double* %vr1716
	%vr1713 = call double @llvm.nearbyint.f64(double %vr1717)
	%vr1712 = fptoui double %vr1713 to i64

	; bop vr1712 SHL 24
	%vr1719 = bitcast i64 24 to i64
	%vr1718 = shl i64 %vr1712, %vr1719

	; bop vr1705 OR vr1718
	%vr1720 = or i64 %vr1705, %vr1718

	; conv vr1720 => vr1721
	%vr1721 = uitofp i64 %vr1720 to double

	; conv SYS_OFFSET => vr1722
	%vr1723 = load i32, i32* @SYS_OFFSET
	%vr1722 = sext i32 %vr1723 to i64

	; bop vr1722 SHL 3
	%vr1724 = shl i64 %vr1722, 3

	; bop THIS + vr1724
	%vr1726 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1727 = inttoptr i64 %vr1724 to %MEMORY_T*
	%vr1725 = add %MEMORY_T* %vr1726, %vr1727

	; store vr1725+1608 := vr1721
	%vr1728 = ptrtoint %MEMORY_T* %vr1725 to i64
	%vr1729 = add i64 %vr1728, 1608
	%vr1730 = inttoptr i64 %vr1729 to double*
	store double %vr1721, double* %vr1730

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ECE:

	; label .Lt_04D9
	br label %.Lt_04D9
.Lt_04D9:

	; conv SYS_OFFSET => vr1732
	%vr1733 = load i32, i32* @SYS_OFFSET
	%vr1732 = sext i32 %vr1733 to i64

	; bop vr1732 + 6
	%vr1734 = add i64 %vr1732, 6
	%vr1735 = bitcast i64 %vr1734 to i64

	; branchbop ADR <> vr1735
	%vr1737 = load i64, i64* %ADR.102
	%vr1736 = icmp ne i64 %vr1737, %vr1735
	br i1 %vr1736, label %.Lt_04DB, label %.Lt_0ECF
.Lt_0ECF:

	; label .Lt_04DC
	br label %.Lt_04DC
.Lt_04DC:

	; conv SYS_OFFSET => vr1739
	%vr1740 = load i32, i32* @SYS_OFFSET
	%vr1739 = sext i32 %vr1740 to i64

	; bop vr1739 SHL 3
	%vr1741 = shl i64 %vr1739, 3

	; bop THIS + vr1741
	%vr1743 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1744 = inttoptr i64 %vr1741 to %MEMORY_T*
	%vr1742 = add %MEMORY_T* %vr1743, %vr1744

	; conv vr1742+48 => vr1745
	%vr1747 = ptrtoint %MEMORY_T* %vr1742 to i64
	%vr1748 = add i64 %vr1747, 48
	%vr1749 = inttoptr i64 %vr1748 to double*
	%vr1750 = load double, double* %vr1749
	%vr1746 = call double @llvm.nearbyint.f64(double %vr1750)
	%vr1745 = fptoui double %vr1746 to i64

	; bop vr1745 SHL 16
	%vr1752 = bitcast i64 16 to i64
	%vr1751 = shl i64 %vr1745, %vr1752

	; conv SYS_OFFSET => vr1753
	%vr1754 = load i32, i32* @SYS_OFFSET
	%vr1753 = sext i32 %vr1754 to i64

	; bop vr1753 SHL 3
	%vr1755 = shl i64 %vr1753, 3

	; bop THIS + vr1755
	%vr1757 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1758 = inttoptr i64 %vr1755 to %MEMORY_T*
	%vr1756 = add %MEMORY_T* %vr1757, %vr1758

	; conv vr1756+56 => vr1759
	%vr1761 = ptrtoint %MEMORY_T* %vr1756 to i64
	%vr1762 = add i64 %vr1761, 56
	%vr1763 = inttoptr i64 %vr1762 to double*
	%vr1764 = load double, double* %vr1763
	%vr1760 = call double @llvm.nearbyint.f64(double %vr1764)
	%vr1759 = fptoui double %vr1760 to i64

	; bop vr1759 SHL 8
	%vr1766 = bitcast i64 8 to i64
	%vr1765 = shl i64 %vr1759, %vr1766

	; bop vr1751 OR vr1765
	%vr1767 = or i64 %vr1751, %vr1765

	; conv SYS_OFFSET => vr1768
	%vr1769 = load i32, i32* @SYS_OFFSET
	%vr1768 = sext i32 %vr1769 to i64

	; bop vr1768 SHL 3
	%vr1770 = shl i64 %vr1768, 3

	; bop THIS + vr1770
	%vr1772 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1773 = inttoptr i64 %vr1770 to %MEMORY_T*
	%vr1771 = add %MEMORY_T* %vr1772, %vr1773

	; conv vr1771+64 => vr1774
	%vr1776 = ptrtoint %MEMORY_T* %vr1771 to i64
	%vr1777 = add i64 %vr1776, 64
	%vr1778 = inttoptr i64 %vr1777 to double*
	%vr1779 = load double, double* %vr1778
	%vr1775 = call double @llvm.nearbyint.f64(double %vr1779)
	%vr1774 = fptoui double %vr1775 to i64

	; bop vr1767 OR vr1774
	%vr1780 = or i64 %vr1767, %vr1774

	; conv SYS_OFFSET => vr1781
	%vr1782 = load i32, i32* @SYS_OFFSET
	%vr1781 = sext i32 %vr1782 to i64

	; bop vr1781 SHL 3
	%vr1783 = shl i64 %vr1781, 3

	; bop THIS + vr1783
	%vr1785 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1786 = inttoptr i64 %vr1783 to %MEMORY_T*
	%vr1784 = add %MEMORY_T* %vr1785, %vr1786

	; conv vr1784+72 => vr1787
	%vr1789 = ptrtoint %MEMORY_T* %vr1784 to i64
	%vr1790 = add i64 %vr1789, 72
	%vr1791 = inttoptr i64 %vr1790 to double*
	%vr1792 = load double, double* %vr1791
	%vr1788 = call double @llvm.nearbyint.f64(double %vr1792)
	%vr1787 = fptoui double %vr1788 to i64

	; bop vr1787 SHL 24
	%vr1794 = bitcast i64 24 to i64
	%vr1793 = shl i64 %vr1787, %vr1794

	; bop vr1780 OR vr1793
	%vr1795 = or i64 %vr1780, %vr1793

	; conv vr1795 => vr1796
	%vr1796 = uitofp i64 %vr1795 to double

	; conv SYS_OFFSET => vr1797
	%vr1798 = load i32, i32* @SYS_OFFSET
	%vr1797 = sext i32 %vr1798 to i64

	; bop vr1797 SHL 3
	%vr1799 = shl i64 %vr1797, 3

	; bop THIS + vr1799
	%vr1801 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1802 = inttoptr i64 %vr1799 to %MEMORY_T*
	%vr1800 = add %MEMORY_T* %vr1801, %vr1802

	; store vr1800+1616 := vr1796
	%vr1803 = ptrtoint %MEMORY_T* %vr1800 to i64
	%vr1804 = add i64 %vr1803, 1616
	%vr1805 = inttoptr i64 %vr1804 to double*
	store double %vr1796, double* %vr1805

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ED0:

	; label .Lt_04DB
	br label %.Lt_04DB
.Lt_04DB:

	; conv SYS_OFFSET => vr1807
	%vr1808 = load i32, i32* @SYS_OFFSET
	%vr1807 = sext i32 %vr1808 to i64

	; bop vr1807 + 7
	%vr1809 = add i64 %vr1807, 7
	%vr1810 = bitcast i64 %vr1809 to i64

	; branchbop ADR <> vr1810
	%vr1812 = load i64, i64* %ADR.102
	%vr1811 = icmp ne i64 %vr1812, %vr1810
	br i1 %vr1811, label %.Lt_04DD, label %.Lt_0ED1
.Lt_0ED1:

	; label .Lt_04DE
	br label %.Lt_04DE
.Lt_04DE:

	; conv SYS_OFFSET => vr1814
	%vr1815 = load i32, i32* @SYS_OFFSET
	%vr1814 = sext i32 %vr1815 to i64

	; bop vr1814 SHL 3
	%vr1816 = shl i64 %vr1814, 3

	; bop THIS + vr1816
	%vr1818 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1819 = inttoptr i64 %vr1816 to %MEMORY_T*
	%vr1817 = add %MEMORY_T* %vr1818, %vr1819

	; conv vr1817+48 => vr1820
	%vr1822 = ptrtoint %MEMORY_T* %vr1817 to i64
	%vr1823 = add i64 %vr1822, 48
	%vr1824 = inttoptr i64 %vr1823 to double*
	%vr1825 = load double, double* %vr1824
	%vr1821 = call double @llvm.nearbyint.f64(double %vr1825)
	%vr1820 = fptoui double %vr1821 to i64

	; bop vr1820 SHL 16
	%vr1827 = bitcast i64 16 to i64
	%vr1826 = shl i64 %vr1820, %vr1827

	; conv SYS_OFFSET => vr1828
	%vr1829 = load i32, i32* @SYS_OFFSET
	%vr1828 = sext i32 %vr1829 to i64

	; bop vr1828 SHL 3
	%vr1830 = shl i64 %vr1828, 3

	; bop THIS + vr1830
	%vr1832 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1833 = inttoptr i64 %vr1830 to %MEMORY_T*
	%vr1831 = add %MEMORY_T* %vr1832, %vr1833

	; conv vr1831+56 => vr1834
	%vr1836 = ptrtoint %MEMORY_T* %vr1831 to i64
	%vr1837 = add i64 %vr1836, 56
	%vr1838 = inttoptr i64 %vr1837 to double*
	%vr1839 = load double, double* %vr1838
	%vr1835 = call double @llvm.nearbyint.f64(double %vr1839)
	%vr1834 = fptoui double %vr1835 to i64

	; bop vr1834 SHL 8
	%vr1841 = bitcast i64 8 to i64
	%vr1840 = shl i64 %vr1834, %vr1841

	; bop vr1826 OR vr1840
	%vr1842 = or i64 %vr1826, %vr1840

	; conv SYS_OFFSET => vr1843
	%vr1844 = load i32, i32* @SYS_OFFSET
	%vr1843 = sext i32 %vr1844 to i64

	; bop vr1843 SHL 3
	%vr1845 = shl i64 %vr1843, 3

	; bop THIS + vr1845
	%vr1847 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1848 = inttoptr i64 %vr1845 to %MEMORY_T*
	%vr1846 = add %MEMORY_T* %vr1847, %vr1848

	; conv vr1846+64 => vr1849
	%vr1851 = ptrtoint %MEMORY_T* %vr1846 to i64
	%vr1852 = add i64 %vr1851, 64
	%vr1853 = inttoptr i64 %vr1852 to double*
	%vr1854 = load double, double* %vr1853
	%vr1850 = call double @llvm.nearbyint.f64(double %vr1854)
	%vr1849 = fptoui double %vr1850 to i64

	; bop vr1842 OR vr1849
	%vr1855 = or i64 %vr1842, %vr1849

	; conv SYS_OFFSET => vr1856
	%vr1857 = load i32, i32* @SYS_OFFSET
	%vr1856 = sext i32 %vr1857 to i64

	; bop vr1856 SHL 3
	%vr1858 = shl i64 %vr1856, 3

	; bop THIS + vr1858
	%vr1860 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1861 = inttoptr i64 %vr1858 to %MEMORY_T*
	%vr1859 = add %MEMORY_T* %vr1860, %vr1861

	; conv vr1859+72 => vr1862
	%vr1864 = ptrtoint %MEMORY_T* %vr1859 to i64
	%vr1865 = add i64 %vr1864, 72
	%vr1866 = inttoptr i64 %vr1865 to double*
	%vr1867 = load double, double* %vr1866
	%vr1863 = call double @llvm.nearbyint.f64(double %vr1867)
	%vr1862 = fptoui double %vr1863 to i64

	; bop vr1862 SHL 24
	%vr1869 = bitcast i64 24 to i64
	%vr1868 = shl i64 %vr1862, %vr1869

	; bop vr1855 OR vr1868
	%vr1870 = or i64 %vr1855, %vr1868

	; conv vr1870 => vr1871
	%vr1871 = uitofp i64 %vr1870 to double

	; conv SYS_OFFSET => vr1872
	%vr1873 = load i32, i32* @SYS_OFFSET
	%vr1872 = sext i32 %vr1873 to i64

	; bop vr1872 SHL 3
	%vr1874 = shl i64 %vr1872, 3

	; bop THIS + vr1874
	%vr1876 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1877 = inttoptr i64 %vr1874 to %MEMORY_T*
	%vr1875 = add %MEMORY_T* %vr1876, %vr1877

	; store vr1875+1616 := vr1871
	%vr1878 = ptrtoint %MEMORY_T* %vr1875 to i64
	%vr1879 = add i64 %vr1878, 1616
	%vr1880 = inttoptr i64 %vr1879 to double*
	store double %vr1871, double* %vr1880

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ED2:

	; label .Lt_04DD
	br label %.Lt_04DD
.Lt_04DD:

	; conv SYS_OFFSET => vr1882
	%vr1883 = load i32, i32* @SYS_OFFSET
	%vr1882 = sext i32 %vr1883 to i64

	; bop vr1882 + 8
	%vr1884 = add i64 %vr1882, 8
	%vr1885 = bitcast i64 %vr1884 to i64

	; branchbop ADR <> vr1885
	%vr1887 = load i64, i64* %ADR.102
	%vr1886 = icmp ne i64 %vr1887, %vr1885
	br i1 %vr1886, label %.Lt_04DF, label %.Lt_0ED3
.Lt_0ED3:

	; label .Lt_04E0
	br label %.Lt_04E0
.Lt_04E0:

	; conv SYS_OFFSET => vr1889
	%vr1890 = load i32, i32* @SYS_OFFSET
	%vr1889 = sext i32 %vr1890 to i64

	; bop vr1889 SHL 3
	%vr1891 = shl i64 %vr1889, 3

	; bop THIS + vr1891
	%vr1893 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1894 = inttoptr i64 %vr1891 to %MEMORY_T*
	%vr1892 = add %MEMORY_T* %vr1893, %vr1894

	; conv vr1892+48 => vr1895
	%vr1897 = ptrtoint %MEMORY_T* %vr1892 to i64
	%vr1898 = add i64 %vr1897, 48
	%vr1899 = inttoptr i64 %vr1898 to double*
	%vr1900 = load double, double* %vr1899
	%vr1896 = call double @llvm.nearbyint.f64(double %vr1900)
	%vr1895 = fptoui double %vr1896 to i64

	; bop vr1895 SHL 16
	%vr1902 = bitcast i64 16 to i64
	%vr1901 = shl i64 %vr1895, %vr1902

	; conv SYS_OFFSET => vr1903
	%vr1904 = load i32, i32* @SYS_OFFSET
	%vr1903 = sext i32 %vr1904 to i64

	; bop vr1903 SHL 3
	%vr1905 = shl i64 %vr1903, 3

	; bop THIS + vr1905
	%vr1907 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1908 = inttoptr i64 %vr1905 to %MEMORY_T*
	%vr1906 = add %MEMORY_T* %vr1907, %vr1908

	; conv vr1906+56 => vr1909
	%vr1911 = ptrtoint %MEMORY_T* %vr1906 to i64
	%vr1912 = add i64 %vr1911, 56
	%vr1913 = inttoptr i64 %vr1912 to double*
	%vr1914 = load double, double* %vr1913
	%vr1910 = call double @llvm.nearbyint.f64(double %vr1914)
	%vr1909 = fptoui double %vr1910 to i64

	; bop vr1909 SHL 8
	%vr1916 = bitcast i64 8 to i64
	%vr1915 = shl i64 %vr1909, %vr1916

	; bop vr1901 OR vr1915
	%vr1917 = or i64 %vr1901, %vr1915

	; conv SYS_OFFSET => vr1918
	%vr1919 = load i32, i32* @SYS_OFFSET
	%vr1918 = sext i32 %vr1919 to i64

	; bop vr1918 SHL 3
	%vr1920 = shl i64 %vr1918, 3

	; bop THIS + vr1920
	%vr1922 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1923 = inttoptr i64 %vr1920 to %MEMORY_T*
	%vr1921 = add %MEMORY_T* %vr1922, %vr1923

	; conv vr1921+64 => vr1924
	%vr1926 = ptrtoint %MEMORY_T* %vr1921 to i64
	%vr1927 = add i64 %vr1926, 64
	%vr1928 = inttoptr i64 %vr1927 to double*
	%vr1929 = load double, double* %vr1928
	%vr1925 = call double @llvm.nearbyint.f64(double %vr1929)
	%vr1924 = fptoui double %vr1925 to i64

	; bop vr1917 OR vr1924
	%vr1930 = or i64 %vr1917, %vr1924

	; conv SYS_OFFSET => vr1931
	%vr1932 = load i32, i32* @SYS_OFFSET
	%vr1931 = sext i32 %vr1932 to i64

	; bop vr1931 SHL 3
	%vr1933 = shl i64 %vr1931, 3

	; bop THIS + vr1933
	%vr1935 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1936 = inttoptr i64 %vr1933 to %MEMORY_T*
	%vr1934 = add %MEMORY_T* %vr1935, %vr1936

	; conv vr1934+72 => vr1937
	%vr1939 = ptrtoint %MEMORY_T* %vr1934 to i64
	%vr1940 = add i64 %vr1939, 72
	%vr1941 = inttoptr i64 %vr1940 to double*
	%vr1942 = load double, double* %vr1941
	%vr1938 = call double @llvm.nearbyint.f64(double %vr1942)
	%vr1937 = fptoui double %vr1938 to i64

	; bop vr1937 SHL 24
	%vr1944 = bitcast i64 24 to i64
	%vr1943 = shl i64 %vr1937, %vr1944

	; bop vr1930 OR vr1943
	%vr1945 = or i64 %vr1930, %vr1943

	; conv vr1945 => vr1946
	%vr1946 = uitofp i64 %vr1945 to double

	; conv SYS_OFFSET => vr1947
	%vr1948 = load i32, i32* @SYS_OFFSET
	%vr1947 = sext i32 %vr1948 to i64

	; bop vr1947 SHL 3
	%vr1949 = shl i64 %vr1947, 3

	; bop THIS + vr1949
	%vr1951 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1952 = inttoptr i64 %vr1949 to %MEMORY_T*
	%vr1950 = add %MEMORY_T* %vr1951, %vr1952

	; store vr1950+1616 := vr1946
	%vr1953 = ptrtoint %MEMORY_T* %vr1950 to i64
	%vr1954 = add i64 %vr1953, 1616
	%vr1955 = inttoptr i64 %vr1954 to double*
	store double %vr1946, double* %vr1955

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ED4:

	; label .Lt_04DF
	br label %.Lt_04DF
.Lt_04DF:

	; conv SYS_OFFSET => vr1957
	%vr1958 = load i32, i32* @SYS_OFFSET
	%vr1957 = sext i32 %vr1958 to i64

	; bop vr1957 + 9
	%vr1959 = add i64 %vr1957, 9
	%vr1960 = bitcast i64 %vr1959 to i64

	; branchbop ADR <> vr1960
	%vr1962 = load i64, i64* %ADR.102
	%vr1961 = icmp ne i64 %vr1962, %vr1960
	br i1 %vr1961, label %.Lt_04E1, label %.Lt_0ED5
.Lt_0ED5:

	; label .Lt_04E2
	br label %.Lt_04E2
.Lt_04E2:

	; conv SYS_OFFSET => vr1964
	%vr1965 = load i32, i32* @SYS_OFFSET
	%vr1964 = sext i32 %vr1965 to i64

	; bop vr1964 SHL 3
	%vr1966 = shl i64 %vr1964, 3

	; bop THIS + vr1966
	%vr1968 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1969 = inttoptr i64 %vr1966 to %MEMORY_T*
	%vr1967 = add %MEMORY_T* %vr1968, %vr1969

	; conv vr1967+48 => vr1970
	%vr1972 = ptrtoint %MEMORY_T* %vr1967 to i64
	%vr1973 = add i64 %vr1972, 48
	%vr1974 = inttoptr i64 %vr1973 to double*
	%vr1975 = load double, double* %vr1974
	%vr1971 = call double @llvm.nearbyint.f64(double %vr1975)
	%vr1970 = fptoui double %vr1971 to i64

	; bop vr1970 SHL 16
	%vr1977 = bitcast i64 16 to i64
	%vr1976 = shl i64 %vr1970, %vr1977

	; conv SYS_OFFSET => vr1978
	%vr1979 = load i32, i32* @SYS_OFFSET
	%vr1978 = sext i32 %vr1979 to i64

	; bop vr1978 SHL 3
	%vr1980 = shl i64 %vr1978, 3

	; bop THIS + vr1980
	%vr1982 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1983 = inttoptr i64 %vr1980 to %MEMORY_T*
	%vr1981 = add %MEMORY_T* %vr1982, %vr1983

	; conv vr1981+56 => vr1984
	%vr1986 = ptrtoint %MEMORY_T* %vr1981 to i64
	%vr1987 = add i64 %vr1986, 56
	%vr1988 = inttoptr i64 %vr1987 to double*
	%vr1989 = load double, double* %vr1988
	%vr1985 = call double @llvm.nearbyint.f64(double %vr1989)
	%vr1984 = fptoui double %vr1985 to i64

	; bop vr1984 SHL 8
	%vr1991 = bitcast i64 8 to i64
	%vr1990 = shl i64 %vr1984, %vr1991

	; bop vr1976 OR vr1990
	%vr1992 = or i64 %vr1976, %vr1990

	; conv SYS_OFFSET => vr1993
	%vr1994 = load i32, i32* @SYS_OFFSET
	%vr1993 = sext i32 %vr1994 to i64

	; bop vr1993 SHL 3
	%vr1995 = shl i64 %vr1993, 3

	; bop THIS + vr1995
	%vr1997 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr1998 = inttoptr i64 %vr1995 to %MEMORY_T*
	%vr1996 = add %MEMORY_T* %vr1997, %vr1998

	; conv vr1996+64 => vr1999
	%vr2001 = ptrtoint %MEMORY_T* %vr1996 to i64
	%vr2002 = add i64 %vr2001, 64
	%vr2003 = inttoptr i64 %vr2002 to double*
	%vr2004 = load double, double* %vr2003
	%vr2000 = call double @llvm.nearbyint.f64(double %vr2004)
	%vr1999 = fptoui double %vr2000 to i64

	; bop vr1992 OR vr1999
	%vr2005 = or i64 %vr1992, %vr1999

	; conv SYS_OFFSET => vr2006
	%vr2007 = load i32, i32* @SYS_OFFSET
	%vr2006 = sext i32 %vr2007 to i64

	; bop vr2006 SHL 3
	%vr2008 = shl i64 %vr2006, 3

	; bop THIS + vr2008
	%vr2010 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2011 = inttoptr i64 %vr2008 to %MEMORY_T*
	%vr2009 = add %MEMORY_T* %vr2010, %vr2011

	; conv vr2009+72 => vr2012
	%vr2014 = ptrtoint %MEMORY_T* %vr2009 to i64
	%vr2015 = add i64 %vr2014, 72
	%vr2016 = inttoptr i64 %vr2015 to double*
	%vr2017 = load double, double* %vr2016
	%vr2013 = call double @llvm.nearbyint.f64(double %vr2017)
	%vr2012 = fptoui double %vr2013 to i64

	; bop vr2012 SHL 24
	%vr2019 = bitcast i64 24 to i64
	%vr2018 = shl i64 %vr2012, %vr2019

	; bop vr2005 OR vr2018
	%vr2020 = or i64 %vr2005, %vr2018

	; conv vr2020 => vr2021
	%vr2021 = uitofp i64 %vr2020 to double

	; conv SYS_OFFSET => vr2022
	%vr2023 = load i32, i32* @SYS_OFFSET
	%vr2022 = sext i32 %vr2023 to i64

	; bop vr2022 SHL 3
	%vr2024 = shl i64 %vr2022, 3

	; bop THIS + vr2024
	%vr2026 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2027 = inttoptr i64 %vr2024 to %MEMORY_T*
	%vr2025 = add %MEMORY_T* %vr2026, %vr2027

	; store vr2025+1616 := vr2021
	%vr2028 = ptrtoint %MEMORY_T* %vr2025 to i64
	%vr2029 = add i64 %vr2028, 1616
	%vr2030 = inttoptr i64 %vr2029 to double*
	store double %vr2021, double* %vr2030

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ED6:

	; label .Lt_04E1
	br label %.Lt_04E1
.Lt_04E1:

	; conv SYS_OFFSET => vr2032
	%vr2033 = load i32, i32* @SYS_OFFSET
	%vr2032 = sext i32 %vr2033 to i64

	; bop vr2032 + 10
	%vr2034 = add i64 %vr2032, 10
	%vr2035 = bitcast i64 %vr2034 to i64

	; branchbop ADR <> vr2035
	%vr2037 = load i64, i64* %ADR.102
	%vr2036 = icmp ne i64 %vr2037, %vr2035
	br i1 %vr2036, label %.Lt_04E3, label %.Lt_0ED7
.Lt_0ED7:

	; label .Lt_04E4
	br label %.Lt_04E4
.Lt_04E4:

	; conv SYS_OFFSET => vr2039
	%vr2040 = load i32, i32* @SYS_OFFSET
	%vr2039 = sext i32 %vr2040 to i64

	; bop vr2039 SHL 3
	%vr2041 = shl i64 %vr2039, 3

	; bop THIS + vr2041
	%vr2043 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2044 = inttoptr i64 %vr2041 to %MEMORY_T*
	%vr2042 = add %MEMORY_T* %vr2043, %vr2044

	; conv vr2042+88 => vr2045
	%vr2047 = ptrtoint %MEMORY_T* %vr2042 to i64
	%vr2048 = add i64 %vr2047, 88
	%vr2049 = inttoptr i64 %vr2048 to double*
	%vr2050 = load double, double* %vr2049
	%vr2046 = call double @llvm.nearbyint.f64(double %vr2050)
	%vr2045 = fptosi double %vr2046 to i64

	; bop vr2045 SHL 32
	%vr2051 = shl i64 %vr2045, 32

	; conv SYS_OFFSET => vr2052
	%vr2053 = load i32, i32* @SYS_OFFSET
	%vr2052 = sext i32 %vr2053 to i64

	; bop vr2052 SHL 3
	%vr2054 = shl i64 %vr2052, 3

	; bop THIS + vr2054
	%vr2056 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2057 = inttoptr i64 %vr2054 to %MEMORY_T*
	%vr2055 = add %MEMORY_T* %vr2056, %vr2057

	; conv vr2055+96 => vr2058
	%vr2060 = ptrtoint %MEMORY_T* %vr2055 to i64
	%vr2061 = add i64 %vr2060, 96
	%vr2062 = inttoptr i64 %vr2061 to double*
	%vr2063 = load double, double* %vr2062
	%vr2059 = call double @llvm.nearbyint.f64(double %vr2063)
	%vr2058 = fptosi double %vr2059 to i64

	; bop vr2058 SHL 24
	%vr2064 = shl i64 %vr2058, 24

	; bop vr2051 + vr2064
	%vr2065 = add i64 %vr2051, %vr2064

	; conv SYS_OFFSET => vr2066
	%vr2067 = load i32, i32* @SYS_OFFSET
	%vr2066 = sext i32 %vr2067 to i64

	; bop vr2066 SHL 3
	%vr2068 = shl i64 %vr2066, 3

	; bop THIS + vr2068
	%vr2070 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2071 = inttoptr i64 %vr2068 to %MEMORY_T*
	%vr2069 = add %MEMORY_T* %vr2070, %vr2071

	; conv vr2069+104 => vr2072
	%vr2074 = ptrtoint %MEMORY_T* %vr2069 to i64
	%vr2075 = add i64 %vr2074, 104
	%vr2076 = inttoptr i64 %vr2075 to double*
	%vr2077 = load double, double* %vr2076
	%vr2073 = call double @llvm.nearbyint.f64(double %vr2077)
	%vr2072 = fptosi double %vr2073 to i64

	; bop vr2072 SHL 16
	%vr2078 = shl i64 %vr2072, 16

	; bop vr2065 + vr2078
	%vr2079 = add i64 %vr2065, %vr2078

	; conv SYS_OFFSET => vr2080
	%vr2081 = load i32, i32* @SYS_OFFSET
	%vr2080 = sext i32 %vr2081 to i64

	; bop vr2080 SHL 3
	%vr2082 = shl i64 %vr2080, 3

	; bop THIS + vr2082
	%vr2084 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2085 = inttoptr i64 %vr2082 to %MEMORY_T*
	%vr2083 = add %MEMORY_T* %vr2084, %vr2085

	; conv vr2083+112 => vr2086
	%vr2088 = ptrtoint %MEMORY_T* %vr2083 to i64
	%vr2089 = add i64 %vr2088, 112
	%vr2090 = inttoptr i64 %vr2089 to double*
	%vr2091 = load double, double* %vr2090
	%vr2087 = call double @llvm.nearbyint.f64(double %vr2091)
	%vr2086 = fptosi double %vr2087 to i64

	; bop vr2086 SHL 8
	%vr2092 = shl i64 %vr2086, 8

	; bop vr2079 + vr2092
	%vr2093 = add i64 %vr2079, %vr2092

	; conv vr2093 => vr2094
	%vr2094 = sitofp i64 %vr2093 to double

	; conv SYS_OFFSET => vr2095
	%vr2096 = load i32, i32* @SYS_OFFSET
	%vr2095 = sext i32 %vr2096 to i64

	; bop vr2095 SHL 3
	%vr2097 = shl i64 %vr2095, 3

	; bop THIS + vr2097
	%vr2099 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2100 = inttoptr i64 %vr2097 to %MEMORY_T*
	%vr2098 = add %MEMORY_T* %vr2099, %vr2100

	; bop vr2094 + vr2098+120
	%vr2102 = ptrtoint %MEMORY_T* %vr2098 to i64
	%vr2103 = add i64 %vr2102, 120
	%vr2104 = inttoptr i64 %vr2103 to double*
	%vr2105 = load double, double* %vr2104
	%vr2101 = fadd double %vr2094, %vr2105

	; conv SYS_OFFSET => vr2106
	%vr2107 = load i32, i32* @SYS_OFFSET
	%vr2106 = sext i32 %vr2107 to i64

	; bop vr2106 SHL 3
	%vr2108 = shl i64 %vr2106, 3

	; bop THIS + vr2108
	%vr2110 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2111 = inttoptr i64 %vr2108 to %MEMORY_T*
	%vr2109 = add %MEMORY_T* %vr2110, %vr2111

	; store vr2109+1624 := vr2101
	%vr2112 = ptrtoint %MEMORY_T* %vr2109 to i64
	%vr2113 = add i64 %vr2112, 1624
	%vr2114 = inttoptr i64 %vr2113 to double*
	store double %vr2101, double* %vr2114

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0ED8:

	; label .Lt_04E3
	br label %.Lt_04E3
.Lt_04E3:

	; conv SYS_OFFSET => vr2116
	%vr2117 = load i32, i32* @SYS_OFFSET
	%vr2116 = sext i32 %vr2117 to i64

	; bop vr2116 + 16
	%vr2118 = add i64 %vr2116, 16
	%vr2119 = bitcast i64 %vr2118 to i64

	; branchbop ADR <> vr2119
	%vr2121 = load i64, i64* %ADR.102
	%vr2120 = icmp ne i64 %vr2121, %vr2119
	br i1 %vr2120, label %.Lt_04E5, label %.Lt_0ED9
.Lt_0ED9:

	; label .Lt_04E6
	br label %.Lt_04E6
.Lt_04E6:

	; conv SYS_OFFSET => vr2123
	%vr2124 = load i32, i32* @SYS_OFFSET
	%vr2123 = sext i32 %vr2124 to i64

	; bop vr2123 SHL 3
	%vr2125 = shl i64 %vr2123, 3

	; bop THIS + vr2125
	%vr2127 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2128 = inttoptr i64 %vr2125 to %MEMORY_T*
	%vr2126 = add %MEMORY_T* %vr2127, %vr2128

	; conv vr2126+136 => vr2129
	%vr2131 = ptrtoint %MEMORY_T* %vr2126 to i64
	%vr2132 = add i64 %vr2131, 136
	%vr2133 = inttoptr i64 %vr2132 to double*
	%vr2134 = load double, double* %vr2133
	%vr2130 = call double @llvm.nearbyint.f64(double %vr2134)
	%vr2129 = fptosi double %vr2130 to i64

	; bop vr2129 SHL 32
	%vr2135 = shl i64 %vr2129, 32

	; conv SYS_OFFSET => vr2136
	%vr2137 = load i32, i32* @SYS_OFFSET
	%vr2136 = sext i32 %vr2137 to i64

	; bop vr2136 SHL 3
	%vr2138 = shl i64 %vr2136, 3

	; bop THIS + vr2138
	%vr2140 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2141 = inttoptr i64 %vr2138 to %MEMORY_T*
	%vr2139 = add %MEMORY_T* %vr2140, %vr2141

	; conv vr2139+144 => vr2142
	%vr2144 = ptrtoint %MEMORY_T* %vr2139 to i64
	%vr2145 = add i64 %vr2144, 144
	%vr2146 = inttoptr i64 %vr2145 to double*
	%vr2147 = load double, double* %vr2146
	%vr2143 = call double @llvm.nearbyint.f64(double %vr2147)
	%vr2142 = fptosi double %vr2143 to i64

	; bop vr2142 SHL 24
	%vr2148 = shl i64 %vr2142, 24

	; bop vr2135 + vr2148
	%vr2149 = add i64 %vr2135, %vr2148

	; conv SYS_OFFSET => vr2150
	%vr2151 = load i32, i32* @SYS_OFFSET
	%vr2150 = sext i32 %vr2151 to i64

	; bop vr2150 SHL 3
	%vr2152 = shl i64 %vr2150, 3

	; bop THIS + vr2152
	%vr2154 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2155 = inttoptr i64 %vr2152 to %MEMORY_T*
	%vr2153 = add %MEMORY_T* %vr2154, %vr2155

	; conv vr2153+152 => vr2156
	%vr2158 = ptrtoint %MEMORY_T* %vr2153 to i64
	%vr2159 = add i64 %vr2158, 152
	%vr2160 = inttoptr i64 %vr2159 to double*
	%vr2161 = load double, double* %vr2160
	%vr2157 = call double @llvm.nearbyint.f64(double %vr2161)
	%vr2156 = fptosi double %vr2157 to i64

	; bop vr2156 SHL 16
	%vr2162 = shl i64 %vr2156, 16

	; bop vr2149 + vr2162
	%vr2163 = add i64 %vr2149, %vr2162

	; conv SYS_OFFSET => vr2164
	%vr2165 = load i32, i32* @SYS_OFFSET
	%vr2164 = sext i32 %vr2165 to i64

	; bop vr2164 SHL 3
	%vr2166 = shl i64 %vr2164, 3

	; bop THIS + vr2166
	%vr2168 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2169 = inttoptr i64 %vr2166 to %MEMORY_T*
	%vr2167 = add %MEMORY_T* %vr2168, %vr2169

	; conv vr2167+160 => vr2170
	%vr2172 = ptrtoint %MEMORY_T* %vr2167 to i64
	%vr2173 = add i64 %vr2172, 160
	%vr2174 = inttoptr i64 %vr2173 to double*
	%vr2175 = load double, double* %vr2174
	%vr2171 = call double @llvm.nearbyint.f64(double %vr2175)
	%vr2170 = fptosi double %vr2171 to i64

	; bop vr2170 SHL 8
	%vr2176 = shl i64 %vr2170, 8

	; bop vr2163 + vr2176
	%vr2177 = add i64 %vr2163, %vr2176

	; conv vr2177 => vr2178
	%vr2178 = sitofp i64 %vr2177 to double

	; conv SYS_OFFSET => vr2179
	%vr2180 = load i32, i32* @SYS_OFFSET
	%vr2179 = sext i32 %vr2180 to i64

	; bop vr2179 SHL 3
	%vr2181 = shl i64 %vr2179, 3

	; bop THIS + vr2181
	%vr2183 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2184 = inttoptr i64 %vr2181 to %MEMORY_T*
	%vr2182 = add %MEMORY_T* %vr2183, %vr2184

	; bop vr2178 + vr2182+168
	%vr2186 = ptrtoint %MEMORY_T* %vr2182 to i64
	%vr2187 = add i64 %vr2186, 168
	%vr2188 = inttoptr i64 %vr2187 to double*
	%vr2189 = load double, double* %vr2188
	%vr2185 = fadd double %vr2178, %vr2189

	; conv SYS_OFFSET => vr2190
	%vr2191 = load i32, i32* @SYS_OFFSET
	%vr2190 = sext i32 %vr2191 to i64

	; bop vr2190 SHL 3
	%vr2192 = shl i64 %vr2190, 3

	; bop THIS + vr2192
	%vr2194 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2195 = inttoptr i64 %vr2192 to %MEMORY_T*
	%vr2193 = add %MEMORY_T* %vr2194, %vr2195

	; store vr2193+1632 := vr2185
	%vr2196 = ptrtoint %MEMORY_T* %vr2193 to i64
	%vr2197 = add i64 %vr2196, 1632
	%vr2198 = inttoptr i64 %vr2197 to double*
	store double %vr2185, double* %vr2198

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EDA:

	; label .Lt_04E5
	br label %.Lt_04E5
.Lt_04E5:

	; conv SYS_OFFSET => vr2200
	%vr2201 = load i32, i32* @SYS_OFFSET
	%vr2200 = sext i32 %vr2201 to i64

	; bop vr2200 + 22
	%vr2202 = add i64 %vr2200, 22
	%vr2203 = bitcast i64 %vr2202 to i64

	; branchbop ADR <> vr2203
	%vr2205 = load i64, i64* %ADR.102
	%vr2204 = icmp ne i64 %vr2205, %vr2203
	br i1 %vr2204, label %.Lt_04E7, label %.Lt_0EDB
.Lt_0EDB:

	; label .Lt_04E8
	br label %.Lt_04E8
.Lt_04E8:

	; conv SYS_OFFSET => vr2207
	%vr2208 = load i32, i32* @SYS_OFFSET
	%vr2207 = sext i32 %vr2208 to i64

	; bop vr2207 SHL 3
	%vr2209 = shl i64 %vr2207, 3

	; bop THIS + vr2209
	%vr2211 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2212 = inttoptr i64 %vr2209 to %MEMORY_T*
	%vr2210 = add %MEMORY_T* %vr2211, %vr2212

	; conv vr2210+184 => vr2213
	%vr2215 = ptrtoint %MEMORY_T* %vr2210 to i64
	%vr2216 = add i64 %vr2215, 184
	%vr2217 = inttoptr i64 %vr2216 to double*
	%vr2218 = load double, double* %vr2217
	%vr2214 = call double @llvm.nearbyint.f64(double %vr2218)
	%vr2213 = fptosi double %vr2214 to i64

	; bop vr2213 SHL 32
	%vr2219 = shl i64 %vr2213, 32

	; conv SYS_OFFSET => vr2220
	%vr2221 = load i32, i32* @SYS_OFFSET
	%vr2220 = sext i32 %vr2221 to i64

	; bop vr2220 SHL 3
	%vr2222 = shl i64 %vr2220, 3

	; bop THIS + vr2222
	%vr2224 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2225 = inttoptr i64 %vr2222 to %MEMORY_T*
	%vr2223 = add %MEMORY_T* %vr2224, %vr2225

	; conv vr2223+192 => vr2226
	%vr2228 = ptrtoint %MEMORY_T* %vr2223 to i64
	%vr2229 = add i64 %vr2228, 192
	%vr2230 = inttoptr i64 %vr2229 to double*
	%vr2231 = load double, double* %vr2230
	%vr2227 = call double @llvm.nearbyint.f64(double %vr2231)
	%vr2226 = fptosi double %vr2227 to i64

	; bop vr2226 SHL 24
	%vr2232 = shl i64 %vr2226, 24

	; bop vr2219 + vr2232
	%vr2233 = add i64 %vr2219, %vr2232

	; conv SYS_OFFSET => vr2234
	%vr2235 = load i32, i32* @SYS_OFFSET
	%vr2234 = sext i32 %vr2235 to i64

	; bop vr2234 SHL 3
	%vr2236 = shl i64 %vr2234, 3

	; bop THIS + vr2236
	%vr2238 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2239 = inttoptr i64 %vr2236 to %MEMORY_T*
	%vr2237 = add %MEMORY_T* %vr2238, %vr2239

	; conv vr2237+200 => vr2240
	%vr2242 = ptrtoint %MEMORY_T* %vr2237 to i64
	%vr2243 = add i64 %vr2242, 200
	%vr2244 = inttoptr i64 %vr2243 to double*
	%vr2245 = load double, double* %vr2244
	%vr2241 = call double @llvm.nearbyint.f64(double %vr2245)
	%vr2240 = fptosi double %vr2241 to i64

	; bop vr2240 SHL 16
	%vr2246 = shl i64 %vr2240, 16

	; bop vr2233 + vr2246
	%vr2247 = add i64 %vr2233, %vr2246

	; conv SYS_OFFSET => vr2248
	%vr2249 = load i32, i32* @SYS_OFFSET
	%vr2248 = sext i32 %vr2249 to i64

	; bop vr2248 SHL 3
	%vr2250 = shl i64 %vr2248, 3

	; bop THIS + vr2250
	%vr2252 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2253 = inttoptr i64 %vr2250 to %MEMORY_T*
	%vr2251 = add %MEMORY_T* %vr2252, %vr2253

	; conv vr2251+208 => vr2254
	%vr2256 = ptrtoint %MEMORY_T* %vr2251 to i64
	%vr2257 = add i64 %vr2256, 208
	%vr2258 = inttoptr i64 %vr2257 to double*
	%vr2259 = load double, double* %vr2258
	%vr2255 = call double @llvm.nearbyint.f64(double %vr2259)
	%vr2254 = fptosi double %vr2255 to i64

	; bop vr2254 SHL 8
	%vr2260 = shl i64 %vr2254, 8

	; bop vr2247 + vr2260
	%vr2261 = add i64 %vr2247, %vr2260

	; conv vr2261 => vr2262
	%vr2262 = sitofp i64 %vr2261 to double

	; conv SYS_OFFSET => vr2263
	%vr2264 = load i32, i32* @SYS_OFFSET
	%vr2263 = sext i32 %vr2264 to i64

	; bop vr2263 SHL 3
	%vr2265 = shl i64 %vr2263, 3

	; bop THIS + vr2265
	%vr2267 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2268 = inttoptr i64 %vr2265 to %MEMORY_T*
	%vr2266 = add %MEMORY_T* %vr2267, %vr2268

	; bop vr2262 + vr2266+216
	%vr2270 = ptrtoint %MEMORY_T* %vr2266 to i64
	%vr2271 = add i64 %vr2270, 216
	%vr2272 = inttoptr i64 %vr2271 to double*
	%vr2273 = load double, double* %vr2272
	%vr2269 = fadd double %vr2262, %vr2273

	; conv SYS_OFFSET => vr2274
	%vr2275 = load i32, i32* @SYS_OFFSET
	%vr2274 = sext i32 %vr2275 to i64

	; bop vr2274 SHL 3
	%vr2276 = shl i64 %vr2274, 3

	; bop THIS + vr2276
	%vr2278 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2279 = inttoptr i64 %vr2276 to %MEMORY_T*
	%vr2277 = add %MEMORY_T* %vr2278, %vr2279

	; store vr2277+1640 := vr2269
	%vr2280 = ptrtoint %MEMORY_T* %vr2277 to i64
	%vr2281 = add i64 %vr2280, 1640
	%vr2282 = inttoptr i64 %vr2281 to double*
	store double %vr2269, double* %vr2282

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EDC:

	; label .Lt_04E7
	br label %.Lt_04E7
.Lt_04E7:

	; conv SYS_OFFSET => vr2284
	%vr2285 = load i32, i32* @SYS_OFFSET
	%vr2284 = sext i32 %vr2285 to i64

	; bop vr2284 + 28
	%vr2286 = add i64 %vr2284, 28
	%vr2287 = bitcast i64 %vr2286 to i64

	; branchbop ADR <> vr2287
	%vr2289 = load i64, i64* %ADR.102
	%vr2288 = icmp ne i64 %vr2289, %vr2287
	br i1 %vr2288, label %.Lt_04E9, label %.Lt_0EDD
.Lt_0EDD:

	; label .Lt_04EA
	br label %.Lt_04EA
.Lt_04EA:

	; conv SYS_OFFSET => vr2291
	%vr2292 = load i32, i32* @SYS_OFFSET
	%vr2291 = sext i32 %vr2292 to i64

	; bop vr2291 SHL 3
	%vr2293 = shl i64 %vr2291, 3

	; bop THIS + vr2293
	%vr2295 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2296 = inttoptr i64 %vr2293 to %MEMORY_T*
	%vr2294 = add %MEMORY_T* %vr2295, %vr2296

	; conv vr2294+232 => vr2297
	%vr2299 = ptrtoint %MEMORY_T* %vr2294 to i64
	%vr2300 = add i64 %vr2299, 232
	%vr2301 = inttoptr i64 %vr2300 to double*
	%vr2302 = load double, double* %vr2301
	%vr2298 = call double @llvm.nearbyint.f64(double %vr2302)
	%vr2297 = fptosi double %vr2298 to i64

	; bop vr2297 SHL 32
	%vr2303 = shl i64 %vr2297, 32

	; conv SYS_OFFSET => vr2304
	%vr2305 = load i32, i32* @SYS_OFFSET
	%vr2304 = sext i32 %vr2305 to i64

	; bop vr2304 SHL 3
	%vr2306 = shl i64 %vr2304, 3

	; bop THIS + vr2306
	%vr2308 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2309 = inttoptr i64 %vr2306 to %MEMORY_T*
	%vr2307 = add %MEMORY_T* %vr2308, %vr2309

	; conv vr2307+240 => vr2310
	%vr2312 = ptrtoint %MEMORY_T* %vr2307 to i64
	%vr2313 = add i64 %vr2312, 240
	%vr2314 = inttoptr i64 %vr2313 to double*
	%vr2315 = load double, double* %vr2314
	%vr2311 = call double @llvm.nearbyint.f64(double %vr2315)
	%vr2310 = fptosi double %vr2311 to i64

	; bop vr2310 SHL 24
	%vr2316 = shl i64 %vr2310, 24

	; bop vr2303 + vr2316
	%vr2317 = add i64 %vr2303, %vr2316

	; conv SYS_OFFSET => vr2318
	%vr2319 = load i32, i32* @SYS_OFFSET
	%vr2318 = sext i32 %vr2319 to i64

	; bop vr2318 SHL 3
	%vr2320 = shl i64 %vr2318, 3

	; bop THIS + vr2320
	%vr2322 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2323 = inttoptr i64 %vr2320 to %MEMORY_T*
	%vr2321 = add %MEMORY_T* %vr2322, %vr2323

	; conv vr2321+248 => vr2324
	%vr2326 = ptrtoint %MEMORY_T* %vr2321 to i64
	%vr2327 = add i64 %vr2326, 248
	%vr2328 = inttoptr i64 %vr2327 to double*
	%vr2329 = load double, double* %vr2328
	%vr2325 = call double @llvm.nearbyint.f64(double %vr2329)
	%vr2324 = fptosi double %vr2325 to i64

	; bop vr2324 SHL 16
	%vr2330 = shl i64 %vr2324, 16

	; bop vr2317 + vr2330
	%vr2331 = add i64 %vr2317, %vr2330

	; conv SYS_OFFSET => vr2332
	%vr2333 = load i32, i32* @SYS_OFFSET
	%vr2332 = sext i32 %vr2333 to i64

	; bop vr2332 SHL 3
	%vr2334 = shl i64 %vr2332, 3

	; bop THIS + vr2334
	%vr2336 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2337 = inttoptr i64 %vr2334 to %MEMORY_T*
	%vr2335 = add %MEMORY_T* %vr2336, %vr2337

	; conv vr2335+256 => vr2338
	%vr2340 = ptrtoint %MEMORY_T* %vr2335 to i64
	%vr2341 = add i64 %vr2340, 256
	%vr2342 = inttoptr i64 %vr2341 to double*
	%vr2343 = load double, double* %vr2342
	%vr2339 = call double @llvm.nearbyint.f64(double %vr2343)
	%vr2338 = fptosi double %vr2339 to i64

	; bop vr2338 SHL 8
	%vr2344 = shl i64 %vr2338, 8

	; bop vr2331 + vr2344
	%vr2345 = add i64 %vr2331, %vr2344

	; conv vr2345 => vr2346
	%vr2346 = sitofp i64 %vr2345 to double

	; conv SYS_OFFSET => vr2347
	%vr2348 = load i32, i32* @SYS_OFFSET
	%vr2347 = sext i32 %vr2348 to i64

	; bop vr2347 SHL 3
	%vr2349 = shl i64 %vr2347, 3

	; bop THIS + vr2349
	%vr2351 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2352 = inttoptr i64 %vr2349 to %MEMORY_T*
	%vr2350 = add %MEMORY_T* %vr2351, %vr2352

	; bop vr2346 + vr2350+264
	%vr2354 = ptrtoint %MEMORY_T* %vr2350 to i64
	%vr2355 = add i64 %vr2354, 264
	%vr2356 = inttoptr i64 %vr2355 to double*
	%vr2357 = load double, double* %vr2356
	%vr2353 = fadd double %vr2346, %vr2357

	; conv SYS_OFFSET => vr2358
	%vr2359 = load i32, i32* @SYS_OFFSET
	%vr2358 = sext i32 %vr2359 to i64

	; bop vr2358 SHL 3
	%vr2360 = shl i64 %vr2358, 3

	; bop THIS + vr2360
	%vr2362 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2363 = inttoptr i64 %vr2360 to %MEMORY_T*
	%vr2361 = add %MEMORY_T* %vr2362, %vr2363

	; store vr2361+1648 := vr2353
	%vr2364 = ptrtoint %MEMORY_T* %vr2361 to i64
	%vr2365 = add i64 %vr2364, 1648
	%vr2366 = inttoptr i64 %vr2365 to double*
	store double %vr2353, double* %vr2366

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EDE:

	; label .Lt_04E9
	br label %.Lt_04E9
.Lt_04E9:

	; conv SYS_OFFSET => vr2368
	%vr2369 = load i32, i32* @SYS_OFFSET
	%vr2368 = sext i32 %vr2369 to i64

	; bop vr2368 + 34
	%vr2370 = add i64 %vr2368, 34
	%vr2371 = bitcast i64 %vr2370 to i64

	; branchbop ADR <> vr2371
	%vr2373 = load i64, i64* %ADR.102
	%vr2372 = icmp ne i64 %vr2373, %vr2371
	br i1 %vr2372, label %.Lt_04EB, label %.Lt_0EDF
.Lt_0EDF:

	; label .Lt_04EC
	br label %.Lt_04EC
.Lt_04EC:

	; conv SYS_OFFSET => vr2375
	%vr2376 = load i32, i32* @SYS_OFFSET
	%vr2375 = sext i32 %vr2376 to i64

	; bop vr2375 SHL 3
	%vr2377 = shl i64 %vr2375, 3

	; bop THIS + vr2377
	%vr2379 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2380 = inttoptr i64 %vr2377 to %MEMORY_T*
	%vr2378 = add %MEMORY_T* %vr2379, %vr2380

	; conv vr2378+280 => vr2381
	%vr2383 = ptrtoint %MEMORY_T* %vr2378 to i64
	%vr2384 = add i64 %vr2383, 280
	%vr2385 = inttoptr i64 %vr2384 to double*
	%vr2386 = load double, double* %vr2385
	%vr2382 = call double @llvm.nearbyint.f64(double %vr2386)
	%vr2381 = fptosi double %vr2382 to i64

	; bop vr2381 SHL 32
	%vr2387 = shl i64 %vr2381, 32

	; conv SYS_OFFSET => vr2388
	%vr2389 = load i32, i32* @SYS_OFFSET
	%vr2388 = sext i32 %vr2389 to i64

	; bop vr2388 SHL 3
	%vr2390 = shl i64 %vr2388, 3

	; bop THIS + vr2390
	%vr2392 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2393 = inttoptr i64 %vr2390 to %MEMORY_T*
	%vr2391 = add %MEMORY_T* %vr2392, %vr2393

	; conv vr2391+288 => vr2394
	%vr2396 = ptrtoint %MEMORY_T* %vr2391 to i64
	%vr2397 = add i64 %vr2396, 288
	%vr2398 = inttoptr i64 %vr2397 to double*
	%vr2399 = load double, double* %vr2398
	%vr2395 = call double @llvm.nearbyint.f64(double %vr2399)
	%vr2394 = fptosi double %vr2395 to i64

	; bop vr2394 SHL 24
	%vr2400 = shl i64 %vr2394, 24

	; bop vr2387 + vr2400
	%vr2401 = add i64 %vr2387, %vr2400

	; conv SYS_OFFSET => vr2402
	%vr2403 = load i32, i32* @SYS_OFFSET
	%vr2402 = sext i32 %vr2403 to i64

	; bop vr2402 SHL 3
	%vr2404 = shl i64 %vr2402, 3

	; bop THIS + vr2404
	%vr2406 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2407 = inttoptr i64 %vr2404 to %MEMORY_T*
	%vr2405 = add %MEMORY_T* %vr2406, %vr2407

	; conv vr2405+296 => vr2408
	%vr2410 = ptrtoint %MEMORY_T* %vr2405 to i64
	%vr2411 = add i64 %vr2410, 296
	%vr2412 = inttoptr i64 %vr2411 to double*
	%vr2413 = load double, double* %vr2412
	%vr2409 = call double @llvm.nearbyint.f64(double %vr2413)
	%vr2408 = fptosi double %vr2409 to i64

	; bop vr2408 SHL 16
	%vr2414 = shl i64 %vr2408, 16

	; bop vr2401 + vr2414
	%vr2415 = add i64 %vr2401, %vr2414

	; conv SYS_OFFSET => vr2416
	%vr2417 = load i32, i32* @SYS_OFFSET
	%vr2416 = sext i32 %vr2417 to i64

	; bop vr2416 SHL 3
	%vr2418 = shl i64 %vr2416, 3

	; bop THIS + vr2418
	%vr2420 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2421 = inttoptr i64 %vr2418 to %MEMORY_T*
	%vr2419 = add %MEMORY_T* %vr2420, %vr2421

	; conv vr2419+304 => vr2422
	%vr2424 = ptrtoint %MEMORY_T* %vr2419 to i64
	%vr2425 = add i64 %vr2424, 304
	%vr2426 = inttoptr i64 %vr2425 to double*
	%vr2427 = load double, double* %vr2426
	%vr2423 = call double @llvm.nearbyint.f64(double %vr2427)
	%vr2422 = fptosi double %vr2423 to i64

	; bop vr2422 SHL 8
	%vr2428 = shl i64 %vr2422, 8

	; bop vr2415 + vr2428
	%vr2429 = add i64 %vr2415, %vr2428

	; conv vr2429 => vr2430
	%vr2430 = sitofp i64 %vr2429 to double

	; conv SYS_OFFSET => vr2431
	%vr2432 = load i32, i32* @SYS_OFFSET
	%vr2431 = sext i32 %vr2432 to i64

	; bop vr2431 SHL 3
	%vr2433 = shl i64 %vr2431, 3

	; bop THIS + vr2433
	%vr2435 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2436 = inttoptr i64 %vr2433 to %MEMORY_T*
	%vr2434 = add %MEMORY_T* %vr2435, %vr2436

	; bop vr2430 + vr2434+312
	%vr2438 = ptrtoint %MEMORY_T* %vr2434 to i64
	%vr2439 = add i64 %vr2438, 312
	%vr2440 = inttoptr i64 %vr2439 to double*
	%vr2441 = load double, double* %vr2440
	%vr2437 = fadd double %vr2430, %vr2441

	; conv SYS_OFFSET => vr2442
	%vr2443 = load i32, i32* @SYS_OFFSET
	%vr2442 = sext i32 %vr2443 to i64

	; bop vr2442 SHL 3
	%vr2444 = shl i64 %vr2442, 3

	; bop THIS + vr2444
	%vr2446 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2447 = inttoptr i64 %vr2444 to %MEMORY_T*
	%vr2445 = add %MEMORY_T* %vr2446, %vr2447

	; store vr2445+1656 := vr2437
	%vr2448 = ptrtoint %MEMORY_T* %vr2445 to i64
	%vr2449 = add i64 %vr2448, 1656
	%vr2450 = inttoptr i64 %vr2449 to double*
	store double %vr2437, double* %vr2450

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EE0:

	; label .Lt_04EB
	br label %.Lt_04EB
.Lt_04EB:

	; conv SYS_OFFSET => vr2452
	%vr2453 = load i32, i32* @SYS_OFFSET
	%vr2452 = sext i32 %vr2453 to i64

	; bop vr2452 + 40
	%vr2454 = add i64 %vr2452, 40
	%vr2455 = bitcast i64 %vr2454 to i64

	; branchbop ADR <> vr2455
	%vr2457 = load i64, i64* %ADR.102
	%vr2456 = icmp ne i64 %vr2457, %vr2455
	br i1 %vr2456, label %.Lt_04ED, label %.Lt_0EE1
.Lt_0EE1:

	; label .Lt_04EE
	br label %.Lt_04EE
.Lt_04EE:

	; conv SYS_OFFSET => vr2459
	%vr2460 = load i32, i32* @SYS_OFFSET
	%vr2459 = sext i32 %vr2460 to i64

	; bop vr2459 SHL 3
	%vr2461 = shl i64 %vr2459, 3

	; bop THIS + vr2461
	%vr2463 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2464 = inttoptr i64 %vr2461 to %MEMORY_T*
	%vr2462 = add %MEMORY_T* %vr2463, %vr2464

	; conv vr2462+320 => vr2465
	%vr2467 = ptrtoint %MEMORY_T* %vr2462 to i64
	%vr2468 = add i64 %vr2467, 320
	%vr2469 = inttoptr i64 %vr2468 to double*
	%vr2470 = load double, double* %vr2469
	%vr2466 = call double @llvm.nearbyint.f64(double %vr2470)
	%vr2465 = fptosi double %vr2466 to i64

	; bop vr2465 SHL 32
	%vr2471 = shl i64 %vr2465, 32

	; conv SYS_OFFSET => vr2472
	%vr2473 = load i32, i32* @SYS_OFFSET
	%vr2472 = sext i32 %vr2473 to i64

	; bop vr2472 SHL 3
	%vr2474 = shl i64 %vr2472, 3

	; bop THIS + vr2474
	%vr2476 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2477 = inttoptr i64 %vr2474 to %MEMORY_T*
	%vr2475 = add %MEMORY_T* %vr2476, %vr2477

	; conv vr2475+328 => vr2478
	%vr2480 = ptrtoint %MEMORY_T* %vr2475 to i64
	%vr2481 = add i64 %vr2480, 328
	%vr2482 = inttoptr i64 %vr2481 to double*
	%vr2483 = load double, double* %vr2482
	%vr2479 = call double @llvm.nearbyint.f64(double %vr2483)
	%vr2478 = fptosi double %vr2479 to i64

	; bop vr2478 SHL 24
	%vr2484 = shl i64 %vr2478, 24

	; bop vr2471 + vr2484
	%vr2485 = add i64 %vr2471, %vr2484

	; conv SYS_OFFSET => vr2486
	%vr2487 = load i32, i32* @SYS_OFFSET
	%vr2486 = sext i32 %vr2487 to i64

	; bop vr2486 SHL 3
	%vr2488 = shl i64 %vr2486, 3

	; bop THIS + vr2488
	%vr2490 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2491 = inttoptr i64 %vr2488 to %MEMORY_T*
	%vr2489 = add %MEMORY_T* %vr2490, %vr2491

	; conv vr2489+336 => vr2492
	%vr2494 = ptrtoint %MEMORY_T* %vr2489 to i64
	%vr2495 = add i64 %vr2494, 336
	%vr2496 = inttoptr i64 %vr2495 to double*
	%vr2497 = load double, double* %vr2496
	%vr2493 = call double @llvm.nearbyint.f64(double %vr2497)
	%vr2492 = fptosi double %vr2493 to i64

	; bop vr2492 SHL 16
	%vr2498 = shl i64 %vr2492, 16

	; bop vr2485 + vr2498
	%vr2499 = add i64 %vr2485, %vr2498

	; conv SYS_OFFSET => vr2500
	%vr2501 = load i32, i32* @SYS_OFFSET
	%vr2500 = sext i32 %vr2501 to i64

	; bop vr2500 SHL 3
	%vr2502 = shl i64 %vr2500, 3

	; bop THIS + vr2502
	%vr2504 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2505 = inttoptr i64 %vr2502 to %MEMORY_T*
	%vr2503 = add %MEMORY_T* %vr2504, %vr2505

	; conv vr2503+352 => vr2506
	%vr2508 = ptrtoint %MEMORY_T* %vr2503 to i64
	%vr2509 = add i64 %vr2508, 352
	%vr2510 = inttoptr i64 %vr2509 to double*
	%vr2511 = load double, double* %vr2510
	%vr2507 = call double @llvm.nearbyint.f64(double %vr2511)
	%vr2506 = fptosi double %vr2507 to i64

	; bop vr2506 SHL 8
	%vr2512 = shl i64 %vr2506, 8

	; bop vr2499 + vr2512
	%vr2513 = add i64 %vr2499, %vr2512

	; conv vr2513 => vr2514
	%vr2514 = sitofp i64 %vr2513 to double

	; conv SYS_OFFSET => vr2515
	%vr2516 = load i32, i32* @SYS_OFFSET
	%vr2515 = sext i32 %vr2516 to i64

	; bop vr2515 SHL 3
	%vr2517 = shl i64 %vr2515, 3

	; bop THIS + vr2517
	%vr2519 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2520 = inttoptr i64 %vr2517 to %MEMORY_T*
	%vr2518 = add %MEMORY_T* %vr2519, %vr2520

	; bop vr2514 + vr2518+360
	%vr2522 = ptrtoint %MEMORY_T* %vr2518 to i64
	%vr2523 = add i64 %vr2522, 360
	%vr2524 = inttoptr i64 %vr2523 to double*
	%vr2525 = load double, double* %vr2524
	%vr2521 = fadd double %vr2514, %vr2525

	; conv SYS_OFFSET => vr2526
	%vr2527 = load i32, i32* @SYS_OFFSET
	%vr2526 = sext i32 %vr2527 to i64

	; bop vr2526 SHL 3
	%vr2528 = shl i64 %vr2526, 3

	; bop THIS + vr2528
	%vr2530 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2531 = inttoptr i64 %vr2528 to %MEMORY_T*
	%vr2529 = add %MEMORY_T* %vr2530, %vr2531

	; store vr2529+1664 := vr2521
	%vr2532 = ptrtoint %MEMORY_T* %vr2529 to i64
	%vr2533 = add i64 %vr2532, 1664
	%vr2534 = inttoptr i64 %vr2533 to double*
	store double %vr2521, double* %vr2534

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EE2:

	; label .Lt_04ED
	br label %.Lt_04ED
.Lt_04ED:

	; conv SYS_OFFSET => vr2536
	%vr2537 = load i32, i32* @SYS_OFFSET
	%vr2536 = sext i32 %vr2537 to i64

	; bop vr2536 + 46
	%vr2538 = add i64 %vr2536, 46
	%vr2539 = bitcast i64 %vr2538 to i64

	; branchbop ADR <> vr2539
	%vr2541 = load i64, i64* %ADR.102
	%vr2540 = icmp ne i64 %vr2541, %vr2539
	br i1 %vr2540, label %.Lt_04EF, label %.Lt_0EE3
.Lt_0EE3:

	; label .Lt_04F0
	br label %.Lt_04F0
.Lt_04F0:

	; conv SYS_OFFSET => vr2543
	%vr2544 = load i32, i32* @SYS_OFFSET
	%vr2543 = sext i32 %vr2544 to i64

	; bop vr2543 SHL 3
	%vr2545 = shl i64 %vr2543, 3

	; bop THIS + vr2545
	%vr2547 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2548 = inttoptr i64 %vr2545 to %MEMORY_T*
	%vr2546 = add %MEMORY_T* %vr2547, %vr2548

	; conv vr2546+376 => vr2549
	%vr2551 = ptrtoint %MEMORY_T* %vr2546 to i64
	%vr2552 = add i64 %vr2551, 376
	%vr2553 = inttoptr i64 %vr2552 to double*
	%vr2554 = load double, double* %vr2553
	%vr2550 = call double @llvm.nearbyint.f64(double %vr2554)
	%vr2549 = fptosi double %vr2550 to i64

	; bop vr2549 SHL 32
	%vr2555 = shl i64 %vr2549, 32

	; conv SYS_OFFSET => vr2556
	%vr2557 = load i32, i32* @SYS_OFFSET
	%vr2556 = sext i32 %vr2557 to i64

	; bop vr2556 SHL 3
	%vr2558 = shl i64 %vr2556, 3

	; bop THIS + vr2558
	%vr2560 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2561 = inttoptr i64 %vr2558 to %MEMORY_T*
	%vr2559 = add %MEMORY_T* %vr2560, %vr2561

	; conv vr2559+384 => vr2562
	%vr2564 = ptrtoint %MEMORY_T* %vr2559 to i64
	%vr2565 = add i64 %vr2564, 384
	%vr2566 = inttoptr i64 %vr2565 to double*
	%vr2567 = load double, double* %vr2566
	%vr2563 = call double @llvm.nearbyint.f64(double %vr2567)
	%vr2562 = fptosi double %vr2563 to i64

	; bop vr2562 SHL 24
	%vr2568 = shl i64 %vr2562, 24

	; bop vr2555 + vr2568
	%vr2569 = add i64 %vr2555, %vr2568

	; conv SYS_OFFSET => vr2570
	%vr2571 = load i32, i32* @SYS_OFFSET
	%vr2570 = sext i32 %vr2571 to i64

	; bop vr2570 SHL 3
	%vr2572 = shl i64 %vr2570, 3

	; bop THIS + vr2572
	%vr2574 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2575 = inttoptr i64 %vr2572 to %MEMORY_T*
	%vr2573 = add %MEMORY_T* %vr2574, %vr2575

	; conv vr2573+392 => vr2576
	%vr2578 = ptrtoint %MEMORY_T* %vr2573 to i64
	%vr2579 = add i64 %vr2578, 392
	%vr2580 = inttoptr i64 %vr2579 to double*
	%vr2581 = load double, double* %vr2580
	%vr2577 = call double @llvm.nearbyint.f64(double %vr2581)
	%vr2576 = fptosi double %vr2577 to i64

	; bop vr2576 SHL 16
	%vr2582 = shl i64 %vr2576, 16

	; bop vr2569 + vr2582
	%vr2583 = add i64 %vr2569, %vr2582

	; conv SYS_OFFSET => vr2584
	%vr2585 = load i32, i32* @SYS_OFFSET
	%vr2584 = sext i32 %vr2585 to i64

	; bop vr2584 SHL 3
	%vr2586 = shl i64 %vr2584, 3

	; bop THIS + vr2586
	%vr2588 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2589 = inttoptr i64 %vr2586 to %MEMORY_T*
	%vr2587 = add %MEMORY_T* %vr2588, %vr2589

	; conv vr2587+400 => vr2590
	%vr2592 = ptrtoint %MEMORY_T* %vr2587 to i64
	%vr2593 = add i64 %vr2592, 400
	%vr2594 = inttoptr i64 %vr2593 to double*
	%vr2595 = load double, double* %vr2594
	%vr2591 = call double @llvm.nearbyint.f64(double %vr2595)
	%vr2590 = fptosi double %vr2591 to i64

	; bop vr2590 SHL 8
	%vr2596 = shl i64 %vr2590, 8

	; bop vr2583 + vr2596
	%vr2597 = add i64 %vr2583, %vr2596

	; conv vr2597 => vr2598
	%vr2598 = sitofp i64 %vr2597 to double

	; conv SYS_OFFSET => vr2599
	%vr2600 = load i32, i32* @SYS_OFFSET
	%vr2599 = sext i32 %vr2600 to i64

	; bop vr2599 SHL 3
	%vr2601 = shl i64 %vr2599, 3

	; bop THIS + vr2601
	%vr2603 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2604 = inttoptr i64 %vr2601 to %MEMORY_T*
	%vr2602 = add %MEMORY_T* %vr2603, %vr2604

	; bop vr2598 + vr2602+408
	%vr2606 = ptrtoint %MEMORY_T* %vr2602 to i64
	%vr2607 = add i64 %vr2606, 408
	%vr2608 = inttoptr i64 %vr2607 to double*
	%vr2609 = load double, double* %vr2608
	%vr2605 = fadd double %vr2598, %vr2609

	; conv SYS_OFFSET => vr2610
	%vr2611 = load i32, i32* @SYS_OFFSET
	%vr2610 = sext i32 %vr2611 to i64

	; bop vr2610 SHL 3
	%vr2612 = shl i64 %vr2610, 3

	; bop THIS + vr2612
	%vr2614 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2615 = inttoptr i64 %vr2612 to %MEMORY_T*
	%vr2613 = add %MEMORY_T* %vr2614, %vr2615

	; store vr2613+1672 := vr2605
	%vr2616 = ptrtoint %MEMORY_T* %vr2613 to i64
	%vr2617 = add i64 %vr2616, 1672
	%vr2618 = inttoptr i64 %vr2617 to double*
	store double %vr2605, double* %vr2618

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EE4:

	; label .Lt_04EF
	br label %.Lt_04EF
.Lt_04EF:

	; conv SYS_OFFSET => vr2620
	%vr2621 = load i32, i32* @SYS_OFFSET
	%vr2620 = sext i32 %vr2621 to i64

	; bop vr2620 + 52
	%vr2622 = add i64 %vr2620, 52
	%vr2623 = bitcast i64 %vr2622 to i64

	; branchbop ADR <> vr2623
	%vr2625 = load i64, i64* %ADR.102
	%vr2624 = icmp ne i64 %vr2625, %vr2623
	br i1 %vr2624, label %.Lt_04F1, label %.Lt_0EE5
.Lt_0EE5:

	; label .Lt_04F2
	br label %.Lt_04F2
.Lt_04F2:

	; conv SYS_OFFSET => vr2627
	%vr2628 = load i32, i32* @SYS_OFFSET
	%vr2627 = sext i32 %vr2628 to i64

	; bop vr2627 SHL 3
	%vr2629 = shl i64 %vr2627, 3

	; bop THIS + vr2629
	%vr2631 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2632 = inttoptr i64 %vr2629 to %MEMORY_T*
	%vr2630 = add %MEMORY_T* %vr2631, %vr2632

	; conv vr2630+424 => vr2633
	%vr2635 = ptrtoint %MEMORY_T* %vr2630 to i64
	%vr2636 = add i64 %vr2635, 424
	%vr2637 = inttoptr i64 %vr2636 to double*
	%vr2638 = load double, double* %vr2637
	%vr2634 = call double @llvm.nearbyint.f64(double %vr2638)
	%vr2633 = fptosi double %vr2634 to i64

	; bop vr2633 SHL 32
	%vr2639 = shl i64 %vr2633, 32

	; conv SYS_OFFSET => vr2640
	%vr2641 = load i32, i32* @SYS_OFFSET
	%vr2640 = sext i32 %vr2641 to i64

	; bop vr2640 SHL 3
	%vr2642 = shl i64 %vr2640, 3

	; bop THIS + vr2642
	%vr2644 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2645 = inttoptr i64 %vr2642 to %MEMORY_T*
	%vr2643 = add %MEMORY_T* %vr2644, %vr2645

	; conv vr2643+432 => vr2646
	%vr2648 = ptrtoint %MEMORY_T* %vr2643 to i64
	%vr2649 = add i64 %vr2648, 432
	%vr2650 = inttoptr i64 %vr2649 to double*
	%vr2651 = load double, double* %vr2650
	%vr2647 = call double @llvm.nearbyint.f64(double %vr2651)
	%vr2646 = fptosi double %vr2647 to i64

	; bop vr2646 SHL 24
	%vr2652 = shl i64 %vr2646, 24

	; bop vr2639 + vr2652
	%vr2653 = add i64 %vr2639, %vr2652

	; conv SYS_OFFSET => vr2654
	%vr2655 = load i32, i32* @SYS_OFFSET
	%vr2654 = sext i32 %vr2655 to i64

	; bop vr2654 SHL 3
	%vr2656 = shl i64 %vr2654, 3

	; bop THIS + vr2656
	%vr2658 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2659 = inttoptr i64 %vr2656 to %MEMORY_T*
	%vr2657 = add %MEMORY_T* %vr2658, %vr2659

	; conv vr2657+440 => vr2660
	%vr2662 = ptrtoint %MEMORY_T* %vr2657 to i64
	%vr2663 = add i64 %vr2662, 440
	%vr2664 = inttoptr i64 %vr2663 to double*
	%vr2665 = load double, double* %vr2664
	%vr2661 = call double @llvm.nearbyint.f64(double %vr2665)
	%vr2660 = fptosi double %vr2661 to i64

	; bop vr2660 SHL 16
	%vr2666 = shl i64 %vr2660, 16

	; bop vr2653 + vr2666
	%vr2667 = add i64 %vr2653, %vr2666

	; conv SYS_OFFSET => vr2668
	%vr2669 = load i32, i32* @SYS_OFFSET
	%vr2668 = sext i32 %vr2669 to i64

	; bop vr2668 SHL 3
	%vr2670 = shl i64 %vr2668, 3

	; bop THIS + vr2670
	%vr2672 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2673 = inttoptr i64 %vr2670 to %MEMORY_T*
	%vr2671 = add %MEMORY_T* %vr2672, %vr2673

	; conv vr2671+448 => vr2674
	%vr2676 = ptrtoint %MEMORY_T* %vr2671 to i64
	%vr2677 = add i64 %vr2676, 448
	%vr2678 = inttoptr i64 %vr2677 to double*
	%vr2679 = load double, double* %vr2678
	%vr2675 = call double @llvm.nearbyint.f64(double %vr2679)
	%vr2674 = fptosi double %vr2675 to i64

	; bop vr2674 SHL 8
	%vr2680 = shl i64 %vr2674, 8

	; bop vr2667 + vr2680
	%vr2681 = add i64 %vr2667, %vr2680

	; conv vr2681 => vr2682
	%vr2682 = sitofp i64 %vr2681 to double

	; conv SYS_OFFSET => vr2683
	%vr2684 = load i32, i32* @SYS_OFFSET
	%vr2683 = sext i32 %vr2684 to i64

	; bop vr2683 SHL 3
	%vr2685 = shl i64 %vr2683, 3

	; bop THIS + vr2685
	%vr2687 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2688 = inttoptr i64 %vr2685 to %MEMORY_T*
	%vr2686 = add %MEMORY_T* %vr2687, %vr2688

	; bop vr2682 + vr2686+456
	%vr2690 = ptrtoint %MEMORY_T* %vr2686 to i64
	%vr2691 = add i64 %vr2690, 456
	%vr2692 = inttoptr i64 %vr2691 to double*
	%vr2693 = load double, double* %vr2692
	%vr2689 = fadd double %vr2682, %vr2693

	; conv SYS_OFFSET => vr2694
	%vr2695 = load i32, i32* @SYS_OFFSET
	%vr2694 = sext i32 %vr2695 to i64

	; bop vr2694 SHL 3
	%vr2696 = shl i64 %vr2694, 3

	; bop THIS + vr2696
	%vr2698 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2699 = inttoptr i64 %vr2696 to %MEMORY_T*
	%vr2697 = add %MEMORY_T* %vr2698, %vr2699

	; store vr2697+1680 := vr2689
	%vr2700 = ptrtoint %MEMORY_T* %vr2697 to i64
	%vr2701 = add i64 %vr2700, 1680
	%vr2702 = inttoptr i64 %vr2701 to double*
	store double %vr2689, double* %vr2702

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EE6:

	; label .Lt_04F1
	br label %.Lt_04F1
.Lt_04F1:

	; conv SYS_OFFSET => vr2704
	%vr2705 = load i32, i32* @SYS_OFFSET
	%vr2704 = sext i32 %vr2705 to i64

	; bop vr2704 + 58
	%vr2706 = add i64 %vr2704, 58
	%vr2707 = bitcast i64 %vr2706 to i64

	; branchbop ADR <> vr2707
	%vr2709 = load i64, i64* %ADR.102
	%vr2708 = icmp ne i64 %vr2709, %vr2707
	br i1 %vr2708, label %.Lt_04F3, label %.Lt_0EE7
.Lt_0EE7:

	; label .Lt_04F4
	br label %.Lt_04F4
.Lt_04F4:

	; conv SYS_OFFSET => vr2711
	%vr2712 = load i32, i32* @SYS_OFFSET
	%vr2711 = sext i32 %vr2712 to i64

	; bop vr2711 SHL 3
	%vr2713 = shl i64 %vr2711, 3

	; bop THIS + vr2713
	%vr2715 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2716 = inttoptr i64 %vr2713 to %MEMORY_T*
	%vr2714 = add %MEMORY_T* %vr2715, %vr2716

	; conv vr2714+472 => vr2717
	%vr2719 = ptrtoint %MEMORY_T* %vr2714 to i64
	%vr2720 = add i64 %vr2719, 472
	%vr2721 = inttoptr i64 %vr2720 to double*
	%vr2722 = load double, double* %vr2721
	%vr2718 = call double @llvm.nearbyint.f64(double %vr2722)
	%vr2717 = fptosi double %vr2718 to i64

	; bop vr2717 SHL 32
	%vr2723 = shl i64 %vr2717, 32

	; conv SYS_OFFSET => vr2724
	%vr2725 = load i32, i32* @SYS_OFFSET
	%vr2724 = sext i32 %vr2725 to i64

	; bop vr2724 SHL 3
	%vr2726 = shl i64 %vr2724, 3

	; bop THIS + vr2726
	%vr2728 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2729 = inttoptr i64 %vr2726 to %MEMORY_T*
	%vr2727 = add %MEMORY_T* %vr2728, %vr2729

	; conv vr2727+480 => vr2730
	%vr2732 = ptrtoint %MEMORY_T* %vr2727 to i64
	%vr2733 = add i64 %vr2732, 480
	%vr2734 = inttoptr i64 %vr2733 to double*
	%vr2735 = load double, double* %vr2734
	%vr2731 = call double @llvm.nearbyint.f64(double %vr2735)
	%vr2730 = fptosi double %vr2731 to i64

	; bop vr2730 SHL 24
	%vr2736 = shl i64 %vr2730, 24

	; bop vr2723 + vr2736
	%vr2737 = add i64 %vr2723, %vr2736

	; conv SYS_OFFSET => vr2738
	%vr2739 = load i32, i32* @SYS_OFFSET
	%vr2738 = sext i32 %vr2739 to i64

	; bop vr2738 SHL 3
	%vr2740 = shl i64 %vr2738, 3

	; bop THIS + vr2740
	%vr2742 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2743 = inttoptr i64 %vr2740 to %MEMORY_T*
	%vr2741 = add %MEMORY_T* %vr2742, %vr2743

	; conv vr2741+488 => vr2744
	%vr2746 = ptrtoint %MEMORY_T* %vr2741 to i64
	%vr2747 = add i64 %vr2746, 488
	%vr2748 = inttoptr i64 %vr2747 to double*
	%vr2749 = load double, double* %vr2748
	%vr2745 = call double @llvm.nearbyint.f64(double %vr2749)
	%vr2744 = fptosi double %vr2745 to i64

	; bop vr2744 SHL 16
	%vr2750 = shl i64 %vr2744, 16

	; bop vr2737 + vr2750
	%vr2751 = add i64 %vr2737, %vr2750

	; conv SYS_OFFSET => vr2752
	%vr2753 = load i32, i32* @SYS_OFFSET
	%vr2752 = sext i32 %vr2753 to i64

	; bop vr2752 SHL 3
	%vr2754 = shl i64 %vr2752, 3

	; bop THIS + vr2754
	%vr2756 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2757 = inttoptr i64 %vr2754 to %MEMORY_T*
	%vr2755 = add %MEMORY_T* %vr2756, %vr2757

	; conv vr2755+496 => vr2758
	%vr2760 = ptrtoint %MEMORY_T* %vr2755 to i64
	%vr2761 = add i64 %vr2760, 496
	%vr2762 = inttoptr i64 %vr2761 to double*
	%vr2763 = load double, double* %vr2762
	%vr2759 = call double @llvm.nearbyint.f64(double %vr2763)
	%vr2758 = fptosi double %vr2759 to i64

	; bop vr2758 SHL 8
	%vr2764 = shl i64 %vr2758, 8

	; bop vr2751 + vr2764
	%vr2765 = add i64 %vr2751, %vr2764

	; conv vr2765 => vr2766
	%vr2766 = sitofp i64 %vr2765 to double

	; conv SYS_OFFSET => vr2767
	%vr2768 = load i32, i32* @SYS_OFFSET
	%vr2767 = sext i32 %vr2768 to i64

	; bop vr2767 SHL 3
	%vr2769 = shl i64 %vr2767, 3

	; bop THIS + vr2769
	%vr2771 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2772 = inttoptr i64 %vr2769 to %MEMORY_T*
	%vr2770 = add %MEMORY_T* %vr2771, %vr2772

	; bop vr2766 + vr2770+504
	%vr2774 = ptrtoint %MEMORY_T* %vr2770 to i64
	%vr2775 = add i64 %vr2774, 504
	%vr2776 = inttoptr i64 %vr2775 to double*
	%vr2777 = load double, double* %vr2776
	%vr2773 = fadd double %vr2766, %vr2777

	; conv SYS_OFFSET => vr2778
	%vr2779 = load i32, i32* @SYS_OFFSET
	%vr2778 = sext i32 %vr2779 to i64

	; bop vr2778 SHL 3
	%vr2780 = shl i64 %vr2778, 3

	; bop THIS + vr2780
	%vr2782 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2783 = inttoptr i64 %vr2780 to %MEMORY_T*
	%vr2781 = add %MEMORY_T* %vr2782, %vr2783

	; store vr2781+1688 := vr2773
	%vr2784 = ptrtoint %MEMORY_T* %vr2781 to i64
	%vr2785 = add i64 %vr2784, 1688
	%vr2786 = inttoptr i64 %vr2785 to double*
	store double %vr2773, double* %vr2786

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EE8:

	; label .Lt_04F3
	br label %.Lt_04F3
.Lt_04F3:

	; conv SYS_OFFSET => vr2788
	%vr2789 = load i32, i32* @SYS_OFFSET
	%vr2788 = sext i32 %vr2789 to i64

	; bop vr2788 + 64
	%vr2790 = add i64 %vr2788, 64
	%vr2791 = bitcast i64 %vr2790 to i64

	; branchbop ADR <> vr2791
	%vr2793 = load i64, i64* %ADR.102
	%vr2792 = icmp ne i64 %vr2793, %vr2791
	br i1 %vr2792, label %.Lt_04F5, label %.Lt_0EE9
.Lt_0EE9:

	; label .Lt_04F6
	br label %.Lt_04F6
.Lt_04F6:

	; conv SYS_OFFSET => vr2795
	%vr2796 = load i32, i32* @SYS_OFFSET
	%vr2795 = sext i32 %vr2796 to i64

	; bop vr2795 SHL 3
	%vr2797 = shl i64 %vr2795, 3

	; bop THIS + vr2797
	%vr2799 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2800 = inttoptr i64 %vr2797 to %MEMORY_T*
	%vr2798 = add %MEMORY_T* %vr2799, %vr2800

	; conv vr2798+520 => vr2801
	%vr2803 = ptrtoint %MEMORY_T* %vr2798 to i64
	%vr2804 = add i64 %vr2803, 520
	%vr2805 = inttoptr i64 %vr2804 to double*
	%vr2806 = load double, double* %vr2805
	%vr2802 = call double @llvm.nearbyint.f64(double %vr2806)
	%vr2801 = fptosi double %vr2802 to i64

	; bop vr2801 SHL 32
	%vr2807 = shl i64 %vr2801, 32

	; conv SYS_OFFSET => vr2808
	%vr2809 = load i32, i32* @SYS_OFFSET
	%vr2808 = sext i32 %vr2809 to i64

	; bop vr2808 SHL 3
	%vr2810 = shl i64 %vr2808, 3

	; bop THIS + vr2810
	%vr2812 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2813 = inttoptr i64 %vr2810 to %MEMORY_T*
	%vr2811 = add %MEMORY_T* %vr2812, %vr2813

	; conv vr2811+528 => vr2814
	%vr2816 = ptrtoint %MEMORY_T* %vr2811 to i64
	%vr2817 = add i64 %vr2816, 528
	%vr2818 = inttoptr i64 %vr2817 to double*
	%vr2819 = load double, double* %vr2818
	%vr2815 = call double @llvm.nearbyint.f64(double %vr2819)
	%vr2814 = fptosi double %vr2815 to i64

	; bop vr2814 SHL 24
	%vr2820 = shl i64 %vr2814, 24

	; bop vr2807 + vr2820
	%vr2821 = add i64 %vr2807, %vr2820

	; conv SYS_OFFSET => vr2822
	%vr2823 = load i32, i32* @SYS_OFFSET
	%vr2822 = sext i32 %vr2823 to i64

	; bop vr2822 SHL 3
	%vr2824 = shl i64 %vr2822, 3

	; bop THIS + vr2824
	%vr2826 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2827 = inttoptr i64 %vr2824 to %MEMORY_T*
	%vr2825 = add %MEMORY_T* %vr2826, %vr2827

	; conv vr2825+536 => vr2828
	%vr2830 = ptrtoint %MEMORY_T* %vr2825 to i64
	%vr2831 = add i64 %vr2830, 536
	%vr2832 = inttoptr i64 %vr2831 to double*
	%vr2833 = load double, double* %vr2832
	%vr2829 = call double @llvm.nearbyint.f64(double %vr2833)
	%vr2828 = fptosi double %vr2829 to i64

	; bop vr2828 SHL 16
	%vr2834 = shl i64 %vr2828, 16

	; bop vr2821 + vr2834
	%vr2835 = add i64 %vr2821, %vr2834

	; conv SYS_OFFSET => vr2836
	%vr2837 = load i32, i32* @SYS_OFFSET
	%vr2836 = sext i32 %vr2837 to i64

	; bop vr2836 SHL 3
	%vr2838 = shl i64 %vr2836, 3

	; bop THIS + vr2838
	%vr2840 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2841 = inttoptr i64 %vr2838 to %MEMORY_T*
	%vr2839 = add %MEMORY_T* %vr2840, %vr2841

	; conv vr2839+544 => vr2842
	%vr2844 = ptrtoint %MEMORY_T* %vr2839 to i64
	%vr2845 = add i64 %vr2844, 544
	%vr2846 = inttoptr i64 %vr2845 to double*
	%vr2847 = load double, double* %vr2846
	%vr2843 = call double @llvm.nearbyint.f64(double %vr2847)
	%vr2842 = fptosi double %vr2843 to i64

	; bop vr2842 SHL 8
	%vr2848 = shl i64 %vr2842, 8

	; bop vr2835 + vr2848
	%vr2849 = add i64 %vr2835, %vr2848

	; conv vr2849 => vr2850
	%vr2850 = sitofp i64 %vr2849 to double

	; conv SYS_OFFSET => vr2851
	%vr2852 = load i32, i32* @SYS_OFFSET
	%vr2851 = sext i32 %vr2852 to i64

	; bop vr2851 SHL 3
	%vr2853 = shl i64 %vr2851, 3

	; bop THIS + vr2853
	%vr2855 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2856 = inttoptr i64 %vr2853 to %MEMORY_T*
	%vr2854 = add %MEMORY_T* %vr2855, %vr2856

	; bop vr2850 + vr2854+552
	%vr2858 = ptrtoint %MEMORY_T* %vr2854 to i64
	%vr2859 = add i64 %vr2858, 552
	%vr2860 = inttoptr i64 %vr2859 to double*
	%vr2861 = load double, double* %vr2860
	%vr2857 = fadd double %vr2850, %vr2861

	; conv SYS_OFFSET => vr2862
	%vr2863 = load i32, i32* @SYS_OFFSET
	%vr2862 = sext i32 %vr2863 to i64

	; bop vr2862 SHL 3
	%vr2864 = shl i64 %vr2862, 3

	; bop THIS + vr2864
	%vr2866 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2867 = inttoptr i64 %vr2864 to %MEMORY_T*
	%vr2865 = add %MEMORY_T* %vr2866, %vr2867

	; store vr2865+1696 := vr2857
	%vr2868 = ptrtoint %MEMORY_T* %vr2865 to i64
	%vr2869 = add i64 %vr2868, 1696
	%vr2870 = inttoptr i64 %vr2869 to double*
	store double %vr2857, double* %vr2870

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EEA:

	; label .Lt_04F5
	br label %.Lt_04F5
.Lt_04F5:

	; conv SYS_OFFSET => vr2872
	%vr2873 = load i32, i32* @SYS_OFFSET
	%vr2872 = sext i32 %vr2873 to i64

	; bop vr2872 + 70
	%vr2874 = add i64 %vr2872, 70
	%vr2875 = bitcast i64 %vr2874 to i64

	; branchbop ADR <> vr2875
	%vr2877 = load i64, i64* %ADR.102
	%vr2876 = icmp ne i64 %vr2877, %vr2875
	br i1 %vr2876, label %.Lt_04F7, label %.Lt_0EEB
.Lt_0EEB:

	; label .Lt_04F8
	br label %.Lt_04F8
.Lt_04F8:

	; conv SYS_OFFSET => vr2879
	%vr2880 = load i32, i32* @SYS_OFFSET
	%vr2879 = sext i32 %vr2880 to i64

	; bop vr2879 SHL 3
	%vr2881 = shl i64 %vr2879, 3

	; bop THIS + vr2881
	%vr2883 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2884 = inttoptr i64 %vr2881 to %MEMORY_T*
	%vr2882 = add %MEMORY_T* %vr2883, %vr2884

	; conv vr2882+568 => vr2885
	%vr2887 = ptrtoint %MEMORY_T* %vr2882 to i64
	%vr2888 = add i64 %vr2887, 568
	%vr2889 = inttoptr i64 %vr2888 to double*
	%vr2890 = load double, double* %vr2889
	%vr2886 = call double @llvm.nearbyint.f64(double %vr2890)
	%vr2885 = fptosi double %vr2886 to i64

	; bop vr2885 SHL 32
	%vr2891 = shl i64 %vr2885, 32

	; conv SYS_OFFSET => vr2892
	%vr2893 = load i32, i32* @SYS_OFFSET
	%vr2892 = sext i32 %vr2893 to i64

	; bop vr2892 SHL 3
	%vr2894 = shl i64 %vr2892, 3

	; bop THIS + vr2894
	%vr2896 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2897 = inttoptr i64 %vr2894 to %MEMORY_T*
	%vr2895 = add %MEMORY_T* %vr2896, %vr2897

	; conv vr2895+576 => vr2898
	%vr2900 = ptrtoint %MEMORY_T* %vr2895 to i64
	%vr2901 = add i64 %vr2900, 576
	%vr2902 = inttoptr i64 %vr2901 to double*
	%vr2903 = load double, double* %vr2902
	%vr2899 = call double @llvm.nearbyint.f64(double %vr2903)
	%vr2898 = fptosi double %vr2899 to i64

	; bop vr2898 SHL 24
	%vr2904 = shl i64 %vr2898, 24

	; bop vr2891 + vr2904
	%vr2905 = add i64 %vr2891, %vr2904

	; conv SYS_OFFSET => vr2906
	%vr2907 = load i32, i32* @SYS_OFFSET
	%vr2906 = sext i32 %vr2907 to i64

	; bop vr2906 SHL 3
	%vr2908 = shl i64 %vr2906, 3

	; bop THIS + vr2908
	%vr2910 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2911 = inttoptr i64 %vr2908 to %MEMORY_T*
	%vr2909 = add %MEMORY_T* %vr2910, %vr2911

	; conv vr2909+584 => vr2912
	%vr2914 = ptrtoint %MEMORY_T* %vr2909 to i64
	%vr2915 = add i64 %vr2914, 584
	%vr2916 = inttoptr i64 %vr2915 to double*
	%vr2917 = load double, double* %vr2916
	%vr2913 = call double @llvm.nearbyint.f64(double %vr2917)
	%vr2912 = fptosi double %vr2913 to i64

	; bop vr2912 SHL 16
	%vr2918 = shl i64 %vr2912, 16

	; bop vr2905 + vr2918
	%vr2919 = add i64 %vr2905, %vr2918

	; conv SYS_OFFSET => vr2920
	%vr2921 = load i32, i32* @SYS_OFFSET
	%vr2920 = sext i32 %vr2921 to i64

	; bop vr2920 SHL 3
	%vr2922 = shl i64 %vr2920, 3

	; bop THIS + vr2922
	%vr2924 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2925 = inttoptr i64 %vr2922 to %MEMORY_T*
	%vr2923 = add %MEMORY_T* %vr2924, %vr2925

	; conv vr2923+592 => vr2926
	%vr2928 = ptrtoint %MEMORY_T* %vr2923 to i64
	%vr2929 = add i64 %vr2928, 592
	%vr2930 = inttoptr i64 %vr2929 to double*
	%vr2931 = load double, double* %vr2930
	%vr2927 = call double @llvm.nearbyint.f64(double %vr2931)
	%vr2926 = fptosi double %vr2927 to i64

	; bop vr2926 SHL 8
	%vr2932 = shl i64 %vr2926, 8

	; bop vr2919 + vr2932
	%vr2933 = add i64 %vr2919, %vr2932

	; conv vr2933 => vr2934
	%vr2934 = sitofp i64 %vr2933 to double

	; conv SYS_OFFSET => vr2935
	%vr2936 = load i32, i32* @SYS_OFFSET
	%vr2935 = sext i32 %vr2936 to i64

	; bop vr2935 SHL 3
	%vr2937 = shl i64 %vr2935, 3

	; bop THIS + vr2937
	%vr2939 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2940 = inttoptr i64 %vr2937 to %MEMORY_T*
	%vr2938 = add %MEMORY_T* %vr2939, %vr2940

	; bop vr2934 + vr2938+600
	%vr2942 = ptrtoint %MEMORY_T* %vr2938 to i64
	%vr2943 = add i64 %vr2942, 600
	%vr2944 = inttoptr i64 %vr2943 to double*
	%vr2945 = load double, double* %vr2944
	%vr2941 = fadd double %vr2934, %vr2945

	; conv SYS_OFFSET => vr2946
	%vr2947 = load i32, i32* @SYS_OFFSET
	%vr2946 = sext i32 %vr2947 to i64

	; bop vr2946 SHL 3
	%vr2948 = shl i64 %vr2946, 3

	; bop THIS + vr2948
	%vr2950 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2951 = inttoptr i64 %vr2948 to %MEMORY_T*
	%vr2949 = add %MEMORY_T* %vr2950, %vr2951

	; store vr2949+1704 := vr2941
	%vr2952 = ptrtoint %MEMORY_T* %vr2949 to i64
	%vr2953 = add i64 %vr2952, 1704
	%vr2954 = inttoptr i64 %vr2953 to double*
	store double %vr2941, double* %vr2954

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EEC:

	; label .Lt_04F7
	br label %.Lt_04F7
.Lt_04F7:

	; conv SYS_OFFSET => vr2956
	%vr2957 = load i32, i32* @SYS_OFFSET
	%vr2956 = sext i32 %vr2957 to i64

	; bop vr2956 + 76
	%vr2958 = add i64 %vr2956, 76
	%vr2959 = bitcast i64 %vr2958 to i64

	; branchbop ADR <> vr2959
	%vr2961 = load i64, i64* %ADR.102
	%vr2960 = icmp ne i64 %vr2961, %vr2959
	br i1 %vr2960, label %.Lt_04F9, label %.Lt_0EED
.Lt_0EED:

	; label .Lt_04FA
	br label %.Lt_04FA
.Lt_04FA:

	; conv SYS_OFFSET => vr2963
	%vr2964 = load i32, i32* @SYS_OFFSET
	%vr2963 = sext i32 %vr2964 to i64

	; bop vr2963 SHL 3
	%vr2965 = shl i64 %vr2963, 3

	; bop THIS + vr2965
	%vr2967 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2968 = inttoptr i64 %vr2965 to %MEMORY_T*
	%vr2966 = add %MEMORY_T* %vr2967, %vr2968

	; conv vr2966+616 => vr2969
	%vr2971 = ptrtoint %MEMORY_T* %vr2966 to i64
	%vr2972 = add i64 %vr2971, 616
	%vr2973 = inttoptr i64 %vr2972 to double*
	%vr2974 = load double, double* %vr2973
	%vr2970 = call double @llvm.nearbyint.f64(double %vr2974)
	%vr2969 = fptosi double %vr2970 to i64

	; bop vr2969 SHL 32
	%vr2975 = shl i64 %vr2969, 32

	; conv SYS_OFFSET => vr2976
	%vr2977 = load i32, i32* @SYS_OFFSET
	%vr2976 = sext i32 %vr2977 to i64

	; bop vr2976 SHL 3
	%vr2978 = shl i64 %vr2976, 3

	; bop THIS + vr2978
	%vr2980 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2981 = inttoptr i64 %vr2978 to %MEMORY_T*
	%vr2979 = add %MEMORY_T* %vr2980, %vr2981

	; conv vr2979+624 => vr2982
	%vr2984 = ptrtoint %MEMORY_T* %vr2979 to i64
	%vr2985 = add i64 %vr2984, 624
	%vr2986 = inttoptr i64 %vr2985 to double*
	%vr2987 = load double, double* %vr2986
	%vr2983 = call double @llvm.nearbyint.f64(double %vr2987)
	%vr2982 = fptosi double %vr2983 to i64

	; bop vr2982 SHL 24
	%vr2988 = shl i64 %vr2982, 24

	; bop vr2975 + vr2988
	%vr2989 = add i64 %vr2975, %vr2988

	; conv SYS_OFFSET => vr2990
	%vr2991 = load i32, i32* @SYS_OFFSET
	%vr2990 = sext i32 %vr2991 to i64

	; bop vr2990 SHL 3
	%vr2992 = shl i64 %vr2990, 3

	; bop THIS + vr2992
	%vr2994 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr2995 = inttoptr i64 %vr2992 to %MEMORY_T*
	%vr2993 = add %MEMORY_T* %vr2994, %vr2995

	; conv vr2993+632 => vr2996
	%vr2998 = ptrtoint %MEMORY_T* %vr2993 to i64
	%vr2999 = add i64 %vr2998, 632
	%vr3000 = inttoptr i64 %vr2999 to double*
	%vr3001 = load double, double* %vr3000
	%vr2997 = call double @llvm.nearbyint.f64(double %vr3001)
	%vr2996 = fptosi double %vr2997 to i64

	; bop vr2996 SHL 16
	%vr3002 = shl i64 %vr2996, 16

	; bop vr2989 + vr3002
	%vr3003 = add i64 %vr2989, %vr3002

	; conv SYS_OFFSET => vr3004
	%vr3005 = load i32, i32* @SYS_OFFSET
	%vr3004 = sext i32 %vr3005 to i64

	; bop vr3004 SHL 3
	%vr3006 = shl i64 %vr3004, 3

	; bop THIS + vr3006
	%vr3008 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3009 = inttoptr i64 %vr3006 to %MEMORY_T*
	%vr3007 = add %MEMORY_T* %vr3008, %vr3009

	; conv vr3007+640 => vr3010
	%vr3012 = ptrtoint %MEMORY_T* %vr3007 to i64
	%vr3013 = add i64 %vr3012, 640
	%vr3014 = inttoptr i64 %vr3013 to double*
	%vr3015 = load double, double* %vr3014
	%vr3011 = call double @llvm.nearbyint.f64(double %vr3015)
	%vr3010 = fptosi double %vr3011 to i64

	; bop vr3010 SHL 8
	%vr3016 = shl i64 %vr3010, 8

	; bop vr3003 + vr3016
	%vr3017 = add i64 %vr3003, %vr3016

	; conv vr3017 => vr3018
	%vr3018 = sitofp i64 %vr3017 to double

	; conv SYS_OFFSET => vr3019
	%vr3020 = load i32, i32* @SYS_OFFSET
	%vr3019 = sext i32 %vr3020 to i64

	; bop vr3019 SHL 3
	%vr3021 = shl i64 %vr3019, 3

	; bop THIS + vr3021
	%vr3023 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3024 = inttoptr i64 %vr3021 to %MEMORY_T*
	%vr3022 = add %MEMORY_T* %vr3023, %vr3024

	; bop vr3018 + vr3022+648
	%vr3026 = ptrtoint %MEMORY_T* %vr3022 to i64
	%vr3027 = add i64 %vr3026, 648
	%vr3028 = inttoptr i64 %vr3027 to double*
	%vr3029 = load double, double* %vr3028
	%vr3025 = fadd double %vr3018, %vr3029

	; conv SYS_OFFSET => vr3030
	%vr3031 = load i32, i32* @SYS_OFFSET
	%vr3030 = sext i32 %vr3031 to i64

	; bop vr3030 SHL 3
	%vr3032 = shl i64 %vr3030, 3

	; bop THIS + vr3032
	%vr3034 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3035 = inttoptr i64 %vr3032 to %MEMORY_T*
	%vr3033 = add %MEMORY_T* %vr3034, %vr3035

	; store vr3033+1712 := vr3025
	%vr3036 = ptrtoint %MEMORY_T* %vr3033 to i64
	%vr3037 = add i64 %vr3036, 1712
	%vr3038 = inttoptr i64 %vr3037 to double*
	store double %vr3025, double* %vr3038

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EEE:

	; label .Lt_04F9
	br label %.Lt_04F9
.Lt_04F9:

	; conv SYS_OFFSET => vr3040
	%vr3041 = load i32, i32* @SYS_OFFSET
	%vr3040 = sext i32 %vr3041 to i64

	; bop vr3040 + 82
	%vr3042 = add i64 %vr3040, 82
	%vr3043 = bitcast i64 %vr3042 to i64

	; branchbop ADR <> vr3043
	%vr3045 = load i64, i64* %ADR.102
	%vr3044 = icmp ne i64 %vr3045, %vr3043
	br i1 %vr3044, label %.Lt_04FB, label %.Lt_0EEF
.Lt_0EEF:

	; label .Lt_04FC
	br label %.Lt_04FC
.Lt_04FC:

	; conv SYS_OFFSET => vr3047
	%vr3048 = load i32, i32* @SYS_OFFSET
	%vr3047 = sext i32 %vr3048 to i64

	; bop vr3047 SHL 3
	%vr3049 = shl i64 %vr3047, 3

	; bop THIS + vr3049
	%vr3051 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3052 = inttoptr i64 %vr3049 to %MEMORY_T*
	%vr3050 = add %MEMORY_T* %vr3051, %vr3052

	; conv vr3050+664 => vr3053
	%vr3055 = ptrtoint %MEMORY_T* %vr3050 to i64
	%vr3056 = add i64 %vr3055, 664
	%vr3057 = inttoptr i64 %vr3056 to double*
	%vr3058 = load double, double* %vr3057
	%vr3054 = call double @llvm.nearbyint.f64(double %vr3058)
	%vr3053 = fptosi double %vr3054 to i64

	; bop vr3053 SHL 32
	%vr3059 = shl i64 %vr3053, 32

	; conv SYS_OFFSET => vr3060
	%vr3061 = load i32, i32* @SYS_OFFSET
	%vr3060 = sext i32 %vr3061 to i64

	; bop vr3060 SHL 3
	%vr3062 = shl i64 %vr3060, 3

	; bop THIS + vr3062
	%vr3064 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3065 = inttoptr i64 %vr3062 to %MEMORY_T*
	%vr3063 = add %MEMORY_T* %vr3064, %vr3065

	; conv vr3063+672 => vr3066
	%vr3068 = ptrtoint %MEMORY_T* %vr3063 to i64
	%vr3069 = add i64 %vr3068, 672
	%vr3070 = inttoptr i64 %vr3069 to double*
	%vr3071 = load double, double* %vr3070
	%vr3067 = call double @llvm.nearbyint.f64(double %vr3071)
	%vr3066 = fptosi double %vr3067 to i64

	; bop vr3066 SHL 24
	%vr3072 = shl i64 %vr3066, 24

	; bop vr3059 + vr3072
	%vr3073 = add i64 %vr3059, %vr3072

	; conv SYS_OFFSET => vr3074
	%vr3075 = load i32, i32* @SYS_OFFSET
	%vr3074 = sext i32 %vr3075 to i64

	; bop vr3074 SHL 3
	%vr3076 = shl i64 %vr3074, 3

	; bop THIS + vr3076
	%vr3078 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3079 = inttoptr i64 %vr3076 to %MEMORY_T*
	%vr3077 = add %MEMORY_T* %vr3078, %vr3079

	; conv vr3077+680 => vr3080
	%vr3082 = ptrtoint %MEMORY_T* %vr3077 to i64
	%vr3083 = add i64 %vr3082, 680
	%vr3084 = inttoptr i64 %vr3083 to double*
	%vr3085 = load double, double* %vr3084
	%vr3081 = call double @llvm.nearbyint.f64(double %vr3085)
	%vr3080 = fptosi double %vr3081 to i64

	; bop vr3080 SHL 16
	%vr3086 = shl i64 %vr3080, 16

	; bop vr3073 + vr3086
	%vr3087 = add i64 %vr3073, %vr3086

	; conv SYS_OFFSET => vr3088
	%vr3089 = load i32, i32* @SYS_OFFSET
	%vr3088 = sext i32 %vr3089 to i64

	; bop vr3088 SHL 3
	%vr3090 = shl i64 %vr3088, 3

	; bop THIS + vr3090
	%vr3092 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3093 = inttoptr i64 %vr3090 to %MEMORY_T*
	%vr3091 = add %MEMORY_T* %vr3092, %vr3093

	; conv vr3091+688 => vr3094
	%vr3096 = ptrtoint %MEMORY_T* %vr3091 to i64
	%vr3097 = add i64 %vr3096, 688
	%vr3098 = inttoptr i64 %vr3097 to double*
	%vr3099 = load double, double* %vr3098
	%vr3095 = call double @llvm.nearbyint.f64(double %vr3099)
	%vr3094 = fptosi double %vr3095 to i64

	; bop vr3094 SHL 8
	%vr3100 = shl i64 %vr3094, 8

	; bop vr3087 + vr3100
	%vr3101 = add i64 %vr3087, %vr3100

	; conv vr3101 => vr3102
	%vr3102 = sitofp i64 %vr3101 to double

	; conv SYS_OFFSET => vr3103
	%vr3104 = load i32, i32* @SYS_OFFSET
	%vr3103 = sext i32 %vr3104 to i64

	; bop vr3103 SHL 3
	%vr3105 = shl i64 %vr3103, 3

	; bop THIS + vr3105
	%vr3107 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3108 = inttoptr i64 %vr3105 to %MEMORY_T*
	%vr3106 = add %MEMORY_T* %vr3107, %vr3108

	; bop vr3102 + vr3106+696
	%vr3110 = ptrtoint %MEMORY_T* %vr3106 to i64
	%vr3111 = add i64 %vr3110, 696
	%vr3112 = inttoptr i64 %vr3111 to double*
	%vr3113 = load double, double* %vr3112
	%vr3109 = fadd double %vr3102, %vr3113

	; conv SYS_OFFSET => vr3114
	%vr3115 = load i32, i32* @SYS_OFFSET
	%vr3114 = sext i32 %vr3115 to i64

	; bop vr3114 SHL 3
	%vr3116 = shl i64 %vr3114, 3

	; bop THIS + vr3116
	%vr3118 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3119 = inttoptr i64 %vr3116 to %MEMORY_T*
	%vr3117 = add %MEMORY_T* %vr3118, %vr3119

	; store vr3117+1720 := vr3109
	%vr3120 = ptrtoint %MEMORY_T* %vr3117 to i64
	%vr3121 = add i64 %vr3120, 1720
	%vr3122 = inttoptr i64 %vr3121 to double*
	store double %vr3109, double* %vr3122

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EF0:

	; label .Lt_04FB
	br label %.Lt_04FB
.Lt_04FB:

	; conv SYS_OFFSET => vr3124
	%vr3125 = load i32, i32* @SYS_OFFSET
	%vr3124 = sext i32 %vr3125 to i64

	; bop vr3124 + 88
	%vr3126 = add i64 %vr3124, 88
	%vr3127 = bitcast i64 %vr3126 to i64

	; branchbop ADR <> vr3127
	%vr3129 = load i64, i64* %ADR.102
	%vr3128 = icmp ne i64 %vr3129, %vr3127
	br i1 %vr3128, label %.Lt_04FD, label %.Lt_0EF1
.Lt_0EF1:

	; label .Lt_04FE
	br label %.Lt_04FE
.Lt_04FE:

	; conv SYS_OFFSET => vr3131
	%vr3132 = load i32, i32* @SYS_OFFSET
	%vr3131 = sext i32 %vr3132 to i64

	; bop vr3131 SHL 3
	%vr3133 = shl i64 %vr3131, 3

	; bop THIS + vr3133
	%vr3135 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3136 = inttoptr i64 %vr3133 to %MEMORY_T*
	%vr3134 = add %MEMORY_T* %vr3135, %vr3136

	; conv vr3134+712 => vr3137
	%vr3139 = ptrtoint %MEMORY_T* %vr3134 to i64
	%vr3140 = add i64 %vr3139, 712
	%vr3141 = inttoptr i64 %vr3140 to double*
	%vr3142 = load double, double* %vr3141
	%vr3138 = call double @llvm.nearbyint.f64(double %vr3142)
	%vr3137 = fptosi double %vr3138 to i64

	; bop vr3137 SHL 32
	%vr3143 = shl i64 %vr3137, 32

	; conv SYS_OFFSET => vr3144
	%vr3145 = load i32, i32* @SYS_OFFSET
	%vr3144 = sext i32 %vr3145 to i64

	; bop vr3144 SHL 3
	%vr3146 = shl i64 %vr3144, 3

	; bop THIS + vr3146
	%vr3148 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3149 = inttoptr i64 %vr3146 to %MEMORY_T*
	%vr3147 = add %MEMORY_T* %vr3148, %vr3149

	; conv vr3147+720 => vr3150
	%vr3152 = ptrtoint %MEMORY_T* %vr3147 to i64
	%vr3153 = add i64 %vr3152, 720
	%vr3154 = inttoptr i64 %vr3153 to double*
	%vr3155 = load double, double* %vr3154
	%vr3151 = call double @llvm.nearbyint.f64(double %vr3155)
	%vr3150 = fptosi double %vr3151 to i64

	; bop vr3150 SHL 24
	%vr3156 = shl i64 %vr3150, 24

	; bop vr3143 + vr3156
	%vr3157 = add i64 %vr3143, %vr3156

	; conv SYS_OFFSET => vr3158
	%vr3159 = load i32, i32* @SYS_OFFSET
	%vr3158 = sext i32 %vr3159 to i64

	; bop vr3158 SHL 3
	%vr3160 = shl i64 %vr3158, 3

	; bop THIS + vr3160
	%vr3162 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3163 = inttoptr i64 %vr3160 to %MEMORY_T*
	%vr3161 = add %MEMORY_T* %vr3162, %vr3163

	; conv vr3161+728 => vr3164
	%vr3166 = ptrtoint %MEMORY_T* %vr3161 to i64
	%vr3167 = add i64 %vr3166, 728
	%vr3168 = inttoptr i64 %vr3167 to double*
	%vr3169 = load double, double* %vr3168
	%vr3165 = call double @llvm.nearbyint.f64(double %vr3169)
	%vr3164 = fptosi double %vr3165 to i64

	; bop vr3164 SHL 16
	%vr3170 = shl i64 %vr3164, 16

	; bop vr3157 + vr3170
	%vr3171 = add i64 %vr3157, %vr3170

	; conv SYS_OFFSET => vr3172
	%vr3173 = load i32, i32* @SYS_OFFSET
	%vr3172 = sext i32 %vr3173 to i64

	; bop vr3172 SHL 3
	%vr3174 = shl i64 %vr3172, 3

	; bop THIS + vr3174
	%vr3176 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3177 = inttoptr i64 %vr3174 to %MEMORY_T*
	%vr3175 = add %MEMORY_T* %vr3176, %vr3177

	; conv vr3175+736 => vr3178
	%vr3180 = ptrtoint %MEMORY_T* %vr3175 to i64
	%vr3181 = add i64 %vr3180, 736
	%vr3182 = inttoptr i64 %vr3181 to double*
	%vr3183 = load double, double* %vr3182
	%vr3179 = call double @llvm.nearbyint.f64(double %vr3183)
	%vr3178 = fptosi double %vr3179 to i64

	; bop vr3178 SHL 8
	%vr3184 = shl i64 %vr3178, 8

	; bop vr3171 + vr3184
	%vr3185 = add i64 %vr3171, %vr3184

	; conv vr3185 => vr3186
	%vr3186 = sitofp i64 %vr3185 to double

	; conv SYS_OFFSET => vr3187
	%vr3188 = load i32, i32* @SYS_OFFSET
	%vr3187 = sext i32 %vr3188 to i64

	; bop vr3187 SHL 3
	%vr3189 = shl i64 %vr3187, 3

	; bop THIS + vr3189
	%vr3191 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3192 = inttoptr i64 %vr3189 to %MEMORY_T*
	%vr3190 = add %MEMORY_T* %vr3191, %vr3192

	; bop vr3186 + vr3190+744
	%vr3194 = ptrtoint %MEMORY_T* %vr3190 to i64
	%vr3195 = add i64 %vr3194, 744
	%vr3196 = inttoptr i64 %vr3195 to double*
	%vr3197 = load double, double* %vr3196
	%vr3193 = fadd double %vr3186, %vr3197

	; conv SYS_OFFSET => vr3198
	%vr3199 = load i32, i32* @SYS_OFFSET
	%vr3198 = sext i32 %vr3199 to i64

	; bop vr3198 SHL 3
	%vr3200 = shl i64 %vr3198, 3

	; bop THIS + vr3200
	%vr3202 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3203 = inttoptr i64 %vr3200 to %MEMORY_T*
	%vr3201 = add %MEMORY_T* %vr3202, %vr3203

	; store vr3201+1728 := vr3193
	%vr3204 = ptrtoint %MEMORY_T* %vr3201 to i64
	%vr3205 = add i64 %vr3204, 1728
	%vr3206 = inttoptr i64 %vr3205 to double*
	store double %vr3193, double* %vr3206

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EF2:

	; label .Lt_04FD
	br label %.Lt_04FD
.Lt_04FD:

	; conv SYS_OFFSET => vr3208
	%vr3209 = load i32, i32* @SYS_OFFSET
	%vr3208 = sext i32 %vr3209 to i64

	; bop vr3208 + 94
	%vr3210 = add i64 %vr3208, 94
	%vr3211 = bitcast i64 %vr3210 to i64

	; branchbop ADR <> vr3211
	%vr3213 = load i64, i64* %ADR.102
	%vr3212 = icmp ne i64 %vr3213, %vr3211
	br i1 %vr3212, label %.Lt_04FF, label %.Lt_0EF3
.Lt_0EF3:

	; label .Lt_0500
	br label %.Lt_0500
.Lt_0500:

	; conv SYS_OFFSET => vr3215
	%vr3216 = load i32, i32* @SYS_OFFSET
	%vr3215 = sext i32 %vr3216 to i64

	; bop vr3215 SHL 3
	%vr3217 = shl i64 %vr3215, 3

	; bop THIS + vr3217
	%vr3219 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3220 = inttoptr i64 %vr3217 to %MEMORY_T*
	%vr3218 = add %MEMORY_T* %vr3219, %vr3220

	; conv vr3218+760 => vr3221
	%vr3223 = ptrtoint %MEMORY_T* %vr3218 to i64
	%vr3224 = add i64 %vr3223, 760
	%vr3225 = inttoptr i64 %vr3224 to double*
	%vr3226 = load double, double* %vr3225
	%vr3222 = call double @llvm.nearbyint.f64(double %vr3226)
	%vr3221 = fptosi double %vr3222 to i64

	; bop vr3221 SHL 32
	%vr3227 = shl i64 %vr3221, 32

	; conv SYS_OFFSET => vr3228
	%vr3229 = load i32, i32* @SYS_OFFSET
	%vr3228 = sext i32 %vr3229 to i64

	; bop vr3228 SHL 3
	%vr3230 = shl i64 %vr3228, 3

	; bop THIS + vr3230
	%vr3232 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3233 = inttoptr i64 %vr3230 to %MEMORY_T*
	%vr3231 = add %MEMORY_T* %vr3232, %vr3233

	; conv vr3231+768 => vr3234
	%vr3236 = ptrtoint %MEMORY_T* %vr3231 to i64
	%vr3237 = add i64 %vr3236, 768
	%vr3238 = inttoptr i64 %vr3237 to double*
	%vr3239 = load double, double* %vr3238
	%vr3235 = call double @llvm.nearbyint.f64(double %vr3239)
	%vr3234 = fptosi double %vr3235 to i64

	; bop vr3234 SHL 24
	%vr3240 = shl i64 %vr3234, 24

	; bop vr3227 + vr3240
	%vr3241 = add i64 %vr3227, %vr3240

	; conv SYS_OFFSET => vr3242
	%vr3243 = load i32, i32* @SYS_OFFSET
	%vr3242 = sext i32 %vr3243 to i64

	; bop vr3242 SHL 3
	%vr3244 = shl i64 %vr3242, 3

	; bop THIS + vr3244
	%vr3246 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3247 = inttoptr i64 %vr3244 to %MEMORY_T*
	%vr3245 = add %MEMORY_T* %vr3246, %vr3247

	; conv vr3245+776 => vr3248
	%vr3250 = ptrtoint %MEMORY_T* %vr3245 to i64
	%vr3251 = add i64 %vr3250, 776
	%vr3252 = inttoptr i64 %vr3251 to double*
	%vr3253 = load double, double* %vr3252
	%vr3249 = call double @llvm.nearbyint.f64(double %vr3253)
	%vr3248 = fptosi double %vr3249 to i64

	; bop vr3248 SHL 16
	%vr3254 = shl i64 %vr3248, 16

	; bop vr3241 + vr3254
	%vr3255 = add i64 %vr3241, %vr3254

	; conv SYS_OFFSET => vr3256
	%vr3257 = load i32, i32* @SYS_OFFSET
	%vr3256 = sext i32 %vr3257 to i64

	; bop vr3256 SHL 3
	%vr3258 = shl i64 %vr3256, 3

	; bop THIS + vr3258
	%vr3260 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3261 = inttoptr i64 %vr3258 to %MEMORY_T*
	%vr3259 = add %MEMORY_T* %vr3260, %vr3261

	; conv vr3259+784 => vr3262
	%vr3264 = ptrtoint %MEMORY_T* %vr3259 to i64
	%vr3265 = add i64 %vr3264, 784
	%vr3266 = inttoptr i64 %vr3265 to double*
	%vr3267 = load double, double* %vr3266
	%vr3263 = call double @llvm.nearbyint.f64(double %vr3267)
	%vr3262 = fptosi double %vr3263 to i64

	; bop vr3262 SHL 8
	%vr3268 = shl i64 %vr3262, 8

	; bop vr3255 + vr3268
	%vr3269 = add i64 %vr3255, %vr3268

	; conv vr3269 => vr3270
	%vr3270 = sitofp i64 %vr3269 to double

	; conv SYS_OFFSET => vr3271
	%vr3272 = load i32, i32* @SYS_OFFSET
	%vr3271 = sext i32 %vr3272 to i64

	; bop vr3271 SHL 3
	%vr3273 = shl i64 %vr3271, 3

	; bop THIS + vr3273
	%vr3275 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3276 = inttoptr i64 %vr3273 to %MEMORY_T*
	%vr3274 = add %MEMORY_T* %vr3275, %vr3276

	; bop vr3270 + vr3274+792
	%vr3278 = ptrtoint %MEMORY_T* %vr3274 to i64
	%vr3279 = add i64 %vr3278, 792
	%vr3280 = inttoptr i64 %vr3279 to double*
	%vr3281 = load double, double* %vr3280
	%vr3277 = fadd double %vr3270, %vr3281

	; conv SYS_OFFSET => vr3282
	%vr3283 = load i32, i32* @SYS_OFFSET
	%vr3282 = sext i32 %vr3283 to i64

	; bop vr3282 SHL 3
	%vr3284 = shl i64 %vr3282, 3

	; bop THIS + vr3284
	%vr3286 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3287 = inttoptr i64 %vr3284 to %MEMORY_T*
	%vr3285 = add %MEMORY_T* %vr3286, %vr3287

	; store vr3285+1736 := vr3277
	%vr3288 = ptrtoint %MEMORY_T* %vr3285 to i64
	%vr3289 = add i64 %vr3288, 1736
	%vr3290 = inttoptr i64 %vr3289 to double*
	store double %vr3277, double* %vr3290

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EF4:

	; label .Lt_04FF
	br label %.Lt_04FF
.Lt_04FF:

	; conv SYS_OFFSET => vr3292
	%vr3293 = load i32, i32* @SYS_OFFSET
	%vr3292 = sext i32 %vr3293 to i64

	; bop vr3292 + 100
	%vr3294 = add i64 %vr3292, 100
	%vr3295 = bitcast i64 %vr3294 to i64

	; branchbop ADR <> vr3295
	%vr3297 = load i64, i64* %ADR.102
	%vr3296 = icmp ne i64 %vr3297, %vr3295
	br i1 %vr3296, label %.Lt_0501, label %.Lt_0EF5
.Lt_0EF5:

	; label .Lt_0502
	br label %.Lt_0502
.Lt_0502:

	; conv SYS_OFFSET => vr3299
	%vr3300 = load i32, i32* @SYS_OFFSET
	%vr3299 = sext i32 %vr3300 to i64

	; bop vr3299 SHL 3
	%vr3301 = shl i64 %vr3299, 3

	; bop THIS + vr3301
	%vr3303 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3304 = inttoptr i64 %vr3301 to %MEMORY_T*
	%vr3302 = add %MEMORY_T* %vr3303, %vr3304

	; conv vr3302+808 => vr3305
	%vr3307 = ptrtoint %MEMORY_T* %vr3302 to i64
	%vr3308 = add i64 %vr3307, 808
	%vr3309 = inttoptr i64 %vr3308 to double*
	%vr3310 = load double, double* %vr3309
	%vr3306 = call double @llvm.nearbyint.f64(double %vr3310)
	%vr3305 = fptosi double %vr3306 to i64

	; bop vr3305 SHL 32
	%vr3311 = shl i64 %vr3305, 32

	; conv SYS_OFFSET => vr3312
	%vr3313 = load i32, i32* @SYS_OFFSET
	%vr3312 = sext i32 %vr3313 to i64

	; bop vr3312 SHL 3
	%vr3314 = shl i64 %vr3312, 3

	; bop THIS + vr3314
	%vr3316 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3317 = inttoptr i64 %vr3314 to %MEMORY_T*
	%vr3315 = add %MEMORY_T* %vr3316, %vr3317

	; conv vr3315+816 => vr3318
	%vr3320 = ptrtoint %MEMORY_T* %vr3315 to i64
	%vr3321 = add i64 %vr3320, 816
	%vr3322 = inttoptr i64 %vr3321 to double*
	%vr3323 = load double, double* %vr3322
	%vr3319 = call double @llvm.nearbyint.f64(double %vr3323)
	%vr3318 = fptosi double %vr3319 to i64

	; bop vr3318 SHL 24
	%vr3324 = shl i64 %vr3318, 24

	; bop vr3311 + vr3324
	%vr3325 = add i64 %vr3311, %vr3324

	; conv SYS_OFFSET => vr3326
	%vr3327 = load i32, i32* @SYS_OFFSET
	%vr3326 = sext i32 %vr3327 to i64

	; bop vr3326 SHL 3
	%vr3328 = shl i64 %vr3326, 3

	; bop THIS + vr3328
	%vr3330 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3331 = inttoptr i64 %vr3328 to %MEMORY_T*
	%vr3329 = add %MEMORY_T* %vr3330, %vr3331

	; conv vr3329+824 => vr3332
	%vr3334 = ptrtoint %MEMORY_T* %vr3329 to i64
	%vr3335 = add i64 %vr3334, 824
	%vr3336 = inttoptr i64 %vr3335 to double*
	%vr3337 = load double, double* %vr3336
	%vr3333 = call double @llvm.nearbyint.f64(double %vr3337)
	%vr3332 = fptosi double %vr3333 to i64

	; bop vr3332 SHL 16
	%vr3338 = shl i64 %vr3332, 16

	; bop vr3325 + vr3338
	%vr3339 = add i64 %vr3325, %vr3338

	; conv SYS_OFFSET => vr3340
	%vr3341 = load i32, i32* @SYS_OFFSET
	%vr3340 = sext i32 %vr3341 to i64

	; bop vr3340 SHL 3
	%vr3342 = shl i64 %vr3340, 3

	; bop THIS + vr3342
	%vr3344 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3345 = inttoptr i64 %vr3342 to %MEMORY_T*
	%vr3343 = add %MEMORY_T* %vr3344, %vr3345

	; conv vr3343+832 => vr3346
	%vr3348 = ptrtoint %MEMORY_T* %vr3343 to i64
	%vr3349 = add i64 %vr3348, 832
	%vr3350 = inttoptr i64 %vr3349 to double*
	%vr3351 = load double, double* %vr3350
	%vr3347 = call double @llvm.nearbyint.f64(double %vr3351)
	%vr3346 = fptosi double %vr3347 to i64

	; bop vr3346 SHL 8
	%vr3352 = shl i64 %vr3346, 8

	; bop vr3339 + vr3352
	%vr3353 = add i64 %vr3339, %vr3352

	; conv vr3353 => vr3354
	%vr3354 = sitofp i64 %vr3353 to double

	; conv SYS_OFFSET => vr3355
	%vr3356 = load i32, i32* @SYS_OFFSET
	%vr3355 = sext i32 %vr3356 to i64

	; bop vr3355 SHL 3
	%vr3357 = shl i64 %vr3355, 3

	; bop THIS + vr3357
	%vr3359 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3360 = inttoptr i64 %vr3357 to %MEMORY_T*
	%vr3358 = add %MEMORY_T* %vr3359, %vr3360

	; bop vr3354 + vr3358+840
	%vr3362 = ptrtoint %MEMORY_T* %vr3358 to i64
	%vr3363 = add i64 %vr3362, 840
	%vr3364 = inttoptr i64 %vr3363 to double*
	%vr3365 = load double, double* %vr3364
	%vr3361 = fadd double %vr3354, %vr3365

	; conv SYS_OFFSET => vr3366
	%vr3367 = load i32, i32* @SYS_OFFSET
	%vr3366 = sext i32 %vr3367 to i64

	; bop vr3366 SHL 3
	%vr3368 = shl i64 %vr3366, 3

	; bop THIS + vr3368
	%vr3370 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3371 = inttoptr i64 %vr3368 to %MEMORY_T*
	%vr3369 = add %MEMORY_T* %vr3370, %vr3371

	; store vr3369+1744 := vr3361
	%vr3372 = ptrtoint %MEMORY_T* %vr3369 to i64
	%vr3373 = add i64 %vr3372, 1744
	%vr3374 = inttoptr i64 %vr3373 to double*
	store double %vr3361, double* %vr3374

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EF6:

	; label .Lt_0501
	br label %.Lt_0501
.Lt_0501:

	; conv SYS_OFFSET => vr3376
	%vr3377 = load i32, i32* @SYS_OFFSET
	%vr3376 = sext i32 %vr3377 to i64

	; bop vr3376 + 106
	%vr3378 = add i64 %vr3376, 106
	%vr3379 = bitcast i64 %vr3378 to i64

	; branchbop ADR <> vr3379
	%vr3381 = load i64, i64* %ADR.102
	%vr3380 = icmp ne i64 %vr3381, %vr3379
	br i1 %vr3380, label %.Lt_0503, label %.Lt_0EF7
.Lt_0EF7:

	; label .Lt_0504
	br label %.Lt_0504
.Lt_0504:

	; conv SYS_OFFSET => vr3383
	%vr3384 = load i32, i32* @SYS_OFFSET
	%vr3383 = sext i32 %vr3384 to i64

	; bop vr3383 SHL 3
	%vr3385 = shl i64 %vr3383, 3

	; bop THIS + vr3385
	%vr3387 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3388 = inttoptr i64 %vr3385 to %MEMORY_T*
	%vr3386 = add %MEMORY_T* %vr3387, %vr3388

	; conv vr3386+856 => vr3389
	%vr3391 = ptrtoint %MEMORY_T* %vr3386 to i64
	%vr3392 = add i64 %vr3391, 856
	%vr3393 = inttoptr i64 %vr3392 to double*
	%vr3394 = load double, double* %vr3393
	%vr3390 = call double @llvm.nearbyint.f64(double %vr3394)
	%vr3389 = fptosi double %vr3390 to i64

	; bop vr3389 SHL 32
	%vr3395 = shl i64 %vr3389, 32

	; conv SYS_OFFSET => vr3396
	%vr3397 = load i32, i32* @SYS_OFFSET
	%vr3396 = sext i32 %vr3397 to i64

	; bop vr3396 SHL 3
	%vr3398 = shl i64 %vr3396, 3

	; bop THIS + vr3398
	%vr3400 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3401 = inttoptr i64 %vr3398 to %MEMORY_T*
	%vr3399 = add %MEMORY_T* %vr3400, %vr3401

	; conv vr3399+864 => vr3402
	%vr3404 = ptrtoint %MEMORY_T* %vr3399 to i64
	%vr3405 = add i64 %vr3404, 864
	%vr3406 = inttoptr i64 %vr3405 to double*
	%vr3407 = load double, double* %vr3406
	%vr3403 = call double @llvm.nearbyint.f64(double %vr3407)
	%vr3402 = fptosi double %vr3403 to i64

	; bop vr3402 SHL 24
	%vr3408 = shl i64 %vr3402, 24

	; bop vr3395 + vr3408
	%vr3409 = add i64 %vr3395, %vr3408

	; conv SYS_OFFSET => vr3410
	%vr3411 = load i32, i32* @SYS_OFFSET
	%vr3410 = sext i32 %vr3411 to i64

	; bop vr3410 SHL 3
	%vr3412 = shl i64 %vr3410, 3

	; bop THIS + vr3412
	%vr3414 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3415 = inttoptr i64 %vr3412 to %MEMORY_T*
	%vr3413 = add %MEMORY_T* %vr3414, %vr3415

	; conv vr3413+872 => vr3416
	%vr3418 = ptrtoint %MEMORY_T* %vr3413 to i64
	%vr3419 = add i64 %vr3418, 872
	%vr3420 = inttoptr i64 %vr3419 to double*
	%vr3421 = load double, double* %vr3420
	%vr3417 = call double @llvm.nearbyint.f64(double %vr3421)
	%vr3416 = fptosi double %vr3417 to i64

	; bop vr3416 SHL 16
	%vr3422 = shl i64 %vr3416, 16

	; bop vr3409 + vr3422
	%vr3423 = add i64 %vr3409, %vr3422

	; conv SYS_OFFSET => vr3424
	%vr3425 = load i32, i32* @SYS_OFFSET
	%vr3424 = sext i32 %vr3425 to i64

	; bop vr3424 SHL 3
	%vr3426 = shl i64 %vr3424, 3

	; bop THIS + vr3426
	%vr3428 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3429 = inttoptr i64 %vr3426 to %MEMORY_T*
	%vr3427 = add %MEMORY_T* %vr3428, %vr3429

	; conv vr3427+880 => vr3430
	%vr3432 = ptrtoint %MEMORY_T* %vr3427 to i64
	%vr3433 = add i64 %vr3432, 880
	%vr3434 = inttoptr i64 %vr3433 to double*
	%vr3435 = load double, double* %vr3434
	%vr3431 = call double @llvm.nearbyint.f64(double %vr3435)
	%vr3430 = fptosi double %vr3431 to i64

	; bop vr3430 SHL 8
	%vr3436 = shl i64 %vr3430, 8

	; bop vr3423 + vr3436
	%vr3437 = add i64 %vr3423, %vr3436

	; conv vr3437 => vr3438
	%vr3438 = sitofp i64 %vr3437 to double

	; conv SYS_OFFSET => vr3439
	%vr3440 = load i32, i32* @SYS_OFFSET
	%vr3439 = sext i32 %vr3440 to i64

	; bop vr3439 SHL 3
	%vr3441 = shl i64 %vr3439, 3

	; bop THIS + vr3441
	%vr3443 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3444 = inttoptr i64 %vr3441 to %MEMORY_T*
	%vr3442 = add %MEMORY_T* %vr3443, %vr3444

	; bop vr3438 + vr3442+888
	%vr3446 = ptrtoint %MEMORY_T* %vr3442 to i64
	%vr3447 = add i64 %vr3446, 888
	%vr3448 = inttoptr i64 %vr3447 to double*
	%vr3449 = load double, double* %vr3448
	%vr3445 = fadd double %vr3438, %vr3449

	; conv SYS_OFFSET => vr3450
	%vr3451 = load i32, i32* @SYS_OFFSET
	%vr3450 = sext i32 %vr3451 to i64

	; bop vr3450 SHL 3
	%vr3452 = shl i64 %vr3450, 3

	; bop THIS + vr3452
	%vr3454 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3455 = inttoptr i64 %vr3452 to %MEMORY_T*
	%vr3453 = add %MEMORY_T* %vr3454, %vr3455

	; store vr3453+1752 := vr3445
	%vr3456 = ptrtoint %MEMORY_T* %vr3453 to i64
	%vr3457 = add i64 %vr3456, 1752
	%vr3458 = inttoptr i64 %vr3457 to double*
	store double %vr3445, double* %vr3458

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EF8:

	; label .Lt_0503
	br label %.Lt_0503
.Lt_0503:

	; conv SYS_OFFSET => vr3460
	%vr3461 = load i32, i32* @SYS_OFFSET
	%vr3460 = sext i32 %vr3461 to i64

	; bop vr3460 + 112
	%vr3462 = add i64 %vr3460, 112
	%vr3463 = bitcast i64 %vr3462 to i64

	; branchbop ADR <> vr3463
	%vr3465 = load i64, i64* %ADR.102
	%vr3464 = icmp ne i64 %vr3465, %vr3463
	br i1 %vr3464, label %.Lt_0505, label %.Lt_0EF9
.Lt_0EF9:

	; label .Lt_0506
	br label %.Lt_0506
.Lt_0506:

	; conv SYS_OFFSET => vr3467
	%vr3468 = load i32, i32* @SYS_OFFSET
	%vr3467 = sext i32 %vr3468 to i64

	; bop vr3467 SHL 3
	%vr3469 = shl i64 %vr3467, 3

	; bop THIS + vr3469
	%vr3471 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3472 = inttoptr i64 %vr3469 to %MEMORY_T*
	%vr3470 = add %MEMORY_T* %vr3471, %vr3472

	; conv vr3470+904 => vr3473
	%vr3475 = ptrtoint %MEMORY_T* %vr3470 to i64
	%vr3476 = add i64 %vr3475, 904
	%vr3477 = inttoptr i64 %vr3476 to double*
	%vr3478 = load double, double* %vr3477
	%vr3474 = call double @llvm.nearbyint.f64(double %vr3478)
	%vr3473 = fptosi double %vr3474 to i64

	; bop vr3473 SHL 32
	%vr3479 = shl i64 %vr3473, 32

	; conv SYS_OFFSET => vr3480
	%vr3481 = load i32, i32* @SYS_OFFSET
	%vr3480 = sext i32 %vr3481 to i64

	; bop vr3480 SHL 3
	%vr3482 = shl i64 %vr3480, 3

	; bop THIS + vr3482
	%vr3484 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3485 = inttoptr i64 %vr3482 to %MEMORY_T*
	%vr3483 = add %MEMORY_T* %vr3484, %vr3485

	; conv vr3483+912 => vr3486
	%vr3488 = ptrtoint %MEMORY_T* %vr3483 to i64
	%vr3489 = add i64 %vr3488, 912
	%vr3490 = inttoptr i64 %vr3489 to double*
	%vr3491 = load double, double* %vr3490
	%vr3487 = call double @llvm.nearbyint.f64(double %vr3491)
	%vr3486 = fptosi double %vr3487 to i64

	; bop vr3486 SHL 24
	%vr3492 = shl i64 %vr3486, 24

	; bop vr3479 + vr3492
	%vr3493 = add i64 %vr3479, %vr3492

	; conv SYS_OFFSET => vr3494
	%vr3495 = load i32, i32* @SYS_OFFSET
	%vr3494 = sext i32 %vr3495 to i64

	; bop vr3494 SHL 3
	%vr3496 = shl i64 %vr3494, 3

	; bop THIS + vr3496
	%vr3498 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3499 = inttoptr i64 %vr3496 to %MEMORY_T*
	%vr3497 = add %MEMORY_T* %vr3498, %vr3499

	; conv vr3497+920 => vr3500
	%vr3502 = ptrtoint %MEMORY_T* %vr3497 to i64
	%vr3503 = add i64 %vr3502, 920
	%vr3504 = inttoptr i64 %vr3503 to double*
	%vr3505 = load double, double* %vr3504
	%vr3501 = call double @llvm.nearbyint.f64(double %vr3505)
	%vr3500 = fptosi double %vr3501 to i64

	; bop vr3500 SHL 16
	%vr3506 = shl i64 %vr3500, 16

	; bop vr3493 + vr3506
	%vr3507 = add i64 %vr3493, %vr3506

	; conv SYS_OFFSET => vr3508
	%vr3509 = load i32, i32* @SYS_OFFSET
	%vr3508 = sext i32 %vr3509 to i64

	; bop vr3508 SHL 3
	%vr3510 = shl i64 %vr3508, 3

	; bop THIS + vr3510
	%vr3512 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3513 = inttoptr i64 %vr3510 to %MEMORY_T*
	%vr3511 = add %MEMORY_T* %vr3512, %vr3513

	; conv vr3511+928 => vr3514
	%vr3516 = ptrtoint %MEMORY_T* %vr3511 to i64
	%vr3517 = add i64 %vr3516, 928
	%vr3518 = inttoptr i64 %vr3517 to double*
	%vr3519 = load double, double* %vr3518
	%vr3515 = call double @llvm.nearbyint.f64(double %vr3519)
	%vr3514 = fptosi double %vr3515 to i64

	; bop vr3514 SHL 8
	%vr3520 = shl i64 %vr3514, 8

	; bop vr3507 + vr3520
	%vr3521 = add i64 %vr3507, %vr3520

	; conv vr3521 => vr3522
	%vr3522 = sitofp i64 %vr3521 to double

	; conv SYS_OFFSET => vr3523
	%vr3524 = load i32, i32* @SYS_OFFSET
	%vr3523 = sext i32 %vr3524 to i64

	; bop vr3523 SHL 3
	%vr3525 = shl i64 %vr3523, 3

	; bop THIS + vr3525
	%vr3527 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3528 = inttoptr i64 %vr3525 to %MEMORY_T*
	%vr3526 = add %MEMORY_T* %vr3527, %vr3528

	; bop vr3522 + vr3526+936
	%vr3530 = ptrtoint %MEMORY_T* %vr3526 to i64
	%vr3531 = add i64 %vr3530, 936
	%vr3532 = inttoptr i64 %vr3531 to double*
	%vr3533 = load double, double* %vr3532
	%vr3529 = fadd double %vr3522, %vr3533

	; conv SYS_OFFSET => vr3534
	%vr3535 = load i32, i32* @SYS_OFFSET
	%vr3534 = sext i32 %vr3535 to i64

	; bop vr3534 SHL 3
	%vr3536 = shl i64 %vr3534, 3

	; bop THIS + vr3536
	%vr3538 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3539 = inttoptr i64 %vr3536 to %MEMORY_T*
	%vr3537 = add %MEMORY_T* %vr3538, %vr3539

	; store vr3537+1760 := vr3529
	%vr3540 = ptrtoint %MEMORY_T* %vr3537 to i64
	%vr3541 = add i64 %vr3540, 1760
	%vr3542 = inttoptr i64 %vr3541 to double*
	store double %vr3529, double* %vr3542

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EFA:

	; label .Lt_0505
	br label %.Lt_0505
.Lt_0505:

	; conv SYS_OFFSET => vr3544
	%vr3545 = load i32, i32* @SYS_OFFSET
	%vr3544 = sext i32 %vr3545 to i64

	; bop vr3544 + 118
	%vr3546 = add i64 %vr3544, 118
	%vr3547 = bitcast i64 %vr3546 to i64

	; branchbop ADR <> vr3547
	%vr3549 = load i64, i64* %ADR.102
	%vr3548 = icmp ne i64 %vr3549, %vr3547
	br i1 %vr3548, label %.Lt_0507, label %.Lt_0EFB
.Lt_0EFB:

	; label .Lt_0508
	br label %.Lt_0508
.Lt_0508:

	; conv SYS_OFFSET => vr3551
	%vr3552 = load i32, i32* @SYS_OFFSET
	%vr3551 = sext i32 %vr3552 to i64

	; bop vr3551 SHL 3
	%vr3553 = shl i64 %vr3551, 3

	; bop THIS + vr3553
	%vr3555 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3556 = inttoptr i64 %vr3553 to %MEMORY_T*
	%vr3554 = add %MEMORY_T* %vr3555, %vr3556

	; conv vr3554+952 => vr3557
	%vr3559 = ptrtoint %MEMORY_T* %vr3554 to i64
	%vr3560 = add i64 %vr3559, 952
	%vr3561 = inttoptr i64 %vr3560 to double*
	%vr3562 = load double, double* %vr3561
	%vr3558 = call double @llvm.nearbyint.f64(double %vr3562)
	%vr3557 = fptosi double %vr3558 to i64

	; bop vr3557 SHL 32
	%vr3563 = shl i64 %vr3557, 32

	; conv SYS_OFFSET => vr3564
	%vr3565 = load i32, i32* @SYS_OFFSET
	%vr3564 = sext i32 %vr3565 to i64

	; bop vr3564 SHL 3
	%vr3566 = shl i64 %vr3564, 3

	; bop THIS + vr3566
	%vr3568 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3569 = inttoptr i64 %vr3566 to %MEMORY_T*
	%vr3567 = add %MEMORY_T* %vr3568, %vr3569

	; conv vr3567+960 => vr3570
	%vr3572 = ptrtoint %MEMORY_T* %vr3567 to i64
	%vr3573 = add i64 %vr3572, 960
	%vr3574 = inttoptr i64 %vr3573 to double*
	%vr3575 = load double, double* %vr3574
	%vr3571 = call double @llvm.nearbyint.f64(double %vr3575)
	%vr3570 = fptosi double %vr3571 to i64

	; bop vr3570 SHL 24
	%vr3576 = shl i64 %vr3570, 24

	; bop vr3563 + vr3576
	%vr3577 = add i64 %vr3563, %vr3576

	; conv SYS_OFFSET => vr3578
	%vr3579 = load i32, i32* @SYS_OFFSET
	%vr3578 = sext i32 %vr3579 to i64

	; bop vr3578 SHL 3
	%vr3580 = shl i64 %vr3578, 3

	; bop THIS + vr3580
	%vr3582 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3583 = inttoptr i64 %vr3580 to %MEMORY_T*
	%vr3581 = add %MEMORY_T* %vr3582, %vr3583

	; conv vr3581+968 => vr3584
	%vr3586 = ptrtoint %MEMORY_T* %vr3581 to i64
	%vr3587 = add i64 %vr3586, 968
	%vr3588 = inttoptr i64 %vr3587 to double*
	%vr3589 = load double, double* %vr3588
	%vr3585 = call double @llvm.nearbyint.f64(double %vr3589)
	%vr3584 = fptosi double %vr3585 to i64

	; bop vr3584 SHL 16
	%vr3590 = shl i64 %vr3584, 16

	; bop vr3577 + vr3590
	%vr3591 = add i64 %vr3577, %vr3590

	; conv SYS_OFFSET => vr3592
	%vr3593 = load i32, i32* @SYS_OFFSET
	%vr3592 = sext i32 %vr3593 to i64

	; bop vr3592 SHL 3
	%vr3594 = shl i64 %vr3592, 3

	; bop THIS + vr3594
	%vr3596 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3597 = inttoptr i64 %vr3594 to %MEMORY_T*
	%vr3595 = add %MEMORY_T* %vr3596, %vr3597

	; conv vr3595+976 => vr3598
	%vr3600 = ptrtoint %MEMORY_T* %vr3595 to i64
	%vr3601 = add i64 %vr3600, 976
	%vr3602 = inttoptr i64 %vr3601 to double*
	%vr3603 = load double, double* %vr3602
	%vr3599 = call double @llvm.nearbyint.f64(double %vr3603)
	%vr3598 = fptosi double %vr3599 to i64

	; bop vr3598 SHL 8
	%vr3604 = shl i64 %vr3598, 8

	; bop vr3591 + vr3604
	%vr3605 = add i64 %vr3591, %vr3604

	; conv vr3605 => vr3606
	%vr3606 = sitofp i64 %vr3605 to double

	; conv SYS_OFFSET => vr3607
	%vr3608 = load i32, i32* @SYS_OFFSET
	%vr3607 = sext i32 %vr3608 to i64

	; bop vr3607 SHL 3
	%vr3609 = shl i64 %vr3607, 3

	; bop THIS + vr3609
	%vr3611 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3612 = inttoptr i64 %vr3609 to %MEMORY_T*
	%vr3610 = add %MEMORY_T* %vr3611, %vr3612

	; bop vr3606 + vr3610+984
	%vr3614 = ptrtoint %MEMORY_T* %vr3610 to i64
	%vr3615 = add i64 %vr3614, 984
	%vr3616 = inttoptr i64 %vr3615 to double*
	%vr3617 = load double, double* %vr3616
	%vr3613 = fadd double %vr3606, %vr3617

	; conv SYS_OFFSET => vr3618
	%vr3619 = load i32, i32* @SYS_OFFSET
	%vr3618 = sext i32 %vr3619 to i64

	; bop vr3618 SHL 3
	%vr3620 = shl i64 %vr3618, 3

	; bop THIS + vr3620
	%vr3622 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3623 = inttoptr i64 %vr3620 to %MEMORY_T*
	%vr3621 = add %MEMORY_T* %vr3622, %vr3623

	; store vr3621+1768 := vr3613
	%vr3624 = ptrtoint %MEMORY_T* %vr3621 to i64
	%vr3625 = add i64 %vr3624, 1768
	%vr3626 = inttoptr i64 %vr3625 to double*
	store double %vr3613, double* %vr3626

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EFC:

	; label .Lt_0507
	br label %.Lt_0507
.Lt_0507:

	; conv SYS_OFFSET => vr3628
	%vr3629 = load i32, i32* @SYS_OFFSET
	%vr3628 = sext i32 %vr3629 to i64

	; bop vr3628 + 124
	%vr3630 = add i64 %vr3628, 124
	%vr3631 = bitcast i64 %vr3630 to i64

	; branchbop ADR <> vr3631
	%vr3633 = load i64, i64* %ADR.102
	%vr3632 = icmp ne i64 %vr3633, %vr3631
	br i1 %vr3632, label %.Lt_0509, label %.Lt_0EFD
.Lt_0EFD:

	; label .Lt_050A
	br label %.Lt_050A
.Lt_050A:

	; conv SYS_OFFSET => vr3635
	%vr3636 = load i32, i32* @SYS_OFFSET
	%vr3635 = sext i32 %vr3636 to i64

	; bop vr3635 SHL 3
	%vr3637 = shl i64 %vr3635, 3

	; bop THIS + vr3637
	%vr3639 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3640 = inttoptr i64 %vr3637 to %MEMORY_T*
	%vr3638 = add %MEMORY_T* %vr3639, %vr3640

	; conv vr3638+1000 => vr3641
	%vr3643 = ptrtoint %MEMORY_T* %vr3638 to i64
	%vr3644 = add i64 %vr3643, 1000
	%vr3645 = inttoptr i64 %vr3644 to double*
	%vr3646 = load double, double* %vr3645
	%vr3642 = call double @llvm.nearbyint.f64(double %vr3646)
	%vr3641 = fptosi double %vr3642 to i64

	; bop vr3641 SHL 32
	%vr3647 = shl i64 %vr3641, 32

	; conv SYS_OFFSET => vr3648
	%vr3649 = load i32, i32* @SYS_OFFSET
	%vr3648 = sext i32 %vr3649 to i64

	; bop vr3648 SHL 3
	%vr3650 = shl i64 %vr3648, 3

	; bop THIS + vr3650
	%vr3652 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3653 = inttoptr i64 %vr3650 to %MEMORY_T*
	%vr3651 = add %MEMORY_T* %vr3652, %vr3653

	; conv vr3651+1008 => vr3654
	%vr3656 = ptrtoint %MEMORY_T* %vr3651 to i64
	%vr3657 = add i64 %vr3656, 1008
	%vr3658 = inttoptr i64 %vr3657 to double*
	%vr3659 = load double, double* %vr3658
	%vr3655 = call double @llvm.nearbyint.f64(double %vr3659)
	%vr3654 = fptosi double %vr3655 to i64

	; bop vr3654 SHL 24
	%vr3660 = shl i64 %vr3654, 24

	; bop vr3647 + vr3660
	%vr3661 = add i64 %vr3647, %vr3660

	; conv SYS_OFFSET => vr3662
	%vr3663 = load i32, i32* @SYS_OFFSET
	%vr3662 = sext i32 %vr3663 to i64

	; bop vr3662 SHL 3
	%vr3664 = shl i64 %vr3662, 3

	; bop THIS + vr3664
	%vr3666 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3667 = inttoptr i64 %vr3664 to %MEMORY_T*
	%vr3665 = add %MEMORY_T* %vr3666, %vr3667

	; conv vr3665+1016 => vr3668
	%vr3670 = ptrtoint %MEMORY_T* %vr3665 to i64
	%vr3671 = add i64 %vr3670, 1016
	%vr3672 = inttoptr i64 %vr3671 to double*
	%vr3673 = load double, double* %vr3672
	%vr3669 = call double @llvm.nearbyint.f64(double %vr3673)
	%vr3668 = fptosi double %vr3669 to i64

	; bop vr3668 SHL 16
	%vr3674 = shl i64 %vr3668, 16

	; bop vr3661 + vr3674
	%vr3675 = add i64 %vr3661, %vr3674

	; conv SYS_OFFSET => vr3676
	%vr3677 = load i32, i32* @SYS_OFFSET
	%vr3676 = sext i32 %vr3677 to i64

	; bop vr3676 SHL 3
	%vr3678 = shl i64 %vr3676, 3

	; bop THIS + vr3678
	%vr3680 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3681 = inttoptr i64 %vr3678 to %MEMORY_T*
	%vr3679 = add %MEMORY_T* %vr3680, %vr3681

	; conv vr3679+1024 => vr3682
	%vr3684 = ptrtoint %MEMORY_T* %vr3679 to i64
	%vr3685 = add i64 %vr3684, 1024
	%vr3686 = inttoptr i64 %vr3685 to double*
	%vr3687 = load double, double* %vr3686
	%vr3683 = call double @llvm.nearbyint.f64(double %vr3687)
	%vr3682 = fptosi double %vr3683 to i64

	; bop vr3682 SHL 8
	%vr3688 = shl i64 %vr3682, 8

	; bop vr3675 + vr3688
	%vr3689 = add i64 %vr3675, %vr3688

	; conv vr3689 => vr3690
	%vr3690 = sitofp i64 %vr3689 to double

	; conv SYS_OFFSET => vr3691
	%vr3692 = load i32, i32* @SYS_OFFSET
	%vr3691 = sext i32 %vr3692 to i64

	; bop vr3691 SHL 3
	%vr3693 = shl i64 %vr3691, 3

	; bop THIS + vr3693
	%vr3695 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3696 = inttoptr i64 %vr3693 to %MEMORY_T*
	%vr3694 = add %MEMORY_T* %vr3695, %vr3696

	; bop vr3690 + vr3694+1032
	%vr3698 = ptrtoint %MEMORY_T* %vr3694 to i64
	%vr3699 = add i64 %vr3698, 1032
	%vr3700 = inttoptr i64 %vr3699 to double*
	%vr3701 = load double, double* %vr3700
	%vr3697 = fadd double %vr3690, %vr3701

	; conv SYS_OFFSET => vr3702
	%vr3703 = load i32, i32* @SYS_OFFSET
	%vr3702 = sext i32 %vr3703 to i64

	; bop vr3702 SHL 3
	%vr3704 = shl i64 %vr3702, 3

	; bop THIS + vr3704
	%vr3706 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3707 = inttoptr i64 %vr3704 to %MEMORY_T*
	%vr3705 = add %MEMORY_T* %vr3706, %vr3707

	; store vr3705+1776 := vr3697
	%vr3708 = ptrtoint %MEMORY_T* %vr3705 to i64
	%vr3709 = add i64 %vr3708, 1776
	%vr3710 = inttoptr i64 %vr3709 to double*
	store double %vr3697, double* %vr3710

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0EFE:

	; label .Lt_0509
	br label %.Lt_0509
.Lt_0509:

	; conv SYS_OFFSET => vr3712
	%vr3713 = load i32, i32* @SYS_OFFSET
	%vr3712 = sext i32 %vr3713 to i64

	; bop vr3712 + 130
	%vr3714 = add i64 %vr3712, 130
	%vr3715 = bitcast i64 %vr3714 to i64

	; branchbop ADR <> vr3715
	%vr3717 = load i64, i64* %ADR.102
	%vr3716 = icmp ne i64 %vr3717, %vr3715
	br i1 %vr3716, label %.Lt_050B, label %.Lt_0EFF
.Lt_0EFF:

	; label .Lt_050C
	br label %.Lt_050C
.Lt_050C:

	; conv SYS_OFFSET => vr3719
	%vr3720 = load i32, i32* @SYS_OFFSET
	%vr3719 = sext i32 %vr3720 to i64

	; bop vr3719 SHL 3
	%vr3721 = shl i64 %vr3719, 3

	; bop THIS + vr3721
	%vr3723 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3724 = inttoptr i64 %vr3721 to %MEMORY_T*
	%vr3722 = add %MEMORY_T* %vr3723, %vr3724

	; conv vr3722+1048 => vr3725
	%vr3727 = ptrtoint %MEMORY_T* %vr3722 to i64
	%vr3728 = add i64 %vr3727, 1048
	%vr3729 = inttoptr i64 %vr3728 to double*
	%vr3730 = load double, double* %vr3729
	%vr3726 = call double @llvm.nearbyint.f64(double %vr3730)
	%vr3725 = fptosi double %vr3726 to i64

	; bop vr3725 SHL 32
	%vr3731 = shl i64 %vr3725, 32

	; conv SYS_OFFSET => vr3732
	%vr3733 = load i32, i32* @SYS_OFFSET
	%vr3732 = sext i32 %vr3733 to i64

	; bop vr3732 SHL 3
	%vr3734 = shl i64 %vr3732, 3

	; bop THIS + vr3734
	%vr3736 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3737 = inttoptr i64 %vr3734 to %MEMORY_T*
	%vr3735 = add %MEMORY_T* %vr3736, %vr3737

	; conv vr3735+1056 => vr3738
	%vr3740 = ptrtoint %MEMORY_T* %vr3735 to i64
	%vr3741 = add i64 %vr3740, 1056
	%vr3742 = inttoptr i64 %vr3741 to double*
	%vr3743 = load double, double* %vr3742
	%vr3739 = call double @llvm.nearbyint.f64(double %vr3743)
	%vr3738 = fptosi double %vr3739 to i64

	; bop vr3738 SHL 24
	%vr3744 = shl i64 %vr3738, 24

	; bop vr3731 + vr3744
	%vr3745 = add i64 %vr3731, %vr3744

	; conv SYS_OFFSET => vr3746
	%vr3747 = load i32, i32* @SYS_OFFSET
	%vr3746 = sext i32 %vr3747 to i64

	; bop vr3746 SHL 3
	%vr3748 = shl i64 %vr3746, 3

	; bop THIS + vr3748
	%vr3750 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3751 = inttoptr i64 %vr3748 to %MEMORY_T*
	%vr3749 = add %MEMORY_T* %vr3750, %vr3751

	; conv vr3749+1064 => vr3752
	%vr3754 = ptrtoint %MEMORY_T* %vr3749 to i64
	%vr3755 = add i64 %vr3754, 1064
	%vr3756 = inttoptr i64 %vr3755 to double*
	%vr3757 = load double, double* %vr3756
	%vr3753 = call double @llvm.nearbyint.f64(double %vr3757)
	%vr3752 = fptosi double %vr3753 to i64

	; bop vr3752 SHL 16
	%vr3758 = shl i64 %vr3752, 16

	; bop vr3745 + vr3758
	%vr3759 = add i64 %vr3745, %vr3758

	; conv SYS_OFFSET => vr3760
	%vr3761 = load i32, i32* @SYS_OFFSET
	%vr3760 = sext i32 %vr3761 to i64

	; bop vr3760 SHL 3
	%vr3762 = shl i64 %vr3760, 3

	; bop THIS + vr3762
	%vr3764 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3765 = inttoptr i64 %vr3762 to %MEMORY_T*
	%vr3763 = add %MEMORY_T* %vr3764, %vr3765

	; conv vr3763+1072 => vr3766
	%vr3768 = ptrtoint %MEMORY_T* %vr3763 to i64
	%vr3769 = add i64 %vr3768, 1072
	%vr3770 = inttoptr i64 %vr3769 to double*
	%vr3771 = load double, double* %vr3770
	%vr3767 = call double @llvm.nearbyint.f64(double %vr3771)
	%vr3766 = fptosi double %vr3767 to i64

	; bop vr3766 SHL 8
	%vr3772 = shl i64 %vr3766, 8

	; bop vr3759 + vr3772
	%vr3773 = add i64 %vr3759, %vr3772

	; conv vr3773 => vr3774
	%vr3774 = sitofp i64 %vr3773 to double

	; conv SYS_OFFSET => vr3775
	%vr3776 = load i32, i32* @SYS_OFFSET
	%vr3775 = sext i32 %vr3776 to i64

	; bop vr3775 SHL 3
	%vr3777 = shl i64 %vr3775, 3

	; bop THIS + vr3777
	%vr3779 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3780 = inttoptr i64 %vr3777 to %MEMORY_T*
	%vr3778 = add %MEMORY_T* %vr3779, %vr3780

	; bop vr3774 + vr3778+1080
	%vr3782 = ptrtoint %MEMORY_T* %vr3778 to i64
	%vr3783 = add i64 %vr3782, 1080
	%vr3784 = inttoptr i64 %vr3783 to double*
	%vr3785 = load double, double* %vr3784
	%vr3781 = fadd double %vr3774, %vr3785

	; conv SYS_OFFSET => vr3786
	%vr3787 = load i32, i32* @SYS_OFFSET
	%vr3786 = sext i32 %vr3787 to i64

	; bop vr3786 SHL 3
	%vr3788 = shl i64 %vr3786, 3

	; bop THIS + vr3788
	%vr3790 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3791 = inttoptr i64 %vr3788 to %MEMORY_T*
	%vr3789 = add %MEMORY_T* %vr3790, %vr3791

	; store vr3789+1784 := vr3781
	%vr3792 = ptrtoint %MEMORY_T* %vr3789 to i64
	%vr3793 = add i64 %vr3792, 1784
	%vr3794 = inttoptr i64 %vr3793 to double*
	store double %vr3781, double* %vr3794

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F00:

	; label .Lt_050B
	br label %.Lt_050B
.Lt_050B:

	; conv SYS_OFFSET => vr3796
	%vr3797 = load i32, i32* @SYS_OFFSET
	%vr3796 = sext i32 %vr3797 to i64

	; bop vr3796 + 136
	%vr3798 = add i64 %vr3796, 136
	%vr3799 = bitcast i64 %vr3798 to i64

	; branchbop ADR <> vr3799
	%vr3801 = load i64, i64* %ADR.102
	%vr3800 = icmp ne i64 %vr3801, %vr3799
	br i1 %vr3800, label %.Lt_050D, label %.Lt_0F01
.Lt_0F01:

	; label .Lt_050E
	br label %.Lt_050E
.Lt_050E:

	; conv SYS_OFFSET => vr3803
	%vr3804 = load i32, i32* @SYS_OFFSET
	%vr3803 = sext i32 %vr3804 to i64

	; bop vr3803 SHL 3
	%vr3805 = shl i64 %vr3803, 3

	; bop THIS + vr3805
	%vr3807 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3808 = inttoptr i64 %vr3805 to %MEMORY_T*
	%vr3806 = add %MEMORY_T* %vr3807, %vr3808

	; conv vr3806+1096 => vr3809
	%vr3811 = ptrtoint %MEMORY_T* %vr3806 to i64
	%vr3812 = add i64 %vr3811, 1096
	%vr3813 = inttoptr i64 %vr3812 to double*
	%vr3814 = load double, double* %vr3813
	%vr3810 = call double @llvm.nearbyint.f64(double %vr3814)
	%vr3809 = fptosi double %vr3810 to i64

	; bop vr3809 SHL 32
	%vr3815 = shl i64 %vr3809, 32

	; conv SYS_OFFSET => vr3816
	%vr3817 = load i32, i32* @SYS_OFFSET
	%vr3816 = sext i32 %vr3817 to i64

	; bop vr3816 SHL 3
	%vr3818 = shl i64 %vr3816, 3

	; bop THIS + vr3818
	%vr3820 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3821 = inttoptr i64 %vr3818 to %MEMORY_T*
	%vr3819 = add %MEMORY_T* %vr3820, %vr3821

	; conv vr3819+1104 => vr3822
	%vr3824 = ptrtoint %MEMORY_T* %vr3819 to i64
	%vr3825 = add i64 %vr3824, 1104
	%vr3826 = inttoptr i64 %vr3825 to double*
	%vr3827 = load double, double* %vr3826
	%vr3823 = call double @llvm.nearbyint.f64(double %vr3827)
	%vr3822 = fptosi double %vr3823 to i64

	; bop vr3822 SHL 24
	%vr3828 = shl i64 %vr3822, 24

	; bop vr3815 + vr3828
	%vr3829 = add i64 %vr3815, %vr3828

	; conv SYS_OFFSET => vr3830
	%vr3831 = load i32, i32* @SYS_OFFSET
	%vr3830 = sext i32 %vr3831 to i64

	; bop vr3830 SHL 3
	%vr3832 = shl i64 %vr3830, 3

	; bop THIS + vr3832
	%vr3834 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3835 = inttoptr i64 %vr3832 to %MEMORY_T*
	%vr3833 = add %MEMORY_T* %vr3834, %vr3835

	; conv vr3833+1112 => vr3836
	%vr3838 = ptrtoint %MEMORY_T* %vr3833 to i64
	%vr3839 = add i64 %vr3838, 1112
	%vr3840 = inttoptr i64 %vr3839 to double*
	%vr3841 = load double, double* %vr3840
	%vr3837 = call double @llvm.nearbyint.f64(double %vr3841)
	%vr3836 = fptosi double %vr3837 to i64

	; bop vr3836 SHL 16
	%vr3842 = shl i64 %vr3836, 16

	; bop vr3829 + vr3842
	%vr3843 = add i64 %vr3829, %vr3842

	; conv SYS_OFFSET => vr3844
	%vr3845 = load i32, i32* @SYS_OFFSET
	%vr3844 = sext i32 %vr3845 to i64

	; bop vr3844 SHL 3
	%vr3846 = shl i64 %vr3844, 3

	; bop THIS + vr3846
	%vr3848 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3849 = inttoptr i64 %vr3846 to %MEMORY_T*
	%vr3847 = add %MEMORY_T* %vr3848, %vr3849

	; conv vr3847+1120 => vr3850
	%vr3852 = ptrtoint %MEMORY_T* %vr3847 to i64
	%vr3853 = add i64 %vr3852, 1120
	%vr3854 = inttoptr i64 %vr3853 to double*
	%vr3855 = load double, double* %vr3854
	%vr3851 = call double @llvm.nearbyint.f64(double %vr3855)
	%vr3850 = fptosi double %vr3851 to i64

	; bop vr3850 SHL 8
	%vr3856 = shl i64 %vr3850, 8

	; bop vr3843 + vr3856
	%vr3857 = add i64 %vr3843, %vr3856

	; conv vr3857 => vr3858
	%vr3858 = sitofp i64 %vr3857 to double

	; conv SYS_OFFSET => vr3859
	%vr3860 = load i32, i32* @SYS_OFFSET
	%vr3859 = sext i32 %vr3860 to i64

	; bop vr3859 SHL 3
	%vr3861 = shl i64 %vr3859, 3

	; bop THIS + vr3861
	%vr3863 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3864 = inttoptr i64 %vr3861 to %MEMORY_T*
	%vr3862 = add %MEMORY_T* %vr3863, %vr3864

	; bop vr3858 + vr3862+1128
	%vr3866 = ptrtoint %MEMORY_T* %vr3862 to i64
	%vr3867 = add i64 %vr3866, 1128
	%vr3868 = inttoptr i64 %vr3867 to double*
	%vr3869 = load double, double* %vr3868
	%vr3865 = fadd double %vr3858, %vr3869

	; conv SYS_OFFSET => vr3870
	%vr3871 = load i32, i32* @SYS_OFFSET
	%vr3870 = sext i32 %vr3871 to i64

	; bop vr3870 SHL 3
	%vr3872 = shl i64 %vr3870, 3

	; bop THIS + vr3872
	%vr3874 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3875 = inttoptr i64 %vr3872 to %MEMORY_T*
	%vr3873 = add %MEMORY_T* %vr3874, %vr3875

	; store vr3873+1792 := vr3865
	%vr3876 = ptrtoint %MEMORY_T* %vr3873 to i64
	%vr3877 = add i64 %vr3876, 1792
	%vr3878 = inttoptr i64 %vr3877 to double*
	store double %vr3865, double* %vr3878

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F02:

	; label .Lt_050D
	br label %.Lt_050D
.Lt_050D:

	; conv SYS_OFFSET => vr3880
	%vr3881 = load i32, i32* @SYS_OFFSET
	%vr3880 = sext i32 %vr3881 to i64

	; bop vr3880 + 142
	%vr3882 = add i64 %vr3880, 142
	%vr3883 = bitcast i64 %vr3882 to i64

	; branchbop ADR <> vr3883
	%vr3885 = load i64, i64* %ADR.102
	%vr3884 = icmp ne i64 %vr3885, %vr3883
	br i1 %vr3884, label %.Lt_050F, label %.Lt_0F03
.Lt_0F03:

	; label .Lt_0510
	br label %.Lt_0510
.Lt_0510:

	; conv SYS_OFFSET => vr3887
	%vr3888 = load i32, i32* @SYS_OFFSET
	%vr3887 = sext i32 %vr3888 to i64

	; bop vr3887 SHL 3
	%vr3889 = shl i64 %vr3887, 3

	; bop THIS + vr3889
	%vr3891 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3892 = inttoptr i64 %vr3889 to %MEMORY_T*
	%vr3890 = add %MEMORY_T* %vr3891, %vr3892

	; conv vr3890+1144 => vr3893
	%vr3895 = ptrtoint %MEMORY_T* %vr3890 to i64
	%vr3896 = add i64 %vr3895, 1144
	%vr3897 = inttoptr i64 %vr3896 to double*
	%vr3898 = load double, double* %vr3897
	%vr3894 = call double @llvm.nearbyint.f64(double %vr3898)
	%vr3893 = fptosi double %vr3894 to i64

	; bop vr3893 SHL 32
	%vr3899 = shl i64 %vr3893, 32

	; conv SYS_OFFSET => vr3900
	%vr3901 = load i32, i32* @SYS_OFFSET
	%vr3900 = sext i32 %vr3901 to i64

	; bop vr3900 SHL 3
	%vr3902 = shl i64 %vr3900, 3

	; bop THIS + vr3902
	%vr3904 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3905 = inttoptr i64 %vr3902 to %MEMORY_T*
	%vr3903 = add %MEMORY_T* %vr3904, %vr3905

	; conv vr3903+1152 => vr3906
	%vr3908 = ptrtoint %MEMORY_T* %vr3903 to i64
	%vr3909 = add i64 %vr3908, 1152
	%vr3910 = inttoptr i64 %vr3909 to double*
	%vr3911 = load double, double* %vr3910
	%vr3907 = call double @llvm.nearbyint.f64(double %vr3911)
	%vr3906 = fptosi double %vr3907 to i64

	; bop vr3906 SHL 24
	%vr3912 = shl i64 %vr3906, 24

	; bop vr3899 + vr3912
	%vr3913 = add i64 %vr3899, %vr3912

	; conv SYS_OFFSET => vr3914
	%vr3915 = load i32, i32* @SYS_OFFSET
	%vr3914 = sext i32 %vr3915 to i64

	; bop vr3914 SHL 3
	%vr3916 = shl i64 %vr3914, 3

	; bop THIS + vr3916
	%vr3918 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3919 = inttoptr i64 %vr3916 to %MEMORY_T*
	%vr3917 = add %MEMORY_T* %vr3918, %vr3919

	; conv vr3917+1160 => vr3920
	%vr3922 = ptrtoint %MEMORY_T* %vr3917 to i64
	%vr3923 = add i64 %vr3922, 1160
	%vr3924 = inttoptr i64 %vr3923 to double*
	%vr3925 = load double, double* %vr3924
	%vr3921 = call double @llvm.nearbyint.f64(double %vr3925)
	%vr3920 = fptosi double %vr3921 to i64

	; bop vr3920 SHL 16
	%vr3926 = shl i64 %vr3920, 16

	; bop vr3913 + vr3926
	%vr3927 = add i64 %vr3913, %vr3926

	; conv SYS_OFFSET => vr3928
	%vr3929 = load i32, i32* @SYS_OFFSET
	%vr3928 = sext i32 %vr3929 to i64

	; bop vr3928 SHL 3
	%vr3930 = shl i64 %vr3928, 3

	; bop THIS + vr3930
	%vr3932 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3933 = inttoptr i64 %vr3930 to %MEMORY_T*
	%vr3931 = add %MEMORY_T* %vr3932, %vr3933

	; conv vr3931+1168 => vr3934
	%vr3936 = ptrtoint %MEMORY_T* %vr3931 to i64
	%vr3937 = add i64 %vr3936, 1168
	%vr3938 = inttoptr i64 %vr3937 to double*
	%vr3939 = load double, double* %vr3938
	%vr3935 = call double @llvm.nearbyint.f64(double %vr3939)
	%vr3934 = fptosi double %vr3935 to i64

	; bop vr3934 SHL 8
	%vr3940 = shl i64 %vr3934, 8

	; bop vr3927 + vr3940
	%vr3941 = add i64 %vr3927, %vr3940

	; conv vr3941 => vr3942
	%vr3942 = sitofp i64 %vr3941 to double

	; conv SYS_OFFSET => vr3943
	%vr3944 = load i32, i32* @SYS_OFFSET
	%vr3943 = sext i32 %vr3944 to i64

	; bop vr3943 SHL 3
	%vr3945 = shl i64 %vr3943, 3

	; bop THIS + vr3945
	%vr3947 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3948 = inttoptr i64 %vr3945 to %MEMORY_T*
	%vr3946 = add %MEMORY_T* %vr3947, %vr3948

	; bop vr3942 + vr3946+1176
	%vr3950 = ptrtoint %MEMORY_T* %vr3946 to i64
	%vr3951 = add i64 %vr3950, 1176
	%vr3952 = inttoptr i64 %vr3951 to double*
	%vr3953 = load double, double* %vr3952
	%vr3949 = fadd double %vr3942, %vr3953

	; conv SYS_OFFSET => vr3954
	%vr3955 = load i32, i32* @SYS_OFFSET
	%vr3954 = sext i32 %vr3955 to i64

	; bop vr3954 SHL 3
	%vr3956 = shl i64 %vr3954, 3

	; bop THIS + vr3956
	%vr3958 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3959 = inttoptr i64 %vr3956 to %MEMORY_T*
	%vr3957 = add %MEMORY_T* %vr3958, %vr3959

	; store vr3957+1800 := vr3949
	%vr3960 = ptrtoint %MEMORY_T* %vr3957 to i64
	%vr3961 = add i64 %vr3960, 1800
	%vr3962 = inttoptr i64 %vr3961 to double*
	store double %vr3949, double* %vr3962

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F04:

	; label .Lt_050F
	br label %.Lt_050F
.Lt_050F:

	; conv SYS_OFFSET => vr3964
	%vr3965 = load i32, i32* @SYS_OFFSET
	%vr3964 = sext i32 %vr3965 to i64

	; bop vr3964 + 148
	%vr3966 = add i64 %vr3964, 148
	%vr3967 = bitcast i64 %vr3966 to i64

	; branchbop ADR <> vr3967
	%vr3969 = load i64, i64* %ADR.102
	%vr3968 = icmp ne i64 %vr3969, %vr3967
	br i1 %vr3968, label %.Lt_0511, label %.Lt_0F05
.Lt_0F05:

	; label .Lt_0512
	br label %.Lt_0512
.Lt_0512:

	; conv SYS_OFFSET => vr3971
	%vr3972 = load i32, i32* @SYS_OFFSET
	%vr3971 = sext i32 %vr3972 to i64

	; bop vr3971 SHL 3
	%vr3973 = shl i64 %vr3971, 3

	; bop THIS + vr3973
	%vr3975 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3976 = inttoptr i64 %vr3973 to %MEMORY_T*
	%vr3974 = add %MEMORY_T* %vr3975, %vr3976

	; conv vr3974+1192 => vr3977
	%vr3979 = ptrtoint %MEMORY_T* %vr3974 to i64
	%vr3980 = add i64 %vr3979, 1192
	%vr3981 = inttoptr i64 %vr3980 to double*
	%vr3982 = load double, double* %vr3981
	%vr3978 = call double @llvm.nearbyint.f64(double %vr3982)
	%vr3977 = fptosi double %vr3978 to i64

	; bop vr3977 SHL 32
	%vr3983 = shl i64 %vr3977, 32

	; conv SYS_OFFSET => vr3984
	%vr3985 = load i32, i32* @SYS_OFFSET
	%vr3984 = sext i32 %vr3985 to i64

	; bop vr3984 SHL 3
	%vr3986 = shl i64 %vr3984, 3

	; bop THIS + vr3986
	%vr3988 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr3989 = inttoptr i64 %vr3986 to %MEMORY_T*
	%vr3987 = add %MEMORY_T* %vr3988, %vr3989

	; conv vr3987+1200 => vr3990
	%vr3992 = ptrtoint %MEMORY_T* %vr3987 to i64
	%vr3993 = add i64 %vr3992, 1200
	%vr3994 = inttoptr i64 %vr3993 to double*
	%vr3995 = load double, double* %vr3994
	%vr3991 = call double @llvm.nearbyint.f64(double %vr3995)
	%vr3990 = fptosi double %vr3991 to i64

	; bop vr3990 SHL 24
	%vr3996 = shl i64 %vr3990, 24

	; bop vr3983 + vr3996
	%vr3997 = add i64 %vr3983, %vr3996

	; conv SYS_OFFSET => vr3998
	%vr3999 = load i32, i32* @SYS_OFFSET
	%vr3998 = sext i32 %vr3999 to i64

	; bop vr3998 SHL 3
	%vr4000 = shl i64 %vr3998, 3

	; bop THIS + vr4000
	%vr4002 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4003 = inttoptr i64 %vr4000 to %MEMORY_T*
	%vr4001 = add %MEMORY_T* %vr4002, %vr4003

	; conv vr4001+1208 => vr4004
	%vr4006 = ptrtoint %MEMORY_T* %vr4001 to i64
	%vr4007 = add i64 %vr4006, 1208
	%vr4008 = inttoptr i64 %vr4007 to double*
	%vr4009 = load double, double* %vr4008
	%vr4005 = call double @llvm.nearbyint.f64(double %vr4009)
	%vr4004 = fptosi double %vr4005 to i64

	; bop vr4004 SHL 16
	%vr4010 = shl i64 %vr4004, 16

	; bop vr3997 + vr4010
	%vr4011 = add i64 %vr3997, %vr4010

	; conv SYS_OFFSET => vr4012
	%vr4013 = load i32, i32* @SYS_OFFSET
	%vr4012 = sext i32 %vr4013 to i64

	; bop vr4012 SHL 3
	%vr4014 = shl i64 %vr4012, 3

	; bop THIS + vr4014
	%vr4016 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4017 = inttoptr i64 %vr4014 to %MEMORY_T*
	%vr4015 = add %MEMORY_T* %vr4016, %vr4017

	; conv vr4015+1216 => vr4018
	%vr4020 = ptrtoint %MEMORY_T* %vr4015 to i64
	%vr4021 = add i64 %vr4020, 1216
	%vr4022 = inttoptr i64 %vr4021 to double*
	%vr4023 = load double, double* %vr4022
	%vr4019 = call double @llvm.nearbyint.f64(double %vr4023)
	%vr4018 = fptosi double %vr4019 to i64

	; bop vr4018 SHL 8
	%vr4024 = shl i64 %vr4018, 8

	; bop vr4011 + vr4024
	%vr4025 = add i64 %vr4011, %vr4024

	; conv vr4025 => vr4026
	%vr4026 = sitofp i64 %vr4025 to double

	; conv SYS_OFFSET => vr4027
	%vr4028 = load i32, i32* @SYS_OFFSET
	%vr4027 = sext i32 %vr4028 to i64

	; bop vr4027 SHL 3
	%vr4029 = shl i64 %vr4027, 3

	; bop THIS + vr4029
	%vr4031 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4032 = inttoptr i64 %vr4029 to %MEMORY_T*
	%vr4030 = add %MEMORY_T* %vr4031, %vr4032

	; bop vr4026 + vr4030+1224
	%vr4034 = ptrtoint %MEMORY_T* %vr4030 to i64
	%vr4035 = add i64 %vr4034, 1224
	%vr4036 = inttoptr i64 %vr4035 to double*
	%vr4037 = load double, double* %vr4036
	%vr4033 = fadd double %vr4026, %vr4037

	; conv SYS_OFFSET => vr4038
	%vr4039 = load i32, i32* @SYS_OFFSET
	%vr4038 = sext i32 %vr4039 to i64

	; bop vr4038 SHL 3
	%vr4040 = shl i64 %vr4038, 3

	; bop THIS + vr4040
	%vr4042 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4043 = inttoptr i64 %vr4040 to %MEMORY_T*
	%vr4041 = add %MEMORY_T* %vr4042, %vr4043

	; store vr4041+1808 := vr4033
	%vr4044 = ptrtoint %MEMORY_T* %vr4041 to i64
	%vr4045 = add i64 %vr4044, 1808
	%vr4046 = inttoptr i64 %vr4045 to double*
	store double %vr4033, double* %vr4046

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F06:

	; label .Lt_0511
	br label %.Lt_0511
.Lt_0511:

	; conv SYS_OFFSET => vr4048
	%vr4049 = load i32, i32* @SYS_OFFSET
	%vr4048 = sext i32 %vr4049 to i64

	; bop vr4048 + 154
	%vr4050 = add i64 %vr4048, 154
	%vr4051 = bitcast i64 %vr4050 to i64

	; branchbop ADR <> vr4051
	%vr4053 = load i64, i64* %ADR.102
	%vr4052 = icmp ne i64 %vr4053, %vr4051
	br i1 %vr4052, label %.Lt_0513, label %.Lt_0F07
.Lt_0F07:

	; label .Lt_0514
	br label %.Lt_0514
.Lt_0514:

	; conv SYS_OFFSET => vr4055
	%vr4056 = load i32, i32* @SYS_OFFSET
	%vr4055 = sext i32 %vr4056 to i64

	; bop vr4055 SHL 3
	%vr4057 = shl i64 %vr4055, 3

	; bop THIS + vr4057
	%vr4059 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4060 = inttoptr i64 %vr4057 to %MEMORY_T*
	%vr4058 = add %MEMORY_T* %vr4059, %vr4060

	; conv vr4058+1240 => vr4061
	%vr4063 = ptrtoint %MEMORY_T* %vr4058 to i64
	%vr4064 = add i64 %vr4063, 1240
	%vr4065 = inttoptr i64 %vr4064 to double*
	%vr4066 = load double, double* %vr4065
	%vr4062 = call double @llvm.nearbyint.f64(double %vr4066)
	%vr4061 = fptosi double %vr4062 to i64

	; bop vr4061 SHL 32
	%vr4067 = shl i64 %vr4061, 32

	; conv SYS_OFFSET => vr4068
	%vr4069 = load i32, i32* @SYS_OFFSET
	%vr4068 = sext i32 %vr4069 to i64

	; bop vr4068 SHL 3
	%vr4070 = shl i64 %vr4068, 3

	; bop THIS + vr4070
	%vr4072 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4073 = inttoptr i64 %vr4070 to %MEMORY_T*
	%vr4071 = add %MEMORY_T* %vr4072, %vr4073

	; conv vr4071+1248 => vr4074
	%vr4076 = ptrtoint %MEMORY_T* %vr4071 to i64
	%vr4077 = add i64 %vr4076, 1248
	%vr4078 = inttoptr i64 %vr4077 to double*
	%vr4079 = load double, double* %vr4078
	%vr4075 = call double @llvm.nearbyint.f64(double %vr4079)
	%vr4074 = fptosi double %vr4075 to i64

	; bop vr4074 SHL 24
	%vr4080 = shl i64 %vr4074, 24

	; bop vr4067 + vr4080
	%vr4081 = add i64 %vr4067, %vr4080

	; conv SYS_OFFSET => vr4082
	%vr4083 = load i32, i32* @SYS_OFFSET
	%vr4082 = sext i32 %vr4083 to i64

	; bop vr4082 SHL 3
	%vr4084 = shl i64 %vr4082, 3

	; bop THIS + vr4084
	%vr4086 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4087 = inttoptr i64 %vr4084 to %MEMORY_T*
	%vr4085 = add %MEMORY_T* %vr4086, %vr4087

	; conv vr4085+1256 => vr4088
	%vr4090 = ptrtoint %MEMORY_T* %vr4085 to i64
	%vr4091 = add i64 %vr4090, 1256
	%vr4092 = inttoptr i64 %vr4091 to double*
	%vr4093 = load double, double* %vr4092
	%vr4089 = call double @llvm.nearbyint.f64(double %vr4093)
	%vr4088 = fptosi double %vr4089 to i64

	; bop vr4088 SHL 16
	%vr4094 = shl i64 %vr4088, 16

	; bop vr4081 + vr4094
	%vr4095 = add i64 %vr4081, %vr4094

	; conv SYS_OFFSET => vr4096
	%vr4097 = load i32, i32* @SYS_OFFSET
	%vr4096 = sext i32 %vr4097 to i64

	; bop vr4096 SHL 3
	%vr4098 = shl i64 %vr4096, 3

	; bop THIS + vr4098
	%vr4100 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4101 = inttoptr i64 %vr4098 to %MEMORY_T*
	%vr4099 = add %MEMORY_T* %vr4100, %vr4101

	; conv vr4099+1264 => vr4102
	%vr4104 = ptrtoint %MEMORY_T* %vr4099 to i64
	%vr4105 = add i64 %vr4104, 1264
	%vr4106 = inttoptr i64 %vr4105 to double*
	%vr4107 = load double, double* %vr4106
	%vr4103 = call double @llvm.nearbyint.f64(double %vr4107)
	%vr4102 = fptosi double %vr4103 to i64

	; bop vr4102 SHL 8
	%vr4108 = shl i64 %vr4102, 8

	; bop vr4095 + vr4108
	%vr4109 = add i64 %vr4095, %vr4108

	; conv vr4109 => vr4110
	%vr4110 = sitofp i64 %vr4109 to double

	; conv SYS_OFFSET => vr4111
	%vr4112 = load i32, i32* @SYS_OFFSET
	%vr4111 = sext i32 %vr4112 to i64

	; bop vr4111 SHL 3
	%vr4113 = shl i64 %vr4111, 3

	; bop THIS + vr4113
	%vr4115 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4116 = inttoptr i64 %vr4113 to %MEMORY_T*
	%vr4114 = add %MEMORY_T* %vr4115, %vr4116

	; bop vr4110 + vr4114+1272
	%vr4118 = ptrtoint %MEMORY_T* %vr4114 to i64
	%vr4119 = add i64 %vr4118, 1272
	%vr4120 = inttoptr i64 %vr4119 to double*
	%vr4121 = load double, double* %vr4120
	%vr4117 = fadd double %vr4110, %vr4121

	; conv SYS_OFFSET => vr4122
	%vr4123 = load i32, i32* @SYS_OFFSET
	%vr4122 = sext i32 %vr4123 to i64

	; bop vr4122 SHL 3
	%vr4124 = shl i64 %vr4122, 3

	; bop THIS + vr4124
	%vr4126 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4127 = inttoptr i64 %vr4124 to %MEMORY_T*
	%vr4125 = add %MEMORY_T* %vr4126, %vr4127

	; store vr4125+1816 := vr4117
	%vr4128 = ptrtoint %MEMORY_T* %vr4125 to i64
	%vr4129 = add i64 %vr4128, 1816
	%vr4130 = inttoptr i64 %vr4129 to double*
	store double %vr4117, double* %vr4130

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F08:

	; label .Lt_0513
	br label %.Lt_0513
.Lt_0513:

	; conv SYS_OFFSET => vr4132
	%vr4133 = load i32, i32* @SYS_OFFSET
	%vr4132 = sext i32 %vr4133 to i64

	; bop vr4132 + 160
	%vr4134 = add i64 %vr4132, 160
	%vr4135 = bitcast i64 %vr4134 to i64

	; branchbop ADR <> vr4135
	%vr4137 = load i64, i64* %ADR.102
	%vr4136 = icmp ne i64 %vr4137, %vr4135
	br i1 %vr4136, label %.Lt_0515, label %.Lt_0F09
.Lt_0F09:

	; label .Lt_0516
	br label %.Lt_0516
.Lt_0516:

	; conv SYS_OFFSET => vr4139
	%vr4140 = load i32, i32* @SYS_OFFSET
	%vr4139 = sext i32 %vr4140 to i64

	; bop vr4139 SHL 3
	%vr4141 = shl i64 %vr4139, 3

	; bop THIS + vr4141
	%vr4143 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4144 = inttoptr i64 %vr4141 to %MEMORY_T*
	%vr4142 = add %MEMORY_T* %vr4143, %vr4144

	; conv vr4142+1288 => vr4145
	%vr4147 = ptrtoint %MEMORY_T* %vr4142 to i64
	%vr4148 = add i64 %vr4147, 1288
	%vr4149 = inttoptr i64 %vr4148 to double*
	%vr4150 = load double, double* %vr4149
	%vr4146 = call double @llvm.nearbyint.f64(double %vr4150)
	%vr4145 = fptosi double %vr4146 to i64

	; bop vr4145 SHL 32
	%vr4151 = shl i64 %vr4145, 32

	; conv SYS_OFFSET => vr4152
	%vr4153 = load i32, i32* @SYS_OFFSET
	%vr4152 = sext i32 %vr4153 to i64

	; bop vr4152 SHL 3
	%vr4154 = shl i64 %vr4152, 3

	; bop THIS + vr4154
	%vr4156 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4157 = inttoptr i64 %vr4154 to %MEMORY_T*
	%vr4155 = add %MEMORY_T* %vr4156, %vr4157

	; conv vr4155+1296 => vr4158
	%vr4160 = ptrtoint %MEMORY_T* %vr4155 to i64
	%vr4161 = add i64 %vr4160, 1296
	%vr4162 = inttoptr i64 %vr4161 to double*
	%vr4163 = load double, double* %vr4162
	%vr4159 = call double @llvm.nearbyint.f64(double %vr4163)
	%vr4158 = fptosi double %vr4159 to i64

	; bop vr4158 SHL 24
	%vr4164 = shl i64 %vr4158, 24

	; bop vr4151 + vr4164
	%vr4165 = add i64 %vr4151, %vr4164

	; conv SYS_OFFSET => vr4166
	%vr4167 = load i32, i32* @SYS_OFFSET
	%vr4166 = sext i32 %vr4167 to i64

	; bop vr4166 SHL 3
	%vr4168 = shl i64 %vr4166, 3

	; bop THIS + vr4168
	%vr4170 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4171 = inttoptr i64 %vr4168 to %MEMORY_T*
	%vr4169 = add %MEMORY_T* %vr4170, %vr4171

	; conv vr4169+1304 => vr4172
	%vr4174 = ptrtoint %MEMORY_T* %vr4169 to i64
	%vr4175 = add i64 %vr4174, 1304
	%vr4176 = inttoptr i64 %vr4175 to double*
	%vr4177 = load double, double* %vr4176
	%vr4173 = call double @llvm.nearbyint.f64(double %vr4177)
	%vr4172 = fptosi double %vr4173 to i64

	; bop vr4172 SHL 16
	%vr4178 = shl i64 %vr4172, 16

	; bop vr4165 + vr4178
	%vr4179 = add i64 %vr4165, %vr4178

	; conv SYS_OFFSET => vr4180
	%vr4181 = load i32, i32* @SYS_OFFSET
	%vr4180 = sext i32 %vr4181 to i64

	; bop vr4180 SHL 3
	%vr4182 = shl i64 %vr4180, 3

	; bop THIS + vr4182
	%vr4184 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4185 = inttoptr i64 %vr4182 to %MEMORY_T*
	%vr4183 = add %MEMORY_T* %vr4184, %vr4185

	; conv vr4183+1312 => vr4186
	%vr4188 = ptrtoint %MEMORY_T* %vr4183 to i64
	%vr4189 = add i64 %vr4188, 1312
	%vr4190 = inttoptr i64 %vr4189 to double*
	%vr4191 = load double, double* %vr4190
	%vr4187 = call double @llvm.nearbyint.f64(double %vr4191)
	%vr4186 = fptosi double %vr4187 to i64

	; bop vr4186 SHL 8
	%vr4192 = shl i64 %vr4186, 8

	; bop vr4179 + vr4192
	%vr4193 = add i64 %vr4179, %vr4192

	; conv vr4193 => vr4194
	%vr4194 = sitofp i64 %vr4193 to double

	; conv SYS_OFFSET => vr4195
	%vr4196 = load i32, i32* @SYS_OFFSET
	%vr4195 = sext i32 %vr4196 to i64

	; bop vr4195 SHL 3
	%vr4197 = shl i64 %vr4195, 3

	; bop THIS + vr4197
	%vr4199 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4200 = inttoptr i64 %vr4197 to %MEMORY_T*
	%vr4198 = add %MEMORY_T* %vr4199, %vr4200

	; bop vr4194 + vr4198+1320
	%vr4202 = ptrtoint %MEMORY_T* %vr4198 to i64
	%vr4203 = add i64 %vr4202, 1320
	%vr4204 = inttoptr i64 %vr4203 to double*
	%vr4205 = load double, double* %vr4204
	%vr4201 = fadd double %vr4194, %vr4205

	; conv SYS_OFFSET => vr4206
	%vr4207 = load i32, i32* @SYS_OFFSET
	%vr4206 = sext i32 %vr4207 to i64

	; bop vr4206 SHL 3
	%vr4208 = shl i64 %vr4206, 3

	; bop THIS + vr4208
	%vr4210 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4211 = inttoptr i64 %vr4208 to %MEMORY_T*
	%vr4209 = add %MEMORY_T* %vr4210, %vr4211

	; store vr4209+1824 := vr4201
	%vr4212 = ptrtoint %MEMORY_T* %vr4209 to i64
	%vr4213 = add i64 %vr4212, 1824
	%vr4214 = inttoptr i64 %vr4213 to double*
	store double %vr4201, double* %vr4214

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F0A:

	; label .Lt_0515
	br label %.Lt_0515
.Lt_0515:

	; conv SYS_OFFSET => vr4216
	%vr4217 = load i32, i32* @SYS_OFFSET
	%vr4216 = sext i32 %vr4217 to i64

	; bop vr4216 + 161
	%vr4218 = add i64 %vr4216, 161
	%vr4219 = bitcast i64 %vr4218 to i64

	; branchbop ADR <> vr4219
	%vr4221 = load i64, i64* %ADR.102
	%vr4220 = icmp ne i64 %vr4221, %vr4219
	br i1 %vr4220, label %.Lt_0517, label %.Lt_0F0B
.Lt_0F0B:

	; label .Lt_0518
	br label %.Lt_0518
.Lt_0518:

	; localvar BFULLSCREEN
	%BFULLSCREEN.106 = alloca i8

	; localvar BTEXTURED
	%BTEXTURED.107 = alloca i8

	; localvar BNOISE
	%BNOISE.108 = alloca i8

	; localvar BLINEAR
	%BLINEAR.109 = alloca i8

	; localvar BNEAREST
	%BNEAREST.110 = alloca i8

	; localvar BNEARESTLINEAR
	%BNEARESTLINEAR.111 = alloca i8

	; localvar BLINEARNEAREST
	%BLINEARNEAREST.112 = alloca i8

	; localvar BMIPMAP
	%BMIPMAP.113 = alloca i8

	; localvar BREPEAT
	%BREPEAT.114 = alloca i8

	; localvar IMG
	%IMG.115 = alloca i8*

	; localvar SCR_W
	%SCR_W.116 = alloca i64

	; localvar SCR_H
	%SCR_H.117 = alloca i64

	; localvar LT_0519
	%LT_0519.118 = alloca i64

	; localvar LT_051A
	%LT_051A.119 = alloca i64

	; localvar LT_051B
	%LT_051B.120 = alloca i64

	; localvar LT_051C
	%LT_051C.121 = alloca i64

	; localvar V3
	%V3.122 = alloca %VEC3

	; localvar SHADER
	%SHADER.123 = alloca %SHADERTOY

	; localvar LT_0529
	%LT_0529.124 = alloca %FBSTRING

	; localvar TEXTURES
	%TEXTURES.125 = alloca [4 x i32]

	; localvar Lt_052A
	%MEMORY_T.FBARRAY1 = type { i32*, i32*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_052A.126 = alloca %MEMORY_T.FBARRAY1

	; localvar ICHANNEL0
	%ICHANNEL0.127 = alloca i32

	; localvar IGLOBALTIME
	%IGLOBALTIME.128 = alloca i32

	; localvar ITIME
	%ITIME.129 = alloca i32

	; localvar IRESOLUTION
	%IRESOLUTION.130 = alloca i32

	; localvar IMOUSE
	%IMOUSE.131 = alloca i32

	; localvar IFRAME
	%IFRAME.132 = alloca i32

	; localvar OX
	%OX.133 = alloca i64

	; localvar OY
	%OY.134 = alloca i64

	; localvar OB
	%OB.135 = alloca i64

	; localvar MX
	%MX.136 = alloca i64

	; localvar MY
	%MY.137 = alloca i64

	; localvar MB
	%MB.138 = alloca i64

	; localvar FRAMES
	%FRAMES.139 = alloca i64

	; localvar FPS
	%FPS.140 = alloca i64

	; localvar TRUNTIME
	%TRUNTIME.141 = alloca double

	; localvar TSTART
	%TSTART.142 = alloca double

	; localvar TNOW
	%TNOW.143 = alloca double

	; localvar TLAST
	%TLAST.144 = alloca double

	; addrof BFULLSCREEN

	; memclear BFULLSCREEN
	%vr4224 = bitcast i8* %BFULLSCREEN.106 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4224, i8 0, i32 1, i32 1, i1 false )

	; addrof BTEXTURED

	; memclear BTEXTURED
	%vr4226 = bitcast i8* %BTEXTURED.107 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4226, i8 0, i32 1, i32 1, i1 false )

	; addrof BNOISE

	; memclear BNOISE
	%vr4228 = bitcast i8* %BNOISE.108 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4228, i8 0, i32 1, i32 1, i1 false )

	; addrof BLINEAR

	; memclear BLINEAR
	%vr4230 = bitcast i8* %BLINEAR.109 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4230, i8 0, i32 1, i32 1, i1 false )

	; addrof BNEAREST

	; memclear BNEAREST
	%vr4232 = bitcast i8* %BNEAREST.110 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4232, i8 0, i32 1, i32 1, i1 false )

	; addrof BNEARESTLINEAR

	; memclear BNEARESTLINEAR
	%vr4234 = bitcast i8* %BNEARESTLINEAR.111 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4234, i8 0, i32 1, i32 1, i1 false )

	; addrof BLINEARNEAREST

	; memclear BLINEARNEAREST
	%vr4236 = bitcast i8* %BLINEARNEAREST.112 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4236, i8 0, i32 1, i32 1, i1 false )

	; addrof BMIPMAP

	; memclear BMIPMAP
	%vr4238 = bitcast i8* %BMIPMAP.113 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4238, i8 0, i32 1, i32 1, i1 false )

	; addrof BREPEAT

	; memclear BREPEAT
	%vr4240 = bitcast i8* %BREPEAT.114 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4240, i8 0, i32 1, i32 1, i1 false )

	; store IMG := 0
	store i8* 0, i8** %IMG.115

	; call GLSCREEN()
	; arg 1920
	; arg 1080
	; arg -1
	; arg -1
	; arg -1
	call void @GLSCREEN( i64 1920, i64 1080, i64 -1, i64 -1, i8 trunc (i64 -1 to i8) )

	; addrof SCR_W

	; memclear SCR_W
	%vr4242 = bitcast i64* %SCR_W.116 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4242, i8 0, i32 8, i32 1, i1 false )

	; addrof SCR_H

	; memclear SCR_H
	%vr4244 = bitcast i64* %SCR_H.117 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4244, i8 0, i32 8, i32 1, i1 false )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr4246 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr4245 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4246, i64 0 )

	; store LT_051C := 0
	store i64 0, i64* %LT_051C.121

	; store LT_051B := 0
	store i64 0, i64* %LT_051B.120

	; store LT_051A := 0
	store i64 0, i64* %LT_051A.119

	; store LT_0519 := 0
	store i64 0, i64* %LT_0519.118

	; addrof SCR_H

	; addrof SCR_W

	; call fb_GfxScreenInfo()
	; arg SCR_W
	; arg SCR_H
	; arg LT_0519
	; arg LT_051A
	; arg LT_051B
	; arg LT_051C
	; arg vr4245
	call void @fb_GfxScreenInfo( i64* %SCR_W.116, i64* %SCR_H.117, i64* %LT_0519.118, i64* %LT_051A.119, i64* %LT_051B.120, i64* %LT_051C.121, %FBSTRING* %vr4245 )

	; addrof V3

	; memclear V3
	%vr4251 = bitcast %VEC3* %V3.122 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4251, i8 0, i32 12, i32 1, i1 false )

	; conv SCR_W => vr4252
	%vr4253 = load i64, i64* %SCR_W.116
	%vr4252 = sitofp i64 %vr4253 to float

	; store V3 := vr4252
	%vr4254 = bitcast %VEC3* %V3.122 to float*
	store float %vr4252, float* %vr4254

	; conv SCR_H => vr4255
	%vr4256 = load i64, i64* %SCR_H.117
	%vr4255 = sitofp i64 %vr4256 to float

	; store V3+4 := vr4255
	%vr4257 = bitcast %VEC3* %V3.122 to float*
	%vr4258 = ptrtoint float* %vr4257 to i64
	%vr4259 = add i64 %vr4258, 4
	%vr4260 = inttoptr i64 %vr4259 to float*
	store float %vr4255, float* %vr4260

	; bop V3 / V3+4
	%vr4262 = bitcast %VEC3* %V3.122 to float*
	%vr4263 = load float, float* %vr4262
	%vr4264 = bitcast %VEC3* %V3.122 to float*
	%vr4265 = ptrtoint float* %vr4264 to i64
	%vr4266 = add i64 %vr4265, 4
	%vr4267 = inttoptr i64 %vr4266 to float*
	%vr4268 = load float, float* %vr4267
	%vr4261 = fdiv float %vr4263, %vr4268

	; store V3+8 := vr4261
	%vr4269 = bitcast %VEC3* %V3.122 to float*
	%vr4270 = ptrtoint float* %vr4269 to i64
	%vr4271 = add i64 %vr4270, 8
	%vr4272 = inttoptr i64 %vr4271 to float*
	store float %vr4261, float* %vr4272

	; addrof SHADER

	; call ()
	; arg SHADER
	call void @_ZN9SHADERTOYC1Ev( %SHADERTOY* %SHADER.123 )
	%vr4274 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrLen()
	; arg vr4274
	; arg -1
	%vr4275 = call i64 @fb_StrLen( i8* %vr4274, i64 -1 )

	; branchbop vr4275 <> 0
	%vr4277 = icmp ne i64 %vr4275, 0
	br i1 %vr4277, label %.Lt_051E, label %.Lt_0F0C
.Lt_0F0C:

	; store BTEXTURED := 0
	store i8 trunc (i64 0 to i8), i8* %BTEXTURED.107
	%vr4278 = bitcast i8* bitcast ([23 x i8]* @Lt_051F to i8*) to i8*
	%vr4279 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr4279
	; arg -1
	; arg vr4278
	; arg 23
	; arg 0
	%vr4280 = call %FBSTRING* @fb_StrAssign( i8* %vr4279, i64 -1, i8* %vr4278, i64 23, i32 0 )

	; label .Lt_051E
	br label %.Lt_051E
.Lt_051E:

	; label .Lt_051D
	br label %.Lt_051D
.Lt_051D:

	; addrof SHADER

	; call COMPILEFILE()
	; arg SHADER
	; arg FILENAME
	%vr4285 = call i8 @_ZN9SHADERTOY11COMPILEFILEER8FBSTRING( %SHADERTOY* %SHADER.123, %FBSTRING* @FILENAME )

	; branchbop vr4285 <> 0
	%vr4286 = icmp ne i8 %vr4285, trunc (i64 0 to i8)
	br i1 %vr4286, label %.Lt_0521, label %.Lt_0F0D
.Lt_0F0D:

	; localvar LT_0524
	%LT_0524.145 = alloca %FBSTRING

	; localvar LT_0525
	%LT_0525.146 = alloca %FBSTRING

	; localvar LT_0526
	%LT_0526.147 = alloca %FBSTRING

	; localvar LT_0527
	%LT_0527.148 = alloca %FBSTRING

	; addrof LT_0527

	; memclear LT_0527
	%vr4288 = bitcast %FBSTRING* %LT_0527.148 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4288, i8 0, i32 24, i32 1, i1 false )

	; addrof SHADER+8
	%vr4290 = bitcast %SHADERTOY* %SHADER.123 to %FBSTRING*
	%vr4291 = ptrtoint %FBSTRING* %vr4290 to i64
	%vr4292 = add i64 %vr4291, 8
	%vr4293 = inttoptr i64 %vr4292 to %FBSTRING*
	%vr4294 = bitcast %FBSTRING* %vr4293 to i8*
	%vr4295 = bitcast i8* bitcast ([3 x i8]* @Lt_0523 to i8*) to i8*
	%vr4296 = bitcast %FBSTRING* @FILENAME to i8*
	%vr4297 = bitcast i8* bitcast ([7 x i8]* @Lt_0522 to i8*) to i8*

	; addrof LT_0524

	; memclear LT_0524
	%vr4299 = bitcast %FBSTRING* %LT_0524.145 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4299, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0524

	; call fb_StrConcat()
	; arg LT_0524
	; arg vr4297
	; arg 7
	; arg vr4296
	; arg -1
	%vr4301 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0524.145, i8* %vr4297, i64 7, i8* %vr4296, i64 -1 )

	; addrof LT_0525

	; memclear LT_0525
	%vr4305 = bitcast %FBSTRING* %LT_0525.146 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4305, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0525

	; call fb_StrConcat()
	; arg LT_0525
	; arg vr4301
	%vr4308 = bitcast %FBSTRING* %vr4301 to i8*
	; arg -1
	; arg vr4295
	; arg 3
	%vr4307 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0525.146, i8* %vr4308, i64 -1, i8* %vr4295, i64 3 )

	; addrof LT_0526

	; memclear LT_0526
	%vr4312 = bitcast %FBSTRING* %LT_0526.147 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4312, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0526

	; call fb_StrConcat()
	; arg LT_0526
	; arg vr4307
	%vr4315 = bitcast %FBSTRING* %vr4307 to i8*
	; arg -1
	; arg vr4294
	; arg -1
	%vr4314 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0526.147, i8* %vr4315, i64 -1, i8* %vr4294, i64 -1 )

	; addrof LT_0527
	%vr4319 = bitcast %FBSTRING* %LT_0527.148 to i8*

	; call fb_StrAssign()
	; arg vr4319
	; arg -1
	; arg vr4314
	%vr4322 = bitcast %FBSTRING* %vr4314 to i8*
	; arg -1
	; arg 0
	%vr4320 = call %FBSTRING* @fb_StrAssign( i8* %vr4319, i64 -1, i8* %vr4322, i64 -1, i32 0 )

	; addrof LT_0527

	; call ERROREXIT()
	; arg LT_0527
	call void @ERROREXIT( %FBSTRING* %LT_0527.148 )

	; addrof LT_0527
	%vr4327 = bitcast %FBSTRING* %LT_0527.148 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr4327
	call void @fb_StrDelete( %FBSTRING* %vr4327 )

	; label .Lt_0521
	br label %.Lt_0521
.Lt_0521:

	; label .Lt_0520
	br label %.Lt_0520
.Lt_0520:
	%vr4328 = bitcast i8* bitcast ([8 x i8]* @Lt_0528 to i8*) to i8*
	%vr4329 = bitcast %FBSTRING* @FILENAME to i8*

	; addrof LT_0529

	; memclear LT_0529
	%vr4331 = bitcast %FBSTRING* %LT_0529.124 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4331, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0529

	; call fb_StrConcat()
	; arg LT_0529
	; arg vr4329
	; arg -1
	; arg vr4328
	; arg 8
	%vr4333 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0529.124, i8* %vr4329, i64 -1, i8* %vr4328, i64 8 )

	; call fb_GfxSetWindowTitle()
	; arg vr4333
	%vr4336 = bitcast %FBSTRING* %vr4333 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr4336 )

	; callptr GLUSEPROGRAM
	%vr4337 = load void ( i32 )*, void ( i32 )** @GLUSEPROGRAM
	; arg SHADER+4
	%vr4338 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4339 = ptrtoint i32* %vr4338 to i64
	%vr4340 = add i64 %vr4339, 4
	%vr4341 = inttoptr i64 %vr4340 to i32*
	%vr4342 = load i32, i32* %vr4341
	call void %vr4337( i32 %vr4342 )

	; addrof TEXTURES

	; memclear TEXTURES
	%vr4344 = bitcast i32* %TEXTURES.125 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4344, i8 0, i32 16, i32 1, i1 false )

	; addrof TEXTURES

	; store Lt_052A := TEXTURES
	%vr4346 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i32**
	store i32* %TEXTURES.125, i32** %vr4346

	; addrof TEXTURES

	; store Lt_052A+8 := TEXTURES
	%vr4348 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i32**
	%vr4349 = ptrtoint i32** %vr4348 to i64
	%vr4350 = add i64 %vr4349, 8
	%vr4351 = inttoptr i64 %vr4350 to i32**
	store i32* %TEXTURES.125, i32** %vr4351

	; store Lt_052A+16 := 16
	%vr4352 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4353 = ptrtoint i64* %vr4352 to i64
	%vr4354 = add i64 %vr4353, 16
	%vr4355 = inttoptr i64 %vr4354 to i64*
	store i64 16, i64* %vr4355

	; store Lt_052A+24 := 4
	%vr4356 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4357 = ptrtoint i64* %vr4356 to i64
	%vr4358 = add i64 %vr4357, 24
	%vr4359 = inttoptr i64 %vr4358 to i64*
	store i64 4, i64* %vr4359

	; store Lt_052A+32 := 1
	%vr4360 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4361 = ptrtoint i64* %vr4360 to i64
	%vr4362 = add i64 %vr4361, 32
	%vr4363 = inttoptr i64 %vr4362 to i64*
	store i64 1, i64* %vr4363

	; store Lt_052A+40 := 4
	%vr4364 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4365 = ptrtoint i64* %vr4364 to i64
	%vr4366 = add i64 %vr4365, 40
	%vr4367 = inttoptr i64 %vr4366 to i64*
	store i64 4, i64* %vr4367

	; store Lt_052A+48 := 0
	%vr4368 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4369 = ptrtoint i64* %vr4368 to i64
	%vr4370 = add i64 %vr4369, 48
	%vr4371 = inttoptr i64 %vr4370 to i64*
	store i64 0, i64* %vr4371

	; store Lt_052A+56 := 3
	%vr4372 = bitcast %MEMORY_T.FBARRAY1* %Lt_052A.126 to i64*
	%vr4373 = ptrtoint i64* %vr4372 to i64
	%vr4374 = add i64 %vr4373, 56
	%vr4375 = inttoptr i64 %vr4374 to i64*
	store i64 3, i64* %vr4375

	; addrof TEXTURES
	%vr4377 = bitcast i32* %TEXTURES.125 to i32*

	; call glGenTextures()
	; arg 4
	; arg vr4377
	call void @glGenTextures( i32 4, i32* %vr4377 )

	; branchbop BTEXTURED == 0
	%vr4379 = load i8, i8* %BTEXTURED.107
	%vr4378 = icmp eq i8 %vr4379, trunc (i64 0 to i8)
	br i1 %vr4378, label %.Lt_052C, label %.Lt_0F0E
.Lt_0F0E:

	; localvar TW
	%TW.149 = alloca i64

	; localvar TH
	%TH.150 = alloca i64

	; localvar TB
	%TB.151 = alloca i64

	; localvar TP
	%TP.152 = alloca i64

	; localvar PIXELS
	%PIXELS.153 = alloca i8*

	; localvar LT_0545
	%LT_0545.154 = alloca i64

	; branchbop IMG <> 0
	%vr4381 = load i8*, i8** %IMG.115
	%vr4380 = icmp ne i8* %vr4381, 0
	br i1 %vr4380, label %.Lt_052E, label %.Lt_0F0F
.Lt_0F0F:

	; call fb_GfxImageCreate()
	; arg 512
	; arg 512
	; arg 4278190080
	; arg 32
	; arg 0
	%vr4382 = call i8* @fb_GfxImageCreate( i32 512, i32 512, i32 4278190080, i32 32, i32 0 )

	; store IMG := vr4382
	store i8* %vr4382, i8** %IMG.115

	; branchbop BNOISE <> -1
	%vr4389 = load i8, i8* %BNOISE.108
	%vr4388 = icmp ne i8 %vr4389, trunc (i64 -1 to i8)
	br i1 %vr4388, label %.Lt_0530, label %.Lt_0F10
.Lt_0F10:

	; localvar Y
	%Y.155 = alloca i64

	; store Y := 0
	store i64 0, i64* %Y.155

	; label .Lt_0534
	br label %.Lt_0534
.Lt_0534:

	; localvar X
	%X.156 = alloca i64

	; store X := 0
	store i64 0, i64* %X.156

	; label .Lt_0538
	br label %.Lt_0538
.Lt_0538:

	; call fb_Rnd()
	; arg 1
	%vr4390 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr4390 * 255
	%vr4391 = fmul double %vr4390, 0x406FE00000000000

	; conv vr4391 => vr4392
	%vr4393 = call double @llvm.nearbyint.f64(double %vr4391)
	%vr4392 = fptoui double %vr4393 to i64

	; bop vr4392 SHL 16
	%vr4395 = bitcast i64 16 to i64
	%vr4394 = shl i64 %vr4392, %vr4395

	; call fb_Rnd()
	; arg 1
	%vr4396 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr4396 * 255
	%vr4397 = fmul double %vr4396, 0x406FE00000000000

	; conv vr4397 => vr4398
	%vr4399 = call double @llvm.nearbyint.f64(double %vr4397)
	%vr4398 = fptoui double %vr4399 to i64

	; bop vr4398 SHL 8
	%vr4401 = bitcast i64 8 to i64
	%vr4400 = shl i64 %vr4398, %vr4401

	; bop vr4394 OR vr4400
	%vr4402 = or i64 %vr4394, %vr4400

	; call fb_Rnd()
	; arg 1
	%vr4403 = call double @fb_Rnd( float 0x3FF0000000000000 )

	; bop vr4403 * 255
	%vr4404 = fmul double %vr4403, 0x406FE00000000000

	; conv vr4404 => vr4405
	%vr4406 = call double @llvm.nearbyint.f64(double %vr4404)
	%vr4405 = fptoui double %vr4406 to i64

	; bop vr4402 OR vr4405
	%vr4407 = or i64 %vr4402, %vr4405

	; bop vr4407 OR 4278190080
	%vr4408 = or i64 %vr4407, 4278190080

	; conv vr4408 => vr4409
	%vr4409 = trunc i64 %vr4408 to i32

	; conv Y => vr4410
	%vr4411 = load i64, i64* %Y.155
	%vr4410 = sitofp i64 %vr4411 to float

	; conv X => vr4412
	%vr4413 = load i64, i64* %X.156
	%vr4412 = sitofp i64 %vr4413 to float

	; call fb_GfxPset()
	; arg IMG
	%vr4414 = load i8*, i8** %IMG.115
	; arg vr4412
	; arg vr4410
	; arg vr4409
	; arg 4
	; arg 0
	call void @fb_GfxPset( i8* %vr4414, float %vr4412, float %vr4410, i32 %vr4409, i32 4, i32 0 )

	; label .Lt_0536
	br label %.Lt_0536
.Lt_0536:

	; bop X + 1
	%vr4418 = load i64, i64* %X.156
	%vr4417 = add i64 %vr4418, 1

	; store X := vr4417
	store i64 %vr4417, i64* %X.156

	; label .Lt_0535
	br label %.Lt_0535
.Lt_0535:

	; branchbop X <= 512
	%vr4420 = load i64, i64* %X.156
	%vr4419 = icmp sle i64 %vr4420, 512
	br i1 %vr4419, label %.Lt_0538, label %.Lt_0F11
.Lt_0F11:

	; label .Lt_0537
	br label %.Lt_0537
.Lt_0537:

	; label .Lt_0532
	br label %.Lt_0532
.Lt_0532:

	; bop Y + 1
	%vr4422 = load i64, i64* %Y.155
	%vr4421 = add i64 %vr4422, 1

	; store Y := vr4421
	store i64 %vr4421, i64* %Y.155

	; label .Lt_0531
	br label %.Lt_0531
.Lt_0531:

	; branchbop Y <= 512
	%vr4424 = load i64, i64* %Y.155
	%vr4423 = icmp sle i64 %vr4424, 512
	br i1 %vr4423, label %.Lt_0534, label %.Lt_0F12
.Lt_0F12:

	; label .Lt_0533
	br label %.Lt_0533
.Lt_0533:

	; goto .Lt_052F
	br label %.Lt_052F
.Lt_0F13:

	; label .Lt_0530
	br label %.Lt_0530
.Lt_0530:

	; localvar Y
	%Y.157 = alloca i64

	; store Y := 0
	store i64 0, i64* %Y.157

	; label .Lt_053C
	br label %.Lt_053C
.Lt_053C:

	; localvar X
	%X.158 = alloca i64

	; store X := 0
	store i64 0, i64* %X.158

	; label .Lt_0540
	br label %.Lt_0540
.Lt_0540:

	; localvar LT_0542
	%LT_0542.159 = alloca i64

	; bop X + Y
	%vr4426 = load i64, i64* %X.158
	%vr4427 = load i64, i64* %Y.157
	%vr4425 = add i64 %vr4426, %vr4427

	; bop vr4425 MOD 2
	%vr4428 = srem i64 %vr4425, 2

	; branchbop vr4428 <> 0
	%vr4429 = icmp ne i64 %vr4428, 0
	br i1 %vr4429, label %.Lt_0541, label %.Lt_0F14
.Lt_0F14:

	; store LT_0542 := 4294967295
	store i64 4294967295, i64* %LT_0542.159

	; goto .Lt_0F15
	br label %.Lt_0F15
.Lt_0F16:

	; label .Lt_0541
	br label %.Lt_0541
.Lt_0541:

	; store LT_0542 := 4278190080
	store i64 4278190080, i64* %LT_0542.159

	; label .Lt_0F15
	br label %.Lt_0F15
.Lt_0F15:

	; conv LT_0542 => vr4430
	%vr4431 = load i64, i64* %LT_0542.159
	%vr4430 = trunc i64 %vr4431 to i32

	; bop Y SHL 9
	%vr4433 = load i64, i64* %Y.157
	%vr4432 = shl i64 %vr4433, 9

	; conv vr4432 => vr4434
	%vr4434 = sitofp i64 %vr4432 to double

	; bop vr4434 / 16
	%vr4435 = fdiv double %vr4434, 0x4030000000000000

	; conv vr4435 => vr4436
	%vr4436 = fptrunc double %vr4435 to float

	; bop X SHL 9
	%vr4438 = load i64, i64* %X.158
	%vr4437 = shl i64 %vr4438, 9

	; conv vr4437 => vr4439
	%vr4439 = sitofp i64 %vr4437 to double

	; bop vr4439 / 16
	%vr4440 = fdiv double %vr4439, 0x4030000000000000

	; conv vr4440 => vr4441
	%vr4441 = fptrunc double %vr4440 to float

	; call fb_GfxLine()
	; arg IMG
	%vr4442 = load i8*, i8** %IMG.115
	; arg vr4441
	; arg vr4436
	; arg 31
	%vr4443 = fpext float 0x403F000000000000 to float
	; arg 31
	%vr4444 = fpext float 0x403F000000000000 to float
	; arg vr4430
	; arg 2
	; arg 65535
	; arg 1
	call void @fb_GfxLine( i8* %vr4442, float %vr4441, float %vr4436, float %vr4443, float %vr4444, i32 %vr4430, i32 2, i32 65535, i32 1 )

	; label .Lt_053E
	br label %.Lt_053E
.Lt_053E:

	; bop X + 1
	%vr4449 = load i64, i64* %X.158
	%vr4448 = add i64 %vr4449, 1

	; store X := vr4448
	store i64 %vr4448, i64* %X.158

	; label .Lt_053D
	br label %.Lt_053D
.Lt_053D:

	; branchbop X <= 32
	%vr4451 = load i64, i64* %X.158
	%vr4450 = icmp sle i64 %vr4451, 32
	br i1 %vr4450, label %.Lt_0540, label %.Lt_0F17
.Lt_0F17:

	; label .Lt_053F
	br label %.Lt_053F
.Lt_053F:

	; label .Lt_053A
	br label %.Lt_053A
.Lt_053A:

	; bop Y + 1
	%vr4453 = load i64, i64* %Y.157
	%vr4452 = add i64 %vr4453, 1

	; store Y := vr4452
	store i64 %vr4452, i64* %Y.157

	; label .Lt_0539
	br label %.Lt_0539
.Lt_0539:

	; branchbop Y <= 32
	%vr4455 = load i64, i64* %Y.157
	%vr4454 = icmp sle i64 %vr4455, 32
	br i1 %vr4454, label %.Lt_053C, label %.Lt_0F18
.Lt_0F18:

	; label .Lt_053B
	br label %.Lt_053B
.Lt_053B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0543
	%vr4457 = bitcast i8* bitcast ([10 x i8]* @Lt_0543 to i8*) to i8*
	; arg 9
	%vr4456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4457, i64 9 )

	; call fb_GfxDrawString()
	; arg IMG
	%vr4460 = load i8*, i8** %IMG.115
	; arg 0
	%vr4461 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr4462 = fpext float 0x0000000000000000 to float
	; arg 4
	; arg vr4456
	%vr4464 = bitcast %FBSTRING* %vr4456 to %FBSTRING*
	; arg 4294901760
	; arg 0
	%vr4466 = bitcast i8* 0 to i8*
	; arg 0
	; arg 0
	; arg 0
	; arg 0
	%vr4459 = call i64 @fb_GfxDrawString( i8* %vr4460, float %vr4461, float %vr4462, i32 4, %FBSTRING* %vr4464, i32 4294901760, i8* %vr4466, i32 0, i8* 0, i8* 0, i8* 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0544
	%vr4469 = bitcast i8* bitcast ([14 x i8]* @Lt_0544 to i8*) to i8*
	; arg 13
	%vr4468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4469, i64 13 )

	; call fb_GfxDrawString()
	; arg IMG
	%vr4472 = load i8*, i8** %IMG.115
	; arg 24
	%vr4473 = fpext float 0x4038000000000000 to float
	; arg 24
	%vr4474 = fpext float 0x4038000000000000 to float
	; arg 4
	; arg vr4468
	%vr4476 = bitcast %FBSTRING* %vr4468 to %FBSTRING*
	; arg 4278255360
	; arg 0
	%vr4478 = bitcast i8* 0 to i8*
	; arg 0
	; arg 0
	; arg 0
	; arg 0
	%vr4471 = call i64 @fb_GfxDrawString( i8* %vr4472, float %vr4473, float %vr4474, i32 4, %FBSTRING* %vr4476, i32 4278255360, i8* %vr4478, i32 0, i8* 0, i8* 0, i8* 0 )

	; label .Lt_052F
	br label %.Lt_052F
.Lt_052F:

	; label .Lt_052E
	br label %.Lt_052E
.Lt_052E:

	; label .Lt_052D
	br label %.Lt_052D
.Lt_052D:

	; addrof TW

	; memclear TW
	%vr4481 = bitcast i64* %TW.149 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4481, i8 0, i32 8, i32 1, i1 false )

	; addrof TH

	; memclear TH
	%vr4483 = bitcast i64* %TH.150 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4483, i8 0, i32 8, i32 1, i1 false )

	; addrof TB

	; memclear TB
	%vr4485 = bitcast i64* %TB.151 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4485, i8 0, i32 8, i32 1, i1 false )

	; addrof TP

	; memclear TP
	%vr4487 = bitcast i64* %TP.152 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4487, i8 0, i32 8, i32 1, i1 false )

	; addrof PIXELS

	; memclear PIXELS
	%vr4489 = bitcast i8** %PIXELS.153 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4489, i8 0, i32 8, i32 1, i1 false )

	; store LT_0545 := 0
	store i64 0, i64* %LT_0545.154

	; addrof PIXELS

	; addrof TP

	; addrof TB

	; addrof TH

	; addrof TW

	; call fb_GfxImageInfo()
	; arg IMG
	%vr4496 = load i8*, i8** %IMG.115
	%vr4497 = bitcast i8* %vr4496 to i8*
	; arg TW
	; arg TH
	; arg TB
	; arg TP
	; arg PIXELS
	; arg LT_0545
	%vr4495 = call i32 @fb_GfxImageInfo( i8* %vr4497, i64* %TW.149, i64* %TH.150, i64* %TB.151, i64* %TP.152, i8** %PIXELS.153, i64* %LT_0545.154 )
	%vr4499 = load i32, i32* %TEXTURES.125
	%vr4498 = bitcast i32 %vr4499 to i32

	; call glBindTexture()
	; arg 3553
	; arg vr4498
	call void @glBindTexture( i32 3553, i32 %vr4498 )

	; branchbop BMIPMAP == 0
	%vr4501 = load i8, i8* %BMIPMAP.113
	%vr4500 = icmp eq i8 %vr4501, trunc (i64 0 to i8)
	br i1 %vr4500, label %.Lt_0547, label %.Lt_0F19
.Lt_0F19:

	; call glTexParameteri()
	; arg 3553
	; arg 33169
	; arg 1
	call void @glTexParameteri( i32 3553, i32 33169, i32 1 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9987
	call void @glTexParameteri( i32 3553, i32 10241, i32 9987 )

	; label .Lt_0547
	br label %.Lt_0547
.Lt_0547:

	; label .Lt_0546
	br label %.Lt_0546
.Lt_0546:

	; branchbop BREPEAT == 0
	%vr4503 = load i8, i8* %BREPEAT.114
	%vr4502 = icmp eq i8 %vr4503, trunc (i64 0 to i8)
	br i1 %vr4502, label %.Lt_0549, label %.Lt_0F1A
.Lt_0F1A:

	; call glTexParameteri()
	; arg 3553
	; arg 10242
	; arg 10497
	call void @glTexParameteri( i32 3553, i32 10242, i32 10497 )

	; call glTexParameteri()
	; arg 3553
	; arg 10243
	; arg 10497
	call void @glTexParameteri( i32 3553, i32 10243, i32 10497 )

	; label .Lt_0549
	br label %.Lt_0549
.Lt_0549:

	; label .Lt_0548
	br label %.Lt_0548
.Lt_0548:

	; branchbop BLINEAR == 0
	%vr4505 = load i8, i8* %BLINEAR.109
	%vr4504 = icmp eq i8 %vr4505, trunc (i64 0 to i8)
	br i1 %vr4504, label %.Lt_054B, label %.Lt_0F1B
.Lt_0F1B:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10241, i32 9729 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10240, i32 9729 )

	; goto .Lt_054A
	br label %.Lt_054A
.Lt_0F1C:

	; label .Lt_054B
	br label %.Lt_054B
.Lt_054B:

	; branchbop BNEAREST == 0
	%vr4507 = load i8, i8* %BNEAREST.110
	%vr4506 = icmp eq i8 %vr4507, trunc (i64 0 to i8)
	br i1 %vr4506, label %.Lt_054C, label %.Lt_0F1D
.Lt_0F1D:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10241, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; goto .Lt_054A
	br label %.Lt_054A
.Lt_0F1E:

	; label .Lt_054C
	br label %.Lt_054C
.Lt_054C:

	; branchbop BNEARESTLINEAR == 0
	%vr4509 = load i8, i8* %BNEARESTLINEAR.111
	%vr4508 = icmp eq i8 %vr4509, trunc (i64 0 to i8)
	br i1 %vr4508, label %.Lt_054D, label %.Lt_0F1F
.Lt_0F1F:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10241, i32 9728 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10240, i32 9729 )

	; goto .Lt_054A
	br label %.Lt_054A
.Lt_0F20:

	; label .Lt_054D
	br label %.Lt_054D
.Lt_054D:

	; branchbop BLINEARNEAREST == 0
	%vr4511 = load i8, i8* %BLINEARNEAREST.112
	%vr4510 = icmp eq i8 %vr4511, trunc (i64 0 to i8)
	br i1 %vr4510, label %.Lt_054E, label %.Lt_0F21
.Lt_0F21:

	; call glTexParameteri()
	; arg 3553
	; arg 10241
	; arg 9729
	call void @glTexParameteri( i32 3553, i32 10241, i32 9729 )

	; call glTexParameteri()
	; arg 3553
	; arg 10240
	; arg 9728
	call void @glTexParameteri( i32 3553, i32 10240, i32 9728 )

	; label .Lt_054E
	br label %.Lt_054E
.Lt_054E:

	; label .Lt_054A
	br label %.Lt_054A
.Lt_054A:

	; conv TH => vr4512
	%vr4513 = load i64, i64* %TH.150
	%vr4512 = trunc i64 %vr4513 to i32

	; conv TW => vr4514
	%vr4515 = load i64, i64* %TW.149
	%vr4514 = trunc i64 %vr4515 to i32

	; call glTexImage2D()
	; arg 3553
	; arg 0
	; arg 6408
	; arg vr4514
	; arg vr4512
	; arg 0
	; arg 32993
	; arg 5121
	; arg PIXELS
	%vr4516 = load i8*, i8** %PIXELS.153
	%vr4517 = bitcast i8* %vr4516 to i8*
	call void @glTexImage2D( i32 3553, i32 0, i32 6408, i32 %vr4514, i32 %vr4512, i32 0, i32 32993, i32 5121, i8* %vr4517 )

	; call fb_GfxImageDestroy()
	; arg IMG
	%vr4518 = load i8*, i8** %IMG.115
	%vr4519 = bitcast i8* %vr4518 to i8*
	call void @fb_GfxImageDestroy( i8* %vr4519 )

	; store IMG := 0
	store i8* 0, i8** %IMG.115

	; call glBindTexture()
	; arg 3553
	; arg 0
	call void @glBindTexture( i32 3553, i32 0 )

	; label .Lt_052C
	br label %.Lt_052C
.Lt_052C:

	; label .Lt_052B
	br label %.Lt_052B
.Lt_052B:

	; callptr GLGETUNIFORMLOCATION
	%vr4521 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4522 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4523 = ptrtoint i32* %vr4522 to i64
	%vr4524 = add i64 %vr4523, 4
	%vr4525 = inttoptr i64 %vr4524 to i32*
	%vr4526 = load i32, i32* %vr4525
	; arg Lt_054F
	%vr4527 = bitcast i8* bitcast ([10 x i8]* @Lt_054F to i8*) to i8*
	%vr4520 = call i32 %vr4521( i32 %vr4526, i8* %vr4527 )

	; store ICHANNEL0 := vr4520
	store i32 %vr4520, i32* %ICHANNEL0.127

	; conv ICHANNEL0 => vr4528
	%vr4529 = load i32, i32* %ICHANNEL0.127
	%vr4528 = sext i32 %vr4529 to i64

	; branchbop vr4528 <= -1
	%vr4530 = icmp sle i64 %vr4528, -1
	br i1 %vr4530, label %.Lt_0551, label %.Lt_0F22
.Lt_0F22:

	; callptr GLUNIFORM1I
	%vr4531 = load void ( i32, i32 )*, void ( i32, i32 )** @GLUNIFORM1I
	; arg ICHANNEL0
	%vr4532 = load i32, i32* %ICHANNEL0.127
	; arg 0
	call void %vr4531( i32 %vr4532, i32 0 )

	; call glActiveTexture()
	; arg 33984
	call void @glActiveTexture( i32 33984 )
	%vr4534 = load i32, i32* %TEXTURES.125
	%vr4533 = bitcast i32 %vr4534 to i32

	; call glBindTexture()
	; arg 3553
	; arg vr4533
	call void @glBindTexture( i32 3553, i32 %vr4533 )

	; label .Lt_0551
	br label %.Lt_0551
.Lt_0551:

	; label .Lt_0550
	br label %.Lt_0550
.Lt_0550:

	; callptr GLGETUNIFORMLOCATION
	%vr4536 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4537 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4538 = ptrtoint i32* %vr4537 to i64
	%vr4539 = add i64 %vr4538, 4
	%vr4540 = inttoptr i64 %vr4539 to i32*
	%vr4541 = load i32, i32* %vr4540
	; arg Lt_0552
	%vr4542 = bitcast i8* bitcast ([12 x i8]* @Lt_0552 to i8*) to i8*
	%vr4535 = call i32 %vr4536( i32 %vr4541, i8* %vr4542 )

	; store IGLOBALTIME := vr4535
	store i32 %vr4535, i32* %IGLOBALTIME.128

	; callptr GLGETUNIFORMLOCATION
	%vr4544 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4545 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4546 = ptrtoint i32* %vr4545 to i64
	%vr4547 = add i64 %vr4546, 4
	%vr4548 = inttoptr i64 %vr4547 to i32*
	%vr4549 = load i32, i32* %vr4548
	; arg Lt_0553
	%vr4550 = bitcast i8* bitcast ([6 x i8]* @Lt_0553 to i8*) to i8*
	%vr4543 = call i32 %vr4544( i32 %vr4549, i8* %vr4550 )

	; store ITIME := vr4543
	store i32 %vr4543, i32* %ITIME.129

	; callptr GLGETUNIFORMLOCATION
	%vr4552 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4553 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4554 = ptrtoint i32* %vr4553 to i64
	%vr4555 = add i64 %vr4554, 4
	%vr4556 = inttoptr i64 %vr4555 to i32*
	%vr4557 = load i32, i32* %vr4556
	; arg Lt_0554
	%vr4558 = bitcast i8* bitcast ([12 x i8]* @Lt_0554 to i8*) to i8*
	%vr4551 = call i32 %vr4552( i32 %vr4557, i8* %vr4558 )

	; store IRESOLUTION := vr4551
	store i32 %vr4551, i32* %IRESOLUTION.130

	; callptr GLGETUNIFORMLOCATION
	%vr4560 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4561 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4562 = ptrtoint i32* %vr4561 to i64
	%vr4563 = add i64 %vr4562, 4
	%vr4564 = inttoptr i64 %vr4563 to i32*
	%vr4565 = load i32, i32* %vr4564
	; arg Lt_0555
	%vr4566 = bitcast i8* bitcast ([7 x i8]* @Lt_0555 to i8*) to i8*
	%vr4559 = call i32 %vr4560( i32 %vr4565, i8* %vr4566 )

	; store IMOUSE := vr4559
	store i32 %vr4559, i32* %IMOUSE.131

	; callptr GLGETUNIFORMLOCATION
	%vr4568 = load i32 ( i32, i8* )*, i32 ( i32, i8* )** @GLGETUNIFORMLOCATION
	; arg SHADER+4
	%vr4569 = bitcast %SHADERTOY* %SHADER.123 to i32*
	%vr4570 = ptrtoint i32* %vr4569 to i64
	%vr4571 = add i64 %vr4570, 4
	%vr4572 = inttoptr i64 %vr4571 to i32*
	%vr4573 = load i32, i32* %vr4572
	; arg Lt_0556
	%vr4574 = bitcast i8* bitcast ([7 x i8]* @Lt_0556 to i8*) to i8*
	%vr4567 = call i32 %vr4568( i32 %vr4573, i8* %vr4574 )

	; store IFRAME := vr4567
	store i32 %vr4567, i32* %IFRAME.132

	; conv IRESOLUTION => vr4575
	%vr4576 = load i32, i32* %IRESOLUTION.130
	%vr4575 = sext i32 %vr4576 to i64

	; branchbop vr4575 <= -1
	%vr4577 = icmp sle i64 %vr4575, -1
	br i1 %vr4577, label %.Lt_0558, label %.Lt_0F23
.Lt_0F23:

	; callptr GLUNIFORM3F
	%vr4578 = load void ( i32, float, float, float )*, void ( i32, float, float, float )** @GLUNIFORM3F
	; arg IRESOLUTION
	%vr4579 = load i32, i32* %IRESOLUTION.130
	; arg V3
	%vr4580 = bitcast %VEC3* %V3.122 to float*
	%vr4581 = load float, float* %vr4580
	; arg V3+4
	%vr4582 = bitcast %VEC3* %V3.122 to float*
	%vr4583 = ptrtoint float* %vr4582 to i64
	%vr4584 = add i64 %vr4583, 4
	%vr4585 = inttoptr i64 %vr4584 to float*
	%vr4586 = load float, float* %vr4585
	; arg V3+8
	%vr4587 = bitcast %VEC3* %V3.122 to float*
	%vr4588 = ptrtoint float* %vr4587 to i64
	%vr4589 = add i64 %vr4588, 8
	%vr4590 = inttoptr i64 %vr4589 to float*
	%vr4591 = load float, float* %vr4590
	call void %vr4578( i32 %vr4579, float %vr4581, float %vr4586, float %vr4591 )

	; label .Lt_0558
	br label %.Lt_0558
.Lt_0558:

	; store OX := -1
	store i64 -1, i64* %OX.133

	; store OY := -1
	store i64 -1, i64* %OY.134

	; store OB := -1
	store i64 -1, i64* %OB.135

	; addrof MX

	; memclear MX
	%vr4593 = bitcast i64* %MX.136 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4593, i8 0, i32 8, i32 1, i1 false )

	; addrof MY

	; memclear MY
	%vr4595 = bitcast i64* %MY.137 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4595, i8 0, i32 8, i32 1, i1 false )

	; addrof MB

	; memclear MB
	%vr4597 = bitcast i64* %MB.138 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4597, i8 0, i32 8, i32 1, i1 false )

	; addrof FRAMES

	; memclear FRAMES
	%vr4599 = bitcast i64* %FRAMES.139 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4599, i8 0, i32 8, i32 1, i1 false )

	; addrof FPS

	; memclear FPS
	%vr4601 = bitcast i64* %FPS.140 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4601, i8 0, i32 8, i32 1, i1 false )

	; addrof TRUNTIME

	; memclear TRUNTIME
	%vr4603 = bitcast double* %TRUNTIME.141 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4603, i8 0, i32 8, i32 1, i1 false )

	; call fb_Timer()
	%vr4604 = call double @fb_Timer(  )

	; store TSTART := vr4604
	store double %vr4604, double* %TSTART.142

	; addrof TNOW

	; memclear TNOW
	%vr4606 = bitcast double* %TNOW.143 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4606, i8 0, i32 8, i32 1, i1 false )

	; store TLAST := TSTART
	%vr4607 = load double, double* %TSTART.142
	store double %vr4607, double* %TLAST.144

	; label .Lt_0559
	br label %.Lt_0559
.Lt_0559:
	%vr4608 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*

	; call fb_Inkey()
	%vr4609 = call %FBSTRING* @fb_Inkey(  )

	; call fb_StrCompare()
	; arg vr4609
	%vr4611 = bitcast %FBSTRING* %vr4609 to i8*
	; arg -1
	; arg vr4608
	; arg 1
	%vr4610 = call i32 @fb_StrCompare( i8* %vr4611, i64 -1, i8* %vr4608, i64 1 )

	; conv vr4610 => vr4614
	%vr4614 = sext i32 %vr4610 to i64

	; branchbop vr4614 <> 0
	%vr4615 = icmp ne i64 %vr4614, 0
	br i1 %vr4615, label %.Lt_055A, label %.Lt_0F24
.Lt_0F24:

	; call fb_Timer()
	%vr4616 = call double @fb_Timer(  )

	; store TNOW := vr4616
	store double %vr4616, double* %TNOW.143

	; bop TNOW - TSTART
	%vr4618 = load double, double* %TNOW.143
	%vr4619 = load double, double* %TSTART.142
	%vr4617 = fsub double %vr4618, %vr4619

	; store TRUNTIME := vr4617
	store double %vr4617, double* %TRUNTIME.141

	; conv ITIME => vr4620
	%vr4621 = load i32, i32* %ITIME.129
	%vr4620 = sext i32 %vr4621 to i64

	; branchbop vr4620 <= -1
	%vr4622 = icmp sle i64 %vr4620, -1
	br i1 %vr4622, label %.Lt_055C, label %.Lt_0F25
.Lt_0F25:

	; conv TRUNTIME => vr4623
	%vr4624 = load double, double* %TRUNTIME.141
	%vr4623 = fptrunc double %vr4624 to float

	; callptr GLUNIFORM1F
	%vr4625 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg ITIME
	%vr4626 = load i32, i32* %ITIME.129
	; arg vr4623
	call void %vr4625( i32 %vr4626, float %vr4623 )

	; goto .Lt_055B
	br label %.Lt_055B
.Lt_0F26:

	; label .Lt_055C
	br label %.Lt_055C
.Lt_055C:

	; conv IGLOBALTIME => vr4627
	%vr4628 = load i32, i32* %IGLOBALTIME.128
	%vr4627 = sext i32 %vr4628 to i64

	; branchbop vr4627 <= -1
	%vr4629 = icmp sle i64 %vr4627, -1
	br i1 %vr4629, label %.Lt_055D, label %.Lt_0F27
.Lt_0F27:

	; conv TRUNTIME => vr4630
	%vr4631 = load double, double* %TRUNTIME.141
	%vr4630 = fptrunc double %vr4631 to float

	; callptr GLUNIFORM1F
	%vr4632 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg IGLOBALTIME
	%vr4633 = load i32, i32* %IGLOBALTIME.128
	; arg vr4630
	call void %vr4632( i32 %vr4633, float %vr4630 )

	; label .Lt_055D
	br label %.Lt_055D
.Lt_055D:

	; label .Lt_055B
	br label %.Lt_055B
.Lt_055B:

	; conv IFRAME => vr4634
	%vr4635 = load i32, i32* %IFRAME.132
	%vr4634 = sext i32 %vr4635 to i64

	; branchbop vr4634 <= -1
	%vr4636 = icmp sle i64 %vr4634, -1
	br i1 %vr4636, label %.Lt_055F, label %.Lt_0F28
.Lt_0F28:

	; conv FRAMES => vr4637
	%vr4638 = load i64, i64* %FRAMES.139
	%vr4637 = sitofp i64 %vr4638 to float

	; callptr GLUNIFORM1F
	%vr4639 = load void ( i32, float )*, void ( i32, float )** @GLUNIFORM1F
	; arg IFRAME
	%vr4640 = load i32, i32* %IFRAME.132
	; arg vr4637
	call void %vr4639( i32 %vr4640, float %vr4637 )

	; label .Lt_055F
	br label %.Lt_055F
.Lt_055F:

	; conv IMOUSE => vr4641
	%vr4642 = load i32, i32* %IMOUSE.131
	%vr4641 = sext i32 %vr4642 to i64

	; branchbop vr4641 <= -1
	%vr4643 = icmp sle i64 %vr4641, -1
	br i1 %vr4643, label %.Lt_0561, label %.Lt_0F29
.Lt_0F29:

	; localvar LT_0562
	%LT_0562.160 = alloca i64

	; localvar LT_0563
	%LT_0563.161 = alloca i64

	; store LT_0563 := 0
	store i64 0, i64* %LT_0563.161

	; addrof MB
	%vr4645 = bitcast i64* %MB.138 to i64*

	; store LT_0562 := 0
	store i64 0, i64* %LT_0562.160

	; addrof MY
	%vr4647 = bitcast i64* %MY.137 to i64*

	; addrof MX
	%vr4649 = bitcast i64* %MX.136 to i64*

	; call fb_GetMouse64()
	; arg vr4649
	; arg vr4647
	; arg LT_0562
	; arg vr4645
	; arg LT_0563
	%vr4650 = call i32 @fb_GetMouse64( i64* %vr4649, i64* %vr4647, i64* %LT_0562.160, i64* %vr4645, i64* %LT_0563.161 )

	; conv vr4650 => vr4651
	%vr4651 = sext i32 %vr4650 to i64

	; branchbop vr4651 <> 0
	%vr4652 = icmp ne i64 %vr4651, 0
	br i1 %vr4652, label %.Lt_0565, label %.Lt_0F2A
.Lt_0F2A:

	; localvar LT_0567
	%LT_0567.162 = alloca i64

	; localvar LT_0569
	%LT_0569.163 = alloca i64

	; branchbop OX <> MX
	%vr4654 = load i64, i64* %OX.133
	%vr4655 = load i64, i64* %MX.136
	%vr4653 = icmp ne i64 %vr4654, %vr4655
	br i1 %vr4653, label %.Lt_0566, label %.Lt_0F2B
.Lt_0F2B:

	; bop OY <> MY
	%vr4657 = load i64, i64* %OY.134
	%vr4658 = load i64, i64* %MY.137
	%vr4656 = icmp ne i64 %vr4657, %vr4658
	%vr4659 = sext i1 %vr4656 to i64

	; store LT_0567 := vr4659
	store i64 %vr4659, i64* %LT_0567.162

	; goto .Lt_0F2C
	br label %.Lt_0F2C
.Lt_0F2D:

	; label .Lt_0566
	br label %.Lt_0566
.Lt_0566:

	; store LT_0567 := -1
	store i64 -1, i64* %LT_0567.162

	; label .Lt_0F2C
	br label %.Lt_0F2C
.Lt_0F2C:

	; branchbop LT_0567 <> 0
	%vr4661 = load i64, i64* %LT_0567.162
	%vr4660 = icmp ne i64 %vr4661, 0
	br i1 %vr4660, label %.Lt_0568, label %.Lt_0F2E
.Lt_0F2E:

	; bop OB <> MB
	%vr4663 = load i64, i64* %OB.135
	%vr4664 = load i64, i64* %MB.138
	%vr4662 = icmp ne i64 %vr4663, %vr4664
	%vr4665 = sext i1 %vr4662 to i64

	; store LT_0569 := vr4665
	store i64 %vr4665, i64* %LT_0569.163

	; goto .Lt_0F2F
	br label %.Lt_0F2F
.Lt_0F30:

	; label .Lt_0568
	br label %.Lt_0568
.Lt_0568:

	; store LT_0569 := -1
	store i64 -1, i64* %LT_0569.163

	; label .Lt_0F2F
	br label %.Lt_0F2F
.Lt_0F2F:

	; branchbop LT_0569 == 0
	%vr4667 = load i64, i64* %LT_0569.163
	%vr4666 = icmp eq i64 %vr4667, 0
	br i1 %vr4666, label %.Lt_056B, label %.Lt_0F31
.Lt_0F31:

	; conv MB => vr4668
	%vr4669 = load i64, i64* %MB.138
	%vr4668 = sitofp i64 %vr4669 to float

	; bop SCR_H - MY
	%vr4671 = load i64, i64* %SCR_H.117
	%vr4672 = load i64, i64* %MY.137
	%vr4670 = sub i64 %vr4671, %vr4672

	; conv vr4670 => vr4673
	%vr4673 = sitofp i64 %vr4670 to float

	; conv MX => vr4674
	%vr4675 = load i64, i64* %MX.136
	%vr4674 = sitofp i64 %vr4675 to float

	; callptr GLUNIFORM4F
	%vr4676 = load void ( i32, float, float, float, float )*, void ( i32, float, float, float, float )** @GLUNIFORM4F
	; arg IMOUSE
	%vr4677 = load i32, i32* %IMOUSE.131
	; arg vr4674
	; arg vr4673
	; arg vr4668
	; arg 1
	call void %vr4676( i32 %vr4677, float %vr4674, float %vr4673, float %vr4668, float 0x3FF0000000000000 )

	; store OX := MX
	%vr4678 = load i64, i64* %MX.136
	store i64 %vr4678, i64* %OX.133

	; store OY := MY
	%vr4679 = load i64, i64* %MY.137
	store i64 %vr4679, i64* %OY.134

	; store OB := MB
	%vr4680 = load i64, i64* %MB.138
	store i64 %vr4680, i64* %OB.135

	; label .Lt_056B
	br label %.Lt_056B
.Lt_056B:

	; label .Lt_056A
	br label %.Lt_056A
.Lt_056A:

	; label .Lt_0565
	br label %.Lt_0565
.Lt_0565:

	; label .Lt_0564
	br label %.Lt_0564
.Lt_0564:

	; label .Lt_0561
	br label %.Lt_0561
.Lt_0561:

	; label .Lt_0560
	br label %.Lt_0560
.Lt_0560:

	; call glRectf()
	; arg -1
	; arg -1
	; arg 1
	; arg 1
	call void @glRectf( float 0xBFF0000000000000, float 0xBFF0000000000000, float 0x3FF0000000000000, float 0x3FF0000000000000 )

	; call fb_GfxFlip()
	; arg -1
	; arg -1
	%vr4681 = call i32 @fb_GfxFlip( i32 -1, i32 -1 )

	; bop FRAMES + 1
	%vr4685 = load i64, i64* %FRAMES.139
	%vr4684 = add i64 %vr4685, 1

	; store FRAMES := vr4684
	store i64 %vr4684, i64* %FRAMES.139

	; bop FRAMES MOD 60
	%vr4687 = load i64, i64* %FRAMES.139
	%vr4686 = srem i64 %vr4687, 60

	; branchbop vr4686 <> 0
	%vr4688 = icmp ne i64 %vr4686, 0
	br i1 %vr4688, label %.Lt_056D, label %.Lt_0F32
.Lt_0F32:

	; localvar LT_056F
	%LT_056F.164 = alloca %FBSTRING

	; localvar LT_0570
	%LT_0570.165 = alloca %FBSTRING

	; call fb_Timer()
	%vr4689 = call double @fb_Timer(  )

	; store TNOW := vr4689
	store double %vr4689, double* %TNOW.143

	; bop TNOW - TLAST
	%vr4691 = load double, double* %TNOW.143
	%vr4692 = load double, double* %TLAST.144
	%vr4690 = fsub double %vr4691, %vr4692

	; bop 60 / vr4690
	%vr4693 = fdiv double 0x404E000000000000, %vr4690

	; conv vr4693 => vr4694
	%vr4695 = call double @llvm.nearbyint.f64(double %vr4693)
	%vr4694 = fptosi double %vr4695 to i64

	; store FPS := vr4694
	store i64 %vr4694, i64* %FPS.140

	; store TLAST := TNOW
	%vr4696 = load double, double* %TNOW.143
	store double %vr4696, double* %TLAST.144

	; call fb_LongintToStr()
	; arg FPS
	%vr4699 = load i64, i64* %FPS.140
	%vr4698 = call %FBSTRING* @fb_LongintToStr( i64 %vr4699 )
	%vr4701 = bitcast i8* bitcast ([7 x i8]* @Lt_056E to i8*) to i8*
	%vr4702 = bitcast %FBSTRING* @FILENAME to i8*

	; addrof LT_056F

	; memclear LT_056F
	%vr4704 = bitcast %FBSTRING* %LT_056F.164 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4704, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_056F

	; call fb_StrConcat()
	; arg LT_056F
	; arg vr4702
	; arg -1
	; arg vr4701
	; arg 7
	%vr4706 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_056F.164, i8* %vr4702, i64 -1, i8* %vr4701, i64 7 )

	; addrof LT_0570

	; memclear LT_0570
	%vr4710 = bitcast %FBSTRING* %LT_0570.165 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4710, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0570

	; call fb_StrConcat()
	; arg LT_0570
	; arg vr4706
	%vr4713 = bitcast %FBSTRING* %vr4706 to i8*
	; arg -1
	; arg vr4698
	%vr4715 = bitcast %FBSTRING* %vr4698 to i8*
	; arg -1
	%vr4712 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0570.165, i8* %vr4713, i64 -1, i8* %vr4715, i64 -1 )

	; call fb_GfxSetWindowTitle()
	; arg vr4712
	%vr4717 = bitcast %FBSTRING* %vr4712 to %FBSTRING*
	call void @fb_GfxSetWindowTitle( %FBSTRING* %vr4717 )

	; label .Lt_056D
	br label %.Lt_056D
.Lt_056D:

	; label .Lt_056C
	br label %.Lt_056C
.Lt_056C:

	; goto .Lt_0559
	br label %.Lt_0559
.Lt_0F33:

	; label .Lt_055A
	br label %.Lt_055A
.Lt_055A:
	%vr4718 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr4719 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr4719
	; arg -1
	; arg vr4718
	; arg 1
	; arg 0
	%vr4720 = call %FBSTRING* @fb_StrAssign( i8* %vr4719, i64 -1, i8* %vr4718, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr4724 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr4733 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr4732 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4733, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr4735 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr4736 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr4732
	%vr4739 = bitcast %FBSTRING* %vr4732 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr4735, float %vr4736, i32 4278190080, i32 0, %FBSTRING* %vr4739, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store i32 0, i32* @OFFSET

	; label .Lt_0574
	br label %.Lt_0574
.Lt_0574:

	; conv SYS_OFFSET => vr4742
	%vr4743 = load i32, i32* @SYS_OFFSET
	%vr4742 = sext i32 %vr4743 to i64

	; bop vr4742 SHL 3
	%vr4744 = shl i64 %vr4742, 3

	; bop THIS + vr4744
	%vr4746 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr4747 = inttoptr i64 %vr4744 to %MEMORY_T*
	%vr4745 = add %MEMORY_T* %vr4746, %vr4747

	; conv OFFSET => vr4748
	%vr4749 = load i32, i32* @OFFSET
	%vr4748 = sext i32 %vr4749 to i64

	; conv vr4748 => vr4750
	%vr4750 = sitofp i64 %vr4748 to double

	; bop vr4745+2392 + vr4750
	%vr4752 = ptrtoint %MEMORY_T* %vr4745 to i64
	%vr4753 = add i64 %vr4752, 2392
	%vr4754 = inttoptr i64 %vr4753 to double*
	%vr4755 = load double, double* %vr4754
	%vr4751 = fadd double %vr4755, %vr4750

	; conv vr4751 => vr4756
	%vr4757 = call double @llvm.nearbyint.f64(double %vr4751)
	%vr4756 = fptoui double %vr4757 to i64

	; call POKE64()
	; arg THIS
	%vr4758 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr4756
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr4758, i64 %vr4756, i64 32 )

	; label .Lt_0572
	br label %.Lt_0572
.Lt_0572:

	; conv OFFSET => vr4759
	%vr4760 = load i32, i32* @OFFSET
	%vr4759 = sext i32 %vr4760 to i64

	; bop vr4759 + 1
	%vr4761 = add i64 %vr4759, 1

	; conv vr4761 => vr4762
	%vr4762 = trunc i64 %vr4761 to i32

	; store OFFSET := vr4762
	store i32 %vr4762, i32* @OFFSET

	; label .Lt_0571
	br label %.Lt_0571
.Lt_0571:

	; conv OFFSET => vr4763
	%vr4764 = load i32, i32* @OFFSET
	%vr4763 = sext i32 %vr4764 to i64

	; branchbop vr4763 <= 1024
	%vr4765 = icmp sle i64 %vr4763, 1024
	br i1 %vr4765, label %.Lt_0574, label %.Lt_0F34
.Lt_0F34:

	; label .Lt_0573
	br label %.Lt_0573
.Lt_0573:

	; addrof SHADER

	; call ()
	; arg SHADER
	call void @_ZN9SHADERTOYD1Ev( %SHADERTOY* %SHADER.123 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_0F35:

	; label .Lt_0517
	br label %.Lt_0517
.Lt_0517:

	; conv SYS_OFFSET => vr4768
	%vr4769 = load i32, i32* @SYS_OFFSET
	%vr4768 = sext i32 %vr4769 to i64

	; bop vr4768 + 162
	%vr4770 = add i64 %vr4768, 162
	%vr4771 = bitcast i64 %vr4770 to i64

	; branchbop ADR <> vr4771
	%vr4773 = load i64, i64* %ADR.102
	%vr4772 = icmp ne i64 %vr4773, %vr4771
	br i1 %vr4772, label %.Lt_0575, label %.Lt_0F36
.Lt_0F36:

	; label .Lt_0576
	br label %.Lt_0576
.Lt_0576:

	; branchbop V <> 0
	%vr4777 = load i64, i64* %V.103
	%vr4776 = icmp ne i64 %vr4777, 0
	br i1 %vr4776, label %.Lt_0578, label %.Lt_0F37
.Lt_0F37:

	; label .Lt_0579
	br label %.Lt_0579
.Lt_0579:
	%vr4779 = bitcast i8* bitcast ([9 x i8]* @Lt_057A to i8*) to i8*
	%vr4780 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr4780
	; arg -1
	; arg vr4779
	; arg 9
	; arg 0
	%vr4781 = call %FBSTRING* @fb_StrAssign( i8* %vr4780, i64 -1, i8* %vr4779, i64 9, i32 0 )
	%vr4785 = bitcast %FBSTRING* @FILENAME to %FBSTRING*

	; call fb_FileOpen()
	; arg vr4785
	; arg 3
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr4786 = call i32 @fb_FileOpen( %FBSTRING* %vr4785, i32 3, i32 0, i32 0, i32 1, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_057B
	%vr4793 = bitcast i8* bitcast ([19 x i8]* @Lt_057B to i8*) to i8*
	; arg 18
	%vr4792 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4793, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr4792
	%vr4796 = bitcast %FBSTRING* %vr4792 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4796, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_057C
	%vr4799 = bitcast i8* bitcast ([75 x i8]* @Lt_057C to i8*) to i8*
	; arg 74
	%vr4798 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4799, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr4798
	%vr4802 = bitcast %FBSTRING* %vr4798 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4802, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_057D
	%vr4805 = bitcast i8* bitcast ([72 x i8]* @Lt_057D to i8*) to i8*
	; arg 71
	%vr4804 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4805, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr4804
	%vr4808 = bitcast %FBSTRING* %vr4804 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4808, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_057E
	%vr4811 = bitcast i8* bitcast ([79 x i8]* @Lt_057E to i8*) to i8*
	; arg 78
	%vr4810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4811, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr4810
	%vr4814 = bitcast %FBSTRING* %vr4810 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4814, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_057F
	%vr4817 = bitcast i8* bitcast ([53 x i8]* @Lt_057F to i8*) to i8*
	; arg 52
	%vr4816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4817, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr4816
	%vr4820 = bitcast %FBSTRING* %vr4816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4820, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0580
	%vr4823 = bitcast i8* bitcast ([66 x i8]* @Lt_0580 to i8*) to i8*
	; arg 65
	%vr4822 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4823, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr4822
	%vr4826 = bitcast %FBSTRING* %vr4822 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4826, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0581
	%vr4829 = bitcast i8* bitcast ([59 x i8]* @Lt_0581 to i8*) to i8*
	; arg 58
	%vr4828 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4829, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr4828
	%vr4832 = bitcast %FBSTRING* %vr4828 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4832, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0582
	%vr4835 = bitcast i8* bitcast ([68 x i8]* @Lt_0582 to i8*) to i8*
	; arg 67
	%vr4834 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4835, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr4834
	%vr4838 = bitcast %FBSTRING* %vr4834 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4838, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0583
	%vr4841 = bitcast i8* bitcast ([60 x i8]* @Lt_0583 to i8*) to i8*
	; arg 59
	%vr4840 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4841, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr4840
	%vr4844 = bitcast %FBSTRING* %vr4840 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4844, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0584
	%vr4847 = bitcast i8* bitcast ([69 x i8]* @Lt_0584 to i8*) to i8*
	; arg 68
	%vr4846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4847, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr4846
	%vr4850 = bitcast %FBSTRING* %vr4846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4850, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0585
	%vr4853 = bitcast i8* bitcast ([70 x i8]* @Lt_0585 to i8*) to i8*
	; arg 69
	%vr4852 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4853, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr4852
	%vr4856 = bitcast %FBSTRING* %vr4852 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4856, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0586
	%vr4859 = bitcast i8* bitcast ([67 x i8]* @Lt_0586 to i8*) to i8*
	; arg 66
	%vr4858 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4859, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr4858
	%vr4862 = bitcast %FBSTRING* %vr4858 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4862, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0587
	%vr4865 = bitcast i8* bitcast ([60 x i8]* @Lt_0587 to i8*) to i8*
	; arg 59
	%vr4864 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4865, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr4864
	%vr4868 = bitcast %FBSTRING* %vr4864 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4868, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0588
	%vr4871 = bitcast i8* bitcast ([64 x i8]* @Lt_0588 to i8*) to i8*
	; arg 63
	%vr4870 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4871, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr4870
	%vr4874 = bitcast %FBSTRING* %vr4870 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4874, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0589
	%vr4877 = bitcast i8* bitcast ([67 x i8]* @Lt_0589 to i8*) to i8*
	; arg 66
	%vr4876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4877, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr4876
	%vr4880 = bitcast %FBSTRING* %vr4876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4880, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058A
	%vr4883 = bitcast i8* bitcast ([72 x i8]* @Lt_058A to i8*) to i8*
	; arg 71
	%vr4882 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4883, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr4882
	%vr4886 = bitcast %FBSTRING* %vr4882 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4886, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058B
	%vr4889 = bitcast i8* bitcast ([73 x i8]* @Lt_058B to i8*) to i8*
	; arg 72
	%vr4888 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4889, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr4888
	%vr4892 = bitcast %FBSTRING* %vr4888 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4892, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058C
	%vr4895 = bitcast i8* bitcast ([73 x i8]* @Lt_058C to i8*) to i8*
	; arg 72
	%vr4894 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4895, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr4894
	%vr4898 = bitcast %FBSTRING* %vr4894 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4898, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058D
	%vr4901 = bitcast i8* bitcast ([70 x i8]* @Lt_058D to i8*) to i8*
	; arg 69
	%vr4900 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4901, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr4900
	%vr4904 = bitcast %FBSTRING* %vr4900 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4904, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058E
	%vr4907 = bitcast i8* bitcast ([71 x i8]* @Lt_058E to i8*) to i8*
	; arg 70
	%vr4906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4907, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr4906
	%vr4910 = bitcast %FBSTRING* %vr4906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4910, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_058F
	%vr4913 = bitcast i8* bitcast ([61 x i8]* @Lt_058F to i8*) to i8*
	; arg 60
	%vr4912 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4913, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr4912
	%vr4916 = bitcast %FBSTRING* %vr4912 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4916, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0590
	%vr4919 = bitcast i8* bitcast ([41 x i8]* @Lt_0590 to i8*) to i8*
	; arg 40
	%vr4918 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4919, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr4918
	%vr4922 = bitcast %FBSTRING* %vr4918 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4922, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr4925 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr4924 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4925, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr4924
	%vr4928 = bitcast %FBSTRING* %vr4924 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4928, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0591
	%vr4931 = bitcast i8* bitcast ([67 x i8]* @Lt_0591 to i8*) to i8*
	; arg 66
	%vr4930 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4931, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr4930
	%vr4934 = bitcast %FBSTRING* %vr4930 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4934, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0592
	%vr4937 = bitcast i8* bitcast ([67 x i8]* @Lt_0592 to i8*) to i8*
	; arg 66
	%vr4936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4937, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr4936
	%vr4940 = bitcast %FBSTRING* %vr4936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4940, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0593
	%vr4943 = bitcast i8* bitcast ([60 x i8]* @Lt_0593 to i8*) to i8*
	; arg 59
	%vr4942 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4943, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr4942
	%vr4946 = bitcast %FBSTRING* %vr4942 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4946, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0594
	%vr4949 = bitcast i8* bitcast ([63 x i8]* @Lt_0594 to i8*) to i8*
	; arg 62
	%vr4948 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4949, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr4948
	%vr4952 = bitcast %FBSTRING* %vr4948 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4952, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0595
	%vr4955 = bitcast i8* bitcast ([64 x i8]* @Lt_0595 to i8*) to i8*
	; arg 63
	%vr4954 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4955, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr4954
	%vr4958 = bitcast %FBSTRING* %vr4954 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4958, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0596
	%vr4961 = bitcast i8* bitcast ([70 x i8]* @Lt_0596 to i8*) to i8*
	; arg 69
	%vr4960 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4961, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr4960
	%vr4964 = bitcast %FBSTRING* %vr4960 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4964, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0597
	%vr4967 = bitcast i8* bitcast ([65 x i8]* @Lt_0597 to i8*) to i8*
	; arg 64
	%vr4966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4967, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr4966
	%vr4970 = bitcast %FBSTRING* %vr4966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4970, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0598
	%vr4973 = bitcast i8* bitcast ([29 x i8]* @Lt_0598 to i8*) to i8*
	; arg 28
	%vr4972 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4973, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr4972
	%vr4976 = bitcast %FBSTRING* %vr4972 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4976, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0599
	%vr4979 = bitcast i8* bitcast ([22 x i8]* @Lt_0599 to i8*) to i8*
	; arg 21
	%vr4978 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4979, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr4978
	%vr4982 = bitcast %FBSTRING* %vr4978 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4982, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059A
	%vr4985 = bitcast i8* bitcast ([13 x i8]* @Lt_059A to i8*) to i8*
	; arg 12
	%vr4984 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4985, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr4984
	%vr4988 = bitcast %FBSTRING* %vr4984 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4988, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr4991 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr4990 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4991, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr4990
	%vr4994 = bitcast %FBSTRING* %vr4990 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr4994, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059C
	%vr4997 = bitcast i8* bitcast ([26 x i8]* @Lt_059C to i8*) to i8*
	; arg 25
	%vr4996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr4997, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr4996
	%vr5000 = bitcast %FBSTRING* %vr4996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5000, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr5003 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr5002 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5003, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr5002
	%vr5006 = bitcast %FBSTRING* %vr5002 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5006, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5009 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5008 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5009, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5008
	%vr5012 = bitcast %FBSTRING* %vr5008 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5012, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059E
	%vr5015 = bitcast i8* bitcast ([29 x i8]* @Lt_059E to i8*) to i8*
	; arg 28
	%vr5014 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5015, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr5014
	%vr5018 = bitcast %FBSTRING* %vr5014 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5018, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5021 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5020 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5021, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5020
	%vr5024 = bitcast %FBSTRING* %vr5020 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5024, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059F
	%vr5027 = bitcast i8* bitcast ([19 x i8]* @Lt_059F to i8*) to i8*
	; arg 18
	%vr5026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5027, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr5026
	%vr5030 = bitcast %FBSTRING* %vr5026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5030, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A0
	%vr5033 = bitcast i8* bitcast ([20 x i8]* @Lt_05A0 to i8*) to i8*
	; arg 19
	%vr5032 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5033, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr5032
	%vr5036 = bitcast %FBSTRING* %vr5032 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5036, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5039 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5038 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5039, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5038
	%vr5042 = bitcast %FBSTRING* %vr5038 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5042, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A1
	%vr5045 = bitcast i8* bitcast ([7 x i8]* @Lt_05A1 to i8*) to i8*
	; arg 6
	%vr5044 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5045, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr5044
	%vr5048 = bitcast %FBSTRING* %vr5044 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5048, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A2
	%vr5051 = bitcast i8* bitcast ([26 x i8]* @Lt_05A2 to i8*) to i8*
	; arg 25
	%vr5050 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5051, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr5050
	%vr5054 = bitcast %FBSTRING* %vr5050 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5054, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A3
	%vr5057 = bitcast i8* bitcast ([26 x i8]* @Lt_05A3 to i8*) to i8*
	; arg 25
	%vr5056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5057, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr5056
	%vr5060 = bitcast %FBSTRING* %vr5056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5060, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A4
	%vr5063 = bitcast i8* bitcast ([25 x i8]* @Lt_05A4 to i8*) to i8*
	; arg 24
	%vr5062 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5063, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr5062
	%vr5066 = bitcast %FBSTRING* %vr5062 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5066, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr5069 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr5068 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5069, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr5068
	%vr5072 = bitcast %FBSTRING* %vr5068 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5072, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A5
	%vr5075 = bitcast i8* bitcast ([20 x i8]* @Lt_05A5 to i8*) to i8*
	; arg 19
	%vr5074 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5075, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr5074
	%vr5078 = bitcast %FBSTRING* %vr5074 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5078, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A6
	%vr5081 = bitcast i8* bitcast ([24 x i8]* @Lt_05A6 to i8*) to i8*
	; arg 23
	%vr5080 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5081, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr5080
	%vr5084 = bitcast %FBSTRING* %vr5080 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5084, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A7
	%vr5087 = bitcast i8* bitcast ([21 x i8]* @Lt_05A7 to i8*) to i8*
	; arg 20
	%vr5086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5087, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5086
	%vr5090 = bitcast %FBSTRING* %vr5086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5090, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr5093 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr5092 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5093, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr5092
	%vr5096 = bitcast %FBSTRING* %vr5092 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5096, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5099 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5098 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5099, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5098
	%vr5102 = bitcast %FBSTRING* %vr5098 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5102, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A8
	%vr5105 = bitcast i8* bitcast ([87 x i8]* @Lt_05A8 to i8*) to i8*
	; arg 86
	%vr5104 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5105, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr5104
	%vr5108 = bitcast %FBSTRING* %vr5104 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5108, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5111 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5111, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5110
	%vr5114 = bitcast %FBSTRING* %vr5110 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5114, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05A9
	%vr5117 = bitcast i8* bitcast ([33 x i8]* @Lt_05A9 to i8*) to i8*
	; arg 32
	%vr5116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5117, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr5116
	%vr5120 = bitcast %FBSTRING* %vr5116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5120, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AA
	%vr5123 = bitcast i8* bitcast ([18 x i8]* @Lt_05AA to i8*) to i8*
	; arg 17
	%vr5122 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5123, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr5122
	%vr5126 = bitcast %FBSTRING* %vr5122 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5126, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AB
	%vr5129 = bitcast i8* bitcast ([22 x i8]* @Lt_05AB to i8*) to i8*
	; arg 21
	%vr5128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5129, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr5128
	%vr5132 = bitcast %FBSTRING* %vr5128 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5132, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5135 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5134 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5135, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5134
	%vr5138 = bitcast %FBSTRING* %vr5134 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5138, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AC
	%vr5141 = bitcast i8* bitcast ([28 x i8]* @Lt_05AC to i8*) to i8*
	; arg 27
	%vr5140 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5141, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5140
	%vr5144 = bitcast %FBSTRING* %vr5140 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5144, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AD
	%vr5147 = bitcast i8* bitcast ([27 x i8]* @Lt_05AD to i8*) to i8*
	; arg 26
	%vr5146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5147, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr5146
	%vr5150 = bitcast %FBSTRING* %vr5146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5150, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5153 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5153, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5152
	%vr5156 = bitcast %FBSTRING* %vr5152 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5156, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AE
	%vr5159 = bitcast i8* bitcast ([19 x i8]* @Lt_05AE to i8*) to i8*
	; arg 18
	%vr5158 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5159, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr5158
	%vr5162 = bitcast %FBSTRING* %vr5158 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5162, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05AF
	%vr5165 = bitcast i8* bitcast ([21 x i8]* @Lt_05AF to i8*) to i8*
	; arg 20
	%vr5164 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5165, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5164
	%vr5168 = bitcast %FBSTRING* %vr5164 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5168, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B0
	%vr5171 = bitcast i8* bitcast ([23 x i8]* @Lt_05B0 to i8*) to i8*
	; arg 22
	%vr5170 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5171, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr5170
	%vr5174 = bitcast %FBSTRING* %vr5170 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5174, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B1
	%vr5177 = bitcast i8* bitcast ([28 x i8]* @Lt_05B1 to i8*) to i8*
	; arg 27
	%vr5176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5177, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5176
	%vr5180 = bitcast %FBSTRING* %vr5176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5180, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B2
	%vr5183 = bitcast i8* bitcast ([17 x i8]* @Lt_05B2 to i8*) to i8*
	; arg 16
	%vr5182 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5183, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr5182
	%vr5186 = bitcast %FBSTRING* %vr5182 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5186, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B3
	%vr5189 = bitcast i8* bitcast ([16 x i8]* @Lt_05B3 to i8*) to i8*
	; arg 15
	%vr5188 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5189, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr5188
	%vr5192 = bitcast %FBSTRING* %vr5188 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5192, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5195 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5194 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5195, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5194
	%vr5198 = bitcast %FBSTRING* %vr5194 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5198, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B4
	%vr5201 = bitcast i8* bitcast ([24 x i8]* @Lt_05B4 to i8*) to i8*
	; arg 23
	%vr5200 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5201, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr5200
	%vr5204 = bitcast %FBSTRING* %vr5200 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5204, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B5
	%vr5207 = bitcast i8* bitcast ([24 x i8]* @Lt_05B5 to i8*) to i8*
	; arg 23
	%vr5206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5207, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr5206
	%vr5210 = bitcast %FBSTRING* %vr5206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5210, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B6
	%vr5213 = bitcast i8* bitcast ([43 x i8]* @Lt_05B6 to i8*) to i8*
	; arg 42
	%vr5212 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5213, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr5212
	%vr5216 = bitcast %FBSTRING* %vr5212 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5216, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B7
	%vr5219 = bitcast i8* bitcast ([38 x i8]* @Lt_05B7 to i8*) to i8*
	; arg 37
	%vr5218 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5219, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr5218
	%vr5222 = bitcast %FBSTRING* %vr5218 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5222, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5225 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5224 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5225, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5224
	%vr5228 = bitcast %FBSTRING* %vr5224 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5228, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05B8
	%vr5231 = bitcast i8* bitcast ([43 x i8]* @Lt_05B8 to i8*) to i8*
	; arg 42
	%vr5230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5231, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr5230
	%vr5234 = bitcast %FBSTRING* %vr5230 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5234, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5237 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5237, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5236
	%vr5240 = bitcast %FBSTRING* %vr5236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5240, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BA
	%vr5243 = bitcast i8* bitcast ([125 x i8]* @Lt_05BA to i8*) to i8*
	; arg 124
	%vr5242 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5243, i64 124 )

	; call fb_PrintString()
	; arg 1
	; arg vr5242
	%vr5246 = bitcast %FBSTRING* %vr5242 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5246, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5249 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5248 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5249, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5248
	%vr5252 = bitcast %FBSTRING* %vr5248 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5252, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BB
	%vr5255 = bitcast i8* bitcast ([22 x i8]* @Lt_05BB to i8*) to i8*
	; arg 21
	%vr5254 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5255, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr5254
	%vr5258 = bitcast %FBSTRING* %vr5254 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5258, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BC
	%vr5261 = bitcast i8* bitcast ([24 x i8]* @Lt_05BC to i8*) to i8*
	; arg 23
	%vr5260 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5261, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr5260
	%vr5264 = bitcast %FBSTRING* %vr5260 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5264, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5267 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5267, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5266
	%vr5270 = bitcast %FBSTRING* %vr5266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5270, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BD
	%vr5273 = bitcast i8* bitcast ([20 x i8]* @Lt_05BD to i8*) to i8*
	; arg 19
	%vr5272 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5273, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr5272
	%vr5276 = bitcast %FBSTRING* %vr5272 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5276, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BE
	%vr5279 = bitcast i8* bitcast ([21 x i8]* @Lt_05BE to i8*) to i8*
	; arg 20
	%vr5278 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5279, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5278
	%vr5282 = bitcast %FBSTRING* %vr5278 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5282, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5285 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5284 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5285, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5284
	%vr5288 = bitcast %FBSTRING* %vr5284 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5288, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05BF
	%vr5291 = bitcast i8* bitcast ([21 x i8]* @Lt_05BF to i8*) to i8*
	; arg 20
	%vr5290 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5291, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5290
	%vr5294 = bitcast %FBSTRING* %vr5290 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5294, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C0
	%vr5297 = bitcast i8* bitcast ([21 x i8]* @Lt_05C0 to i8*) to i8*
	; arg 20
	%vr5296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5297, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5296
	%vr5300 = bitcast %FBSTRING* %vr5296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5300, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C1
	%vr5303 = bitcast i8* bitcast ([22 x i8]* @Lt_05C1 to i8*) to i8*
	; arg 21
	%vr5302 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5303, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr5302
	%vr5306 = bitcast %FBSTRING* %vr5302 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5306, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5309 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5308 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5309, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5308
	%vr5312 = bitcast %FBSTRING* %vr5308 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5312, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C2
	%vr5315 = bitcast i8* bitcast ([26 x i8]* @Lt_05C2 to i8*) to i8*
	; arg 25
	%vr5314 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5315, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr5314
	%vr5318 = bitcast %FBSTRING* %vr5314 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5318, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C3
	%vr5321 = bitcast i8* bitcast ([25 x i8]* @Lt_05C3 to i8*) to i8*
	; arg 24
	%vr5320 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5321, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr5320
	%vr5324 = bitcast %FBSTRING* %vr5320 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5324, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C4
	%vr5327 = bitcast i8* bitcast ([25 x i8]* @Lt_05C4 to i8*) to i8*
	; arg 24
	%vr5326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5327, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr5326
	%vr5330 = bitcast %FBSTRING* %vr5326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5330, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C5
	%vr5333 = bitcast i8* bitcast ([25 x i8]* @Lt_05C5 to i8*) to i8*
	; arg 24
	%vr5332 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5333, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr5332
	%vr5336 = bitcast %FBSTRING* %vr5332 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5336, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5339 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5338 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5339, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5338
	%vr5342 = bitcast %FBSTRING* %vr5338 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5342, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C6
	%vr5345 = bitcast i8* bitcast ([20 x i8]* @Lt_05C6 to i8*) to i8*
	; arg 19
	%vr5344 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5345, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr5344
	%vr5348 = bitcast %FBSTRING* %vr5344 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5348, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5351 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5350 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5351, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5350
	%vr5354 = bitcast %FBSTRING* %vr5350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5354, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C7
	%vr5357 = bitcast i8* bitcast ([19 x i8]* @Lt_05C7 to i8*) to i8*
	; arg 18
	%vr5356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5357, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr5356
	%vr5360 = bitcast %FBSTRING* %vr5356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5360, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C8
	%vr5363 = bitcast i8* bitcast ([28 x i8]* @Lt_05C8 to i8*) to i8*
	; arg 27
	%vr5362 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5363, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5362
	%vr5366 = bitcast %FBSTRING* %vr5362 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5366, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C9
	%vr5369 = bitcast i8* bitcast ([29 x i8]* @Lt_05C9 to i8*) to i8*
	; arg 28
	%vr5368 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5369, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr5368
	%vr5372 = bitcast %FBSTRING* %vr5368 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5372, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CA
	%vr5375 = bitcast i8* bitcast ([37 x i8]* @Lt_05CA to i8*) to i8*
	; arg 36
	%vr5374 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5375, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr5374
	%vr5378 = bitcast %FBSTRING* %vr5374 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5378, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CB
	%vr5381 = bitcast i8* bitcast ([40 x i8]* @Lt_05CB to i8*) to i8*
	; arg 39
	%vr5380 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5381, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr5380
	%vr5384 = bitcast %FBSTRING* %vr5380 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5384, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CC
	%vr5387 = bitcast i8* bitcast ([44 x i8]* @Lt_05CC to i8*) to i8*
	; arg 43
	%vr5386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5387, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr5386
	%vr5390 = bitcast %FBSTRING* %vr5386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5390, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CD
	%vr5393 = bitcast i8* bitcast ([30 x i8]* @Lt_05CD to i8*) to i8*
	; arg 29
	%vr5392 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5393, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr5392
	%vr5396 = bitcast %FBSTRING* %vr5392 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5396, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CE
	%vr5399 = bitcast i8* bitcast ([28 x i8]* @Lt_05CE to i8*) to i8*
	; arg 27
	%vr5398 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5399, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5398
	%vr5402 = bitcast %FBSTRING* %vr5398 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5402, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CF
	%vr5405 = bitcast i8* bitcast ([34 x i8]* @Lt_05CF to i8*) to i8*
	; arg 33
	%vr5404 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5405, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr5404
	%vr5408 = bitcast %FBSTRING* %vr5404 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5408, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D0
	%vr5411 = bitcast i8* bitcast ([45 x i8]* @Lt_05D0 to i8*) to i8*
	; arg 44
	%vr5410 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5411, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr5410
	%vr5414 = bitcast %FBSTRING* %vr5410 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5414, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D1
	%vr5417 = bitcast i8* bitcast ([29 x i8]* @Lt_05D1 to i8*) to i8*
	; arg 28
	%vr5416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5417, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr5416
	%vr5420 = bitcast %FBSTRING* %vr5416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5420, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C8
	%vr5423 = bitcast i8* bitcast ([28 x i8]* @Lt_05C8 to i8*) to i8*
	; arg 27
	%vr5422 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5423, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5422
	%vr5426 = bitcast %FBSTRING* %vr5422 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5426, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CF
	%vr5429 = bitcast i8* bitcast ([34 x i8]* @Lt_05CF to i8*) to i8*
	; arg 33
	%vr5428 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5429, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr5428
	%vr5432 = bitcast %FBSTRING* %vr5428 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5432, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D2
	%vr5435 = bitcast i8* bitcast ([63 x i8]* @Lt_05D2 to i8*) to i8*
	; arg 62
	%vr5434 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5435, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr5434
	%vr5438 = bitcast %FBSTRING* %vr5434 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5438, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CD
	%vr5441 = bitcast i8* bitcast ([30 x i8]* @Lt_05CD to i8*) to i8*
	; arg 29
	%vr5440 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5441, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr5440
	%vr5444 = bitcast %FBSTRING* %vr5440 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5444, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05CE
	%vr5447 = bitcast i8* bitcast ([28 x i8]* @Lt_05CE to i8*) to i8*
	; arg 27
	%vr5446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5447, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5446
	%vr5450 = bitcast %FBSTRING* %vr5446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5450, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D3
	%vr5453 = bitcast i8* bitcast ([34 x i8]* @Lt_05D3 to i8*) to i8*
	; arg 33
	%vr5452 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5453, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr5452
	%vr5456 = bitcast %FBSTRING* %vr5452 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5456, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D4
	%vr5459 = bitcast i8* bitcast ([64 x i8]* @Lt_05D4 to i8*) to i8*
	; arg 63
	%vr5458 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5459, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr5458
	%vr5462 = bitcast %FBSTRING* %vr5458 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5462, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D5
	%vr5465 = bitcast i8* bitcast ([29 x i8]* @Lt_05D5 to i8*) to i8*
	; arg 28
	%vr5464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5465, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr5464
	%vr5468 = bitcast %FBSTRING* %vr5464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5468, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C8
	%vr5471 = bitcast i8* bitcast ([28 x i8]* @Lt_05C8 to i8*) to i8*
	; arg 27
	%vr5470 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5471, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5470
	%vr5474 = bitcast %FBSTRING* %vr5470 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5474, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D3
	%vr5477 = bitcast i8* bitcast ([34 x i8]* @Lt_05D3 to i8*) to i8*
	; arg 33
	%vr5476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5477, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr5476
	%vr5480 = bitcast %FBSTRING* %vr5476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5480, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr5483 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr5482 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5483, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr5482
	%vr5486 = bitcast %FBSTRING* %vr5482 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5486, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D6
	%vr5489 = bitcast i8* bitcast ([31 x i8]* @Lt_05D6 to i8*) to i8*
	; arg 30
	%vr5488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5489, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr5488
	%vr5492 = bitcast %FBSTRING* %vr5488 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5492, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D7
	%vr5495 = bitcast i8* bitcast ([27 x i8]* @Lt_05D7 to i8*) to i8*
	; arg 26
	%vr5494 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5495, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr5494
	%vr5498 = bitcast %FBSTRING* %vr5494 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5498, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D8
	%vr5501 = bitcast i8* bitcast ([35 x i8]* @Lt_05D8 to i8*) to i8*
	; arg 34
	%vr5500 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5501, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr5500
	%vr5504 = bitcast %FBSTRING* %vr5500 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5504, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05D9
	%vr5507 = bitcast i8* bitcast ([69 x i8]* @Lt_05D9 to i8*) to i8*
	; arg 68
	%vr5506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5507, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr5506
	%vr5510 = bitcast %FBSTRING* %vr5506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5510, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DA
	%vr5513 = bitcast i8* bitcast ([42 x i8]* @Lt_05DA to i8*) to i8*
	; arg 41
	%vr5512 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5513, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr5512
	%vr5516 = bitcast %FBSTRING* %vr5512 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5516, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5519 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5518 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5519, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5518
	%vr5522 = bitcast %FBSTRING* %vr5518 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5522, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DB
	%vr5525 = bitcast i8* bitcast ([21 x i8]* @Lt_05DB to i8*) to i8*
	; arg 20
	%vr5524 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5525, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5524
	%vr5528 = bitcast %FBSTRING* %vr5524 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5528, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DC
	%vr5531 = bitcast i8* bitcast ([26 x i8]* @Lt_05DC to i8*) to i8*
	; arg 25
	%vr5530 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5531, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr5530
	%vr5534 = bitcast %FBSTRING* %vr5530 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5534, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DD
	%vr5537 = bitcast i8* bitcast ([53 x i8]* @Lt_05DD to i8*) to i8*
	; arg 52
	%vr5536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5537, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr5536
	%vr5540 = bitcast %FBSTRING* %vr5536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5540, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5543 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5542 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5543, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5542
	%vr5546 = bitcast %FBSTRING* %vr5542 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5546, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DE
	%vr5549 = bitcast i8* bitcast ([49 x i8]* @Lt_05DE to i8*) to i8*
	; arg 48
	%vr5548 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5549, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr5548
	%vr5552 = bitcast %FBSTRING* %vr5548 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5552, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5555 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5554 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5555, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5554
	%vr5558 = bitcast %FBSTRING* %vr5554 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5558, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05DF
	%vr5561 = bitcast i8* bitcast ([9 x i8]* @Lt_05DF to i8*) to i8*
	; arg 8
	%vr5560 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5561, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr5560
	%vr5564 = bitcast %FBSTRING* %vr5560 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5564, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5567 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5567, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5566
	%vr5570 = bitcast %FBSTRING* %vr5566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5570, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E0
	%vr5573 = bitcast i8* bitcast ([16 x i8]* @Lt_05E0 to i8*) to i8*
	; arg 15
	%vr5572 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5573, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr5572
	%vr5576 = bitcast %FBSTRING* %vr5572 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5576, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5579 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5578 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5579, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5578
	%vr5582 = bitcast %FBSTRING* %vr5578 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5582, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E1
	%vr5585 = bitcast i8* bitcast ([12 x i8]* @Lt_05E1 to i8*) to i8*
	; arg 11
	%vr5584 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5585, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr5584
	%vr5588 = bitcast %FBSTRING* %vr5584 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5588, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5591 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5590 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5591, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5590
	%vr5594 = bitcast %FBSTRING* %vr5590 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5594, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E2
	%vr5597 = bitcast i8* bitcast ([18 x i8]* @Lt_05E2 to i8*) to i8*
	; arg 17
	%vr5596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5597, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr5596
	%vr5600 = bitcast %FBSTRING* %vr5596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5600, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E3
	%vr5603 = bitcast i8* bitcast ([12 x i8]* @Lt_05E3 to i8*) to i8*
	; arg 11
	%vr5602 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5603, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr5602
	%vr5606 = bitcast %FBSTRING* %vr5602 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5606, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E4
	%vr5609 = bitcast i8* bitcast ([12 x i8]* @Lt_05E4 to i8*) to i8*
	; arg 11
	%vr5608 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5609, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr5608
	%vr5612 = bitcast %FBSTRING* %vr5608 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5612, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5615 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5614 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5615, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5614
	%vr5618 = bitcast %FBSTRING* %vr5614 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5618, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E5
	%vr5621 = bitcast i8* bitcast ([12 x i8]* @Lt_05E5 to i8*) to i8*
	; arg 11
	%vr5620 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5621, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr5620
	%vr5624 = bitcast %FBSTRING* %vr5620 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5624, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E6
	%vr5627 = bitcast i8* bitcast ([16 x i8]* @Lt_05E6 to i8*) to i8*
	; arg 15
	%vr5626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5627, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr5626
	%vr5630 = bitcast %FBSTRING* %vr5626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5630, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E7
	%vr5633 = bitcast i8* bitcast ([17 x i8]* @Lt_05E7 to i8*) to i8*
	; arg 16
	%vr5632 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5633, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr5632
	%vr5636 = bitcast %FBSTRING* %vr5632 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5636, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E8
	%vr5639 = bitcast i8* bitcast ([15 x i8]* @Lt_05E8 to i8*) to i8*
	; arg 14
	%vr5638 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5639, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr5638
	%vr5642 = bitcast %FBSTRING* %vr5638 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5642, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05E9
	%vr5645 = bitcast i8* bitcast ([12 x i8]* @Lt_05E9 to i8*) to i8*
	; arg 11
	%vr5644 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5645, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr5644
	%vr5648 = bitcast %FBSTRING* %vr5644 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5648, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EA
	%vr5651 = bitcast i8* bitcast ([3 x i8]* @Lt_05EA to i8*) to i8*
	; arg 2
	%vr5650 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5651, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr5650
	%vr5654 = bitcast %FBSTRING* %vr5650 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5654, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr5657 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr5656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5657, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr5656
	%vr5660 = bitcast %FBSTRING* %vr5656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5660, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr5663 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr5662 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5663, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr5662
	%vr5666 = bitcast %FBSTRING* %vr5662 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5666, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EC
	%vr5669 = bitcast i8* bitcast ([13 x i8]* @Lt_05EC to i8*) to i8*
	; arg 12
	%vr5668 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5669, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr5668
	%vr5672 = bitcast %FBSTRING* %vr5668 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5672, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05ED
	%vr5675 = bitcast i8* bitcast ([13 x i8]* @Lt_05ED to i8*) to i8*
	; arg 12
	%vr5674 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5675, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr5674
	%vr5678 = bitcast %FBSTRING* %vr5674 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5678, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EE
	%vr5681 = bitcast i8* bitcast ([11 x i8]* @Lt_05EE to i8*) to i8*
	; arg 10
	%vr5680 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5681, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr5680
	%vr5684 = bitcast %FBSTRING* %vr5680 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5684, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EF
	%vr5687 = bitcast i8* bitcast ([14 x i8]* @Lt_05EF to i8*) to i8*
	; arg 13
	%vr5686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5687, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr5686
	%vr5690 = bitcast %FBSTRING* %vr5686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5690, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F0
	%vr5693 = bitcast i8* bitcast ([17 x i8]* @Lt_05F0 to i8*) to i8*
	; arg 16
	%vr5692 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5693, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr5692
	%vr5696 = bitcast %FBSTRING* %vr5692 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5696, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F1
	%vr5699 = bitcast i8* bitcast ([15 x i8]* @Lt_05F1 to i8*) to i8*
	; arg 14
	%vr5698 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5699, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr5698
	%vr5702 = bitcast %FBSTRING* %vr5698 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5702, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EA
	%vr5705 = bitcast i8* bitcast ([3 x i8]* @Lt_05EA to i8*) to i8*
	; arg 2
	%vr5704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5705, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr5704
	%vr5708 = bitcast %FBSTRING* %vr5704 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5708, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5711 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5710 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5711, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5710
	%vr5714 = bitcast %FBSTRING* %vr5710 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5714, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F2
	%vr5717 = bitcast i8* bitcast ([69 x i8]* @Lt_05F2 to i8*) to i8*
	; arg 68
	%vr5716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5717, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr5716
	%vr5720 = bitcast %FBSTRING* %vr5716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5720, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5723 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5722 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5723, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5722
	%vr5726 = bitcast %FBSTRING* %vr5722 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5726, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F3
	%vr5729 = bitcast i8* bitcast ([58 x i8]* @Lt_05F3 to i8*) to i8*
	; arg 57
	%vr5728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5729, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr5728
	%vr5732 = bitcast %FBSTRING* %vr5728 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5732, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5735 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5734 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5735, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5734
	%vr5738 = bitcast %FBSTRING* %vr5734 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5738, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F4
	%vr5741 = bitcast i8* bitcast ([22 x i8]* @Lt_05F4 to i8*) to i8*
	; arg 21
	%vr5740 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5741, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr5740
	%vr5744 = bitcast %FBSTRING* %vr5740 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5744, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F5
	%vr5747 = bitcast i8* bitcast ([64 x i8]* @Lt_05F5 to i8*) to i8*
	; arg 63
	%vr5746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5747, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr5746
	%vr5750 = bitcast %FBSTRING* %vr5746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5750, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5753 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5752 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5753, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5752
	%vr5756 = bitcast %FBSTRING* %vr5752 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5756, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5759 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5758 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5759, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5758
	%vr5762 = bitcast %FBSTRING* %vr5758 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5762, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F7
	%vr5765 = bitcast i8* bitcast ([21 x i8]* @Lt_05F7 to i8*) to i8*
	; arg 20
	%vr5764 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5765, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr5764
	%vr5768 = bitcast %FBSTRING* %vr5764 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5768, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr5771 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr5770 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5771, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5770
	%vr5774 = bitcast %FBSTRING* %vr5770 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5774, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F9
	%vr5777 = bitcast i8* bitcast ([65 x i8]* @Lt_05F9 to i8*) to i8*
	; arg 64
	%vr5776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5777, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr5776
	%vr5780 = bitcast %FBSTRING* %vr5776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5780, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5783 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5782 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5783, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5782
	%vr5786 = bitcast %FBSTRING* %vr5782 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5786, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5789 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5788 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5789, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5788
	%vr5792 = bitcast %FBSTRING* %vr5788 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5792, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FA
	%vr5795 = bitcast i8* bitcast ([22 x i8]* @Lt_05FA to i8*) to i8*
	; arg 21
	%vr5794 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5795, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr5794
	%vr5798 = bitcast %FBSTRING* %vr5794 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5798, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FB
	%vr5801 = bitcast i8* bitcast ([32 x i8]* @Lt_05FB to i8*) to i8*
	; arg 31
	%vr5800 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5801, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr5800
	%vr5804 = bitcast %FBSTRING* %vr5800 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5804, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FC
	%vr5807 = bitcast i8* bitcast ([68 x i8]* @Lt_05FC to i8*) to i8*
	; arg 67
	%vr5806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5807, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr5806
	%vr5810 = bitcast %FBSTRING* %vr5806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5810, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FD
	%vr5813 = bitcast i8* bitcast ([95 x i8]* @Lt_05FD to i8*) to i8*
	; arg 94
	%vr5812 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5813, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr5812
	%vr5816 = bitcast %FBSTRING* %vr5812 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5816, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5819 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5818 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5819, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5818
	%vr5822 = bitcast %FBSTRING* %vr5818 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5822, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5825 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5824 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5825, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5824
	%vr5828 = bitcast %FBSTRING* %vr5824 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5828, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FE
	%vr5831 = bitcast i8* bitcast ([41 x i8]* @Lt_05FE to i8*) to i8*
	; arg 40
	%vr5830 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5831, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr5830
	%vr5834 = bitcast %FBSTRING* %vr5830 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5834, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr5837 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr5836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5837, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5836
	%vr5840 = bitcast %FBSTRING* %vr5836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5840, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05FF
	%vr5843 = bitcast i8* bitcast ([20 x i8]* @Lt_05FF to i8*) to i8*
	; arg 19
	%vr5842 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5843, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr5842
	%vr5846 = bitcast %FBSTRING* %vr5842 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5846, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0600
	%vr5849 = bitcast i8* bitcast ([64 x i8]* @Lt_0600 to i8*) to i8*
	; arg 63
	%vr5848 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5849, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr5848
	%vr5852 = bitcast %FBSTRING* %vr5848 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5852, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0601
	%vr5855 = bitcast i8* bitcast ([41 x i8]* @Lt_0601 to i8*) to i8*
	; arg 40
	%vr5854 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5855, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr5854
	%vr5858 = bitcast %FBSTRING* %vr5854 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5858, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0602
	%vr5861 = bitcast i8* bitcast ([52 x i8]* @Lt_0602 to i8*) to i8*
	; arg 51
	%vr5860 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5861, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr5860
	%vr5864 = bitcast %FBSTRING* %vr5860 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5864, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0603
	%vr5867 = bitcast i8* bitcast ([30 x i8]* @Lt_0603 to i8*) to i8*
	; arg 29
	%vr5866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5867, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr5866
	%vr5870 = bitcast %FBSTRING* %vr5866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5870, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0604
	%vr5873 = bitcast i8* bitcast ([28 x i8]* @Lt_0604 to i8*) to i8*
	; arg 27
	%vr5872 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5873, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr5872
	%vr5876 = bitcast %FBSTRING* %vr5872 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5876, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5879 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5879, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5878
	%vr5882 = bitcast %FBSTRING* %vr5878 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5882, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5885 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5884 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5885, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5884
	%vr5888 = bitcast %FBSTRING* %vr5884 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5888, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0605
	%vr5891 = bitcast i8* bitcast ([40 x i8]* @Lt_0605 to i8*) to i8*
	; arg 39
	%vr5890 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5891, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr5890
	%vr5894 = bitcast %FBSTRING* %vr5890 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5894, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr5897 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr5896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5897, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5896
	%vr5900 = bitcast %FBSTRING* %vr5896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5900, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0606
	%vr5903 = bitcast i8* bitcast ([35 x i8]* @Lt_0606 to i8*) to i8*
	; arg 34
	%vr5902 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5903, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr5902
	%vr5906 = bitcast %FBSTRING* %vr5902 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5906, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0607
	%vr5909 = bitcast i8* bitcast ([35 x i8]* @Lt_0607 to i8*) to i8*
	; arg 34
	%vr5908 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5909, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr5908
	%vr5912 = bitcast %FBSTRING* %vr5908 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5912, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5915 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5914 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5915, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5914
	%vr5918 = bitcast %FBSTRING* %vr5914 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5918, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5921 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5920 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5921, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5920
	%vr5924 = bitcast %FBSTRING* %vr5920 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5924, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0608
	%vr5927 = bitcast i8* bitcast ([37 x i8]* @Lt_0608 to i8*) to i8*
	; arg 36
	%vr5926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5927, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr5926
	%vr5930 = bitcast %FBSTRING* %vr5926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5930, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr5933 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr5932 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5933, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5932
	%vr5936 = bitcast %FBSTRING* %vr5932 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5936, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0609
	%vr5939 = bitcast i8* bitcast ([54 x i8]* @Lt_0609 to i8*) to i8*
	; arg 53
	%vr5938 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5939, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr5938
	%vr5942 = bitcast %FBSTRING* %vr5938 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5942, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060A
	%vr5945 = bitcast i8* bitcast ([41 x i8]* @Lt_060A to i8*) to i8*
	; arg 40
	%vr5944 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5945, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr5944
	%vr5948 = bitcast %FBSTRING* %vr5944 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5948, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5951 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5950 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5951, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5950
	%vr5954 = bitcast %FBSTRING* %vr5950 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5954, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5957 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5957, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5956
	%vr5960 = bitcast %FBSTRING* %vr5956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5960, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060B
	%vr5963 = bitcast i8* bitcast ([40 x i8]* @Lt_060B to i8*) to i8*
	; arg 39
	%vr5962 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5963, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr5962
	%vr5966 = bitcast %FBSTRING* %vr5962 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5966, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr5969 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr5968 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5969, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5968
	%vr5972 = bitcast %FBSTRING* %vr5968 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5972, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0606
	%vr5975 = bitcast i8* bitcast ([35 x i8]* @Lt_0606 to i8*) to i8*
	; arg 34
	%vr5974 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5975, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr5974
	%vr5978 = bitcast %FBSTRING* %vr5974 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5978, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060C
	%vr5981 = bitcast i8* bitcast ([35 x i8]* @Lt_060C to i8*) to i8*
	; arg 34
	%vr5980 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5981, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr5980
	%vr5984 = bitcast %FBSTRING* %vr5980 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5984, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr5987 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr5986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5987, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr5986
	%vr5990 = bitcast %FBSTRING* %vr5986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5990, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr5993 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr5992 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5993, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr5992
	%vr5996 = bitcast %FBSTRING* %vr5992 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr5996, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060D
	%vr5999 = bitcast i8* bitcast ([33 x i8]* @Lt_060D to i8*) to i8*
	; arg 32
	%vr5998 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr5999, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr5998
	%vr6002 = bitcast %FBSTRING* %vr5998 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6002, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6005 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6004 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6005, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6004
	%vr6008 = bitcast %FBSTRING* %vr6004 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6008, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060E
	%vr6011 = bitcast i8* bitcast ([45 x i8]* @Lt_060E to i8*) to i8*
	; arg 44
	%vr6010 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6011, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr6010
	%vr6014 = bitcast %FBSTRING* %vr6010 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6014, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_060F
	%vr6017 = bitcast i8* bitcast ([45 x i8]* @Lt_060F to i8*) to i8*
	; arg 44
	%vr6016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6017, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr6016
	%vr6020 = bitcast %FBSTRING* %vr6016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6020, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0610
	%vr6023 = bitcast i8* bitcast ([11 x i8]* @Lt_0610 to i8*) to i8*
	; arg 10
	%vr6022 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6023, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6022
	%vr6026 = bitcast %FBSTRING* %vr6022 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6026, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0611
	%vr6029 = bitcast i8* bitcast ([11 x i8]* @Lt_0611 to i8*) to i8*
	; arg 10
	%vr6028 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6029, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6028
	%vr6032 = bitcast %FBSTRING* %vr6028 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6032, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0612
	%vr6035 = bitcast i8* bitcast ([11 x i8]* @Lt_0612 to i8*) to i8*
	; arg 10
	%vr6034 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6035, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6034
	%vr6038 = bitcast %FBSTRING* %vr6034 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6038, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6041 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6040 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6041, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6040
	%vr6044 = bitcast %FBSTRING* %vr6040 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6044, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6047 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6047, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6046
	%vr6050 = bitcast %FBSTRING* %vr6046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6050, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0613
	%vr6053 = bitcast i8* bitcast ([34 x i8]* @Lt_0613 to i8*) to i8*
	; arg 33
	%vr6052 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6053, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr6052
	%vr6056 = bitcast %FBSTRING* %vr6052 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6056, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6059 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6058 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6059, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6058
	%vr6062 = bitcast %FBSTRING* %vr6058 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6062, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0614
	%vr6065 = bitcast i8* bitcast ([45 x i8]* @Lt_0614 to i8*) to i8*
	; arg 44
	%vr6064 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6065, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr6064
	%vr6068 = bitcast %FBSTRING* %vr6064 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6068, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0615
	%vr6071 = bitcast i8* bitcast ([45 x i8]* @Lt_0615 to i8*) to i8*
	; arg 44
	%vr6070 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6071, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr6070
	%vr6074 = bitcast %FBSTRING* %vr6070 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6074, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0616
	%vr6077 = bitcast i8* bitcast ([11 x i8]* @Lt_0616 to i8*) to i8*
	; arg 10
	%vr6076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6077, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6076
	%vr6080 = bitcast %FBSTRING* %vr6076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6080, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0610
	%vr6083 = bitcast i8* bitcast ([11 x i8]* @Lt_0610 to i8*) to i8*
	; arg 10
	%vr6082 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6083, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6082
	%vr6086 = bitcast %FBSTRING* %vr6082 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6086, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0612
	%vr6089 = bitcast i8* bitcast ([11 x i8]* @Lt_0612 to i8*) to i8*
	; arg 10
	%vr6088 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6089, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr6088
	%vr6092 = bitcast %FBSTRING* %vr6088 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6092, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6095 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6094 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6095, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6094
	%vr6098 = bitcast %FBSTRING* %vr6094 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6098, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6101 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6100 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6101, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6100
	%vr6104 = bitcast %FBSTRING* %vr6100 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6104, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F2
	%vr6107 = bitcast i8* bitcast ([69 x i8]* @Lt_05F2 to i8*) to i8*
	; arg 68
	%vr6106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6107, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6106
	%vr6110 = bitcast %FBSTRING* %vr6106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6110, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6113 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6112 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6113, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6112
	%vr6116 = bitcast %FBSTRING* %vr6112 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6116, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0617
	%vr6119 = bitcast i8* bitcast ([53 x i8]* @Lt_0617 to i8*) to i8*
	; arg 52
	%vr6118 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6119, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr6118
	%vr6122 = bitcast %FBSTRING* %vr6118 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6122, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6125 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6124 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6125, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6124
	%vr6128 = bitcast %FBSTRING* %vr6124 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6128, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0618
	%vr6131 = bitcast i8* bitcast ([62 x i8]* @Lt_0618 to i8*) to i8*
	; arg 61
	%vr6130 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6131, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr6130
	%vr6134 = bitcast %FBSTRING* %vr6130 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6134, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6137 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6137, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6136
	%vr6140 = bitcast %FBSTRING* %vr6136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6140, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6143 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6142 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6143, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6142
	%vr6146 = bitcast %FBSTRING* %vr6142 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6146, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0619
	%vr6149 = bitcast i8* bitcast ([24 x i8]* @Lt_0619 to i8*) to i8*
	; arg 23
	%vr6148 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6149, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6148
	%vr6152 = bitcast %FBSTRING* %vr6148 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6152, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6155 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6154 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6155, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6154
	%vr6158 = bitcast %FBSTRING* %vr6154 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6158, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061A
	%vr6161 = bitcast i8* bitcast ([13 x i8]* @Lt_061A to i8*) to i8*
	; arg 12
	%vr6160 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6161, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr6160
	%vr6164 = bitcast %FBSTRING* %vr6160 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6164, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6167 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6167, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6166
	%vr6170 = bitcast %FBSTRING* %vr6166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6170, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6173 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6172 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6173, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6172
	%vr6176 = bitcast %FBSTRING* %vr6172 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6176, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061B
	%vr6179 = bitcast i8* bitcast ([34 x i8]* @Lt_061B to i8*) to i8*
	; arg 33
	%vr6178 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6179, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr6178
	%vr6182 = bitcast %FBSTRING* %vr6178 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6182, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6185 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6184 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6185, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6184
	%vr6188 = bitcast %FBSTRING* %vr6184 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6188, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061C
	%vr6191 = bitcast i8* bitcast ([24 x i8]* @Lt_061C to i8*) to i8*
	; arg 23
	%vr6190 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6191, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6190
	%vr6194 = bitcast %FBSTRING* %vr6190 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6194, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6197 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6197, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6196
	%vr6200 = bitcast %FBSTRING* %vr6196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6200, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6203 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6202 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6203, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6202
	%vr6206 = bitcast %FBSTRING* %vr6202 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6206, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061D
	%vr6209 = bitcast i8* bitcast ([31 x i8]* @Lt_061D to i8*) to i8*
	; arg 30
	%vr6208 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6209, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr6208
	%vr6212 = bitcast %FBSTRING* %vr6208 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6212, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6215 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6214 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6215, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6214
	%vr6218 = bitcast %FBSTRING* %vr6214 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6218, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061E
	%vr6221 = bitcast i8* bitcast ([35 x i8]* @Lt_061E to i8*) to i8*
	; arg 34
	%vr6220 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6221, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr6220
	%vr6224 = bitcast %FBSTRING* %vr6220 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6224, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6227 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6227, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6226
	%vr6230 = bitcast %FBSTRING* %vr6226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6230, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6233 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6232 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6233, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6232
	%vr6236 = bitcast %FBSTRING* %vr6232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6236, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_061F
	%vr6239 = bitcast i8* bitcast ([20 x i8]* @Lt_061F to i8*) to i8*
	; arg 19
	%vr6238 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6239, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr6238
	%vr6242 = bitcast %FBSTRING* %vr6238 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6242, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6245 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6244 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6245, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6244
	%vr6248 = bitcast %FBSTRING* %vr6244 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6248, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0620
	%vr6251 = bitcast i8* bitcast ([57 x i8]* @Lt_0620 to i8*) to i8*
	; arg 56
	%vr6250 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6251, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr6250
	%vr6254 = bitcast %FBSTRING* %vr6250 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6254, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0621
	%vr6257 = bitcast i8* bitcast ([73 x i8]* @Lt_0621 to i8*) to i8*
	; arg 72
	%vr6256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6257, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr6256
	%vr6260 = bitcast %FBSTRING* %vr6256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6260, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6263 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6262 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6263, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6262
	%vr6266 = bitcast %FBSTRING* %vr6262 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6266, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6269 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6268 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6269, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6268
	%vr6272 = bitcast %FBSTRING* %vr6268 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6272, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0622
	%vr6275 = bitcast i8* bitcast ([39 x i8]* @Lt_0622 to i8*) to i8*
	; arg 38
	%vr6274 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6275, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr6274
	%vr6278 = bitcast %FBSTRING* %vr6274 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6278, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6281 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6280 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6281, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6280
	%vr6284 = bitcast %FBSTRING* %vr6280 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6284, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0623
	%vr6287 = bitcast i8* bitcast ([34 x i8]* @Lt_0623 to i8*) to i8*
	; arg 33
	%vr6286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6287, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr6286
	%vr6290 = bitcast %FBSTRING* %vr6286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6290, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6293 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6292 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6293, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6292
	%vr6296 = bitcast %FBSTRING* %vr6292 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6296, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6299 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6298 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6299, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6298
	%vr6302 = bitcast %FBSTRING* %vr6298 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6302, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0624
	%vr6305 = bitcast i8* bitcast ([30 x i8]* @Lt_0624 to i8*) to i8*
	; arg 29
	%vr6304 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6305, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr6304
	%vr6308 = bitcast %FBSTRING* %vr6304 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6308, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6311 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6310 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6311, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6310
	%vr6314 = bitcast %FBSTRING* %vr6310 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6314, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0625
	%vr6317 = bitcast i8* bitcast ([25 x i8]* @Lt_0625 to i8*) to i8*
	; arg 24
	%vr6316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6317, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr6316
	%vr6320 = bitcast %FBSTRING* %vr6316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6320, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0626
	%vr6323 = bitcast i8* bitcast ([64 x i8]* @Lt_0626 to i8*) to i8*
	; arg 63
	%vr6322 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6323, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6322
	%vr6326 = bitcast %FBSTRING* %vr6322 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6326, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6329 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6328 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6329, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6328
	%vr6332 = bitcast %FBSTRING* %vr6328 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6332, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6335 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6334 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6335, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6334
	%vr6338 = bitcast %FBSTRING* %vr6334 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6338, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0627
	%vr6341 = bitcast i8* bitcast ([23 x i8]* @Lt_0627 to i8*) to i8*
	; arg 22
	%vr6340 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6341, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6340
	%vr6344 = bitcast %FBSTRING* %vr6340 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6344, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6347 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6347, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6346
	%vr6350 = bitcast %FBSTRING* %vr6346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6350, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0628
	%vr6353 = bitcast i8* bitcast ([23 x i8]* @Lt_0628 to i8*) to i8*
	; arg 22
	%vr6352 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6353, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6352
	%vr6356 = bitcast %FBSTRING* %vr6352 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6356, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0629
	%vr6359 = bitcast i8* bitcast ([9 x i8]* @Lt_0629 to i8*) to i8*
	; arg 8
	%vr6358 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6359, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr6358
	%vr6362 = bitcast %FBSTRING* %vr6358 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6362, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062A
	%vr6365 = bitcast i8* bitcast ([109 x i8]* @Lt_062A to i8*) to i8*
	; arg 108
	%vr6364 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6365, i64 108 )

	; call fb_PrintString()
	; arg 1
	; arg vr6364
	%vr6368 = bitcast %FBSTRING* %vr6364 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6368, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062B
	%vr6371 = bitcast i8* bitcast ([111 x i8]* @Lt_062B to i8*) to i8*
	; arg 110
	%vr6370 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6371, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr6370
	%vr6374 = bitcast %FBSTRING* %vr6370 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6374, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062C
	%vr6377 = bitcast i8* bitcast ([111 x i8]* @Lt_062C to i8*) to i8*
	; arg 110
	%vr6376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6377, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr6376
	%vr6380 = bitcast %FBSTRING* %vr6376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6380, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062D
	%vr6383 = bitcast i8* bitcast ([111 x i8]* @Lt_062D to i8*) to i8*
	; arg 110
	%vr6382 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6383, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr6382
	%vr6386 = bitcast %FBSTRING* %vr6382 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6386, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062E
	%vr6389 = bitcast i8* bitcast ([111 x i8]* @Lt_062E to i8*) to i8*
	; arg 110
	%vr6388 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6389, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr6388
	%vr6392 = bitcast %FBSTRING* %vr6388 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6392, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_062F
	%vr6395 = bitcast i8* bitcast ([10 x i8]* @Lt_062F to i8*) to i8*
	; arg 9
	%vr6394 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6395, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr6394
	%vr6398 = bitcast %FBSTRING* %vr6394 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6398, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6401 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6400 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6401, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6400
	%vr6404 = bitcast %FBSTRING* %vr6400 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6404, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6407 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6407, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6406
	%vr6410 = bitcast %FBSTRING* %vr6406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6410, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0630
	%vr6413 = bitcast i8* bitcast ([27 x i8]* @Lt_0630 to i8*) to i8*
	; arg 26
	%vr6412 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6413, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6412
	%vr6416 = bitcast %FBSTRING* %vr6412 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6416, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6419 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6418 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6419, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6418
	%vr6422 = bitcast %FBSTRING* %vr6418 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6422, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0632
	%vr6425 = bitcast i8* bitcast ([141 x i8]* @Lt_0632 to i8*) to i8*
	; arg 140
	%vr6424 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6425, i64 140 )

	; call fb_PrintString()
	; arg 1
	; arg vr6424
	%vr6428 = bitcast %FBSTRING* %vr6424 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6428, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6431 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6430 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6431, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6430
	%vr6434 = bitcast %FBSTRING* %vr6430 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6434, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6437 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6437, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6436
	%vr6440 = bitcast %FBSTRING* %vr6436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6440, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0633
	%vr6443 = bitcast i8* bitcast ([58 x i8]* @Lt_0633 to i8*) to i8*
	; arg 57
	%vr6442 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6443, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr6442
	%vr6446 = bitcast %FBSTRING* %vr6442 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6446, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6449 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6448 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6449, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6448
	%vr6452 = bitcast %FBSTRING* %vr6448 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6452, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0634
	%vr6455 = bitcast i8* bitcast ([28 x i8]* @Lt_0634 to i8*) to i8*
	; arg 27
	%vr6454 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6455, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr6454
	%vr6458 = bitcast %FBSTRING* %vr6454 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6458, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0635
	%vr6461 = bitcast i8* bitcast ([32 x i8]* @Lt_0635 to i8*) to i8*
	; arg 31
	%vr6460 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6461, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr6460
	%vr6464 = bitcast %FBSTRING* %vr6460 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6464, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0636
	%vr6467 = bitcast i8* bitcast ([27 x i8]* @Lt_0636 to i8*) to i8*
	; arg 26
	%vr6466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6467, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6466
	%vr6470 = bitcast %FBSTRING* %vr6466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6470, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr6473 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr6472 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6473, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr6472
	%vr6476 = bitcast %FBSTRING* %vr6472 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6476, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6479 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6478 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6479, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6478
	%vr6482 = bitcast %FBSTRING* %vr6478 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6482, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6485 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6484 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6485, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6484
	%vr6488 = bitcast %FBSTRING* %vr6484 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6488, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0637
	%vr6491 = bitcast i8* bitcast ([44 x i8]* @Lt_0637 to i8*) to i8*
	; arg 43
	%vr6490 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6491, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr6490
	%vr6494 = bitcast %FBSTRING* %vr6490 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6494, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6497 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6497, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6496
	%vr6500 = bitcast %FBSTRING* %vr6496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6500, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0638
	%vr6503 = bitcast i8* bitcast ([40 x i8]* @Lt_0638 to i8*) to i8*
	; arg 39
	%vr6502 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6503, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr6502
	%vr6506 = bitcast %FBSTRING* %vr6502 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6506, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6509 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6508 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6509, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6508
	%vr6512 = bitcast %FBSTRING* %vr6508 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6512, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6515 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6514 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6515, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6514
	%vr6518 = bitcast %FBSTRING* %vr6514 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6518, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0639
	%vr6521 = bitcast i8* bitcast ([32 x i8]* @Lt_0639 to i8*) to i8*
	; arg 31
	%vr6520 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6521, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr6520
	%vr6524 = bitcast %FBSTRING* %vr6520 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6524, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6527 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6527, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6526
	%vr6530 = bitcast %FBSTRING* %vr6526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6530, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063A
	%vr6533 = bitcast i8* bitcast ([53 x i8]* @Lt_063A to i8*) to i8*
	; arg 52
	%vr6532 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6533, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr6532
	%vr6536 = bitcast %FBSTRING* %vr6532 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6536, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6539 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6538 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6539, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6538
	%vr6542 = bitcast %FBSTRING* %vr6538 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6542, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6545 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6544 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6545, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6544
	%vr6548 = bitcast %FBSTRING* %vr6544 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6548, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063B
	%vr6551 = bitcast i8* bitcast ([69 x i8]* @Lt_063B to i8*) to i8*
	; arg 68
	%vr6550 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6551, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr6550
	%vr6554 = bitcast %FBSTRING* %vr6550 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6554, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6557 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6557, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6556
	%vr6560 = bitcast %FBSTRING* %vr6556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6560, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063C
	%vr6563 = bitcast i8* bitcast ([20 x i8]* @Lt_063C to i8*) to i8*
	; arg 19
	%vr6562 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6563, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr6562
	%vr6566 = bitcast %FBSTRING* %vr6562 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6566, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063D
	%vr6569 = bitcast i8* bitcast ([65 x i8]* @Lt_063D to i8*) to i8*
	; arg 64
	%vr6568 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6569, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr6568
	%vr6572 = bitcast %FBSTRING* %vr6568 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6572, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063E
	%vr6575 = bitcast i8* bitcast ([53 x i8]* @Lt_063E to i8*) to i8*
	; arg 52
	%vr6574 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6575, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr6574
	%vr6578 = bitcast %FBSTRING* %vr6574 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6578, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6581 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6580 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6581, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6580
	%vr6584 = bitcast %FBSTRING* %vr6580 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6584, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6587 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6587, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6586
	%vr6590 = bitcast %FBSTRING* %vr6586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6590, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_063F
	%vr6593 = bitcast i8* bitcast ([35 x i8]* @Lt_063F to i8*) to i8*
	; arg 34
	%vr6592 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6593, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr6592
	%vr6596 = bitcast %FBSTRING* %vr6592 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6596, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6599 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6598 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6599, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6598
	%vr6602 = bitcast %FBSTRING* %vr6598 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6602, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0640
	%vr6605 = bitcast i8* bitcast ([21 x i8]* @Lt_0640 to i8*) to i8*
	; arg 20
	%vr6604 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6605, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr6604
	%vr6608 = bitcast %FBSTRING* %vr6604 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6608, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0641
	%vr6611 = bitcast i8* bitcast ([6 x i8]* @Lt_0641 to i8*) to i8*
	; arg 5
	%vr6610 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6611, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr6610
	%vr6614 = bitcast %FBSTRING* %vr6610 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6614, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0642
	%vr6617 = bitcast i8* bitcast ([61 x i8]* @Lt_0642 to i8*) to i8*
	; arg 60
	%vr6616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6617, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr6616
	%vr6620 = bitcast %FBSTRING* %vr6616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6620, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr6623 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr6622 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6623, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr6622
	%vr6626 = bitcast %FBSTRING* %vr6622 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6626, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0643
	%vr6629 = bitcast i8* bitcast ([24 x i8]* @Lt_0643 to i8*) to i8*
	; arg 23
	%vr6628 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6629, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6628
	%vr6632 = bitcast %FBSTRING* %vr6628 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6632, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0644
	%vr6635 = bitcast i8* bitcast ([52 x i8]* @Lt_0644 to i8*) to i8*
	; arg 51
	%vr6634 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6635, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr6634
	%vr6638 = bitcast %FBSTRING* %vr6634 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6638, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0645
	%vr6641 = bitcast i8* bitcast ([63 x i8]* @Lt_0645 to i8*) to i8*
	; arg 62
	%vr6640 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6641, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr6640
	%vr6644 = bitcast %FBSTRING* %vr6640 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6644, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr6647 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr6646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6647, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr6646
	%vr6650 = bitcast %FBSTRING* %vr6646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6650, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6653 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6652 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6653, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6652
	%vr6656 = bitcast %FBSTRING* %vr6652 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6656, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6659 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6658 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6659, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6658
	%vr6662 = bitcast %FBSTRING* %vr6658 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6662, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0646
	%vr6665 = bitcast i8* bitcast ([51 x i8]* @Lt_0646 to i8*) to i8*
	; arg 50
	%vr6664 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6665, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr6664
	%vr6668 = bitcast %FBSTRING* %vr6664 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6668, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6671 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6670 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6671, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6670
	%vr6674 = bitcast %FBSTRING* %vr6670 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6674, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0647
	%vr6677 = bitcast i8* bitcast ([26 x i8]* @Lt_0647 to i8*) to i8*
	; arg 25
	%vr6676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6677, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6676
	%vr6680 = bitcast %FBSTRING* %vr6676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6680, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0648
	%vr6683 = bitcast i8* bitcast ([53 x i8]* @Lt_0648 to i8*) to i8*
	; arg 52
	%vr6682 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6683, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr6682
	%vr6686 = bitcast %FBSTRING* %vr6682 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6686, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0649
	%vr6689 = bitcast i8* bitcast ([33 x i8]* @Lt_0649 to i8*) to i8*
	; arg 32
	%vr6688 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6689, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr6688
	%vr6692 = bitcast %FBSTRING* %vr6688 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6692, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6695 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6694 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6695, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6694
	%vr6698 = bitcast %FBSTRING* %vr6694 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6698, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6701 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6700 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6701, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6700
	%vr6704 = bitcast %FBSTRING* %vr6700 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6704, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064A
	%vr6707 = bitcast i8* bitcast ([63 x i8]* @Lt_064A to i8*) to i8*
	; arg 62
	%vr6706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6707, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr6706
	%vr6710 = bitcast %FBSTRING* %vr6706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6710, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6713 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6712 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6713, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6712
	%vr6716 = bitcast %FBSTRING* %vr6712 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6716, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064B
	%vr6719 = bitcast i8* bitcast ([40 x i8]* @Lt_064B to i8*) to i8*
	; arg 39
	%vr6718 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6719, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr6718
	%vr6722 = bitcast %FBSTRING* %vr6718 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6722, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr6725 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr6724 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6725, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr6724
	%vr6728 = bitcast %FBSTRING* %vr6724 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6728, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064C
	%vr6731 = bitcast i8* bitcast ([25 x i8]* @Lt_064C to i8*) to i8*
	; arg 24
	%vr6730 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6731, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr6730
	%vr6734 = bitcast %FBSTRING* %vr6730 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6734, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064D
	%vr6737 = bitcast i8* bitcast ([29 x i8]* @Lt_064D to i8*) to i8*
	; arg 28
	%vr6736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6737, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr6736
	%vr6740 = bitcast %FBSTRING* %vr6736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6740, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064E
	%vr6743 = bitcast i8* bitcast ([33 x i8]* @Lt_064E to i8*) to i8*
	; arg 32
	%vr6742 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6743, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr6742
	%vr6746 = bitcast %FBSTRING* %vr6742 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6746, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr6749 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr6748 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6749, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr6748
	%vr6752 = bitcast %FBSTRING* %vr6748 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6752, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064F
	%vr6755 = bitcast i8* bitcast ([41 x i8]* @Lt_064F to i8*) to i8*
	; arg 40
	%vr6754 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6755, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr6754
	%vr6758 = bitcast %FBSTRING* %vr6754 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6758, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0650
	%vr6761 = bitcast i8* bitcast ([53 x i8]* @Lt_0650 to i8*) to i8*
	; arg 52
	%vr6760 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6761, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr6760
	%vr6764 = bitcast %FBSTRING* %vr6760 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6764, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr6767 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr6766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6767, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr6766
	%vr6770 = bitcast %FBSTRING* %vr6766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6770, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0652
	%vr6773 = bitcast i8* bitcast ([36 x i8]* @Lt_0652 to i8*) to i8*
	; arg 35
	%vr6772 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6773, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr6772
	%vr6776 = bitcast %FBSTRING* %vr6772 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6776, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6779 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6778 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6779, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6778
	%vr6782 = bitcast %FBSTRING* %vr6778 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6782, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6785 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6784 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6785, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6784
	%vr6788 = bitcast %FBSTRING* %vr6784 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6788, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0653
	%vr6791 = bitcast i8* bitcast ([42 x i8]* @Lt_0653 to i8*) to i8*
	; arg 41
	%vr6790 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6791, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr6790
	%vr6794 = bitcast %FBSTRING* %vr6790 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6794, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0654
	%vr6797 = bitcast i8* bitcast ([62 x i8]* @Lt_0654 to i8*) to i8*
	; arg 61
	%vr6796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6797, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr6796
	%vr6800 = bitcast %FBSTRING* %vr6796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6800, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6803 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6802 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6803, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6802
	%vr6806 = bitcast %FBSTRING* %vr6802 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6806, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0655
	%vr6809 = bitcast i8* bitcast ([64 x i8]* @Lt_0655 to i8*) to i8*
	; arg 63
	%vr6808 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6809, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr6808
	%vr6812 = bitcast %FBSTRING* %vr6808 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6812, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0656
	%vr6815 = bitcast i8* bitcast ([22 x i8]* @Lt_0656 to i8*) to i8*
	; arg 21
	%vr6814 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6815, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr6814
	%vr6818 = bitcast %FBSTRING* %vr6814 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6818, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0657
	%vr6821 = bitcast i8* bitcast ([27 x i8]* @Lt_0657 to i8*) to i8*
	; arg 26
	%vr6820 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6821, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6820
	%vr6824 = bitcast %FBSTRING* %vr6820 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6824, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0658
	%vr6827 = bitcast i8* bitcast ([24 x i8]* @Lt_0658 to i8*) to i8*
	; arg 23
	%vr6826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6827, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6826
	%vr6830 = bitcast %FBSTRING* %vr6826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6830, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0659
	%vr6833 = bitcast i8* bitcast ([27 x i8]* @Lt_0659 to i8*) to i8*
	; arg 26
	%vr6832 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6833, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6832
	%vr6836 = bitcast %FBSTRING* %vr6832 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6836, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065A
	%vr6839 = bitcast i8* bitcast ([24 x i8]* @Lt_065A to i8*) to i8*
	; arg 23
	%vr6838 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6839, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr6838
	%vr6842 = bitcast %FBSTRING* %vr6838 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6842, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr6845 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr6844 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6845, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr6844
	%vr6848 = bitcast %FBSTRING* %vr6844 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6848, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065B
	%vr6851 = bitcast i8* bitcast ([39 x i8]* @Lt_065B to i8*) to i8*
	; arg 38
	%vr6850 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6851, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr6850
	%vr6854 = bitcast %FBSTRING* %vr6850 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6854, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065C
	%vr6857 = bitcast i8* bitcast ([21 x i8]* @Lt_065C to i8*) to i8*
	; arg 20
	%vr6856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6857, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr6856
	%vr6860 = bitcast %FBSTRING* %vr6856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6860, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065D
	%vr6863 = bitcast i8* bitcast ([26 x i8]* @Lt_065D to i8*) to i8*
	; arg 25
	%vr6862 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6863, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6862
	%vr6866 = bitcast %FBSTRING* %vr6862 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6866, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065E
	%vr6869 = bitcast i8* bitcast ([22 x i8]* @Lt_065E to i8*) to i8*
	; arg 21
	%vr6868 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6869, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr6868
	%vr6872 = bitcast %FBSTRING* %vr6868 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6872, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065F
	%vr6875 = bitcast i8* bitcast ([37 x i8]* @Lt_065F to i8*) to i8*
	; arg 36
	%vr6874 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6875, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr6874
	%vr6878 = bitcast %FBSTRING* %vr6874 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6878, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0660
	%vr6881 = bitcast i8* bitcast ([23 x i8]* @Lt_0660 to i8*) to i8*
	; arg 22
	%vr6880 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6881, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6880
	%vr6884 = bitcast %FBSTRING* %vr6880 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6884, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0661
	%vr6887 = bitcast i8* bitcast ([23 x i8]* @Lt_0661 to i8*) to i8*
	; arg 22
	%vr6886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6887, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6886
	%vr6890 = bitcast %FBSTRING* %vr6886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6890, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6893 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6892 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6893, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6892
	%vr6896 = bitcast %FBSTRING* %vr6892 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6896, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0662
	%vr6899 = bitcast i8* bitcast ([27 x i8]* @Lt_0662 to i8*) to i8*
	; arg 26
	%vr6898 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6899, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr6898
	%vr6902 = bitcast %FBSTRING* %vr6898 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6902, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0663
	%vr6905 = bitcast i8* bitcast ([33 x i8]* @Lt_0663 to i8*) to i8*
	; arg 32
	%vr6904 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6905, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr6904
	%vr6908 = bitcast %FBSTRING* %vr6904 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6908, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0664
	%vr6911 = bitcast i8* bitcast ([68 x i8]* @Lt_0664 to i8*) to i8*
	; arg 67
	%vr6910 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6911, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr6910
	%vr6914 = bitcast %FBSTRING* %vr6910 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6914, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0665
	%vr6917 = bitcast i8* bitcast ([68 x i8]* @Lt_0665 to i8*) to i8*
	; arg 67
	%vr6916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6917, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr6916
	%vr6920 = bitcast %FBSTRING* %vr6916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6920, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0666
	%vr6923 = bitcast i8* bitcast ([68 x i8]* @Lt_0666 to i8*) to i8*
	; arg 67
	%vr6922 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6923, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr6922
	%vr6926 = bitcast %FBSTRING* %vr6922 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6926, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6929 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6928 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6929, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6928
	%vr6932 = bitcast %FBSTRING* %vr6928 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6932, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6935 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6934 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6935, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6934
	%vr6938 = bitcast %FBSTRING* %vr6934 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6938, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0667
	%vr6941 = bitcast i8* bitcast ([42 x i8]* @Lt_0667 to i8*) to i8*
	; arg 41
	%vr6940 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6941, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr6940
	%vr6944 = bitcast %FBSTRING* %vr6940 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6944, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr6947 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr6946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6947, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6946
	%vr6950 = bitcast %FBSTRING* %vr6946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6950, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0668
	%vr6953 = bitcast i8* bitcast ([41 x i8]* @Lt_0668 to i8*) to i8*
	; arg 40
	%vr6952 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6953, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr6952
	%vr6956 = bitcast %FBSTRING* %vr6952 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6956, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0669
	%vr6959 = bitcast i8* bitcast ([26 x i8]* @Lt_0669 to i8*) to i8*
	; arg 25
	%vr6958 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6959, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr6958
	%vr6962 = bitcast %FBSTRING* %vr6958 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6962, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066A
	%vr6965 = bitcast i8* bitcast ([23 x i8]* @Lt_066A to i8*) to i8*
	; arg 22
	%vr6964 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6965, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr6964
	%vr6968 = bitcast %FBSTRING* %vr6964 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6968, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066B
	%vr6971 = bitcast i8* bitcast ([71 x i8]* @Lt_066B to i8*) to i8*
	; arg 70
	%vr6970 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6971, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr6970
	%vr6974 = bitcast %FBSTRING* %vr6970 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6974, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066C
	%vr6977 = bitcast i8* bitcast ([55 x i8]* @Lt_066C to i8*) to i8*
	; arg 54
	%vr6976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6977, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr6976
	%vr6980 = bitcast %FBSTRING* %vr6976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6980, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066D
	%vr6983 = bitcast i8* bitcast ([33 x i8]* @Lt_066D to i8*) to i8*
	; arg 32
	%vr6982 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6983, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr6982
	%vr6986 = bitcast %FBSTRING* %vr6982 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6986, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr6989 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr6988 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6989, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr6988
	%vr6992 = bitcast %FBSTRING* %vr6988 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6992, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr6995 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr6994 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr6995, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr6994
	%vr6998 = bitcast %FBSTRING* %vr6994 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr6998, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066E
	%vr7001 = bitcast i8* bitcast ([35 x i8]* @Lt_066E to i8*) to i8*
	; arg 34
	%vr7000 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7001, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7000
	%vr7004 = bitcast %FBSTRING* %vr7000 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7004, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7007 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7007, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7006
	%vr7010 = bitcast %FBSTRING* %vr7006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7010, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0640
	%vr7013 = bitcast i8* bitcast ([21 x i8]* @Lt_0640 to i8*) to i8*
	; arg 20
	%vr7012 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7013, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7012
	%vr7016 = bitcast %FBSTRING* %vr7012 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7016, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0641
	%vr7019 = bitcast i8* bitcast ([6 x i8]* @Lt_0641 to i8*) to i8*
	; arg 5
	%vr7018 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7019, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr7018
	%vr7022 = bitcast %FBSTRING* %vr7018 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7022, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_066F
	%vr7025 = bitcast i8* bitcast ([64 x i8]* @Lt_066F to i8*) to i8*
	; arg 63
	%vr7024 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7025, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7024
	%vr7028 = bitcast %FBSTRING* %vr7024 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7028, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr7031 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr7030 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7031, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr7030
	%vr7034 = bitcast %FBSTRING* %vr7030 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7034, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0643
	%vr7037 = bitcast i8* bitcast ([24 x i8]* @Lt_0643 to i8*) to i8*
	; arg 23
	%vr7036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7037, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr7036
	%vr7040 = bitcast %FBSTRING* %vr7036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7040, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0670
	%vr7043 = bitcast i8* bitcast ([55 x i8]* @Lt_0670 to i8*) to i8*
	; arg 54
	%vr7042 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7043, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr7042
	%vr7046 = bitcast %FBSTRING* %vr7042 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7046, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0645
	%vr7049 = bitcast i8* bitcast ([63 x i8]* @Lt_0645 to i8*) to i8*
	; arg 62
	%vr7048 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7049, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr7048
	%vr7052 = bitcast %FBSTRING* %vr7048 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7052, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr7055 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr7054 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7055, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr7054
	%vr7058 = bitcast %FBSTRING* %vr7054 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7058, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7061 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7060 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7061, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7060
	%vr7064 = bitcast %FBSTRING* %vr7060 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7064, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7067 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7067, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7066
	%vr7070 = bitcast %FBSTRING* %vr7066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7070, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0671
	%vr7073 = bitcast i8* bitcast ([12 x i8]* @Lt_0671 to i8*) to i8*
	; arg 11
	%vr7072 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7073, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7072
	%vr7076 = bitcast %FBSTRING* %vr7072 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7076, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0672
	%vr7079 = bitcast i8* bitcast ([35 x i8]* @Lt_0672 to i8*) to i8*
	; arg 34
	%vr7078 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7079, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7078
	%vr7082 = bitcast %FBSTRING* %vr7078 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7082, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7085 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7084 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7085, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7084
	%vr7088 = bitcast %FBSTRING* %vr7084 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7088, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0673
	%vr7091 = bitcast i8* bitcast ([46 x i8]* @Lt_0673 to i8*) to i8*
	; arg 45
	%vr7090 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7091, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr7090
	%vr7094 = bitcast %FBSTRING* %vr7090 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7094, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0674
	%vr7097 = bitcast i8* bitcast ([55 x i8]* @Lt_0674 to i8*) to i8*
	; arg 54
	%vr7096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7097, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr7096
	%vr7100 = bitcast %FBSTRING* %vr7096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7100, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7103 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7102 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7103, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7102
	%vr7106 = bitcast %FBSTRING* %vr7102 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7106, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7109 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7108 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7109, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7108
	%vr7112 = bitcast %FBSTRING* %vr7108 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7112, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0675
	%vr7115 = bitcast i8* bitcast ([25 x i8]* @Lt_0675 to i8*) to i8*
	; arg 24
	%vr7114 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7115, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7114
	%vr7118 = bitcast %FBSTRING* %vr7114 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7118, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0676
	%vr7121 = bitcast i8* bitcast ([50 x i8]* @Lt_0676 to i8*) to i8*
	; arg 49
	%vr7120 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7121, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr7120
	%vr7124 = bitcast %FBSTRING* %vr7120 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7124, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7127 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7127, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7126
	%vr7130 = bitcast %FBSTRING* %vr7126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7130, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_065C
	%vr7133 = bitcast i8* bitcast ([21 x i8]* @Lt_065C to i8*) to i8*
	; arg 20
	%vr7132 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7133, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7132
	%vr7136 = bitcast %FBSTRING* %vr7132 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7136, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0677
	%vr7139 = bitcast i8* bitcast ([21 x i8]* @Lt_0677 to i8*) to i8*
	; arg 20
	%vr7138 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7139, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr7138
	%vr7142 = bitcast %FBSTRING* %vr7138 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7142, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0678
	%vr7145 = bitcast i8* bitcast ([29 x i8]* @Lt_0678 to i8*) to i8*
	; arg 28
	%vr7144 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7145, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7144
	%vr7148 = bitcast %FBSTRING* %vr7144 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7148, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0679
	%vr7151 = bitcast i8* bitcast ([29 x i8]* @Lt_0679 to i8*) to i8*
	; arg 28
	%vr7150 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7151, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7150
	%vr7154 = bitcast %FBSTRING* %vr7150 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7154, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7157 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7157, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7156
	%vr7160 = bitcast %FBSTRING* %vr7156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7160, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067A
	%vr7163 = bitcast i8* bitcast ([48 x i8]* @Lt_067A to i8*) to i8*
	; arg 47
	%vr7162 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7163, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr7162
	%vr7166 = bitcast %FBSTRING* %vr7162 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7166, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067B
	%vr7169 = bitcast i8* bitcast ([43 x i8]* @Lt_067B to i8*) to i8*
	; arg 42
	%vr7168 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7169, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr7168
	%vr7172 = bitcast %FBSTRING* %vr7168 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7172, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067C
	%vr7175 = bitcast i8* bitcast ([20 x i8]* @Lt_067C to i8*) to i8*
	; arg 19
	%vr7174 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7175, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr7174
	%vr7178 = bitcast %FBSTRING* %vr7174 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7178, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067D
	%vr7181 = bitcast i8* bitcast ([25 x i8]* @Lt_067D to i8*) to i8*
	; arg 24
	%vr7180 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7181, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7180
	%vr7184 = bitcast %FBSTRING* %vr7180 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7184, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067E
	%vr7187 = bitcast i8* bitcast ([78 x i8]* @Lt_067E to i8*) to i8*
	; arg 77
	%vr7186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7187, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr7186
	%vr7190 = bitcast %FBSTRING* %vr7186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7190, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_067F
	%vr7193 = bitcast i8* bitcast ([38 x i8]* @Lt_067F to i8*) to i8*
	; arg 37
	%vr7192 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7193, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr7192
	%vr7196 = bitcast %FBSTRING* %vr7192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7196, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7199 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7198 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7199, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7198
	%vr7202 = bitcast %FBSTRING* %vr7198 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7202, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7205 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7204 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7205, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7204
	%vr7208 = bitcast %FBSTRING* %vr7204 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7208, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0680
	%vr7211 = bitcast i8* bitcast ([41 x i8]* @Lt_0680 to i8*) to i8*
	; arg 40
	%vr7210 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7211, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr7210
	%vr7214 = bitcast %FBSTRING* %vr7210 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7214, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7217 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7217, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7216
	%vr7220 = bitcast %FBSTRING* %vr7216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7220, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0681
	%vr7223 = bitcast i8* bitcast ([44 x i8]* @Lt_0681 to i8*) to i8*
	; arg 43
	%vr7222 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7223, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr7222
	%vr7226 = bitcast %FBSTRING* %vr7222 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7226, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0682
	%vr7229 = bitcast i8* bitcast ([53 x i8]* @Lt_0682 to i8*) to i8*
	; arg 52
	%vr7228 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7229, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr7228
	%vr7232 = bitcast %FBSTRING* %vr7228 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7232, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7235 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7234 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7235, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7234
	%vr7238 = bitcast %FBSTRING* %vr7234 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7238, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7241 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7240 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7241, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7240
	%vr7244 = bitcast %FBSTRING* %vr7240 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7244, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0671
	%vr7247 = bitcast i8* bitcast ([12 x i8]* @Lt_0671 to i8*) to i8*
	; arg 11
	%vr7246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7247, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr7246
	%vr7250 = bitcast %FBSTRING* %vr7246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7250, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0683
	%vr7253 = bitcast i8* bitcast ([37 x i8]* @Lt_0683 to i8*) to i8*
	; arg 36
	%vr7252 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7253, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr7252
	%vr7256 = bitcast %FBSTRING* %vr7252 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7256, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7259 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7258 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7259, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7258
	%vr7262 = bitcast %FBSTRING* %vr7258 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7262, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064B
	%vr7265 = bitcast i8* bitcast ([40 x i8]* @Lt_064B to i8*) to i8*
	; arg 39
	%vr7264 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7265, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr7264
	%vr7268 = bitcast %FBSTRING* %vr7264 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7268, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0684
	%vr7271 = bitcast i8* bitcast ([25 x i8]* @Lt_0684 to i8*) to i8*
	; arg 24
	%vr7270 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7271, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7270
	%vr7274 = bitcast %FBSTRING* %vr7270 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7274, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0685
	%vr7277 = bitcast i8* bitcast ([39 x i8]* @Lt_0685 to i8*) to i8*
	; arg 38
	%vr7276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7277, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr7276
	%vr7280 = bitcast %FBSTRING* %vr7276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7280, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0645
	%vr7283 = bitcast i8* bitcast ([63 x i8]* @Lt_0645 to i8*) to i8*
	; arg 62
	%vr7282 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7283, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr7282
	%vr7286 = bitcast %FBSTRING* %vr7282 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7286, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7289 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7288 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7289, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7288
	%vr7292 = bitcast %FBSTRING* %vr7288 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7292, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7295 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7294 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7295, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7294
	%vr7298 = bitcast %FBSTRING* %vr7294 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7298, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0686
	%vr7301 = bitcast i8* bitcast ([45 x i8]* @Lt_0686 to i8*) to i8*
	; arg 44
	%vr7300 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7301, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7300
	%vr7304 = bitcast %FBSTRING* %vr7300 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7304, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0687
	%vr7307 = bitcast i8* bitcast ([64 x i8]* @Lt_0687 to i8*) to i8*
	; arg 63
	%vr7306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7307, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7306
	%vr7310 = bitcast %FBSTRING* %vr7306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7310, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7313 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7312 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7313, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7312
	%vr7316 = bitcast %FBSTRING* %vr7312 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7316, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_064B
	%vr7319 = bitcast i8* bitcast ([40 x i8]* @Lt_064B to i8*) to i8*
	; arg 39
	%vr7318 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7319, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr7318
	%vr7322 = bitcast %FBSTRING* %vr7318 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7322, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7325 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7324 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7325, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7324
	%vr7328 = bitcast %FBSTRING* %vr7324 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7328, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0688
	%vr7331 = bitcast i8* bitcast ([26 x i8]* @Lt_0688 to i8*) to i8*
	; arg 25
	%vr7330 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7331, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr7330
	%vr7334 = bitcast %FBSTRING* %vr7330 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7334, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0689
	%vr7337 = bitcast i8* bitcast ([33 x i8]* @Lt_0689 to i8*) to i8*
	; arg 32
	%vr7336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7337, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr7336
	%vr7340 = bitcast %FBSTRING* %vr7336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7340, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068A
	%vr7343 = bitcast i8* bitcast ([64 x i8]* @Lt_068A to i8*) to i8*
	; arg 63
	%vr7342 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7343, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7342
	%vr7346 = bitcast %FBSTRING* %vr7342 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7346, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068B
	%vr7349 = bitcast i8* bitcast ([68 x i8]* @Lt_068B to i8*) to i8*
	; arg 67
	%vr7348 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7349, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr7348
	%vr7352 = bitcast %FBSTRING* %vr7348 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7352, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068C
	%vr7355 = bitcast i8* bitcast ([55 x i8]* @Lt_068C to i8*) to i8*
	; arg 54
	%vr7354 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7355, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr7354
	%vr7358 = bitcast %FBSTRING* %vr7354 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7358, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068D
	%vr7361 = bitcast i8* bitcast ([45 x i8]* @Lt_068D to i8*) to i8*
	; arg 44
	%vr7360 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7361, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7360
	%vr7364 = bitcast %FBSTRING* %vr7360 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7364, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7367 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7367, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7366
	%vr7370 = bitcast %FBSTRING* %vr7366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7370, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7373 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7372 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7373, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7372
	%vr7376 = bitcast %FBSTRING* %vr7372 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7376, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068E
	%vr7379 = bitcast i8* bitcast ([57 x i8]* @Lt_068E to i8*) to i8*
	; arg 56
	%vr7378 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7379, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr7378
	%vr7382 = bitcast %FBSTRING* %vr7378 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7382, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7385 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7384 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7385, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7384
	%vr7388 = bitcast %FBSTRING* %vr7384 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7388, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_068F
	%vr7391 = bitcast i8* bitcast ([24 x i8]* @Lt_068F to i8*) to i8*
	; arg 23
	%vr7390 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7391, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr7390
	%vr7394 = bitcast %FBSTRING* %vr7390 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7394, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0690
	%vr7397 = bitcast i8* bitcast ([31 x i8]* @Lt_0690 to i8*) to i8*
	; arg 30
	%vr7396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7397, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr7396
	%vr7400 = bitcast %FBSTRING* %vr7396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7400, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0691
	%vr7403 = bitcast i8* bitcast ([31 x i8]* @Lt_0691 to i8*) to i8*
	; arg 30
	%vr7402 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7403, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr7402
	%vr7406 = bitcast %FBSTRING* %vr7402 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7406, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0692
	%vr7409 = bitcast i8* bitcast ([36 x i8]* @Lt_0692 to i8*) to i8*
	; arg 35
	%vr7408 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7409, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr7408
	%vr7412 = bitcast %FBSTRING* %vr7408 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7412, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7415 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7414 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7415, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7414
	%vr7418 = bitcast %FBSTRING* %vr7414 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7418, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0693
	%vr7421 = bitcast i8* bitcast ([45 x i8]* @Lt_0693 to i8*) to i8*
	; arg 44
	%vr7420 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7421, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7420
	%vr7424 = bitcast %FBSTRING* %vr7420 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7424, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7427 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7427, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7426
	%vr7430 = bitcast %FBSTRING* %vr7426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7430, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0694
	%vr7433 = bitcast i8* bitcast ([47 x i8]* @Lt_0694 to i8*) to i8*
	; arg 46
	%vr7432 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7433, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr7432
	%vr7436 = bitcast %FBSTRING* %vr7432 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7436, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0695
	%vr7439 = bitcast i8* bitcast ([35 x i8]* @Lt_0695 to i8*) to i8*
	; arg 34
	%vr7438 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7439, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7438
	%vr7442 = bitcast %FBSTRING* %vr7438 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7442, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7445 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7444 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7445, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7444
	%vr7448 = bitcast %FBSTRING* %vr7444 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7448, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0696
	%vr7451 = bitcast i8* bitcast ([30 x i8]* @Lt_0696 to i8*) to i8*
	; arg 29
	%vr7450 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7451, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7450
	%vr7454 = bitcast %FBSTRING* %vr7450 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7454, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0697
	%vr7457 = bitcast i8* bitcast ([59 x i8]* @Lt_0697 to i8*) to i8*
	; arg 58
	%vr7456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7457, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr7456
	%vr7460 = bitcast %FBSTRING* %vr7456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7460, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7463 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7462 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7463, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7462
	%vr7466 = bitcast %FBSTRING* %vr7462 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7466, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0698
	%vr7469 = bitcast i8* bitcast ([30 x i8]* @Lt_0698 to i8*) to i8*
	; arg 29
	%vr7468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7469, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7468
	%vr7472 = bitcast %FBSTRING* %vr7468 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7472, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0699
	%vr7475 = bitcast i8* bitcast ([26 x i8]* @Lt_0699 to i8*) to i8*
	; arg 25
	%vr7474 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7475, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr7474
	%vr7478 = bitcast %FBSTRING* %vr7474 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7478, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7481 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7480 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7481, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7480
	%vr7484 = bitcast %FBSTRING* %vr7480 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7484, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069A
	%vr7487 = bitcast i8* bitcast ([53 x i8]* @Lt_069A to i8*) to i8*
	; arg 52
	%vr7486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7487, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr7486
	%vr7490 = bitcast %FBSTRING* %vr7486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7490, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7493 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7492 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7493, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7492
	%vr7496 = bitcast %FBSTRING* %vr7492 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7496, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069B
	%vr7499 = bitcast i8* bitcast ([47 x i8]* @Lt_069B to i8*) to i8*
	; arg 46
	%vr7498 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7499, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr7498
	%vr7502 = bitcast %FBSTRING* %vr7498 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7502, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069C
	%vr7505 = bitcast i8* bitcast ([50 x i8]* @Lt_069C to i8*) to i8*
	; arg 49
	%vr7504 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7505, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr7504
	%vr7508 = bitcast %FBSTRING* %vr7504 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7508, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7511 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7510 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7511, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7510
	%vr7514 = bitcast %FBSTRING* %vr7510 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7514, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7517 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7517, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7516
	%vr7520 = bitcast %FBSTRING* %vr7516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7520, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069D
	%vr7523 = bitcast i8* bitcast ([71 x i8]* @Lt_069D to i8*) to i8*
	; arg 70
	%vr7522 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7523, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr7522
	%vr7526 = bitcast %FBSTRING* %vr7522 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7526, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7529 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7528 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7529, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7528
	%vr7532 = bitcast %FBSTRING* %vr7528 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7532, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069E
	%vr7535 = bitcast i8* bitcast ([25 x i8]* @Lt_069E to i8*) to i8*
	; arg 24
	%vr7534 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7535, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr7534
	%vr7538 = bitcast %FBSTRING* %vr7534 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7538, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_069F
	%vr7541 = bitcast i8* bitcast ([23 x i8]* @Lt_069F to i8*) to i8*
	; arg 22
	%vr7540 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7541, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr7540
	%vr7544 = bitcast %FBSTRING* %vr7540 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7544, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A0
	%vr7547 = bitcast i8* bitcast ([30 x i8]* @Lt_06A0 to i8*) to i8*
	; arg 29
	%vr7546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7547, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7546
	%vr7550 = bitcast %FBSTRING* %vr7546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7550, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A1
	%vr7553 = bitcast i8* bitcast ([72 x i8]* @Lt_06A1 to i8*) to i8*
	; arg 71
	%vr7552 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7553, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr7552
	%vr7556 = bitcast %FBSTRING* %vr7552 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7556, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0645
	%vr7559 = bitcast i8* bitcast ([63 x i8]* @Lt_0645 to i8*) to i8*
	; arg 62
	%vr7558 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7559, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr7558
	%vr7562 = bitcast %FBSTRING* %vr7558 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7562, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7565 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7564 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7565, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7564
	%vr7568 = bitcast %FBSTRING* %vr7564 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7568, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7571 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7570 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7571, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7570
	%vr7574 = bitcast %FBSTRING* %vr7570 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7574, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A2
	%vr7577 = bitcast i8* bitcast ([46 x i8]* @Lt_06A2 to i8*) to i8*
	; arg 45
	%vr7576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7577, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr7576
	%vr7580 = bitcast %FBSTRING* %vr7576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7580, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A3
	%vr7583 = bitcast i8* bitcast ([47 x i8]* @Lt_06A3 to i8*) to i8*
	; arg 46
	%vr7582 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7583, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr7582
	%vr7586 = bitcast %FBSTRING* %vr7582 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7586, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7589 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7588 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7589, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7588
	%vr7592 = bitcast %FBSTRING* %vr7588 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7592, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A4
	%vr7595 = bitcast i8* bitcast ([44 x i8]* @Lt_06A4 to i8*) to i8*
	; arg 43
	%vr7594 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7595, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr7594
	%vr7598 = bitcast %FBSTRING* %vr7594 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7598, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A5
	%vr7601 = bitcast i8* bitcast ([30 x i8]* @Lt_06A5 to i8*) to i8*
	; arg 29
	%vr7600 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7601, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7600
	%vr7604 = bitcast %FBSTRING* %vr7600 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7604, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A6
	%vr7607 = bitcast i8* bitcast ([50 x i8]* @Lt_06A6 to i8*) to i8*
	; arg 49
	%vr7606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7607, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr7606
	%vr7610 = bitcast %FBSTRING* %vr7606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7610, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A7
	%vr7613 = bitcast i8* bitcast ([43 x i8]* @Lt_06A7 to i8*) to i8*
	; arg 42
	%vr7612 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7613, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr7612
	%vr7616 = bitcast %FBSTRING* %vr7612 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7616, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7619 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7618 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7619, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7618
	%vr7622 = bitcast %FBSTRING* %vr7618 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7622, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7625 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7624 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7625, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7624
	%vr7628 = bitcast %FBSTRING* %vr7624 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7628, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A8
	%vr7631 = bitcast i8* bitcast ([36 x i8]* @Lt_06A8 to i8*) to i8*
	; arg 35
	%vr7630 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7631, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr7630
	%vr7634 = bitcast %FBSTRING* %vr7630 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7634, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7637 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7637, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7636
	%vr7640 = bitcast %FBSTRING* %vr7636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7640, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06A9
	%vr7643 = bitcast i8* bitcast ([16 x i8]* @Lt_06A9 to i8*) to i8*
	; arg 15
	%vr7642 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7643, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr7642
	%vr7646 = bitcast %FBSTRING* %vr7642 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7646, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AA
	%vr7649 = bitcast i8* bitcast ([35 x i8]* @Lt_06AA to i8*) to i8*
	; arg 34
	%vr7648 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7649, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr7648
	%vr7652 = bitcast %FBSTRING* %vr7648 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7652, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7655 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7654 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7655, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7654
	%vr7658 = bitcast %FBSTRING* %vr7654 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7658, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AB
	%vr7661 = bitcast i8* bitcast ([22 x i8]* @Lt_06AB to i8*) to i8*
	; arg 21
	%vr7660 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7661, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7660
	%vr7664 = bitcast %FBSTRING* %vr7660 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7664, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AC
	%vr7667 = bitcast i8* bitcast ([10 x i8]* @Lt_06AC to i8*) to i8*
	; arg 9
	%vr7666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7667, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr7666
	%vr7670 = bitcast %FBSTRING* %vr7666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7670, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AD
	%vr7673 = bitcast i8* bitcast ([34 x i8]* @Lt_06AD to i8*) to i8*
	; arg 33
	%vr7672 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7673, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr7672
	%vr7676 = bitcast %FBSTRING* %vr7672 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7676, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AE
	%vr7679 = bitcast i8* bitcast ([57 x i8]* @Lt_06AE to i8*) to i8*
	; arg 56
	%vr7678 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7679, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr7678
	%vr7682 = bitcast %FBSTRING* %vr7678 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7682, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AF
	%vr7685 = bitcast i8* bitcast ([42 x i8]* @Lt_06AF to i8*) to i8*
	; arg 41
	%vr7684 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7685, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr7684
	%vr7688 = bitcast %FBSTRING* %vr7684 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7688, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B0
	%vr7691 = bitcast i8* bitcast ([11 x i8]* @Lt_06B0 to i8*) to i8*
	; arg 10
	%vr7690 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7691, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7690
	%vr7694 = bitcast %FBSTRING* %vr7690 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7694, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7697 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7697, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7696
	%vr7700 = bitcast %FBSTRING* %vr7696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7700, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AB
	%vr7703 = bitcast i8* bitcast ([22 x i8]* @Lt_06AB to i8*) to i8*
	; arg 21
	%vr7702 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7703, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7702
	%vr7706 = bitcast %FBSTRING* %vr7702 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7706, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B1
	%vr7709 = bitcast i8* bitcast ([10 x i8]* @Lt_06B1 to i8*) to i8*
	; arg 9
	%vr7708 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7709, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr7708
	%vr7712 = bitcast %FBSTRING* %vr7708 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7712, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B2
	%vr7715 = bitcast i8* bitcast ([10 x i8]* @Lt_06B2 to i8*) to i8*
	; arg 9
	%vr7714 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7715, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr7714
	%vr7718 = bitcast %FBSTRING* %vr7714 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7718, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B3
	%vr7721 = bitcast i8* bitcast ([38 x i8]* @Lt_06B3 to i8*) to i8*
	; arg 37
	%vr7720 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7721, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr7720
	%vr7724 = bitcast %FBSTRING* %vr7720 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7724, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B4
	%vr7727 = bitcast i8* bitcast ([38 x i8]* @Lt_06B4 to i8*) to i8*
	; arg 37
	%vr7726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7727, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr7726
	%vr7730 = bitcast %FBSTRING* %vr7726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7730, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B5
	%vr7733 = bitcast i8* bitcast ([38 x i8]* @Lt_06B5 to i8*) to i8*
	; arg 37
	%vr7732 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7733, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr7732
	%vr7736 = bitcast %FBSTRING* %vr7732 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7736, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B6
	%vr7739 = bitcast i8* bitcast ([30 x i8]* @Lt_06B6 to i8*) to i8*
	; arg 29
	%vr7738 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7739, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr7738
	%vr7742 = bitcast %FBSTRING* %vr7738 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7742, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B7
	%vr7745 = bitcast i8* bitcast ([45 x i8]* @Lt_06B7 to i8*) to i8*
	; arg 44
	%vr7744 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7745, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7744
	%vr7748 = bitcast %FBSTRING* %vr7744 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7748, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B8
	%vr7751 = bitcast i8* bitcast ([45 x i8]* @Lt_06B8 to i8*) to i8*
	; arg 44
	%vr7750 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7751, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr7750
	%vr7754 = bitcast %FBSTRING* %vr7750 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7754, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B0
	%vr7757 = bitcast i8* bitcast ([11 x i8]* @Lt_06B0 to i8*) to i8*
	; arg 10
	%vr7756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7757, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7756
	%vr7760 = bitcast %FBSTRING* %vr7756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7760, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7763 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7762 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7763, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7762
	%vr7766 = bitcast %FBSTRING* %vr7762 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7766, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B9
	%vr7769 = bitcast i8* bitcast ([24 x i8]* @Lt_06B9 to i8*) to i8*
	; arg 23
	%vr7768 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7769, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr7768
	%vr7772 = bitcast %FBSTRING* %vr7768 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7772, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06AC
	%vr7775 = bitcast i8* bitcast ([10 x i8]* @Lt_06AC to i8*) to i8*
	; arg 9
	%vr7774 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7775, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr7774
	%vr7778 = bitcast %FBSTRING* %vr7774 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7778, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BA
	%vr7781 = bitcast i8* bitcast ([22 x i8]* @Lt_06BA to i8*) to i8*
	; arg 21
	%vr7780 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7781, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7780
	%vr7784 = bitcast %FBSTRING* %vr7780 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7784, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B0
	%vr7787 = bitcast i8* bitcast ([11 x i8]* @Lt_06B0 to i8*) to i8*
	; arg 10
	%vr7786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7787, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr7786
	%vr7790 = bitcast %FBSTRING* %vr7786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7790, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7793 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7792 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7793, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7792
	%vr7796 = bitcast %FBSTRING* %vr7792 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7796, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7799 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7798 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7799, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7798
	%vr7802 = bitcast %FBSTRING* %vr7798 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7802, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BB
	%vr7805 = bitcast i8* bitcast ([41 x i8]* @Lt_06BB to i8*) to i8*
	; arg 40
	%vr7804 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7805, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr7804
	%vr7808 = bitcast %FBSTRING* %vr7804 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7808, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7811 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7811, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7810
	%vr7814 = bitcast %FBSTRING* %vr7810 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7814, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BC
	%vr7817 = bitcast i8* bitcast ([27 x i8]* @Lt_06BC to i8*) to i8*
	; arg 26
	%vr7816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7817, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr7816
	%vr7820 = bitcast %FBSTRING* %vr7816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7820, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7823 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7822 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7823, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7822
	%vr7826 = bitcast %FBSTRING* %vr7822 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7826, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BD
	%vr7829 = bitcast i8* bitcast ([16 x i8]* @Lt_06BD to i8*) to i8*
	; arg 15
	%vr7828 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7829, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr7828
	%vr7832 = bitcast %FBSTRING* %vr7828 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7832, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BE
	%vr7835 = bitcast i8* bitcast ([22 x i8]* @Lt_06BE to i8*) to i8*
	; arg 21
	%vr7834 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7835, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr7834
	%vr7838 = bitcast %FBSTRING* %vr7834 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7838, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06BF
	%vr7841 = bitcast i8* bitcast ([36 x i8]* @Lt_06BF to i8*) to i8*
	; arg 35
	%vr7840 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7841, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr7840
	%vr7844 = bitcast %FBSTRING* %vr7840 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7844, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C0
	%vr7847 = bitcast i8* bitcast ([17 x i8]* @Lt_06C0 to i8*) to i8*
	; arg 16
	%vr7846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7847, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr7846
	%vr7850 = bitcast %FBSTRING* %vr7846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7850, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr7853 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr7852 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7853, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7852
	%vr7856 = bitcast %FBSTRING* %vr7852 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7856, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C2
	%vr7859 = bitcast i8* bitcast ([36 x i8]* @Lt_06C2 to i8*) to i8*
	; arg 35
	%vr7858 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7859, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr7858
	%vr7862 = bitcast %FBSTRING* %vr7858 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7862, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C3
	%vr7865 = bitcast i8* bitcast ([59 x i8]* @Lt_06C3 to i8*) to i8*
	; arg 58
	%vr7864 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7865, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr7864
	%vr7868 = bitcast %FBSTRING* %vr7864 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7868, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr7871 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr7870 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7871, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr7870
	%vr7874 = bitcast %FBSTRING* %vr7870 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7874, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C5
	%vr7877 = bitcast i8* bitcast ([29 x i8]* @Lt_06C5 to i8*) to i8*
	; arg 28
	%vr7876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7877, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr7876
	%vr7880 = bitcast %FBSTRING* %vr7876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7880, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C6
	%vr7883 = bitcast i8* bitcast ([58 x i8]* @Lt_06C6 to i8*) to i8*
	; arg 57
	%vr7882 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7883, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr7882
	%vr7886 = bitcast %FBSTRING* %vr7882 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7886, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7889 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7888 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7889, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7888
	%vr7892 = bitcast %FBSTRING* %vr7888 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7892, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C7
	%vr7895 = bitcast i8* bitcast ([44 x i8]* @Lt_06C7 to i8*) to i8*
	; arg 43
	%vr7894 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7895, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr7894
	%vr7898 = bitcast %FBSTRING* %vr7894 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7898, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C8
	%vr7901 = bitcast i8* bitcast ([63 x i8]* @Lt_06C8 to i8*) to i8*
	; arg 62
	%vr7900 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7901, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr7900
	%vr7904 = bitcast %FBSTRING* %vr7900 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7904, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7907 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7907, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7906
	%vr7910 = bitcast %FBSTRING* %vr7906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7910, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C9
	%vr7913 = bitcast i8* bitcast ([64 x i8]* @Lt_06C9 to i8*) to i8*
	; arg 63
	%vr7912 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7913, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7912
	%vr7916 = bitcast %FBSTRING* %vr7912 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7916, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr7919 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr7918 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7919, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr7918
	%vr7922 = bitcast %FBSTRING* %vr7918 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7922, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CA
	%vr7925 = bitcast i8* bitcast ([42 x i8]* @Lt_06CA to i8*) to i8*
	; arg 41
	%vr7924 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7925, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr7924
	%vr7928 = bitcast %FBSTRING* %vr7924 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7928, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CB
	%vr7931 = bitcast i8* bitcast ([59 x i8]* @Lt_06CB to i8*) to i8*
	; arg 58
	%vr7930 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7931, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr7930
	%vr7934 = bitcast %FBSTRING* %vr7930 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7934, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr7937 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr7936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7937, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7936
	%vr7940 = bitcast %FBSTRING* %vr7936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7940, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr7943 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr7942 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7943, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr7942
	%vr7946 = bitcast %FBSTRING* %vr7942 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7946, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CC
	%vr7949 = bitcast i8* bitcast ([66 x i8]* @Lt_06CC to i8*) to i8*
	; arg 65
	%vr7948 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7949, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr7948
	%vr7952 = bitcast %FBSTRING* %vr7948 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7952, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr7955 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr7954 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7955, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr7954
	%vr7958 = bitcast %FBSTRING* %vr7954 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7958, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CD
	%vr7961 = bitcast i8* bitcast ([39 x i8]* @Lt_06CD to i8*) to i8*
	; arg 38
	%vr7960 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7961, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr7960
	%vr7964 = bitcast %FBSTRING* %vr7960 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7964, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CE
	%vr7967 = bitcast i8* bitcast ([64 x i8]* @Lt_06CE to i8*) to i8*
	; arg 63
	%vr7966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7967, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr7966
	%vr7970 = bitcast %FBSTRING* %vr7966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7970, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06CF
	%vr7973 = bitcast i8* bitcast ([19 x i8]* @Lt_06CF to i8*) to i8*
	; arg 18
	%vr7972 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7973, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr7972
	%vr7976 = bitcast %FBSTRING* %vr7972 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7976, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D0
	%vr7979 = bitcast i8* bitcast ([54 x i8]* @Lt_06D0 to i8*) to i8*
	; arg 53
	%vr7978 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7979, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr7978
	%vr7982 = bitcast %FBSTRING* %vr7978 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7982, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D1
	%vr7985 = bitcast i8* bitcast ([54 x i8]* @Lt_06D1 to i8*) to i8*
	; arg 53
	%vr7984 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7985, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr7984
	%vr7988 = bitcast %FBSTRING* %vr7984 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7988, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D2
	%vr7991 = bitcast i8* bitcast ([54 x i8]* @Lt_06D2 to i8*) to i8*
	; arg 53
	%vr7990 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7991, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr7990
	%vr7994 = bitcast %FBSTRING* %vr7990 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr7994, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D3
	%vr7997 = bitcast i8* bitcast ([54 x i8]* @Lt_06D3 to i8*) to i8*
	; arg 53
	%vr7996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr7997, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr7996
	%vr8000 = bitcast %FBSTRING* %vr7996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8000, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D4
	%vr8003 = bitcast i8* bitcast ([26 x i8]* @Lt_06D4 to i8*) to i8*
	; arg 25
	%vr8002 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8003, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8002
	%vr8006 = bitcast %FBSTRING* %vr8002 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8006, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D5
	%vr8009 = bitcast i8* bitcast ([42 x i8]* @Lt_06D5 to i8*) to i8*
	; arg 41
	%vr8008 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8009, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr8008
	%vr8012 = bitcast %FBSTRING* %vr8008 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8012, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8015 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8014 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8015, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8014
	%vr8018 = bitcast %FBSTRING* %vr8014 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8018, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8021 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8020 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8021, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8020
	%vr8024 = bitcast %FBSTRING* %vr8020 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8024, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D6
	%vr8027 = bitcast i8* bitcast ([73 x i8]* @Lt_06D6 to i8*) to i8*
	; arg 72
	%vr8026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8027, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr8026
	%vr8030 = bitcast %FBSTRING* %vr8026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8030, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8033 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8032 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8033, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8032
	%vr8036 = bitcast %FBSTRING* %vr8032 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8036, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D7
	%vr8039 = bitcast i8* bitcast ([29 x i8]* @Lt_06D7 to i8*) to i8*
	; arg 28
	%vr8038 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8039, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8038
	%vr8042 = bitcast %FBSTRING* %vr8038 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8042, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0648
	%vr8045 = bitcast i8* bitcast ([53 x i8]* @Lt_0648 to i8*) to i8*
	; arg 52
	%vr8044 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8045, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8044
	%vr8048 = bitcast %FBSTRING* %vr8044 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8048, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D8
	%vr8051 = bitcast i8* bitcast ([69 x i8]* @Lt_06D8 to i8*) to i8*
	; arg 68
	%vr8050 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8051, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr8050
	%vr8054 = bitcast %FBSTRING* %vr8050 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8054, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8057 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8057, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8056
	%vr8060 = bitcast %FBSTRING* %vr8056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8060, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8063 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8062 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8063, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8062
	%vr8066 = bitcast %FBSTRING* %vr8062 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8066, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06D9
	%vr8069 = bitcast i8* bitcast ([66 x i8]* @Lt_06D9 to i8*) to i8*
	; arg 65
	%vr8068 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8069, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr8068
	%vr8072 = bitcast %FBSTRING* %vr8068 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8072, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8075 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8074 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8075, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8074
	%vr8078 = bitcast %FBSTRING* %vr8074 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8078, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DA
	%vr8081 = bitcast i8* bitcast ([20 x i8]* @Lt_06DA to i8*) to i8*
	; arg 19
	%vr8080 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8081, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8080
	%vr8084 = bitcast %FBSTRING* %vr8080 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8084, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DB
	%vr8087 = bitcast i8* bitcast ([20 x i8]* @Lt_06DB to i8*) to i8*
	; arg 19
	%vr8086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8087, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8086
	%vr8090 = bitcast %FBSTRING* %vr8086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8090, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DC
	%vr8093 = bitcast i8* bitcast ([20 x i8]* @Lt_06DC to i8*) to i8*
	; arg 19
	%vr8092 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8093, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8092
	%vr8096 = bitcast %FBSTRING* %vr8092 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8096, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8099 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8098 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8099, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8098
	%vr8102 = bitcast %FBSTRING* %vr8098 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8102, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DD
	%vr8105 = bitcast i8* bitcast ([19 x i8]* @Lt_06DD to i8*) to i8*
	; arg 18
	%vr8104 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8105, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr8104
	%vr8108 = bitcast %FBSTRING* %vr8104 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8108, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DE
	%vr8111 = bitcast i8* bitcast ([19 x i8]* @Lt_06DE to i8*) to i8*
	; arg 18
	%vr8110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8111, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr8110
	%vr8114 = bitcast %FBSTRING* %vr8110 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8114, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06DF
	%vr8117 = bitcast i8* bitcast ([19 x i8]* @Lt_06DF to i8*) to i8*
	; arg 18
	%vr8116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8117, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr8116
	%vr8120 = bitcast %FBSTRING* %vr8116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8120, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8123 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8122 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8123, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8122
	%vr8126 = bitcast %FBSTRING* %vr8122 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8126, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E0
	%vr8129 = bitcast i8* bitcast ([62 x i8]* @Lt_06E0 to i8*) to i8*
	; arg 61
	%vr8128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8129, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr8128
	%vr8132 = bitcast %FBSTRING* %vr8128 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8132, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E1
	%vr8135 = bitcast i8* bitcast ([62 x i8]* @Lt_06E1 to i8*) to i8*
	; arg 61
	%vr8134 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8135, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr8134
	%vr8138 = bitcast %FBSTRING* %vr8134 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8138, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E2
	%vr8141 = bitcast i8* bitcast ([62 x i8]* @Lt_06E2 to i8*) to i8*
	; arg 61
	%vr8140 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8141, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr8140
	%vr8144 = bitcast %FBSTRING* %vr8140 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8144, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr8147 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr8146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8147, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8146
	%vr8150 = bitcast %FBSTRING* %vr8146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8150, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E3
	%vr8153 = bitcast i8* bitcast ([45 x i8]* @Lt_06E3 to i8*) to i8*
	; arg 44
	%vr8152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8153, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr8152
	%vr8156 = bitcast %FBSTRING* %vr8152 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8156, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E4
	%vr8159 = bitcast i8* bitcast ([73 x i8]* @Lt_06E4 to i8*) to i8*
	; arg 72
	%vr8158 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8159, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr8158
	%vr8162 = bitcast %FBSTRING* %vr8158 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8162, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E5
	%vr8165 = bitcast i8* bitcast ([74 x i8]* @Lt_06E5 to i8*) to i8*
	; arg 73
	%vr8164 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8165, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr8164
	%vr8168 = bitcast %FBSTRING* %vr8164 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8168, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E6
	%vr8171 = bitcast i8* bitcast ([74 x i8]* @Lt_06E6 to i8*) to i8*
	; arg 73
	%vr8170 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8171, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr8170
	%vr8174 = bitcast %FBSTRING* %vr8170 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8174, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8177 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8177, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8176
	%vr8180 = bitcast %FBSTRING* %vr8176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8180, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E7
	%vr8183 = bitcast i8* bitcast ([30 x i8]* @Lt_06E7 to i8*) to i8*
	; arg 29
	%vr8182 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8183, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8182
	%vr8186 = bitcast %FBSTRING* %vr8182 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8186, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8189 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8188 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8189, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8188
	%vr8192 = bitcast %FBSTRING* %vr8188 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8192, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8195 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8194 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8195, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8194
	%vr8198 = bitcast %FBSTRING* %vr8194 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8198, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E8
	%vr8201 = bitcast i8* bitcast ([24 x i8]* @Lt_06E8 to i8*) to i8*
	; arg 23
	%vr8200 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8201, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8200
	%vr8204 = bitcast %FBSTRING* %vr8200 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8204, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8207 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8207, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8206
	%vr8210 = bitcast %FBSTRING* %vr8206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8210, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06E9
	%vr8213 = bitcast i8* bitcast ([32 x i8]* @Lt_06E9 to i8*) to i8*
	; arg 31
	%vr8212 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8213, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr8212
	%vr8216 = bitcast %FBSTRING* %vr8212 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8216, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EA
	%vr8219 = bitcast i8* bitcast ([48 x i8]* @Lt_06EA to i8*) to i8*
	; arg 47
	%vr8218 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8219, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr8218
	%vr8222 = bitcast %FBSTRING* %vr8218 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8222, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EB
	%vr8225 = bitcast i8* bitcast ([26 x i8]* @Lt_06EB to i8*) to i8*
	; arg 25
	%vr8224 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8225, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8224
	%vr8228 = bitcast %FBSTRING* %vr8224 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8228, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr8231 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr8230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8231, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr8230
	%vr8234 = bitcast %FBSTRING* %vr8230 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8234, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06ED
	%vr8237 = bitcast i8* bitcast ([38 x i8]* @Lt_06ED to i8*) to i8*
	; arg 37
	%vr8236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8237, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr8236
	%vr8240 = bitcast %FBSTRING* %vr8236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8240, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EE
	%vr8243 = bitcast i8* bitcast ([16 x i8]* @Lt_06EE to i8*) to i8*
	; arg 15
	%vr8242 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8243, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr8242
	%vr8246 = bitcast %FBSTRING* %vr8242 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8246, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EF
	%vr8249 = bitcast i8* bitcast ([41 x i8]* @Lt_06EF to i8*) to i8*
	; arg 40
	%vr8248 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8249, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8248
	%vr8252 = bitcast %FBSTRING* %vr8248 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8252, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F0
	%vr8255 = bitcast i8* bitcast ([31 x i8]* @Lt_06F0 to i8*) to i8*
	; arg 30
	%vr8254 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8255, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8254
	%vr8258 = bitcast %FBSTRING* %vr8254 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8258, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F1
	%vr8261 = bitcast i8* bitcast ([31 x i8]* @Lt_06F1 to i8*) to i8*
	; arg 30
	%vr8260 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8261, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8260
	%vr8264 = bitcast %FBSTRING* %vr8260 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8264, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F2
	%vr8267 = bitcast i8* bitcast ([31 x i8]* @Lt_06F2 to i8*) to i8*
	; arg 30
	%vr8266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8267, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8266
	%vr8270 = bitcast %FBSTRING* %vr8266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8270, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F3
	%vr8273 = bitcast i8* bitcast ([44 x i8]* @Lt_06F3 to i8*) to i8*
	; arg 43
	%vr8272 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8273, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr8272
	%vr8276 = bitcast %FBSTRING* %vr8272 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8276, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F4
	%vr8279 = bitcast i8* bitcast ([20 x i8]* @Lt_06F4 to i8*) to i8*
	; arg 19
	%vr8278 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8279, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr8278
	%vr8282 = bitcast %FBSTRING* %vr8278 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8282, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F5
	%vr8285 = bitcast i8* bitcast ([5 x i8]* @Lt_06F5 to i8*) to i8*
	; arg 4
	%vr8284 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8285, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr8284
	%vr8288 = bitcast %FBSTRING* %vr8284 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8288, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F6
	%vr8291 = bitcast i8* bitcast ([14 x i8]* @Lt_06F6 to i8*) to i8*
	; arg 13
	%vr8290 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8291, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr8290
	%vr8294 = bitcast %FBSTRING* %vr8290 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8294, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8297 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8297, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8296
	%vr8300 = bitcast %FBSTRING* %vr8296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8300, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8303 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8302 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8303, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8302
	%vr8306 = bitcast %FBSTRING* %vr8302 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8306, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F7
	%vr8309 = bitcast i8* bitcast ([33 x i8]* @Lt_06F7 to i8*) to i8*
	; arg 32
	%vr8308 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8309, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8308
	%vr8312 = bitcast %FBSTRING* %vr8308 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8312, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8315 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8314 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8315, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8314
	%vr8318 = bitcast %FBSTRING* %vr8314 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8318, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F8
	%vr8321 = bitcast i8* bitcast ([83 x i8]* @Lt_06F8 to i8*) to i8*
	; arg 82
	%vr8320 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8321, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr8320
	%vr8324 = bitcast %FBSTRING* %vr8320 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8324, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F9
	%vr8327 = bitcast i8* bitcast ([50 x i8]* @Lt_06F9 to i8*) to i8*
	; arg 49
	%vr8326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8327, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr8326
	%vr8330 = bitcast %FBSTRING* %vr8326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8330, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FA
	%vr8333 = bitcast i8* bitcast ([41 x i8]* @Lt_06FA to i8*) to i8*
	; arg 40
	%vr8332 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8333, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8332
	%vr8336 = bitcast %FBSTRING* %vr8332 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8336, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8339 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8338 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8339, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8338
	%vr8342 = bitcast %FBSTRING* %vr8338 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8342, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8345 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8344 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8345, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8344
	%vr8348 = bitcast %FBSTRING* %vr8344 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8348, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FB
	%vr8351 = bitcast i8* bitcast ([57 x i8]* @Lt_06FB to i8*) to i8*
	; arg 56
	%vr8350 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8351, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr8350
	%vr8354 = bitcast %FBSTRING* %vr8350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8354, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8357 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8357, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8356
	%vr8360 = bitcast %FBSTRING* %vr8356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8360, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FC
	%vr8363 = bitcast i8* bitcast ([55 x i8]* @Lt_06FC to i8*) to i8*
	; arg 54
	%vr8362 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8363, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr8362
	%vr8366 = bitcast %FBSTRING* %vr8362 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8366, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FD
	%vr8369 = bitcast i8* bitcast ([41 x i8]* @Lt_06FD to i8*) to i8*
	; arg 40
	%vr8368 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8369, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8368
	%vr8372 = bitcast %FBSTRING* %vr8368 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8372, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8375 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8374 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8375, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8374
	%vr8378 = bitcast %FBSTRING* %vr8374 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8378, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8381 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8380 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8381, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8380
	%vr8384 = bitcast %FBSTRING* %vr8380 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8384, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FE
	%vr8387 = bitcast i8* bitcast ([24 x i8]* @Lt_06FE to i8*) to i8*
	; arg 23
	%vr8386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8387, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8386
	%vr8390 = bitcast %FBSTRING* %vr8386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8390, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8393 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8392 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8393, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8392
	%vr8396 = bitcast %FBSTRING* %vr8392 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8396, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06FF
	%vr8399 = bitcast i8* bitcast ([38 x i8]* @Lt_06FF to i8*) to i8*
	; arg 37
	%vr8398 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8399, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr8398
	%vr8402 = bitcast %FBSTRING* %vr8398 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8402, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8405 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8404 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8405, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8404
	%vr8408 = bitcast %FBSTRING* %vr8404 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8408, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8411 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8410 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8411, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8410
	%vr8414 = bitcast %FBSTRING* %vr8410 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8414, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0700
	%vr8417 = bitcast i8* bitcast ([24 x i8]* @Lt_0700 to i8*) to i8*
	; arg 23
	%vr8416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8417, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8416
	%vr8420 = bitcast %FBSTRING* %vr8416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8420, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8423 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8422 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8423, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8422
	%vr8426 = bitcast %FBSTRING* %vr8422 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8426, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0701
	%vr8429 = bitcast i8* bitcast ([24 x i8]* @Lt_0701 to i8*) to i8*
	; arg 23
	%vr8428 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8429, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8428
	%vr8432 = bitcast %FBSTRING* %vr8428 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8432, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0702
	%vr8435 = bitcast i8* bitcast ([38 x i8]* @Lt_0702 to i8*) to i8*
	; arg 37
	%vr8434 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8435, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr8434
	%vr8438 = bitcast %FBSTRING* %vr8434 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8438, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8441 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8440 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8441, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8440
	%vr8444 = bitcast %FBSTRING* %vr8440 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8444, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8447 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8447, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8446
	%vr8450 = bitcast %FBSTRING* %vr8446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8450, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0703
	%vr8453 = bitcast i8* bitcast ([24 x i8]* @Lt_0703 to i8*) to i8*
	; arg 23
	%vr8452 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8453, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8452
	%vr8456 = bitcast %FBSTRING* %vr8452 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8456, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8459 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8458 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8459, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8458
	%vr8462 = bitcast %FBSTRING* %vr8458 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8462, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0704
	%vr8465 = bitcast i8* bitcast ([31 x i8]* @Lt_0704 to i8*) to i8*
	; arg 30
	%vr8464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8465, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8464
	%vr8468 = bitcast %FBSTRING* %vr8464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8468, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0705
	%vr8471 = bitcast i8* bitcast ([38 x i8]* @Lt_0705 to i8*) to i8*
	; arg 37
	%vr8470 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8471, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr8470
	%vr8474 = bitcast %FBSTRING* %vr8470 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8474, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8477 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8477, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8476
	%vr8480 = bitcast %FBSTRING* %vr8476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8480, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8483 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8482 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8483, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8482
	%vr8486 = bitcast %FBSTRING* %vr8482 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8486, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0706
	%vr8489 = bitcast i8* bitcast ([34 x i8]* @Lt_0706 to i8*) to i8*
	; arg 33
	%vr8488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8489, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr8488
	%vr8492 = bitcast %FBSTRING* %vr8488 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8492, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8495 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8494 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8495, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8494
	%vr8498 = bitcast %FBSTRING* %vr8494 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8498, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0707
	%vr8501 = bitcast i8* bitcast ([42 x i8]* @Lt_0707 to i8*) to i8*
	; arg 41
	%vr8500 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8501, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr8500
	%vr8504 = bitcast %FBSTRING* %vr8500 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8504, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0708
	%vr8507 = bitcast i8* bitcast ([27 x i8]* @Lt_0708 to i8*) to i8*
	; arg 26
	%vr8506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8507, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8506
	%vr8510 = bitcast %FBSTRING* %vr8506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8510, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8513 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8512 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8513, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8512
	%vr8516 = bitcast %FBSTRING* %vr8512 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8516, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8519 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8518 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8519, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8518
	%vr8522 = bitcast %FBSTRING* %vr8518 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8522, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0709
	%vr8525 = bitcast i8* bitcast ([34 x i8]* @Lt_0709 to i8*) to i8*
	; arg 33
	%vr8524 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8525, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr8524
	%vr8528 = bitcast %FBSTRING* %vr8524 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8528, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8531 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8530 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8531, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8530
	%vr8534 = bitcast %FBSTRING* %vr8530 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8534, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070A
	%vr8537 = bitcast i8* bitcast ([42 x i8]* @Lt_070A to i8*) to i8*
	; arg 41
	%vr8536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8537, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr8536
	%vr8540 = bitcast %FBSTRING* %vr8536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8540, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0708
	%vr8543 = bitcast i8* bitcast ([27 x i8]* @Lt_0708 to i8*) to i8*
	; arg 26
	%vr8542 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8543, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8542
	%vr8546 = bitcast %FBSTRING* %vr8542 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8546, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8549 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8548 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8549, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8548
	%vr8552 = bitcast %FBSTRING* %vr8548 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8552, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8555 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8554 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8555, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8554
	%vr8558 = bitcast %FBSTRING* %vr8554 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8558, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070B
	%vr8561 = bitcast i8* bitcast ([36 x i8]* @Lt_070B to i8*) to i8*
	; arg 35
	%vr8560 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8561, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr8560
	%vr8564 = bitcast %FBSTRING* %vr8560 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8564, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8567 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8567, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8566
	%vr8570 = bitcast %FBSTRING* %vr8566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8570, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070C
	%vr8573 = bitcast i8* bitcast ([51 x i8]* @Lt_070C to i8*) to i8*
	; arg 50
	%vr8572 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8573, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr8572
	%vr8576 = bitcast %FBSTRING* %vr8572 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8576, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8579 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8578 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8579, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8578
	%vr8582 = bitcast %FBSTRING* %vr8578 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8582, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8585 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8584 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8585, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8584
	%vr8588 = bitcast %FBSTRING* %vr8584 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8588, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F2
	%vr8591 = bitcast i8* bitcast ([69 x i8]* @Lt_05F2 to i8*) to i8*
	; arg 68
	%vr8590 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8591, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr8590
	%vr8594 = bitcast %FBSTRING* %vr8590 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8594, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8597 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8597, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8596
	%vr8600 = bitcast %FBSTRING* %vr8596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8600, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070D
	%vr8603 = bitcast i8* bitcast ([32 x i8]* @Lt_070D to i8*) to i8*
	; arg 31
	%vr8602 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8603, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr8602
	%vr8606 = bitcast %FBSTRING* %vr8602 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8606, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8609 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8608 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8609, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8608
	%vr8612 = bitcast %FBSTRING* %vr8608 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8612, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070E
	%vr8615 = bitcast i8* bitcast ([24 x i8]* @Lt_070E to i8*) to i8*
	; arg 23
	%vr8614 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8615, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr8614
	%vr8618 = bitcast %FBSTRING* %vr8614 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8618, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8621 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8620 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8621, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8620
	%vr8624 = bitcast %FBSTRING* %vr8620 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8624, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8627 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8627, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8626
	%vr8630 = bitcast %FBSTRING* %vr8626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8630, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_070F
	%vr8633 = bitcast i8* bitcast ([30 x i8]* @Lt_070F to i8*) to i8*
	; arg 29
	%vr8632 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8633, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8632
	%vr8636 = bitcast %FBSTRING* %vr8632 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8636, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8639 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8638 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8639, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8638
	%vr8642 = bitcast %FBSTRING* %vr8638 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8642, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0710
	%vr8645 = bitcast i8* bitcast ([32 x i8]* @Lt_0710 to i8*) to i8*
	; arg 31
	%vr8644 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8645, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr8644
	%vr8648 = bitcast %FBSTRING* %vr8644 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8648, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8651 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8650 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8651, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8650
	%vr8654 = bitcast %FBSTRING* %vr8650 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8654, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8657 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8657, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8656
	%vr8660 = bitcast %FBSTRING* %vr8656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8660, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0711
	%vr8663 = bitcast i8* bitcast ([29 x i8]* @Lt_0711 to i8*) to i8*
	; arg 28
	%vr8662 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8663, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8662
	%vr8666 = bitcast %FBSTRING* %vr8662 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8666, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8669 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8668 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8669, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8668
	%vr8672 = bitcast %FBSTRING* %vr8668 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8672, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0712
	%vr8675 = bitcast i8* bitcast ([31 x i8]* @Lt_0712 to i8*) to i8*
	; arg 30
	%vr8674 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8675, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8674
	%vr8678 = bitcast %FBSTRING* %vr8674 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8678, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8681 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8680 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8681, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8680
	%vr8684 = bitcast %FBSTRING* %vr8680 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8684, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8687 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8687, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8686
	%vr8690 = bitcast %FBSTRING* %vr8686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8690, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0713
	%vr8693 = bitcast i8* bitcast ([29 x i8]* @Lt_0713 to i8*) to i8*
	; arg 28
	%vr8692 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8693, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8692
	%vr8696 = bitcast %FBSTRING* %vr8692 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8696, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8699 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8698 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8699, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8698
	%vr8702 = bitcast %FBSTRING* %vr8698 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8702, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr8705 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr8704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8705, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr8704
	%vr8708 = bitcast %FBSTRING* %vr8704 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8708, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0712
	%vr8711 = bitcast i8* bitcast ([31 x i8]* @Lt_0712 to i8*) to i8*
	; arg 30
	%vr8710 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8711, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8710
	%vr8714 = bitcast %FBSTRING* %vr8710 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8714, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8717 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8717, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8716
	%vr8720 = bitcast %FBSTRING* %vr8716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8720, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8723 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8722 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8723, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8722
	%vr8726 = bitcast %FBSTRING* %vr8722 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8726, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0714
	%vr8729 = bitcast i8* bitcast ([29 x i8]* @Lt_0714 to i8*) to i8*
	; arg 28
	%vr8728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8729, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8728
	%vr8732 = bitcast %FBSTRING* %vr8728 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8732, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8735 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8734 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8735, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8734
	%vr8738 = bitcast %FBSTRING* %vr8734 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8738, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0712
	%vr8741 = bitcast i8* bitcast ([31 x i8]* @Lt_0712 to i8*) to i8*
	; arg 30
	%vr8740 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8741, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8740
	%vr8744 = bitcast %FBSTRING* %vr8740 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8744, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8747 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8747, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8746
	%vr8750 = bitcast %FBSTRING* %vr8746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8750, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8753 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8752 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8753, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8752
	%vr8756 = bitcast %FBSTRING* %vr8752 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8756, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0715
	%vr8759 = bitcast i8* bitcast ([29 x i8]* @Lt_0715 to i8*) to i8*
	; arg 28
	%vr8758 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8759, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8758
	%vr8762 = bitcast %FBSTRING* %vr8758 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8762, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8765 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8764 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8765, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8764
	%vr8768 = bitcast %FBSTRING* %vr8764 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8768, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0716
	%vr8771 = bitcast i8* bitcast ([27 x i8]* @Lt_0716 to i8*) to i8*
	; arg 26
	%vr8770 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8771, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr8770
	%vr8774 = bitcast %FBSTRING* %vr8770 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8774, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8777 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8777, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8776
	%vr8780 = bitcast %FBSTRING* %vr8776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8780, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8783 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8782 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8783, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8782
	%vr8786 = bitcast %FBSTRING* %vr8782 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8786, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0717
	%vr8789 = bitcast i8* bitcast ([23 x i8]* @Lt_0717 to i8*) to i8*
	; arg 22
	%vr8788 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8789, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8788
	%vr8792 = bitcast %FBSTRING* %vr8788 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8792, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8795 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8794 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8795, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8794
	%vr8798 = bitcast %FBSTRING* %vr8794 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8798, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0718
	%vr8801 = bitcast i8* bitcast ([35 x i8]* @Lt_0718 to i8*) to i8*
	; arg 34
	%vr8800 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8801, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr8800
	%vr8804 = bitcast %FBSTRING* %vr8800 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8804, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0719
	%vr8807 = bitcast i8* bitcast ([35 x i8]* @Lt_0719 to i8*) to i8*
	; arg 34
	%vr8806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8807, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr8806
	%vr8810 = bitcast %FBSTRING* %vr8806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8810, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071A
	%vr8813 = bitcast i8* bitcast ([31 x i8]* @Lt_071A to i8*) to i8*
	; arg 30
	%vr8812 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8813, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr8812
	%vr8816 = bitcast %FBSTRING* %vr8812 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8816, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071B
	%vr8819 = bitcast i8* bitcast ([29 x i8]* @Lt_071B to i8*) to i8*
	; arg 28
	%vr8818 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8819, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8818
	%vr8822 = bitcast %FBSTRING* %vr8818 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8822, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8825 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8824 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8825, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8824
	%vr8828 = bitcast %FBSTRING* %vr8824 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8828, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8831 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8830 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8831, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8830
	%vr8834 = bitcast %FBSTRING* %vr8830 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8834, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071C
	%vr8837 = bitcast i8* bitcast ([51 x i8]* @Lt_071C to i8*) to i8*
	; arg 50
	%vr8836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8837, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr8836
	%vr8840 = bitcast %FBSTRING* %vr8836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8840, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8843 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8842 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8843, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8842
	%vr8846 = bitcast %FBSTRING* %vr8842 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8846, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071D
	%vr8849 = bitcast i8* bitcast ([28 x i8]* @Lt_071D to i8*) to i8*
	; arg 27
	%vr8848 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8849, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr8848
	%vr8852 = bitcast %FBSTRING* %vr8848 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8852, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8855 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8854 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8855, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8854
	%vr8858 = bitcast %FBSTRING* %vr8854 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8858, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8861 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8860 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8861, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8860
	%vr8864 = bitcast %FBSTRING* %vr8860 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8864, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071E
	%vr8867 = bitcast i8* bitcast ([41 x i8]* @Lt_071E to i8*) to i8*
	; arg 40
	%vr8866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8867, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr8866
	%vr8870 = bitcast %FBSTRING* %vr8866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8870, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8873 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8872 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8873, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8872
	%vr8876 = bitcast %FBSTRING* %vr8872 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8876, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0647
	%vr8879 = bitcast i8* bitcast ([26 x i8]* @Lt_0647 to i8*) to i8*
	; arg 25
	%vr8878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8879, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr8878
	%vr8882 = bitcast %FBSTRING* %vr8878 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8882, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0648
	%vr8885 = bitcast i8* bitcast ([53 x i8]* @Lt_0648 to i8*) to i8*
	; arg 52
	%vr8884 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8885, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr8884
	%vr8888 = bitcast %FBSTRING* %vr8884 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8888, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_071F
	%vr8891 = bitcast i8* bitcast ([40 x i8]* @Lt_071F to i8*) to i8*
	; arg 39
	%vr8890 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8891, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr8890
	%vr8894 = bitcast %FBSTRING* %vr8890 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8894, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr8897 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr8896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8897, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8896
	%vr8900 = bitcast %FBSTRING* %vr8896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8900, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr8903 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr8902 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8903, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr8902
	%vr8906 = bitcast %FBSTRING* %vr8902 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8906, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0720
	%vr8909 = bitcast i8* bitcast ([56 x i8]* @Lt_0720 to i8*) to i8*
	; arg 55
	%vr8908 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8909, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr8908
	%vr8912 = bitcast %FBSTRING* %vr8908 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8912, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0721
	%vr8915 = bitcast i8* bitcast ([46 x i8]* @Lt_0721 to i8*) to i8*
	; arg 45
	%vr8914 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8915, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr8914
	%vr8918 = bitcast %FBSTRING* %vr8914 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8918, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr8921 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr8920 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8921, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr8920
	%vr8924 = bitcast %FBSTRING* %vr8920 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8924, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0722
	%vr8927 = bitcast i8* bitcast ([30 x i8]* @Lt_0722 to i8*) to i8*
	; arg 29
	%vr8926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8927, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8926
	%vr8930 = bitcast %FBSTRING* %vr8926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8930, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0723
	%vr8933 = bitcast i8* bitcast ([30 x i8]* @Lt_0723 to i8*) to i8*
	; arg 29
	%vr8932 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8933, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8932
	%vr8936 = bitcast %FBSTRING* %vr8932 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8936, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0724
	%vr8939 = bitcast i8* bitcast ([30 x i8]* @Lt_0724 to i8*) to i8*
	; arg 29
	%vr8938 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8939, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr8938
	%vr8942 = bitcast %FBSTRING* %vr8938 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8942, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0725
	%vr8945 = bitcast i8* bitcast ([25 x i8]* @Lt_0725 to i8*) to i8*
	; arg 24
	%vr8944 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8945, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr8944
	%vr8948 = bitcast %FBSTRING* %vr8944 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8948, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0726
	%vr8951 = bitcast i8* bitcast ([23 x i8]* @Lt_0726 to i8*) to i8*
	; arg 22
	%vr8950 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8951, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8950
	%vr8954 = bitcast %FBSTRING* %vr8950 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8954, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0727
	%vr8957 = bitcast i8* bitcast ([23 x i8]* @Lt_0727 to i8*) to i8*
	; arg 22
	%vr8956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8957, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8956
	%vr8960 = bitcast %FBSTRING* %vr8956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8960, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0728
	%vr8963 = bitcast i8* bitcast ([23 x i8]* @Lt_0728 to i8*) to i8*
	; arg 22
	%vr8962 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8963, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8962
	%vr8966 = bitcast %FBSTRING* %vr8962 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8966, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0729
	%vr8969 = bitcast i8* bitcast ([63 x i8]* @Lt_0729 to i8*) to i8*
	; arg 62
	%vr8968 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8969, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr8968
	%vr8972 = bitcast %FBSTRING* %vr8968 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8972, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072A
	%vr8975 = bitcast i8* bitcast ([33 x i8]* @Lt_072A to i8*) to i8*
	; arg 32
	%vr8974 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8975, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8974
	%vr8978 = bitcast %FBSTRING* %vr8974 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8978, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072B
	%vr8981 = bitcast i8* bitcast ([23 x i8]* @Lt_072B to i8*) to i8*
	; arg 22
	%vr8980 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8981, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr8980
	%vr8984 = bitcast %FBSTRING* %vr8980 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8984, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072C
	%vr8987 = bitcast i8* bitcast ([29 x i8]* @Lt_072C to i8*) to i8*
	; arg 28
	%vr8986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8987, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr8986
	%vr8990 = bitcast %FBSTRING* %vr8986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8990, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072D
	%vr8993 = bitcast i8* bitcast ([33 x i8]* @Lt_072D to i8*) to i8*
	; arg 32
	%vr8992 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8993, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr8992
	%vr8996 = bitcast %FBSTRING* %vr8992 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr8996, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072E
	%vr8999 = bitcast i8* bitcast ([54 x i8]* @Lt_072E to i8*) to i8*
	; arg 53
	%vr8998 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr8999, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr8998
	%vr9002 = bitcast %FBSTRING* %vr8998 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9002, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_072F
	%vr9005 = bitcast i8* bitcast ([57 x i8]* @Lt_072F to i8*) to i8*
	; arg 56
	%vr9004 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9005, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr9004
	%vr9008 = bitcast %FBSTRING* %vr9004 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9008, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9011 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9010 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9011, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9010
	%vr9014 = bitcast %FBSTRING* %vr9010 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9014, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9017 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9017, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9016
	%vr9020 = bitcast %FBSTRING* %vr9016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9020, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0730
	%vr9023 = bitcast i8* bitcast ([48 x i8]* @Lt_0730 to i8*) to i8*
	; arg 47
	%vr9022 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9023, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr9022
	%vr9026 = bitcast %FBSTRING* %vr9022 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9026, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9029 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9028 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9029, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9028
	%vr9032 = bitcast %FBSTRING* %vr9028 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9032, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0731
	%vr9035 = bitcast i8* bitcast ([42 x i8]* @Lt_0731 to i8*) to i8*
	; arg 41
	%vr9034 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9035, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr9034
	%vr9038 = bitcast %FBSTRING* %vr9034 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9038, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0732
	%vr9041 = bitcast i8* bitcast ([28 x i8]* @Lt_0732 to i8*) to i8*
	; arg 27
	%vr9040 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9041, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr9040
	%vr9044 = bitcast %FBSTRING* %vr9040 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9044, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0733
	%vr9047 = bitcast i8* bitcast ([38 x i8]* @Lt_0733 to i8*) to i8*
	; arg 37
	%vr9046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9047, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9046
	%vr9050 = bitcast %FBSTRING* %vr9046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9050, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9053 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9052 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9053, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9052
	%vr9056 = bitcast %FBSTRING* %vr9052 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9056, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0734
	%vr9059 = bitcast i8* bitcast ([43 x i8]* @Lt_0734 to i8*) to i8*
	; arg 42
	%vr9058 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9059, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr9058
	%vr9062 = bitcast %FBSTRING* %vr9058 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9062, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0735
	%vr9065 = bitcast i8* bitcast ([24 x i8]* @Lt_0735 to i8*) to i8*
	; arg 23
	%vr9064 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9065, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9064
	%vr9068 = bitcast %FBSTRING* %vr9064 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9068, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0736
	%vr9071 = bitcast i8* bitcast ([43 x i8]* @Lt_0736 to i8*) to i8*
	; arg 42
	%vr9070 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9071, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr9070
	%vr9074 = bitcast %FBSTRING* %vr9070 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9074, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0737
	%vr9077 = bitcast i8* bitcast ([55 x i8]* @Lt_0737 to i8*) to i8*
	; arg 54
	%vr9076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9077, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr9076
	%vr9080 = bitcast %FBSTRING* %vr9076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9080, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9083 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9082 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9083, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9082
	%vr9086 = bitcast %FBSTRING* %vr9082 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9086, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0738
	%vr9089 = bitcast i8* bitcast ([55 x i8]* @Lt_0738 to i8*) to i8*
	; arg 54
	%vr9088 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9089, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr9088
	%vr9092 = bitcast %FBSTRING* %vr9088 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9092, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9095 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9094 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9095, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9094
	%vr9098 = bitcast %FBSTRING* %vr9094 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9098, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0739
	%vr9101 = bitcast i8* bitcast ([77 x i8]* @Lt_0739 to i8*) to i8*
	; arg 76
	%vr9100 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9101, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr9100
	%vr9104 = bitcast %FBSTRING* %vr9100 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9104, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9107 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9107, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9106
	%vr9110 = bitcast %FBSTRING* %vr9106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9110, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9113 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9112 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9113, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9112
	%vr9116 = bitcast %FBSTRING* %vr9112 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9116, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073A
	%vr9119 = bitcast i8* bitcast ([37 x i8]* @Lt_073A to i8*) to i8*
	; arg 36
	%vr9118 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9119, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr9118
	%vr9122 = bitcast %FBSTRING* %vr9118 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9122, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9125 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9124 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9125, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9124
	%vr9128 = bitcast %FBSTRING* %vr9124 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9128, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073B
	%vr9131 = bitcast i8* bitcast ([48 x i8]* @Lt_073B to i8*) to i8*
	; arg 47
	%vr9130 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9131, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr9130
	%vr9134 = bitcast %FBSTRING* %vr9130 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9134, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073C
	%vr9137 = bitcast i8* bitcast ([38 x i8]* @Lt_073C to i8*) to i8*
	; arg 37
	%vr9136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9137, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9136
	%vr9140 = bitcast %FBSTRING* %vr9136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9140, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9143 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9142 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9143, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9142
	%vr9146 = bitcast %FBSTRING* %vr9142 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9146, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9149 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9148 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9149, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9148
	%vr9152 = bitcast %FBSTRING* %vr9148 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9152, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073D
	%vr9155 = bitcast i8* bitcast ([78 x i8]* @Lt_073D to i8*) to i8*
	; arg 77
	%vr9154 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9155, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr9154
	%vr9158 = bitcast %FBSTRING* %vr9154 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9158, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9161 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9160 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9161, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9160
	%vr9164 = bitcast %FBSTRING* %vr9160 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9164, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073E
	%vr9167 = bitcast i8* bitcast ([23 x i8]* @Lt_073E to i8*) to i8*
	; arg 22
	%vr9166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9167, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9166
	%vr9170 = bitcast %FBSTRING* %vr9166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9170, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9173 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9172 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9173, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9172
	%vr9176 = bitcast %FBSTRING* %vr9172 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9176, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_073F
	%vr9179 = bitcast i8* bitcast ([40 x i8]* @Lt_073F to i8*) to i8*
	; arg 39
	%vr9178 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9179, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr9178
	%vr9182 = bitcast %FBSTRING* %vr9178 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9182, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9185 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9184 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9185, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9184
	%vr9188 = bitcast %FBSTRING* %vr9184 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9188, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9191 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9190 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9191, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9190
	%vr9194 = bitcast %FBSTRING* %vr9190 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9194, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0740
	%vr9197 = bitcast i8* bitcast ([22 x i8]* @Lt_0740 to i8*) to i8*
	; arg 21
	%vr9196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9197, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9196
	%vr9200 = bitcast %FBSTRING* %vr9196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9200, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9203 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9202 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9203, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9202
	%vr9206 = bitcast %FBSTRING* %vr9202 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9206, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0741
	%vr9209 = bitcast i8* bitcast ([58 x i8]* @Lt_0741 to i8*) to i8*
	; arg 57
	%vr9208 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9209, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr9208
	%vr9212 = bitcast %FBSTRING* %vr9208 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9212, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9215 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9214 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9215, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9214
	%vr9218 = bitcast %FBSTRING* %vr9214 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9218, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9221 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9220 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9221, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9220
	%vr9224 = bitcast %FBSTRING* %vr9220 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9224, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0742
	%vr9227 = bitcast i8* bitcast ([35 x i8]* @Lt_0742 to i8*) to i8*
	; arg 34
	%vr9226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9227, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9226
	%vr9230 = bitcast %FBSTRING* %vr9226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9230, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9233 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9232 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9233, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9232
	%vr9236 = bitcast %FBSTRING* %vr9232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9236, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0743
	%vr9239 = bitcast i8* bitcast ([30 x i8]* @Lt_0743 to i8*) to i8*
	; arg 29
	%vr9238 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9239, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr9238
	%vr9242 = bitcast %FBSTRING* %vr9238 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9242, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0744
	%vr9245 = bitcast i8* bitcast ([37 x i8]* @Lt_0744 to i8*) to i8*
	; arg 36
	%vr9244 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9245, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr9244
	%vr9248 = bitcast %FBSTRING* %vr9244 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9248, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0745
	%vr9251 = bitcast i8* bitcast ([36 x i8]* @Lt_0745 to i8*) to i8*
	; arg 35
	%vr9250 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9251, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr9250
	%vr9254 = bitcast %FBSTRING* %vr9250 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9254, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0746
	%vr9257 = bitcast i8* bitcast ([41 x i8]* @Lt_0746 to i8*) to i8*
	; arg 40
	%vr9256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9257, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr9256
	%vr9260 = bitcast %FBSTRING* %vr9256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9260, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0747
	%vr9263 = bitcast i8* bitcast ([60 x i8]* @Lt_0747 to i8*) to i8*
	; arg 59
	%vr9262 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9263, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr9262
	%vr9266 = bitcast %FBSTRING* %vr9262 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9266, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9269 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9268 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9269, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9268
	%vr9272 = bitcast %FBSTRING* %vr9268 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9272, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9275 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9274 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9275, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9274
	%vr9278 = bitcast %FBSTRING* %vr9274 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9278, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0748
	%vr9281 = bitcast i8* bitcast ([25 x i8]* @Lt_0748 to i8*) to i8*
	; arg 24
	%vr9280 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9281, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9280
	%vr9284 = bitcast %FBSTRING* %vr9280 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9284, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9287 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9287, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9286
	%vr9290 = bitcast %FBSTRING* %vr9286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9290, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0749
	%vr9293 = bitcast i8* bitcast ([79 x i8]* @Lt_0749 to i8*) to i8*
	; arg 78
	%vr9292 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9293, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9292
	%vr9296 = bitcast %FBSTRING* %vr9292 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9296, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr9299 = bitcast i8* bitcast ([23 x i8]* @Lt_074A to i8*) to i8*
	; arg 22
	%vr9298 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9299, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9298
	%vr9302 = bitcast %FBSTRING* %vr9298 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9302, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074B
	%vr9305 = bitcast i8* bitcast ([79 x i8]* @Lt_074B to i8*) to i8*
	; arg 78
	%vr9304 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9305, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9304
	%vr9308 = bitcast %FBSTRING* %vr9304 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9308, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr9311 = bitcast i8* bitcast ([23 x i8]* @Lt_074A to i8*) to i8*
	; arg 22
	%vr9310 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9311, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9310
	%vr9314 = bitcast %FBSTRING* %vr9310 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9314, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074C
	%vr9317 = bitcast i8* bitcast ([13 x i8]* @Lt_074C to i8*) to i8*
	; arg 12
	%vr9316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9317, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr9316
	%vr9320 = bitcast %FBSTRING* %vr9316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9320, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9323 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9322 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9323, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9322
	%vr9326 = bitcast %FBSTRING* %vr9322 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9326, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9329 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9328 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9329, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9328
	%vr9332 = bitcast %FBSTRING* %vr9328 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9332, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074D
	%vr9335 = bitcast i8* bitcast ([25 x i8]* @Lt_074D to i8*) to i8*
	; arg 24
	%vr9334 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9335, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9334
	%vr9338 = bitcast %FBSTRING* %vr9334 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9338, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9341 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9340 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9341, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9340
	%vr9344 = bitcast %FBSTRING* %vr9340 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9344, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0749
	%vr9347 = bitcast i8* bitcast ([79 x i8]* @Lt_0749 to i8*) to i8*
	; arg 78
	%vr9346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9347, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9346
	%vr9350 = bitcast %FBSTRING* %vr9346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9350, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074B
	%vr9353 = bitcast i8* bitcast ([79 x i8]* @Lt_074B to i8*) to i8*
	; arg 78
	%vr9352 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9353, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9352
	%vr9356 = bitcast %FBSTRING* %vr9352 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9356, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr9359 = bitcast i8* bitcast ([23 x i8]* @Lt_074A to i8*) to i8*
	; arg 22
	%vr9358 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9359, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9358
	%vr9362 = bitcast %FBSTRING* %vr9358 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9362, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074C
	%vr9365 = bitcast i8* bitcast ([13 x i8]* @Lt_074C to i8*) to i8*
	; arg 12
	%vr9364 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9365, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr9364
	%vr9368 = bitcast %FBSTRING* %vr9364 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9368, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9371 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9370 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9371, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9370
	%vr9374 = bitcast %FBSTRING* %vr9370 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9374, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9377 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9377, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9376
	%vr9380 = bitcast %FBSTRING* %vr9376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9380, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074E
	%vr9383 = bitcast i8* bitcast ([25 x i8]* @Lt_074E to i8*) to i8*
	; arg 24
	%vr9382 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9383, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9382
	%vr9386 = bitcast %FBSTRING* %vr9382 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9386, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074F
	%vr9389 = bitcast i8* bitcast ([95 x i8]* @Lt_074F to i8*) to i8*
	; arg 94
	%vr9388 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9389, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr9388
	%vr9392 = bitcast %FBSTRING* %vr9388 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9392, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0750
	%vr9395 = bitcast i8* bitcast ([79 x i8]* @Lt_0750 to i8*) to i8*
	; arg 78
	%vr9394 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9395, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9394
	%vr9398 = bitcast %FBSTRING* %vr9394 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9398, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr9401 = bitcast i8* bitcast ([23 x i8]* @Lt_074A to i8*) to i8*
	; arg 22
	%vr9400 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9401, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9400
	%vr9404 = bitcast %FBSTRING* %vr9400 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9404, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0751
	%vr9407 = bitcast i8* bitcast ([14 x i8]* @Lt_0751 to i8*) to i8*
	; arg 13
	%vr9406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9407, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr9406
	%vr9410 = bitcast %FBSTRING* %vr9406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9410, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9413 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9412 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9413, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9412
	%vr9416 = bitcast %FBSTRING* %vr9412 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9416, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9419 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9418 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9419, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9418
	%vr9422 = bitcast %FBSTRING* %vr9418 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9422, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0752
	%vr9425 = bitcast i8* bitcast ([25 x i8]* @Lt_0752 to i8*) to i8*
	; arg 24
	%vr9424 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9425, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9424
	%vr9428 = bitcast %FBSTRING* %vr9424 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9428, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0749
	%vr9431 = bitcast i8* bitcast ([79 x i8]* @Lt_0749 to i8*) to i8*
	; arg 78
	%vr9430 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9431, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9430
	%vr9434 = bitcast %FBSTRING* %vr9430 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9434, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0750
	%vr9437 = bitcast i8* bitcast ([79 x i8]* @Lt_0750 to i8*) to i8*
	; arg 78
	%vr9436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9437, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr9436
	%vr9440 = bitcast %FBSTRING* %vr9436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9440, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074A
	%vr9443 = bitcast i8* bitcast ([23 x i8]* @Lt_074A to i8*) to i8*
	; arg 22
	%vr9442 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9443, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9442
	%vr9446 = bitcast %FBSTRING* %vr9442 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9446, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0751
	%vr9449 = bitcast i8* bitcast ([14 x i8]* @Lt_0751 to i8*) to i8*
	; arg 13
	%vr9448 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9449, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr9448
	%vr9452 = bitcast %FBSTRING* %vr9448 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9452, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9455 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9454 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9455, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9454
	%vr9458 = bitcast %FBSTRING* %vr9454 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9458, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9461 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9460 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9461, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9460
	%vr9464 = bitcast %FBSTRING* %vr9460 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9464, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0753
	%vr9467 = bitcast i8* bitcast ([24 x i8]* @Lt_0753 to i8*) to i8*
	; arg 23
	%vr9466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9467, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9466
	%vr9470 = bitcast %FBSTRING* %vr9466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9470, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0754
	%vr9473 = bitcast i8* bitcast ([53 x i8]* @Lt_0754 to i8*) to i8*
	; arg 52
	%vr9472 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9473, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr9472
	%vr9476 = bitcast %FBSTRING* %vr9472 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9476, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9479 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9478 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9479, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9478
	%vr9482 = bitcast %FBSTRING* %vr9478 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9482, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0755
	%vr9485 = bitcast i8* bitcast ([22 x i8]* @Lt_0755 to i8*) to i8*
	; arg 21
	%vr9484 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9485, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9484
	%vr9488 = bitcast %FBSTRING* %vr9484 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9488, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0756
	%vr9491 = bitcast i8* bitcast ([31 x i8]* @Lt_0756 to i8*) to i8*
	; arg 30
	%vr9490 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9491, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9490
	%vr9494 = bitcast %FBSTRING* %vr9490 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9494, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0757
	%vr9497 = bitcast i8* bitcast ([46 x i8]* @Lt_0757 to i8*) to i8*
	; arg 45
	%vr9496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9497, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr9496
	%vr9500 = bitcast %FBSTRING* %vr9496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9500, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr9503 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr9502 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9503, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9502
	%vr9506 = bitcast %FBSTRING* %vr9502 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9506, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0758
	%vr9509 = bitcast i8* bitcast ([34 x i8]* @Lt_0758 to i8*) to i8*
	; arg 33
	%vr9508 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9509, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr9508
	%vr9512 = bitcast %FBSTRING* %vr9508 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9512, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0759
	%vr9515 = bitcast i8* bitcast ([18 x i8]* @Lt_0759 to i8*) to i8*
	; arg 17
	%vr9514 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9515, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr9514
	%vr9518 = bitcast %FBSTRING* %vr9514 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9518, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075A
	%vr9521 = bitcast i8* bitcast ([32 x i8]* @Lt_075A to i8*) to i8*
	; arg 31
	%vr9520 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9521, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr9520
	%vr9524 = bitcast %FBSTRING* %vr9520 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9524, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075B
	%vr9527 = bitcast i8* bitcast ([23 x i8]* @Lt_075B to i8*) to i8*
	; arg 22
	%vr9526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9527, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9526
	%vr9530 = bitcast %FBSTRING* %vr9526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9530, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075C
	%vr9533 = bitcast i8* bitcast ([35 x i8]* @Lt_075C to i8*) to i8*
	; arg 34
	%vr9532 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9533, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9532
	%vr9536 = bitcast %FBSTRING* %vr9532 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9536, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075D
	%vr9539 = bitcast i8* bitcast ([23 x i8]* @Lt_075D to i8*) to i8*
	; arg 22
	%vr9538 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9539, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9538
	%vr9542 = bitcast %FBSTRING* %vr9538 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9542, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075E
	%vr9545 = bitcast i8* bitcast ([35 x i8]* @Lt_075E to i8*) to i8*
	; arg 34
	%vr9544 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9545, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9544
	%vr9548 = bitcast %FBSTRING* %vr9544 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9548, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_075F
	%vr9551 = bitcast i8* bitcast ([23 x i8]* @Lt_075F to i8*) to i8*
	; arg 22
	%vr9550 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9551, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9550
	%vr9554 = bitcast %FBSTRING* %vr9550 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9554, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0760
	%vr9557 = bitcast i8* bitcast ([35 x i8]* @Lt_0760 to i8*) to i8*
	; arg 34
	%vr9556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9557, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9556
	%vr9560 = bitcast %FBSTRING* %vr9556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9560, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr9563 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr9562 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9563, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9562
	%vr9566 = bitcast %FBSTRING* %vr9562 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9566, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr9569 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr9568 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9569, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr9568
	%vr9572 = bitcast %FBSTRING* %vr9568 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9572, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0762
	%vr9575 = bitcast i8* bitcast ([16 x i8]* @Lt_0762 to i8*) to i8*
	; arg 15
	%vr9574 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9575, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9574
	%vr9578 = bitcast %FBSTRING* %vr9574 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9578, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr9581 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr9580 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9581, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9580
	%vr9584 = bitcast %FBSTRING* %vr9580 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9584, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9587 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9587, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9586
	%vr9590 = bitcast %FBSTRING* %vr9586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9590, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0763
	%vr9593 = bitcast i8* bitcast ([37 x i8]* @Lt_0763 to i8*) to i8*
	; arg 36
	%vr9592 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9593, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr9592
	%vr9596 = bitcast %FBSTRING* %vr9592 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9596, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr9599 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr9598 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9599, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr9598
	%vr9602 = bitcast %FBSTRING* %vr9598 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9602, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0764
	%vr9605 = bitcast i8* bitcast ([16 x i8]* @Lt_0764 to i8*) to i8*
	; arg 15
	%vr9604 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9605, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9604
	%vr9608 = bitcast %FBSTRING* %vr9604 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9608, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9611 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9610 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9611, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9610
	%vr9614 = bitcast %FBSTRING* %vr9610 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9614, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0765
	%vr9617 = bitcast i8* bitcast ([29 x i8]* @Lt_0765 to i8*) to i8*
	; arg 28
	%vr9616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9617, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr9616
	%vr9620 = bitcast %FBSTRING* %vr9616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9620, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0766
	%vr9623 = bitcast i8* bitcast ([46 x i8]* @Lt_0766 to i8*) to i8*
	; arg 45
	%vr9622 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9623, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr9622
	%vr9626 = bitcast %FBSTRING* %vr9622 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9626, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9629 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9628 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9629, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9628
	%vr9632 = bitcast %FBSTRING* %vr9628 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9632, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0767
	%vr9635 = bitcast i8* bitcast ([31 x i8]* @Lt_0767 to i8*) to i8*
	; arg 30
	%vr9634 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9635, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr9634
	%vr9638 = bitcast %FBSTRING* %vr9634 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9638, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0768
	%vr9641 = bitcast i8* bitcast ([52 x i8]* @Lt_0768 to i8*) to i8*
	; arg 51
	%vr9640 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9641, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr9640
	%vr9644 = bitcast %FBSTRING* %vr9640 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9644, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9647 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9647, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9646
	%vr9650 = bitcast %FBSTRING* %vr9646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9650, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0769
	%vr9653 = bitcast i8* bitcast ([42 x i8]* @Lt_0769 to i8*) to i8*
	; arg 41
	%vr9652 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9653, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr9652
	%vr9656 = bitcast %FBSTRING* %vr9652 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9656, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076A
	%vr9659 = bitcast i8* bitcast ([41 x i8]* @Lt_076A to i8*) to i8*
	; arg 40
	%vr9658 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9659, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr9658
	%vr9662 = bitcast %FBSTRING* %vr9658 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9662, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076B
	%vr9665 = bitcast i8* bitcast ([56 x i8]* @Lt_076B to i8*) to i8*
	; arg 55
	%vr9664 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9665, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr9664
	%vr9668 = bitcast %FBSTRING* %vr9664 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9668, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9671 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9670 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9671, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9670
	%vr9674 = bitcast %FBSTRING* %vr9670 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9674, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076C
	%vr9677 = bitcast i8* bitcast ([12 x i8]* @Lt_076C to i8*) to i8*
	; arg 11
	%vr9676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9677, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr9676
	%vr9680 = bitcast %FBSTRING* %vr9676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9680, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076D
	%vr9683 = bitcast i8* bitcast ([43 x i8]* @Lt_076D to i8*) to i8*
	; arg 42
	%vr9682 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9683, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr9682
	%vr9686 = bitcast %FBSTRING* %vr9682 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9686, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076E
	%vr9689 = bitcast i8* bitcast ([33 x i8]* @Lt_076E to i8*) to i8*
	; arg 32
	%vr9688 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9689, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr9688
	%vr9692 = bitcast %FBSTRING* %vr9688 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9692, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9695 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9694 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9695, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9694
	%vr9698 = bitcast %FBSTRING* %vr9694 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9698, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076F
	%vr9701 = bitcast i8* bitcast ([28 x i8]* @Lt_076F to i8*) to i8*
	; arg 27
	%vr9700 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9701, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr9700
	%vr9704 = bitcast %FBSTRING* %vr9700 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9704, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0770
	%vr9707 = bitcast i8* bitcast ([48 x i8]* @Lt_0770 to i8*) to i8*
	; arg 47
	%vr9706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9707, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr9706
	%vr9710 = bitcast %FBSTRING* %vr9706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9710, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0771
	%vr9713 = bitcast i8* bitcast ([39 x i8]* @Lt_0771 to i8*) to i8*
	; arg 38
	%vr9712 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9713, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr9712
	%vr9716 = bitcast %FBSTRING* %vr9712 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9716, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0772
	%vr9719 = bitcast i8* bitcast ([23 x i8]* @Lt_0772 to i8*) to i8*
	; arg 22
	%vr9718 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9719, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9718
	%vr9722 = bitcast %FBSTRING* %vr9718 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9722, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9725 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9724 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9725, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9724
	%vr9728 = bitcast %FBSTRING* %vr9724 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9728, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0773
	%vr9731 = bitcast i8* bitcast ([24 x i8]* @Lt_0773 to i8*) to i8*
	; arg 23
	%vr9730 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9731, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9730
	%vr9734 = bitcast %FBSTRING* %vr9730 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9734, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0774
	%vr9737 = bitcast i8* bitcast ([39 x i8]* @Lt_0774 to i8*) to i8*
	; arg 38
	%vr9736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9737, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr9736
	%vr9740 = bitcast %FBSTRING* %vr9736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9740, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0775
	%vr9743 = bitcast i8* bitcast ([25 x i8]* @Lt_0775 to i8*) to i8*
	; arg 24
	%vr9742 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9743, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9742
	%vr9746 = bitcast %FBSTRING* %vr9742 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9746, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0776
	%vr9749 = bitcast i8* bitcast ([25 x i8]* @Lt_0776 to i8*) to i8*
	; arg 24
	%vr9748 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9749, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9748
	%vr9752 = bitcast %FBSTRING* %vr9748 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9752, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0777
	%vr9755 = bitcast i8* bitcast ([38 x i8]* @Lt_0777 to i8*) to i8*
	; arg 37
	%vr9754 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9755, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9754
	%vr9758 = bitcast %FBSTRING* %vr9754 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9758, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0778
	%vr9761 = bitcast i8* bitcast ([16 x i8]* @Lt_0778 to i8*) to i8*
	; arg 15
	%vr9760 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9761, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9760
	%vr9764 = bitcast %FBSTRING* %vr9760 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9764, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0779
	%vr9767 = bitcast i8* bitcast ([13 x i8]* @Lt_0779 to i8*) to i8*
	; arg 12
	%vr9766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9767, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr9766
	%vr9770 = bitcast %FBSTRING* %vr9766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9770, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077A
	%vr9773 = bitcast i8* bitcast ([47 x i8]* @Lt_077A to i8*) to i8*
	; arg 46
	%vr9772 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9773, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr9772
	%vr9776 = bitcast %FBSTRING* %vr9772 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9776, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9779 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9778 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9779, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9778
	%vr9782 = bitcast %FBSTRING* %vr9778 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9782, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077B
	%vr9785 = bitcast i8* bitcast ([86 x i8]* @Lt_077B to i8*) to i8*
	; arg 85
	%vr9784 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9785, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr9784
	%vr9788 = bitcast %FBSTRING* %vr9784 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9788, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9791 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9790 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9791, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9790
	%vr9794 = bitcast %FBSTRING* %vr9790 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9794, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077C
	%vr9797 = bitcast i8* bitcast ([47 x i8]* @Lt_077C to i8*) to i8*
	; arg 46
	%vr9796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9797, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr9796
	%vr9800 = bitcast %FBSTRING* %vr9796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9800, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr9803 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr9802 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9803, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr9802
	%vr9806 = bitcast %FBSTRING* %vr9802 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9806, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077D
	%vr9809 = bitcast i8* bitcast ([33 x i8]* @Lt_077D to i8*) to i8*
	; arg 32
	%vr9808 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9809, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr9808
	%vr9812 = bitcast %FBSTRING* %vr9808 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9812, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077E
	%vr9815 = bitcast i8* bitcast ([39 x i8]* @Lt_077E to i8*) to i8*
	; arg 38
	%vr9814 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9815, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr9814
	%vr9818 = bitcast %FBSTRING* %vr9814 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9818, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_077F
	%vr9821 = bitcast i8* bitcast ([24 x i8]* @Lt_077F to i8*) to i8*
	; arg 23
	%vr9820 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9821, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr9820
	%vr9824 = bitcast %FBSTRING* %vr9820 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9824, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0780
	%vr9827 = bitcast i8* bitcast ([23 x i8]* @Lt_0780 to i8*) to i8*
	; arg 22
	%vr9826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9827, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr9826
	%vr9830 = bitcast %FBSTRING* %vr9826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9830, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0781
	%vr9833 = bitcast i8* bitcast ([38 x i8]* @Lt_0781 to i8*) to i8*
	; arg 37
	%vr9832 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9833, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9832
	%vr9836 = bitcast %FBSTRING* %vr9832 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9836, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr9839 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr9838 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9839, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr9838
	%vr9842 = bitcast %FBSTRING* %vr9838 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9842, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0782
	%vr9845 = bitcast i8* bitcast ([9 x i8]* @Lt_0782 to i8*) to i8*
	; arg 8
	%vr9844 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9845, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr9844
	%vr9848 = bitcast %FBSTRING* %vr9844 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9848, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0783
	%vr9851 = bitcast i8* bitcast ([16 x i8]* @Lt_0783 to i8*) to i8*
	; arg 15
	%vr9850 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9851, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr9850
	%vr9854 = bitcast %FBSTRING* %vr9850 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9854, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0784
	%vr9857 = bitcast i8* bitcast ([33 x i8]* @Lt_0784 to i8*) to i8*
	; arg 32
	%vr9856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9857, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr9856
	%vr9860 = bitcast %FBSTRING* %vr9856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9860, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0785
	%vr9863 = bitcast i8* bitcast ([51 x i8]* @Lt_0785 to i8*) to i8*
	; arg 50
	%vr9862 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9863, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr9862
	%vr9866 = bitcast %FBSTRING* %vr9862 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9866, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0786
	%vr9869 = bitcast i8* bitcast ([58 x i8]* @Lt_0786 to i8*) to i8*
	; arg 57
	%vr9868 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9869, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr9868
	%vr9872 = bitcast %FBSTRING* %vr9868 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9872, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0787
	%vr9875 = bitcast i8* bitcast ([38 x i8]* @Lt_0787 to i8*) to i8*
	; arg 37
	%vr9874 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9875, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr9874
	%vr9878 = bitcast %FBSTRING* %vr9874 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9878, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0788
	%vr9881 = bitcast i8* bitcast ([74 x i8]* @Lt_0788 to i8*) to i8*
	; arg 73
	%vr9880 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9881, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr9880
	%vr9884 = bitcast %FBSTRING* %vr9880 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9884, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0789
	%vr9887 = bitcast i8* bitcast ([71 x i8]* @Lt_0789 to i8*) to i8*
	; arg 70
	%vr9886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9887, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr9886
	%vr9890 = bitcast %FBSTRING* %vr9886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9890, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078A
	%vr9893 = bitcast i8* bitcast ([25 x i8]* @Lt_078A to i8*) to i8*
	; arg 24
	%vr9892 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9893, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr9892
	%vr9896 = bitcast %FBSTRING* %vr9892 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9896, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078B
	%vr9899 = bitcast i8* bitcast ([35 x i8]* @Lt_078B to i8*) to i8*
	; arg 34
	%vr9898 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9899, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr9898
	%vr9902 = bitcast %FBSTRING* %vr9898 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9902, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr9905 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr9904 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9905, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr9904
	%vr9908 = bitcast %FBSTRING* %vr9904 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9908, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078C
	%vr9911 = bitcast i8* bitcast ([22 x i8]* @Lt_078C to i8*) to i8*
	; arg 21
	%vr9910 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9911, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr9910
	%vr9914 = bitcast %FBSTRING* %vr9910 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9914, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr9917 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr9916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9917, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9916
	%vr9920 = bitcast %FBSTRING* %vr9916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9920, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078E
	%vr9923 = bitcast i8* bitcast ([37 x i8]* @Lt_078E to i8*) to i8*
	; arg 36
	%vr9922 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9923, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr9922
	%vr9926 = bitcast %FBSTRING* %vr9922 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9926, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078F
	%vr9929 = bitcast i8* bitcast ([68 x i8]* @Lt_078F to i8*) to i8*
	; arg 67
	%vr9928 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9929, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr9928
	%vr9932 = bitcast %FBSTRING* %vr9928 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9932, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr9935 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr9934 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9935, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9934
	%vr9938 = bitcast %FBSTRING* %vr9934 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9938, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr9941 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr9940 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9941, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr9940
	%vr9944 = bitcast %FBSTRING* %vr9940 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9944, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0790
	%vr9947 = bitcast i8* bitcast ([12 x i8]* @Lt_0790 to i8*) to i8*
	; arg 11
	%vr9946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9947, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr9946
	%vr9950 = bitcast %FBSTRING* %vr9946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9950, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr9953 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr9952 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9953, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9952
	%vr9956 = bitcast %FBSTRING* %vr9952 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9956, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0791
	%vr9959 = bitcast i8* bitcast ([119 x i8]* @Lt_0791 to i8*) to i8*
	; arg 118
	%vr9958 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9959, i64 118 )

	; call fb_PrintString()
	; arg 1
	; arg vr9958
	%vr9962 = bitcast %FBSTRING* %vr9958 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9962, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0792
	%vr9965 = bitcast i8* bitcast ([85 x i8]* @Lt_0792 to i8*) to i8*
	; arg 84
	%vr9964 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9965, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr9964
	%vr9968 = bitcast %FBSTRING* %vr9964 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9968, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr9971 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr9970 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9971, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9970
	%vr9974 = bitcast %FBSTRING* %vr9970 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9974, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr9977 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr9976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9977, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr9976
	%vr9980 = bitcast %FBSTRING* %vr9976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9980, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0793
	%vr9983 = bitcast i8* bitcast ([12 x i8]* @Lt_0793 to i8*) to i8*
	; arg 11
	%vr9982 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9983, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr9982
	%vr9986 = bitcast %FBSTRING* %vr9982 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9986, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr9989 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr9988 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9989, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr9988
	%vr9992 = bitcast %FBSTRING* %vr9988 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9992, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0794
	%vr9995 = bitcast i8* bitcast ([33 x i8]* @Lt_0794 to i8*) to i8*
	; arg 32
	%vr9994 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr9995, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr9994
	%vr9998 = bitcast %FBSTRING* %vr9994 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr9998, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0795
	%vr10001 = bitcast i8* bitcast ([32 x i8]* @Lt_0795 to i8*) to i8*
	; arg 31
	%vr10000 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10001, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr10000
	%vr10004 = bitcast %FBSTRING* %vr10000 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10004, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0796
	%vr10007 = bitcast i8* bitcast ([101 x i8]* @Lt_0796 to i8*) to i8*
	; arg 100
	%vr10006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10007, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr10006
	%vr10010 = bitcast %FBSTRING* %vr10006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10010, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0797
	%vr10013 = bitcast i8* bitcast ([40 x i8]* @Lt_0797 to i8*) to i8*
	; arg 39
	%vr10012 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10013, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10012
	%vr10016 = bitcast %FBSTRING* %vr10012 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10016, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10019 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10018 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10019, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10018
	%vr10022 = bitcast %FBSTRING* %vr10018 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10022, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10025 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10024 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10025, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10024
	%vr10028 = bitcast %FBSTRING* %vr10024 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10028, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0798
	%vr10031 = bitcast i8* bitcast ([13 x i8]* @Lt_0798 to i8*) to i8*
	; arg 12
	%vr10030 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10031, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr10030
	%vr10034 = bitcast %FBSTRING* %vr10030 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10034, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr10037 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr10036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10037, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10036
	%vr10040 = bitcast %FBSTRING* %vr10036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10040, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0799
	%vr10043 = bitcast i8* bitcast ([80 x i8]* @Lt_0799 to i8*) to i8*
	; arg 79
	%vr10042 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10043, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr10042
	%vr10046 = bitcast %FBSTRING* %vr10042 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10046, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079A
	%vr10049 = bitcast i8* bitcast ([45 x i8]* @Lt_079A to i8*) to i8*
	; arg 44
	%vr10048 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10049, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr10048
	%vr10052 = bitcast %FBSTRING* %vr10048 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10052, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079B
	%vr10055 = bitcast i8* bitcast ([37 x i8]* @Lt_079B to i8*) to i8*
	; arg 36
	%vr10054 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10055, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr10054
	%vr10058 = bitcast %FBSTRING* %vr10054 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10058, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10061 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10060 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10061, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10060
	%vr10064 = bitcast %FBSTRING* %vr10060 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10064, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10067 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10067, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10066
	%vr10070 = bitcast %FBSTRING* %vr10066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10070, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079C
	%vr10073 = bitcast i8* bitcast ([9 x i8]* @Lt_079C to i8*) to i8*
	; arg 8
	%vr10072 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10073, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr10072
	%vr10076 = bitcast %FBSTRING* %vr10072 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10076, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr10079 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr10078 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10079, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10078
	%vr10082 = bitcast %FBSTRING* %vr10078 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10082, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079D
	%vr10085 = bitcast i8* bitcast ([45 x i8]* @Lt_079D to i8*) to i8*
	; arg 44
	%vr10084 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10085, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr10084
	%vr10088 = bitcast %FBSTRING* %vr10084 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10088, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079E
	%vr10091 = bitcast i8* bitcast ([40 x i8]* @Lt_079E to i8*) to i8*
	; arg 39
	%vr10090 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10091, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10090
	%vr10094 = bitcast %FBSTRING* %vr10090 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10094, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_079F
	%vr10097 = bitcast i8* bitcast ([40 x i8]* @Lt_079F to i8*) to i8*
	; arg 39
	%vr10096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10097, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10096
	%vr10100 = bitcast %FBSTRING* %vr10096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10100, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A0
	%vr10103 = bitcast i8* bitcast ([54 x i8]* @Lt_07A0 to i8*) to i8*
	; arg 53
	%vr10102 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10103, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr10102
	%vr10106 = bitcast %FBSTRING* %vr10102 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10106, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A1
	%vr10109 = bitcast i8* bitcast ([80 x i8]* @Lt_07A1 to i8*) to i8*
	; arg 79
	%vr10108 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10109, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr10108
	%vr10112 = bitcast %FBSTRING* %vr10108 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10112, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A2
	%vr10115 = bitcast i8* bitcast ([41 x i8]* @Lt_07A2 to i8*) to i8*
	; arg 40
	%vr10114 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10115, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10114
	%vr10118 = bitcast %FBSTRING* %vr10114 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10118, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10121 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10120 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10121, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10120
	%vr10124 = bitcast %FBSTRING* %vr10120 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10124, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr10127 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr10126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10127, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr10126
	%vr10130 = bitcast %FBSTRING* %vr10126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10130, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A3
	%vr10133 = bitcast i8* bitcast ([11 x i8]* @Lt_07A3 to i8*) to i8*
	; arg 10
	%vr10132 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10133, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr10132
	%vr10136 = bitcast %FBSTRING* %vr10132 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10136, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr10139 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr10138 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10139, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10138
	%vr10142 = bitcast %FBSTRING* %vr10138 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10142, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A4
	%vr10145 = bitcast i8* bitcast ([52 x i8]* @Lt_07A4 to i8*) to i8*
	; arg 51
	%vr10144 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10145, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr10144
	%vr10148 = bitcast %FBSTRING* %vr10144 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10148, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A5
	%vr10151 = bitcast i8* bitcast ([72 x i8]* @Lt_07A5 to i8*) to i8*
	; arg 71
	%vr10150 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10151, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr10150
	%vr10154 = bitcast %FBSTRING* %vr10150 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10154, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A6
	%vr10157 = bitcast i8* bitcast ([42 x i8]* @Lt_07A6 to i8*) to i8*
	; arg 41
	%vr10156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10157, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10156
	%vr10160 = bitcast %FBSTRING* %vr10156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10160, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10163 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10162 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10163, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10162
	%vr10166 = bitcast %FBSTRING* %vr10162 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10166, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A7
	%vr10169 = bitcast i8* bitcast ([38 x i8]* @Lt_07A7 to i8*) to i8*
	; arg 37
	%vr10168 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10169, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10168
	%vr10172 = bitcast %FBSTRING* %vr10168 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10172, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A8
	%vr10175 = bitcast i8* bitcast ([44 x i8]* @Lt_07A8 to i8*) to i8*
	; arg 43
	%vr10174 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10175, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr10174
	%vr10178 = bitcast %FBSTRING* %vr10174 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10178, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07A9
	%vr10181 = bitcast i8* bitcast ([49 x i8]* @Lt_07A9 to i8*) to i8*
	; arg 48
	%vr10180 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10181, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr10180
	%vr10184 = bitcast %FBSTRING* %vr10180 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10184, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AA
	%vr10187 = bitcast i8* bitcast ([36 x i8]* @Lt_07AA to i8*) to i8*
	; arg 35
	%vr10186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10187, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr10186
	%vr10190 = bitcast %FBSTRING* %vr10186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10190, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10193 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10192 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10193, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10192
	%vr10196 = bitcast %FBSTRING* %vr10192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10196, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AB
	%vr10199 = bitcast i8* bitcast ([94 x i8]* @Lt_07AB to i8*) to i8*
	; arg 93
	%vr10198 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10199, i64 93 )

	; call fb_PrintString()
	; arg 1
	; arg vr10198
	%vr10202 = bitcast %FBSTRING* %vr10198 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10202, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AC
	%vr10205 = bitcast i8* bitcast ([79 x i8]* @Lt_07AC to i8*) to i8*
	; arg 78
	%vr10204 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10205, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr10204
	%vr10208 = bitcast %FBSTRING* %vr10204 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10208, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AD
	%vr10211 = bitcast i8* bitcast ([83 x i8]* @Lt_07AD to i8*) to i8*
	; arg 82
	%vr10210 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10211, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr10210
	%vr10214 = bitcast %FBSTRING* %vr10210 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10214, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10217 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10217, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10216
	%vr10220 = bitcast %FBSTRING* %vr10216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10220, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr10223 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr10222 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10223, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr10222
	%vr10226 = bitcast %FBSTRING* %vr10222 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10226, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10229 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10228 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10229, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10228
	%vr10232 = bitcast %FBSTRING* %vr10228 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10232, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AF
	%vr10235 = bitcast i8* bitcast ([14 x i8]* @Lt_07AF to i8*) to i8*
	; arg 13
	%vr10234 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10235, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr10234
	%vr10238 = bitcast %FBSTRING* %vr10234 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10238, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B0
	%vr10241 = bitcast i8* bitcast ([60 x i8]* @Lt_07B0 to i8*) to i8*
	; arg 59
	%vr10240 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10241, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr10240
	%vr10244 = bitcast %FBSTRING* %vr10240 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10244, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B1
	%vr10247 = bitcast i8* bitcast ([34 x i8]* @Lt_07B1 to i8*) to i8*
	; arg 33
	%vr10246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10247, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr10246
	%vr10250 = bitcast %FBSTRING* %vr10246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10250, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B2
	%vr10253 = bitcast i8* bitcast ([37 x i8]* @Lt_07B2 to i8*) to i8*
	; arg 36
	%vr10252 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10253, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr10252
	%vr10256 = bitcast %FBSTRING* %vr10252 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10256, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B3
	%vr10259 = bitcast i8* bitcast ([39 x i8]* @Lt_07B3 to i8*) to i8*
	; arg 38
	%vr10258 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10259, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr10258
	%vr10262 = bitcast %FBSTRING* %vr10258 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10262, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B4
	%vr10265 = bitcast i8* bitcast ([79 x i8]* @Lt_07B4 to i8*) to i8*
	; arg 78
	%vr10264 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10265, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr10264
	%vr10268 = bitcast %FBSTRING* %vr10264 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10268, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B5
	%vr10271 = bitcast i8* bitcast ([26 x i8]* @Lt_07B5 to i8*) to i8*
	; arg 25
	%vr10270 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10271, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr10270
	%vr10274 = bitcast %FBSTRING* %vr10270 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10274, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10277 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10277, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10276
	%vr10280 = bitcast %FBSTRING* %vr10276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10280, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B6
	%vr10283 = bitcast i8* bitcast ([15 x i8]* @Lt_07B6 to i8*) to i8*
	; arg 14
	%vr10282 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10283, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr10282
	%vr10286 = bitcast %FBSTRING* %vr10282 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10286, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr10289 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr10288 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10289, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10288
	%vr10292 = bitcast %FBSTRING* %vr10288 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10292, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B7
	%vr10295 = bitcast i8* bitcast ([75 x i8]* @Lt_07B7 to i8*) to i8*
	; arg 74
	%vr10294 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10295, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr10294
	%vr10298 = bitcast %FBSTRING* %vr10294 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10298, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B8
	%vr10301 = bitcast i8* bitcast ([64 x i8]* @Lt_07B8 to i8*) to i8*
	; arg 63
	%vr10300 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10301, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr10300
	%vr10304 = bitcast %FBSTRING* %vr10300 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10304, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07B9
	%vr10307 = bitcast i8* bitcast ([39 x i8]* @Lt_07B9 to i8*) to i8*
	; arg 38
	%vr10306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10307, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr10306
	%vr10310 = bitcast %FBSTRING* %vr10306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10310, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BA
	%vr10313 = bitcast i8* bitcast ([43 x i8]* @Lt_07BA to i8*) to i8*
	; arg 42
	%vr10312 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10313, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr10312
	%vr10316 = bitcast %FBSTRING* %vr10312 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10316, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BB
	%vr10319 = bitcast i8* bitcast ([27 x i8]* @Lt_07BB to i8*) to i8*
	; arg 26
	%vr10318 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10319, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10318
	%vr10322 = bitcast %FBSTRING* %vr10318 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10322, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BC
	%vr10325 = bitcast i8* bitcast ([48 x i8]* @Lt_07BC to i8*) to i8*
	; arg 47
	%vr10324 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10325, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr10324
	%vr10328 = bitcast %FBSTRING* %vr10324 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10328, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BD
	%vr10331 = bitcast i8* bitcast ([67 x i8]* @Lt_07BD to i8*) to i8*
	; arg 66
	%vr10330 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10331, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr10330
	%vr10334 = bitcast %FBSTRING* %vr10330 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10334, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BE
	%vr10337 = bitcast i8* bitcast ([33 x i8]* @Lt_07BE to i8*) to i8*
	; arg 32
	%vr10336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10337, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr10336
	%vr10340 = bitcast %FBSTRING* %vr10336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10340, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07BF
	%vr10343 = bitcast i8* bitcast ([59 x i8]* @Lt_07BF to i8*) to i8*
	; arg 58
	%vr10342 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10343, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr10342
	%vr10346 = bitcast %FBSTRING* %vr10342 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10346, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10349 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10348 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10349, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10348
	%vr10352 = bitcast %FBSTRING* %vr10348 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10352, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C0
	%vr10355 = bitcast i8* bitcast ([85 x i8]* @Lt_07C0 to i8*) to i8*
	; arg 84
	%vr10354 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10355, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr10354
	%vr10358 = bitcast %FBSTRING* %vr10354 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10358, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C1
	%vr10361 = bitcast i8* bitcast ([15 x i8]* @Lt_07C1 to i8*) to i8*
	; arg 14
	%vr10360 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10361, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr10360
	%vr10364 = bitcast %FBSTRING* %vr10360 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10364, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C2
	%vr10367 = bitcast i8* bitcast ([22 x i8]* @Lt_07C2 to i8*) to i8*
	; arg 21
	%vr10366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10367, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr10366
	%vr10370 = bitcast %FBSTRING* %vr10366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10370, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C3
	%vr10373 = bitcast i8* bitcast ([29 x i8]* @Lt_07C3 to i8*) to i8*
	; arg 28
	%vr10372 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10373, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr10372
	%vr10376 = bitcast %FBSTRING* %vr10372 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10376, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C4
	%vr10379 = bitcast i8* bitcast ([65 x i8]* @Lt_07C4 to i8*) to i8*
	; arg 64
	%vr10378 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10379, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr10378
	%vr10382 = bitcast %FBSTRING* %vr10378 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10382, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10385 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10384 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10385, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10384
	%vr10388 = bitcast %FBSTRING* %vr10384 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10388, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10391 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10390 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10391, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10390
	%vr10394 = bitcast %FBSTRING* %vr10390 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10394, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C5
	%vr10397 = bitcast i8* bitcast ([13 x i8]* @Lt_07C5 to i8*) to i8*
	; arg 12
	%vr10396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10397, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr10396
	%vr10400 = bitcast %FBSTRING* %vr10396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10400, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr10403 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr10402 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10403, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10402
	%vr10406 = bitcast %FBSTRING* %vr10402 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10406, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C6
	%vr10409 = bitcast i8* bitcast ([20 x i8]* @Lt_07C6 to i8*) to i8*
	; arg 19
	%vr10408 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10409, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr10408
	%vr10412 = bitcast %FBSTRING* %vr10408 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10412, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C7
	%vr10415 = bitcast i8* bitcast ([49 x i8]* @Lt_07C7 to i8*) to i8*
	; arg 48
	%vr10414 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10415, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr10414
	%vr10418 = bitcast %FBSTRING* %vr10414 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10418, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C8
	%vr10421 = bitcast i8* bitcast ([58 x i8]* @Lt_07C8 to i8*) to i8*
	; arg 57
	%vr10420 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10421, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr10420
	%vr10424 = bitcast %FBSTRING* %vr10420 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10424, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07C9
	%vr10427 = bitcast i8* bitcast ([70 x i8]* @Lt_07C9 to i8*) to i8*
	; arg 69
	%vr10426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10427, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr10426
	%vr10430 = bitcast %FBSTRING* %vr10426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10430, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CA
	%vr10433 = bitcast i8* bitcast ([69 x i8]* @Lt_07CA to i8*) to i8*
	; arg 68
	%vr10432 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10433, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr10432
	%vr10436 = bitcast %FBSTRING* %vr10432 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10436, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CB
	%vr10439 = bitcast i8* bitcast ([61 x i8]* @Lt_07CB to i8*) to i8*
	; arg 60
	%vr10438 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10439, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr10438
	%vr10442 = bitcast %FBSTRING* %vr10438 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10442, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CC
	%vr10445 = bitcast i8* bitcast ([41 x i8]* @Lt_07CC to i8*) to i8*
	; arg 40
	%vr10444 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10445, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr10444
	%vr10448 = bitcast %FBSTRING* %vr10444 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10448, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CD
	%vr10451 = bitcast i8* bitcast ([60 x i8]* @Lt_07CD to i8*) to i8*
	; arg 59
	%vr10450 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10451, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr10450
	%vr10454 = bitcast %FBSTRING* %vr10450 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10454, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CE
	%vr10457 = bitcast i8* bitcast ([36 x i8]* @Lt_07CE to i8*) to i8*
	; arg 35
	%vr10456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10457, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr10456
	%vr10460 = bitcast %FBSTRING* %vr10456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10460, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07CF
	%vr10463 = bitcast i8* bitcast ([47 x i8]* @Lt_07CF to i8*) to i8*
	; arg 46
	%vr10462 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10463, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr10462
	%vr10466 = bitcast %FBSTRING* %vr10462 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10466, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr10469 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr10468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10469, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10468
	%vr10472 = bitcast %FBSTRING* %vr10468 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10472, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10475 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10474 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10475, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10474
	%vr10478 = bitcast %FBSTRING* %vr10474 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10478, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0762
	%vr10481 = bitcast i8* bitcast ([16 x i8]* @Lt_0762 to i8*) to i8*
	; arg 15
	%vr10480 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10481, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr10480
	%vr10484 = bitcast %FBSTRING* %vr10480 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10484, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr10487 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr10486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10487, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10486
	%vr10490 = bitcast %FBSTRING* %vr10486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10490, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10493 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10492 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10493, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10492
	%vr10496 = bitcast %FBSTRING* %vr10492 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10496, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D0
	%vr10499 = bitcast i8* bitcast ([50 x i8]* @Lt_07D0 to i8*) to i8*
	; arg 49
	%vr10498 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10499, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr10498
	%vr10502 = bitcast %FBSTRING* %vr10498 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10502, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr10505 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr10504 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10505, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10504
	%vr10508 = bitcast %FBSTRING* %vr10504 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10508, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D1
	%vr10511 = bitcast i8* bitcast ([21 x i8]* @Lt_07D1 to i8*) to i8*
	; arg 20
	%vr10510 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10511, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr10510
	%vr10514 = bitcast %FBSTRING* %vr10510 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10514, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D2
	%vr10517 = bitcast i8* bitcast ([19 x i8]* @Lt_07D2 to i8*) to i8*
	; arg 18
	%vr10516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10517, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr10516
	%vr10520 = bitcast %FBSTRING* %vr10516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10520, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D3
	%vr10523 = bitcast i8* bitcast ([25 x i8]* @Lt_07D3 to i8*) to i8*
	; arg 24
	%vr10522 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10523, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr10522
	%vr10526 = bitcast %FBSTRING* %vr10522 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10526, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D4
	%vr10529 = bitcast i8* bitcast ([22 x i8]* @Lt_07D4 to i8*) to i8*
	; arg 21
	%vr10528 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10529, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr10528
	%vr10532 = bitcast %FBSTRING* %vr10528 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10532, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D5
	%vr10535 = bitcast i8* bitcast ([22 x i8]* @Lt_07D5 to i8*) to i8*
	; arg 21
	%vr10534 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10535, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr10534
	%vr10538 = bitcast %FBSTRING* %vr10534 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10538, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D6
	%vr10541 = bitcast i8* bitcast ([46 x i8]* @Lt_07D6 to i8*) to i8*
	; arg 45
	%vr10540 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10541, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr10540
	%vr10544 = bitcast %FBSTRING* %vr10540 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10544, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D7
	%vr10547 = bitcast i8* bitcast ([48 x i8]* @Lt_07D7 to i8*) to i8*
	; arg 47
	%vr10546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10547, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr10546
	%vr10550 = bitcast %FBSTRING* %vr10546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10550, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr10553 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr10552 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10553, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10552
	%vr10556 = bitcast %FBSTRING* %vr10552 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10556, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10559 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10558 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10559, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10558
	%vr10562 = bitcast %FBSTRING* %vr10558 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10562, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D8
	%vr10565 = bitcast i8* bitcast ([47 x i8]* @Lt_07D8 to i8*) to i8*
	; arg 46
	%vr10564 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10565, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr10564
	%vr10568 = bitcast %FBSTRING* %vr10564 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10568, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr10571 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr10570 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10571, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10570
	%vr10574 = bitcast %FBSTRING* %vr10570 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10574, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10577 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10577, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10576
	%vr10580 = bitcast %FBSTRING* %vr10576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10580, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07D9
	%vr10583 = bitcast i8* bitcast ([30 x i8]* @Lt_07D9 to i8*) to i8*
	; arg 29
	%vr10582 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10583, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10582
	%vr10586 = bitcast %FBSTRING* %vr10582 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10586, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DA
	%vr10589 = bitcast i8* bitcast ([36 x i8]* @Lt_07DA to i8*) to i8*
	; arg 35
	%vr10588 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10589, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr10588
	%vr10592 = bitcast %FBSTRING* %vr10588 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10592, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10595 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10594 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10595, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10594
	%vr10598 = bitcast %FBSTRING* %vr10594 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10598, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DB
	%vr10601 = bitcast i8* bitcast ([13 x i8]* @Lt_07DB to i8*) to i8*
	; arg 12
	%vr10600 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10601, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr10600
	%vr10604 = bitcast %FBSTRING* %vr10600 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10604, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10607 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10607, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10606
	%vr10610 = bitcast %FBSTRING* %vr10606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10610, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DC
	%vr10613 = bitcast i8* bitcast ([62 x i8]* @Lt_07DC to i8*) to i8*
	; arg 61
	%vr10612 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10613, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr10612
	%vr10616 = bitcast %FBSTRING* %vr10612 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10616, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DD
	%vr10619 = bitcast i8* bitcast ([62 x i8]* @Lt_07DD to i8*) to i8*
	; arg 61
	%vr10618 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10619, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr10618
	%vr10622 = bitcast %FBSTRING* %vr10618 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10622, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DE
	%vr10625 = bitcast i8* bitcast ([67 x i8]* @Lt_07DE to i8*) to i8*
	; arg 66
	%vr10624 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10625, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr10624
	%vr10628 = bitcast %FBSTRING* %vr10624 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10628, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10631 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10630 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10631, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10630
	%vr10634 = bitcast %FBSTRING* %vr10630 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10634, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07DF
	%vr10637 = bitcast i8* bitcast ([28 x i8]* @Lt_07DF to i8*) to i8*
	; arg 27
	%vr10636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10637, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr10636
	%vr10640 = bitcast %FBSTRING* %vr10636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10640, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10643 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10642 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10643, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10642
	%vr10646 = bitcast %FBSTRING* %vr10642 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10646, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E0
	%vr10649 = bitcast i8* bitcast ([30 x i8]* @Lt_07E0 to i8*) to i8*
	; arg 29
	%vr10648 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10649, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10648
	%vr10652 = bitcast %FBSTRING* %vr10648 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10652, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E1
	%vr10655 = bitcast i8* bitcast ([32 x i8]* @Lt_07E1 to i8*) to i8*
	; arg 31
	%vr10654 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10655, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr10654
	%vr10658 = bitcast %FBSTRING* %vr10654 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10658, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E2
	%vr10661 = bitcast i8* bitcast ([2 x i8]* @Lt_07E2 to i8*) to i8*
	; arg 1
	%vr10660 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10661, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10660
	%vr10664 = bitcast %FBSTRING* %vr10660 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10664, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E3
	%vr10667 = bitcast i8* bitcast ([86 x i8]* @Lt_07E3 to i8*) to i8*
	; arg 85
	%vr10666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10667, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr10666
	%vr10670 = bitcast %FBSTRING* %vr10666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10670, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E4
	%vr10673 = bitcast i8* bitcast ([39 x i8]* @Lt_07E4 to i8*) to i8*
	; arg 38
	%vr10672 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10673, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr10672
	%vr10676 = bitcast %FBSTRING* %vr10672 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10676, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10679 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10678 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10679, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10678
	%vr10682 = bitcast %FBSTRING* %vr10678 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10682, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E5
	%vr10685 = bitcast i8* bitcast ([27 x i8]* @Lt_07E5 to i8*) to i8*
	; arg 26
	%vr10684 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10685, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10684
	%vr10688 = bitcast %FBSTRING* %vr10684 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10688, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E6
	%vr10691 = bitcast i8* bitcast ([39 x i8]* @Lt_07E6 to i8*) to i8*
	; arg 38
	%vr10690 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10691, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr10690
	%vr10694 = bitcast %FBSTRING* %vr10690 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10694, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10697 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10697, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10696
	%vr10700 = bitcast %FBSTRING* %vr10696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10700, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E7
	%vr10703 = bitcast i8* bitcast ([19 x i8]* @Lt_07E7 to i8*) to i8*
	; arg 18
	%vr10702 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10703, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr10702
	%vr10706 = bitcast %FBSTRING* %vr10702 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10706, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10709 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10708 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10709, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10708
	%vr10712 = bitcast %FBSTRING* %vr10708 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10712, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E8
	%vr10715 = bitcast i8* bitcast ([27 x i8]* @Lt_07E8 to i8*) to i8*
	; arg 26
	%vr10714 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10715, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10714
	%vr10718 = bitcast %FBSTRING* %vr10714 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10718, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10721 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10720 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10721, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10720
	%vr10724 = bitcast %FBSTRING* %vr10720 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10724, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E9
	%vr10727 = bitcast i8* bitcast ([42 x i8]* @Lt_07E9 to i8*) to i8*
	; arg 41
	%vr10726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10727, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10726
	%vr10730 = bitcast %FBSTRING* %vr10726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10730, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EA
	%vr10733 = bitcast i8* bitcast ([30 x i8]* @Lt_07EA to i8*) to i8*
	; arg 29
	%vr10732 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10733, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr10732
	%vr10736 = bitcast %FBSTRING* %vr10732 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10736, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10739 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10738 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10739, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10738
	%vr10742 = bitcast %FBSTRING* %vr10738 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10742, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EB
	%vr10745 = bitcast i8* bitcast ([14 x i8]* @Lt_07EB to i8*) to i8*
	; arg 13
	%vr10744 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10745, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr10744
	%vr10748 = bitcast %FBSTRING* %vr10744 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10748, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10751 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10750 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10751, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10750
	%vr10754 = bitcast %FBSTRING* %vr10750 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10754, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EC
	%vr10757 = bitcast i8* bitcast ([78 x i8]* @Lt_07EC to i8*) to i8*
	; arg 77
	%vr10756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10757, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr10756
	%vr10760 = bitcast %FBSTRING* %vr10756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10760, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07ED
	%vr10763 = bitcast i8* bitcast ([78 x i8]* @Lt_07ED to i8*) to i8*
	; arg 77
	%vr10762 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10763, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr10762
	%vr10766 = bitcast %FBSTRING* %vr10762 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10766, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10769 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10768 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10769, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10768
	%vr10772 = bitcast %FBSTRING* %vr10768 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10772, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EE
	%vr10775 = bitcast i8* bitcast ([21 x i8]* @Lt_07EE to i8*) to i8*
	; arg 20
	%vr10774 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10775, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr10774
	%vr10778 = bitcast %FBSTRING* %vr10774 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10778, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07EF
	%vr10781 = bitcast i8* bitcast ([44 x i8]* @Lt_07EF to i8*) to i8*
	; arg 43
	%vr10780 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10781, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr10780
	%vr10784 = bitcast %FBSTRING* %vr10780 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10784, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F0
	%vr10787 = bitcast i8* bitcast ([44 x i8]* @Lt_07F0 to i8*) to i8*
	; arg 43
	%vr10786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10787, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr10786
	%vr10790 = bitcast %FBSTRING* %vr10786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10790, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10793 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10792 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10793, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10792
	%vr10796 = bitcast %FBSTRING* %vr10792 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10796, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10799 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10798 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10799, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10798
	%vr10802 = bitcast %FBSTRING* %vr10798 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10802, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F1
	%vr10805 = bitcast i8* bitcast ([61 x i8]* @Lt_07F1 to i8*) to i8*
	; arg 60
	%vr10804 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10805, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr10804
	%vr10808 = bitcast %FBSTRING* %vr10804 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10808, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F2
	%vr10811 = bitcast i8* bitcast ([19 x i8]* @Lt_07F2 to i8*) to i8*
	; arg 18
	%vr10810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10811, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr10810
	%vr10814 = bitcast %FBSTRING* %vr10810 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10814, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10817 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10817, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10816
	%vr10820 = bitcast %FBSTRING* %vr10816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10820, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F3
	%vr10823 = bitcast i8* bitcast ([43 x i8]* @Lt_07F3 to i8*) to i8*
	; arg 42
	%vr10822 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10823, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr10822
	%vr10826 = bitcast %FBSTRING* %vr10822 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10826, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10829 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10828 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10829, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10828
	%vr10832 = bitcast %FBSTRING* %vr10828 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10832, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F4
	%vr10835 = bitcast i8* bitcast ([16 x i8]* @Lt_07F4 to i8*) to i8*
	; arg 15
	%vr10834 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10835, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr10834
	%vr10838 = bitcast %FBSTRING* %vr10834 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10838, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F5
	%vr10841 = bitcast i8* bitcast ([34 x i8]* @Lt_07F5 to i8*) to i8*
	; arg 33
	%vr10840 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10841, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr10840
	%vr10844 = bitcast %FBSTRING* %vr10840 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10844, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F6
	%vr10847 = bitcast i8* bitcast ([40 x i8]* @Lt_07F6 to i8*) to i8*
	; arg 39
	%vr10846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10847, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr10846
	%vr10850 = bitcast %FBSTRING* %vr10846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10850, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F7
	%vr10853 = bitcast i8* bitcast ([55 x i8]* @Lt_07F7 to i8*) to i8*
	; arg 54
	%vr10852 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10853, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr10852
	%vr10856 = bitcast %FBSTRING* %vr10852 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10856, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F8
	%vr10859 = bitcast i8* bitcast ([82 x i8]* @Lt_07F8 to i8*) to i8*
	; arg 81
	%vr10858 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10859, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr10858
	%vr10862 = bitcast %FBSTRING* %vr10858 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10862, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10865 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10864 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10865, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10864
	%vr10868 = bitcast %FBSTRING* %vr10864 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10868, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07F9
	%vr10871 = bitcast i8* bitcast ([83 x i8]* @Lt_07F9 to i8*) to i8*
	; arg 82
	%vr10870 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10871, i64 82 )

	; call fb_PrintString()
	; arg 1
	; arg vr10870
	%vr10874 = bitcast %FBSTRING* %vr10870 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10874, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10877 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10877, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10876
	%vr10880 = bitcast %FBSTRING* %vr10876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10880, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FA
	%vr10883 = bitcast i8* bitcast ([17 x i8]* @Lt_07FA to i8*) to i8*
	; arg 16
	%vr10882 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10883, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr10882
	%vr10886 = bitcast %FBSTRING* %vr10882 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10886, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr10889 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr10888 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10889, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10888
	%vr10892 = bitcast %FBSTRING* %vr10888 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10892, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10895 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10894 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10895, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10894
	%vr10898 = bitcast %FBSTRING* %vr10894 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10898, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FB
	%vr10901 = bitcast i8* bitcast ([42 x i8]* @Lt_07FB to i8*) to i8*
	; arg 41
	%vr10900 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10901, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr10900
	%vr10904 = bitcast %FBSTRING* %vr10900 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10904, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr10907 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr10906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10907, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr10906
	%vr10910 = bitcast %FBSTRING* %vr10906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10910, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FC
	%vr10913 = bitcast i8* bitcast ([38 x i8]* @Lt_07FC to i8*) to i8*
	; arg 37
	%vr10912 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10913, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr10912
	%vr10916 = bitcast %FBSTRING* %vr10912 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10916, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr10919 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr10918 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10919, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr10918
	%vr10922 = bitcast %FBSTRING* %vr10918 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10922, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FD
	%vr10925 = bitcast i8* bitcast ([23 x i8]* @Lt_07FD to i8*) to i8*
	; arg 22
	%vr10924 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10925, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr10924
	%vr10928 = bitcast %FBSTRING* %vr10924 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10928, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr10931 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr10930 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10931, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr10930
	%vr10934 = bitcast %FBSTRING* %vr10930 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10934, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_076C
	%vr10937 = bitcast i8* bitcast ([12 x i8]* @Lt_076C to i8*) to i8*
	; arg 11
	%vr10936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10937, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr10936
	%vr10940 = bitcast %FBSTRING* %vr10936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10940, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FE
	%vr10943 = bitcast i8* bitcast ([6 x i8]* @Lt_07FE to i8*) to i8*
	; arg 5
	%vr10942 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10943, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10942
	%vr10946 = bitcast %FBSTRING* %vr10942 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10946, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07FF
	%vr10949 = bitcast i8* bitcast ([102 x i8]* @Lt_07FF to i8*) to i8*
	; arg 101
	%vr10948 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10949, i64 101 )

	; call fb_PrintString()
	; arg 1
	; arg vr10948
	%vr10952 = bitcast %FBSTRING* %vr10948 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10952, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0800
	%vr10955 = bitcast i8* bitcast ([21 x i8]* @Lt_0800 to i8*) to i8*
	; arg 20
	%vr10954 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10955, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr10954
	%vr10958 = bitcast %FBSTRING* %vr10954 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10958, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0801
	%vr10961 = bitcast i8* bitcast ([75 x i8]* @Lt_0801 to i8*) to i8*
	; arg 74
	%vr10960 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10961, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr10960
	%vr10964 = bitcast %FBSTRING* %vr10960 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10964, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0802
	%vr10967 = bitcast i8* bitcast ([98 x i8]* @Lt_0802 to i8*) to i8*
	; arg 97
	%vr10966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10967, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr10966
	%vr10970 = bitcast %FBSTRING* %vr10966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10970, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0803
	%vr10973 = bitcast i8* bitcast ([21 x i8]* @Lt_0803 to i8*) to i8*
	; arg 20
	%vr10972 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10973, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr10972
	%vr10976 = bitcast %FBSTRING* %vr10972 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10976, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0804
	%vr10979 = bitcast i8* bitcast ([27 x i8]* @Lt_0804 to i8*) to i8*
	; arg 26
	%vr10978 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10979, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr10978
	%vr10982 = bitcast %FBSTRING* %vr10978 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10982, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0805
	%vr10985 = bitcast i8* bitcast ([31 x i8]* @Lt_0805 to i8*) to i8*
	; arg 30
	%vr10984 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10985, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr10984
	%vr10988 = bitcast %FBSTRING* %vr10984 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10988, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0806
	%vr10991 = bitcast i8* bitcast ([26 x i8]* @Lt_0806 to i8*) to i8*
	; arg 25
	%vr10990 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10991, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr10990
	%vr10994 = bitcast %FBSTRING* %vr10990 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr10994, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr10997 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr10996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr10997, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr10996
	%vr11000 = bitcast %FBSTRING* %vr10996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11000, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0807
	%vr11003 = bitcast i8* bitcast ([108 x i8]* @Lt_0807 to i8*) to i8*
	; arg 107
	%vr11002 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11003, i64 107 )

	; call fb_PrintString()
	; arg 1
	; arg vr11002
	%vr11006 = bitcast %FBSTRING* %vr11002 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11006, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0800
	%vr11009 = bitcast i8* bitcast ([21 x i8]* @Lt_0800 to i8*) to i8*
	; arg 20
	%vr11008 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11009, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr11008
	%vr11012 = bitcast %FBSTRING* %vr11008 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11012, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0808
	%vr11015 = bitcast i8* bitcast ([80 x i8]* @Lt_0808 to i8*) to i8*
	; arg 79
	%vr11014 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11015, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr11014
	%vr11018 = bitcast %FBSTRING* %vr11014 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11018, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0806
	%vr11021 = bitcast i8* bitcast ([26 x i8]* @Lt_0806 to i8*) to i8*
	; arg 25
	%vr11020 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11021, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr11020
	%vr11024 = bitcast %FBSTRING* %vr11020 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11024, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0809
	%vr11027 = bitcast i8* bitcast ([14 x i8]* @Lt_0809 to i8*) to i8*
	; arg 13
	%vr11026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11027, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11026
	%vr11030 = bitcast %FBSTRING* %vr11026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11030, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr11033 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr11032 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11033, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr11032
	%vr11036 = bitcast %FBSTRING* %vr11032 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11036, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080A
	%vr11039 = bitcast i8* bitcast ([51 x i8]* @Lt_080A to i8*) to i8*
	; arg 50
	%vr11038 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11039, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr11038
	%vr11042 = bitcast %FBSTRING* %vr11038 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11042, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0805
	%vr11045 = bitcast i8* bitcast ([31 x i8]* @Lt_0805 to i8*) to i8*
	; arg 30
	%vr11044 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11045, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11044
	%vr11048 = bitcast %FBSTRING* %vr11044 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11048, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11051 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11050 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11051, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11050
	%vr11054 = bitcast %FBSTRING* %vr11050 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11054, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080B
	%vr11057 = bitcast i8* bitcast ([65 x i8]* @Lt_080B to i8*) to i8*
	; arg 64
	%vr11056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11057, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr11056
	%vr11060 = bitcast %FBSTRING* %vr11056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11060, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11063 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11062 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11063, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11062
	%vr11066 = bitcast %FBSTRING* %vr11062 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11066, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080C
	%vr11069 = bitcast i8* bitcast ([40 x i8]* @Lt_080C to i8*) to i8*
	; arg 39
	%vr11068 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11069, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11068
	%vr11072 = bitcast %FBSTRING* %vr11068 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11072, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11075 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11074 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11075, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11074
	%vr11078 = bitcast %FBSTRING* %vr11074 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11078, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080D
	%vr11081 = bitcast i8* bitcast ([38 x i8]* @Lt_080D to i8*) to i8*
	; arg 37
	%vr11080 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11081, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11080
	%vr11084 = bitcast %FBSTRING* %vr11080 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11084, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11087 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11087, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11086
	%vr11090 = bitcast %FBSTRING* %vr11086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11090, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080E
	%vr11093 = bitcast i8* bitcast ([19 x i8]* @Lt_080E to i8*) to i8*
	; arg 18
	%vr11092 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11093, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr11092
	%vr11096 = bitcast %FBSTRING* %vr11092 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11096, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_080F
	%vr11099 = bitcast i8* bitcast ([84 x i8]* @Lt_080F to i8*) to i8*
	; arg 83
	%vr11098 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11099, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr11098
	%vr11102 = bitcast %FBSTRING* %vr11098 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11102, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0810
	%vr11105 = bitcast i8* bitcast ([84 x i8]* @Lt_0810 to i8*) to i8*
	; arg 83
	%vr11104 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11105, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr11104
	%vr11108 = bitcast %FBSTRING* %vr11104 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11108, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0811
	%vr11111 = bitcast i8* bitcast ([21 x i8]* @Lt_0811 to i8*) to i8*
	; arg 20
	%vr11110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11111, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr11110
	%vr11114 = bitcast %FBSTRING* %vr11110 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11114, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0812
	%vr11117 = bitcast i8* bitcast ([29 x i8]* @Lt_0812 to i8*) to i8*
	; arg 28
	%vr11116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11117, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr11116
	%vr11120 = bitcast %FBSTRING* %vr11116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11120, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0813
	%vr11123 = bitcast i8* bitcast ([31 x i8]* @Lt_0813 to i8*) to i8*
	; arg 30
	%vr11122 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11123, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11122
	%vr11126 = bitcast %FBSTRING* %vr11122 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11126, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0814
	%vr11129 = bitcast i8* bitcast ([66 x i8]* @Lt_0814 to i8*) to i8*
	; arg 65
	%vr11128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11129, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr11128
	%vr11132 = bitcast %FBSTRING* %vr11128 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11132, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0815
	%vr11135 = bitcast i8* bitcast ([35 x i8]* @Lt_0815 to i8*) to i8*
	; arg 34
	%vr11134 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11135, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11134
	%vr11138 = bitcast %FBSTRING* %vr11134 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11138, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11141 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11140 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11141, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11140
	%vr11144 = bitcast %FBSTRING* %vr11140 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11144, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0816
	%vr11147 = bitcast i8* bitcast ([22 x i8]* @Lt_0816 to i8*) to i8*
	; arg 21
	%vr11146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11147, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11146
	%vr11150 = bitcast %FBSTRING* %vr11146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11150, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0817
	%vr11153 = bitcast i8* bitcast ([84 x i8]* @Lt_0817 to i8*) to i8*
	; arg 83
	%vr11152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11153, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr11152
	%vr11156 = bitcast %FBSTRING* %vr11152 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11156, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0818
	%vr11159 = bitcast i8* bitcast ([79 x i8]* @Lt_0818 to i8*) to i8*
	; arg 78
	%vr11158 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11159, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11158
	%vr11162 = bitcast %FBSTRING* %vr11158 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11162, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0819
	%vr11165 = bitcast i8* bitcast ([15 x i8]* @Lt_0819 to i8*) to i8*
	; arg 14
	%vr11164 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11165, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr11164
	%vr11168 = bitcast %FBSTRING* %vr11164 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11168, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081A
	%vr11171 = bitcast i8* bitcast ([29 x i8]* @Lt_081A to i8*) to i8*
	; arg 28
	%vr11170 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11171, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr11170
	%vr11174 = bitcast %FBSTRING* %vr11170 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11174, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081B
	%vr11177 = bitcast i8* bitcast ([31 x i8]* @Lt_081B to i8*) to i8*
	; arg 30
	%vr11176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11177, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11176
	%vr11180 = bitcast %FBSTRING* %vr11176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11180, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081C
	%vr11183 = bitcast i8* bitcast ([67 x i8]* @Lt_081C to i8*) to i8*
	; arg 66
	%vr11182 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11183, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr11182
	%vr11186 = bitcast %FBSTRING* %vr11182 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11186, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081D
	%vr11189 = bitcast i8* bitcast ([31 x i8]* @Lt_081D to i8*) to i8*
	; arg 30
	%vr11188 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11189, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11188
	%vr11192 = bitcast %FBSTRING* %vr11188 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11192, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11195 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11194 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11195, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11194
	%vr11198 = bitcast %FBSTRING* %vr11194 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11198, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081E
	%vr11201 = bitcast i8* bitcast ([14 x i8]* @Lt_081E to i8*) to i8*
	; arg 13
	%vr11200 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11201, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11200
	%vr11204 = bitcast %FBSTRING* %vr11200 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11204, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_081F
	%vr11207 = bitcast i8* bitcast ([38 x i8]* @Lt_081F to i8*) to i8*
	; arg 37
	%vr11206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11207, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11206
	%vr11210 = bitcast %FBSTRING* %vr11206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11210, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0820
	%vr11213 = bitcast i8* bitcast ([28 x i8]* @Lt_0820 to i8*) to i8*
	; arg 27
	%vr11212 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11213, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr11212
	%vr11216 = bitcast %FBSTRING* %vr11212 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11216, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0821
	%vr11219 = bitcast i8* bitcast ([28 x i8]* @Lt_0821 to i8*) to i8*
	; arg 27
	%vr11218 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11219, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr11218
	%vr11222 = bitcast %FBSTRING* %vr11218 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11222, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0822
	%vr11225 = bitcast i8* bitcast ([38 x i8]* @Lt_0822 to i8*) to i8*
	; arg 37
	%vr11224 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11225, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr11224
	%vr11228 = bitcast %FBSTRING* %vr11224 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11228, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0823
	%vr11231 = bitcast i8* bitcast ([87 x i8]* @Lt_0823 to i8*) to i8*
	; arg 86
	%vr11230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11231, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr11230
	%vr11234 = bitcast %FBSTRING* %vr11230 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11234, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0824
	%vr11237 = bitcast i8* bitcast ([90 x i8]* @Lt_0824 to i8*) to i8*
	; arg 89
	%vr11236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11237, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr11236
	%vr11240 = bitcast %FBSTRING* %vr11236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11240, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11243 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11242 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11243, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11242
	%vr11246 = bitcast %FBSTRING* %vr11242 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11246, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0825
	%vr11249 = bitcast i8* bitcast ([12 x i8]* @Lt_0825 to i8*) to i8*
	; arg 11
	%vr11248 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11249, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr11248
	%vr11252 = bitcast %FBSTRING* %vr11248 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11252, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0826
	%vr11255 = bitcast i8* bitcast ([57 x i8]* @Lt_0826 to i8*) to i8*
	; arg 56
	%vr11254 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11255, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr11254
	%vr11258 = bitcast %FBSTRING* %vr11254 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11258, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0827
	%vr11261 = bitcast i8* bitcast ([57 x i8]* @Lt_0827 to i8*) to i8*
	; arg 56
	%vr11260 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11261, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr11260
	%vr11264 = bitcast %FBSTRING* %vr11260 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11264, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0828
	%vr11267 = bitcast i8* bitcast ([28 x i8]* @Lt_0828 to i8*) to i8*
	; arg 27
	%vr11266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11267, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr11266
	%vr11270 = bitcast %FBSTRING* %vr11266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11270, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr11273 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr11272 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11273, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11272
	%vr11276 = bitcast %FBSTRING* %vr11272 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11276, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0829
	%vr11279 = bitcast i8* bitcast ([25 x i8]* @Lt_0829 to i8*) to i8*
	; arg 24
	%vr11278 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11279, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11278
	%vr11282 = bitcast %FBSTRING* %vr11278 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11282, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11285 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11284 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11285, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11284
	%vr11288 = bitcast %FBSTRING* %vr11284 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11288, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11291 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11290 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11291, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11290
	%vr11294 = bitcast %FBSTRING* %vr11290 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11294, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082A
	%vr11297 = bitcast i8* bitcast ([27 x i8]* @Lt_082A to i8*) to i8*
	; arg 26
	%vr11296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11297, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr11296
	%vr11300 = bitcast %FBSTRING* %vr11296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11300, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr11303 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr11302 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11303, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11302
	%vr11306 = bitcast %FBSTRING* %vr11302 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11306, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082B
	%vr11309 = bitcast i8* bitcast ([33 x i8]* @Lt_082B to i8*) to i8*
	; arg 32
	%vr11308 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11309, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr11308
	%vr11312 = bitcast %FBSTRING* %vr11308 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11312, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082C
	%vr11315 = bitcast i8* bitcast ([24 x i8]* @Lt_082C to i8*) to i8*
	; arg 23
	%vr11314 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11315, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11314
	%vr11318 = bitcast %FBSTRING* %vr11314 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11318, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082D
	%vr11321 = bitcast i8* bitcast ([77 x i8]* @Lt_082D to i8*) to i8*
	; arg 76
	%vr11320 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11321, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr11320
	%vr11324 = bitcast %FBSTRING* %vr11320 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11324, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11327 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11327, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11326
	%vr11330 = bitcast %FBSTRING* %vr11326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11330, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11333 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11332 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11333, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11332
	%vr11336 = bitcast %FBSTRING* %vr11332 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11336, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082E
	%vr11339 = bitcast i8* bitcast ([27 x i8]* @Lt_082E to i8*) to i8*
	; arg 26
	%vr11338 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11339, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr11338
	%vr11342 = bitcast %FBSTRING* %vr11338 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11342, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr11345 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr11344 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11345, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11344
	%vr11348 = bitcast %FBSTRING* %vr11344 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11348, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082F
	%vr11351 = bitcast i8* bitcast ([31 x i8]* @Lt_082F to i8*) to i8*
	; arg 30
	%vr11350 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11351, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11350
	%vr11354 = bitcast %FBSTRING* %vr11350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11354, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11357 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11357, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11356
	%vr11360 = bitcast %FBSTRING* %vr11356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11360, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0830
	%vr11363 = bitcast i8* bitcast ([44 x i8]* @Lt_0830 to i8*) to i8*
	; arg 43
	%vr11362 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11363, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11362
	%vr11366 = bitcast %FBSTRING* %vr11362 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11366, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0831
	%vr11369 = bitcast i8* bitcast ([44 x i8]* @Lt_0831 to i8*) to i8*
	; arg 43
	%vr11368 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11369, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11368
	%vr11372 = bitcast %FBSTRING* %vr11368 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11372, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0832
	%vr11375 = bitcast i8* bitcast ([47 x i8]* @Lt_0832 to i8*) to i8*
	; arg 46
	%vr11374 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11375, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11374
	%vr11378 = bitcast %FBSTRING* %vr11374 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11378, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07E2
	%vr11381 = bitcast i8* bitcast ([2 x i8]* @Lt_07E2 to i8*) to i8*
	; arg 1
	%vr11380 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11381, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11380
	%vr11384 = bitcast %FBSTRING* %vr11380 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11384, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0833
	%vr11387 = bitcast i8* bitcast ([36 x i8]* @Lt_0833 to i8*) to i8*
	; arg 35
	%vr11386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11387, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr11386
	%vr11390 = bitcast %FBSTRING* %vr11386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11390, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11393 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11392 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11393, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11392
	%vr11396 = bitcast %FBSTRING* %vr11392 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11396, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11399 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11398 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11399, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11398
	%vr11402 = bitcast %FBSTRING* %vr11398 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11402, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0834
	%vr11405 = bitcast i8* bitcast ([86 x i8]* @Lt_0834 to i8*) to i8*
	; arg 85
	%vr11404 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11405, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr11404
	%vr11408 = bitcast %FBSTRING* %vr11404 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11408, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0835
	%vr11411 = bitcast i8* bitcast ([26 x i8]* @Lt_0835 to i8*) to i8*
	; arg 25
	%vr11410 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11411, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr11410
	%vr11414 = bitcast %FBSTRING* %vr11410 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11414, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0836
	%vr11417 = bitcast i8* bitcast ([20 x i8]* @Lt_0836 to i8*) to i8*
	; arg 19
	%vr11416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11417, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr11416
	%vr11420 = bitcast %FBSTRING* %vr11416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11420, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0836
	%vr11423 = bitcast i8* bitcast ([20 x i8]* @Lt_0836 to i8*) to i8*
	; arg 19
	%vr11422 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11423, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr11422
	%vr11426 = bitcast %FBSTRING* %vr11422 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11426, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0837
	%vr11429 = bitcast i8* bitcast ([21 x i8]* @Lt_0837 to i8*) to i8*
	; arg 20
	%vr11428 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11429, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr11428
	%vr11432 = bitcast %FBSTRING* %vr11428 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11432, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11435 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11434 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11435, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11434
	%vr11438 = bitcast %FBSTRING* %vr11434 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11438, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0838
	%vr11441 = bitcast i8* bitcast ([44 x i8]* @Lt_0838 to i8*) to i8*
	; arg 43
	%vr11440 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11441, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11440
	%vr11444 = bitcast %FBSTRING* %vr11440 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11444, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0839
	%vr11447 = bitcast i8* bitcast ([40 x i8]* @Lt_0839 to i8*) to i8*
	; arg 39
	%vr11446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11447, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11446
	%vr11450 = bitcast %FBSTRING* %vr11446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11450, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11453 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11452 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11453, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11452
	%vr11456 = bitcast %FBSTRING* %vr11452 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11456, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083A
	%vr11459 = bitcast i8* bitcast ([24 x i8]* @Lt_083A to i8*) to i8*
	; arg 23
	%vr11458 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11459, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11458
	%vr11462 = bitcast %FBSTRING* %vr11458 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11462, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0836
	%vr11465 = bitcast i8* bitcast ([20 x i8]* @Lt_0836 to i8*) to i8*
	; arg 19
	%vr11464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11465, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr11464
	%vr11468 = bitcast %FBSTRING* %vr11464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11468, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083B
	%vr11471 = bitcast i8* bitcast ([35 x i8]* @Lt_083B to i8*) to i8*
	; arg 34
	%vr11470 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11471, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr11470
	%vr11474 = bitcast %FBSTRING* %vr11470 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11474, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11477 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11477, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11476
	%vr11480 = bitcast %FBSTRING* %vr11476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11480, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083C
	%vr11483 = bitcast i8* bitcast ([25 x i8]* @Lt_083C to i8*) to i8*
	; arg 24
	%vr11482 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11483, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11482
	%vr11486 = bitcast %FBSTRING* %vr11482 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11486, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11489 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11489, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11488
	%vr11492 = bitcast %FBSTRING* %vr11488 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11492, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083D
	%vr11495 = bitcast i8* bitcast ([66 x i8]* @Lt_083D to i8*) to i8*
	; arg 65
	%vr11494 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11495, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr11494
	%vr11498 = bitcast %FBSTRING* %vr11494 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11498, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11501 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11500 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11501, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11500
	%vr11504 = bitcast %FBSTRING* %vr11500 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11504, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083E
	%vr11507 = bitcast i8* bitcast ([25 x i8]* @Lt_083E to i8*) to i8*
	; arg 24
	%vr11506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11507, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11506
	%vr11510 = bitcast %FBSTRING* %vr11506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11510, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_083F
	%vr11513 = bitcast i8* bitcast ([30 x i8]* @Lt_083F to i8*) to i8*
	; arg 29
	%vr11512 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11513, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr11512
	%vr11516 = bitcast %FBSTRING* %vr11512 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11516, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11519 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11518 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11519, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11518
	%vr11522 = bitcast %FBSTRING* %vr11518 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11522, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06F6
	%vr11525 = bitcast i8* bitcast ([14 x i8]* @Lt_06F6 to i8*) to i8*
	; arg 13
	%vr11524 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11525, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr11524
	%vr11528 = bitcast %FBSTRING* %vr11524 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11528, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11531 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11530 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11531, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11530
	%vr11534 = bitcast %FBSTRING* %vr11530 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11534, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11537 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11537, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11536
	%vr11540 = bitcast %FBSTRING* %vr11536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11540, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0840
	%vr11543 = bitcast i8* bitcast ([43 x i8]* @Lt_0840 to i8*) to i8*
	; arg 42
	%vr11542 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11543, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr11542
	%vr11546 = bitcast %FBSTRING* %vr11542 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11546, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr11549 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr11548 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11549, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11548
	%vr11552 = bitcast %FBSTRING* %vr11548 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11552, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0841
	%vr11555 = bitcast i8* bitcast ([25 x i8]* @Lt_0841 to i8*) to i8*
	; arg 24
	%vr11554 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11555, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11554
	%vr11558 = bitcast %FBSTRING* %vr11554 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11558, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11561 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11560 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11561, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11560
	%vr11564 = bitcast %FBSTRING* %vr11560 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11564, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0842
	%vr11567 = bitcast i8* bitcast ([21 x i8]* @Lt_0842 to i8*) to i8*
	; arg 20
	%vr11566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11567, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr11566
	%vr11570 = bitcast %FBSTRING* %vr11566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11570, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0843
	%vr11573 = bitcast i8* bitcast ([39 x i8]* @Lt_0843 to i8*) to i8*
	; arg 38
	%vr11572 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11573, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11572
	%vr11576 = bitcast %FBSTRING* %vr11572 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11576, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11579 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11578 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11579, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11578
	%vr11582 = bitcast %FBSTRING* %vr11578 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11582, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0844
	%vr11585 = bitcast i8* bitcast ([22 x i8]* @Lt_0844 to i8*) to i8*
	; arg 21
	%vr11584 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11585, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11584
	%vr11588 = bitcast %FBSTRING* %vr11584 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11588, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0845
	%vr11591 = bitcast i8* bitcast ([21 x i8]* @Lt_0845 to i8*) to i8*
	; arg 20
	%vr11590 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11591, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr11590
	%vr11594 = bitcast %FBSTRING* %vr11590 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11594, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0846
	%vr11597 = bitcast i8* bitcast ([46 x i8]* @Lt_0846 to i8*) to i8*
	; arg 45
	%vr11596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11597, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr11596
	%vr11600 = bitcast %FBSTRING* %vr11596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11600, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0847
	%vr11603 = bitcast i8* bitcast ([66 x i8]* @Lt_0847 to i8*) to i8*
	; arg 65
	%vr11602 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11603, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr11602
	%vr11606 = bitcast %FBSTRING* %vr11602 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11606, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11609 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11608 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11609, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11608
	%vr11612 = bitcast %FBSTRING* %vr11608 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11612, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0844
	%vr11615 = bitcast i8* bitcast ([22 x i8]* @Lt_0844 to i8*) to i8*
	; arg 21
	%vr11614 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11615, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11614
	%vr11618 = bitcast %FBSTRING* %vr11614 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11618, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11621 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11620 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11621, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11620
	%vr11624 = bitcast %FBSTRING* %vr11620 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11624, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0848
	%vr11627 = bitcast i8* bitcast ([13 x i8]* @Lt_0848 to i8*) to i8*
	; arg 12
	%vr11626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11627, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11626
	%vr11630 = bitcast %FBSTRING* %vr11626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11630, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0849
	%vr11633 = bitcast i8* bitcast ([91 x i8]* @Lt_0849 to i8*) to i8*
	; arg 90
	%vr11632 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11633, i64 90 )

	; call fb_PrintString()
	; arg 1
	; arg vr11632
	%vr11636 = bitcast %FBSTRING* %vr11632 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11636, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084A
	%vr11639 = bitcast i8* bitcast ([15 x i8]* @Lt_084A to i8*) to i8*
	; arg 14
	%vr11638 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11639, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr11638
	%vr11642 = bitcast %FBSTRING* %vr11638 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11642, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084B
	%vr11645 = bitcast i8* bitcast ([28 x i8]* @Lt_084B to i8*) to i8*
	; arg 27
	%vr11644 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11645, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr11644
	%vr11648 = bitcast %FBSTRING* %vr11644 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11648, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084C
	%vr11651 = bitcast i8* bitcast ([44 x i8]* @Lt_084C to i8*) to i8*
	; arg 43
	%vr11650 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11651, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11650
	%vr11654 = bitcast %FBSTRING* %vr11650 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11654, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr11657 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr11656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11657, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11656
	%vr11660 = bitcast %FBSTRING* %vr11656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11660, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084D
	%vr11663 = bitcast i8* bitcast ([32 x i8]* @Lt_084D to i8*) to i8*
	; arg 31
	%vr11662 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11663, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr11662
	%vr11666 = bitcast %FBSTRING* %vr11662 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11666, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11669 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11668 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11669, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11668
	%vr11672 = bitcast %FBSTRING* %vr11668 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11672, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084E
	%vr11675 = bitcast i8* bitcast ([29 x i8]* @Lt_084E to i8*) to i8*
	; arg 28
	%vr11674 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11675, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr11674
	%vr11678 = bitcast %FBSTRING* %vr11674 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11678, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_084F
	%vr11681 = bitcast i8* bitcast ([39 x i8]* @Lt_084F to i8*) to i8*
	; arg 38
	%vr11680 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11681, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr11680
	%vr11684 = bitcast %FBSTRING* %vr11680 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11684, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr11687 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr11686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11687, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr11686
	%vr11690 = bitcast %FBSTRING* %vr11686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11690, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0762
	%vr11693 = bitcast i8* bitcast ([16 x i8]* @Lt_0762 to i8*) to i8*
	; arg 15
	%vr11692 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11693, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11692
	%vr11696 = bitcast %FBSTRING* %vr11692 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11696, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11699 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11698 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11699, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11698
	%vr11702 = bitcast %FBSTRING* %vr11698 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11702, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11705 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11705, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11704
	%vr11708 = bitcast %FBSTRING* %vr11704 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11708, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11711 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11710 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11711, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11710
	%vr11714 = bitcast %FBSTRING* %vr11710 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11714, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0850
	%vr11717 = bitcast i8* bitcast ([51 x i8]* @Lt_0850 to i8*) to i8*
	; arg 50
	%vr11716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11717, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr11716
	%vr11720 = bitcast %FBSTRING* %vr11716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11720, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr11723 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr11722 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11723, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11722
	%vr11726 = bitcast %FBSTRING* %vr11722 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11726, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr11729 = bitcast i8* bitcast ([13 x i8]* @Lt_0851 to i8*) to i8*
	; arg 12
	%vr11728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11729, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr11728
	%vr11732 = bitcast %FBSTRING* %vr11728 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11732, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0641
	%vr11735 = bitcast i8* bitcast ([6 x i8]* @Lt_0641 to i8*) to i8*
	; arg 5
	%vr11734 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11735, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11734
	%vr11738 = bitcast %FBSTRING* %vr11734 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11738, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0852
	%vr11741 = bitcast i8* bitcast ([40 x i8]* @Lt_0852 to i8*) to i8*
	; arg 39
	%vr11740 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11741, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr11740
	%vr11744 = bitcast %FBSTRING* %vr11740 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11744, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0853
	%vr11747 = bitcast i8* bitcast ([62 x i8]* @Lt_0853 to i8*) to i8*
	; arg 61
	%vr11746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11747, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr11746
	%vr11750 = bitcast %FBSTRING* %vr11746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11750, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0854
	%vr11753 = bitcast i8* bitcast ([47 x i8]* @Lt_0854 to i8*) to i8*
	; arg 46
	%vr11752 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11753, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11752
	%vr11756 = bitcast %FBSTRING* %vr11752 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11756, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0855
	%vr11759 = bitcast i8* bitcast ([47 x i8]* @Lt_0855 to i8*) to i8*
	; arg 46
	%vr11758 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11759, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11758
	%vr11762 = bitcast %FBSTRING* %vr11758 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11762, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0856
	%vr11765 = bitcast i8* bitcast ([47 x i8]* @Lt_0856 to i8*) to i8*
	; arg 46
	%vr11764 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11765, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11764
	%vr11768 = bitcast %FBSTRING* %vr11764 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11768, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr11771 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr11770 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11771, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11770
	%vr11774 = bitcast %FBSTRING* %vr11770 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11774, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0857
	%vr11777 = bitcast i8* bitcast ([85 x i8]* @Lt_0857 to i8*) to i8*
	; arg 84
	%vr11776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11777, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr11776
	%vr11780 = bitcast %FBSTRING* %vr11776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11780, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0858
	%vr11783 = bitcast i8* bitcast ([24 x i8]* @Lt_0858 to i8*) to i8*
	; arg 23
	%vr11782 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11783, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr11782
	%vr11786 = bitcast %FBSTRING* %vr11782 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11786, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0859
	%vr11789 = bitcast i8* bitcast ([32 x i8]* @Lt_0859 to i8*) to i8*
	; arg 31
	%vr11788 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11789, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr11788
	%vr11792 = bitcast %FBSTRING* %vr11788 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11792, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr11795 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr11794 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11795, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11794
	%vr11798 = bitcast %FBSTRING* %vr11794 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11798, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085A
	%vr11801 = bitcast i8* bitcast ([73 x i8]* @Lt_085A to i8*) to i8*
	; arg 72
	%vr11800 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11801, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr11800
	%vr11804 = bitcast %FBSTRING* %vr11800 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11804, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085B
	%vr11807 = bitcast i8* bitcast ([42 x i8]* @Lt_085B to i8*) to i8*
	; arg 41
	%vr11806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11807, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr11806
	%vr11810 = bitcast %FBSTRING* %vr11806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11810, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr11813 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr11812 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11813, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr11812
	%vr11816 = bitcast %FBSTRING* %vr11812 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11816, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085C
	%vr11819 = bitcast i8* bitcast ([25 x i8]* @Lt_085C to i8*) to i8*
	; arg 24
	%vr11818 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11819, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr11818
	%vr11822 = bitcast %FBSTRING* %vr11818 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11822, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085D
	%vr11825 = bitcast i8* bitcast ([11 x i8]* @Lt_085D to i8*) to i8*
	; arg 10
	%vr11824 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11825, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr11824
	%vr11828 = bitcast %FBSTRING* %vr11824 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11828, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11831 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11830 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11831, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11830
	%vr11834 = bitcast %FBSTRING* %vr11830 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11834, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11837 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11837, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11836
	%vr11840 = bitcast %FBSTRING* %vr11836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11840, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085E
	%vr11843 = bitcast i8* bitcast ([76 x i8]* @Lt_085E to i8*) to i8*
	; arg 75
	%vr11842 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11843, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr11842
	%vr11846 = bitcast %FBSTRING* %vr11842 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11846, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11849 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11848 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11849, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11848
	%vr11852 = bitcast %FBSTRING* %vr11848 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11852, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085F
	%vr11855 = bitcast i8* bitcast ([37 x i8]* @Lt_085F to i8*) to i8*
	; arg 36
	%vr11854 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11855, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr11854
	%vr11858 = bitcast %FBSTRING* %vr11854 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11858, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr11861 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr11860 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11861, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11860
	%vr11864 = bitcast %FBSTRING* %vr11860 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11864, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_082F
	%vr11867 = bitcast i8* bitcast ([31 x i8]* @Lt_082F to i8*) to i8*
	; arg 30
	%vr11866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11867, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11866
	%vr11870 = bitcast %FBSTRING* %vr11866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11870, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0860
	%vr11873 = bitcast i8* bitcast ([16 x i8]* @Lt_0860 to i8*) to i8*
	; arg 15
	%vr11872 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11873, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11872
	%vr11876 = bitcast %FBSTRING* %vr11872 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11876, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0830
	%vr11879 = bitcast i8* bitcast ([44 x i8]* @Lt_0830 to i8*) to i8*
	; arg 43
	%vr11878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11879, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11878
	%vr11882 = bitcast %FBSTRING* %vr11878 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11882, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0831
	%vr11885 = bitcast i8* bitcast ([44 x i8]* @Lt_0831 to i8*) to i8*
	; arg 43
	%vr11884 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11885, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11884
	%vr11888 = bitcast %FBSTRING* %vr11884 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11888, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0832
	%vr11891 = bitcast i8* bitcast ([47 x i8]* @Lt_0832 to i8*) to i8*
	; arg 46
	%vr11890 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11891, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr11890
	%vr11894 = bitcast %FBSTRING* %vr11890 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11894, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0861
	%vr11897 = bitcast i8* bitcast ([3 x i8]* @Lt_0861 to i8*) to i8*
	; arg 2
	%vr11896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11897, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr11896
	%vr11900 = bitcast %FBSTRING* %vr11896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11900, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0862
	%vr11903 = bitcast i8* bitcast ([16 x i8]* @Lt_0862 to i8*) to i8*
	; arg 15
	%vr11902 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11903, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr11902
	%vr11906 = bitcast %FBSTRING* %vr11902 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11906, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0833
	%vr11909 = bitcast i8* bitcast ([36 x i8]* @Lt_0833 to i8*) to i8*
	; arg 35
	%vr11908 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11909, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr11908
	%vr11912 = bitcast %FBSTRING* %vr11908 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11912, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11915 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11914 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11915, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11914
	%vr11918 = bitcast %FBSTRING* %vr11914 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11918, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0844
	%vr11921 = bitcast i8* bitcast ([22 x i8]* @Lt_0844 to i8*) to i8*
	; arg 21
	%vr11920 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11921, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr11920
	%vr11924 = bitcast %FBSTRING* %vr11920 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11924, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11927 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11927, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11926
	%vr11930 = bitcast %FBSTRING* %vr11926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11930, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0838
	%vr11933 = bitcast i8* bitcast ([44 x i8]* @Lt_0838 to i8*) to i8*
	; arg 43
	%vr11932 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11933, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr11932
	%vr11936 = bitcast %FBSTRING* %vr11932 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11936, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0863
	%vr11939 = bitcast i8* bitcast ([31 x i8]* @Lt_0863 to i8*) to i8*
	; arg 30
	%vr11938 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11939, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr11938
	%vr11942 = bitcast %FBSTRING* %vr11938 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11942, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0864
	%vr11945 = bitcast i8* bitcast ([64 x i8]* @Lt_0864 to i8*) to i8*
	; arg 63
	%vr11944 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11945, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr11944
	%vr11948 = bitcast %FBSTRING* %vr11944 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11948, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0865
	%vr11951 = bitcast i8* bitcast ([78 x i8]* @Lt_0865 to i8*) to i8*
	; arg 77
	%vr11950 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11951, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr11950
	%vr11954 = bitcast %FBSTRING* %vr11950 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11954, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0866
	%vr11957 = bitcast i8* bitcast ([82 x i8]* @Lt_0866 to i8*) to i8*
	; arg 81
	%vr11956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11957, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr11956
	%vr11960 = bitcast %FBSTRING* %vr11956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11960, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0867
	%vr11963 = bitcast i8* bitcast ([79 x i8]* @Lt_0867 to i8*) to i8*
	; arg 78
	%vr11962 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11963, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr11962
	%vr11966 = bitcast %FBSTRING* %vr11962 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11966, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0868
	%vr11969 = bitcast i8* bitcast ([77 x i8]* @Lt_0868 to i8*) to i8*
	; arg 76
	%vr11968 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11969, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr11968
	%vr11972 = bitcast %FBSTRING* %vr11968 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11972, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr11975 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr11974 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11975, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr11974
	%vr11978 = bitcast %FBSTRING* %vr11974 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11978, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0869
	%vr11981 = bitcast i8* bitcast ([29 x i8]* @Lt_0869 to i8*) to i8*
	; arg 28
	%vr11980 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11981, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr11980
	%vr11984 = bitcast %FBSTRING* %vr11980 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11984, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr11987 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr11986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11987, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr11986
	%vr11990 = bitcast %FBSTRING* %vr11986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11990, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086A
	%vr11993 = bitcast i8* bitcast ([42 x i8]* @Lt_086A to i8*) to i8*
	; arg 41
	%vr11992 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11993, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr11992
	%vr11996 = bitcast %FBSTRING* %vr11992 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr11996, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr11999 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr11998 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr11999, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr11998
	%vr12002 = bitcast %FBSTRING* %vr11998 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12002, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12005 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12004 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12005, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12004
	%vr12008 = bitcast %FBSTRING* %vr12004 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12008, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086B
	%vr12011 = bitcast i8* bitcast ([48 x i8]* @Lt_086B to i8*) to i8*
	; arg 47
	%vr12010 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12011, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr12010
	%vr12014 = bitcast %FBSTRING* %vr12010 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12014, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12017 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12017, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12016
	%vr12020 = bitcast %FBSTRING* %vr12016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12020, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0841
	%vr12023 = bitcast i8* bitcast ([25 x i8]* @Lt_0841 to i8*) to i8*
	; arg 24
	%vr12022 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12023, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr12022
	%vr12026 = bitcast %FBSTRING* %vr12022 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12026, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr12029 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr12028 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12029, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12028
	%vr12032 = bitcast %FBSTRING* %vr12028 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12032, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086C
	%vr12035 = bitcast i8* bitcast ([29 x i8]* @Lt_086C to i8*) to i8*
	; arg 28
	%vr12034 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12035, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr12034
	%vr12038 = bitcast %FBSTRING* %vr12034 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12038, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086D
	%vr12041 = bitcast i8* bitcast ([30 x i8]* @Lt_086D to i8*) to i8*
	; arg 29
	%vr12040 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12041, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12040
	%vr12044 = bitcast %FBSTRING* %vr12040 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12044, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12047 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12047, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12046
	%vr12050 = bitcast %FBSTRING* %vr12046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12050, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086E
	%vr12053 = bitcast i8* bitcast ([39 x i8]* @Lt_086E to i8*) to i8*
	; arg 38
	%vr12052 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12053, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr12052
	%vr12056 = bitcast %FBSTRING* %vr12052 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12056, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_086F
	%vr12059 = bitcast i8* bitcast ([30 x i8]* @Lt_086F to i8*) to i8*
	; arg 29
	%vr12058 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12059, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12058
	%vr12062 = bitcast %FBSTRING* %vr12058 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12062, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12065 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12064 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12065, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12064
	%vr12068 = bitcast %FBSTRING* %vr12064 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12068, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0762
	%vr12071 = bitcast i8* bitcast ([16 x i8]* @Lt_0762 to i8*) to i8*
	; arg 15
	%vr12070 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12071, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr12070
	%vr12074 = bitcast %FBSTRING* %vr12070 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12074, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12077 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12077, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12076
	%vr12080 = bitcast %FBSTRING* %vr12076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12080, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12083 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12082 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12083, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12082
	%vr12086 = bitcast %FBSTRING* %vr12082 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12086, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0870
	%vr12089 = bitcast i8* bitcast ([56 x i8]* @Lt_0870 to i8*) to i8*
	; arg 55
	%vr12088 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12089, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr12088
	%vr12092 = bitcast %FBSTRING* %vr12088 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12092, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12095 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12094 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12095, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12094
	%vr12098 = bitcast %FBSTRING* %vr12094 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12098, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr12101 = bitcast i8* bitcast ([13 x i8]* @Lt_0851 to i8*) to i8*
	; arg 12
	%vr12100 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12101, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12100
	%vr12104 = bitcast %FBSTRING* %vr12100 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12104, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0852
	%vr12107 = bitcast i8* bitcast ([40 x i8]* @Lt_0852 to i8*) to i8*
	; arg 39
	%vr12106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12107, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12106
	%vr12110 = bitcast %FBSTRING* %vr12106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12110, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0871
	%vr12113 = bitcast i8* bitcast ([67 x i8]* @Lt_0871 to i8*) to i8*
	; arg 66
	%vr12112 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12113, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr12112
	%vr12116 = bitcast %FBSTRING* %vr12112 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12116, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0872
	%vr12119 = bitcast i8* bitcast ([52 x i8]* @Lt_0872 to i8*) to i8*
	; arg 51
	%vr12118 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12119, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr12118
	%vr12122 = bitcast %FBSTRING* %vr12118 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12122, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0873
	%vr12125 = bitcast i8* bitcast ([52 x i8]* @Lt_0873 to i8*) to i8*
	; arg 51
	%vr12124 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12125, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr12124
	%vr12128 = bitcast %FBSTRING* %vr12124 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12128, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0874
	%vr12131 = bitcast i8* bitcast ([52 x i8]* @Lt_0874 to i8*) to i8*
	; arg 51
	%vr12130 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12131, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr12130
	%vr12134 = bitcast %FBSTRING* %vr12130 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12134, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12137 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12137, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12136
	%vr12140 = bitcast %FBSTRING* %vr12136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12140, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12143 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12142 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12143, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12142
	%vr12146 = bitcast %FBSTRING* %vr12142 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12146, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0875
	%vr12149 = bitcast i8* bitcast ([41 x i8]* @Lt_0875 to i8*) to i8*
	; arg 40
	%vr12148 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12149, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr12148
	%vr12152 = bitcast %FBSTRING* %vr12148 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12152, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12155 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12154 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12155, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12154
	%vr12158 = bitcast %FBSTRING* %vr12154 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12158, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr12161 = bitcast i8* bitcast ([13 x i8]* @Lt_0851 to i8*) to i8*
	; arg 12
	%vr12160 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12161, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12160
	%vr12164 = bitcast %FBSTRING* %vr12160 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12164, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0876
	%vr12167 = bitcast i8* bitcast ([17 x i8]* @Lt_0876 to i8*) to i8*
	; arg 16
	%vr12166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12167, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr12166
	%vr12170 = bitcast %FBSTRING* %vr12166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12170, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0877
	%vr12173 = bitcast i8* bitcast ([33 x i8]* @Lt_0877 to i8*) to i8*
	; arg 32
	%vr12172 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12173, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr12172
	%vr12176 = bitcast %FBSTRING* %vr12172 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12176, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12179 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12178 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12179, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12178
	%vr12182 = bitcast %FBSTRING* %vr12178 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12182, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0878
	%vr12185 = bitcast i8* bitcast ([47 x i8]* @Lt_0878 to i8*) to i8*
	; arg 46
	%vr12184 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12185, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr12184
	%vr12188 = bitcast %FBSTRING* %vr12184 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12188, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0879
	%vr12191 = bitcast i8* bitcast ([35 x i8]* @Lt_0879 to i8*) to i8*
	; arg 34
	%vr12190 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12191, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr12190
	%vr12194 = bitcast %FBSTRING* %vr12190 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12194, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087A
	%vr12197 = bitcast i8* bitcast ([37 x i8]* @Lt_087A to i8*) to i8*
	; arg 36
	%vr12196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12197, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr12196
	%vr12200 = bitcast %FBSTRING* %vr12196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12200, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087B
	%vr12203 = bitcast i8* bitcast ([77 x i8]* @Lt_087B to i8*) to i8*
	; arg 76
	%vr12202 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12203, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr12202
	%vr12206 = bitcast %FBSTRING* %vr12202 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12206, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12209 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12208 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12209, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12208
	%vr12212 = bitcast %FBSTRING* %vr12208 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12212, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087C
	%vr12215 = bitcast i8* bitcast ([13 x i8]* @Lt_087C to i8*) to i8*
	; arg 12
	%vr12214 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12215, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12214
	%vr12218 = bitcast %FBSTRING* %vr12214 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12218, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr12221 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr12220 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12221, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12220
	%vr12224 = bitcast %FBSTRING* %vr12220 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12224, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087D
	%vr12227 = bitcast i8* bitcast ([38 x i8]* @Lt_087D to i8*) to i8*
	; arg 37
	%vr12226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12227, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12226
	%vr12230 = bitcast %FBSTRING* %vr12226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12230, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12233 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12232 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12233, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12232
	%vr12236 = bitcast %FBSTRING* %vr12232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12236, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12239 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12238 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12239, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12238
	%vr12242 = bitcast %FBSTRING* %vr12238 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12242, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087E
	%vr12245 = bitcast i8* bitcast ([42 x i8]* @Lt_087E to i8*) to i8*
	; arg 41
	%vr12244 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12245, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr12244
	%vr12248 = bitcast %FBSTRING* %vr12244 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12248, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12251 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12250 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12251, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12250
	%vr12254 = bitcast %FBSTRING* %vr12250 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12254, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0851
	%vr12257 = bitcast i8* bitcast ([13 x i8]* @Lt_0851 to i8*) to i8*
	; arg 12
	%vr12256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12257, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr12256
	%vr12260 = bitcast %FBSTRING* %vr12256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12260, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087F
	%vr12263 = bitcast i8* bitcast ([18 x i8]* @Lt_087F to i8*) to i8*
	; arg 17
	%vr12262 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12263, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr12262
	%vr12266 = bitcast %FBSTRING* %vr12262 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12266, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0880
	%vr12269 = bitcast i8* bitcast ([32 x i8]* @Lt_0880 to i8*) to i8*
	; arg 31
	%vr12268 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12269, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr12268
	%vr12272 = bitcast %FBSTRING* %vr12268 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12272, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12275 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12274 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12275, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12274
	%vr12278 = bitcast %FBSTRING* %vr12274 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12278, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0881
	%vr12281 = bitcast i8* bitcast ([45 x i8]* @Lt_0881 to i8*) to i8*
	; arg 44
	%vr12280 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12281, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr12280
	%vr12284 = bitcast %FBSTRING* %vr12280 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12284, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0882
	%vr12287 = bitcast i8* bitcast ([74 x i8]* @Lt_0882 to i8*) to i8*
	; arg 73
	%vr12286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12287, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr12286
	%vr12290 = bitcast %FBSTRING* %vr12286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12290, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0883
	%vr12293 = bitcast i8* bitcast ([35 x i8]* @Lt_0883 to i8*) to i8*
	; arg 34
	%vr12292 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12293, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr12292
	%vr12296 = bitcast %FBSTRING* %vr12292 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12296, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0884
	%vr12299 = bitcast i8* bitcast ([47 x i8]* @Lt_0884 to i8*) to i8*
	; arg 46
	%vr12298 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12299, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr12298
	%vr12302 = bitcast %FBSTRING* %vr12298 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12302, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12305 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12304 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12305, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12304
	%vr12308 = bitcast %FBSTRING* %vr12304 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12308, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0885
	%vr12311 = bitcast i8* bitcast ([53 x i8]* @Lt_0885 to i8*) to i8*
	; arg 52
	%vr12310 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12311, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr12310
	%vr12314 = bitcast %FBSTRING* %vr12310 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12314, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0886
	%vr12317 = bitcast i8* bitcast ([20 x i8]* @Lt_0886 to i8*) to i8*
	; arg 19
	%vr12316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12317, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr12316
	%vr12320 = bitcast %FBSTRING* %vr12316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12320, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12323 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12322 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12323, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12322
	%vr12326 = bitcast %FBSTRING* %vr12322 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12326, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12329 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12328 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12329, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12328
	%vr12332 = bitcast %FBSTRING* %vr12328 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12332, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0887
	%vr12335 = bitcast i8* bitcast ([59 x i8]* @Lt_0887 to i8*) to i8*
	; arg 58
	%vr12334 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12335, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr12334
	%vr12338 = bitcast %FBSTRING* %vr12334 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12338, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12341 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12340 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12341, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12340
	%vr12344 = bitcast %FBSTRING* %vr12340 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12344, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0888
	%vr12347 = bitcast i8* bitcast ([21 x i8]* @Lt_0888 to i8*) to i8*
	; arg 20
	%vr12346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12347, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12346
	%vr12350 = bitcast %FBSTRING* %vr12346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12350, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12353 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12352 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12353, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12352
	%vr12356 = bitcast %FBSTRING* %vr12352 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12356, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0889
	%vr12359 = bitcast i8* bitcast ([23 x i8]* @Lt_0889 to i8*) to i8*
	; arg 22
	%vr12358 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12359, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr12358
	%vr12362 = bitcast %FBSTRING* %vr12358 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12362, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06B1
	%vr12365 = bitcast i8* bitcast ([10 x i8]* @Lt_06B1 to i8*) to i8*
	; arg 9
	%vr12364 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12365, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr12364
	%vr12368 = bitcast %FBSTRING* %vr12364 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12368, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088A
	%vr12371 = bitcast i8* bitcast ([59 x i8]* @Lt_088A to i8*) to i8*
	; arg 58
	%vr12370 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12371, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr12370
	%vr12374 = bitcast %FBSTRING* %vr12370 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12374, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088B
	%vr12377 = bitcast i8* bitcast ([41 x i8]* @Lt_088B to i8*) to i8*
	; arg 40
	%vr12376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12377, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr12376
	%vr12380 = bitcast %FBSTRING* %vr12376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12380, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088C
	%vr12383 = bitcast i8* bitcast ([12 x i8]* @Lt_088C to i8*) to i8*
	; arg 11
	%vr12382 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12383, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr12382
	%vr12386 = bitcast %FBSTRING* %vr12382 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12386, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr12389 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr12388 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12389, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12388
	%vr12392 = bitcast %FBSTRING* %vr12388 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12392, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088D
	%vr12395 = bitcast i8* bitcast ([20 x i8]* @Lt_088D to i8*) to i8*
	; arg 19
	%vr12394 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12395, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr12394
	%vr12398 = bitcast %FBSTRING* %vr12394 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12398, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088E
	%vr12401 = bitcast i8* bitcast ([30 x i8]* @Lt_088E to i8*) to i8*
	; arg 29
	%vr12400 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12401, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12400
	%vr12404 = bitcast %FBSTRING* %vr12400 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12404, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12407 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12407, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12406
	%vr12410 = bitcast %FBSTRING* %vr12406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12410, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088F
	%vr12413 = bitcast i8* bitcast ([38 x i8]* @Lt_088F to i8*) to i8*
	; arg 37
	%vr12412 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12413, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr12412
	%vr12416 = bitcast %FBSTRING* %vr12412 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12416, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0890
	%vr12419 = bitcast i8* bitcast ([51 x i8]* @Lt_0890 to i8*) to i8*
	; arg 50
	%vr12418 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12419, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr12418
	%vr12422 = bitcast %FBSTRING* %vr12418 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12422, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0891
	%vr12425 = bitcast i8* bitcast ([37 x i8]* @Lt_0891 to i8*) to i8*
	; arg 36
	%vr12424 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12425, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr12424
	%vr12428 = bitcast %FBSTRING* %vr12424 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12428, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0892
	%vr12431 = bitcast i8* bitcast ([41 x i8]* @Lt_0892 to i8*) to i8*
	; arg 40
	%vr12430 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12431, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr12430
	%vr12434 = bitcast %FBSTRING* %vr12430 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12434, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12437 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12437, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12436
	%vr12440 = bitcast %FBSTRING* %vr12436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12440, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0893
	%vr12443 = bitcast i8* bitcast ([35 x i8]* @Lt_0893 to i8*) to i8*
	; arg 34
	%vr12442 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12443, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr12442
	%vr12446 = bitcast %FBSTRING* %vr12442 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12446, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12449 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12448 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12449, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12448
	%vr12452 = bitcast %FBSTRING* %vr12448 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12452, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12455 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12454 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12455, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12454
	%vr12458 = bitcast %FBSTRING* %vr12454 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12458, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0894
	%vr12461 = bitcast i8* bitcast ([43 x i8]* @Lt_0894 to i8*) to i8*
	; arg 42
	%vr12460 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12461, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12460
	%vr12464 = bitcast %FBSTRING* %vr12460 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12464, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12467 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12467, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12466
	%vr12470 = bitcast %FBSTRING* %vr12466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12470, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr12473 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr12472 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12473, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12472
	%vr12476 = bitcast %FBSTRING* %vr12472 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12476, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0641
	%vr12479 = bitcast i8* bitcast ([6 x i8]* @Lt_0641 to i8*) to i8*
	; arg 5
	%vr12478 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12479, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12478
	%vr12482 = bitcast %FBSTRING* %vr12478 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12482, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0895
	%vr12485 = bitcast i8* bitcast ([42 x i8]* @Lt_0895 to i8*) to i8*
	; arg 41
	%vr12484 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12485, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr12484
	%vr12488 = bitcast %FBSTRING* %vr12484 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12488, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0896
	%vr12491 = bitcast i8* bitcast ([58 x i8]* @Lt_0896 to i8*) to i8*
	; arg 57
	%vr12490 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12491, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr12490
	%vr12494 = bitcast %FBSTRING* %vr12490 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12494, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0897
	%vr12497 = bitcast i8* bitcast ([43 x i8]* @Lt_0897 to i8*) to i8*
	; arg 42
	%vr12496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12497, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12496
	%vr12500 = bitcast %FBSTRING* %vr12496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12500, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0898
	%vr12503 = bitcast i8* bitcast ([43 x i8]* @Lt_0898 to i8*) to i8*
	; arg 42
	%vr12502 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12503, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12502
	%vr12506 = bitcast %FBSTRING* %vr12502 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12506, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0899
	%vr12509 = bitcast i8* bitcast ([43 x i8]* @Lt_0899 to i8*) to i8*
	; arg 42
	%vr12508 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12509, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr12508
	%vr12512 = bitcast %FBSTRING* %vr12508 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12512, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr12515 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr12514 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12515, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12514
	%vr12518 = bitcast %FBSTRING* %vr12514 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12518, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0857
	%vr12521 = bitcast i8* bitcast ([85 x i8]* @Lt_0857 to i8*) to i8*
	; arg 84
	%vr12520 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12521, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr12520
	%vr12524 = bitcast %FBSTRING* %vr12520 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12524, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0858
	%vr12527 = bitcast i8* bitcast ([24 x i8]* @Lt_0858 to i8*) to i8*
	; arg 23
	%vr12526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12527, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr12526
	%vr12530 = bitcast %FBSTRING* %vr12526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12530, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0859
	%vr12533 = bitcast i8* bitcast ([32 x i8]* @Lt_0859 to i8*) to i8*
	; arg 31
	%vr12532 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12533, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr12532
	%vr12536 = bitcast %FBSTRING* %vr12532 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12536, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12539 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12538 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12539, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12538
	%vr12542 = bitcast %FBSTRING* %vr12538 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12542, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085A
	%vr12545 = bitcast i8* bitcast ([73 x i8]* @Lt_085A to i8*) to i8*
	; arg 72
	%vr12544 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12545, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr12544
	%vr12548 = bitcast %FBSTRING* %vr12544 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12548, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089A
	%vr12551 = bitcast i8* bitcast ([40 x i8]* @Lt_089A to i8*) to i8*
	; arg 39
	%vr12550 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12551, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12550
	%vr12554 = bitcast %FBSTRING* %vr12550 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12554, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12557 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12557, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12556
	%vr12560 = bitcast %FBSTRING* %vr12556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12560, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085C
	%vr12563 = bitcast i8* bitcast ([25 x i8]* @Lt_085C to i8*) to i8*
	; arg 24
	%vr12562 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12563, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr12562
	%vr12566 = bitcast %FBSTRING* %vr12562 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12566, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_085D
	%vr12569 = bitcast i8* bitcast ([11 x i8]* @Lt_085D to i8*) to i8*
	; arg 10
	%vr12568 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12569, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr12568
	%vr12572 = bitcast %FBSTRING* %vr12568 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12572, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12575 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12574 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12575, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12574
	%vr12578 = bitcast %FBSTRING* %vr12574 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12578, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12581 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12580 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12581, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12580
	%vr12584 = bitcast %FBSTRING* %vr12580 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12584, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089B
	%vr12587 = bitcast i8* bitcast ([57 x i8]* @Lt_089B to i8*) to i8*
	; arg 56
	%vr12586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12587, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr12586
	%vr12590 = bitcast %FBSTRING* %vr12586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12590, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089C
	%vr12593 = bitcast i8* bitcast ([76 x i8]* @Lt_089C to i8*) to i8*
	; arg 75
	%vr12592 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12593, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr12592
	%vr12596 = bitcast %FBSTRING* %vr12592 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12596, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089D
	%vr12599 = bitcast i8* bitcast ([56 x i8]* @Lt_089D to i8*) to i8*
	; arg 55
	%vr12598 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12599, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr12598
	%vr12602 = bitcast %FBSTRING* %vr12598 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12602, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12605 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12604 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12605, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12604
	%vr12608 = bitcast %FBSTRING* %vr12604 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12608, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12611 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12610 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12611, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12610
	%vr12614 = bitcast %FBSTRING* %vr12610 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12614, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089E
	%vr12617 = bitcast i8* bitcast ([60 x i8]* @Lt_089E to i8*) to i8*
	; arg 59
	%vr12616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12617, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr12616
	%vr12620 = bitcast %FBSTRING* %vr12616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12620, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12623 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12622 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12623, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12622
	%vr12626 = bitcast %FBSTRING* %vr12622 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12626, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_087F
	%vr12629 = bitcast i8* bitcast ([18 x i8]* @Lt_087F to i8*) to i8*
	; arg 17
	%vr12628 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12629, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr12628
	%vr12632 = bitcast %FBSTRING* %vr12628 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12632, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_089F
	%vr12635 = bitcast i8* bitcast ([21 x i8]* @Lt_089F to i8*) to i8*
	; arg 20
	%vr12634 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12635, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12634
	%vr12638 = bitcast %FBSTRING* %vr12634 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12638, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A0
	%vr12641 = bitcast i8* bitcast ([32 x i8]* @Lt_08A0 to i8*) to i8*
	; arg 31
	%vr12640 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12641, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr12640
	%vr12644 = bitcast %FBSTRING* %vr12640 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12644, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12647 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12647, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12646
	%vr12650 = bitcast %FBSTRING* %vr12646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12650, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A1
	%vr12653 = bitcast i8* bitcast ([44 x i8]* @Lt_08A1 to i8*) to i8*
	; arg 43
	%vr12652 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12653, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr12652
	%vr12656 = bitcast %FBSTRING* %vr12652 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12656, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A2
	%vr12659 = bitcast i8* bitcast ([33 x i8]* @Lt_08A2 to i8*) to i8*
	; arg 32
	%vr12658 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12659, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr12658
	%vr12662 = bitcast %FBSTRING* %vr12658 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12662, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A3
	%vr12665 = bitcast i8* bitcast ([39 x i8]* @Lt_08A3 to i8*) to i8*
	; arg 38
	%vr12664 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12665, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr12664
	%vr12668 = bitcast %FBSTRING* %vr12664 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12668, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A4
	%vr12671 = bitcast i8* bitcast ([26 x i8]* @Lt_08A4 to i8*) to i8*
	; arg 25
	%vr12670 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12671, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr12670
	%vr12674 = bitcast %FBSTRING* %vr12670 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12674, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A5
	%vr12677 = bitcast i8* bitcast ([21 x i8]* @Lt_08A5 to i8*) to i8*
	; arg 20
	%vr12676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12677, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12676
	%vr12680 = bitcast %FBSTRING* %vr12676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12680, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12683 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12682 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12683, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12682
	%vr12686 = bitcast %FBSTRING* %vr12682 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12686, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A6
	%vr12689 = bitcast i8* bitcast ([45 x i8]* @Lt_08A6 to i8*) to i8*
	; arg 44
	%vr12688 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12689, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr12688
	%vr12692 = bitcast %FBSTRING* %vr12688 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12692, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12695 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12694 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12695, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12694
	%vr12698 = bitcast %FBSTRING* %vr12694 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12698, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12701 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12700 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12701, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12700
	%vr12704 = bitcast %FBSTRING* %vr12700 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12704, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A7
	%vr12707 = bitcast i8* bitcast ([56 x i8]* @Lt_08A7 to i8*) to i8*
	; arg 55
	%vr12706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12707, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr12706
	%vr12710 = bitcast %FBSTRING* %vr12706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12710, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12713 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12712 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12713, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12712
	%vr12716 = bitcast %FBSTRING* %vr12712 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12716, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A8
	%vr12719 = bitcast i8* bitcast ([17 x i8]* @Lt_08A8 to i8*) to i8*
	; arg 16
	%vr12718 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12719, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr12718
	%vr12722 = bitcast %FBSTRING* %vr12718 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12722, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0888
	%vr12725 = bitcast i8* bitcast ([21 x i8]* @Lt_0888 to i8*) to i8*
	; arg 20
	%vr12724 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12725, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12724
	%vr12728 = bitcast %FBSTRING* %vr12724 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12728, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08A9
	%vr12731 = bitcast i8* bitcast ([20 x i8]* @Lt_08A9 to i8*) to i8*
	; arg 19
	%vr12730 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12731, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr12730
	%vr12734 = bitcast %FBSTRING* %vr12730 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12734, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0877
	%vr12737 = bitcast i8* bitcast ([33 x i8]* @Lt_0877 to i8*) to i8*
	; arg 32
	%vr12736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12737, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr12736
	%vr12740 = bitcast %FBSTRING* %vr12736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12740, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12743 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12742 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12743, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12742
	%vr12746 = bitcast %FBSTRING* %vr12742 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12746, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AA
	%vr12749 = bitcast i8* bitcast ([47 x i8]* @Lt_08AA to i8*) to i8*
	; arg 46
	%vr12748 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12749, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr12748
	%vr12752 = bitcast %FBSTRING* %vr12748 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12752, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AB
	%vr12755 = bitcast i8* bitcast ([53 x i8]* @Lt_08AB to i8*) to i8*
	; arg 52
	%vr12754 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12755, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr12754
	%vr12758 = bitcast %FBSTRING* %vr12754 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12758, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AC
	%vr12761 = bitcast i8* bitcast ([36 x i8]* @Lt_08AC to i8*) to i8*
	; arg 35
	%vr12760 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12761, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr12760
	%vr12764 = bitcast %FBSTRING* %vr12760 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12764, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AD
	%vr12767 = bitcast i8* bitcast ([24 x i8]* @Lt_08AD to i8*) to i8*
	; arg 23
	%vr12766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12767, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr12766
	%vr12770 = bitcast %FBSTRING* %vr12766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12770, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr12773 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr12772 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12773, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12772
	%vr12776 = bitcast %FBSTRING* %vr12772 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12776, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AE
	%vr12779 = bitcast i8* bitcast ([31 x i8]* @Lt_08AE to i8*) to i8*
	; arg 30
	%vr12778 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12779, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr12778
	%vr12782 = bitcast %FBSTRING* %vr12778 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12782, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12785 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12784 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12785, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12784
	%vr12788 = bitcast %FBSTRING* %vr12784 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12788, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12791 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12790 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12791, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12790
	%vr12794 = bitcast %FBSTRING* %vr12790 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12794, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08AF
	%vr12797 = bitcast i8* bitcast ([63 x i8]* @Lt_08AF to i8*) to i8*
	; arg 62
	%vr12796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12797, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr12796
	%vr12800 = bitcast %FBSTRING* %vr12796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12800, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12803 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12802 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12803, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12802
	%vr12806 = bitcast %FBSTRING* %vr12802 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12806, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B0
	%vr12809 = bitcast i8* bitcast ([21 x i8]* @Lt_08B0 to i8*) to i8*
	; arg 20
	%vr12808 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12809, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr12808
	%vr12812 = bitcast %FBSTRING* %vr12808 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12812, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B1
	%vr12815 = bitcast i8* bitcast ([42 x i8]* @Lt_08B1 to i8*) to i8*
	; arg 41
	%vr12814 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12815, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr12814
	%vr12818 = bitcast %FBSTRING* %vr12814 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12818, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B2
	%vr12821 = bitcast i8* bitcast ([40 x i8]* @Lt_08B2 to i8*) to i8*
	; arg 39
	%vr12820 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12821, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12820
	%vr12824 = bitcast %FBSTRING* %vr12820 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12824, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B3
	%vr12827 = bitcast i8* bitcast ([82 x i8]* @Lt_08B3 to i8*) to i8*
	; arg 81
	%vr12826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12827, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr12826
	%vr12830 = bitcast %FBSTRING* %vr12826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12830, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B4
	%vr12833 = bitcast i8* bitcast ([19 x i8]* @Lt_08B4 to i8*) to i8*
	; arg 18
	%vr12832 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12833, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr12832
	%vr12836 = bitcast %FBSTRING* %vr12832 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12836, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B5
	%vr12839 = bitcast i8* bitcast ([48 x i8]* @Lt_08B5 to i8*) to i8*
	; arg 47
	%vr12838 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12839, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr12838
	%vr12842 = bitcast %FBSTRING* %vr12838 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12842, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr12845 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr12844 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12845, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12844
	%vr12848 = bitcast %FBSTRING* %vr12844 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12848, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12851 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12850 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12851, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12850
	%vr12854 = bitcast %FBSTRING* %vr12850 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12854, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B6
	%vr12857 = bitcast i8* bitcast ([84 x i8]* @Lt_08B6 to i8*) to i8*
	; arg 83
	%vr12856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12857, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr12856
	%vr12860 = bitcast %FBSTRING* %vr12856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12860, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr12863 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr12862 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12863, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr12862
	%vr12866 = bitcast %FBSTRING* %vr12862 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12866, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B7
	%vr12869 = bitcast i8* bitcast ([23 x i8]* @Lt_08B7 to i8*) to i8*
	; arg 22
	%vr12868 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12869, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr12868
	%vr12872 = bitcast %FBSTRING* %vr12868 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12872, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr12875 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr12874 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12875, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr12874
	%vr12878 = bitcast %FBSTRING* %vr12874 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12878, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B8
	%vr12881 = bitcast i8* bitcast ([26 x i8]* @Lt_08B8 to i8*) to i8*
	; arg 25
	%vr12880 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12881, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr12880
	%vr12884 = bitcast %FBSTRING* %vr12880 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12884, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08B9
	%vr12887 = bitcast i8* bitcast ([45 x i8]* @Lt_08B9 to i8*) to i8*
	; arg 44
	%vr12886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12887, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr12886
	%vr12890 = bitcast %FBSTRING* %vr12886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12890, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12893 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12892 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12893, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12892
	%vr12896 = bitcast %FBSTRING* %vr12892 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12896, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BA
	%vr12899 = bitcast i8* bitcast ([28 x i8]* @Lt_08BA to i8*) to i8*
	; arg 27
	%vr12898 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12899, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12898
	%vr12902 = bitcast %FBSTRING* %vr12898 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12902, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BB
	%vr12905 = bitcast i8* bitcast ([28 x i8]* @Lt_08BB to i8*) to i8*
	; arg 27
	%vr12904 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12905, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12904
	%vr12908 = bitcast %FBSTRING* %vr12904 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12908, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BC
	%vr12911 = bitcast i8* bitcast ([28 x i8]* @Lt_08BC to i8*) to i8*
	; arg 27
	%vr12910 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12911, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12910
	%vr12914 = bitcast %FBSTRING* %vr12910 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12914, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BD
	%vr12917 = bitcast i8* bitcast ([28 x i8]* @Lt_08BD to i8*) to i8*
	; arg 27
	%vr12916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12917, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr12916
	%vr12920 = bitcast %FBSTRING* %vr12916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12920, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12923 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12922 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12923, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12922
	%vr12926 = bitcast %FBSTRING* %vr12922 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12926, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BE
	%vr12929 = bitcast i8* bitcast ([22 x i8]* @Lt_08BE to i8*) to i8*
	; arg 21
	%vr12928 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12929, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12928
	%vr12932 = bitcast %FBSTRING* %vr12928 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12932, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08BF
	%vr12935 = bitcast i8* bitcast ([22 x i8]* @Lt_08BF to i8*) to i8*
	; arg 21
	%vr12934 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12935, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr12934
	%vr12938 = bitcast %FBSTRING* %vr12934 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12938, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12941 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12940 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12941, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12940
	%vr12944 = bitcast %FBSTRING* %vr12940 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12944, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C0
	%vr12947 = bitcast i8* bitcast ([30 x i8]* @Lt_08C0 to i8*) to i8*
	; arg 29
	%vr12946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12947, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr12946
	%vr12950 = bitcast %FBSTRING* %vr12946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12950, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr12953 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr12952 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12953, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr12952
	%vr12956 = bitcast %FBSTRING* %vr12952 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12956, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C1
	%vr12959 = bitcast i8* bitcast ([56 x i8]* @Lt_08C1 to i8*) to i8*
	; arg 55
	%vr12958 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12959, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr12958
	%vr12962 = bitcast %FBSTRING* %vr12958 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12962, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr12965 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr12964 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12965, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr12964
	%vr12968 = bitcast %FBSTRING* %vr12964 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12968, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C2
	%vr12971 = bitcast i8* bitcast ([80 x i8]* @Lt_08C2 to i8*) to i8*
	; arg 79
	%vr12970 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12971, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr12970
	%vr12974 = bitcast %FBSTRING* %vr12970 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12974, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C3
	%vr12977 = bitcast i8* bitcast ([56 x i8]* @Lt_08C3 to i8*) to i8*
	; arg 55
	%vr12976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12977, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr12976
	%vr12980 = bitcast %FBSTRING* %vr12976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12980, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr12983 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr12982 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12983, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr12982
	%vr12986 = bitcast %FBSTRING* %vr12982 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12986, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C4
	%vr12989 = bitcast i8* bitcast ([40 x i8]* @Lt_08C4 to i8*) to i8*
	; arg 39
	%vr12988 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12989, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr12988
	%vr12992 = bitcast %FBSTRING* %vr12988 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12992, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr12995 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr12994 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr12995, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr12994
	%vr12998 = bitcast %FBSTRING* %vr12994 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr12998, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C5
	%vr13001 = bitcast i8* bitcast ([73 x i8]* @Lt_08C5 to i8*) to i8*
	; arg 72
	%vr13000 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13001, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr13000
	%vr13004 = bitcast %FBSTRING* %vr13000 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13004, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C6
	%vr13007 = bitcast i8* bitcast ([26 x i8]* @Lt_08C6 to i8*) to i8*
	; arg 25
	%vr13006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13007, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr13006
	%vr13010 = bitcast %FBSTRING* %vr13006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13010, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C7
	%vr13013 = bitcast i8* bitcast ([22 x i8]* @Lt_08C7 to i8*) to i8*
	; arg 21
	%vr13012 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13013, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13012
	%vr13016 = bitcast %FBSTRING* %vr13012 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13016, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C8
	%vr13019 = bitcast i8* bitcast ([34 x i8]* @Lt_08C8 to i8*) to i8*
	; arg 33
	%vr13018 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13019, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr13018
	%vr13022 = bitcast %FBSTRING* %vr13018 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13022, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08C9
	%vr13025 = bitcast i8* bitcast ([29 x i8]* @Lt_08C9 to i8*) to i8*
	; arg 28
	%vr13024 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13025, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr13024
	%vr13028 = bitcast %FBSTRING* %vr13024 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13028, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13031 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13030 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13031, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13030
	%vr13034 = bitcast %FBSTRING* %vr13030 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13034, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CA
	%vr13037 = bitcast i8* bitcast ([35 x i8]* @Lt_08CA to i8*) to i8*
	; arg 34
	%vr13036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13037, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr13036
	%vr13040 = bitcast %FBSTRING* %vr13036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13040, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CB
	%vr13043 = bitcast i8* bitcast ([22 x i8]* @Lt_08CB to i8*) to i8*
	; arg 21
	%vr13042 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13043, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13042
	%vr13046 = bitcast %FBSTRING* %vr13042 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13046, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CC
	%vr13049 = bitcast i8* bitcast ([24 x i8]* @Lt_08CC to i8*) to i8*
	; arg 23
	%vr13048 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13049, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr13048
	%vr13052 = bitcast %FBSTRING* %vr13048 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13052, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CD
	%vr13055 = bitcast i8* bitcast ([44 x i8]* @Lt_08CD to i8*) to i8*
	; arg 43
	%vr13054 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13055, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13054
	%vr13058 = bitcast %FBSTRING* %vr13054 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13058, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13061 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13060 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13061, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13060
	%vr13064 = bitcast %FBSTRING* %vr13060 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13064, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CE
	%vr13067 = bitcast i8* bitcast ([45 x i8]* @Lt_08CE to i8*) to i8*
	; arg 44
	%vr13066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13067, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr13066
	%vr13070 = bitcast %FBSTRING* %vr13066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13070, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13073 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13072 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13073, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13072
	%vr13076 = bitcast %FBSTRING* %vr13072 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13076, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08CF
	%vr13079 = bitcast i8* bitcast ([54 x i8]* @Lt_08CF to i8*) to i8*
	; arg 53
	%vr13078 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13079, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr13078
	%vr13082 = bitcast %FBSTRING* %vr13078 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13082, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D0
	%vr13085 = bitcast i8* bitcast ([31 x i8]* @Lt_08D0 to i8*) to i8*
	; arg 30
	%vr13084 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13085, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13084
	%vr13088 = bitcast %FBSTRING* %vr13084 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13088, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D1
	%vr13091 = bitcast i8* bitcast ([68 x i8]* @Lt_08D1 to i8*) to i8*
	; arg 67
	%vr13090 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13091, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr13090
	%vr13094 = bitcast %FBSTRING* %vr13090 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13094, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D2
	%vr13097 = bitcast i8* bitcast ([58 x i8]* @Lt_08D2 to i8*) to i8*
	; arg 57
	%vr13096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13097, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr13096
	%vr13100 = bitcast %FBSTRING* %vr13096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13100, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13103 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13102 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13103, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13102
	%vr13106 = bitcast %FBSTRING* %vr13102 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13106, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D3
	%vr13109 = bitcast i8* bitcast ([57 x i8]* @Lt_08D3 to i8*) to i8*
	; arg 56
	%vr13108 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13109, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr13108
	%vr13112 = bitcast %FBSTRING* %vr13108 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13112, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D4
	%vr13115 = bitcast i8* bitcast ([90 x i8]* @Lt_08D4 to i8*) to i8*
	; arg 89
	%vr13114 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13115, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr13114
	%vr13118 = bitcast %FBSTRING* %vr13114 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13118, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr13121 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr13120 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13121, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13120
	%vr13124 = bitcast %FBSTRING* %vr13120 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13124, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D5
	%vr13127 = bitcast i8* bitcast ([27 x i8]* @Lt_08D5 to i8*) to i8*
	; arg 26
	%vr13126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13127, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr13126
	%vr13130 = bitcast %FBSTRING* %vr13126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13130, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr13133 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr13132 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13133, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13132
	%vr13136 = bitcast %FBSTRING* %vr13132 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13136, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D6
	%vr13139 = bitcast i8* bitcast ([27 x i8]* @Lt_08D6 to i8*) to i8*
	; arg 26
	%vr13138 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13139, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr13138
	%vr13142 = bitcast %FBSTRING* %vr13138 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13142, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13145 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13144 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13145, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13144
	%vr13148 = bitcast %FBSTRING* %vr13144 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13148, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D7
	%vr13151 = bitcast i8* bitcast ([80 x i8]* @Lt_08D7 to i8*) to i8*
	; arg 79
	%vr13150 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13151, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr13150
	%vr13154 = bitcast %FBSTRING* %vr13150 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13154, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D8
	%vr13157 = bitcast i8* bitcast ([77 x i8]* @Lt_08D8 to i8*) to i8*
	; arg 76
	%vr13156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13157, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr13156
	%vr13160 = bitcast %FBSTRING* %vr13156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13160, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13163 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13162 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13163, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13162
	%vr13166 = bitcast %FBSTRING* %vr13162 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13166, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08D9
	%vr13169 = bitcast i8* bitcast ([78 x i8]* @Lt_08D9 to i8*) to i8*
	; arg 77
	%vr13168 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13169, i64 77 )

	; call fb_PrintString()
	; arg 1
	; arg vr13168
	%vr13172 = bitcast %FBSTRING* %vr13168 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13172, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13175 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13174 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13175, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13174
	%vr13178 = bitcast %FBSTRING* %vr13174 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13178, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DA
	%vr13181 = bitcast i8* bitcast ([84 x i8]* @Lt_08DA to i8*) to i8*
	; arg 83
	%vr13180 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13181, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr13180
	%vr13184 = bitcast %FBSTRING* %vr13180 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13184, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DB
	%vr13187 = bitcast i8* bitcast ([34 x i8]* @Lt_08DB to i8*) to i8*
	; arg 33
	%vr13186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13187, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr13186
	%vr13190 = bitcast %FBSTRING* %vr13186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13190, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13193 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13192 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13193, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13192
	%vr13196 = bitcast %FBSTRING* %vr13192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13196, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DC
	%vr13199 = bitcast i8* bitcast ([87 x i8]* @Lt_08DC to i8*) to i8*
	; arg 86
	%vr13198 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13199, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr13198
	%vr13202 = bitcast %FBSTRING* %vr13198 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13202, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DD
	%vr13205 = bitcast i8* bitcast ([57 x i8]* @Lt_08DD to i8*) to i8*
	; arg 56
	%vr13204 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13205, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr13204
	%vr13208 = bitcast %FBSTRING* %vr13204 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13208, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DE
	%vr13211 = bitcast i8* bitcast ([82 x i8]* @Lt_08DE to i8*) to i8*
	; arg 81
	%vr13210 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13211, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr13210
	%vr13214 = bitcast %FBSTRING* %vr13210 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13214, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08DF
	%vr13217 = bitcast i8* bitcast ([62 x i8]* @Lt_08DF to i8*) to i8*
	; arg 61
	%vr13216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13217, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr13216
	%vr13220 = bitcast %FBSTRING* %vr13216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13220, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13223 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13222 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13223, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13222
	%vr13226 = bitcast %FBSTRING* %vr13222 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13226, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E0
	%vr13229 = bitcast i8* bitcast ([35 x i8]* @Lt_08E0 to i8*) to i8*
	; arg 34
	%vr13228 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13229, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr13228
	%vr13232 = bitcast %FBSTRING* %vr13228 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13232, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E1
	%vr13235 = bitcast i8* bitcast ([59 x i8]* @Lt_08E1 to i8*) to i8*
	; arg 58
	%vr13234 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13235, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr13234
	%vr13238 = bitcast %FBSTRING* %vr13234 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13238, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr13241 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr13240 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13241, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13240
	%vr13244 = bitcast %FBSTRING* %vr13240 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13244, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E2
	%vr13247 = bitcast i8* bitcast ([30 x i8]* @Lt_08E2 to i8*) to i8*
	; arg 29
	%vr13246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13247, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr13246
	%vr13250 = bitcast %FBSTRING* %vr13246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13250, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr13253 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr13252 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13253, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13252
	%vr13256 = bitcast %FBSTRING* %vr13252 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13256, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E3
	%vr13259 = bitcast i8* bitcast ([40 x i8]* @Lt_08E3 to i8*) to i8*
	; arg 39
	%vr13258 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13259, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13258
	%vr13262 = bitcast %FBSTRING* %vr13258 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13262, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E4
	%vr13265 = bitcast i8* bitcast ([41 x i8]* @Lt_08E4 to i8*) to i8*
	; arg 40
	%vr13264 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13265, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr13264
	%vr13268 = bitcast %FBSTRING* %vr13264 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13268, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E5
	%vr13271 = bitcast i8* bitcast ([31 x i8]* @Lt_08E5 to i8*) to i8*
	; arg 30
	%vr13270 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13271, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13270
	%vr13274 = bitcast %FBSTRING* %vr13270 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13274, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13277 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13277, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13276
	%vr13280 = bitcast %FBSTRING* %vr13276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13280, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E6
	%vr13283 = bitcast i8* bitcast ([55 x i8]* @Lt_08E6 to i8*) to i8*
	; arg 54
	%vr13282 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13283, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13282
	%vr13286 = bitcast %FBSTRING* %vr13282 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13286, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E7
	%vr13289 = bitcast i8* bitcast ([44 x i8]* @Lt_08E7 to i8*) to i8*
	; arg 43
	%vr13288 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13289, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr13288
	%vr13292 = bitcast %FBSTRING* %vr13288 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13292, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13295 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13294 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13295, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13294
	%vr13298 = bitcast %FBSTRING* %vr13294 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13298, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E8
	%vr13301 = bitcast i8* bitcast ([56 x i8]* @Lt_08E8 to i8*) to i8*
	; arg 55
	%vr13300 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13301, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr13300
	%vr13304 = bitcast %FBSTRING* %vr13300 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13304, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08E9
	%vr13307 = bitcast i8* bitcast ([31 x i8]* @Lt_08E9 to i8*) to i8*
	; arg 30
	%vr13306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13307, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13306
	%vr13310 = bitcast %FBSTRING* %vr13306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13310, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EA
	%vr13313 = bitcast i8* bitcast ([55 x i8]* @Lt_08EA to i8*) to i8*
	; arg 54
	%vr13312 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13313, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13312
	%vr13316 = bitcast %FBSTRING* %vr13312 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13316, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr13319 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr13318 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13319, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13318
	%vr13322 = bitcast %FBSTRING* %vr13318 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13322, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EB
	%vr13325 = bitcast i8* bitcast ([32 x i8]* @Lt_08EB to i8*) to i8*
	; arg 31
	%vr13324 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13325, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13324
	%vr13328 = bitcast %FBSTRING* %vr13324 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13328, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr13331 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr13330 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13331, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13330
	%vr13334 = bitcast %FBSTRING* %vr13330 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13334, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EC
	%vr13337 = bitcast i8* bitcast ([45 x i8]* @Lt_08EC to i8*) to i8*
	; arg 44
	%vr13336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13337, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr13336
	%vr13340 = bitcast %FBSTRING* %vr13336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13340, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08ED
	%vr13343 = bitcast i8* bitcast ([20 x i8]* @Lt_08ED to i8*) to i8*
	; arg 19
	%vr13342 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13343, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13342
	%vr13346 = bitcast %FBSTRING* %vr13342 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13346, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EE
	%vr13349 = bitcast i8* bitcast ([48 x i8]* @Lt_08EE to i8*) to i8*
	; arg 47
	%vr13348 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13349, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr13348
	%vr13352 = bitcast %FBSTRING* %vr13348 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13352, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08EF
	%vr13355 = bitcast i8* bitcast ([48 x i8]* @Lt_08EF to i8*) to i8*
	; arg 47
	%vr13354 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13355, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr13354
	%vr13358 = bitcast %FBSTRING* %vr13354 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13358, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F0
	%vr13361 = bitcast i8* bitcast ([51 x i8]* @Lt_08F0 to i8*) to i8*
	; arg 50
	%vr13360 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13361, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr13360
	%vr13364 = bitcast %FBSTRING* %vr13360 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13364, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13367 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13367, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13366
	%vr13370 = bitcast %FBSTRING* %vr13366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13370, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F1
	%vr13373 = bitcast i8* bitcast ([20 x i8]* @Lt_08F1 to i8*) to i8*
	; arg 19
	%vr13372 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13373, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13372
	%vr13376 = bitcast %FBSTRING* %vr13372 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13376, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F2
	%vr13379 = bitcast i8* bitcast ([40 x i8]* @Lt_08F2 to i8*) to i8*
	; arg 39
	%vr13378 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13379, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13378
	%vr13382 = bitcast %FBSTRING* %vr13378 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13382, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13385 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13384 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13385, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13384
	%vr13388 = bitcast %FBSTRING* %vr13384 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13388, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F3
	%vr13391 = bitcast i8* bitcast ([53 x i8]* @Lt_08F3 to i8*) to i8*
	; arg 52
	%vr13390 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13391, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr13390
	%vr13394 = bitcast %FBSTRING* %vr13390 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13394, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13397 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13397, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13396
	%vr13400 = bitcast %FBSTRING* %vr13396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13400, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F4
	%vr13403 = bitcast i8* bitcast ([70 x i8]* @Lt_08F4 to i8*) to i8*
	; arg 69
	%vr13402 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13403, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr13402
	%vr13406 = bitcast %FBSTRING* %vr13402 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13406, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13409 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13408 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13409, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13408
	%vr13412 = bitcast %FBSTRING* %vr13408 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13412, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F5
	%vr13415 = bitcast i8* bitcast ([55 x i8]* @Lt_08F5 to i8*) to i8*
	; arg 54
	%vr13414 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13415, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13414
	%vr13418 = bitcast %FBSTRING* %vr13414 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13418, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13421 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13420 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13421, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13420
	%vr13424 = bitcast %FBSTRING* %vr13420 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13424, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F6
	%vr13427 = bitcast i8* bitcast ([48 x i8]* @Lt_08F6 to i8*) to i8*
	; arg 47
	%vr13426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13427, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr13426
	%vr13430 = bitcast %FBSTRING* %vr13426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13430, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F7
	%vr13433 = bitcast i8* bitcast ([35 x i8]* @Lt_08F7 to i8*) to i8*
	; arg 34
	%vr13432 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13433, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr13432
	%vr13436 = bitcast %FBSTRING* %vr13432 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13436, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F8
	%vr13439 = bitcast i8* bitcast ([45 x i8]* @Lt_08F8 to i8*) to i8*
	; arg 44
	%vr13438 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13439, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr13438
	%vr13442 = bitcast %FBSTRING* %vr13438 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13442, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13445 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13444 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13445, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13444
	%vr13448 = bitcast %FBSTRING* %vr13444 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13448, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08F9
	%vr13451 = bitcast i8* bitcast ([72 x i8]* @Lt_08F9 to i8*) to i8*
	; arg 71
	%vr13450 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13451, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr13450
	%vr13454 = bitcast %FBSTRING* %vr13450 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13454, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FA
	%vr13457 = bitcast i8* bitcast ([60 x i8]* @Lt_08FA to i8*) to i8*
	; arg 59
	%vr13456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13457, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr13456
	%vr13460 = bitcast %FBSTRING* %vr13456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13460, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FB
	%vr13463 = bitcast i8* bitcast ([32 x i8]* @Lt_08FB to i8*) to i8*
	; arg 31
	%vr13462 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13463, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13462
	%vr13466 = bitcast %FBSTRING* %vr13462 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13466, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FC
	%vr13469 = bitcast i8* bitcast ([22 x i8]* @Lt_08FC to i8*) to i8*
	; arg 21
	%vr13468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13469, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13468
	%vr13472 = bitcast %FBSTRING* %vr13468 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13472, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13475 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13474 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13475, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13474
	%vr13478 = bitcast %FBSTRING* %vr13474 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13478, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FD
	%vr13481 = bitcast i8* bitcast ([41 x i8]* @Lt_08FD to i8*) to i8*
	; arg 40
	%vr13480 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13481, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr13480
	%vr13484 = bitcast %FBSTRING* %vr13480 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13484, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FE
	%vr13487 = bitcast i8* bitcast ([31 x i8]* @Lt_08FE to i8*) to i8*
	; arg 30
	%vr13486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13487, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr13486
	%vr13490 = bitcast %FBSTRING* %vr13486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13490, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_08FF
	%vr13493 = bitcast i8* bitcast ([22 x i8]* @Lt_08FF to i8*) to i8*
	; arg 21
	%vr13492 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13493, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13492
	%vr13496 = bitcast %FBSTRING* %vr13492 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13496, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13499 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13498 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13499, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13498
	%vr13502 = bitcast %FBSTRING* %vr13498 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13502, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0900
	%vr13505 = bitcast i8* bitcast ([33 x i8]* @Lt_0900 to i8*) to i8*
	; arg 32
	%vr13504 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13505, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr13504
	%vr13508 = bitcast %FBSTRING* %vr13504 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13508, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13511 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13510 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13511, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13510
	%vr13514 = bitcast %FBSTRING* %vr13510 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13514, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0901
	%vr13517 = bitcast i8* bitcast ([32 x i8]* @Lt_0901 to i8*) to i8*
	; arg 31
	%vr13516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13517, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13516
	%vr13520 = bitcast %FBSTRING* %vr13516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13520, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13523 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13522 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13523, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13522
	%vr13526 = bitcast %FBSTRING* %vr13522 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13526, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0902
	%vr13529 = bitcast i8* bitcast ([71 x i8]* @Lt_0902 to i8*) to i8*
	; arg 70
	%vr13528 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13529, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr13528
	%vr13532 = bitcast %FBSTRING* %vr13528 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13532, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0903
	%vr13535 = bitcast i8* bitcast ([32 x i8]* @Lt_0903 to i8*) to i8*
	; arg 31
	%vr13534 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13535, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr13534
	%vr13538 = bitcast %FBSTRING* %vr13534 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13538, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13541 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13540 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13541, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13540
	%vr13544 = bitcast %FBSTRING* %vr13540 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13544, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0904
	%vr13547 = bitcast i8* bitcast ([96 x i8]* @Lt_0904 to i8*) to i8*
	; arg 95
	%vr13546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13547, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr13546
	%vr13550 = bitcast %FBSTRING* %vr13546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13550, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0905
	%vr13553 = bitcast i8* bitcast ([96 x i8]* @Lt_0905 to i8*) to i8*
	; arg 95
	%vr13552 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13553, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr13552
	%vr13556 = bitcast %FBSTRING* %vr13552 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13556, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0906
	%vr13559 = bitcast i8* bitcast ([96 x i8]* @Lt_0906 to i8*) to i8*
	; arg 95
	%vr13558 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13559, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr13558
	%vr13562 = bitcast %FBSTRING* %vr13558 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13562, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0907
	%vr13565 = bitcast i8* bitcast ([39 x i8]* @Lt_0907 to i8*) to i8*
	; arg 38
	%vr13564 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13565, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13564
	%vr13568 = bitcast %FBSTRING* %vr13564 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13568, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0908
	%vr13571 = bitcast i8* bitcast ([52 x i8]* @Lt_0908 to i8*) to i8*
	; arg 51
	%vr13570 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13571, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr13570
	%vr13574 = bitcast %FBSTRING* %vr13570 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13574, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13577 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13577, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13576
	%vr13580 = bitcast %FBSTRING* %vr13576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13580, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0909
	%vr13583 = bitcast i8* bitcast ([65 x i8]* @Lt_0909 to i8*) to i8*
	; arg 64
	%vr13582 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13583, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr13582
	%vr13586 = bitcast %FBSTRING* %vr13582 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13586, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090A
	%vr13589 = bitcast i8* bitcast ([65 x i8]* @Lt_090A to i8*) to i8*
	; arg 64
	%vr13588 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13589, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr13588
	%vr13592 = bitcast %FBSTRING* %vr13588 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13592, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090B
	%vr13595 = bitcast i8* bitcast ([65 x i8]* @Lt_090B to i8*) to i8*
	; arg 64
	%vr13594 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13595, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr13594
	%vr13598 = bitcast %FBSTRING* %vr13594 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13598, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090C
	%vr13601 = bitcast i8* bitcast ([33 x i8]* @Lt_090C to i8*) to i8*
	; arg 32
	%vr13600 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13601, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr13600
	%vr13604 = bitcast %FBSTRING* %vr13600 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13604, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090D
	%vr13607 = bitcast i8* bitcast ([53 x i8]* @Lt_090D to i8*) to i8*
	; arg 52
	%vr13606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13607, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr13606
	%vr13610 = bitcast %FBSTRING* %vr13606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13610, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr13613 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr13612 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13613, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr13612
	%vr13616 = bitcast %FBSTRING* %vr13612 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13616, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090E
	%vr13619 = bitcast i8* bitcast ([54 x i8]* @Lt_090E to i8*) to i8*
	; arg 53
	%vr13618 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13619, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr13618
	%vr13622 = bitcast %FBSTRING* %vr13618 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13622, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_090F
	%vr13625 = bitcast i8* bitcast ([54 x i8]* @Lt_090F to i8*) to i8*
	; arg 53
	%vr13624 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13625, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr13624
	%vr13628 = bitcast %FBSTRING* %vr13624 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13628, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0910
	%vr13631 = bitcast i8* bitcast ([51 x i8]* @Lt_0910 to i8*) to i8*
	; arg 50
	%vr13630 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13631, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr13630
	%vr13634 = bitcast %FBSTRING* %vr13630 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13634, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0911
	%vr13637 = bitcast i8* bitcast ([55 x i8]* @Lt_0911 to i8*) to i8*
	; arg 54
	%vr13636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13637, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13636
	%vr13640 = bitcast %FBSTRING* %vr13636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13640, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr13643 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr13642 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13643, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr13642
	%vr13646 = bitcast %FBSTRING* %vr13642 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13646, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13649 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13648 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13649, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13648
	%vr13652 = bitcast %FBSTRING* %vr13648 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13652, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0861
	%vr13655 = bitcast i8* bitcast ([3 x i8]* @Lt_0861 to i8*) to i8*
	; arg 2
	%vr13654 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13655, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr13654
	%vr13658 = bitcast %FBSTRING* %vr13654 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13658, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0912
	%vr13661 = bitcast i8* bitcast ([39 x i8]* @Lt_0912 to i8*) to i8*
	; arg 38
	%vr13660 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13661, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13660
	%vr13664 = bitcast %FBSTRING* %vr13660 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13664, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0913
	%vr13667 = bitcast i8* bitcast ([51 x i8]* @Lt_0913 to i8*) to i8*
	; arg 50
	%vr13666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13667, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr13666
	%vr13670 = bitcast %FBSTRING* %vr13666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13670, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0914
	%vr13673 = bitcast i8* bitcast ([41 x i8]* @Lt_0914 to i8*) to i8*
	; arg 40
	%vr13672 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13673, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr13672
	%vr13676 = bitcast %FBSTRING* %vr13672 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13676, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0915
	%vr13679 = bitcast i8* bitcast ([37 x i8]* @Lt_0915 to i8*) to i8*
	; arg 36
	%vr13678 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13679, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr13678
	%vr13682 = bitcast %FBSTRING* %vr13678 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13682, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0916
	%vr13685 = bitcast i8* bitcast ([77 x i8]* @Lt_0916 to i8*) to i8*
	; arg 76
	%vr13684 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13685, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr13684
	%vr13688 = bitcast %FBSTRING* %vr13684 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13688, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13691 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13690 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13691, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13690
	%vr13694 = bitcast %FBSTRING* %vr13690 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13694, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0917
	%vr13697 = bitcast i8* bitcast ([53 x i8]* @Lt_0917 to i8*) to i8*
	; arg 52
	%vr13696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13697, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr13696
	%vr13700 = bitcast %FBSTRING* %vr13696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13700, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0918
	%vr13703 = bitcast i8* bitcast ([54 x i8]* @Lt_0918 to i8*) to i8*
	; arg 53
	%vr13702 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13703, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr13702
	%vr13706 = bitcast %FBSTRING* %vr13702 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13706, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0919
	%vr13709 = bitcast i8* bitcast ([22 x i8]* @Lt_0919 to i8*) to i8*
	; arg 21
	%vr13708 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13709, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr13708
	%vr13712 = bitcast %FBSTRING* %vr13708 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13712, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091A
	%vr13715 = bitcast i8* bitcast ([50 x i8]* @Lt_091A to i8*) to i8*
	; arg 49
	%vr13714 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13715, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr13714
	%vr13718 = bitcast %FBSTRING* %vr13714 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13718, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13721 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13720 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13721, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13720
	%vr13724 = bitcast %FBSTRING* %vr13720 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13724, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091B
	%vr13727 = bitcast i8* bitcast ([50 x i8]* @Lt_091B to i8*) to i8*
	; arg 49
	%vr13726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13727, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr13726
	%vr13730 = bitcast %FBSTRING* %vr13726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13730, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13733 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13732 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13733, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13732
	%vr13736 = bitcast %FBSTRING* %vr13732 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13736, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091C
	%vr13739 = bitcast i8* bitcast ([20 x i8]* @Lt_091C to i8*) to i8*
	; arg 19
	%vr13738 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13739, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr13738
	%vr13742 = bitcast %FBSTRING* %vr13738 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13742, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13745 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13744 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13745, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13744
	%vr13748 = bitcast %FBSTRING* %vr13744 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13748, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091D
	%vr13751 = bitcast i8* bitcast ([26 x i8]* @Lt_091D to i8*) to i8*
	; arg 25
	%vr13750 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13751, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr13750
	%vr13754 = bitcast %FBSTRING* %vr13750 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13754, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091E
	%vr13757 = bitcast i8* bitcast ([60 x i8]* @Lt_091E to i8*) to i8*
	; arg 59
	%vr13756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13757, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr13756
	%vr13760 = bitcast %FBSTRING* %vr13756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13760, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091F
	%vr13763 = bitcast i8* bitcast ([64 x i8]* @Lt_091F to i8*) to i8*
	; arg 63
	%vr13762 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13763, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr13762
	%vr13766 = bitcast %FBSTRING* %vr13762 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13766, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0920
	%vr13769 = bitcast i8* bitcast ([67 x i8]* @Lt_0920 to i8*) to i8*
	; arg 66
	%vr13768 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13769, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr13768
	%vr13772 = bitcast %FBSTRING* %vr13768 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13772, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13775 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13774 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13775, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13774
	%vr13778 = bitcast %FBSTRING* %vr13774 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13778, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0921
	%vr13781 = bitcast i8* bitcast ([18 x i8]* @Lt_0921 to i8*) to i8*
	; arg 17
	%vr13780 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13781, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr13780
	%vr13784 = bitcast %FBSTRING* %vr13780 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13784, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13787 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13787, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13786
	%vr13790 = bitcast %FBSTRING* %vr13786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13790, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0922
	%vr13793 = bitcast i8* bitcast ([96 x i8]* @Lt_0922 to i8*) to i8*
	; arg 95
	%vr13792 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13793, i64 95 )

	; call fb_PrintString()
	; arg 1
	; arg vr13792
	%vr13796 = bitcast %FBSTRING* %vr13792 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13796, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0923
	%vr13799 = bitcast i8* bitcast ([38 x i8]* @Lt_0923 to i8*) to i8*
	; arg 37
	%vr13798 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13799, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr13798
	%vr13802 = bitcast %FBSTRING* %vr13798 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13802, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13805 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13804 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13805, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13804
	%vr13808 = bitcast %FBSTRING* %vr13804 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13808, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0924
	%vr13811 = bitcast i8* bitcast ([120 x i8]* @Lt_0924 to i8*) to i8*
	; arg 119
	%vr13810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13811, i64 119 )

	; call fb_PrintString()
	; arg 1
	; arg vr13810
	%vr13814 = bitcast %FBSTRING* %vr13810 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13814, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0925
	%vr13817 = bitcast i8* bitcast ([120 x i8]* @Lt_0925 to i8*) to i8*
	; arg 119
	%vr13816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13817, i64 119 )

	; call fb_PrintString()
	; arg 1
	; arg vr13816
	%vr13820 = bitcast %FBSTRING* %vr13816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13820, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0927
	%vr13823 = bitcast i8* bitcast ([151 x i8]* @Lt_0927 to i8*) to i8*
	; arg 150
	%vr13822 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13823, i64 150 )

	; call fb_PrintString()
	; arg 1
	; arg vr13822
	%vr13826 = bitcast %FBSTRING* %vr13822 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13826, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13829 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13828 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13829, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13828
	%vr13832 = bitcast %FBSTRING* %vr13828 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13832, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0928
	%vr13835 = bitcast i8* bitcast ([18 x i8]* @Lt_0928 to i8*) to i8*
	; arg 17
	%vr13834 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13835, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr13834
	%vr13838 = bitcast %FBSTRING* %vr13834 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13838, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13841 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13840 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13841, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13840
	%vr13844 = bitcast %FBSTRING* %vr13840 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13844, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0929
	%vr13847 = bitcast i8* bitcast ([24 x i8]* @Lt_0929 to i8*) to i8*
	; arg 23
	%vr13846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13847, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr13846
	%vr13850 = bitcast %FBSTRING* %vr13846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13850, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr13853 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr13852 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13853, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13852
	%vr13856 = bitcast %FBSTRING* %vr13852 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13856, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13859 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13858 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13859, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13858
	%vr13862 = bitcast %FBSTRING* %vr13858 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13862, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092A
	%vr13865 = bitcast i8* bitcast ([118 x i8]* @Lt_092A to i8*) to i8*
	; arg 117
	%vr13864 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13865, i64 117 )

	; call fb_PrintString()
	; arg 1
	; arg vr13864
	%vr13868 = bitcast %FBSTRING* %vr13864 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13868, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr13871 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr13870 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13871, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr13870
	%vr13874 = bitcast %FBSTRING* %vr13870 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13874, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092B
	%vr13877 = bitcast i8* bitcast ([23 x i8]* @Lt_092B to i8*) to i8*
	; arg 22
	%vr13876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13877, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr13876
	%vr13880 = bitcast %FBSTRING* %vr13876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13880, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13883 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13882 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13883, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13882
	%vr13886 = bitcast %FBSTRING* %vr13882 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13886, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092C
	%vr13889 = bitcast i8* bitcast ([26 x i8]* @Lt_092C to i8*) to i8*
	; arg 25
	%vr13888 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13889, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr13888
	%vr13892 = bitcast %FBSTRING* %vr13888 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13892, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092D
	%vr13895 = bitcast i8* bitcast ([39 x i8]* @Lt_092D to i8*) to i8*
	; arg 38
	%vr13894 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13895, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr13894
	%vr13898 = bitcast %FBSTRING* %vr13894 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13898, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092E
	%vr13901 = bitcast i8* bitcast ([27 x i8]* @Lt_092E to i8*) to i8*
	; arg 26
	%vr13900 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13901, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr13900
	%vr13904 = bitcast %FBSTRING* %vr13900 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13904, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_092F
	%vr13907 = bitcast i8* bitcast ([53 x i8]* @Lt_092F to i8*) to i8*
	; arg 52
	%vr13906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13907, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr13906
	%vr13910 = bitcast %FBSTRING* %vr13906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13910, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0930
	%vr13913 = bitcast i8* bitcast ([57 x i8]* @Lt_0930 to i8*) to i8*
	; arg 56
	%vr13912 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13913, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr13912
	%vr13916 = bitcast %FBSTRING* %vr13912 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13916, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0931
	%vr13919 = bitcast i8* bitcast ([40 x i8]* @Lt_0931 to i8*) to i8*
	; arg 39
	%vr13918 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13919, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr13918
	%vr13922 = bitcast %FBSTRING* %vr13918 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13922, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0932
	%vr13925 = bitcast i8* bitcast ([37 x i8]* @Lt_0932 to i8*) to i8*
	; arg 36
	%vr13924 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13925, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr13924
	%vr13928 = bitcast %FBSTRING* %vr13924 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13928, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_091A
	%vr13931 = bitcast i8* bitcast ([50 x i8]* @Lt_091A to i8*) to i8*
	; arg 49
	%vr13930 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13931, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr13930
	%vr13934 = bitcast %FBSTRING* %vr13930 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13934, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0933
	%vr13937 = bitcast i8* bitcast ([53 x i8]* @Lt_0933 to i8*) to i8*
	; arg 52
	%vr13936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13937, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr13936
	%vr13940 = bitcast %FBSTRING* %vr13936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13940, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13943 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13942 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13943, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13942
	%vr13946 = bitcast %FBSTRING* %vr13942 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13946, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13949 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13948 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13949, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13948
	%vr13952 = bitcast %FBSTRING* %vr13948 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13952, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0934
	%vr13955 = bitcast i8* bitcast ([28 x i8]* @Lt_0934 to i8*) to i8*
	; arg 27
	%vr13954 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13955, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr13954
	%vr13958 = bitcast %FBSTRING* %vr13954 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13958, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr13961 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr13960 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13961, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr13960
	%vr13964 = bitcast %FBSTRING* %vr13960 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13964, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0935
	%vr13967 = bitcast i8* bitcast ([60 x i8]* @Lt_0935 to i8*) to i8*
	; arg 59
	%vr13966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13967, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr13966
	%vr13970 = bitcast %FBSTRING* %vr13966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13970, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr13973 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr13972 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13973, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr13972
	%vr13976 = bitcast %FBSTRING* %vr13972 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13976, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0936
	%vr13979 = bitcast i8* bitcast ([55 x i8]* @Lt_0936 to i8*) to i8*
	; arg 54
	%vr13978 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13979, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13978
	%vr13982 = bitcast %FBSTRING* %vr13978 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13982, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0937
	%vr13985 = bitcast i8* bitcast ([61 x i8]* @Lt_0937 to i8*) to i8*
	; arg 60
	%vr13984 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13985, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr13984
	%vr13988 = bitcast %FBSTRING* %vr13984 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13988, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0938
	%vr13991 = bitcast i8* bitcast ([112 x i8]* @Lt_0938 to i8*) to i8*
	; arg 111
	%vr13990 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13991, i64 111 )

	; call fb_PrintString()
	; arg 1
	; arg vr13990
	%vr13994 = bitcast %FBSTRING* %vr13990 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr13994, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0939
	%vr13997 = bitcast i8* bitcast ([55 x i8]* @Lt_0939 to i8*) to i8*
	; arg 54
	%vr13996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr13997, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr13996
	%vr14000 = bitcast %FBSTRING* %vr13996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14000, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093A
	%vr14003 = bitcast i8* bitcast ([55 x i8]* @Lt_093A to i8*) to i8*
	; arg 54
	%vr14002 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14003, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr14002
	%vr14006 = bitcast %FBSTRING* %vr14002 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14006, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093B
	%vr14009 = bitcast i8* bitcast ([107 x i8]* @Lt_093B to i8*) to i8*
	; arg 106
	%vr14008 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14009, i64 106 )

	; call fb_PrintString()
	; arg 1
	; arg vr14008
	%vr14012 = bitcast %FBSTRING* %vr14008 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14012, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14015 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14014 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14015, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14014
	%vr14018 = bitcast %FBSTRING* %vr14014 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14018, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093C
	%vr14021 = bitcast i8* bitcast ([27 x i8]* @Lt_093C to i8*) to i8*
	; arg 26
	%vr14020 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14021, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14020
	%vr14024 = bitcast %FBSTRING* %vr14020 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14024, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093D
	%vr14027 = bitcast i8* bitcast ([57 x i8]* @Lt_093D to i8*) to i8*
	; arg 56
	%vr14026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14027, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr14026
	%vr14030 = bitcast %FBSTRING* %vr14026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14030, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14033 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14032 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14033, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14032
	%vr14036 = bitcast %FBSTRING* %vr14032 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14036, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14039 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14038 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14039, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14038
	%vr14042 = bitcast %FBSTRING* %vr14038 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14042, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093E
	%vr14045 = bitcast i8* bitcast ([47 x i8]* @Lt_093E to i8*) to i8*
	; arg 46
	%vr14044 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14045, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr14044
	%vr14048 = bitcast %FBSTRING* %vr14044 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14048, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14051 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14050 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14051, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14050
	%vr14054 = bitcast %FBSTRING* %vr14050 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14054, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_093F
	%vr14057 = bitcast i8* bitcast ([31 x i8]* @Lt_093F to i8*) to i8*
	; arg 30
	%vr14056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14057, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr14056
	%vr14060 = bitcast %FBSTRING* %vr14056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14060, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr14063 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr14062 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14063, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14062
	%vr14066 = bitcast %FBSTRING* %vr14062 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14066, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0940
	%vr14069 = bitcast i8* bitcast ([38 x i8]* @Lt_0940 to i8*) to i8*
	; arg 37
	%vr14068 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14069, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr14068
	%vr14072 = bitcast %FBSTRING* %vr14068 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14072, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0941
	%vr14075 = bitcast i8* bitcast ([26 x i8]* @Lt_0941 to i8*) to i8*
	; arg 25
	%vr14074 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14075, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14074
	%vr14078 = bitcast %FBSTRING* %vr14074 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14078, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0942
	%vr14081 = bitcast i8* bitcast ([28 x i8]* @Lt_0942 to i8*) to i8*
	; arg 27
	%vr14080 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14081, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14080
	%vr14084 = bitcast %FBSTRING* %vr14080 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14084, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0943
	%vr14087 = bitcast i8* bitcast ([29 x i8]* @Lt_0943 to i8*) to i8*
	; arg 28
	%vr14086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14087, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr14086
	%vr14090 = bitcast %FBSTRING* %vr14086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14090, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0944
	%vr14093 = bitcast i8* bitcast ([29 x i8]* @Lt_0944 to i8*) to i8*
	; arg 28
	%vr14092 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14093, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr14092
	%vr14096 = bitcast %FBSTRING* %vr14092 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14096, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0945
	%vr14099 = bitcast i8* bitcast ([29 x i8]* @Lt_0945 to i8*) to i8*
	; arg 28
	%vr14098 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14099, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr14098
	%vr14102 = bitcast %FBSTRING* %vr14098 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14102, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0946
	%vr14105 = bitcast i8* bitcast ([4 x i8]* @Lt_0946 to i8*) to i8*
	; arg 3
	%vr14104 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14105, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr14104
	%vr14108 = bitcast %FBSTRING* %vr14104 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14108, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14111 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14111, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14110
	%vr14114 = bitcast %FBSTRING* %vr14110 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14114, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14117 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14117, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14116
	%vr14120 = bitcast %FBSTRING* %vr14116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14120, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14123 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14122 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14123, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14122
	%vr14126 = bitcast %FBSTRING* %vr14122 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14126, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0947
	%vr14129 = bitcast i8* bitcast ([39 x i8]* @Lt_0947 to i8*) to i8*
	; arg 38
	%vr14128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14129, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr14128
	%vr14132 = bitcast %FBSTRING* %vr14128 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14132, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0948
	%vr14135 = bitcast i8* bitcast ([6 x i8]* @Lt_0948 to i8*) to i8*
	; arg 5
	%vr14134 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14135, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14134
	%vr14138 = bitcast %FBSTRING* %vr14134 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14138, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0949
	%vr14141 = bitcast i8* bitcast ([24 x i8]* @Lt_0949 to i8*) to i8*
	; arg 23
	%vr14140 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14141, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14140
	%vr14144 = bitcast %FBSTRING* %vr14140 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14144, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094A
	%vr14147 = bitcast i8* bitcast ([23 x i8]* @Lt_094A to i8*) to i8*
	; arg 22
	%vr14146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14147, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14146
	%vr14150 = bitcast %FBSTRING* %vr14146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14150, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14153 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14153, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14152
	%vr14156 = bitcast %FBSTRING* %vr14152 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14156, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094B
	%vr14159 = bitcast i8* bitcast ([30 x i8]* @Lt_094B to i8*) to i8*
	; arg 29
	%vr14158 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14159, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14158
	%vr14162 = bitcast %FBSTRING* %vr14158 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14162, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094C
	%vr14165 = bitcast i8* bitcast ([20 x i8]* @Lt_094C to i8*) to i8*
	; arg 19
	%vr14164 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14165, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14164
	%vr14168 = bitcast %FBSTRING* %vr14164 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14168, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094D
	%vr14171 = bitcast i8* bitcast ([21 x i8]* @Lt_094D to i8*) to i8*
	; arg 20
	%vr14170 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14171, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14170
	%vr14174 = bitcast %FBSTRING* %vr14170 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14174, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094E
	%vr14177 = bitcast i8* bitcast ([14 x i8]* @Lt_094E to i8*) to i8*
	; arg 13
	%vr14176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14177, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr14176
	%vr14180 = bitcast %FBSTRING* %vr14176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14180, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_088E
	%vr14183 = bitcast i8* bitcast ([30 x i8]* @Lt_088E to i8*) to i8*
	; arg 29
	%vr14182 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14183, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14182
	%vr14186 = bitcast %FBSTRING* %vr14182 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14186, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr14189 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr14188 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14189, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14188
	%vr14192 = bitcast %FBSTRING* %vr14188 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14192, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_094F
	%vr14195 = bitcast i8* bitcast ([23 x i8]* @Lt_094F to i8*) to i8*
	; arg 22
	%vr14194 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14195, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14194
	%vr14198 = bitcast %FBSTRING* %vr14194 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14198, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0950
	%vr14201 = bitcast i8* bitcast ([21 x i8]* @Lt_0950 to i8*) to i8*
	; arg 20
	%vr14200 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14201, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr14200
	%vr14204 = bitcast %FBSTRING* %vr14200 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14204, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0951
	%vr14207 = bitcast i8* bitcast ([44 x i8]* @Lt_0951 to i8*) to i8*
	; arg 43
	%vr14206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14207, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr14206
	%vr14210 = bitcast %FBSTRING* %vr14206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14210, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0952
	%vr14213 = bitcast i8* bitcast ([20 x i8]* @Lt_0952 to i8*) to i8*
	; arg 19
	%vr14212 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14213, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14212
	%vr14216 = bitcast %FBSTRING* %vr14212 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14216, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr14219 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr14218 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14219, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14218
	%vr14222 = bitcast %FBSTRING* %vr14218 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14222, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14225 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14224 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14225, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14224
	%vr14228 = bitcast %FBSTRING* %vr14224 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14228, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0953
	%vr14231 = bitcast i8* bitcast ([13 x i8]* @Lt_0953 to i8*) to i8*
	; arg 12
	%vr14230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14231, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr14230
	%vr14234 = bitcast %FBSTRING* %vr14230 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14234, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0954
	%vr14237 = bitcast i8* bitcast ([63 x i8]* @Lt_0954 to i8*) to i8*
	; arg 62
	%vr14236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14237, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr14236
	%vr14240 = bitcast %FBSTRING* %vr14236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14240, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0955
	%vr14243 = bitcast i8* bitcast ([46 x i8]* @Lt_0955 to i8*) to i8*
	; arg 45
	%vr14242 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14243, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr14242
	%vr14246 = bitcast %FBSTRING* %vr14242 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14246, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0956
	%vr14249 = bitcast i8* bitcast ([32 x i8]* @Lt_0956 to i8*) to i8*
	; arg 31
	%vr14248 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14249, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr14248
	%vr14252 = bitcast %FBSTRING* %vr14248 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14252, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14255 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14254 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14255, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14254
	%vr14258 = bitcast %FBSTRING* %vr14254 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14258, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0957
	%vr14261 = bitcast i8* bitcast ([15 x i8]* @Lt_0957 to i8*) to i8*
	; arg 14
	%vr14260 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14261, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr14260
	%vr14264 = bitcast %FBSTRING* %vr14260 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14264, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14267 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14267, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14266
	%vr14270 = bitcast %FBSTRING* %vr14266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14270, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14273 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14272 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14273, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14272
	%vr14276 = bitcast %FBSTRING* %vr14272 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14276, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0958
	%vr14279 = bitcast i8* bitcast ([107 x i8]* @Lt_0958 to i8*) to i8*
	; arg 106
	%vr14278 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14279, i64 106 )

	; call fb_PrintString()
	; arg 1
	; arg vr14278
	%vr14282 = bitcast %FBSTRING* %vr14278 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14282, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr14285 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr14284 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14285, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14284
	%vr14288 = bitcast %FBSTRING* %vr14284 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14288, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0959
	%vr14291 = bitcast i8* bitcast ([27 x i8]* @Lt_0959 to i8*) to i8*
	; arg 26
	%vr14290 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14291, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14290
	%vr14294 = bitcast %FBSTRING* %vr14290 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14294, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14297 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14297, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14296
	%vr14300 = bitcast %FBSTRING* %vr14296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14300, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095A
	%vr14303 = bitcast i8* bitcast ([23 x i8]* @Lt_095A to i8*) to i8*
	; arg 22
	%vr14302 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14303, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14302
	%vr14306 = bitcast %FBSTRING* %vr14302 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14306, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095B
	%vr14309 = bitcast i8* bitcast ([33 x i8]* @Lt_095B to i8*) to i8*
	; arg 32
	%vr14308 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14309, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14308
	%vr14312 = bitcast %FBSTRING* %vr14308 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14312, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr14315 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr14314 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14315, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14314
	%vr14318 = bitcast %FBSTRING* %vr14314 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14318, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095C
	%vr14321 = bitcast i8* bitcast ([28 x i8]* @Lt_095C to i8*) to i8*
	; arg 27
	%vr14320 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14321, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14320
	%vr14324 = bitcast %FBSTRING* %vr14320 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14324, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095D
	%vr14327 = bitcast i8* bitcast ([42 x i8]* @Lt_095D to i8*) to i8*
	; arg 41
	%vr14326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14327, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr14326
	%vr14330 = bitcast %FBSTRING* %vr14326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14330, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095E
	%vr14333 = bitcast i8* bitcast ([27 x i8]* @Lt_095E to i8*) to i8*
	; arg 26
	%vr14332 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14333, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14332
	%vr14336 = bitcast %FBSTRING* %vr14332 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14336, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14339 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14338 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14339, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14338
	%vr14342 = bitcast %FBSTRING* %vr14338 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14342, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095F
	%vr14345 = bitcast i8* bitcast ([49 x i8]* @Lt_095F to i8*) to i8*
	; arg 48
	%vr14344 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14345, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14344
	%vr14348 = bitcast %FBSTRING* %vr14344 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14348, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr14351 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr14350 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14351, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14350
	%vr14354 = bitcast %FBSTRING* %vr14350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14354, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0960
	%vr14357 = bitcast i8* bitcast ([22 x i8]* @Lt_0960 to i8*) to i8*
	; arg 21
	%vr14356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14357, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14356
	%vr14360 = bitcast %FBSTRING* %vr14356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14360, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr14363 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr14362 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14363, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14362
	%vr14366 = bitcast %FBSTRING* %vr14362 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14366, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074C
	%vr14369 = bitcast i8* bitcast ([13 x i8]* @Lt_074C to i8*) to i8*
	; arg 12
	%vr14368 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14369, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr14368
	%vr14372 = bitcast %FBSTRING* %vr14368 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14372, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14375 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14374 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14375, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14374
	%vr14378 = bitcast %FBSTRING* %vr14374 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14378, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14381 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14380 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14381, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14380
	%vr14384 = bitcast %FBSTRING* %vr14380 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14384, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0961
	%vr14387 = bitcast i8* bitcast ([112 x i8]* @Lt_0961 to i8*) to i8*
	; arg 111
	%vr14386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14387, i64 111 )

	; call fb_PrintString()
	; arg 1
	; arg vr14386
	%vr14390 = bitcast %FBSTRING* %vr14386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14390, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr14393 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr14392 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14393, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14392
	%vr14396 = bitcast %FBSTRING* %vr14392 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14396, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0959
	%vr14399 = bitcast i8* bitcast ([27 x i8]* @Lt_0959 to i8*) to i8*
	; arg 26
	%vr14398 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14399, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14398
	%vr14402 = bitcast %FBSTRING* %vr14398 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14402, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14405 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14404 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14405, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14404
	%vr14408 = bitcast %FBSTRING* %vr14404 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14408, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095A
	%vr14411 = bitcast i8* bitcast ([23 x i8]* @Lt_095A to i8*) to i8*
	; arg 22
	%vr14410 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14411, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr14410
	%vr14414 = bitcast %FBSTRING* %vr14410 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14414, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095B
	%vr14417 = bitcast i8* bitcast ([33 x i8]* @Lt_095B to i8*) to i8*
	; arg 32
	%vr14416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14417, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14416
	%vr14420 = bitcast %FBSTRING* %vr14416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14420, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr14423 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr14422 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14423, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14422
	%vr14426 = bitcast %FBSTRING* %vr14422 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14426, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095C
	%vr14429 = bitcast i8* bitcast ([28 x i8]* @Lt_095C to i8*) to i8*
	; arg 27
	%vr14428 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14429, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14428
	%vr14432 = bitcast %FBSTRING* %vr14428 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14432, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0962
	%vr14435 = bitcast i8* bitcast ([47 x i8]* @Lt_0962 to i8*) to i8*
	; arg 46
	%vr14434 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14435, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr14434
	%vr14438 = bitcast %FBSTRING* %vr14434 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14438, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095E
	%vr14441 = bitcast i8* bitcast ([27 x i8]* @Lt_095E to i8*) to i8*
	; arg 26
	%vr14440 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14441, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14440
	%vr14444 = bitcast %FBSTRING* %vr14440 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14444, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14447 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14447, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14446
	%vr14450 = bitcast %FBSTRING* %vr14446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14450, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_095F
	%vr14453 = bitcast i8* bitcast ([49 x i8]* @Lt_095F to i8*) to i8*
	; arg 48
	%vr14452 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14453, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14452
	%vr14456 = bitcast %FBSTRING* %vr14452 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14456, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr14459 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr14458 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14459, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14458
	%vr14462 = bitcast %FBSTRING* %vr14458 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14462, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0963
	%vr14465 = bitcast i8* bitcast ([18 x i8]* @Lt_0963 to i8*) to i8*
	; arg 17
	%vr14464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14465, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr14464
	%vr14468 = bitcast %FBSTRING* %vr14464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14468, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr14471 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr14470 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14471, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14470
	%vr14474 = bitcast %FBSTRING* %vr14470 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14474, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_074C
	%vr14477 = bitcast i8* bitcast ([13 x i8]* @Lt_074C to i8*) to i8*
	; arg 12
	%vr14476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14477, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr14476
	%vr14480 = bitcast %FBSTRING* %vr14476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14480, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14483 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14482 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14483, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14482
	%vr14486 = bitcast %FBSTRING* %vr14482 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14486, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14489 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14489, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14488
	%vr14492 = bitcast %FBSTRING* %vr14488 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14492, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0964
	%vr14495 = bitcast i8* bitcast ([59 x i8]* @Lt_0964 to i8*) to i8*
	; arg 58
	%vr14494 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14495, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr14494
	%vr14498 = bitcast %FBSTRING* %vr14494 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14498, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0965
	%vr14501 = bitcast i8* bitcast ([24 x i8]* @Lt_0965 to i8*) to i8*
	; arg 23
	%vr14500 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14501, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14500
	%vr14504 = bitcast %FBSTRING* %vr14500 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14504, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0966
	%vr14507 = bitcast i8* bitcast ([33 x i8]* @Lt_0966 to i8*) to i8*
	; arg 32
	%vr14506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14507, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14506
	%vr14510 = bitcast %FBSTRING* %vr14506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14510, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14513 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14512 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14513, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14512
	%vr14516 = bitcast %FBSTRING* %vr14512 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14516, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0967
	%vr14519 = bitcast i8* bitcast ([41 x i8]* @Lt_0967 to i8*) to i8*
	; arg 40
	%vr14518 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14519, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr14518
	%vr14522 = bitcast %FBSTRING* %vr14518 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14522, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0968
	%vr14525 = bitcast i8* bitcast ([33 x i8]* @Lt_0968 to i8*) to i8*
	; arg 32
	%vr14524 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14525, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14524
	%vr14528 = bitcast %FBSTRING* %vr14524 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14528, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0969
	%vr14531 = bitcast i8* bitcast ([19 x i8]* @Lt_0969 to i8*) to i8*
	; arg 18
	%vr14530 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14531, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr14530
	%vr14534 = bitcast %FBSTRING* %vr14530 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14534, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096A
	%vr14537 = bitcast i8* bitcast ([10 x i8]* @Lt_096A to i8*) to i8*
	; arg 9
	%vr14536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14537, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr14536
	%vr14540 = bitcast %FBSTRING* %vr14536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14540, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096B
	%vr14543 = bitcast i8* bitcast ([58 x i8]* @Lt_096B to i8*) to i8*
	; arg 57
	%vr14542 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14543, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr14542
	%vr14546 = bitcast %FBSTRING* %vr14542 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14546, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096C
	%vr14549 = bitcast i8* bitcast ([58 x i8]* @Lt_096C to i8*) to i8*
	; arg 57
	%vr14548 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14549, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr14548
	%vr14552 = bitcast %FBSTRING* %vr14548 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14552, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096D
	%vr14555 = bitcast i8* bitcast ([40 x i8]* @Lt_096D to i8*) to i8*
	; arg 39
	%vr14554 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14555, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14554
	%vr14558 = bitcast %FBSTRING* %vr14554 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14558, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14561 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14560 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14561, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14560
	%vr14564 = bitcast %FBSTRING* %vr14560 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14564, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096E
	%vr14567 = bitcast i8* bitcast ([18 x i8]* @Lt_096E to i8*) to i8*
	; arg 17
	%vr14566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14567, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr14566
	%vr14570 = bitcast %FBSTRING* %vr14566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14570, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096F
	%vr14573 = bitcast i8* bitcast ([22 x i8]* @Lt_096F to i8*) to i8*
	; arg 21
	%vr14572 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14573, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14572
	%vr14576 = bitcast %FBSTRING* %vr14572 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14576, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0970
	%vr14579 = bitcast i8* bitcast ([37 x i8]* @Lt_0970 to i8*) to i8*
	; arg 36
	%vr14578 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14579, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr14578
	%vr14582 = bitcast %FBSTRING* %vr14578 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14582, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr14585 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr14584 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14585, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14584
	%vr14588 = bitcast %FBSTRING* %vr14584 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14588, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0971
	%vr14591 = bitcast i8* bitcast ([49 x i8]* @Lt_0971 to i8*) to i8*
	; arg 48
	%vr14590 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14591, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14590
	%vr14594 = bitcast %FBSTRING* %vr14590 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14594, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0972
	%vr14597 = bitcast i8* bitcast ([40 x i8]* @Lt_0972 to i8*) to i8*
	; arg 39
	%vr14596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14597, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14596
	%vr14600 = bitcast %FBSTRING* %vr14596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14600, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14603 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14602 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14603, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14602
	%vr14606 = bitcast %FBSTRING* %vr14602 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14606, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14609 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14608 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14609, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14608
	%vr14612 = bitcast %FBSTRING* %vr14608 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14612, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0973
	%vr14615 = bitcast i8* bitcast ([40 x i8]* @Lt_0973 to i8*) to i8*
	; arg 39
	%vr14614 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14615, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr14614
	%vr14618 = bitcast %FBSTRING* %vr14614 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14618, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0974
	%vr14621 = bitcast i8* bitcast ([49 x i8]* @Lt_0974 to i8*) to i8*
	; arg 48
	%vr14620 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14621, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14620
	%vr14624 = bitcast %FBSTRING* %vr14620 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14624, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0975
	%vr14627 = bitcast i8* bitcast ([42 x i8]* @Lt_0975 to i8*) to i8*
	; arg 41
	%vr14626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14627, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr14626
	%vr14630 = bitcast %FBSTRING* %vr14626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14630, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0976
	%vr14633 = bitcast i8* bitcast ([22 x i8]* @Lt_0976 to i8*) to i8*
	; arg 21
	%vr14632 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14633, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr14632
	%vr14636 = bitcast %FBSTRING* %vr14632 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14636, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14639 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14638 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14639, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14638
	%vr14642 = bitcast %FBSTRING* %vr14638 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14642, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0977
	%vr14645 = bitcast i8* bitcast ([20 x i8]* @Lt_0977 to i8*) to i8*
	; arg 19
	%vr14644 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14645, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14644
	%vr14648 = bitcast %FBSTRING* %vr14644 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14648, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0978
	%vr14651 = bitcast i8* bitcast ([37 x i8]* @Lt_0978 to i8*) to i8*
	; arg 36
	%vr14650 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14651, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr14650
	%vr14654 = bitcast %FBSTRING* %vr14650 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14654, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr14657 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr14656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14657, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr14656
	%vr14660 = bitcast %FBSTRING* %vr14656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14660, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0979
	%vr14663 = bitcast i8* bitcast ([32 x i8]* @Lt_0979 to i8*) to i8*
	; arg 31
	%vr14662 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14663, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr14662
	%vr14666 = bitcast %FBSTRING* %vr14662 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14666, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr14669 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr14668 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14669, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14668
	%vr14672 = bitcast %FBSTRING* %vr14668 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14672, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097A
	%vr14675 = bitcast i8* bitcast ([67 x i8]* @Lt_097A to i8*) to i8*
	; arg 66
	%vr14674 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14675, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr14674
	%vr14678 = bitcast %FBSTRING* %vr14674 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14678, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097B
	%vr14681 = bitcast i8* bitcast ([66 x i8]* @Lt_097B to i8*) to i8*
	; arg 65
	%vr14680 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14681, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr14680
	%vr14684 = bitcast %FBSTRING* %vr14680 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14684, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14687 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14687, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14686
	%vr14690 = bitcast %FBSTRING* %vr14686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14690, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097C
	%vr14693 = bitcast i8* bitcast ([52 x i8]* @Lt_097C to i8*) to i8*
	; arg 51
	%vr14692 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14693, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr14692
	%vr14696 = bitcast %FBSTRING* %vr14692 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14696, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097D
	%vr14699 = bitcast i8* bitcast ([19 x i8]* @Lt_097D to i8*) to i8*
	; arg 18
	%vr14698 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14699, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr14698
	%vr14702 = bitcast %FBSTRING* %vr14698 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14702, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097E
	%vr14705 = bitcast i8* bitcast ([28 x i8]* @Lt_097E to i8*) to i8*
	; arg 27
	%vr14704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14705, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14704
	%vr14708 = bitcast %FBSTRING* %vr14704 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14708, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14711 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14710 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14711, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14710
	%vr14714 = bitcast %FBSTRING* %vr14710 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14714, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_097F
	%vr14717 = bitcast i8* bitcast ([49 x i8]* @Lt_097F to i8*) to i8*
	; arg 48
	%vr14716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14717, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14716
	%vr14720 = bitcast %FBSTRING* %vr14716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14720, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr14723 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr14722 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14723, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr14722
	%vr14726 = bitcast %FBSTRING* %vr14722 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14726, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0980
	%vr14729 = bitcast i8* bitcast ([39 x i8]* @Lt_0980 to i8*) to i8*
	; arg 38
	%vr14728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14729, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr14728
	%vr14732 = bitcast %FBSTRING* %vr14728 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14732, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr14735 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr14734 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14735, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr14734
	%vr14738 = bitcast %FBSTRING* %vr14734 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14738, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0981
	%vr14741 = bitcast i8* bitcast ([26 x i8]* @Lt_0981 to i8*) to i8*
	; arg 25
	%vr14740 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14741, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14740
	%vr14744 = bitcast %FBSTRING* %vr14740 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14744, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14747 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14747, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14746
	%vr14750 = bitcast %FBSTRING* %vr14746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14750, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14753 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14752 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14753, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14752
	%vr14756 = bitcast %FBSTRING* %vr14752 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14756, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0982
	%vr14759 = bitcast i8* bitcast ([33 x i8]* @Lt_0982 to i8*) to i8*
	; arg 32
	%vr14758 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14759, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14758
	%vr14762 = bitcast %FBSTRING* %vr14758 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14762, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14765 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14764 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14765, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14764
	%vr14768 = bitcast %FBSTRING* %vr14764 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14768, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0983
	%vr14771 = bitcast i8* bitcast ([24 x i8]* @Lt_0983 to i8*) to i8*
	; arg 23
	%vr14770 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14771, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr14770
	%vr14774 = bitcast %FBSTRING* %vr14770 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14774, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0984
	%vr14777 = bitcast i8* bitcast ([25 x i8]* @Lt_0984 to i8*) to i8*
	; arg 24
	%vr14776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14777, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr14776
	%vr14780 = bitcast %FBSTRING* %vr14776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14780, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0985
	%vr14783 = bitcast i8* bitcast ([49 x i8]* @Lt_0985 to i8*) to i8*
	; arg 48
	%vr14782 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14783, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr14782
	%vr14786 = bitcast %FBSTRING* %vr14782 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14786, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr14789 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr14788 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14789, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr14788
	%vr14792 = bitcast %FBSTRING* %vr14788 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14792, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0986
	%vr14795 = bitcast i8* bitcast ([62 x i8]* @Lt_0986 to i8*) to i8*
	; arg 61
	%vr14794 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14795, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr14794
	%vr14798 = bitcast %FBSTRING* %vr14794 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14798, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0987
	%vr14801 = bitcast i8* bitcast ([33 x i8]* @Lt_0987 to i8*) to i8*
	; arg 32
	%vr14800 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14801, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14800
	%vr14804 = bitcast %FBSTRING* %vr14800 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14804, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14807 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14807, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14806
	%vr14810 = bitcast %FBSTRING* %vr14806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14810, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0988
	%vr14813 = bitcast i8* bitcast ([68 x i8]* @Lt_0988 to i8*) to i8*
	; arg 67
	%vr14812 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14813, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr14812
	%vr14816 = bitcast %FBSTRING* %vr14812 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14816, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0989
	%vr14819 = bitcast i8* bitcast ([27 x i8]* @Lt_0989 to i8*) to i8*
	; arg 26
	%vr14818 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14819, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr14818
	%vr14822 = bitcast %FBSTRING* %vr14818 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14822, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098A
	%vr14825 = bitcast i8* bitcast ([42 x i8]* @Lt_098A to i8*) to i8*
	; arg 41
	%vr14824 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14825, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr14824
	%vr14828 = bitcast %FBSTRING* %vr14824 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14828, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098B
	%vr14831 = bitcast i8* bitcast ([43 x i8]* @Lt_098B to i8*) to i8*
	; arg 42
	%vr14830 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14831, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr14830
	%vr14834 = bitcast %FBSTRING* %vr14830 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14834, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098C
	%vr14837 = bitcast i8* bitcast ([20 x i8]* @Lt_098C to i8*) to i8*
	; arg 19
	%vr14836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14837, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr14836
	%vr14840 = bitcast %FBSTRING* %vr14836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14840, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098D
	%vr14843 = bitcast i8* bitcast ([25 x i8]* @Lt_098D to i8*) to i8*
	; arg 24
	%vr14842 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14843, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr14842
	%vr14846 = bitcast %FBSTRING* %vr14842 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14846, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098E
	%vr14849 = bitcast i8* bitcast ([39 x i8]* @Lt_098E to i8*) to i8*
	; arg 38
	%vr14848 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14849, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr14848
	%vr14852 = bitcast %FBSTRING* %vr14848 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14852, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14855 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14854 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14855, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14854
	%vr14858 = bitcast %FBSTRING* %vr14854 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14858, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098F
	%vr14861 = bitcast i8* bitcast ([16 x i8]* @Lt_098F to i8*) to i8*
	; arg 15
	%vr14860 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14861, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr14860
	%vr14864 = bitcast %FBSTRING* %vr14860 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14864, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14867 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14867, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14866
	%vr14870 = bitcast %FBSTRING* %vr14866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14870, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14873 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14872 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14873, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14872
	%vr14876 = bitcast %FBSTRING* %vr14872 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14876, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0990
	%vr14879 = bitcast i8* bitcast ([28 x i8]* @Lt_0990 to i8*) to i8*
	; arg 27
	%vr14878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14879, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14878
	%vr14882 = bitcast %FBSTRING* %vr14878 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14882, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14885 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14884 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14885, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14884
	%vr14888 = bitcast %FBSTRING* %vr14884 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14888, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0991
	%vr14891 = bitcast i8* bitcast ([62 x i8]* @Lt_0991 to i8*) to i8*
	; arg 61
	%vr14890 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14891, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr14890
	%vr14894 = bitcast %FBSTRING* %vr14890 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14894, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0992
	%vr14897 = bitcast i8* bitcast ([39 x i8]* @Lt_0992 to i8*) to i8*
	; arg 38
	%vr14896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14897, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr14896
	%vr14900 = bitcast %FBSTRING* %vr14896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14900, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0993
	%vr14903 = bitcast i8* bitcast ([34 x i8]* @Lt_0993 to i8*) to i8*
	; arg 33
	%vr14902 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14903, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr14902
	%vr14906 = bitcast %FBSTRING* %vr14902 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14906, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098D
	%vr14909 = bitcast i8* bitcast ([25 x i8]* @Lt_098D to i8*) to i8*
	; arg 24
	%vr14908 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14909, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr14908
	%vr14912 = bitcast %FBSTRING* %vr14908 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14912, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0994
	%vr14915 = bitcast i8* bitcast ([47 x i8]* @Lt_0994 to i8*) to i8*
	; arg 46
	%vr14914 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14915, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr14914
	%vr14918 = bitcast %FBSTRING* %vr14914 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14918, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14921 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14920 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14921, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14920
	%vr14924 = bitcast %FBSTRING* %vr14920 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14924, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0995
	%vr14927 = bitcast i8* bitcast ([3 x i8]* @Lt_0995 to i8*) to i8*
	; arg 2
	%vr14926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14927, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr14926
	%vr14930 = bitcast %FBSTRING* %vr14926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14930, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14933 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14932 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14933, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14932
	%vr14936 = bitcast %FBSTRING* %vr14932 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14936, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0996
	%vr14939 = bitcast i8* bitcast ([28 x i8]* @Lt_0996 to i8*) to i8*
	; arg 27
	%vr14938 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14939, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr14938
	%vr14942 = bitcast %FBSTRING* %vr14938 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14942, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14945 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14944 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14945, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14944
	%vr14948 = bitcast %FBSTRING* %vr14944 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14948, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14951 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14950 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14951, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14950
	%vr14954 = bitcast %FBSTRING* %vr14950 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14954, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0997
	%vr14957 = bitcast i8* bitcast ([75 x i8]* @Lt_0997 to i8*) to i8*
	; arg 74
	%vr14956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14957, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr14956
	%vr14960 = bitcast %FBSTRING* %vr14956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14960, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0998
	%vr14963 = bitcast i8* bitcast ([82 x i8]* @Lt_0998 to i8*) to i8*
	; arg 81
	%vr14962 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14963, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr14962
	%vr14966 = bitcast %FBSTRING* %vr14962 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14966, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0999
	%vr14969 = bitcast i8* bitcast ([30 x i8]* @Lt_0999 to i8*) to i8*
	; arg 29
	%vr14968 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14969, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr14968
	%vr14972 = bitcast %FBSTRING* %vr14968 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14972, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr14975 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr14974 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14975, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr14974
	%vr14978 = bitcast %FBSTRING* %vr14974 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14978, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099A
	%vr14981 = bitcast i8* bitcast ([35 x i8]* @Lt_099A to i8*) to i8*
	; arg 34
	%vr14980 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14981, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr14980
	%vr14984 = bitcast %FBSTRING* %vr14980 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14984, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099B
	%vr14987 = bitcast i8* bitcast ([33 x i8]* @Lt_099B to i8*) to i8*
	; arg 32
	%vr14986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14987, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr14986
	%vr14990 = bitcast %FBSTRING* %vr14986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14990, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099C
	%vr14993 = bitcast i8* bitcast ([26 x i8]* @Lt_099C to i8*) to i8*
	; arg 25
	%vr14992 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14993, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr14992
	%vr14996 = bitcast %FBSTRING* %vr14992 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr14996, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr14999 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr14998 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr14999, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr14998
	%vr15002 = bitcast %FBSTRING* %vr14998 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15002, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15005 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15004 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15005, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15004
	%vr15008 = bitcast %FBSTRING* %vr15004 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15008, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099D
	%vr15011 = bitcast i8* bitcast ([38 x i8]* @Lt_099D to i8*) to i8*
	; arg 37
	%vr15010 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15011, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr15010
	%vr15014 = bitcast %FBSTRING* %vr15010 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15014, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0983
	%vr15017 = bitcast i8* bitcast ([24 x i8]* @Lt_0983 to i8*) to i8*
	; arg 23
	%vr15016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15017, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr15016
	%vr15020 = bitcast %FBSTRING* %vr15016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15020, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099E
	%vr15023 = bitcast i8* bitcast ([34 x i8]* @Lt_099E to i8*) to i8*
	; arg 33
	%vr15022 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15023, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr15022
	%vr15026 = bitcast %FBSTRING* %vr15022 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15026, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_099F
	%vr15029 = bitcast i8* bitcast ([28 x i8]* @Lt_099F to i8*) to i8*
	; arg 27
	%vr15028 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15029, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr15028
	%vr15032 = bitcast %FBSTRING* %vr15028 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15032, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A0
	%vr15035 = bitcast i8* bitcast ([56 x i8]* @Lt_09A0 to i8*) to i8*
	; arg 55
	%vr15034 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15035, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr15034
	%vr15038 = bitcast %FBSTRING* %vr15034 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15038, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A1
	%vr15041 = bitcast i8* bitcast ([44 x i8]* @Lt_09A1 to i8*) to i8*
	; arg 43
	%vr15040 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15041, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr15040
	%vr15044 = bitcast %FBSTRING* %vr15040 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15044, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A2
	%vr15047 = bitcast i8* bitcast ([13 x i8]* @Lt_09A2 to i8*) to i8*
	; arg 12
	%vr15046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15047, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr15046
	%vr15050 = bitcast %FBSTRING* %vr15046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15050, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A3
	%vr15053 = bitcast i8* bitcast ([39 x i8]* @Lt_09A3 to i8*) to i8*
	; arg 38
	%vr15052 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15053, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15052
	%vr15056 = bitcast %FBSTRING* %vr15052 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15056, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr15059 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr15058 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15059, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15058
	%vr15062 = bitcast %FBSTRING* %vr15058 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15062, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15065 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15064 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15065, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15064
	%vr15068 = bitcast %FBSTRING* %vr15064 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15068, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A4
	%vr15071 = bitcast i8* bitcast ([14 x i8]* @Lt_09A4 to i8*) to i8*
	; arg 13
	%vr15070 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15071, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15070
	%vr15074 = bitcast %FBSTRING* %vr15070 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15074, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15077 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15077, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15076
	%vr15080 = bitcast %FBSTRING* %vr15076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15080, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A5
	%vr15083 = bitcast i8* bitcast ([4 x i8]* @Lt_09A5 to i8*) to i8*
	; arg 3
	%vr15082 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15083, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15082
	%vr15086 = bitcast %FBSTRING* %vr15082 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15086, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15089 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15088 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15089, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15088
	%vr15092 = bitcast %FBSTRING* %vr15088 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15092, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A6
	%vr15095 = bitcast i8* bitcast ([17 x i8]* @Lt_09A6 to i8*) to i8*
	; arg 16
	%vr15094 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15095, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr15094
	%vr15098 = bitcast %FBSTRING* %vr15094 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15098, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15101 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15100 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15101, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15100
	%vr15104 = bitcast %FBSTRING* %vr15100 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15104, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A7
	%vr15107 = bitcast i8* bitcast ([54 x i8]* @Lt_09A7 to i8*) to i8*
	; arg 53
	%vr15106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15107, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr15106
	%vr15110 = bitcast %FBSTRING* %vr15106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15110, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A8
	%vr15113 = bitcast i8* bitcast ([24 x i8]* @Lt_09A8 to i8*) to i8*
	; arg 23
	%vr15112 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15113, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr15112
	%vr15116 = bitcast %FBSTRING* %vr15112 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15116, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09A9
	%vr15119 = bitcast i8* bitcast ([43 x i8]* @Lt_09A9 to i8*) to i8*
	; arg 42
	%vr15118 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15119, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr15118
	%vr15122 = bitcast %FBSTRING* %vr15118 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15122, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AA
	%vr15125 = bitcast i8* bitcast ([28 x i8]* @Lt_09AA to i8*) to i8*
	; arg 27
	%vr15124 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15125, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr15124
	%vr15128 = bitcast %FBSTRING* %vr15124 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15128, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AB
	%vr15131 = bitcast i8* bitcast ([33 x i8]* @Lt_09AB to i8*) to i8*
	; arg 32
	%vr15130 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15131, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr15130
	%vr15134 = bitcast %FBSTRING* %vr15130 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15134, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AC
	%vr15137 = bitcast i8* bitcast ([42 x i8]* @Lt_09AC to i8*) to i8*
	; arg 41
	%vr15136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15137, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr15136
	%vr15140 = bitcast %FBSTRING* %vr15136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15140, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AD
	%vr15143 = bitcast i8* bitcast ([51 x i8]* @Lt_09AD to i8*) to i8*
	; arg 50
	%vr15142 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15143, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr15142
	%vr15146 = bitcast %FBSTRING* %vr15142 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15146, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AE
	%vr15149 = bitcast i8* bitcast ([48 x i8]* @Lt_09AE to i8*) to i8*
	; arg 47
	%vr15148 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15149, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15148
	%vr15152 = bitcast %FBSTRING* %vr15148 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15152, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09AF
	%vr15155 = bitcast i8* bitcast ([37 x i8]* @Lt_09AF to i8*) to i8*
	; arg 36
	%vr15154 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15155, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15154
	%vr15158 = bitcast %FBSTRING* %vr15154 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15158, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B0
	%vr15161 = bitcast i8* bitcast ([12 x i8]* @Lt_09B0 to i8*) to i8*
	; arg 11
	%vr15160 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15161, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr15160
	%vr15164 = bitcast %FBSTRING* %vr15160 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15164, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B1
	%vr15167 = bitcast i8* bitcast ([80 x i8]* @Lt_09B1 to i8*) to i8*
	; arg 79
	%vr15166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15167, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr15166
	%vr15170 = bitcast %FBSTRING* %vr15166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15170, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B2
	%vr15173 = bitcast i8* bitcast ([15 x i8]* @Lt_09B2 to i8*) to i8*
	; arg 14
	%vr15172 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15173, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15172
	%vr15176 = bitcast %FBSTRING* %vr15172 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15176, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B3
	%vr15179 = bitcast i8* bitcast ([74 x i8]* @Lt_09B3 to i8*) to i8*
	; arg 73
	%vr15178 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15179, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr15178
	%vr15182 = bitcast %FBSTRING* %vr15178 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15182, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15185 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15184 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15185, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15184
	%vr15188 = bitcast %FBSTRING* %vr15184 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15188, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15191 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15190 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15191, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15190
	%vr15194 = bitcast %FBSTRING* %vr15190 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15194, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B4
	%vr15197 = bitcast i8* bitcast ([30 x i8]* @Lt_09B4 to i8*) to i8*
	; arg 29
	%vr15196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15197, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr15196
	%vr15200 = bitcast %FBSTRING* %vr15196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15200, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B5
	%vr15203 = bitcast i8* bitcast ([27 x i8]* @Lt_09B5 to i8*) to i8*
	; arg 26
	%vr15202 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15203, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15202
	%vr15206 = bitcast %FBSTRING* %vr15202 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15206, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr15209 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr15208 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15209, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15208
	%vr15212 = bitcast %FBSTRING* %vr15208 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15212, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr15215 = bitcast i8* bitcast ([15 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 14
	%vr15214 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15215, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15214
	%vr15218 = bitcast %FBSTRING* %vr15214 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15218, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr15221 = bitcast i8* bitcast ([26 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 25
	%vr15220 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15221, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15220
	%vr15224 = bitcast %FBSTRING* %vr15220 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15224, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15227 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15227, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15226
	%vr15230 = bitcast %FBSTRING* %vr15226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15230, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr15233 = bitcast i8* bitcast ([32 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 31
	%vr15232 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15233, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15232
	%vr15236 = bitcast %FBSTRING* %vr15232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15236, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr15239 = bitcast i8* bitcast ([32 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 31
	%vr15238 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15239, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15238
	%vr15242 = bitcast %FBSTRING* %vr15238 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15242, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15245 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15244 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15245, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15244
	%vr15248 = bitcast %FBSTRING* %vr15244 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15248, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15251 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15250 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15251, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15250
	%vr15254 = bitcast %FBSTRING* %vr15250 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15254, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BA
	%vr15257 = bitcast i8* bitcast ([27 x i8]* @Lt_09BA to i8*) to i8*
	; arg 26
	%vr15256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15257, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15256
	%vr15260 = bitcast %FBSTRING* %vr15256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15260, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr15263 = bitcast i8* bitcast ([15 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 14
	%vr15262 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15263, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15262
	%vr15266 = bitcast %FBSTRING* %vr15262 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15266, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr15269 = bitcast i8* bitcast ([26 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 25
	%vr15268 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15269, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15268
	%vr15272 = bitcast %FBSTRING* %vr15268 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15272, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15275 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15274 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15275, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15274
	%vr15278 = bitcast %FBSTRING* %vr15274 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15278, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BB
	%vr15281 = bitcast i8* bitcast ([14 x i8]* @Lt_09BB to i8*) to i8*
	; arg 13
	%vr15280 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15281, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15280
	%vr15284 = bitcast %FBSTRING* %vr15280 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15284, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr15287 = bitcast i8* bitcast ([32 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 31
	%vr15286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15287, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15286
	%vr15290 = bitcast %FBSTRING* %vr15286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15290, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BC
	%vr15293 = bitcast i8* bitcast ([14 x i8]* @Lt_09BC to i8*) to i8*
	; arg 13
	%vr15292 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15293, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15292
	%vr15296 = bitcast %FBSTRING* %vr15292 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15296, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr15299 = bitcast i8* bitcast ([32 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 31
	%vr15298 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15299, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15298
	%vr15302 = bitcast %FBSTRING* %vr15298 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15302, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15305 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15304 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15305, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15304
	%vr15308 = bitcast %FBSTRING* %vr15304 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15308, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15311 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15310 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15311, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15310
	%vr15314 = bitcast %FBSTRING* %vr15310 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15314, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BD
	%vr15317 = bitcast i8* bitcast ([27 x i8]* @Lt_09BD to i8*) to i8*
	; arg 26
	%vr15316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15317, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15316
	%vr15320 = bitcast %FBSTRING* %vr15316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15320, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr15323 = bitcast i8* bitcast ([15 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 14
	%vr15322 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15323, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15322
	%vr15326 = bitcast %FBSTRING* %vr15322 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15326, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr15329 = bitcast i8* bitcast ([26 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 25
	%vr15328 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15329, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15328
	%vr15332 = bitcast %FBSTRING* %vr15328 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15332, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15335 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15334 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15335, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15334
	%vr15338 = bitcast %FBSTRING* %vr15334 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15338, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BE
	%vr15341 = bitcast i8* bitcast ([14 x i8]* @Lt_09BE to i8*) to i8*
	; arg 13
	%vr15340 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15341, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15340
	%vr15344 = bitcast %FBSTRING* %vr15340 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15344, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr15347 = bitcast i8* bitcast ([32 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 31
	%vr15346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15347, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15346
	%vr15350 = bitcast %FBSTRING* %vr15346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15350, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09BF
	%vr15353 = bitcast i8* bitcast ([14 x i8]* @Lt_09BF to i8*) to i8*
	; arg 13
	%vr15352 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15353, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15352
	%vr15356 = bitcast %FBSTRING* %vr15352 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15356, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr15359 = bitcast i8* bitcast ([32 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 31
	%vr15358 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15359, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15358
	%vr15362 = bitcast %FBSTRING* %vr15358 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15362, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15365 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15364 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15365, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15364
	%vr15368 = bitcast %FBSTRING* %vr15364 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15368, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15371 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15370 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15371, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15370
	%vr15374 = bitcast %FBSTRING* %vr15370 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15374, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C0
	%vr15377 = bitcast i8* bitcast ([27 x i8]* @Lt_09C0 to i8*) to i8*
	; arg 26
	%vr15376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15377, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15376
	%vr15380 = bitcast %FBSTRING* %vr15376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15380, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr15383 = bitcast i8* bitcast ([15 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 14
	%vr15382 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15383, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15382
	%vr15386 = bitcast %FBSTRING* %vr15382 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15386, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr15389 = bitcast i8* bitcast ([26 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 25
	%vr15388 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15389, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15388
	%vr15392 = bitcast %FBSTRING* %vr15388 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15392, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15395 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15394 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15395, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15394
	%vr15398 = bitcast %FBSTRING* %vr15394 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15398, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C1
	%vr15401 = bitcast i8* bitcast ([14 x i8]* @Lt_09C1 to i8*) to i8*
	; arg 13
	%vr15400 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15401, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15400
	%vr15404 = bitcast %FBSTRING* %vr15400 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15404, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr15407 = bitcast i8* bitcast ([32 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 31
	%vr15406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15407, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15406
	%vr15410 = bitcast %FBSTRING* %vr15406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15410, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C2
	%vr15413 = bitcast i8* bitcast ([14 x i8]* @Lt_09C2 to i8*) to i8*
	; arg 13
	%vr15412 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15413, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15412
	%vr15416 = bitcast %FBSTRING* %vr15412 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15416, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr15419 = bitcast i8* bitcast ([32 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 31
	%vr15418 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15419, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15418
	%vr15422 = bitcast %FBSTRING* %vr15418 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15422, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15425 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15424 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15425, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15424
	%vr15428 = bitcast %FBSTRING* %vr15424 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15428, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15431 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15430 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15431, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15430
	%vr15434 = bitcast %FBSTRING* %vr15430 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15434, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C3
	%vr15437 = bitcast i8* bitcast ([27 x i8]* @Lt_09C3 to i8*) to i8*
	; arg 26
	%vr15436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15437, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15436
	%vr15440 = bitcast %FBSTRING* %vr15436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15440, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B6
	%vr15443 = bitcast i8* bitcast ([15 x i8]* @Lt_09B6 to i8*) to i8*
	; arg 14
	%vr15442 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15443, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr15442
	%vr15446 = bitcast %FBSTRING* %vr15442 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15446, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B7
	%vr15449 = bitcast i8* bitcast ([26 x i8]* @Lt_09B7 to i8*) to i8*
	; arg 25
	%vr15448 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15449, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr15448
	%vr15452 = bitcast %FBSTRING* %vr15448 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15452, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15455 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15454 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15455, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15454
	%vr15458 = bitcast %FBSTRING* %vr15454 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15458, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C4
	%vr15461 = bitcast i8* bitcast ([14 x i8]* @Lt_09C4 to i8*) to i8*
	; arg 13
	%vr15460 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15461, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15460
	%vr15464 = bitcast %FBSTRING* %vr15460 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15464, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B8
	%vr15467 = bitcast i8* bitcast ([32 x i8]* @Lt_09B8 to i8*) to i8*
	; arg 31
	%vr15466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15467, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15466
	%vr15470 = bitcast %FBSTRING* %vr15466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15470, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C5
	%vr15473 = bitcast i8* bitcast ([14 x i8]* @Lt_09C5 to i8*) to i8*
	; arg 13
	%vr15472 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15473, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr15472
	%vr15476 = bitcast %FBSTRING* %vr15472 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15476, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09B9
	%vr15479 = bitcast i8* bitcast ([32 x i8]* @Lt_09B9 to i8*) to i8*
	; arg 31
	%vr15478 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15479, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15478
	%vr15482 = bitcast %FBSTRING* %vr15478 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15482, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15485 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15484 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15485, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15484
	%vr15488 = bitcast %FBSTRING* %vr15484 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15488, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15491 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15490 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15491, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15490
	%vr15494 = bitcast %FBSTRING* %vr15490 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15494, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15497 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15497, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15496
	%vr15500 = bitcast %FBSTRING* %vr15496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15500, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15503 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15502 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15503, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15502
	%vr15506 = bitcast %FBSTRING* %vr15502 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15506, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C6
	%vr15509 = bitcast i8* bitcast ([32 x i8]* @Lt_09C6 to i8*) to i8*
	; arg 31
	%vr15508 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15509, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15508
	%vr15512 = bitcast %FBSTRING* %vr15508 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15512, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C7
	%vr15515 = bitcast i8* bitcast ([37 x i8]* @Lt_09C7 to i8*) to i8*
	; arg 36
	%vr15514 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15515, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15514
	%vr15518 = bitcast %FBSTRING* %vr15514 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15518, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr15521 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr15520 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15521, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15520
	%vr15524 = bitcast %FBSTRING* %vr15520 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15524, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C8
	%vr15527 = bitcast i8* bitcast ([46 x i8]* @Lt_09C8 to i8*) to i8*
	; arg 45
	%vr15526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15527, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr15526
	%vr15530 = bitcast %FBSTRING* %vr15526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15530, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C9
	%vr15533 = bitcast i8* bitcast ([24 x i8]* @Lt_09C9 to i8*) to i8*
	; arg 23
	%vr15532 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15533, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr15532
	%vr15536 = bitcast %FBSTRING* %vr15532 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15536, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CA
	%vr15539 = bitcast i8* bitcast ([33 x i8]* @Lt_09CA to i8*) to i8*
	; arg 32
	%vr15538 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15539, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr15538
	%vr15542 = bitcast %FBSTRING* %vr15538 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15542, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CB
	%vr15545 = bitcast i8* bitcast ([17 x i8]* @Lt_09CB to i8*) to i8*
	; arg 16
	%vr15544 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15545, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr15544
	%vr15548 = bitcast %FBSTRING* %vr15544 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15548, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15551 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15550 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15551, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15550
	%vr15554 = bitcast %FBSTRING* %vr15550 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15554, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15557 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15557, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15556
	%vr15560 = bitcast %FBSTRING* %vr15556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15560, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15563 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15562 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15563, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15562
	%vr15566 = bitcast %FBSTRING* %vr15562 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15566, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr15569 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr15568 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15569, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15568
	%vr15572 = bitcast %FBSTRING* %vr15568 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15572, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15575 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15574 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15575, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15574
	%vr15578 = bitcast %FBSTRING* %vr15574 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15578, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CC
	%vr15581 = bitcast i8* bitcast ([21 x i8]* @Lt_09CC to i8*) to i8*
	; arg 20
	%vr15580 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15581, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15580
	%vr15584 = bitcast %FBSTRING* %vr15580 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15584, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C6
	%vr15587 = bitcast i8* bitcast ([32 x i8]* @Lt_09C6 to i8*) to i8*
	; arg 31
	%vr15586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15587, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr15586
	%vr15590 = bitcast %FBSTRING* %vr15586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15590, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr15593 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr15592 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15593, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15592
	%vr15596 = bitcast %FBSTRING* %vr15592 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15596, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr15599 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr15598 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15599, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15598
	%vr15602 = bitcast %FBSTRING* %vr15598 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15602, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09C7
	%vr15605 = bitcast i8* bitcast ([37 x i8]* @Lt_09C7 to i8*) to i8*
	; arg 36
	%vr15604 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15605, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15604
	%vr15608 = bitcast %FBSTRING* %vr15604 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15608, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr15611 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr15610 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15611, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15610
	%vr15614 = bitcast %FBSTRING* %vr15610 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15614, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CD
	%vr15617 = bitcast i8* bitcast ([46 x i8]* @Lt_09CD to i8*) to i8*
	; arg 45
	%vr15616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15617, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr15616
	%vr15620 = bitcast %FBSTRING* %vr15616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15620, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15623 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15622 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15623, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15622
	%vr15626 = bitcast %FBSTRING* %vr15622 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15626, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CE
	%vr15629 = bitcast i8* bitcast ([43 x i8]* @Lt_09CE to i8*) to i8*
	; arg 42
	%vr15628 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15629, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr15628
	%vr15632 = bitcast %FBSTRING* %vr15628 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15632, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CF
	%vr15635 = bitcast i8* bitcast ([27 x i8]* @Lt_09CF to i8*) to i8*
	; arg 26
	%vr15634 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15635, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15634
	%vr15638 = bitcast %FBSTRING* %vr15634 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15638, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr15641 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr15640 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15641, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr15640
	%vr15644 = bitcast %FBSTRING* %vr15640 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15644, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D0
	%vr15647 = bitcast i8* bitcast ([21 x i8]* @Lt_09D0 to i8*) to i8*
	; arg 20
	%vr15646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15647, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15646
	%vr15650 = bitcast %FBSTRING* %vr15646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15650, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D1
	%vr15653 = bitcast i8* bitcast ([48 x i8]* @Lt_09D1 to i8*) to i8*
	; arg 47
	%vr15652 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15653, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15652
	%vr15656 = bitcast %FBSTRING* %vr15652 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15656, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D2
	%vr15659 = bitcast i8* bitcast ([37 x i8]* @Lt_09D2 to i8*) to i8*
	; arg 36
	%vr15658 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15659, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15658
	%vr15662 = bitcast %FBSTRING* %vr15658 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15662, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D3
	%vr15665 = bitcast i8* bitcast ([59 x i8]* @Lt_09D3 to i8*) to i8*
	; arg 58
	%vr15664 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15665, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr15664
	%vr15668 = bitcast %FBSTRING* %vr15664 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15668, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D4
	%vr15671 = bitcast i8* bitcast ([47 x i8]* @Lt_09D4 to i8*) to i8*
	; arg 46
	%vr15670 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15671, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr15670
	%vr15674 = bitcast %FBSTRING* %vr15670 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15674, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D5
	%vr15677 = bitcast i8* bitcast ([52 x i8]* @Lt_09D5 to i8*) to i8*
	; arg 51
	%vr15676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15677, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr15676
	%vr15680 = bitcast %FBSTRING* %vr15676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15680, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D6
	%vr15683 = bitcast i8* bitcast ([52 x i8]* @Lt_09D6 to i8*) to i8*
	; arg 51
	%vr15682 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15683, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr15682
	%vr15686 = bitcast %FBSTRING* %vr15682 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15686, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D7
	%vr15689 = bitcast i8* bitcast ([41 x i8]* @Lt_09D7 to i8*) to i8*
	; arg 40
	%vr15688 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15689, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr15688
	%vr15692 = bitcast %FBSTRING* %vr15688 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15692, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D8
	%vr15695 = bitcast i8* bitcast ([16 x i8]* @Lt_09D8 to i8*) to i8*
	; arg 15
	%vr15694 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15695, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr15694
	%vr15698 = bitcast %FBSTRING* %vr15694 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15698, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09D9
	%vr15701 = bitcast i8* bitcast ([93 x i8]* @Lt_09D9 to i8*) to i8*
	; arg 92
	%vr15700 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15701, i64 92 )

	; call fb_PrintString()
	; arg 1
	; arg vr15700
	%vr15704 = bitcast %FBSTRING* %vr15700 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15704, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DA
	%vr15707 = bitcast i8* bitcast ([19 x i8]* @Lt_09DA to i8*) to i8*
	; arg 18
	%vr15706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15707, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr15706
	%vr15710 = bitcast %FBSTRING* %vr15706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15710, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DB
	%vr15713 = bitcast i8* bitcast ([89 x i8]* @Lt_09DB to i8*) to i8*
	; arg 88
	%vr15712 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15713, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr15712
	%vr15716 = bitcast %FBSTRING* %vr15712 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15716, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr15719 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr15718 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15719, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15718
	%vr15722 = bitcast %FBSTRING* %vr15718 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15722, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15725 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15724 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15725, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15724
	%vr15728 = bitcast %FBSTRING* %vr15724 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15728, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DC
	%vr15731 = bitcast i8* bitcast ([41 x i8]* @Lt_09DC to i8*) to i8*
	; arg 40
	%vr15730 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15731, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr15730
	%vr15734 = bitcast %FBSTRING* %vr15730 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15734, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09CF
	%vr15737 = bitcast i8* bitcast ([27 x i8]* @Lt_09CF to i8*) to i8*
	; arg 26
	%vr15736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15737, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr15736
	%vr15740 = bitcast %FBSTRING* %vr15736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15740, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DD
	%vr15743 = bitcast i8* bitcast ([28 x i8]* @Lt_09DD to i8*) to i8*
	; arg 27
	%vr15742 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15743, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr15742
	%vr15746 = bitcast %FBSTRING* %vr15742 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15746, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DE
	%vr15749 = bitcast i8* bitcast ([16 x i8]* @Lt_09DE to i8*) to i8*
	; arg 15
	%vr15748 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15749, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr15748
	%vr15752 = bitcast %FBSTRING* %vr15748 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15752, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09DF
	%vr15755 = bitcast i8* bitcast ([80 x i8]* @Lt_09DF to i8*) to i8*
	; arg 79
	%vr15754 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15755, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr15754
	%vr15758 = bitcast %FBSTRING* %vr15754 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15758, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E0
	%vr15761 = bitcast i8* bitcast ([86 x i8]* @Lt_09E0 to i8*) to i8*
	; arg 85
	%vr15760 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15761, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr15760
	%vr15764 = bitcast %FBSTRING* %vr15760 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15764, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E1
	%vr15767 = bitcast i8* bitcast ([37 x i8]* @Lt_09E1 to i8*) to i8*
	; arg 36
	%vr15766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15767, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15766
	%vr15770 = bitcast %FBSTRING* %vr15766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15770, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E2
	%vr15773 = bitcast i8* bitcast ([39 x i8]* @Lt_09E2 to i8*) to i8*
	; arg 38
	%vr15772 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15773, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr15772
	%vr15776 = bitcast %FBSTRING* %vr15772 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15776, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E3
	%vr15779 = bitcast i8* bitcast ([37 x i8]* @Lt_09E3 to i8*) to i8*
	; arg 36
	%vr15778 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15779, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15778
	%vr15782 = bitcast %FBSTRING* %vr15778 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15782, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E4
	%vr15785 = bitcast i8* bitcast ([44 x i8]* @Lt_09E4 to i8*) to i8*
	; arg 43
	%vr15784 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15785, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr15784
	%vr15788 = bitcast %FBSTRING* %vr15784 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15788, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15791 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15790 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15791, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15790
	%vr15794 = bitcast %FBSTRING* %vr15790 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15794, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr15797 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr15796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15797, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15796
	%vr15800 = bitcast %FBSTRING* %vr15796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15800, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr15803 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr15802 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15803, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr15802
	%vr15806 = bitcast %FBSTRING* %vr15802 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15806, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E5
	%vr15809 = bitcast i8* bitcast ([21 x i8]* @Lt_09E5 to i8*) to i8*
	; arg 20
	%vr15808 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15809, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15808
	%vr15812 = bitcast %FBSTRING* %vr15808 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15812, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15815 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15814 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15815, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15814
	%vr15818 = bitcast %FBSTRING* %vr15814 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15818, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15821 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15820 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15821, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15820
	%vr15824 = bitcast %FBSTRING* %vr15820 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15824, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr15827 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr15826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15827, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr15826
	%vr15830 = bitcast %FBSTRING* %vr15826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15830, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15833 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15832 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15833, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15832
	%vr15836 = bitcast %FBSTRING* %vr15832 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15836, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15839 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15838 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15839, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15838
	%vr15842 = bitcast %FBSTRING* %vr15838 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15842, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E6
	%vr15845 = bitcast i8* bitcast ([29 x i8]* @Lt_09E6 to i8*) to i8*
	; arg 28
	%vr15844 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15845, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr15844
	%vr15848 = bitcast %FBSTRING* %vr15844 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15848, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr15851 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr15850 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15851, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15850
	%vr15854 = bitcast %FBSTRING* %vr15850 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15854, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E7
	%vr15857 = bitcast i8* bitcast ([21 x i8]* @Lt_09E7 to i8*) to i8*
	; arg 20
	%vr15856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15857, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15856
	%vr15860 = bitcast %FBSTRING* %vr15856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15860, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E8
	%vr15863 = bitcast i8* bitcast ([21 x i8]* @Lt_09E8 to i8*) to i8*
	; arg 20
	%vr15862 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15863, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr15862
	%vr15866 = bitcast %FBSTRING* %vr15862 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15866, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09E9
	%vr15869 = bitcast i8* bitcast ([48 x i8]* @Lt_09E9 to i8*) to i8*
	; arg 47
	%vr15868 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15869, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr15868
	%vr15872 = bitcast %FBSTRING* %vr15868 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15872, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EA
	%vr15875 = bitcast i8* bitcast ([47 x i8]* @Lt_09EA to i8*) to i8*
	; arg 46
	%vr15874 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15875, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr15874
	%vr15878 = bitcast %FBSTRING* %vr15874 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15878, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EB
	%vr15881 = bitcast i8* bitcast ([47 x i8]* @Lt_09EB to i8*) to i8*
	; arg 46
	%vr15880 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15881, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr15880
	%vr15884 = bitcast %FBSTRING* %vr15880 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15884, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15887 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15887, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15886
	%vr15890 = bitcast %FBSTRING* %vr15886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15890, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EC
	%vr15893 = bitcast i8* bitcast ([18 x i8]* @Lt_09EC to i8*) to i8*
	; arg 17
	%vr15892 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15893, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr15892
	%vr15896 = bitcast %FBSTRING* %vr15892 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15896, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09ED
	%vr15899 = bitcast i8* bitcast ([29 x i8]* @Lt_09ED to i8*) to i8*
	; arg 28
	%vr15898 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15899, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr15898
	%vr15902 = bitcast %FBSTRING* %vr15898 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15902, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EE
	%vr15905 = bitcast i8* bitcast ([34 x i8]* @Lt_09EE to i8*) to i8*
	; arg 33
	%vr15904 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15905, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr15904
	%vr15908 = bitcast %FBSTRING* %vr15904 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15908, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr15911 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr15910 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15911, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15910
	%vr15914 = bitcast %FBSTRING* %vr15910 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15914, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09EF
	%vr15917 = bitcast i8* bitcast ([34 x i8]* @Lt_09EF to i8*) to i8*
	; arg 33
	%vr15916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15917, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr15916
	%vr15920 = bitcast %FBSTRING* %vr15916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15920, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F0
	%vr15923 = bitcast i8* bitcast ([34 x i8]* @Lt_09F0 to i8*) to i8*
	; arg 33
	%vr15922 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15923, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr15922
	%vr15926 = bitcast %FBSTRING* %vr15922 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15926, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F1
	%vr15929 = bitcast i8* bitcast ([49 x i8]* @Lt_09F1 to i8*) to i8*
	; arg 48
	%vr15928 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15929, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr15928
	%vr15932 = bitcast %FBSTRING* %vr15928 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15932, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15935 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15934 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15935, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15934
	%vr15938 = bitcast %FBSTRING* %vr15934 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15938, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F2
	%vr15941 = bitcast i8* bitcast ([71 x i8]* @Lt_09F2 to i8*) to i8*
	; arg 70
	%vr15940 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15941, i64 70 )

	; call fb_PrintString()
	; arg 1
	; arg vr15940
	%vr15944 = bitcast %FBSTRING* %vr15940 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15944, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F3
	%vr15947 = bitcast i8* bitcast ([37 x i8]* @Lt_09F3 to i8*) to i8*
	; arg 36
	%vr15946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15947, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr15946
	%vr15950 = bitcast %FBSTRING* %vr15946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15950, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr15953 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr15952 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15953, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr15952
	%vr15956 = bitcast %FBSTRING* %vr15952 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15956, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr15959 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr15958 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15959, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr15958
	%vr15962 = bitcast %FBSTRING* %vr15958 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15962, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F4
	%vr15965 = bitcast i8* bitcast ([43 x i8]* @Lt_09F4 to i8*) to i8*
	; arg 42
	%vr15964 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15965, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr15964
	%vr15968 = bitcast %FBSTRING* %vr15964 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15968, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr15971 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr15970 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15971, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15970
	%vr15974 = bitcast %FBSTRING* %vr15970 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15974, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr15977 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr15976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15977, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr15976
	%vr15980 = bitcast %FBSTRING* %vr15976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15980, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F5
	%vr15983 = bitcast i8* bitcast ([30 x i8]* @Lt_09F5 to i8*) to i8*
	; arg 29
	%vr15982 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15983, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr15982
	%vr15986 = bitcast %FBSTRING* %vr15982 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15986, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr15989 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr15988 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15989, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr15988
	%vr15992 = bitcast %FBSTRING* %vr15988 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15992, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F6
	%vr15995 = bitcast i8* bitcast ([50 x i8]* @Lt_09F6 to i8*) to i8*
	; arg 49
	%vr15994 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr15995, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr15994
	%vr15998 = bitcast %FBSTRING* %vr15994 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr15998, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F7
	%vr16001 = bitcast i8* bitcast ([52 x i8]* @Lt_09F7 to i8*) to i8*
	; arg 51
	%vr16000 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16001, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16000
	%vr16004 = bitcast %FBSTRING* %vr16000 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16004, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F8
	%vr16007 = bitcast i8* bitcast ([52 x i8]* @Lt_09F8 to i8*) to i8*
	; arg 51
	%vr16006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16007, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16006
	%vr16010 = bitcast %FBSTRING* %vr16006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16010, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09F9
	%vr16013 = bitcast i8* bitcast ([53 x i8]* @Lt_09F9 to i8*) to i8*
	; arg 52
	%vr16012 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16013, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr16012
	%vr16016 = bitcast %FBSTRING* %vr16012 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16016, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FA
	%vr16019 = bitcast i8* bitcast ([52 x i8]* @Lt_09FA to i8*) to i8*
	; arg 51
	%vr16018 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16019, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16018
	%vr16022 = bitcast %FBSTRING* %vr16018 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16022, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FB
	%vr16025 = bitcast i8* bitcast ([49 x i8]* @Lt_09FB to i8*) to i8*
	; arg 48
	%vr16024 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16025, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16024
	%vr16028 = bitcast %FBSTRING* %vr16024 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16028, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FC
	%vr16031 = bitcast i8* bitcast ([50 x i8]* @Lt_09FC to i8*) to i8*
	; arg 49
	%vr16030 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16031, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr16030
	%vr16034 = bitcast %FBSTRING* %vr16030 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16034, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FD
	%vr16037 = bitcast i8* bitcast ([50 x i8]* @Lt_09FD to i8*) to i8*
	; arg 49
	%vr16036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16037, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr16036
	%vr16040 = bitcast %FBSTRING* %vr16036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16040, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FE
	%vr16043 = bitcast i8* bitcast ([50 x i8]* @Lt_09FE to i8*) to i8*
	; arg 49
	%vr16042 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16043, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr16042
	%vr16046 = bitcast %FBSTRING* %vr16042 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16046, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_09FF
	%vr16049 = bitcast i8* bitcast ([52 x i8]* @Lt_09FF to i8*) to i8*
	; arg 51
	%vr16048 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16049, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16048
	%vr16052 = bitcast %FBSTRING* %vr16048 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16052, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A00
	%vr16055 = bitcast i8* bitcast ([51 x i8]* @Lt_0A00 to i8*) to i8*
	; arg 50
	%vr16054 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16055, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr16054
	%vr16058 = bitcast %FBSTRING* %vr16054 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16058, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A01
	%vr16061 = bitcast i8* bitcast ([51 x i8]* @Lt_0A01 to i8*) to i8*
	; arg 50
	%vr16060 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16061, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr16060
	%vr16064 = bitcast %FBSTRING* %vr16060 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16064, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A02
	%vr16067 = bitcast i8* bitcast ([51 x i8]* @Lt_0A02 to i8*) to i8*
	; arg 50
	%vr16066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16067, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr16066
	%vr16070 = bitcast %FBSTRING* %vr16066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16070, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A03
	%vr16073 = bitcast i8* bitcast ([49 x i8]* @Lt_0A03 to i8*) to i8*
	; arg 48
	%vr16072 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16073, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16072
	%vr16076 = bitcast %FBSTRING* %vr16072 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16076, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A04
	%vr16079 = bitcast i8* bitcast ([48 x i8]* @Lt_0A04 to i8*) to i8*
	; arg 47
	%vr16078 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16079, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr16078
	%vr16082 = bitcast %FBSTRING* %vr16078 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16082, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16085 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16084 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16085, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16084
	%vr16088 = bitcast %FBSTRING* %vr16084 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16088, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16091 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16090 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16091, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16090
	%vr16094 = bitcast %FBSTRING* %vr16090 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16094, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A05
	%vr16097 = bitcast i8* bitcast ([22 x i8]* @Lt_0A05 to i8*) to i8*
	; arg 21
	%vr16096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16097, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr16096
	%vr16100 = bitcast %FBSTRING* %vr16096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16100, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16103 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16102 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16103, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16102
	%vr16106 = bitcast %FBSTRING* %vr16102 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16106, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A06
	%vr16109 = bitcast i8* bitcast ([35 x i8]* @Lt_0A06 to i8*) to i8*
	; arg 34
	%vr16108 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16109, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr16108
	%vr16112 = bitcast %FBSTRING* %vr16108 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16112, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A07
	%vr16115 = bitcast i8* bitcast ([26 x i8]* @Lt_0A07 to i8*) to i8*
	; arg 25
	%vr16114 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16115, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16114
	%vr16118 = bitcast %FBSTRING* %vr16114 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16118, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A08
	%vr16121 = bitcast i8* bitcast ([28 x i8]* @Lt_0A08 to i8*) to i8*
	; arg 27
	%vr16120 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16121, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr16120
	%vr16124 = bitcast %FBSTRING* %vr16120 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16124, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A09
	%vr16127 = bitcast i8* bitcast ([43 x i8]* @Lt_0A09 to i8*) to i8*
	; arg 42
	%vr16126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16127, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr16126
	%vr16130 = bitcast %FBSTRING* %vr16126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16130, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16133 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16132 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16133, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16132
	%vr16136 = bitcast %FBSTRING* %vr16132 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16136, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0A
	%vr16139 = bitcast i8* bitcast ([26 x i8]* @Lt_0A0A to i8*) to i8*
	; arg 25
	%vr16138 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16139, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16138
	%vr16142 = bitcast %FBSTRING* %vr16138 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16142, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0B
	%vr16145 = bitcast i8* bitcast ([27 x i8]* @Lt_0A0B to i8*) to i8*
	; arg 26
	%vr16144 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16145, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr16144
	%vr16148 = bitcast %FBSTRING* %vr16144 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16148, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0C
	%vr16151 = bitcast i8* bitcast ([39 x i8]* @Lt_0A0C to i8*) to i8*
	; arg 38
	%vr16150 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16151, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16150
	%vr16154 = bitcast %FBSTRING* %vr16150 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16154, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0D
	%vr16157 = bitcast i8* bitcast ([80 x i8]* @Lt_0A0D to i8*) to i8*
	; arg 79
	%vr16156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16157, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr16156
	%vr16160 = bitcast %FBSTRING* %vr16156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16160, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16163 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16162 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16163, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16162
	%vr16166 = bitcast %FBSTRING* %vr16162 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16166, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0E
	%vr16169 = bitcast i8* bitcast ([103 x i8]* @Lt_0A0E to i8*) to i8*
	; arg 102
	%vr16168 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16169, i64 102 )

	; call fb_PrintString()
	; arg 1
	; arg vr16168
	%vr16172 = bitcast %FBSTRING* %vr16168 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16172, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A0F
	%vr16175 = bitcast i8* bitcast ([111 x i8]* @Lt_0A0F to i8*) to i8*
	; arg 110
	%vr16174 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16175, i64 110 )

	; call fb_PrintString()
	; arg 1
	; arg vr16174
	%vr16178 = bitcast %FBSTRING* %vr16174 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16178, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16181 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16180 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16181, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16180
	%vr16184 = bitcast %FBSTRING* %vr16180 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16184, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A10
	%vr16187 = bitcast i8* bitcast ([101 x i8]* @Lt_0A10 to i8*) to i8*
	; arg 100
	%vr16186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16187, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr16186
	%vr16190 = bitcast %FBSTRING* %vr16186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16190, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16193 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16192 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16193, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16192
	%vr16196 = bitcast %FBSTRING* %vr16192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16196, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16199 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16198 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16199, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16198
	%vr16202 = bitcast %FBSTRING* %vr16198 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16202, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A11
	%vr16205 = bitcast i8* bitcast ([21 x i8]* @Lt_0A11 to i8*) to i8*
	; arg 20
	%vr16204 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16205, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr16204
	%vr16208 = bitcast %FBSTRING* %vr16204 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16208, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16211 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16210 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16211, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16210
	%vr16214 = bitcast %FBSTRING* %vr16210 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16214, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A12
	%vr16217 = bitcast i8* bitcast ([40 x i8]* @Lt_0A12 to i8*) to i8*
	; arg 39
	%vr16216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16217, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr16216
	%vr16220 = bitcast %FBSTRING* %vr16216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16220, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A13
	%vr16223 = bitcast i8* bitcast ([81 x i8]* @Lt_0A13 to i8*) to i8*
	; arg 80
	%vr16222 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16223, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr16222
	%vr16226 = bitcast %FBSTRING* %vr16222 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16226, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16229 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16228 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16229, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16228
	%vr16232 = bitcast %FBSTRING* %vr16228 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16232, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A14
	%vr16235 = bitcast i8* bitcast ([24 x i8]* @Lt_0A14 to i8*) to i8*
	; arg 23
	%vr16234 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16235, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16234
	%vr16238 = bitcast %FBSTRING* %vr16234 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16238, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16241 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16240 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16241, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16240
	%vr16244 = bitcast %FBSTRING* %vr16240 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16244, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A15
	%vr16247 = bitcast i8* bitcast ([84 x i8]* @Lt_0A15 to i8*) to i8*
	; arg 83
	%vr16246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16247, i64 83 )

	; call fb_PrintString()
	; arg 1
	; arg vr16246
	%vr16250 = bitcast %FBSTRING* %vr16246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16250, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16253 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16252 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16253, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16252
	%vr16256 = bitcast %FBSTRING* %vr16252 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16256, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A16
	%vr16259 = bitcast i8* bitcast ([98 x i8]* @Lt_0A16 to i8*) to i8*
	; arg 97
	%vr16258 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16259, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr16258
	%vr16262 = bitcast %FBSTRING* %vr16258 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16262, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A17
	%vr16265 = bitcast i8* bitcast ([26 x i8]* @Lt_0A17 to i8*) to i8*
	; arg 25
	%vr16264 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16265, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr16264
	%vr16268 = bitcast %FBSTRING* %vr16264 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16268, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16271 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16270 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16271, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16270
	%vr16274 = bitcast %FBSTRING* %vr16270 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16274, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A18
	%vr16277 = bitcast i8* bitcast ([31 x i8]* @Lt_0A18 to i8*) to i8*
	; arg 30
	%vr16276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16277, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr16276
	%vr16280 = bitcast %FBSTRING* %vr16276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16280, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16283 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16282 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16283, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16282
	%vr16286 = bitcast %FBSTRING* %vr16282 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16286, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16289 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16288 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16289, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16288
	%vr16292 = bitcast %FBSTRING* %vr16288 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16292, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A19
	%vr16295 = bitcast i8* bitcast ([19 x i8]* @Lt_0A19 to i8*) to i8*
	; arg 18
	%vr16294 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16295, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr16294
	%vr16298 = bitcast %FBSTRING* %vr16294 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16298, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16301 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16300 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16301, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16300
	%vr16304 = bitcast %FBSTRING* %vr16300 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16304, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1A
	%vr16307 = bitcast i8* bitcast ([41 x i8]* @Lt_0A1A to i8*) to i8*
	; arg 40
	%vr16306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16307, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr16306
	%vr16310 = bitcast %FBSTRING* %vr16306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16310, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1B
	%vr16313 = bitcast i8* bitcast ([43 x i8]* @Lt_0A1B to i8*) to i8*
	; arg 42
	%vr16312 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16313, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr16312
	%vr16316 = bitcast %FBSTRING* %vr16312 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16316, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1C
	%vr16319 = bitcast i8* bitcast ([90 x i8]* @Lt_0A1C to i8*) to i8*
	; arg 89
	%vr16318 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16319, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr16318
	%vr16322 = bitcast %FBSTRING* %vr16318 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16322, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1D
	%vr16325 = bitcast i8* bitcast ([76 x i8]* @Lt_0A1D to i8*) to i8*
	; arg 75
	%vr16324 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16325, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr16324
	%vr16328 = bitcast %FBSTRING* %vr16324 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16328, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1E
	%vr16331 = bitcast i8* bitcast ([52 x i8]* @Lt_0A1E to i8*) to i8*
	; arg 51
	%vr16330 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16331, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr16330
	%vr16334 = bitcast %FBSTRING* %vr16330 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16334, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16337 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16337, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16336
	%vr16340 = bitcast %FBSTRING* %vr16336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16340, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A1F
	%vr16343 = bitcast i8* bitcast ([40 x i8]* @Lt_0A1F to i8*) to i8*
	; arg 39
	%vr16342 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16343, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr16342
	%vr16346 = bitcast %FBSTRING* %vr16342 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16346, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A20
	%vr16349 = bitcast i8* bitcast ([85 x i8]* @Lt_0A20 to i8*) to i8*
	; arg 84
	%vr16348 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16349, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr16348
	%vr16352 = bitcast %FBSTRING* %vr16348 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16352, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A21
	%vr16355 = bitcast i8* bitcast ([88 x i8]* @Lt_0A21 to i8*) to i8*
	; arg 87
	%vr16354 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16355, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr16354
	%vr16358 = bitcast %FBSTRING* %vr16354 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16358, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A22
	%vr16361 = bitcast i8* bitcast ([114 x i8]* @Lt_0A22 to i8*) to i8*
	; arg 113
	%vr16360 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16361, i64 113 )

	; call fb_PrintString()
	; arg 1
	; arg vr16360
	%vr16364 = bitcast %FBSTRING* %vr16360 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16364, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16367 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16367, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16366
	%vr16370 = bitcast %FBSTRING* %vr16366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16370, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A23
	%vr16373 = bitcast i8* bitcast ([43 x i8]* @Lt_0A23 to i8*) to i8*
	; arg 42
	%vr16372 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16373, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr16372
	%vr16376 = bitcast %FBSTRING* %vr16372 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16376, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A24
	%vr16379 = bitcast i8* bitcast ([88 x i8]* @Lt_0A24 to i8*) to i8*
	; arg 87
	%vr16378 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16379, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr16378
	%vr16382 = bitcast %FBSTRING* %vr16378 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16382, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A25
	%vr16385 = bitcast i8* bitcast ([92 x i8]* @Lt_0A25 to i8*) to i8*
	; arg 91
	%vr16384 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16385, i64 91 )

	; call fb_PrintString()
	; arg 1
	; arg vr16384
	%vr16388 = bitcast %FBSTRING* %vr16384 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16388, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A26
	%vr16391 = bitcast i8* bitcast ([102 x i8]* @Lt_0A26 to i8*) to i8*
	; arg 101
	%vr16390 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16391, i64 101 )

	; call fb_PrintString()
	; arg 1
	; arg vr16390
	%vr16394 = bitcast %FBSTRING* %vr16390 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16394, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16397 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16397, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16396
	%vr16400 = bitcast %FBSTRING* %vr16396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16400, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A27
	%vr16403 = bitcast i8* bitcast ([65 x i8]* @Lt_0A27 to i8*) to i8*
	; arg 64
	%vr16402 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16403, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr16402
	%vr16406 = bitcast %FBSTRING* %vr16402 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16406, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16409 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16408 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16409, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16408
	%vr16412 = bitcast %FBSTRING* %vr16408 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16412, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16415 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16414 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16415, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16414
	%vr16418 = bitcast %FBSTRING* %vr16414 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16418, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A28
	%vr16421 = bitcast i8* bitcast ([18 x i8]* @Lt_0A28 to i8*) to i8*
	; arg 17
	%vr16420 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16421, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr16420
	%vr16424 = bitcast %FBSTRING* %vr16420 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16424, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16427 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16427, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16426
	%vr16430 = bitcast %FBSTRING* %vr16426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16430, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A29
	%vr16433 = bitcast i8* bitcast ([46 x i8]* @Lt_0A29 to i8*) to i8*
	; arg 45
	%vr16432 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16433, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr16432
	%vr16436 = bitcast %FBSTRING* %vr16432 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16436, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2A
	%vr16439 = bitcast i8* bitcast ([86 x i8]* @Lt_0A2A to i8*) to i8*
	; arg 85
	%vr16438 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16439, i64 85 )

	; call fb_PrintString()
	; arg 1
	; arg vr16438
	%vr16442 = bitcast %FBSTRING* %vr16438 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16442, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2B
	%vr16445 = bitcast i8* bitcast ([68 x i8]* @Lt_0A2B to i8*) to i8*
	; arg 67
	%vr16444 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16445, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr16444
	%vr16448 = bitcast %FBSTRING* %vr16444 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16448, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16451 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16450 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16451, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16450
	%vr16454 = bitcast %FBSTRING* %vr16450 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16454, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2C
	%vr16457 = bitcast i8* bitcast ([81 x i8]* @Lt_0A2C to i8*) to i8*
	; arg 80
	%vr16456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16457, i64 80 )

	; call fb_PrintString()
	; arg 1
	; arg vr16456
	%vr16460 = bitcast %FBSTRING* %vr16456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16460, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2D
	%vr16463 = bitcast i8* bitcast ([53 x i8]* @Lt_0A2D to i8*) to i8*
	; arg 52
	%vr16462 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16463, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr16462
	%vr16466 = bitcast %FBSTRING* %vr16462 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16466, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2E
	%vr16469 = bitcast i8* bitcast ([38 x i8]* @Lt_0A2E to i8*) to i8*
	; arg 37
	%vr16468 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16469, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16468
	%vr16472 = bitcast %FBSTRING* %vr16468 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16472, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A2F
	%vr16475 = bitcast i8* bitcast ([54 x i8]* @Lt_0A2F to i8*) to i8*
	; arg 53
	%vr16474 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16475, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr16474
	%vr16478 = bitcast %FBSTRING* %vr16474 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16478, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A30
	%vr16481 = bitcast i8* bitcast ([38 x i8]* @Lt_0A30 to i8*) to i8*
	; arg 37
	%vr16480 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16481, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16480
	%vr16484 = bitcast %FBSTRING* %vr16480 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16484, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A31
	%vr16487 = bitcast i8* bitcast ([44 x i8]* @Lt_0A31 to i8*) to i8*
	; arg 43
	%vr16486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16487, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr16486
	%vr16490 = bitcast %FBSTRING* %vr16486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16490, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A32
	%vr16493 = bitcast i8* bitcast ([82 x i8]* @Lt_0A32 to i8*) to i8*
	; arg 81
	%vr16492 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16493, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr16492
	%vr16496 = bitcast %FBSTRING* %vr16492 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16496, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A33
	%vr16499 = bitcast i8* bitcast ([42 x i8]* @Lt_0A33 to i8*) to i8*
	; arg 41
	%vr16498 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16499, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr16498
	%vr16502 = bitcast %FBSTRING* %vr16498 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16502, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A35
	%vr16505 = bitcast i8* bitcast ([142 x i8]* @Lt_0A35 to i8*) to i8*
	; arg 141
	%vr16504 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16505, i64 141 )

	; call fb_PrintString()
	; arg 1
	; arg vr16504
	%vr16508 = bitcast %FBSTRING* %vr16504 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16508, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16511 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16510 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16511, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16510
	%vr16514 = bitcast %FBSTRING* %vr16510 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16514, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A36
	%vr16517 = bitcast i8* bitcast ([55 x i8]* @Lt_0A36 to i8*) to i8*
	; arg 54
	%vr16516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16517, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr16516
	%vr16520 = bitcast %FBSTRING* %vr16516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16520, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16523 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16522 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16523, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16522
	%vr16526 = bitcast %FBSTRING* %vr16522 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16526, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16529 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16528 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16529, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16528
	%vr16532 = bitcast %FBSTRING* %vr16528 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16532, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A37
	%vr16535 = bitcast i8* bitcast ([31 x i8]* @Lt_0A37 to i8*) to i8*
	; arg 30
	%vr16534 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16535, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr16534
	%vr16538 = bitcast %FBSTRING* %vr16534 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16538, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A38
	%vr16541 = bitcast i8* bitcast ([30 x i8]* @Lt_0A38 to i8*) to i8*
	; arg 29
	%vr16540 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16541, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr16540
	%vr16544 = bitcast %FBSTRING* %vr16540 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16544, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_098F
	%vr16547 = bitcast i8* bitcast ([16 x i8]* @Lt_098F to i8*) to i8*
	; arg 15
	%vr16546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16547, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr16546
	%vr16550 = bitcast %FBSTRING* %vr16546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16550, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16553 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16552 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16553, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16552
	%vr16556 = bitcast %FBSTRING* %vr16552 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16556, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16559 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16558 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16559, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16558
	%vr16562 = bitcast %FBSTRING* %vr16558 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16562, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A39
	%vr16565 = bitcast i8* bitcast ([49 x i8]* @Lt_0A39 to i8*) to i8*
	; arg 48
	%vr16564 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16565, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr16564
	%vr16568 = bitcast %FBSTRING* %vr16564 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16568, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16571 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16570 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16571, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16570
	%vr16574 = bitcast %FBSTRING* %vr16570 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16574, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr16577 = bitcast i8* bitcast ([36 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 35
	%vr16576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16577, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16576
	%vr16580 = bitcast %FBSTRING* %vr16576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16580, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16583 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16582 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16583, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16582
	%vr16586 = bitcast %FBSTRING* %vr16582 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16586, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3B
	%vr16589 = bitcast i8* bitcast ([33 x i8]* @Lt_0A3B to i8*) to i8*
	; arg 32
	%vr16588 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16589, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16588
	%vr16592 = bitcast %FBSTRING* %vr16588 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16592, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16595 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16594 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16595, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16594
	%vr16598 = bitcast %FBSTRING* %vr16594 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16598, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr16601 = bitcast i8* bitcast ([36 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 35
	%vr16600 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16601, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16600
	%vr16604 = bitcast %FBSTRING* %vr16600 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16604, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16607 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16607, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16606
	%vr16610 = bitcast %FBSTRING* %vr16606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16610, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3C
	%vr16613 = bitcast i8* bitcast ([25 x i8]* @Lt_0A3C to i8*) to i8*
	; arg 24
	%vr16612 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16613, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr16612
	%vr16616 = bitcast %FBSTRING* %vr16612 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16616, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3D
	%vr16619 = bitcast i8* bitcast ([25 x i8]* @Lt_0A3D to i8*) to i8*
	; arg 24
	%vr16618 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16619, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr16618
	%vr16622 = bitcast %FBSTRING* %vr16618 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16622, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16625 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16624 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16625, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16624
	%vr16628 = bitcast %FBSTRING* %vr16624 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16628, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3E
	%vr16631 = bitcast i8* bitcast ([18 x i8]* @Lt_0A3E to i8*) to i8*
	; arg 17
	%vr16630 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16631, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr16630
	%vr16634 = bitcast %FBSTRING* %vr16630 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16634, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3F
	%vr16637 = bitcast i8* bitcast ([68 x i8]* @Lt_0A3F to i8*) to i8*
	; arg 67
	%vr16636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16637, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr16636
	%vr16640 = bitcast %FBSTRING* %vr16636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16640, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A40
	%vr16643 = bitcast i8* bitcast ([38 x i8]* @Lt_0A40 to i8*) to i8*
	; arg 37
	%vr16642 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16643, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16642
	%vr16646 = bitcast %FBSTRING* %vr16642 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16646, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr16649 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr16648 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16649, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16648
	%vr16652 = bitcast %FBSTRING* %vr16648 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16652, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A41
	%vr16655 = bitcast i8* bitcast ([58 x i8]* @Lt_0A41 to i8*) to i8*
	; arg 57
	%vr16654 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16655, i64 57 )

	; call fb_PrintString()
	; arg 1
	; arg vr16654
	%vr16658 = bitcast %FBSTRING* %vr16654 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16658, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A42
	%vr16661 = bitcast i8* bitcast ([24 x i8]* @Lt_0A42 to i8*) to i8*
	; arg 23
	%vr16660 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16661, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr16660
	%vr16664 = bitcast %FBSTRING* %vr16660 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16664, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr16667 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr16666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16667, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16666
	%vr16670 = bitcast %FBSTRING* %vr16666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16670, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16673 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16672 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16673, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16672
	%vr16676 = bitcast %FBSTRING* %vr16672 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16676, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr16679 = bitcast i8* bitcast ([36 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 35
	%vr16678 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16679, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16678
	%vr16682 = bitcast %FBSTRING* %vr16678 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16682, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16685 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16684 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16685, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16684
	%vr16688 = bitcast %FBSTRING* %vr16684 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16688, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A43
	%vr16691 = bitcast i8* bitcast ([68 x i8]* @Lt_0A43 to i8*) to i8*
	; arg 67
	%vr16690 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16691, i64 67 )

	; call fb_PrintString()
	; arg 1
	; arg vr16690
	%vr16694 = bitcast %FBSTRING* %vr16690 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16694, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A40
	%vr16697 = bitcast i8* bitcast ([38 x i8]* @Lt_0A40 to i8*) to i8*
	; arg 37
	%vr16696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16697, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16696
	%vr16700 = bitcast %FBSTRING* %vr16696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16700, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr16703 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr16702 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16703, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16702
	%vr16706 = bitcast %FBSTRING* %vr16702 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16706, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A44
	%vr16709 = bitcast i8* bitcast ([77 x i8]* @Lt_0A44 to i8*) to i8*
	; arg 76
	%vr16708 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16709, i64 76 )

	; call fb_PrintString()
	; arg 1
	; arg vr16708
	%vr16712 = bitcast %FBSTRING* %vr16708 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16712, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr16715 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr16714 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16715, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr16714
	%vr16718 = bitcast %FBSTRING* %vr16714 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16718, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16721 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16720 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16721, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16720
	%vr16724 = bitcast %FBSTRING* %vr16720 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16724, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr16727 = bitcast i8* bitcast ([36 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 35
	%vr16726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16727, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16726
	%vr16730 = bitcast %FBSTRING* %vr16726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16730, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16733 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16732 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16733, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16732
	%vr16736 = bitcast %FBSTRING* %vr16732 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16736, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A45
	%vr16739 = bitcast i8* bitcast ([47 x i8]* @Lt_0A45 to i8*) to i8*
	; arg 46
	%vr16738 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16739, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr16738
	%vr16742 = bitcast %FBSTRING* %vr16738 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16742, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A46
	%vr16745 = bitcast i8* bitcast ([47 x i8]* @Lt_0A46 to i8*) to i8*
	; arg 46
	%vr16744 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16745, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr16744
	%vr16748 = bitcast %FBSTRING* %vr16744 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16748, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16751 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16750 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16751, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16750
	%vr16754 = bitcast %FBSTRING* %vr16750 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16754, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A3A
	%vr16757 = bitcast i8* bitcast ([36 x i8]* @Lt_0A3A to i8*) to i8*
	; arg 35
	%vr16756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16757, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16756
	%vr16760 = bitcast %FBSTRING* %vr16756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16760, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16763 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16762 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16763, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16762
	%vr16766 = bitcast %FBSTRING* %vr16762 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16766, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A47
	%vr16769 = bitcast i8* bitcast ([34 x i8]* @Lt_0A47 to i8*) to i8*
	; arg 33
	%vr16768 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16769, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr16768
	%vr16772 = bitcast %FBSTRING* %vr16768 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16772, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16775 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16774 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16775, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16774
	%vr16778 = bitcast %FBSTRING* %vr16774 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16778, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A48
	%vr16781 = bitcast i8* bitcast ([90 x i8]* @Lt_0A48 to i8*) to i8*
	; arg 89
	%vr16780 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16781, i64 89 )

	; call fb_PrintString()
	; arg 1
	; arg vr16780
	%vr16784 = bitcast %FBSTRING* %vr16780 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16784, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16787 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16787, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16786
	%vr16790 = bitcast %FBSTRING* %vr16786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16790, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A49
	%vr16793 = bitcast i8* bitcast ([64 x i8]* @Lt_0A49 to i8*) to i8*
	; arg 63
	%vr16792 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16793, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr16792
	%vr16796 = bitcast %FBSTRING* %vr16792 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16796, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16799 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16798 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16799, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16798
	%vr16802 = bitcast %FBSTRING* %vr16798 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16802, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4A
	%vr16805 = bitcast i8* bitcast ([35 x i8]* @Lt_0A4A to i8*) to i8*
	; arg 34
	%vr16804 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16805, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr16804
	%vr16808 = bitcast %FBSTRING* %vr16804 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16808, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16811 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16810 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16811, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16810
	%vr16814 = bitcast %FBSTRING* %vr16810 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16814, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16817 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16817, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16816
	%vr16820 = bitcast %FBSTRING* %vr16816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16820, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4B
	%vr16823 = bitcast i8* bitcast ([51 x i8]* @Lt_0A4B to i8*) to i8*
	; arg 50
	%vr16822 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16823, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr16822
	%vr16826 = bitcast %FBSTRING* %vr16822 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16826, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16829 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16828 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16829, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16828
	%vr16832 = bitcast %FBSTRING* %vr16828 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16832, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4C
	%vr16835 = bitcast i8* bitcast ([29 x i8]* @Lt_0A4C to i8*) to i8*
	; arg 28
	%vr16834 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16835, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr16834
	%vr16838 = bitcast %FBSTRING* %vr16834 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16838, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4D
	%vr16841 = bitcast i8* bitcast ([39 x i8]* @Lt_0A4D to i8*) to i8*
	; arg 38
	%vr16840 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16841, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr16840
	%vr16844 = bitcast %FBSTRING* %vr16840 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16844, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4E
	%vr16847 = bitcast i8* bitcast ([38 x i8]* @Lt_0A4E to i8*) to i8*
	; arg 37
	%vr16846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16847, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16846
	%vr16850 = bitcast %FBSTRING* %vr16846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16850, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A4F
	%vr16853 = bitcast i8* bitcast ([38 x i8]* @Lt_0A4F to i8*) to i8*
	; arg 37
	%vr16852 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16853, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16852
	%vr16856 = bitcast %FBSTRING* %vr16852 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16856, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A50
	%vr16859 = bitcast i8* bitcast ([31 x i8]* @Lt_0A50 to i8*) to i8*
	; arg 30
	%vr16858 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16859, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr16858
	%vr16862 = bitcast %FBSTRING* %vr16858 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16862, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16865 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16864 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16865, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16864
	%vr16868 = bitcast %FBSTRING* %vr16864 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16868, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16871 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16870 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16871, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16870
	%vr16874 = bitcast %FBSTRING* %vr16870 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16874, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A51
	%vr16877 = bitcast i8* bitcast ([41 x i8]* @Lt_0A51 to i8*) to i8*
	; arg 40
	%vr16876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16877, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr16876
	%vr16880 = bitcast %FBSTRING* %vr16876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16880, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16883 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16882 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16883, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16882
	%vr16886 = bitcast %FBSTRING* %vr16882 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16886, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A52
	%vr16889 = bitcast i8* bitcast ([31 x i8]* @Lt_0A52 to i8*) to i8*
	; arg 30
	%vr16888 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16889, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr16888
	%vr16892 = bitcast %FBSTRING* %vr16888 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16892, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16895 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16894 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16895, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16894
	%vr16898 = bitcast %FBSTRING* %vr16894 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16898, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A53
	%vr16901 = bitcast i8* bitcast ([33 x i8]* @Lt_0A53 to i8*) to i8*
	; arg 32
	%vr16900 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16901, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr16900
	%vr16904 = bitcast %FBSTRING* %vr16900 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16904, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr16907 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr16906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16907, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr16906
	%vr16910 = bitcast %FBSTRING* %vr16906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16910, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A54
	%vr16913 = bitcast i8* bitcast ([38 x i8]* @Lt_0A54 to i8*) to i8*
	; arg 37
	%vr16912 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16913, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr16912
	%vr16916 = bitcast %FBSTRING* %vr16912 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16916, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A55
	%vr16919 = bitcast i8* bitcast ([41 x i8]* @Lt_0A55 to i8*) to i8*
	; arg 40
	%vr16918 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16919, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr16918
	%vr16922 = bitcast %FBSTRING* %vr16918 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16922, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A56
	%vr16925 = bitcast i8* bitcast ([41 x i8]* @Lt_0A56 to i8*) to i8*
	; arg 40
	%vr16924 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16925, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr16924
	%vr16928 = bitcast %FBSTRING* %vr16924 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16928, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16931 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16930 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16931, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16930
	%vr16934 = bitcast %FBSTRING* %vr16930 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16934, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16937 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16937, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16936
	%vr16940 = bitcast %FBSTRING* %vr16936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16940, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A57
	%vr16943 = bitcast i8* bitcast ([29 x i8]* @Lt_0A57 to i8*) to i8*
	; arg 28
	%vr16942 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16943, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr16942
	%vr16946 = bitcast %FBSTRING* %vr16942 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16946, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16949 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16948 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16949, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16948
	%vr16952 = bitcast %FBSTRING* %vr16948 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16952, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A58
	%vr16955 = bitcast i8* bitcast ([56 x i8]* @Lt_0A58 to i8*) to i8*
	; arg 55
	%vr16954 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16955, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr16954
	%vr16958 = bitcast %FBSTRING* %vr16954 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16958, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A59
	%vr16961 = bitcast i8* bitcast ([95 x i8]* @Lt_0A59 to i8*) to i8*
	; arg 94
	%vr16960 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16961, i64 94 )

	; call fb_PrintString()
	; arg 1
	; arg vr16960
	%vr16964 = bitcast %FBSTRING* %vr16960 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16964, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr16967 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr16966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16967, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16966
	%vr16970 = bitcast %FBSTRING* %vr16966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16970, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr16973 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr16972 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16973, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr16972
	%vr16976 = bitcast %FBSTRING* %vr16972 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16976, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5A
	%vr16979 = bitcast i8* bitcast ([21 x i8]* @Lt_0A5A to i8*) to i8*
	; arg 20
	%vr16978 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16979, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr16978
	%vr16982 = bitcast %FBSTRING* %vr16978 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16982, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr16985 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr16984 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16985, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr16984
	%vr16988 = bitcast %FBSTRING* %vr16984 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16988, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5B
	%vr16991 = bitcast i8* bitcast ([36 x i8]* @Lt_0A5B to i8*) to i8*
	; arg 35
	%vr16990 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16991, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr16990
	%vr16994 = bitcast %FBSTRING* %vr16990 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr16994, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5C
	%vr16997 = bitcast i8* bitcast ([37 x i8]* @Lt_0A5C to i8*) to i8*
	; arg 36
	%vr16996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr16997, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr16996
	%vr17000 = bitcast %FBSTRING* %vr16996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17000, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5D
	%vr17003 = bitcast i8* bitcast ([36 x i8]* @Lt_0A5D to i8*) to i8*
	; arg 35
	%vr17002 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17003, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr17002
	%vr17006 = bitcast %FBSTRING* %vr17002 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17006, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5E
	%vr17009 = bitcast i8* bitcast ([105 x i8]* @Lt_0A5E to i8*) to i8*
	; arg 104
	%vr17008 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17009, i64 104 )

	; call fb_PrintString()
	; arg 1
	; arg vr17008
	%vr17012 = bitcast %FBSTRING* %vr17008 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17012, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A5F
	%vr17015 = bitcast i8* bitcast ([48 x i8]* @Lt_0A5F to i8*) to i8*
	; arg 47
	%vr17014 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17015, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17014
	%vr17018 = bitcast %FBSTRING* %vr17014 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17018, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A60
	%vr17021 = bitcast i8* bitcast ([48 x i8]* @Lt_0A60 to i8*) to i8*
	; arg 47
	%vr17020 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17021, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17020
	%vr17024 = bitcast %FBSTRING* %vr17020 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17024, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A61
	%vr17027 = bitcast i8* bitcast ([48 x i8]* @Lt_0A61 to i8*) to i8*
	; arg 47
	%vr17026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17027, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17026
	%vr17030 = bitcast %FBSTRING* %vr17026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17030, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A62
	%vr17033 = bitcast i8* bitcast ([43 x i8]* @Lt_0A62 to i8*) to i8*
	; arg 42
	%vr17032 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17033, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr17032
	%vr17036 = bitcast %FBSTRING* %vr17032 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17036, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17039 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17038 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17039, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17038
	%vr17042 = bitcast %FBSTRING* %vr17038 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17042, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17045 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17044 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17045, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17044
	%vr17048 = bitcast %FBSTRING* %vr17044 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17048, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A63
	%vr17051 = bitcast i8* bitcast ([20 x i8]* @Lt_0A63 to i8*) to i8*
	; arg 19
	%vr17050 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17051, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr17050
	%vr17054 = bitcast %FBSTRING* %vr17050 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17054, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17057 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17057, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17056
	%vr17060 = bitcast %FBSTRING* %vr17056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17060, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A64
	%vr17063 = bitcast i8* bitcast ([46 x i8]* @Lt_0A64 to i8*) to i8*
	; arg 45
	%vr17062 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17063, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr17062
	%vr17066 = bitcast %FBSTRING* %vr17062 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17066, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17069 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17068 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17069, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17068
	%vr17072 = bitcast %FBSTRING* %vr17068 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17072, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17075 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17074 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17075, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17074
	%vr17078 = bitcast %FBSTRING* %vr17074 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17078, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A65
	%vr17081 = bitcast i8* bitcast ([34 x i8]* @Lt_0A65 to i8*) to i8*
	; arg 33
	%vr17080 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17081, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr17080
	%vr17084 = bitcast %FBSTRING* %vr17080 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17084, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17087 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17087, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17086
	%vr17090 = bitcast %FBSTRING* %vr17086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17090, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A66
	%vr17093 = bitcast i8* bitcast ([40 x i8]* @Lt_0A66 to i8*) to i8*
	; arg 39
	%vr17092 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17093, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr17092
	%vr17096 = bitcast %FBSTRING* %vr17092 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17096, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A67
	%vr17099 = bitcast i8* bitcast ([16 x i8]* @Lt_0A67 to i8*) to i8*
	; arg 15
	%vr17098 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17099, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr17098
	%vr17102 = bitcast %FBSTRING* %vr17098 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17102, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A68
	%vr17105 = bitcast i8* bitcast ([22 x i8]* @Lt_0A68 to i8*) to i8*
	; arg 21
	%vr17104 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17105, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr17104
	%vr17108 = bitcast %FBSTRING* %vr17104 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17108, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr17111 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr17110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17111, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17110
	%vr17114 = bitcast %FBSTRING* %vr17110 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17114, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A69
	%vr17117 = bitcast i8* bitcast ([25 x i8]* @Lt_0A69 to i8*) to i8*
	; arg 24
	%vr17116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17117, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr17116
	%vr17120 = bitcast %FBSTRING* %vr17116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17120, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17123 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17122 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17123, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17122
	%vr17126 = bitcast %FBSTRING* %vr17122 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17126, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6A
	%vr17129 = bitcast i8* bitcast ([22 x i8]* @Lt_0A6A to i8*) to i8*
	; arg 21
	%vr17128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17129, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr17128
	%vr17132 = bitcast %FBSTRING* %vr17128 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17132, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6B
	%vr17135 = bitcast i8* bitcast ([16 x i8]* @Lt_0A6B to i8*) to i8*
	; arg 15
	%vr17134 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17135, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr17134
	%vr17138 = bitcast %FBSTRING* %vr17134 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17138, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6C
	%vr17141 = bitcast i8* bitcast ([14 x i8]* @Lt_0A6C to i8*) to i8*
	; arg 13
	%vr17140 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17141, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17140
	%vr17144 = bitcast %FBSTRING* %vr17140 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17144, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6D
	%vr17147 = bitcast i8* bitcast ([4 x i8]* @Lt_0A6D to i8*) to i8*
	; arg 3
	%vr17146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17147, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17146
	%vr17150 = bitcast %FBSTRING* %vr17146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17150, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6E
	%vr17153 = bitcast i8* bitcast ([21 x i8]* @Lt_0A6E to i8*) to i8*
	; arg 20
	%vr17152 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17153, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17152
	%vr17156 = bitcast %FBSTRING* %vr17152 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17156, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A6F
	%vr17159 = bitcast i8* bitcast ([17 x i8]* @Lt_0A6F to i8*) to i8*
	; arg 16
	%vr17158 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17159, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr17158
	%vr17162 = bitcast %FBSTRING* %vr17158 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17162, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A70
	%vr17165 = bitcast i8* bitcast ([14 x i8]* @Lt_0A70 to i8*) to i8*
	; arg 13
	%vr17164 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17165, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17164
	%vr17168 = bitcast %FBSTRING* %vr17164 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17168, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A71
	%vr17171 = bitcast i8* bitcast ([31 x i8]* @Lt_0A71 to i8*) to i8*
	; arg 30
	%vr17170 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17171, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr17170
	%vr17174 = bitcast %FBSTRING* %vr17170 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17174, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A72
	%vr17177 = bitcast i8* bitcast ([4 x i8]* @Lt_0A72 to i8*) to i8*
	; arg 3
	%vr17176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17177, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17176
	%vr17180 = bitcast %FBSTRING* %vr17176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17180, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17183 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17182 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17183, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17182
	%vr17186 = bitcast %FBSTRING* %vr17182 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17186, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A73
	%vr17189 = bitcast i8* bitcast ([22 x i8]* @Lt_0A73 to i8*) to i8*
	; arg 21
	%vr17188 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17189, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr17188
	%vr17192 = bitcast %FBSTRING* %vr17188 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17192, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17195 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17194 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17195, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17194
	%vr17198 = bitcast %FBSTRING* %vr17194 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17198, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17201 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17200 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17201, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17200
	%vr17204 = bitcast %FBSTRING* %vr17200 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17204, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A74
	%vr17207 = bitcast i8* bitcast ([35 x i8]* @Lt_0A74 to i8*) to i8*
	; arg 34
	%vr17206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17207, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr17206
	%vr17210 = bitcast %FBSTRING* %vr17206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17210, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17213 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17212 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17213, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17212
	%vr17216 = bitcast %FBSTRING* %vr17212 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17216, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A75
	%vr17219 = bitcast i8* bitcast ([13 x i8]* @Lt_0A75 to i8*) to i8*
	; arg 12
	%vr17218 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17219, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr17218
	%vr17222 = bitcast %FBSTRING* %vr17218 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17222, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A76
	%vr17225 = bitcast i8* bitcast ([63 x i8]* @Lt_0A76 to i8*) to i8*
	; arg 62
	%vr17224 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17225, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr17224
	%vr17228 = bitcast %FBSTRING* %vr17224 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17228, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A77
	%vr17231 = bitcast i8* bitcast ([63 x i8]* @Lt_0A77 to i8*) to i8*
	; arg 62
	%vr17230 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17231, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr17230
	%vr17234 = bitcast %FBSTRING* %vr17230 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17234, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A78
	%vr17237 = bitcast i8* bitcast ([63 x i8]* @Lt_0A78 to i8*) to i8*
	; arg 62
	%vr17236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17237, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr17236
	%vr17240 = bitcast %FBSTRING* %vr17236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17240, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A79
	%vr17243 = bitcast i8* bitcast ([63 x i8]* @Lt_0A79 to i8*) to i8*
	; arg 62
	%vr17242 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17243, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr17242
	%vr17246 = bitcast %FBSTRING* %vr17242 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17246, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17249 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17248 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17249, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17248
	%vr17252 = bitcast %FBSTRING* %vr17248 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17252, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7A
	%vr17255 = bitcast i8* bitcast ([14 x i8]* @Lt_0A7A to i8*) to i8*
	; arg 13
	%vr17254 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17255, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17254
	%vr17258 = bitcast %FBSTRING* %vr17254 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17258, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17261 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17260 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17261, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17260
	%vr17264 = bitcast %FBSTRING* %vr17260 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17264, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17267 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17267, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17266
	%vr17270 = bitcast %FBSTRING* %vr17266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17270, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17273 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17272 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17273, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17272
	%vr17276 = bitcast %FBSTRING* %vr17272 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17276, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7B
	%vr17279 = bitcast i8* bitcast ([43 x i8]* @Lt_0A7B to i8*) to i8*
	; arg 42
	%vr17278 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17279, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr17278
	%vr17282 = bitcast %FBSTRING* %vr17278 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17282, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17285 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17284 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17285, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17284
	%vr17288 = bitcast %FBSTRING* %vr17284 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17288, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7C
	%vr17291 = bitcast i8* bitcast ([19 x i8]* @Lt_0A7C to i8*) to i8*
	; arg 18
	%vr17290 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17291, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr17290
	%vr17294 = bitcast %FBSTRING* %vr17290 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17294, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17297 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17297, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17296
	%vr17300 = bitcast %FBSTRING* %vr17296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17300, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7D
	%vr17303 = bitcast i8* bitcast ([30 x i8]* @Lt_0A7D to i8*) to i8*
	; arg 29
	%vr17302 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17303, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr17302
	%vr17306 = bitcast %FBSTRING* %vr17302 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17306, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17309 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17308 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17309, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17308
	%vr17312 = bitcast %FBSTRING* %vr17308 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17312, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7E
	%vr17315 = bitcast i8* bitcast ([24 x i8]* @Lt_0A7E to i8*) to i8*
	; arg 23
	%vr17314 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17315, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17314
	%vr17318 = bitcast %FBSTRING* %vr17314 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17318, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17321 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17320 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17321, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17320
	%vr17324 = bitcast %FBSTRING* %vr17320 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17324, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A7F
	%vr17327 = bitcast i8* bitcast ([30 x i8]* @Lt_0A7F to i8*) to i8*
	; arg 29
	%vr17326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17327, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr17326
	%vr17330 = bitcast %FBSTRING* %vr17326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17330, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17333 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17332 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17333, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17332
	%vr17336 = bitcast %FBSTRING* %vr17332 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17336, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A80
	%vr17339 = bitcast i8* bitcast ([24 x i8]* @Lt_0A80 to i8*) to i8*
	; arg 23
	%vr17338 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17339, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17338
	%vr17342 = bitcast %FBSTRING* %vr17338 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17342, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17345 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17344 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17345, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17344
	%vr17348 = bitcast %FBSTRING* %vr17344 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17348, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A81
	%vr17351 = bitcast i8* bitcast ([30 x i8]* @Lt_0A81 to i8*) to i8*
	; arg 29
	%vr17350 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17351, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr17350
	%vr17354 = bitcast %FBSTRING* %vr17350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17354, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17357 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17357, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17356
	%vr17360 = bitcast %FBSTRING* %vr17356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17360, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr17363 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr17362 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17363, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17362
	%vr17366 = bitcast %FBSTRING* %vr17362 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17366, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A82
	%vr17369 = bitcast i8* bitcast ([29 x i8]* @Lt_0A82 to i8*) to i8*
	; arg 28
	%vr17368 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17369, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17368
	%vr17372 = bitcast %FBSTRING* %vr17368 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17372, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17375 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17374 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17375, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17374
	%vr17378 = bitcast %FBSTRING* %vr17374 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17378, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17381 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17380 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17381, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17380
	%vr17384 = bitcast %FBSTRING* %vr17380 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17384, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17387 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17387, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17386
	%vr17390 = bitcast %FBSTRING* %vr17386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17390, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A83
	%vr17393 = bitcast i8* bitcast ([53 x i8]* @Lt_0A83 to i8*) to i8*
	; arg 52
	%vr17392 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17393, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr17392
	%vr17396 = bitcast %FBSTRING* %vr17392 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17396, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17399 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17398 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17399, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17398
	%vr17402 = bitcast %FBSTRING* %vr17398 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17402, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A84
	%vr17405 = bitcast i8* bitcast ([16 x i8]* @Lt_0A84 to i8*) to i8*
	; arg 15
	%vr17404 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17405, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr17404
	%vr17408 = bitcast %FBSTRING* %vr17404 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17408, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A85
	%vr17411 = bitcast i8* bitcast ([29 x i8]* @Lt_0A85 to i8*) to i8*
	; arg 28
	%vr17410 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17411, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17410
	%vr17414 = bitcast %FBSTRING* %vr17410 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17414, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A86
	%vr17417 = bitcast i8* bitcast ([76 x i8]* @Lt_0A86 to i8*) to i8*
	; arg 75
	%vr17416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17417, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr17416
	%vr17420 = bitcast %FBSTRING* %vr17416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17420, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr17423 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr17422 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17423, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17422
	%vr17426 = bitcast %FBSTRING* %vr17422 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17426, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A87
	%vr17429 = bitcast i8* bitcast ([26 x i8]* @Lt_0A87 to i8*) to i8*
	; arg 25
	%vr17428 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17429, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17428
	%vr17432 = bitcast %FBSTRING* %vr17428 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17432, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr17435 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr17434 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17435, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr17434
	%vr17438 = bitcast %FBSTRING* %vr17434 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17438, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A88
	%vr17441 = bitcast i8* bitcast ([17 x i8]* @Lt_0A88 to i8*) to i8*
	; arg 16
	%vr17440 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17441, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr17440
	%vr17444 = bitcast %FBSTRING* %vr17440 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17444, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17447 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17447, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17446
	%vr17450 = bitcast %FBSTRING* %vr17446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17450, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A89
	%vr17453 = bitcast i8* bitcast ([24 x i8]* @Lt_0A89 to i8*) to i8*
	; arg 23
	%vr17452 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17453, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17452
	%vr17456 = bitcast %FBSTRING* %vr17452 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17456, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8A
	%vr17459 = bitcast i8* bitcast ([24 x i8]* @Lt_0A8A to i8*) to i8*
	; arg 23
	%vr17458 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17459, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17458
	%vr17462 = bitcast %FBSTRING* %vr17458 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17462, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8B
	%vr17465 = bitcast i8* bitcast ([24 x i8]* @Lt_0A8B to i8*) to i8*
	; arg 23
	%vr17464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17465, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17464
	%vr17468 = bitcast %FBSTRING* %vr17464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17468, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8C
	%vr17471 = bitcast i8* bitcast ([21 x i8]* @Lt_0A8C to i8*) to i8*
	; arg 20
	%vr17470 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17471, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr17470
	%vr17474 = bitcast %FBSTRING* %vr17470 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17474, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8D
	%vr17477 = bitcast i8* bitcast ([64 x i8]* @Lt_0A8D to i8*) to i8*
	; arg 63
	%vr17476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17477, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr17476
	%vr17480 = bitcast %FBSTRING* %vr17476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17480, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8E
	%vr17483 = bitcast i8* bitcast ([64 x i8]* @Lt_0A8E to i8*) to i8*
	; arg 63
	%vr17482 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17483, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr17482
	%vr17486 = bitcast %FBSTRING* %vr17482 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17486, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A8F
	%vr17489 = bitcast i8* bitcast ([63 x i8]* @Lt_0A8F to i8*) to i8*
	; arg 62
	%vr17488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17489, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr17488
	%vr17492 = bitcast %FBSTRING* %vr17488 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17492, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr17495 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr17494 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17495, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr17494
	%vr17498 = bitcast %FBSTRING* %vr17494 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17498, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17501 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17500 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17501, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17500
	%vr17504 = bitcast %FBSTRING* %vr17500 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17504, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A90
	%vr17507 = bitcast i8* bitcast ([29 x i8]* @Lt_0A90 to i8*) to i8*
	; arg 28
	%vr17506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17507, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17506
	%vr17510 = bitcast %FBSTRING* %vr17506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17510, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A91
	%vr17513 = bitcast i8* bitcast ([12 x i8]* @Lt_0A91 to i8*) to i8*
	; arg 11
	%vr17512 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17513, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17512
	%vr17516 = bitcast %FBSTRING* %vr17512 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17516, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17519 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17518 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17519, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17518
	%vr17522 = bitcast %FBSTRING* %vr17518 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17522, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A92
	%vr17525 = bitcast i8* bitcast ([12 x i8]* @Lt_0A92 to i8*) to i8*
	; arg 11
	%vr17524 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17525, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17524
	%vr17528 = bitcast %FBSTRING* %vr17524 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17528, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A93
	%vr17531 = bitcast i8* bitcast ([18 x i8]* @Lt_0A93 to i8*) to i8*
	; arg 17
	%vr17530 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17531, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr17530
	%vr17534 = bitcast %FBSTRING* %vr17530 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17534, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17537 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17537, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17536
	%vr17540 = bitcast %FBSTRING* %vr17536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17540, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr17543 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr17542 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17543, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17542
	%vr17546 = bitcast %FBSTRING* %vr17542 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17546, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A94
	%vr17549 = bitcast i8* bitcast ([28 x i8]* @Lt_0A94 to i8*) to i8*
	; arg 27
	%vr17548 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17549, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr17548
	%vr17552 = bitcast %FBSTRING* %vr17548 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17552, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A91
	%vr17555 = bitcast i8* bitcast ([12 x i8]* @Lt_0A91 to i8*) to i8*
	; arg 11
	%vr17554 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17555, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17554
	%vr17558 = bitcast %FBSTRING* %vr17554 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17558, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17561 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17560 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17561, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17560
	%vr17564 = bitcast %FBSTRING* %vr17560 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17564, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A92
	%vr17567 = bitcast i8* bitcast ([12 x i8]* @Lt_0A92 to i8*) to i8*
	; arg 11
	%vr17566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17567, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17566
	%vr17570 = bitcast %FBSTRING* %vr17566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17570, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A95
	%vr17573 = bitcast i8* bitcast ([18 x i8]* @Lt_0A95 to i8*) to i8*
	; arg 17
	%vr17572 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17573, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr17572
	%vr17576 = bitcast %FBSTRING* %vr17572 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17576, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17579 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17578 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17579, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17578
	%vr17582 = bitcast %FBSTRING* %vr17578 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17582, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr17585 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr17584 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17585, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17584
	%vr17588 = bitcast %FBSTRING* %vr17584 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17588, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A96
	%vr17591 = bitcast i8* bitcast ([33 x i8]* @Lt_0A96 to i8*) to i8*
	; arg 32
	%vr17590 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17591, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr17590
	%vr17594 = bitcast %FBSTRING* %vr17590 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17594, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A91
	%vr17597 = bitcast i8* bitcast ([12 x i8]* @Lt_0A91 to i8*) to i8*
	; arg 11
	%vr17596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17597, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17596
	%vr17600 = bitcast %FBSTRING* %vr17596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17600, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17603 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17602 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17603, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17602
	%vr17606 = bitcast %FBSTRING* %vr17602 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17606, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A92
	%vr17609 = bitcast i8* bitcast ([12 x i8]* @Lt_0A92 to i8*) to i8*
	; arg 11
	%vr17608 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17609, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17608
	%vr17612 = bitcast %FBSTRING* %vr17608 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17612, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A95
	%vr17615 = bitcast i8* bitcast ([18 x i8]* @Lt_0A95 to i8*) to i8*
	; arg 17
	%vr17614 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17615, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr17614
	%vr17618 = bitcast %FBSTRING* %vr17614 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17618, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr17621 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr17620 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17621, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17620
	%vr17624 = bitcast %FBSTRING* %vr17620 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17624, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr17627 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr17626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17627, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17626
	%vr17630 = bitcast %FBSTRING* %vr17626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17630, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A97
	%vr17633 = bitcast i8* bitcast ([29 x i8]* @Lt_0A97 to i8*) to i8*
	; arg 28
	%vr17632 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17633, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr17632
	%vr17636 = bitcast %FBSTRING* %vr17632 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17636, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A91
	%vr17639 = bitcast i8* bitcast ([12 x i8]* @Lt_0A91 to i8*) to i8*
	; arg 11
	%vr17638 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17639, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17638
	%vr17642 = bitcast %FBSTRING* %vr17638 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17642, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr17645 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr17644 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17645, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr17644
	%vr17648 = bitcast %FBSTRING* %vr17644 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17648, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A92
	%vr17651 = bitcast i8* bitcast ([12 x i8]* @Lt_0A92 to i8*) to i8*
	; arg 11
	%vr17650 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17651, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr17650
	%vr17654 = bitcast %FBSTRING* %vr17650 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17654, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A98
	%vr17657 = bitcast i8* bitcast ([18 x i8]* @Lt_0A98 to i8*) to i8*
	; arg 17
	%vr17656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17657, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr17656
	%vr17660 = bitcast %FBSTRING* %vr17656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17660, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr17663 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr17662 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17663, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17662
	%vr17666 = bitcast %FBSTRING* %vr17662 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17666, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17669 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17668 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17669, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17668
	%vr17672 = bitcast %FBSTRING* %vr17668 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17672, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A99
	%vr17675 = bitcast i8* bitcast ([14 x i8]* @Lt_0A99 to i8*) to i8*
	; arg 13
	%vr17674 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17675, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr17674
	%vr17678 = bitcast %FBSTRING* %vr17674 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17678, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17681 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17680 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17681, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17680
	%vr17684 = bitcast %FBSTRING* %vr17680 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17684, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17687 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17687, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17686
	%vr17690 = bitcast %FBSTRING* %vr17686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17690, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9A
	%vr17693 = bitcast i8* bitcast ([32 x i8]* @Lt_0A9A to i8*) to i8*
	; arg 31
	%vr17692 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17693, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17692
	%vr17696 = bitcast %FBSTRING* %vr17692 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17696, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17699 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17698 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17699, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17698
	%vr17702 = bitcast %FBSTRING* %vr17698 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17702, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9B
	%vr17705 = bitcast i8* bitcast ([26 x i8]* @Lt_0A9B to i8*) to i8*
	; arg 25
	%vr17704 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17705, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17704
	%vr17708 = bitcast %FBSTRING* %vr17704 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17708, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9C
	%vr17711 = bitcast i8* bitcast ([26 x i8]* @Lt_0A9C to i8*) to i8*
	; arg 25
	%vr17710 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17711, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17710
	%vr17714 = bitcast %FBSTRING* %vr17710 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17714, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9D
	%vr17717 = bitcast i8* bitcast ([27 x i8]* @Lt_0A9D to i8*) to i8*
	; arg 26
	%vr17716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17717, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17716
	%vr17720 = bitcast %FBSTRING* %vr17716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17720, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9E
	%vr17723 = bitcast i8* bitcast ([36 x i8]* @Lt_0A9E to i8*) to i8*
	; arg 35
	%vr17722 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17723, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr17722
	%vr17726 = bitcast %FBSTRING* %vr17722 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17726, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17729 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17729, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17728
	%vr17732 = bitcast %FBSTRING* %vr17728 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17732, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17735 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17734 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17735, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17734
	%vr17738 = bitcast %FBSTRING* %vr17734 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17738, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9F
	%vr17741 = bitcast i8* bitcast ([48 x i8]* @Lt_0A9F to i8*) to i8*
	; arg 47
	%vr17740 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17741, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr17740
	%vr17744 = bitcast %FBSTRING* %vr17740 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17744, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17747 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17747, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17746
	%vr17750 = bitcast %FBSTRING* %vr17746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17750, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9B
	%vr17753 = bitcast i8* bitcast ([26 x i8]* @Lt_0A9B to i8*) to i8*
	; arg 25
	%vr17752 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17753, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr17752
	%vr17756 = bitcast %FBSTRING* %vr17752 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17756, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9D
	%vr17759 = bitcast i8* bitcast ([27 x i8]* @Lt_0A9D to i8*) to i8*
	; arg 26
	%vr17758 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17759, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17758
	%vr17762 = bitcast %FBSTRING* %vr17758 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17762, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA0
	%vr17765 = bitcast i8* bitcast ([35 x i8]* @Lt_0AA0 to i8*) to i8*
	; arg 34
	%vr17764 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17765, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr17764
	%vr17768 = bitcast %FBSTRING* %vr17764 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17768, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA1
	%vr17771 = bitcast i8* bitcast ([32 x i8]* @Lt_0AA1 to i8*) to i8*
	; arg 31
	%vr17770 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17771, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr17770
	%vr17774 = bitcast %FBSTRING* %vr17770 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17774, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA2
	%vr17777 = bitcast i8* bitcast ([60 x i8]* @Lt_0AA2 to i8*) to i8*
	; arg 59
	%vr17776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17777, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr17776
	%vr17780 = bitcast %FBSTRING* %vr17776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17780, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17783 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17782 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17783, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17782
	%vr17786 = bitcast %FBSTRING* %vr17782 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17786, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17789 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17788 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17789, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17788
	%vr17792 = bitcast %FBSTRING* %vr17788 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17792, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA3
	%vr17795 = bitcast i8* bitcast ([65 x i8]* @Lt_0AA3 to i8*) to i8*
	; arg 64
	%vr17794 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17795, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr17794
	%vr17798 = bitcast %FBSTRING* %vr17794 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17798, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA4
	%vr17801 = bitcast i8* bitcast ([76 x i8]* @Lt_0AA4 to i8*) to i8*
	; arg 75
	%vr17800 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17801, i64 75 )

	; call fb_PrintString()
	; arg 1
	; arg vr17800
	%vr17804 = bitcast %FBSTRING* %vr17800 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17804, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17807 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17807, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17806
	%vr17810 = bitcast %FBSTRING* %vr17806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17810, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA5
	%vr17813 = bitcast i8* bitcast ([106 x i8]* @Lt_0AA5 to i8*) to i8*
	; arg 105
	%vr17812 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17813, i64 105 )

	; call fb_PrintString()
	; arg 1
	; arg vr17812
	%vr17816 = bitcast %FBSTRING* %vr17812 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17816, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA6
	%vr17819 = bitcast i8* bitcast ([60 x i8]* @Lt_0AA6 to i8*) to i8*
	; arg 59
	%vr17818 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17819, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr17818
	%vr17822 = bitcast %FBSTRING* %vr17818 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17822, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17825 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17824 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17825, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17824
	%vr17828 = bitcast %FBSTRING* %vr17824 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17828, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA7
	%vr17831 = bitcast i8* bitcast ([54 x i8]* @Lt_0AA7 to i8*) to i8*
	; arg 53
	%vr17830 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17831, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr17830
	%vr17834 = bitcast %FBSTRING* %vr17830 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17834, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17837 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17837, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17836
	%vr17840 = bitcast %FBSTRING* %vr17836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17840, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA8
	%vr17843 = bitcast i8* bitcast ([36 x i8]* @Lt_0AA8 to i8*) to i8*
	; arg 35
	%vr17842 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17843, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr17842
	%vr17846 = bitcast %FBSTRING* %vr17842 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17846, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AA9
	%vr17849 = bitcast i8* bitcast ([101 x i8]* @Lt_0AA9 to i8*) to i8*
	; arg 100
	%vr17848 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17849, i64 100 )

	; call fb_PrintString()
	; arg 1
	; arg vr17848
	%vr17852 = bitcast %FBSTRING* %vr17848 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17852, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr17855 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr17854 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17855, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr17854
	%vr17858 = bitcast %FBSTRING* %vr17854 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17858, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAA
	%vr17861 = bitcast i8* bitcast ([36 x i8]* @Lt_0AAA to i8*) to i8*
	; arg 35
	%vr17860 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17861, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr17860
	%vr17864 = bitcast %FBSTRING* %vr17860 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17864, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17867 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17867, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17866
	%vr17870 = bitcast %FBSTRING* %vr17866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17870, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAB
	%vr17873 = bitcast i8* bitcast ([60 x i8]* @Lt_0AAB to i8*) to i8*
	; arg 59
	%vr17872 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17873, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr17872
	%vr17876 = bitcast %FBSTRING* %vr17872 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17876, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C4
	%vr17879 = bitcast i8* bitcast ([4 x i8]* @Lt_06C4 to i8*) to i8*
	; arg 3
	%vr17878 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17879, i64 3 )

	; call fb_PrintString()
	; arg 1
	; arg vr17878
	%vr17882 = bitcast %FBSTRING* %vr17878 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17882, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAC
	%vr17885 = bitcast i8* bitcast ([30 x i8]* @Lt_0AAC to i8*) to i8*
	; arg 29
	%vr17884 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17885, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr17884
	%vr17888 = bitcast %FBSTRING* %vr17884 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17888, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAD
	%vr17891 = bitcast i8* bitcast ([88 x i8]* @Lt_0AAD to i8*) to i8*
	; arg 87
	%vr17890 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17891, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr17890
	%vr17894 = bitcast %FBSTRING* %vr17890 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17894, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17897 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17897, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17896
	%vr17900 = bitcast %FBSTRING* %vr17896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17900, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17903 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17902 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17903, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17902
	%vr17906 = bitcast %FBSTRING* %vr17902 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17906, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAE
	%vr17909 = bitcast i8* bitcast ([22 x i8]* @Lt_0AAE to i8*) to i8*
	; arg 21
	%vr17908 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17909, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr17908
	%vr17912 = bitcast %FBSTRING* %vr17908 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17912, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17915 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17914 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17915, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17914
	%vr17918 = bitcast %FBSTRING* %vr17914 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17918, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AAF
	%vr17921 = bitcast i8* bitcast ([27 x i8]* @Lt_0AAF to i8*) to i8*
	; arg 26
	%vr17920 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17921, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17920
	%vr17924 = bitcast %FBSTRING* %vr17920 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17924, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr17927 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr17926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17927, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17926
	%vr17930 = bitcast %FBSTRING* %vr17926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17930, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr17933 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr17932 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17933, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr17932
	%vr17936 = bitcast %FBSTRING* %vr17932 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17936, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB0
	%vr17939 = bitcast i8* bitcast ([49 x i8]* @Lt_0AB0 to i8*) to i8*
	; arg 48
	%vr17938 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17939, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr17938
	%vr17942 = bitcast %FBSTRING* %vr17938 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17942, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr17945 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr17944 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17945, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr17944
	%vr17948 = bitcast %FBSTRING* %vr17944 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17948, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB1
	%vr17951 = bitcast i8* bitcast ([27 x i8]* @Lt_0AB1 to i8*) to i8*
	; arg 26
	%vr17950 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17951, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr17950
	%vr17954 = bitcast %FBSTRING* %vr17950 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17954, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB2
	%vr17957 = bitcast i8* bitcast ([82 x i8]* @Lt_0AB2 to i8*) to i8*
	; arg 81
	%vr17956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17957, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr17956
	%vr17960 = bitcast %FBSTRING* %vr17956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17960, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB3
	%vr17963 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB3 to i8*) to i8*
	; arg 23
	%vr17962 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17963, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17962
	%vr17966 = bitcast %FBSTRING* %vr17962 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17966, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB4
	%vr17969 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB4 to i8*) to i8*
	; arg 23
	%vr17968 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17969, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17968
	%vr17972 = bitcast %FBSTRING* %vr17968 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17972, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB5
	%vr17975 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB5 to i8*) to i8*
	; arg 23
	%vr17974 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17975, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr17974
	%vr17978 = bitcast %FBSTRING* %vr17974 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17978, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB6
	%vr17981 = bitcast i8* bitcast ([42 x i8]* @Lt_0AB6 to i8*) to i8*
	; arg 41
	%vr17980 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17981, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr17980
	%vr17984 = bitcast %FBSTRING* %vr17980 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17984, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB7
	%vr17987 = bitcast i8* bitcast ([98 x i8]* @Lt_0AB7 to i8*) to i8*
	; arg 97
	%vr17986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17987, i64 97 )

	; call fb_PrintString()
	; arg 1
	; arg vr17986
	%vr17990 = bitcast %FBSTRING* %vr17986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17990, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_078D
	%vr17993 = bitcast i8* bitcast ([6 x i8]* @Lt_078D to i8*) to i8*
	; arg 5
	%vr17992 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17993, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr17992
	%vr17996 = bitcast %FBSTRING* %vr17992 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr17996, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB8
	%vr17999 = bitcast i8* bitcast ([51 x i8]* @Lt_0AB8 to i8*) to i8*
	; arg 50
	%vr17998 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr17999, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr17998
	%vr18002 = bitcast %FBSTRING* %vr17998 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18002, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB9
	%vr18005 = bitcast i8* bitcast ([52 x i8]* @Lt_0AB9 to i8*) to i8*
	; arg 51
	%vr18004 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18005, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr18004
	%vr18008 = bitcast %FBSTRING* %vr18004 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18008, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABA
	%vr18011 = bitcast i8* bitcast ([37 x i8]* @Lt_0ABA to i8*) to i8*
	; arg 36
	%vr18010 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18011, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr18010
	%vr18014 = bitcast %FBSTRING* %vr18010 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18014, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0761
	%vr18017 = bitcast i8* bitcast ([6 x i8]* @Lt_0761 to i8*) to i8*
	; arg 5
	%vr18016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18017, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18016
	%vr18020 = bitcast %FBSTRING* %vr18016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18020, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABB
	%vr18023 = bitcast i8* bitcast ([19 x i8]* @Lt_0ABB to i8*) to i8*
	; arg 18
	%vr18022 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18023, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr18022
	%vr18026 = bitcast %FBSTRING* %vr18022 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18026, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr18029 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr18028 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18029, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18028
	%vr18032 = bitcast %FBSTRING* %vr18028 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18032, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABC
	%vr18035 = bitcast i8* bitcast ([16 x i8]* @Lt_0ABC to i8*) to i8*
	; arg 15
	%vr18034 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18035, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr18034
	%vr18038 = bitcast %FBSTRING* %vr18034 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18038, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr18041 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr18040 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18041, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr18040
	%vr18044 = bitcast %FBSTRING* %vr18040 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18044, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr18047 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr18046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18047, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18046
	%vr18050 = bitcast %FBSTRING* %vr18046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18050, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18053 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18052 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18053, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18052
	%vr18056 = bitcast %FBSTRING* %vr18052 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18056, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABE
	%vr18059 = bitcast i8* bitcast ([140 x i8]* @Lt_0ABE to i8*) to i8*
	; arg 139
	%vr18058 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18059, i64 139 )

	; call fb_PrintString()
	; arg 1
	; arg vr18058
	%vr18062 = bitcast %FBSTRING* %vr18058 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18062, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr18065 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr18064 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18065, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18064
	%vr18068 = bitcast %FBSTRING* %vr18064 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18068, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ABF
	%vr18071 = bitcast i8* bitcast ([26 x i8]* @Lt_0ABF to i8*) to i8*
	; arg 25
	%vr18070 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18071, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr18070
	%vr18074 = bitcast %FBSTRING* %vr18070 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18074, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr18077 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr18076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18077, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18076
	%vr18080 = bitcast %FBSTRING* %vr18076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18080, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB4
	%vr18083 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB4 to i8*) to i8*
	; arg 23
	%vr18082 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18083, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr18082
	%vr18086 = bitcast %FBSTRING* %vr18082 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18086, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AB5
	%vr18089 = bitcast i8* bitcast ([24 x i8]* @Lt_0AB5 to i8*) to i8*
	; arg 23
	%vr18088 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18089, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr18088
	%vr18092 = bitcast %FBSTRING* %vr18088 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18092, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr18095 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr18094 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18095, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18094
	%vr18098 = bitcast %FBSTRING* %vr18094 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18098, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0A9B
	%vr18101 = bitcast i8* bitcast ([26 x i8]* @Lt_0A9B to i8*) to i8*
	; arg 25
	%vr18100 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18101, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr18100
	%vr18104 = bitcast %FBSTRING* %vr18100 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18104, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr18107 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr18106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18107, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18106
	%vr18110 = bitcast %FBSTRING* %vr18106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18110, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC0
	%vr18113 = bitcast i8* bitcast ([62 x i8]* @Lt_0AC0 to i8*) to i8*
	; arg 61
	%vr18112 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18113, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr18112
	%vr18116 = bitcast %FBSTRING* %vr18112 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18116, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC1
	%vr18119 = bitcast i8* bitcast ([31 x i8]* @Lt_0AC1 to i8*) to i8*
	; arg 30
	%vr18118 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18119, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18118
	%vr18122 = bitcast %FBSTRING* %vr18118 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18122, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC2
	%vr18125 = bitcast i8* bitcast ([47 x i8]* @Lt_0AC2 to i8*) to i8*
	; arg 46
	%vr18124 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18125, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr18124
	%vr18128 = bitcast %FBSTRING* %vr18124 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18128, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr18131 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr18130 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18131, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18130
	%vr18134 = bitcast %FBSTRING* %vr18130 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18134, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC3
	%vr18137 = bitcast i8* bitcast ([74 x i8]* @Lt_0AC3 to i8*) to i8*
	; arg 73
	%vr18136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18137, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr18136
	%vr18140 = bitcast %FBSTRING* %vr18136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18140, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC4
	%vr18143 = bitcast i8* bitcast ([23 x i8]* @Lt_0AC4 to i8*) to i8*
	; arg 22
	%vr18142 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18143, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr18142
	%vr18146 = bitcast %FBSTRING* %vr18142 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18146, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC5
	%vr18149 = bitcast i8* bitcast ([31 x i8]* @Lt_0AC5 to i8*) to i8*
	; arg 30
	%vr18148 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18149, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18148
	%vr18152 = bitcast %FBSTRING* %vr18148 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18152, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC6
	%vr18155 = bitcast i8* bitcast ([20 x i8]* @Lt_0AC6 to i8*) to i8*
	; arg 19
	%vr18154 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18155, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr18154
	%vr18158 = bitcast %FBSTRING* %vr18154 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18158, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC7
	%vr18161 = bitcast i8* bitcast ([29 x i8]* @Lt_0AC7 to i8*) to i8*
	; arg 28
	%vr18160 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18161, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr18160
	%vr18164 = bitcast %FBSTRING* %vr18160 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18164, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06EC
	%vr18167 = bitcast i8* bitcast ([3 x i8]* @Lt_06EC to i8*) to i8*
	; arg 2
	%vr18166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18167, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr18166
	%vr18170 = bitcast %FBSTRING* %vr18166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18170, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC8
	%vr18173 = bitcast i8* bitcast ([22 x i8]* @Lt_0AC8 to i8*) to i8*
	; arg 21
	%vr18172 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18173, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18172
	%vr18176 = bitcast %FBSTRING* %vr18172 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18176, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr18179 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr18178 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18179, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr18178
	%vr18182 = bitcast %FBSTRING* %vr18178 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18182, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr18185 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr18184 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18185, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr18184
	%vr18188 = bitcast %FBSTRING* %vr18184 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18188, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AC9
	%vr18191 = bitcast i8* bitcast ([47 x i8]* @Lt_0AC9 to i8*) to i8*
	; arg 46
	%vr18190 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18191, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr18190
	%vr18194 = bitcast %FBSTRING* %vr18190 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18194, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr18197 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr18196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18197, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr18196
	%vr18200 = bitcast %FBSTRING* %vr18196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18200, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05C7
	%vr18203 = bitcast i8* bitcast ([19 x i8]* @Lt_05C7 to i8*) to i8*
	; arg 18
	%vr18202 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18203, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr18202
	%vr18206 = bitcast %FBSTRING* %vr18202 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18206, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACA
	%vr18209 = bitcast i8* bitcast ([69 x i8]* @Lt_0ACA to i8*) to i8*
	; arg 68
	%vr18208 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18209, i64 68 )

	; call fb_PrintString()
	; arg 1
	; arg vr18208
	%vr18212 = bitcast %FBSTRING* %vr18208 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18212, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr18215 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr18214 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18215, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr18214
	%vr18218 = bitcast %FBSTRING* %vr18214 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18218, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACB
	%vr18221 = bitcast i8* bitcast ([31 x i8]* @Lt_0ACB to i8*) to i8*
	; arg 30
	%vr18220 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18221, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr18220
	%vr18224 = bitcast %FBSTRING* %vr18220 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18224, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr18227 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr18226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18227, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr18226
	%vr18230 = bitcast %FBSTRING* %vr18226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18230, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACC
	%vr18233 = bitcast i8* bitcast ([10 x i8]* @Lt_0ACC to i8*) to i8*
	; arg 9
	%vr18232 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18233, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr18232
	%vr18236 = bitcast %FBSTRING* %vr18232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18236, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACE
	%vr18239 = bitcast i8* bitcast ([124 x i8]* @Lt_0ACE to i8*) to i8*
	; arg 123
	%vr18238 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18239, i64 123 )

	; call fb_PrintString()
	; arg 1
	; arg vr18238
	%vr18242 = bitcast %FBSTRING* %vr18238 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18242, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACF
	%vr18245 = bitcast i8* bitcast ([113 x i8]* @Lt_0ACF to i8*) to i8*
	; arg 112
	%vr18244 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18245, i64 112 )

	; call fb_PrintString()
	; arg 1
	; arg vr18244
	%vr18248 = bitcast %FBSTRING* %vr18244 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18248, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD0
	%vr18251 = bitcast i8* bitcast ([106 x i8]* @Lt_0AD0 to i8*) to i8*
	; arg 105
	%vr18250 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18251, i64 105 )

	; call fb_PrintString()
	; arg 1
	; arg vr18250
	%vr18254 = bitcast %FBSTRING* %vr18250 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18254, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD2
	%vr18257 = bitcast i8* bitcast ([131 x i8]* @Lt_0AD2 to i8*) to i8*
	; arg 130
	%vr18256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18257, i64 130 )

	; call fb_PrintString()
	; arg 1
	; arg vr18256
	%vr18260 = bitcast %FBSTRING* %vr18256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18260, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr18263 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr18262 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18263, i64 0 )

	; call fb_PrintString()
	; arg 1
	; arg vr18262
	%vr18266 = bitcast %FBSTRING* %vr18262 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18266, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD3
	%vr18269 = bitcast i8* bitcast ([61 x i8]* @Lt_0AD3 to i8*) to i8*
	; arg 60
	%vr18268 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18269, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr18268
	%vr18272 = bitcast %FBSTRING* %vr18268 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18272, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD4
	%vr18275 = bitcast i8* bitcast ([48 x i8]* @Lt_0AD4 to i8*) to i8*
	; arg 47
	%vr18274 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18275, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18274
	%vr18278 = bitcast %FBSTRING* %vr18274 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18278, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096A
	%vr18281 = bitcast i8* bitcast ([10 x i8]* @Lt_096A to i8*) to i8*
	; arg 9
	%vr18280 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18281, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr18280
	%vr18284 = bitcast %FBSTRING* %vr18280 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18284, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD5
	%vr18287 = bitcast i8* bitcast ([7 x i8]* @Lt_0AD5 to i8*) to i8*
	; arg 6
	%vr18286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18287, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr18286
	%vr18290 = bitcast %FBSTRING* %vr18286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18290, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ACC
	%vr18293 = bitcast i8* bitcast ([10 x i8]* @Lt_0ACC to i8*) to i8*
	; arg 9
	%vr18292 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18293, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr18292
	%vr18296 = bitcast %FBSTRING* %vr18292 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18296, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD6
	%vr18299 = bitcast i8* bitcast ([57 x i8]* @Lt_0AD6 to i8*) to i8*
	; arg 56
	%vr18298 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18299, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr18298
	%vr18302 = bitcast %FBSTRING* %vr18298 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18302, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD7
	%vr18305 = bitcast i8* bitcast ([33 x i8]* @Lt_0AD7 to i8*) to i8*
	; arg 32
	%vr18304 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18305, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr18304
	%vr18308 = bitcast %FBSTRING* %vr18304 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18308, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD4
	%vr18311 = bitcast i8* bitcast ([48 x i8]* @Lt_0AD4 to i8*) to i8*
	; arg 47
	%vr18310 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18311, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18310
	%vr18314 = bitcast %FBSTRING* %vr18310 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18314, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD8
	%vr18317 = bitcast i8* bitcast ([15 x i8]* @Lt_0AD8 to i8*) to i8*
	; arg 14
	%vr18316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18317, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr18316
	%vr18320 = bitcast %FBSTRING* %vr18316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18320, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADA
	%vr18323 = bitcast i8* bitcast ([127 x i8]* @Lt_0ADA to i8*) to i8*
	; arg 126
	%vr18322 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18323, i64 126 )

	; call fb_PrintString()
	; arg 1
	; arg vr18322
	%vr18326 = bitcast %FBSTRING* %vr18322 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18326, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADB
	%vr18329 = bitcast i8* bitcast ([34 x i8]* @Lt_0ADB to i8*) to i8*
	; arg 33
	%vr18328 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18329, i64 33 )

	; call fb_PrintString()
	; arg 1
	; arg vr18328
	%vr18332 = bitcast %FBSTRING* %vr18328 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18332, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD4
	%vr18335 = bitcast i8* bitcast ([48 x i8]* @Lt_0AD4 to i8*) to i8*
	; arg 47
	%vr18334 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18335, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr18334
	%vr18338 = bitcast %FBSTRING* %vr18334 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18338, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AD8
	%vr18341 = bitcast i8* bitcast ([15 x i8]* @Lt_0AD8 to i8*) to i8*
	; arg 14
	%vr18340 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18341, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr18340
	%vr18344 = bitcast %FBSTRING* %vr18340 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18344, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_096A
	%vr18347 = bitcast i8* bitcast ([10 x i8]* @Lt_096A to i8*) to i8*
	; arg 9
	%vr18346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18347, i64 9 )

	; call fb_PrintString()
	; arg 1
	; arg vr18346
	%vr18350 = bitcast %FBSTRING* %vr18346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18350, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0651
	%vr18353 = bitcast i8* bitcast ([9 x i8]* @Lt_0651 to i8*) to i8*
	; arg 8
	%vr18352 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18353, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr18352
	%vr18356 = bitcast %FBSTRING* %vr18352 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18356, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADC
	%vr18359 = bitcast i8* bitcast ([3 x i8]* @Lt_0ADC to i8*) to i8*
	; arg 2
	%vr18358 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18359, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr18358
	%vr18362 = bitcast %FBSTRING* %vr18358 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18362, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADD
	%vr18365 = bitcast i8* bitcast ([46 x i8]* @Lt_0ADD to i8*) to i8*
	; arg 45
	%vr18364 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18365, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr18364
	%vr18368 = bitcast %FBSTRING* %vr18364 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18368, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADE
	%vr18371 = bitcast i8* bitcast ([19 x i8]* @Lt_0ADE to i8*) to i8*
	; arg 18
	%vr18370 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18371, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr18370
	%vr18374 = bitcast %FBSTRING* %vr18370 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18374, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0ADF
	%vr18377 = bitcast i8* bitcast ([82 x i8]* @Lt_0ADF to i8*) to i8*
	; arg 81
	%vr18376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18377, i64 81 )

	; call fb_PrintString()
	; arg 1
	; arg vr18376
	%vr18380 = bitcast %FBSTRING* %vr18376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18380, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE0
	%vr18383 = bitcast i8* bitcast ([11 x i8]* @Lt_0AE0 to i8*) to i8*
	; arg 10
	%vr18382 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18383, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr18382
	%vr18386 = bitcast %FBSTRING* %vr18382 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18386, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_07AE
	%vr18389 = bitcast i8* bitcast ([3 x i8]* @Lt_07AE to i8*) to i8*
	; arg 2
	%vr18388 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18389, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr18388
	%vr18392 = bitcast %FBSTRING* %vr18388 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18392, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr18395 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr18394 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18395, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18394
	%vr18398 = bitcast %FBSTRING* %vr18394 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18398, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE1
	%vr18401 = bitcast i8* bitcast ([38 x i8]* @Lt_0AE1 to i8*) to i8*
	; arg 37
	%vr18400 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18401, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18400
	%vr18404 = bitcast %FBSTRING* %vr18400 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18404, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_06C1
	%vr18407 = bitcast i8* bitcast ([2 x i8]* @Lt_06C1 to i8*) to i8*
	; arg 1
	%vr18406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18407, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18406
	%vr18410 = bitcast %FBSTRING* %vr18406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18410, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE2
	%vr18413 = bitcast i8* bitcast ([26 x i8]* @Lt_0AE2 to i8*) to i8*
	; arg 25
	%vr18412 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18413, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr18412
	%vr18416 = bitcast %FBSTRING* %vr18412 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18416, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr18419 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr18418 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18419, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18418
	%vr18422 = bitcast %FBSTRING* %vr18418 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18422, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE3
	%vr18425 = bitcast i8* bitcast ([35 x i8]* @Lt_0AE3 to i8*) to i8*
	; arg 34
	%vr18424 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18425, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18424
	%vr18428 = bitcast %FBSTRING* %vr18424 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18428, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05EB
	%vr18431 = bitcast i8* bitcast ([5 x i8]* @Lt_05EB to i8*) to i8*
	; arg 4
	%vr18430 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18431, i64 4 )

	; call fb_PrintString()
	; arg 1
	; arg vr18430
	%vr18434 = bitcast %FBSTRING* %vr18430 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18434, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE4
	%vr18437 = bitcast i8* bitcast ([53 x i8]* @Lt_0AE4 to i8*) to i8*
	; arg 52
	%vr18436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18437, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr18436
	%vr18440 = bitcast %FBSTRING* %vr18436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18440, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr18443 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr18442 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18443, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18442
	%vr18446 = bitcast %FBSTRING* %vr18442 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18446, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AE5
	%vr18449 = bitcast i8* bitcast ([56 x i8]* @Lt_0AE5 to i8*) to i8*
	; arg 55
	%vr18448 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18449, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr18448
	%vr18452 = bitcast %FBSTRING* %vr18448 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18452, i32 1 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr18455 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr18454 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18455, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18454
	%vr18458 = bitcast %FBSTRING* %vr18454 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18458, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F38:

	; label .Lt_0578
	br label %.Lt_0578
.Lt_0578:

	; branchbop V <> 1
	%vr18462 = load i64, i64* %V.103
	%vr18461 = icmp ne i64 %vr18462, 1
	br i1 %vr18461, label %.Lt_0AE6, label %.Lt_0F39
.Lt_0F39:

	; label .Lt_0AE7
	br label %.Lt_0AE7
.Lt_0AE7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F6
	%vr18465 = bitcast i8* bitcast ([2 x i8]* @Lt_05F6 to i8*) to i8*
	; arg 1
	%vr18464 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18465, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr18464
	%vr18468 = bitcast %FBSTRING* %vr18464 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18468, i32 1 )

	; call fb_FileClose()
	; arg 1
	%vr18470 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F3A:

	; label .Lt_0AE6
	br label %.Lt_0AE6
.Lt_0AE6:

	; branchbop V <> 2
	%vr18474 = load i64, i64* %V.103
	%vr18473 = icmp ne i64 %vr18474, 2
	br i1 %vr18473, label %.Lt_0AE8, label %.Lt_0F3B
.Lt_0F3B:

	; label .Lt_0AE9
	br label %.Lt_0AE9
.Lt_0AE9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AEA
	%vr18477 = bitcast i8* bitcast ([11 x i8]* @Lt_0AEA to i8*) to i8*
	; arg 10
	%vr18476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18477, i64 10 )

	; call fb_PrintString()
	; arg 1
	; arg vr18476
	%vr18480 = bitcast %FBSTRING* %vr18476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18480, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F3C:

	; label .Lt_0AE8
	br label %.Lt_0AE8
.Lt_0AE8:

	; branchbop V <> 3
	%vr18484 = load i64, i64* %V.103
	%vr18483 = icmp ne i64 %vr18484, 3
	br i1 %vr18483, label %.Lt_0AEB, label %.Lt_0F3D
.Lt_0F3D:

	; label .Lt_0AEC
	br label %.Lt_0AEC
.Lt_0AEC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AED
	%vr18487 = bitcast i8* bitcast ([36 x i8]* @Lt_0AED to i8*) to i8*
	; arg 35
	%vr18486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18487, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18486
	%vr18490 = bitcast %FBSTRING* %vr18486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18490, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F3E:

	; label .Lt_0AEB
	br label %.Lt_0AEB
.Lt_0AEB:

	; branchbop V <> 4
	%vr18494 = load i64, i64* %V.103
	%vr18493 = icmp ne i64 %vr18494, 4
	br i1 %vr18493, label %.Lt_0AEE, label %.Lt_0F3F
.Lt_0F3F:

	; label .Lt_0AEF
	br label %.Lt_0AEF
.Lt_0AEF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF0
	%vr18497 = bitcast i8* bitcast ([39 x i8]* @Lt_0AF0 to i8*) to i8*
	; arg 38
	%vr18496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18497, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr18496
	%vr18500 = bitcast %FBSTRING* %vr18496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18500, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F40:

	; label .Lt_0AEE
	br label %.Lt_0AEE
.Lt_0AEE:

	; branchbop V <> 5
	%vr18504 = load i64, i64* %V.103
	%vr18503 = icmp ne i64 %vr18504, 5
	br i1 %vr18503, label %.Lt_0AF1, label %.Lt_0F41
.Lt_0F41:

	; label .Lt_0AF2
	br label %.Lt_0AF2
.Lt_0AF2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF3
	%vr18507 = bitcast i8* bitcast ([43 x i8]* @Lt_0AF3 to i8*) to i8*
	; arg 42
	%vr18506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18507, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18506
	%vr18510 = bitcast %FBSTRING* %vr18506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18510, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F42:

	; label .Lt_0AF1
	br label %.Lt_0AF1
.Lt_0AF1:

	; branchbop V <> 6
	%vr18514 = load i64, i64* %V.103
	%vr18513 = icmp ne i64 %vr18514, 6
	br i1 %vr18513, label %.Lt_0AF4, label %.Lt_0F43
.Lt_0F43:

	; label .Lt_0AF5
	br label %.Lt_0AF5
.Lt_0AF5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF6
	%vr18517 = bitcast i8* bitcast ([59 x i8]* @Lt_0AF6 to i8*) to i8*
	; arg 58
	%vr18516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18517, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr18516
	%vr18520 = bitcast %FBSTRING* %vr18516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18520, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F44:

	; label .Lt_0AF4
	br label %.Lt_0AF4
.Lt_0AF4:

	; branchbop V <> 7
	%vr18524 = load i64, i64* %V.103
	%vr18523 = icmp ne i64 %vr18524, 7
	br i1 %vr18523, label %.Lt_0AF7, label %.Lt_0F45
.Lt_0F45:

	; label .Lt_0AF8
	br label %.Lt_0AF8
.Lt_0AF8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AF9
	%vr18527 = bitcast i8* bitcast ([42 x i8]* @Lt_0AF9 to i8*) to i8*
	; arg 41
	%vr18526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18527, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr18526
	%vr18530 = bitcast %FBSTRING* %vr18526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18530, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F46:

	; label .Lt_0AF7
	br label %.Lt_0AF7
.Lt_0AF7:

	; branchbop V <> 8
	%vr18534 = load i64, i64* %V.103
	%vr18533 = icmp ne i64 %vr18534, 8
	br i1 %vr18533, label %.Lt_0AFA, label %.Lt_0F47
.Lt_0F47:

	; label .Lt_0AFB
	br label %.Lt_0AFB
.Lt_0AFB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFC
	%vr18537 = bitcast i8* bitcast ([80 x i8]* @Lt_0AFC to i8*) to i8*
	; arg 79
	%vr18536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18537, i64 79 )

	; call fb_PrintString()
	; arg 1
	; arg vr18536
	%vr18540 = bitcast %FBSTRING* %vr18536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18540, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F48:

	; label .Lt_0AFA
	br label %.Lt_0AFA
.Lt_0AFA:

	; branchbop V <> 9
	%vr18544 = load i64, i64* %V.103
	%vr18543 = icmp ne i64 %vr18544, 9
	br i1 %vr18543, label %.Lt_0AFD, label %.Lt_0F49
.Lt_0F49:

	; label .Lt_0AFE
	br label %.Lt_0AFE
.Lt_0AFE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0AFF
	%vr18547 = bitcast i8* bitcast ([36 x i8]* @Lt_0AFF to i8*) to i8*
	; arg 35
	%vr18546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18547, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18546
	%vr18550 = bitcast %FBSTRING* %vr18546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18550, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F4A:

	; label .Lt_0AFD
	br label %.Lt_0AFD
.Lt_0AFD:

	; branchbop V <> 10
	%vr18554 = load i64, i64* %V.103
	%vr18553 = icmp ne i64 %vr18554, 10
	br i1 %vr18553, label %.Lt_0B00, label %.Lt_0F4B
.Lt_0F4B:

	; label .Lt_0B01
	br label %.Lt_0B01
.Lt_0B01:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B02
	%vr18557 = bitcast i8* bitcast ([52 x i8]* @Lt_0B02 to i8*) to i8*
	; arg 51
	%vr18556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18557, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr18556
	%vr18560 = bitcast %FBSTRING* %vr18556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18560, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F4C:

	; label .Lt_0B00
	br label %.Lt_0B00
.Lt_0B00:

	; branchbop V <> 11
	%vr18564 = load i64, i64* %V.103
	%vr18563 = icmp ne i64 %vr18564, 11
	br i1 %vr18563, label %.Lt_0B03, label %.Lt_0F4D
.Lt_0F4D:

	; label .Lt_0B04
	br label %.Lt_0B04
.Lt_0B04:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B05
	%vr18567 = bitcast i8* bitcast ([55 x i8]* @Lt_0B05 to i8*) to i8*
	; arg 54
	%vr18566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18567, i64 54 )

	; call fb_PrintString()
	; arg 1
	; arg vr18566
	%vr18570 = bitcast %FBSTRING* %vr18566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18570, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F4E:

	; label .Lt_0B03
	br label %.Lt_0B03
.Lt_0B03:

	; branchbop V <> 12
	%vr18574 = load i64, i64* %V.103
	%vr18573 = icmp ne i64 %vr18574, 12
	br i1 %vr18573, label %.Lt_0B06, label %.Lt_0F4F
.Lt_0F4F:

	; label .Lt_0B07
	br label %.Lt_0B07
.Lt_0B07:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B08
	%vr18577 = bitcast i8* bitcast ([56 x i8]* @Lt_0B08 to i8*) to i8*
	; arg 55
	%vr18576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18577, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr18576
	%vr18580 = bitcast %FBSTRING* %vr18576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18580, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F50:

	; label .Lt_0B06
	br label %.Lt_0B06
.Lt_0B06:

	; branchbop V <> 13
	%vr18584 = load i64, i64* %V.103
	%vr18583 = icmp ne i64 %vr18584, 13
	br i1 %vr18583, label %.Lt_0B09, label %.Lt_0F51
.Lt_0F51:

	; label .Lt_0B0A
	br label %.Lt_0B0A
.Lt_0B0A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0B
	%vr18587 = bitcast i8* bitcast ([59 x i8]* @Lt_0B0B to i8*) to i8*
	; arg 58
	%vr18586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18587, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr18586
	%vr18590 = bitcast %FBSTRING* %vr18586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18590, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F52:

	; label .Lt_0B09
	br label %.Lt_0B09
.Lt_0B09:

	; branchbop V <> 14
	%vr18594 = load i64, i64* %V.103
	%vr18593 = icmp ne i64 %vr18594, 14
	br i1 %vr18593, label %.Lt_0B0C, label %.Lt_0F53
.Lt_0F53:

	; label .Lt_0B0D
	br label %.Lt_0B0D
.Lt_0B0D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B0E
	%vr18597 = bitcast i8* bitcast ([59 x i8]* @Lt_0B0E to i8*) to i8*
	; arg 58
	%vr18596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18597, i64 58 )

	; call fb_PrintString()
	; arg 1
	; arg vr18596
	%vr18600 = bitcast %FBSTRING* %vr18596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18600, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F54:

	; label .Lt_0B0C
	br label %.Lt_0B0C
.Lt_0B0C:

	; branchbop V <> 15
	%vr18604 = load i64, i64* %V.103
	%vr18603 = icmp ne i64 %vr18604, 15
	br i1 %vr18603, label %.Lt_0B0F, label %.Lt_0F55
.Lt_0F55:

	; label .Lt_0B10
	br label %.Lt_0B10
.Lt_0B10:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B11
	%vr18607 = bitcast i8* bitcast ([60 x i8]* @Lt_0B11 to i8*) to i8*
	; arg 59
	%vr18606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18607, i64 59 )

	; call fb_PrintString()
	; arg 1
	; arg vr18606
	%vr18610 = bitcast %FBSTRING* %vr18606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18610, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F56:

	; label .Lt_0B0F
	br label %.Lt_0B0F
.Lt_0B0F:

	; branchbop V <> 16
	%vr18614 = load i64, i64* %V.103
	%vr18613 = icmp ne i64 %vr18614, 16
	br i1 %vr18613, label %.Lt_0B12, label %.Lt_0F57
.Lt_0F57:

	; label .Lt_0B13
	br label %.Lt_0B13
.Lt_0B13:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B14
	%vr18617 = bitcast i8* bitcast ([64 x i8]* @Lt_0B14 to i8*) to i8*
	; arg 63
	%vr18616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18617, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr18616
	%vr18620 = bitcast %FBSTRING* %vr18616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18620, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F58:

	; label .Lt_0B12
	br label %.Lt_0B12
.Lt_0B12:

	; branchbop V <> 17
	%vr18624 = load i64, i64* %V.103
	%vr18623 = icmp ne i64 %vr18624, 17
	br i1 %vr18623, label %.Lt_0B15, label %.Lt_0F59
.Lt_0F59:

	; label .Lt_0B16
	br label %.Lt_0B16
.Lt_0B16:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B17
	%vr18627 = bitcast i8* bitcast ([72 x i8]* @Lt_0B17 to i8*) to i8*
	; arg 71
	%vr18626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18627, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr18626
	%vr18630 = bitcast %FBSTRING* %vr18626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18630, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F5A:

	; label .Lt_0B15
	br label %.Lt_0B15
.Lt_0B15:

	; branchbop V <> 18
	%vr18634 = load i64, i64* %V.103
	%vr18633 = icmp ne i64 %vr18634, 18
	br i1 %vr18633, label %.Lt_0B18, label %.Lt_0F5B
.Lt_0F5B:

	; label .Lt_0B19
	br label %.Lt_0B19
.Lt_0B19:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1A
	%vr18637 = bitcast i8* bitcast ([72 x i8]* @Lt_0B1A to i8*) to i8*
	; arg 71
	%vr18636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18637, i64 71 )

	; call fb_PrintString()
	; arg 1
	; arg vr18636
	%vr18640 = bitcast %FBSTRING* %vr18636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18640, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F5C:

	; label .Lt_0B18
	br label %.Lt_0B18
.Lt_0B18:

	; branchbop V <> 19
	%vr18644 = load i64, i64* %V.103
	%vr18643 = icmp ne i64 %vr18644, 19
	br i1 %vr18643, label %.Lt_0B1B, label %.Lt_0F5D
.Lt_0F5D:

	; label .Lt_0B1C
	br label %.Lt_0B1C
.Lt_0B1C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B1D
	%vr18647 = bitcast i8* bitcast ([35 x i8]* @Lt_0B1D to i8*) to i8*
	; arg 34
	%vr18646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18647, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18646
	%vr18650 = bitcast %FBSTRING* %vr18646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18650, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F5E:

	; label .Lt_0B1B
	br label %.Lt_0B1B
.Lt_0B1B:

	; branchbop V <> 20
	%vr18654 = load i64, i64* %V.103
	%vr18653 = icmp ne i64 %vr18654, 20
	br i1 %vr18653, label %.Lt_0B1E, label %.Lt_0F5F
.Lt_0F5F:

	; label .Lt_0B1F
	br label %.Lt_0B1F
.Lt_0B1F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B20
	%vr18657 = bitcast i8* bitcast ([38 x i8]* @Lt_0B20 to i8*) to i8*
	; arg 37
	%vr18656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18657, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr18656
	%vr18660 = bitcast %FBSTRING* %vr18656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18660, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F60:

	; label .Lt_0B1E
	br label %.Lt_0B1E
.Lt_0B1E:

	; branchbop V <> 21
	%vr18664 = load i64, i64* %V.103
	%vr18663 = icmp ne i64 %vr18664, 21
	br i1 %vr18663, label %.Lt_0B21, label %.Lt_0F61
.Lt_0F61:

	; label .Lt_0B22
	br label %.Lt_0B22
.Lt_0B22:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B23
	%vr18667 = bitcast i8* bitcast ([43 x i8]* @Lt_0B23 to i8*) to i8*
	; arg 42
	%vr18666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18667, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18666
	%vr18670 = bitcast %FBSTRING* %vr18666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18670, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F62:

	; label .Lt_0B21
	br label %.Lt_0B21
.Lt_0B21:

	; branchbop V <> 22
	%vr18674 = load i64, i64* %V.103
	%vr18673 = icmp ne i64 %vr18674, 22
	br i1 %vr18673, label %.Lt_0B24, label %.Lt_0F63
.Lt_0F63:

	; label .Lt_0B25
	br label %.Lt_0B25
.Lt_0B25:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B26
	%vr18677 = bitcast i8* bitcast ([50 x i8]* @Lt_0B26 to i8*) to i8*
	; arg 49
	%vr18676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18677, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr18676
	%vr18680 = bitcast %FBSTRING* %vr18676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18680, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F64:

	; label .Lt_0B24
	br label %.Lt_0B24
.Lt_0B24:

	; branchbop V <> 23
	%vr18684 = load i64, i64* %V.103
	%vr18683 = icmp ne i64 %vr18684, 23
	br i1 %vr18683, label %.Lt_0B27, label %.Lt_0F65
.Lt_0F65:

	; label .Lt_0B28
	br label %.Lt_0B28
.Lt_0B28:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B29
	%vr18687 = bitcast i8* bitcast ([53 x i8]* @Lt_0B29 to i8*) to i8*
	; arg 52
	%vr18686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18687, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr18686
	%vr18690 = bitcast %FBSTRING* %vr18686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18690, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F66:

	; label .Lt_0B27
	br label %.Lt_0B27
.Lt_0B27:

	; branchbop V <> 24
	%vr18694 = load i64, i64* %V.103
	%vr18693 = icmp ne i64 %vr18694, 24
	br i1 %vr18693, label %.Lt_0B2A, label %.Lt_0F67
.Lt_0F67:

	; label .Lt_0B2B
	br label %.Lt_0B2B
.Lt_0B2B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2C
	%vr18697 = bitcast i8* bitcast ([18 x i8]* @Lt_0B2C to i8*) to i8*
	; arg 17
	%vr18696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18697, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr18696
	%vr18700 = bitcast %FBSTRING* %vr18696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18700, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F68:

	; label .Lt_0B2A
	br label %.Lt_0B2A
.Lt_0B2A:

	; branchbop V <> 25
	%vr18704 = load i64, i64* %V.103
	%vr18703 = icmp ne i64 %vr18704, 25
	br i1 %vr18703, label %.Lt_0B2D, label %.Lt_0F69
.Lt_0F69:

	; label .Lt_0B2E
	br label %.Lt_0B2E
.Lt_0B2E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B2F
	%vr18707 = bitcast i8* bitcast ([22 x i8]* @Lt_0B2F to i8*) to i8*
	; arg 21
	%vr18706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18707, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18706
	%vr18710 = bitcast %FBSTRING* %vr18706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18710, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F6A:

	; label .Lt_0B2D
	br label %.Lt_0B2D
.Lt_0B2D:

	; branchbop V <> 26
	%vr18714 = load i64, i64* %V.103
	%vr18713 = icmp ne i64 %vr18714, 26
	br i1 %vr18713, label %.Lt_0B30, label %.Lt_0F6B
.Lt_0F6B:

	; label .Lt_0B31
	br label %.Lt_0B31
.Lt_0B31:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B32
	%vr18717 = bitcast i8* bitcast ([25 x i8]* @Lt_0B32 to i8*) to i8*
	; arg 24
	%vr18716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18717, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr18716
	%vr18720 = bitcast %FBSTRING* %vr18716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18720, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F6C:

	; label .Lt_0B30
	br label %.Lt_0B30
.Lt_0B30:

	; branchbop V <> 27
	%vr18724 = load i64, i64* %V.103
	%vr18723 = icmp ne i64 %vr18724, 27
	br i1 %vr18723, label %.Lt_0B33, label %.Lt_0F6D
.Lt_0F6D:

	; label .Lt_0B34
	br label %.Lt_0B34
.Lt_0B34:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B35
	%vr18727 = bitcast i8* bitcast ([27 x i8]* @Lt_0B35 to i8*) to i8*
	; arg 26
	%vr18726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18727, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr18726
	%vr18730 = bitcast %FBSTRING* %vr18726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18730, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F6E:

	; label .Lt_0B33
	br label %.Lt_0B33
.Lt_0B33:

	; branchbop V <> 28
	%vr18734 = load i64, i64* %V.103
	%vr18733 = icmp ne i64 %vr18734, 28
	br i1 %vr18733, label %.Lt_0B36, label %.Lt_0F6F
.Lt_0F6F:

	; label .Lt_0B37
	br label %.Lt_0B37
.Lt_0B37:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B38
	%vr18737 = bitcast i8* bitcast ([27 x i8]* @Lt_0B38 to i8*) to i8*
	; arg 26
	%vr18736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18737, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr18736
	%vr18740 = bitcast %FBSTRING* %vr18736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18740, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F70:

	; label .Lt_0B36
	br label %.Lt_0B36
.Lt_0B36:

	; branchbop V <> 29
	%vr18744 = load i64, i64* %V.103
	%vr18743 = icmp ne i64 %vr18744, 29
	br i1 %vr18743, label %.Lt_0B39, label %.Lt_0F71
.Lt_0F71:

	; label .Lt_0B3A
	br label %.Lt_0B3A
.Lt_0B3A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3B
	%vr18747 = bitcast i8* bitcast ([22 x i8]* @Lt_0B3B to i8*) to i8*
	; arg 21
	%vr18746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18747, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18746
	%vr18750 = bitcast %FBSTRING* %vr18746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18750, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F72:

	; label .Lt_0B39
	br label %.Lt_0B39
.Lt_0B39:

	; branchbop V <> 30
	%vr18754 = load i64, i64* %V.103
	%vr18753 = icmp ne i64 %vr18754, 30
	br i1 %vr18753, label %.Lt_0B3C, label %.Lt_0F73
.Lt_0F73:

	; label .Lt_0B3D
	br label %.Lt_0B3D
.Lt_0B3D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B3E
	%vr18757 = bitcast i8* bitcast ([32 x i8]* @Lt_0B3E to i8*) to i8*
	; arg 31
	%vr18756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18757, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr18756
	%vr18760 = bitcast %FBSTRING* %vr18756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18760, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F74:

	; label .Lt_0B3C
	br label %.Lt_0B3C
.Lt_0B3C:

	; branchbop V <> 31
	%vr18764 = load i64, i64* %V.103
	%vr18763 = icmp ne i64 %vr18764, 31
	br i1 %vr18763, label %.Lt_0B3F, label %.Lt_0F75
.Lt_0F75:

	; label .Lt_0B40
	br label %.Lt_0B40
.Lt_0B40:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B41
	%vr18767 = bitcast i8* bitcast ([35 x i8]* @Lt_0B41 to i8*) to i8*
	; arg 34
	%vr18766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18767, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18766
	%vr18770 = bitcast %FBSTRING* %vr18766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18770, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F76:

	; label .Lt_0B3F
	br label %.Lt_0B3F
.Lt_0B3F:

	; branchbop V <> 32
	%vr18774 = load i64, i64* %V.103
	%vr18773 = icmp ne i64 %vr18774, 32
	br i1 %vr18773, label %.Lt_0B42, label %.Lt_0F77
.Lt_0F77:

	; label .Lt_0B43
	br label %.Lt_0B43
.Lt_0B43:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B44
	%vr18777 = bitcast i8* bitcast ([39 x i8]* @Lt_0B44 to i8*) to i8*
	; arg 38
	%vr18776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18777, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr18776
	%vr18780 = bitcast %FBSTRING* %vr18776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18780, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F78:

	; label .Lt_0B42
	br label %.Lt_0B42
.Lt_0B42:

	; branchbop V <> 33
	%vr18784 = load i64, i64* %V.103
	%vr18783 = icmp ne i64 %vr18784, 33
	br i1 %vr18783, label %.Lt_0B45, label %.Lt_0F79
.Lt_0F79:

	; label .Lt_0B46
	br label %.Lt_0B46
.Lt_0B46:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B47
	%vr18787 = bitcast i8* bitcast ([52 x i8]* @Lt_0B47 to i8*) to i8*
	; arg 51
	%vr18786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18787, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr18786
	%vr18790 = bitcast %FBSTRING* %vr18786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18790, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F7A:

	; label .Lt_0B45
	br label %.Lt_0B45
.Lt_0B45:

	; branchbop V <> 34
	%vr18794 = load i64, i64* %V.103
	%vr18793 = icmp ne i64 %vr18794, 34
	br i1 %vr18793, label %.Lt_0B48, label %.Lt_0F7B
.Lt_0F7B:

	; label .Lt_0B49
	br label %.Lt_0B49
.Lt_0B49:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4A
	%vr18797 = bitcast i8* bitcast ([26 x i8]* @Lt_0B4A to i8*) to i8*
	; arg 25
	%vr18796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18797, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr18796
	%vr18800 = bitcast %FBSTRING* %vr18796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18800, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F7C:

	; label .Lt_0B48
	br label %.Lt_0B48
.Lt_0B48:

	; branchbop V <> 35
	%vr18804 = load i64, i64* %V.103
	%vr18803 = icmp ne i64 %vr18804, 35
	br i1 %vr18803, label %.Lt_0B4B, label %.Lt_0F7D
.Lt_0F7D:

	; label .Lt_0B4C
	br label %.Lt_0B4C
.Lt_0B4C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B4D
	%vr18807 = bitcast i8* bitcast ([30 x i8]* @Lt_0B4D to i8*) to i8*
	; arg 29
	%vr18806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18807, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr18806
	%vr18810 = bitcast %FBSTRING* %vr18806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18810, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F7E:

	; label .Lt_0B4B
	br label %.Lt_0B4B
.Lt_0B4B:

	; branchbop V <> 36
	%vr18814 = load i64, i64* %V.103
	%vr18813 = icmp ne i64 %vr18814, 36
	br i1 %vr18813, label %.Lt_0B4E, label %.Lt_0F7F
.Lt_0F7F:

	; label .Lt_0B4F
	br label %.Lt_0B4F
.Lt_0B4F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B50
	%vr18817 = bitcast i8* bitcast ([35 x i8]* @Lt_0B50 to i8*) to i8*
	; arg 34
	%vr18816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18817, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr18816
	%vr18820 = bitcast %FBSTRING* %vr18816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18820, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F80:

	; label .Lt_0B4E
	br label %.Lt_0B4E
.Lt_0B4E:

	; branchbop V <> 37
	%vr18824 = load i64, i64* %V.103
	%vr18823 = icmp ne i64 %vr18824, 37
	br i1 %vr18823, label %.Lt_0B51, label %.Lt_0F81
.Lt_0F81:

	; label .Lt_0B52
	br label %.Lt_0B52
.Lt_0B52:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B53
	%vr18827 = bitcast i8* bitcast ([36 x i8]* @Lt_0B53 to i8*) to i8*
	; arg 35
	%vr18826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18827, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr18826
	%vr18830 = bitcast %FBSTRING* %vr18826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18830, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F82:

	; label .Lt_0B51
	br label %.Lt_0B51
.Lt_0B51:

	; branchbop V <> 38
	%vr18834 = load i64, i64* %V.103
	%vr18833 = icmp ne i64 %vr18834, 38
	br i1 %vr18833, label %.Lt_0B54, label %.Lt_0F83
.Lt_0F83:

	; label .Lt_0B55
	br label %.Lt_0B55
.Lt_0B55:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B56
	%vr18837 = bitcast i8* bitcast ([52 x i8]* @Lt_0B56 to i8*) to i8*
	; arg 51
	%vr18836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18837, i64 51 )

	; call fb_PrintString()
	; arg 1
	; arg vr18836
	%vr18840 = bitcast %FBSTRING* %vr18836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18840, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F84:

	; label .Lt_0B54
	br label %.Lt_0B54
.Lt_0B54:

	; branchbop V <> 39
	%vr18844 = load i64, i64* %V.103
	%vr18843 = icmp ne i64 %vr18844, 39
	br i1 %vr18843, label %.Lt_0B57, label %.Lt_0F85
.Lt_0F85:

	; label .Lt_0B58
	br label %.Lt_0B58
.Lt_0B58:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B59
	%vr18847 = bitcast i8* bitcast ([9 x i8]* @Lt_0B59 to i8*) to i8*
	; arg 8
	%vr18846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18847, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr18846
	%vr18850 = bitcast %FBSTRING* %vr18846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18850, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F86:

	; label .Lt_0B57
	br label %.Lt_0B57
.Lt_0B57:

	; branchbop V <> 40
	%vr18854 = load i64, i64* %V.103
	%vr18853 = icmp ne i64 %vr18854, 40
	br i1 %vr18853, label %.Lt_0B5A, label %.Lt_0F87
.Lt_0F87:

	; label .Lt_0B5B
	br label %.Lt_0B5B
.Lt_0B5B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5C
	%vr18857 = bitcast i8* bitcast ([57 x i8]* @Lt_0B5C to i8*) to i8*
	; arg 56
	%vr18856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18857, i64 56 )

	; call fb_PrintString()
	; arg 1
	; arg vr18856
	%vr18860 = bitcast %FBSTRING* %vr18856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18860, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F88:

	; label .Lt_0B5A
	br label %.Lt_0B5A
.Lt_0B5A:

	; branchbop V <> 41
	%vr18864 = load i64, i64* %V.103
	%vr18863 = icmp ne i64 %vr18864, 41
	br i1 %vr18863, label %.Lt_0B5D, label %.Lt_0F89
.Lt_0F89:

	; label .Lt_0B5E
	br label %.Lt_0B5E
.Lt_0B5E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B5F
	%vr18867 = bitcast i8* bitcast ([62 x i8]* @Lt_0B5F to i8*) to i8*
	; arg 61
	%vr18866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18867, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr18866
	%vr18870 = bitcast %FBSTRING* %vr18866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18870, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F8A:

	; label .Lt_0B5D
	br label %.Lt_0B5D
.Lt_0B5D:

	; branchbop V <> 42
	%vr18874 = load i64, i64* %V.103
	%vr18873 = icmp ne i64 %vr18874, 42
	br i1 %vr18873, label %.Lt_0B60, label %.Lt_0F8B
.Lt_0F8B:

	; label .Lt_0B61
	br label %.Lt_0B61
.Lt_0B61:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B62
	%vr18877 = bitcast i8* bitcast ([62 x i8]* @Lt_0B62 to i8*) to i8*
	; arg 61
	%vr18876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18877, i64 61 )

	; call fb_PrintString()
	; arg 1
	; arg vr18876
	%vr18880 = bitcast %FBSTRING* %vr18876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18880, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F8C:

	; label .Lt_0B60
	br label %.Lt_0B60
.Lt_0B60:

	; branchbop V <> 43
	%vr18884 = load i64, i64* %V.103
	%vr18883 = icmp ne i64 %vr18884, 43
	br i1 %vr18883, label %.Lt_0B63, label %.Lt_0F8D
.Lt_0F8D:

	; label .Lt_0B64
	br label %.Lt_0B64
.Lt_0B64:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B65
	%vr18887 = bitcast i8* bitcast ([99 x i8]* @Lt_0B65 to i8*) to i8*
	; arg 98
	%vr18886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18887, i64 98 )

	; call fb_PrintString()
	; arg 1
	; arg vr18886
	%vr18890 = bitcast %FBSTRING* %vr18886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18890, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F8E:

	; label .Lt_0B63
	br label %.Lt_0B63
.Lt_0B63:

	; branchbop V <> 44
	%vr18894 = load i64, i64* %V.103
	%vr18893 = icmp ne i64 %vr18894, 44
	br i1 %vr18893, label %.Lt_0B66, label %.Lt_0F8F
.Lt_0F8F:

	; label .Lt_0B67
	br label %.Lt_0B67
.Lt_0B67:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B68
	%vr18897 = bitcast i8* bitcast ([105 x i8]* @Lt_0B68 to i8*) to i8*
	; arg 104
	%vr18896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18897, i64 104 )

	; call fb_PrintString()
	; arg 1
	; arg vr18896
	%vr18900 = bitcast %FBSTRING* %vr18896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18900, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F90:

	; label .Lt_0B66
	br label %.Lt_0B66
.Lt_0B66:

	; branchbop V <> 45
	%vr18904 = load i64, i64* %V.103
	%vr18903 = icmp ne i64 %vr18904, 45
	br i1 %vr18903, label %.Lt_0B69, label %.Lt_0F91
.Lt_0F91:

	; label .Lt_0B6A
	br label %.Lt_0B6A
.Lt_0B6A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6B
	%vr18907 = bitcast i8* bitcast ([22 x i8]* @Lt_0B6B to i8*) to i8*
	; arg 21
	%vr18906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18907, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr18906
	%vr18910 = bitcast %FBSTRING* %vr18906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18910, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F92:

	; label .Lt_0B69
	br label %.Lt_0B69
.Lt_0B69:

	; branchbop V <> 46
	%vr18914 = load i64, i64* %V.103
	%vr18913 = icmp ne i64 %vr18914, 46
	br i1 %vr18913, label %.Lt_0B6C, label %.Lt_0F93
.Lt_0F93:

	; label .Lt_0B6D
	br label %.Lt_0B6D
.Lt_0B6D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B6E
	%vr18917 = bitcast i8* bitcast ([40 x i8]* @Lt_0B6E to i8*) to i8*
	; arg 39
	%vr18916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18917, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr18916
	%vr18920 = bitcast %FBSTRING* %vr18916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18920, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F94:

	; label .Lt_0B6C
	br label %.Lt_0B6C
.Lt_0B6C:

	; branchbop V <> 47
	%vr18924 = load i64, i64* %V.103
	%vr18923 = icmp ne i64 %vr18924, 47
	br i1 %vr18923, label %.Lt_0B6F, label %.Lt_0F95
.Lt_0F95:

	; label .Lt_0B70
	br label %.Lt_0B70
.Lt_0B70:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B71
	%vr18927 = bitcast i8* bitcast ([40 x i8]* @Lt_0B71 to i8*) to i8*
	; arg 39
	%vr18926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18927, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr18926
	%vr18930 = bitcast %FBSTRING* %vr18926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18930, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F96:

	; label .Lt_0B6F
	br label %.Lt_0B6F
.Lt_0B6F:

	; branchbop V <> 48
	%vr18934 = load i64, i64* %V.103
	%vr18933 = icmp ne i64 %vr18934, 48
	br i1 %vr18933, label %.Lt_0B72, label %.Lt_0F97
.Lt_0F97:

	; label .Lt_0B73
	br label %.Lt_0B73
.Lt_0B73:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B74
	%vr18937 = bitcast i8* bitcast ([41 x i8]* @Lt_0B74 to i8*) to i8*
	; arg 40
	%vr18936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18937, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr18936
	%vr18940 = bitcast %FBSTRING* %vr18936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18940, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F98:

	; label .Lt_0B72
	br label %.Lt_0B72
.Lt_0B72:

	; branchbop V <> 49
	%vr18944 = load i64, i64* %V.103
	%vr18943 = icmp ne i64 %vr18944, 49
	br i1 %vr18943, label %.Lt_0B75, label %.Lt_0F99
.Lt_0F99:

	; label .Lt_0B76
	br label %.Lt_0B76
.Lt_0B76:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B77
	%vr18947 = bitcast i8* bitcast ([43 x i8]* @Lt_0B77 to i8*) to i8*
	; arg 42
	%vr18946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18947, i64 42 )

	; call fb_PrintString()
	; arg 1
	; arg vr18946
	%vr18950 = bitcast %FBSTRING* %vr18946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18950, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F9A:

	; label .Lt_0B75
	br label %.Lt_0B75
.Lt_0B75:

	; branchbop V <> 50
	%vr18954 = load i64, i64* %V.103
	%vr18953 = icmp ne i64 %vr18954, 50
	br i1 %vr18953, label %.Lt_0B78, label %.Lt_0F9B
.Lt_0F9B:

	; label .Lt_0B79
	br label %.Lt_0B79
.Lt_0B79:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7A
	%vr18957 = bitcast i8* bitcast ([44 x i8]* @Lt_0B7A to i8*) to i8*
	; arg 43
	%vr18956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18957, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr18956
	%vr18960 = bitcast %FBSTRING* %vr18956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18960, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F9C:

	; label .Lt_0B78
	br label %.Lt_0B78
.Lt_0B78:

	; branchbop V <> 51
	%vr18964 = load i64, i64* %V.103
	%vr18963 = icmp ne i64 %vr18964, 51
	br i1 %vr18963, label %.Lt_0B7B, label %.Lt_0F9D
.Lt_0F9D:

	; label .Lt_0B7C
	br label %.Lt_0B7C
.Lt_0B7C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B7D
	%vr18967 = bitcast i8* bitcast ([44 x i8]* @Lt_0B7D to i8*) to i8*
	; arg 43
	%vr18966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18967, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr18966
	%vr18970 = bitcast %FBSTRING* %vr18966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18970, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0F9E:

	; label .Lt_0B7B
	br label %.Lt_0B7B
.Lt_0B7B:

	; branchbop V <> 52
	%vr18974 = load i64, i64* %V.103
	%vr18973 = icmp ne i64 %vr18974, 52
	br i1 %vr18973, label %.Lt_0B7E, label %.Lt_0F9F
.Lt_0F9F:

	; label .Lt_0B7F
	br label %.Lt_0B7F
.Lt_0B7F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B80
	%vr18977 = bitcast i8* bitcast ([42 x i8]* @Lt_0B80 to i8*) to i8*
	; arg 41
	%vr18976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18977, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr18976
	%vr18980 = bitcast %FBSTRING* %vr18976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18980, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FA0:

	; label .Lt_0B7E
	br label %.Lt_0B7E
.Lt_0B7E:

	; branchbop V <> 53
	%vr18984 = load i64, i64* %V.103
	%vr18983 = icmp ne i64 %vr18984, 53
	br i1 %vr18983, label %.Lt_0B81, label %.Lt_0FA1
.Lt_0FA1:

	; label .Lt_0B82
	br label %.Lt_0B82
.Lt_0B82:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B83
	%vr18987 = bitcast i8* bitcast ([42 x i8]* @Lt_0B83 to i8*) to i8*
	; arg 41
	%vr18986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18987, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr18986
	%vr18990 = bitcast %FBSTRING* %vr18986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr18990, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FA2:

	; label .Lt_0B81
	br label %.Lt_0B81
.Lt_0B81:

	; branchbop V <> 54
	%vr18994 = load i64, i64* %V.103
	%vr18993 = icmp ne i64 %vr18994, 54
	br i1 %vr18993, label %.Lt_0B84, label %.Lt_0FA3
.Lt_0FA3:

	; label .Lt_0B85
	br label %.Lt_0B85
.Lt_0B85:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B86
	%vr18997 = bitcast i8* bitcast ([46 x i8]* @Lt_0B86 to i8*) to i8*
	; arg 45
	%vr18996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr18997, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr18996
	%vr19000 = bitcast %FBSTRING* %vr18996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19000, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FA4:

	; label .Lt_0B84
	br label %.Lt_0B84
.Lt_0B84:

	; branchbop V <> 55
	%vr19004 = load i64, i64* %V.103
	%vr19003 = icmp ne i64 %vr19004, 55
	br i1 %vr19003, label %.Lt_0B87, label %.Lt_0FA5
.Lt_0FA5:

	; label .Lt_0B88
	br label %.Lt_0B88
.Lt_0B88:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B89
	%vr19007 = bitcast i8* bitcast ([31 x i8]* @Lt_0B89 to i8*) to i8*
	; arg 30
	%vr19006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19007, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19006
	%vr19010 = bitcast %FBSTRING* %vr19006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19010, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FA6:

	; label .Lt_0B87
	br label %.Lt_0B87
.Lt_0B87:

	; branchbop V <> 56
	%vr19014 = load i64, i64* %V.103
	%vr19013 = icmp ne i64 %vr19014, 56
	br i1 %vr19013, label %.Lt_0B8A, label %.Lt_0FA7
.Lt_0FA7:

	; label .Lt_0B8B
	br label %.Lt_0B8B
.Lt_0B8B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8C
	%vr19017 = bitcast i8* bitcast ([36 x i8]* @Lt_0B8C to i8*) to i8*
	; arg 35
	%vr19016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19017, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19016
	%vr19020 = bitcast %FBSTRING* %vr19016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19020, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FA8:

	; label .Lt_0B8A
	br label %.Lt_0B8A
.Lt_0B8A:

	; branchbop V <> 57
	%vr19024 = load i64, i64* %V.103
	%vr19023 = icmp ne i64 %vr19024, 57
	br i1 %vr19023, label %.Lt_0B8D, label %.Lt_0FA9
.Lt_0FA9:

	; label .Lt_0B8E
	br label %.Lt_0B8E
.Lt_0B8E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B8F
	%vr19027 = bitcast i8* bitcast ([36 x i8]* @Lt_0B8F to i8*) to i8*
	; arg 35
	%vr19026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19027, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19026
	%vr19030 = bitcast %FBSTRING* %vr19026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19030, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FAA:

	; label .Lt_0B8D
	br label %.Lt_0B8D
.Lt_0B8D:

	; branchbop V <> 58
	%vr19034 = load i64, i64* %V.103
	%vr19033 = icmp ne i64 %vr19034, 58
	br i1 %vr19033, label %.Lt_0B90, label %.Lt_0FAB
.Lt_0FAB:

	; label .Lt_0B91
	br label %.Lt_0B91
.Lt_0B91:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B92
	%vr19037 = bitcast i8* bitcast ([23 x i8]* @Lt_0B92 to i8*) to i8*
	; arg 22
	%vr19036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19037, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr19036
	%vr19040 = bitcast %FBSTRING* %vr19036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19040, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FAC:

	; label .Lt_0B90
	br label %.Lt_0B90
.Lt_0B90:

	; branchbop V <> 59
	%vr19044 = load i64, i64* %V.103
	%vr19043 = icmp ne i64 %vr19044, 59
	br i1 %vr19043, label %.Lt_0B93, label %.Lt_0FAD
.Lt_0FAD:

	; label .Lt_0B94
	br label %.Lt_0B94
.Lt_0B94:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B95
	%vr19047 = bitcast i8* bitcast ([28 x i8]* @Lt_0B95 to i8*) to i8*
	; arg 27
	%vr19046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19047, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr19046
	%vr19050 = bitcast %FBSTRING* %vr19046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19050, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FAE:

	; label .Lt_0B93
	br label %.Lt_0B93
.Lt_0B93:

	; branchbop V <> 60
	%vr19054 = load i64, i64* %V.103
	%vr19053 = icmp ne i64 %vr19054, 60
	br i1 %vr19053, label %.Lt_0B96, label %.Lt_0FAF
.Lt_0FAF:

	; label .Lt_0B97
	br label %.Lt_0B97
.Lt_0B97:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B98
	%vr19057 = bitcast i8* bitcast ([29 x i8]* @Lt_0B98 to i8*) to i8*
	; arg 28
	%vr19056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19057, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19056
	%vr19060 = bitcast %FBSTRING* %vr19056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19060, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FB0:

	; label .Lt_0B96
	br label %.Lt_0B96
.Lt_0B96:

	; branchbop V <> 61
	%vr19064 = load i64, i64* %V.103
	%vr19063 = icmp ne i64 %vr19064, 61
	br i1 %vr19063, label %.Lt_0B99, label %.Lt_0FB1
.Lt_0FB1:

	; label .Lt_0B9A
	br label %.Lt_0B9A
.Lt_0B9A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9B
	%vr19067 = bitcast i8* bitcast ([30 x i8]* @Lt_0B9B to i8*) to i8*
	; arg 29
	%vr19066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19067, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19066
	%vr19070 = bitcast %FBSTRING* %vr19066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19070, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FB2:

	; label .Lt_0B99
	br label %.Lt_0B99
.Lt_0B99:

	; branchbop V <> 62
	%vr19074 = load i64, i64* %V.103
	%vr19073 = icmp ne i64 %vr19074, 62
	br i1 %vr19073, label %.Lt_0B9C, label %.Lt_0FB3
.Lt_0FB3:

	; label .Lt_0B9D
	br label %.Lt_0B9D
.Lt_0B9D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0B9E
	%vr19077 = bitcast i8* bitcast ([39 x i8]* @Lt_0B9E to i8*) to i8*
	; arg 38
	%vr19076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19077, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr19076
	%vr19080 = bitcast %FBSTRING* %vr19076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19080, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FB4:

	; label .Lt_0B9C
	br label %.Lt_0B9C
.Lt_0B9C:

	; branchbop V <> 63
	%vr19084 = load i64, i64* %V.103
	%vr19083 = icmp ne i64 %vr19084, 63
	br i1 %vr19083, label %.Lt_0B9F, label %.Lt_0FB5
.Lt_0FB5:

	; label .Lt_0BA0
	br label %.Lt_0BA0
.Lt_0BA0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA1
	%vr19087 = bitcast i8* bitcast ([22 x i8]* @Lt_0BA1 to i8*) to i8*
	; arg 21
	%vr19086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19087, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr19086
	%vr19090 = bitcast %FBSTRING* %vr19086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19090, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FB6:

	; label .Lt_0B9F
	br label %.Lt_0B9F
.Lt_0B9F:

	; branchbop V <> 64
	%vr19094 = load i64, i64* %V.103
	%vr19093 = icmp ne i64 %vr19094, 64
	br i1 %vr19093, label %.Lt_0BA2, label %.Lt_0FB7
.Lt_0FB7:

	; label .Lt_0BA3
	br label %.Lt_0BA3
.Lt_0BA3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA4
	%vr19097 = bitcast i8* bitcast ([29 x i8]* @Lt_0BA4 to i8*) to i8*
	; arg 28
	%vr19096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19097, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19096
	%vr19100 = bitcast %FBSTRING* %vr19096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19100, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FB8:

	; label .Lt_0BA2
	br label %.Lt_0BA2
.Lt_0BA2:

	; branchbop V <> 65
	%vr19104 = load i64, i64* %V.103
	%vr19103 = icmp ne i64 %vr19104, 65
	br i1 %vr19103, label %.Lt_0BA5, label %.Lt_0FB9
.Lt_0FB9:

	; label .Lt_0BA6
	br label %.Lt_0BA6
.Lt_0BA6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BA7
	%vr19107 = bitcast i8* bitcast ([24 x i8]* @Lt_0BA7 to i8*) to i8*
	; arg 23
	%vr19106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19107, i64 23 )

	; call fb_PrintString()
	; arg 1
	; arg vr19106
	%vr19110 = bitcast %FBSTRING* %vr19106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19110, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FBA:

	; label .Lt_0BA5
	br label %.Lt_0BA5
.Lt_0BA5:

	; branchbop V <> 66
	%vr19114 = load i64, i64* %V.103
	%vr19113 = icmp ne i64 %vr19114, 66
	br i1 %vr19113, label %.Lt_0BA8, label %.Lt_0FBB
.Lt_0FBB:

	; label .Lt_0BA9
	br label %.Lt_0BA9
.Lt_0BA9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAA
	%vr19117 = bitcast i8* bitcast ([32 x i8]* @Lt_0BAA to i8*) to i8*
	; arg 31
	%vr19116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19117, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr19116
	%vr19120 = bitcast %FBSTRING* %vr19116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19120, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FBC:

	; label .Lt_0BA8
	br label %.Lt_0BA8
.Lt_0BA8:

	; branchbop V <> 67
	%vr19124 = load i64, i64* %V.103
	%vr19123 = icmp ne i64 %vr19124, 67
	br i1 %vr19123, label %.Lt_0BAB, label %.Lt_0FBD
.Lt_0FBD:

	; label .Lt_0BAC
	br label %.Lt_0BAC
.Lt_0BAC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BAD
	%vr19127 = bitcast i8* bitcast ([33 x i8]* @Lt_0BAD to i8*) to i8*
	; arg 32
	%vr19126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19127, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr19126
	%vr19130 = bitcast %FBSTRING* %vr19126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19130, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FBE:

	; label .Lt_0BAB
	br label %.Lt_0BAB
.Lt_0BAB:

	; branchbop V <> 68
	%vr19134 = load i64, i64* %V.103
	%vr19133 = icmp ne i64 %vr19134, 68
	br i1 %vr19133, label %.Lt_0BAE, label %.Lt_0FBF
.Lt_0FBF:

	; label .Lt_0BAF
	br label %.Lt_0BAF
.Lt_0BAF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB0
	%vr19137 = bitcast i8* bitcast ([27 x i8]* @Lt_0BB0 to i8*) to i8*
	; arg 26
	%vr19136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19137, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19136
	%vr19140 = bitcast %FBSTRING* %vr19136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19140, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FC0:

	; label .Lt_0BAE
	br label %.Lt_0BAE
.Lt_0BAE:

	; branchbop V <> 69
	%vr19144 = load i64, i64* %V.103
	%vr19143 = icmp ne i64 %vr19144, 69
	br i1 %vr19143, label %.Lt_0BB1, label %.Lt_0FC1
.Lt_0FC1:

	; label .Lt_0BB2
	br label %.Lt_0BB2
.Lt_0BB2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB3
	%vr19147 = bitcast i8* bitcast ([30 x i8]* @Lt_0BB3 to i8*) to i8*
	; arg 29
	%vr19146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19147, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19146
	%vr19150 = bitcast %FBSTRING* %vr19146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19150, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FC2:

	; label .Lt_0BB1
	br label %.Lt_0BB1
.Lt_0BB1:

	; branchbop V <> 70
	%vr19154 = load i64, i64* %V.103
	%vr19153 = icmp ne i64 %vr19154, 70
	br i1 %vr19153, label %.Lt_0BB4, label %.Lt_0FC3
.Lt_0FC3:

	; label .Lt_0BB5
	br label %.Lt_0BB5
.Lt_0BB5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB6
	%vr19157 = bitcast i8* bitcast ([20 x i8]* @Lt_0BB6 to i8*) to i8*
	; arg 19
	%vr19156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19157, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr19156
	%vr19160 = bitcast %FBSTRING* %vr19156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19160, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FC4:

	; label .Lt_0BB4
	br label %.Lt_0BB4
.Lt_0BB4:

	; branchbop V <> 71
	%vr19164 = load i64, i64* %V.103
	%vr19163 = icmp ne i64 %vr19164, 71
	br i1 %vr19163, label %.Lt_0BB7, label %.Lt_0FC5
.Lt_0FC5:

	; label .Lt_0BB8
	br label %.Lt_0BB8
.Lt_0BB8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BB9
	%vr19167 = bitcast i8* bitcast ([45 x i8]* @Lt_0BB9 to i8*) to i8*
	; arg 44
	%vr19166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19167, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr19166
	%vr19170 = bitcast %FBSTRING* %vr19166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19170, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FC6:

	; label .Lt_0BB7
	br label %.Lt_0BB7
.Lt_0BB7:

	; branchbop V <> 72
	%vr19174 = load i64, i64* %V.103
	%vr19173 = icmp ne i64 %vr19174, 72
	br i1 %vr19173, label %.Lt_0BBA, label %.Lt_0FC7
.Lt_0FC7:

	; label .Lt_0BBB
	br label %.Lt_0BBB
.Lt_0BBB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBC
	%vr19177 = bitcast i8* bitcast ([27 x i8]* @Lt_0BBC to i8*) to i8*
	; arg 26
	%vr19176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19177, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19176
	%vr19180 = bitcast %FBSTRING* %vr19176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19180, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FC8:

	; label .Lt_0BBA
	br label %.Lt_0BBA
.Lt_0BBA:

	; branchbop V <> 73
	%vr19184 = load i64, i64* %V.103
	%vr19183 = icmp ne i64 %vr19184, 73
	br i1 %vr19183, label %.Lt_0BBD, label %.Lt_0FC9
.Lt_0FC9:

	; label .Lt_0BBE
	br label %.Lt_0BBE
.Lt_0BBE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BBF
	%vr19187 = bitcast i8* bitcast ([30 x i8]* @Lt_0BBF to i8*) to i8*
	; arg 29
	%vr19186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19187, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19186
	%vr19190 = bitcast %FBSTRING* %vr19186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19190, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FCA:

	; label .Lt_0BBD
	br label %.Lt_0BBD
.Lt_0BBD:

	; branchbop V <> 74
	%vr19194 = load i64, i64* %V.103
	%vr19193 = icmp ne i64 %vr19194, 74
	br i1 %vr19193, label %.Lt_0BC0, label %.Lt_0FCB
.Lt_0FCB:

	; label .Lt_0BC1
	br label %.Lt_0BC1
.Lt_0BC1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC2
	%vr19197 = bitcast i8* bitcast ([30 x i8]* @Lt_0BC2 to i8*) to i8*
	; arg 29
	%vr19196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19197, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19196
	%vr19200 = bitcast %FBSTRING* %vr19196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19200, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FCC:

	; label .Lt_0BC0
	br label %.Lt_0BC0
.Lt_0BC0:

	; branchbop V <> 75
	%vr19204 = load i64, i64* %V.103
	%vr19203 = icmp ne i64 %vr19204, 75
	br i1 %vr19203, label %.Lt_0BC3, label %.Lt_0FCD
.Lt_0FCD:

	; label .Lt_0BC4
	br label %.Lt_0BC4
.Lt_0BC4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC5
	%vr19207 = bitcast i8* bitcast ([49 x i8]* @Lt_0BC5 to i8*) to i8*
	; arg 48
	%vr19206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19207, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr19206
	%vr19210 = bitcast %FBSTRING* %vr19206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19210, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FCE:

	; label .Lt_0BC3
	br label %.Lt_0BC3
.Lt_0BC3:

	; branchbop V <> 76
	%vr19214 = load i64, i64* %V.103
	%vr19213 = icmp ne i64 %vr19214, 76
	br i1 %vr19213, label %.Lt_0BC6, label %.Lt_0FCF
.Lt_0FCF:

	; label .Lt_0BC7
	br label %.Lt_0BC7
.Lt_0BC7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BC8
	%vr19217 = bitcast i8* bitcast ([29 x i8]* @Lt_0BC8 to i8*) to i8*
	; arg 28
	%vr19216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19217, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19216
	%vr19220 = bitcast %FBSTRING* %vr19216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19220, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FD0:

	; label .Lt_0BC6
	br label %.Lt_0BC6
.Lt_0BC6:

	; branchbop V <> 77
	%vr19224 = load i64, i64* %V.103
	%vr19223 = icmp ne i64 %vr19224, 77
	br i1 %vr19223, label %.Lt_0BC9, label %.Lt_0FD1
.Lt_0FD1:

	; label .Lt_0BCA
	br label %.Lt_0BCA
.Lt_0BCA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCB
	%vr19227 = bitcast i8* bitcast ([67 x i8]* @Lt_0BCB to i8*) to i8*
	; arg 66
	%vr19226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19227, i64 66 )

	; call fb_PrintString()
	; arg 1
	; arg vr19226
	%vr19230 = bitcast %FBSTRING* %vr19226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19230, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FD2:

	; label .Lt_0BC9
	br label %.Lt_0BC9
.Lt_0BC9:

	; branchbop V <> 78
	%vr19234 = load i64, i64* %V.103
	%vr19233 = icmp ne i64 %vr19234, 78
	br i1 %vr19233, label %.Lt_0BCC, label %.Lt_0FD3
.Lt_0FD3:

	; label .Lt_0BCD
	br label %.Lt_0BCD
.Lt_0BCD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BCE
	%vr19237 = bitcast i8* bitcast ([18 x i8]* @Lt_0BCE to i8*) to i8*
	; arg 17
	%vr19236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19237, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19236
	%vr19240 = bitcast %FBSTRING* %vr19236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19240, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FD4:

	; label .Lt_0BCC
	br label %.Lt_0BCC
.Lt_0BCC:

	; branchbop V <> 79
	%vr19244 = load i64, i64* %V.103
	%vr19243 = icmp ne i64 %vr19244, 79
	br i1 %vr19243, label %.Lt_0BCF, label %.Lt_0FD5
.Lt_0FD5:

	; label .Lt_0BD0
	br label %.Lt_0BD0
.Lt_0BD0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD1
	%vr19247 = bitcast i8* bitcast ([20 x i8]* @Lt_0BD1 to i8*) to i8*
	; arg 19
	%vr19246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19247, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr19246
	%vr19250 = bitcast %FBSTRING* %vr19246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19250, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FD6:

	; label .Lt_0BCF
	br label %.Lt_0BCF
.Lt_0BCF:

	; branchbop V <> 80
	%vr19254 = load i64, i64* %V.103
	%vr19253 = icmp ne i64 %vr19254, 80
	br i1 %vr19253, label %.Lt_0BD2, label %.Lt_0FD7
.Lt_0FD7:

	; label .Lt_0BD3
	br label %.Lt_0BD3
.Lt_0BD3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD4
	%vr19257 = bitcast i8* bitcast ([36 x i8]* @Lt_0BD4 to i8*) to i8*
	; arg 35
	%vr19256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19257, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19256
	%vr19260 = bitcast %FBSTRING* %vr19256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19260, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FD8:

	; label .Lt_0BD2
	br label %.Lt_0BD2
.Lt_0BD2:

	; branchbop V <> 81
	%vr19264 = load i64, i64* %V.103
	%vr19263 = icmp ne i64 %vr19264, 81
	br i1 %vr19263, label %.Lt_0BD5, label %.Lt_0FD9
.Lt_0FD9:

	; label .Lt_0BD6
	br label %.Lt_0BD6
.Lt_0BD6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BD7
	%vr19267 = bitcast i8* bitcast ([36 x i8]* @Lt_0BD7 to i8*) to i8*
	; arg 35
	%vr19266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19267, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19266
	%vr19270 = bitcast %FBSTRING* %vr19266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19270, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FDA:

	; label .Lt_0BD5
	br label %.Lt_0BD5
.Lt_0BD5:

	; branchbop V <> 82
	%vr19274 = load i64, i64* %V.103
	%vr19273 = icmp ne i64 %vr19274, 82
	br i1 %vr19273, label %.Lt_0BD8, label %.Lt_0FDB
.Lt_0FDB:

	; label .Lt_0BD9
	br label %.Lt_0BD9
.Lt_0BD9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BDA
	%vr19277 = bitcast i8* bitcast ([36 x i8]* @Lt_0BDA to i8*) to i8*
	; arg 35
	%vr19276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19277, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19276
	%vr19280 = bitcast %FBSTRING* %vr19276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19280, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FDC:

	; label .Lt_0BD8
	br label %.Lt_0BD8
.Lt_0BD8:

	; branchbop V <> 83
	%vr19284 = load i64, i64* %V.103
	%vr19283 = icmp ne i64 %vr19284, 83
	br i1 %vr19283, label %.Lt_0BDB, label %.Lt_0FDD
.Lt_0FDD:

	; label .Lt_0BDC
	br label %.Lt_0BDC
.Lt_0BDC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BDD
	%vr19287 = bitcast i8* bitcast ([36 x i8]* @Lt_0BDD to i8*) to i8*
	; arg 35
	%vr19286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19287, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19286
	%vr19290 = bitcast %FBSTRING* %vr19286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19290, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FDE:

	; label .Lt_0BDB
	br label %.Lt_0BDB
.Lt_0BDB:

	; branchbop V <> 84
	%vr19294 = load i64, i64* %V.103
	%vr19293 = icmp ne i64 %vr19294, 84
	br i1 %vr19293, label %.Lt_0BDE, label %.Lt_0FDF
.Lt_0FDF:

	; label .Lt_0BDF
	br label %.Lt_0BDF
.Lt_0BDF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE0
	%vr19297 = bitcast i8* bitcast ([36 x i8]* @Lt_0BE0 to i8*) to i8*
	; arg 35
	%vr19296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19297, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19296
	%vr19300 = bitcast %FBSTRING* %vr19296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19300, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FE0:

	; label .Lt_0BDE
	br label %.Lt_0BDE
.Lt_0BDE:

	; branchbop V <> 85
	%vr19304 = load i64, i64* %V.103
	%vr19303 = icmp ne i64 %vr19304, 85
	br i1 %vr19303, label %.Lt_0BE1, label %.Lt_0FE1
.Lt_0FE1:

	; label .Lt_0BE2
	br label %.Lt_0BE2
.Lt_0BE2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE3
	%vr19307 = bitcast i8* bitcast ([39 x i8]* @Lt_0BE3 to i8*) to i8*
	; arg 38
	%vr19306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19307, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr19306
	%vr19310 = bitcast %FBSTRING* %vr19306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19310, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FE2:

	; label .Lt_0BE1
	br label %.Lt_0BE1
.Lt_0BE1:

	; branchbop V <> 86
	%vr19314 = load i64, i64* %V.103
	%vr19313 = icmp ne i64 %vr19314, 86
	br i1 %vr19313, label %.Lt_0BE4, label %.Lt_0FE3
.Lt_0FE3:

	; label .Lt_0BE5
	br label %.Lt_0BE5
.Lt_0BE5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE6
	%vr19317 = bitcast i8* bitcast ([53 x i8]* @Lt_0BE6 to i8*) to i8*
	; arg 52
	%vr19316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19317, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr19316
	%vr19320 = bitcast %FBSTRING* %vr19316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19320, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FE4:

	; label .Lt_0BE4
	br label %.Lt_0BE4
.Lt_0BE4:

	; branchbop V <> 87
	%vr19324 = load i64, i64* %V.103
	%vr19323 = icmp ne i64 %vr19324, 87
	br i1 %vr19323, label %.Lt_0BE7, label %.Lt_0FE5
.Lt_0FE5:

	; label .Lt_0BE8
	br label %.Lt_0BE8
.Lt_0BE8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BE9
	%vr19327 = bitcast i8* bitcast ([89 x i8]* @Lt_0BE9 to i8*) to i8*
	; arg 88
	%vr19326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19327, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr19326
	%vr19330 = bitcast %FBSTRING* %vr19326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19330, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FE6:

	; label .Lt_0BE7
	br label %.Lt_0BE7
.Lt_0BE7:

	; branchbop V <> 88
	%vr19334 = load i64, i64* %V.103
	%vr19333 = icmp ne i64 %vr19334, 88
	br i1 %vr19333, label %.Lt_0BEA, label %.Lt_0FE7
.Lt_0FE7:

	; label .Lt_0BEB
	br label %.Lt_0BEB
.Lt_0BEB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BEC
	%vr19337 = bitcast i8* bitcast ([45 x i8]* @Lt_0BEC to i8*) to i8*
	; arg 44
	%vr19336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19337, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr19336
	%vr19340 = bitcast %FBSTRING* %vr19336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19340, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FE8:

	; label .Lt_0BEA
	br label %.Lt_0BEA
.Lt_0BEA:

	; branchbop V <> 89
	%vr19344 = load i64, i64* %V.103
	%vr19343 = icmp ne i64 %vr19344, 89
	br i1 %vr19343, label %.Lt_0BED, label %.Lt_0FE9
.Lt_0FE9:

	; label .Lt_0BEE
	br label %.Lt_0BEE
.Lt_0BEE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BEF
	%vr19347 = bitcast i8* bitcast ([25 x i8]* @Lt_0BEF to i8*) to i8*
	; arg 24
	%vr19346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19347, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr19346
	%vr19350 = bitcast %FBSTRING* %vr19346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19350, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FEA:

	; label .Lt_0BED
	br label %.Lt_0BED
.Lt_0BED:

	; branchbop V <> 90
	%vr19354 = load i64, i64* %V.103
	%vr19353 = icmp ne i64 %vr19354, 90
	br i1 %vr19353, label %.Lt_0BF0, label %.Lt_0FEB
.Lt_0FEB:

	; label .Lt_0BF1
	br label %.Lt_0BF1
.Lt_0BF1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF2
	%vr19357 = bitcast i8* bitcast ([27 x i8]* @Lt_0BF2 to i8*) to i8*
	; arg 26
	%vr19356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19357, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19356
	%vr19360 = bitcast %FBSTRING* %vr19356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19360, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FEC:

	; label .Lt_0BF0
	br label %.Lt_0BF0
.Lt_0BF0:

	; branchbop V <> 91
	%vr19364 = load i64, i64* %V.103
	%vr19363 = icmp ne i64 %vr19364, 91
	br i1 %vr19363, label %.Lt_0BF3, label %.Lt_0FED
.Lt_0FED:

	; label .Lt_0BF4
	br label %.Lt_0BF4
.Lt_0BF4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF5
	%vr19367 = bitcast i8* bitcast ([27 x i8]* @Lt_0BF5 to i8*) to i8*
	; arg 26
	%vr19366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19367, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19366
	%vr19370 = bitcast %FBSTRING* %vr19366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19370, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FEE:

	; label .Lt_0BF3
	br label %.Lt_0BF3
.Lt_0BF3:

	; branchbop V <> 92
	%vr19374 = load i64, i64* %V.103
	%vr19373 = icmp ne i64 %vr19374, 92
	br i1 %vr19373, label %.Lt_0BF6, label %.Lt_0FEF
.Lt_0FEF:

	; label .Lt_0BF7
	br label %.Lt_0BF7
.Lt_0BF7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BF8
	%vr19377 = bitcast i8* bitcast ([29 x i8]* @Lt_0BF8 to i8*) to i8*
	; arg 28
	%vr19376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19377, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19376
	%vr19380 = bitcast %FBSTRING* %vr19376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19380, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FF0:

	; label .Lt_0BF6
	br label %.Lt_0BF6
.Lt_0BF6:

	; branchbop V <> 93
	%vr19384 = load i64, i64* %V.103
	%vr19383 = icmp ne i64 %vr19384, 93
	br i1 %vr19383, label %.Lt_0BF9, label %.Lt_0FF1
.Lt_0FF1:

	; label .Lt_0BFA
	br label %.Lt_0BFA
.Lt_0BFA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BFB
	%vr19387 = bitcast i8* bitcast ([30 x i8]* @Lt_0BFB to i8*) to i8*
	; arg 29
	%vr19386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19387, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19386
	%vr19390 = bitcast %FBSTRING* %vr19386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19390, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FF2:

	; label .Lt_0BF9
	br label %.Lt_0BF9
.Lt_0BF9:

	; branchbop V <> 94
	%vr19394 = load i64, i64* %V.103
	%vr19393 = icmp ne i64 %vr19394, 94
	br i1 %vr19393, label %.Lt_0BFC, label %.Lt_0FF3
.Lt_0FF3:

	; label .Lt_0BFD
	br label %.Lt_0BFD
.Lt_0BFD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0BFE
	%vr19397 = bitcast i8* bitcast ([33 x i8]* @Lt_0BFE to i8*) to i8*
	; arg 32
	%vr19396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19397, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr19396
	%vr19400 = bitcast %FBSTRING* %vr19396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19400, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FF4:

	; label .Lt_0BFC
	br label %.Lt_0BFC
.Lt_0BFC:

	; branchbop V <> 95
	%vr19404 = load i64, i64* %V.103
	%vr19403 = icmp ne i64 %vr19404, 95
	br i1 %vr19403, label %.Lt_0BFF, label %.Lt_0FF5
.Lt_0FF5:

	; label .Lt_0C00
	br label %.Lt_0C00
.Lt_0C00:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C01
	%vr19407 = bitcast i8* bitcast ([30 x i8]* @Lt_0C01 to i8*) to i8*
	; arg 29
	%vr19406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19407, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19406
	%vr19410 = bitcast %FBSTRING* %vr19406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19410, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FF6:

	; label .Lt_0BFF
	br label %.Lt_0BFF
.Lt_0BFF:

	; branchbop V <> 96
	%vr19414 = load i64, i64* %V.103
	%vr19413 = icmp ne i64 %vr19414, 96
	br i1 %vr19413, label %.Lt_0C02, label %.Lt_0FF7
.Lt_0FF7:

	; label .Lt_0C03
	br label %.Lt_0C03
.Lt_0C03:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C04
	%vr19417 = bitcast i8* bitcast ([31 x i8]* @Lt_0C04 to i8*) to i8*
	; arg 30
	%vr19416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19417, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19416
	%vr19420 = bitcast %FBSTRING* %vr19416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19420, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FF8:

	; label .Lt_0C02
	br label %.Lt_0C02
.Lt_0C02:

	; branchbop V <> 97
	%vr19424 = load i64, i64* %V.103
	%vr19423 = icmp ne i64 %vr19424, 97
	br i1 %vr19423, label %.Lt_0C05, label %.Lt_0FF9
.Lt_0FF9:

	; label .Lt_0C06
	br label %.Lt_0C06
.Lt_0C06:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C07
	%vr19427 = bitcast i8* bitcast ([64 x i8]* @Lt_0C07 to i8*) to i8*
	; arg 63
	%vr19426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19427, i64 63 )

	; call fb_PrintString()
	; arg 1
	; arg vr19426
	%vr19430 = bitcast %FBSTRING* %vr19426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19430, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FFA:

	; label .Lt_0C05
	br label %.Lt_0C05
.Lt_0C05:

	; branchbop V <> 98
	%vr19434 = load i64, i64* %V.103
	%vr19433 = icmp ne i64 %vr19434, 98
	br i1 %vr19433, label %.Lt_0C08, label %.Lt_0FFB
.Lt_0FFB:

	; label .Lt_0C09
	br label %.Lt_0C09
.Lt_0C09:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C0A
	%vr19437 = bitcast i8* bitcast ([65 x i8]* @Lt_0C0A to i8*) to i8*
	; arg 64
	%vr19436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19437, i64 64 )

	; call fb_PrintString()
	; arg 1
	; arg vr19436
	%vr19440 = bitcast %FBSTRING* %vr19436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19440, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FFC:

	; label .Lt_0C08
	br label %.Lt_0C08
.Lt_0C08:

	; branchbop V <> 99
	%vr19444 = load i64, i64* %V.103
	%vr19443 = icmp ne i64 %vr19444, 99
	br i1 %vr19443, label %.Lt_0C0B, label %.Lt_0FFD
.Lt_0FFD:

	; label .Lt_0C0C
	br label %.Lt_0C0C
.Lt_0C0C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C0D
	%vr19447 = bitcast i8* bitcast ([49 x i8]* @Lt_0C0D to i8*) to i8*
	; arg 48
	%vr19446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19447, i64 48 )

	; call fb_PrintString()
	; arg 1
	; arg vr19446
	%vr19450 = bitcast %FBSTRING* %vr19446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19450, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_0FFE:

	; label .Lt_0C0B
	br label %.Lt_0C0B
.Lt_0C0B:

	; branchbop V <> 100
	%vr19454 = load i64, i64* %V.103
	%vr19453 = icmp ne i64 %vr19454, 100
	br i1 %vr19453, label %.Lt_0C0E, label %.Lt_0FFF
.Lt_0FFF:

	; label .Lt_0C0F
	br label %.Lt_0C0F
.Lt_0C0F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C10
	%vr19457 = bitcast i8* bitcast ([88 x i8]* @Lt_0C10 to i8*) to i8*
	; arg 87
	%vr19456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19457, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr19456
	%vr19460 = bitcast %FBSTRING* %vr19456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19460, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1000:

	; label .Lt_0C0E
	br label %.Lt_0C0E
.Lt_0C0E:

	; branchbop V <> 101
	%vr19464 = load i64, i64* %V.103
	%vr19463 = icmp ne i64 %vr19464, 101
	br i1 %vr19463, label %.Lt_0C11, label %.Lt_1001
.Lt_1001:

	; label .Lt_0C12
	br label %.Lt_0C12
.Lt_0C12:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C13
	%vr19467 = bitcast i8* bitcast ([19 x i8]* @Lt_0C13 to i8*) to i8*
	; arg 18
	%vr19466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19467, i64 18 )

	; call fb_PrintString()
	; arg 1
	; arg vr19466
	%vr19470 = bitcast %FBSTRING* %vr19466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19470, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1002:

	; label .Lt_0C11
	br label %.Lt_0C11
.Lt_0C11:

	; branchbop V <> 102
	%vr19474 = load i64, i64* %V.103
	%vr19473 = icmp ne i64 %vr19474, 102
	br i1 %vr19473, label %.Lt_0C14, label %.Lt_1003
.Lt_1003:

	; label .Lt_0C15
	br label %.Lt_0C15
.Lt_0C15:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C16
	%vr19477 = bitcast i8* bitcast ([22 x i8]* @Lt_0C16 to i8*) to i8*
	; arg 21
	%vr19476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19477, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr19476
	%vr19480 = bitcast %FBSTRING* %vr19476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19480, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1004:

	; label .Lt_0C14
	br label %.Lt_0C14
.Lt_0C14:

	; branchbop V <> 103
	%vr19484 = load i64, i64* %V.103
	%vr19483 = icmp ne i64 %vr19484, 103
	br i1 %vr19483, label %.Lt_0C17, label %.Lt_1005
.Lt_1005:

	; label .Lt_0C18
	br label %.Lt_0C18
.Lt_0C18:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C19
	%vr19487 = bitcast i8* bitcast ([38 x i8]* @Lt_0C19 to i8*) to i8*
	; arg 37
	%vr19486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19487, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr19486
	%vr19490 = bitcast %FBSTRING* %vr19486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19490, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1006:

	; label .Lt_0C17
	br label %.Lt_0C17
.Lt_0C17:

	; branchbop V <> 104
	%vr19494 = load i64, i64* %V.103
	%vr19493 = icmp ne i64 %vr19494, 104
	br i1 %vr19493, label %.Lt_0C1A, label %.Lt_1007
.Lt_1007:

	; label .Lt_0C1B
	br label %.Lt_0C1B
.Lt_0C1B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C1C
	%vr19497 = bitcast i8* bitcast ([39 x i8]* @Lt_0C1C to i8*) to i8*
	; arg 38
	%vr19496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19497, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr19496
	%vr19500 = bitcast %FBSTRING* %vr19496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19500, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1008:

	; label .Lt_0C1A
	br label %.Lt_0C1A
.Lt_0C1A:

	; branchbop V <> 105
	%vr19504 = load i64, i64* %V.103
	%vr19503 = icmp ne i64 %vr19504, 105
	br i1 %vr19503, label %.Lt_0C1D, label %.Lt_1009
.Lt_1009:

	; label .Lt_0C1E
	br label %.Lt_0C1E
.Lt_0C1E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C1F
	%vr19507 = bitcast i8* bitcast ([39 x i8]* @Lt_0C1F to i8*) to i8*
	; arg 38
	%vr19506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19507, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr19506
	%vr19510 = bitcast %FBSTRING* %vr19506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19510, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_100A:

	; label .Lt_0C1D
	br label %.Lt_0C1D
.Lt_0C1D:

	; branchbop V <> 106
	%vr19514 = load i64, i64* %V.103
	%vr19513 = icmp ne i64 %vr19514, 106
	br i1 %vr19513, label %.Lt_0C20, label %.Lt_100B
.Lt_100B:

	; label .Lt_0C21
	br label %.Lt_0C21
.Lt_0C21:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C22
	%vr19517 = bitcast i8* bitcast ([18 x i8]* @Lt_0C22 to i8*) to i8*
	; arg 17
	%vr19516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19517, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr19516
	%vr19520 = bitcast %FBSTRING* %vr19516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19520, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_100C:

	; label .Lt_0C20
	br label %.Lt_0C20
.Lt_0C20:

	; branchbop V <> 107
	%vr19524 = load i64, i64* %V.103
	%vr19523 = icmp ne i64 %vr19524, 107
	br i1 %vr19523, label %.Lt_0C23, label %.Lt_100D
.Lt_100D:

	; label .Lt_0C24
	br label %.Lt_0C24
.Lt_0C24:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C25
	%vr19527 = bitcast i8* bitcast ([15 x i8]* @Lt_0C25 to i8*) to i8*
	; arg 14
	%vr19526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19527, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr19526
	%vr19530 = bitcast %FBSTRING* %vr19526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19530, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_100E:

	; label .Lt_0C23
	br label %.Lt_0C23
.Lt_0C23:

	; branchbop V <> 108
	%vr19534 = load i64, i64* %V.103
	%vr19533 = icmp ne i64 %vr19534, 108
	br i1 %vr19533, label %.Lt_0C26, label %.Lt_100F
.Lt_100F:

	; label .Lt_0C27
	br label %.Lt_0C27
.Lt_0C27:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C28
	%vr19537 = bitcast i8* bitcast ([21 x i8]* @Lt_0C28 to i8*) to i8*
	; arg 20
	%vr19536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19537, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr19536
	%vr19540 = bitcast %FBSTRING* %vr19536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19540, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1010:

	; label .Lt_0C26
	br label %.Lt_0C26
.Lt_0C26:

	; branchbop V <> 109
	%vr19544 = load i64, i64* %V.103
	%vr19543 = icmp ne i64 %vr19544, 109
	br i1 %vr19543, label %.Lt_0C29, label %.Lt_1011
.Lt_1011:

	; label .Lt_0C2A
	br label %.Lt_0C2A
.Lt_0C2A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C2B
	%vr19547 = bitcast i8* bitcast ([21 x i8]* @Lt_0C2B to i8*) to i8*
	; arg 20
	%vr19546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19547, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr19546
	%vr19550 = bitcast %FBSTRING* %vr19546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19550, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1012:

	; label .Lt_0C29
	br label %.Lt_0C29
.Lt_0C29:

	; branchbop V <> 110
	%vr19554 = load i64, i64* %V.103
	%vr19553 = icmp ne i64 %vr19554, 110
	br i1 %vr19553, label %.Lt_0C2C, label %.Lt_1013
.Lt_1013:

	; label .Lt_0C2D
	br label %.Lt_0C2D
.Lt_0C2D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C2E
	%vr19557 = bitcast i8* bitcast ([28 x i8]* @Lt_0C2E to i8*) to i8*
	; arg 27
	%vr19556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19557, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr19556
	%vr19560 = bitcast %FBSTRING* %vr19556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19560, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1014:

	; label .Lt_0C2C
	br label %.Lt_0C2C
.Lt_0C2C:

	; branchbop V <> 111
	%vr19564 = load i64, i64* %V.103
	%vr19563 = icmp ne i64 %vr19564, 111
	br i1 %vr19563, label %.Lt_0C2F, label %.Lt_1015
.Lt_1015:

	; label .Lt_0C30
	br label %.Lt_0C30
.Lt_0C30:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C31
	%vr19567 = bitcast i8* bitcast ([28 x i8]* @Lt_0C31 to i8*) to i8*
	; arg 27
	%vr19566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19567, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr19566
	%vr19570 = bitcast %FBSTRING* %vr19566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19570, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1016:

	; label .Lt_0C2F
	br label %.Lt_0C2F
.Lt_0C2F:

	; branchbop V <> 112
	%vr19574 = load i64, i64* %V.103
	%vr19573 = icmp ne i64 %vr19574, 112
	br i1 %vr19573, label %.Lt_0C32, label %.Lt_1017
.Lt_1017:

	; label .Lt_0C33
	br label %.Lt_0C33
.Lt_0C33:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C34
	%vr19577 = bitcast i8* bitcast ([20 x i8]* @Lt_0C34 to i8*) to i8*
	; arg 19
	%vr19576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19577, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr19576
	%vr19580 = bitcast %FBSTRING* %vr19576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19580, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1018:

	; label .Lt_0C32
	br label %.Lt_0C32
.Lt_0C32:

	; branchbop V <> 113
	%vr19584 = load i64, i64* %V.103
	%vr19583 = icmp ne i64 %vr19584, 113
	br i1 %vr19583, label %.Lt_0C35, label %.Lt_1019
.Lt_1019:

	; label .Lt_0C36
	br label %.Lt_0C36
.Lt_0C36:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C37
	%vr19587 = bitcast i8* bitcast ([23 x i8]* @Lt_0C37 to i8*) to i8*
	; arg 22
	%vr19586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19587, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr19586
	%vr19590 = bitcast %FBSTRING* %vr19586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19590, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_101A:

	; label .Lt_0C35
	br label %.Lt_0C35
.Lt_0C35:

	; branchbop V <> 114
	%vr19594 = load i64, i64* %V.103
	%vr19593 = icmp ne i64 %vr19594, 114
	br i1 %vr19593, label %.Lt_0C38, label %.Lt_101B
.Lt_101B:

	; label .Lt_0C39
	br label %.Lt_0C39
.Lt_0C39:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C3A
	%vr19597 = bitcast i8* bitcast ([27 x i8]* @Lt_0C3A to i8*) to i8*
	; arg 26
	%vr19596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19597, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19596
	%vr19600 = bitcast %FBSTRING* %vr19596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19600, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_101C:

	; label .Lt_0C38
	br label %.Lt_0C38
.Lt_0C38:

	; branchbop V <> 115
	%vr19604 = load i64, i64* %V.103
	%vr19603 = icmp ne i64 %vr19604, 115
	br i1 %vr19603, label %.Lt_0C3B, label %.Lt_101D
.Lt_101D:

	; label .Lt_0C3C
	br label %.Lt_0C3C
.Lt_0C3C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C3D
	%vr19607 = bitcast i8* bitcast ([29 x i8]* @Lt_0C3D to i8*) to i8*
	; arg 28
	%vr19606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19607, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19606
	%vr19610 = bitcast %FBSTRING* %vr19606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19610, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_101E:

	; label .Lt_0C3B
	br label %.Lt_0C3B
.Lt_0C3B:

	; branchbop V <> 116
	%vr19614 = load i64, i64* %V.103
	%vr19613 = icmp ne i64 %vr19614, 116
	br i1 %vr19613, label %.Lt_0C3E, label %.Lt_101F
.Lt_101F:

	; label .Lt_0C3F
	br label %.Lt_0C3F
.Lt_0C3F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C40
	%vr19617 = bitcast i8* bitcast ([31 x i8]* @Lt_0C40 to i8*) to i8*
	; arg 30
	%vr19616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19617, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19616
	%vr19620 = bitcast %FBSTRING* %vr19616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19620, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1020:

	; label .Lt_0C3E
	br label %.Lt_0C3E
.Lt_0C3E:

	; branchbop V <> 117
	%vr19624 = load i64, i64* %V.103
	%vr19623 = icmp ne i64 %vr19624, 117
	br i1 %vr19623, label %.Lt_0C41, label %.Lt_1021
.Lt_1021:

	; label .Lt_0C42
	br label %.Lt_0C42
.Lt_0C42:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C43
	%vr19627 = bitcast i8* bitcast ([70 x i8]* @Lt_0C43 to i8*) to i8*
	; arg 69
	%vr19626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19627, i64 69 )

	; call fb_PrintString()
	; arg 1
	; arg vr19626
	%vr19630 = bitcast %FBSTRING* %vr19626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19630, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1022:

	; label .Lt_0C41
	br label %.Lt_0C41
.Lt_0C41:

	; branchbop V <> 118
	%vr19634 = load i64, i64* %V.103
	%vr19633 = icmp ne i64 %vr19634, 118
	br i1 %vr19633, label %.Lt_0C44, label %.Lt_1023
.Lt_1023:

	; label .Lt_0C45
	br label %.Lt_0C45
.Lt_0C45:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C46
	%vr19637 = bitcast i8* bitcast ([26 x i8]* @Lt_0C46 to i8*) to i8*
	; arg 25
	%vr19636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19637, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr19636
	%vr19640 = bitcast %FBSTRING* %vr19636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19640, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1024:

	; label .Lt_0C44
	br label %.Lt_0C44
.Lt_0C44:

	; branchbop V <> 119
	%vr19644 = load i64, i64* %V.103
	%vr19643 = icmp ne i64 %vr19644, 119
	br i1 %vr19643, label %.Lt_0C47, label %.Lt_1025
.Lt_1025:

	; label .Lt_0C48
	br label %.Lt_0C48
.Lt_0C48:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C49
	%vr19647 = bitcast i8* bitcast ([38 x i8]* @Lt_0C49 to i8*) to i8*
	; arg 37
	%vr19646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19647, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr19646
	%vr19650 = bitcast %FBSTRING* %vr19646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19650, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1026:

	; label .Lt_0C47
	br label %.Lt_0C47
.Lt_0C47:

	; branchbop V <> 120
	%vr19654 = load i64, i64* %V.103
	%vr19653 = icmp ne i64 %vr19654, 120
	br i1 %vr19653, label %.Lt_0C4A, label %.Lt_1027
.Lt_1027:

	; label .Lt_0C4B
	br label %.Lt_0C4B
.Lt_0C4B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C4C
	%vr19657 = bitcast i8* bitcast ([45 x i8]* @Lt_0C4C to i8*) to i8*
	; arg 44
	%vr19656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19657, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr19656
	%vr19660 = bitcast %FBSTRING* %vr19656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19660, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1028:

	; label .Lt_0C4A
	br label %.Lt_0C4A
.Lt_0C4A:

	; branchbop V <> 121
	%vr19664 = load i64, i64* %V.103
	%vr19663 = icmp ne i64 %vr19664, 121
	br i1 %vr19663, label %.Lt_0C4D, label %.Lt_1029
.Lt_1029:

	; label .Lt_0C4E
	br label %.Lt_0C4E
.Lt_0C4E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C4F
	%vr19667 = bitcast i8* bitcast ([61 x i8]* @Lt_0C4F to i8*) to i8*
	; arg 60
	%vr19666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19667, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr19666
	%vr19670 = bitcast %FBSTRING* %vr19666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19670, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_102A:

	; label .Lt_0C4D
	br label %.Lt_0C4D
.Lt_0C4D:

	; branchbop V <> 122
	%vr19674 = load i64, i64* %V.103
	%vr19673 = icmp ne i64 %vr19674, 122
	br i1 %vr19673, label %.Lt_0C50, label %.Lt_102B
.Lt_102B:

	; label .Lt_0C51
	br label %.Lt_0C51
.Lt_0C51:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C52
	%vr19677 = bitcast i8* bitcast ([29 x i8]* @Lt_0C52 to i8*) to i8*
	; arg 28
	%vr19676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19677, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19676
	%vr19680 = bitcast %FBSTRING* %vr19676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19680, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_102C:

	; label .Lt_0C50
	br label %.Lt_0C50
.Lt_0C50:

	; branchbop V <> 123
	%vr19684 = load i64, i64* %V.103
	%vr19683 = icmp ne i64 %vr19684, 123
	br i1 %vr19683, label %.Lt_0C53, label %.Lt_102D
.Lt_102D:

	; label .Lt_0C54
	br label %.Lt_0C54
.Lt_0C54:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C55
	%vr19687 = bitcast i8* bitcast ([41 x i8]* @Lt_0C55 to i8*) to i8*
	; arg 40
	%vr19686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19687, i64 40 )

	; call fb_PrintString()
	; arg 1
	; arg vr19686
	%vr19690 = bitcast %FBSTRING* %vr19686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19690, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_102E:

	; label .Lt_0C53
	br label %.Lt_0C53
.Lt_0C53:

	; branchbop V <> 124
	%vr19694 = load i64, i64* %V.103
	%vr19693 = icmp ne i64 %vr19694, 124
	br i1 %vr19693, label %.Lt_0C56, label %.Lt_102F
.Lt_102F:

	; label .Lt_0C57
	br label %.Lt_0C57
.Lt_0C57:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C58
	%vr19697 = bitcast i8* bitcast ([87 x i8]* @Lt_0C58 to i8*) to i8*
	; arg 86
	%vr19696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19697, i64 86 )

	; call fb_PrintString()
	; arg 1
	; arg vr19696
	%vr19700 = bitcast %FBSTRING* %vr19696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19700, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1030:

	; label .Lt_0C56
	br label %.Lt_0C56
.Lt_0C56:

	; branchbop V <> 125
	%vr19704 = load i64, i64* %V.103
	%vr19703 = icmp ne i64 %vr19704, 125
	br i1 %vr19703, label %.Lt_0C59, label %.Lt_1031
.Lt_1031:

	; label .Lt_0C5A
	br label %.Lt_0C5A
.Lt_0C5A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C5B
	%vr19707 = bitcast i8* bitcast ([27 x i8]* @Lt_0C5B to i8*) to i8*
	; arg 26
	%vr19706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19707, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr19706
	%vr19710 = bitcast %FBSTRING* %vr19706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19710, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1032:

	; label .Lt_0C59
	br label %.Lt_0C59
.Lt_0C59:

	; branchbop V <> 126
	%vr19714 = load i64, i64* %V.103
	%vr19713 = icmp ne i64 %vr19714, 126
	br i1 %vr19713, label %.Lt_0C5C, label %.Lt_1033
.Lt_1033:

	; label .Lt_0C5D
	br label %.Lt_0C5D
.Lt_0C5D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C5E
	%vr19717 = bitcast i8* bitcast ([30 x i8]* @Lt_0C5E to i8*) to i8*
	; arg 29
	%vr19716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19717, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr19716
	%vr19720 = bitcast %FBSTRING* %vr19716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19720, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1034:

	; label .Lt_0C5C
	br label %.Lt_0C5C
.Lt_0C5C:

	; branchbop V <> 127
	%vr19724 = load i64, i64* %V.103
	%vr19723 = icmp ne i64 %vr19724, 127
	br i1 %vr19723, label %.Lt_0C5F, label %.Lt_1035
.Lt_1035:

	; label .Lt_0C60
	br label %.Lt_0C60
.Lt_0C60:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C61
	%vr19727 = bitcast i8* bitcast ([31 x i8]* @Lt_0C61 to i8*) to i8*
	; arg 30
	%vr19726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19727, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19726
	%vr19730 = bitcast %FBSTRING* %vr19726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19730, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1036:

	; label .Lt_0C5F
	br label %.Lt_0C5F
.Lt_0C5F:

	; branchbop V <> 128
	%vr19734 = load i64, i64* %V.103
	%vr19733 = icmp ne i64 %vr19734, 128
	br i1 %vr19733, label %.Lt_0C62, label %.Lt_1037
.Lt_1037:

	; label .Lt_0C63
	br label %.Lt_0C63
.Lt_0C63:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C64
	%vr19737 = bitcast i8* bitcast ([33 x i8]* @Lt_0C64 to i8*) to i8*
	; arg 32
	%vr19736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19737, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr19736
	%vr19740 = bitcast %FBSTRING* %vr19736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19740, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1038:

	; label .Lt_0C62
	br label %.Lt_0C62
.Lt_0C62:

	; branchbop V <> 129
	%vr19744 = load i64, i64* %V.103
	%vr19743 = icmp ne i64 %vr19744, 129
	br i1 %vr19743, label %.Lt_0C65, label %.Lt_1039
.Lt_1039:

	; label .Lt_0C66
	br label %.Lt_0C66
.Lt_0C66:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C67
	%vr19747 = bitcast i8* bitcast ([35 x i8]* @Lt_0C67 to i8*) to i8*
	; arg 34
	%vr19746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19747, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr19746
	%vr19750 = bitcast %FBSTRING* %vr19746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19750, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_103A:

	; label .Lt_0C65
	br label %.Lt_0C65
.Lt_0C65:

	; branchbop V <> 130
	%vr19754 = load i64, i64* %V.103
	%vr19753 = icmp ne i64 %vr19754, 130
	br i1 %vr19753, label %.Lt_0C68, label %.Lt_103B
.Lt_103B:

	; label .Lt_0C69
	br label %.Lt_0C69
.Lt_0C69:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C6A
	%vr19757 = bitcast i8* bitcast ([37 x i8]* @Lt_0C6A to i8*) to i8*
	; arg 36
	%vr19756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19757, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr19756
	%vr19760 = bitcast %FBSTRING* %vr19756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19760, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_103C:

	; label .Lt_0C68
	br label %.Lt_0C68
.Lt_0C68:

	; branchbop V <> 131
	%vr19764 = load i64, i64* %V.103
	%vr19763 = icmp ne i64 %vr19764, 131
	br i1 %vr19763, label %.Lt_0C6B, label %.Lt_103D
.Lt_103D:

	; label .Lt_0C6C
	br label %.Lt_0C6C
.Lt_0C6C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C6D
	%vr19767 = bitcast i8* bitcast ([38 x i8]* @Lt_0C6D to i8*) to i8*
	; arg 37
	%vr19766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19767, i64 37 )

	; call fb_PrintString()
	; arg 1
	; arg vr19766
	%vr19770 = bitcast %FBSTRING* %vr19766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19770, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_103E:

	; label .Lt_0C6B
	br label %.Lt_0C6B
.Lt_0C6B:

	; branchbop V <> 132
	%vr19774 = load i64, i64* %V.103
	%vr19773 = icmp ne i64 %vr19774, 132
	br i1 %vr19773, label %.Lt_0C6E, label %.Lt_103F
.Lt_103F:

	; label .Lt_0C6F
	br label %.Lt_0C6F
.Lt_0C6F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C70
	%vr19777 = bitcast i8* bitcast ([40 x i8]* @Lt_0C70 to i8*) to i8*
	; arg 39
	%vr19776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19777, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr19776
	%vr19780 = bitcast %FBSTRING* %vr19776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19780, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1040:

	; label .Lt_0C6E
	br label %.Lt_0C6E
.Lt_0C6E:

	; branchbop V <> 133
	%vr19784 = load i64, i64* %V.103
	%vr19783 = icmp ne i64 %vr19784, 133
	br i1 %vr19783, label %.Lt_0C71, label %.Lt_1041
.Lt_1041:

	; label .Lt_0C72
	br label %.Lt_0C72
.Lt_0C72:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C73
	%vr19787 = bitcast i8* bitcast ([46 x i8]* @Lt_0C73 to i8*) to i8*
	; arg 45
	%vr19786 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19787, i64 45 )

	; call fb_PrintString()
	; arg 1
	; arg vr19786
	%vr19790 = bitcast %FBSTRING* %vr19786 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19790, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1042:

	; label .Lt_0C71
	br label %.Lt_0C71
.Lt_0C71:

	; branchbop V <> 134
	%vr19794 = load i64, i64* %V.103
	%vr19793 = icmp ne i64 %vr19794, 134
	br i1 %vr19793, label %.Lt_0C74, label %.Lt_1043
.Lt_1043:

	; label .Lt_0C75
	br label %.Lt_0C75
.Lt_0C75:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C76
	%vr19797 = bitcast i8* bitcast ([47 x i8]* @Lt_0C76 to i8*) to i8*
	; arg 46
	%vr19796 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19797, i64 46 )

	; call fb_PrintString()
	; arg 1
	; arg vr19796
	%vr19800 = bitcast %FBSTRING* %vr19796 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19800, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1044:

	; label .Lt_0C74
	br label %.Lt_0C74
.Lt_0C74:

	; branchbop V <> 135
	%vr19804 = load i64, i64* %V.103
	%vr19803 = icmp ne i64 %vr19804, 135
	br i1 %vr19803, label %.Lt_0C77, label %.Lt_1045
.Lt_1045:

	; label .Lt_0C78
	br label %.Lt_0C78
.Lt_0C78:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C79
	%vr19807 = bitcast i8* bitcast ([48 x i8]* @Lt_0C79 to i8*) to i8*
	; arg 47
	%vr19806 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19807, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr19806
	%vr19810 = bitcast %FBSTRING* %vr19806 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19810, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1046:

	; label .Lt_0C77
	br label %.Lt_0C77
.Lt_0C77:

	; branchbop V <> 136
	%vr19814 = load i64, i64* %V.103
	%vr19813 = icmp ne i64 %vr19814, 136
	br i1 %vr19813, label %.Lt_0C7A, label %.Lt_1047
.Lt_1047:

	; label .Lt_0C7B
	br label %.Lt_0C7B
.Lt_0C7B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C7C
	%vr19817 = bitcast i8* bitcast ([54 x i8]* @Lt_0C7C to i8*) to i8*
	; arg 53
	%vr19816 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19817, i64 53 )

	; call fb_PrintString()
	; arg 1
	; arg vr19816
	%vr19820 = bitcast %FBSTRING* %vr19816 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19820, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1048:

	; label .Lt_0C7A
	br label %.Lt_0C7A
.Lt_0C7A:

	; branchbop V <> 137
	%vr19824 = load i64, i64* %V.103
	%vr19823 = icmp ne i64 %vr19824, 137
	br i1 %vr19823, label %.Lt_0C7D, label %.Lt_1049
.Lt_1049:

	; label .Lt_0C7E
	br label %.Lt_0C7E
.Lt_0C7E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C7F
	%vr19827 = bitcast i8* bitcast ([63 x i8]* @Lt_0C7F to i8*) to i8*
	; arg 62
	%vr19826 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19827, i64 62 )

	; call fb_PrintString()
	; arg 1
	; arg vr19826
	%vr19830 = bitcast %FBSTRING* %vr19826 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19830, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_104A:

	; label .Lt_0C7D
	br label %.Lt_0C7D
.Lt_0C7D:

	; branchbop V <> 138
	%vr19834 = load i64, i64* %V.103
	%vr19833 = icmp ne i64 %vr19834, 138
	br i1 %vr19833, label %.Lt_0C80, label %.Lt_104B
.Lt_104B:

	; label .Lt_0C81
	br label %.Lt_0C81
.Lt_0C81:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C82
	%vr19837 = bitcast i8* bitcast ([66 x i8]* @Lt_0C82 to i8*) to i8*
	; arg 65
	%vr19836 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19837, i64 65 )

	; call fb_PrintString()
	; arg 1
	; arg vr19836
	%vr19840 = bitcast %FBSTRING* %vr19836 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19840, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_104C:

	; label .Lt_0C80
	br label %.Lt_0C80
.Lt_0C80:

	; branchbop V <> 139
	%vr19844 = load i64, i64* %V.103
	%vr19843 = icmp ne i64 %vr19844, 139
	br i1 %vr19843, label %.Lt_0C83, label %.Lt_104D
.Lt_104D:

	; label .Lt_0C84
	br label %.Lt_0C84
.Lt_0C84:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C85
	%vr19847 = bitcast i8* bitcast ([75 x i8]* @Lt_0C85 to i8*) to i8*
	; arg 74
	%vr19846 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19847, i64 74 )

	; call fb_PrintString()
	; arg 1
	; arg vr19846
	%vr19850 = bitcast %FBSTRING* %vr19846 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19850, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_104E:

	; label .Lt_0C83
	br label %.Lt_0C83
.Lt_0C83:

	; branchbop V <> 140
	%vr19854 = load i64, i64* %V.103
	%vr19853 = icmp ne i64 %vr19854, 140
	br i1 %vr19853, label %.Lt_0C86, label %.Lt_104F
.Lt_104F:

	; label .Lt_0C87
	br label %.Lt_0C87
.Lt_0C87:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C88
	%vr19857 = bitcast i8* bitcast ([61 x i8]* @Lt_0C88 to i8*) to i8*
	; arg 60
	%vr19856 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19857, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr19856
	%vr19860 = bitcast %FBSTRING* %vr19856 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19860, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1050:

	; label .Lt_0C86
	br label %.Lt_0C86
.Lt_0C86:

	; branchbop V <> 141
	%vr19864 = load i64, i64* %V.103
	%vr19863 = icmp ne i64 %vr19864, 141
	br i1 %vr19863, label %.Lt_0C89, label %.Lt_1051
.Lt_1051:

	; label .Lt_0C8A
	br label %.Lt_0C8A
.Lt_0C8A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C8B
	%vr19867 = bitcast i8* bitcast ([50 x i8]* @Lt_0C8B to i8*) to i8*
	; arg 49
	%vr19866 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19867, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr19866
	%vr19870 = bitcast %FBSTRING* %vr19866 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19870, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1052:

	; label .Lt_0C89
	br label %.Lt_0C89
.Lt_0C89:

	; branchbop V <> 142
	%vr19874 = load i64, i64* %V.103
	%vr19873 = icmp ne i64 %vr19874, 142
	br i1 %vr19873, label %.Lt_0C8C, label %.Lt_1053
.Lt_1053:

	; label .Lt_0C8D
	br label %.Lt_0C8D
.Lt_0C8D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C8E
	%vr19877 = bitcast i8* bitcast ([50 x i8]* @Lt_0C8E to i8*) to i8*
	; arg 49
	%vr19876 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19877, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr19876
	%vr19880 = bitcast %FBSTRING* %vr19876 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19880, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1054:

	; label .Lt_0C8C
	br label %.Lt_0C8C
.Lt_0C8C:

	; branchbop V <> 143
	%vr19884 = load i64, i64* %V.103
	%vr19883 = icmp ne i64 %vr19884, 143
	br i1 %vr19883, label %.Lt_0C8F, label %.Lt_1055
.Lt_1055:

	; label .Lt_0C90
	br label %.Lt_0C90
.Lt_0C90:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C91
	%vr19887 = bitcast i8* bitcast ([36 x i8]* @Lt_0C91 to i8*) to i8*
	; arg 35
	%vr19886 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19887, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr19886
	%vr19890 = bitcast %FBSTRING* %vr19886 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19890, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1056:

	; label .Lt_0C8F
	br label %.Lt_0C8F
.Lt_0C8F:

	; branchbop V <> 144
	%vr19894 = load i64, i64* %V.103
	%vr19893 = icmp ne i64 %vr19894, 144
	br i1 %vr19893, label %.Lt_0C92, label %.Lt_1057
.Lt_1057:

	; label .Lt_0C93
	br label %.Lt_0C93
.Lt_0C93:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C94
	%vr19897 = bitcast i8* bitcast ([31 x i8]* @Lt_0C94 to i8*) to i8*
	; arg 30
	%vr19896 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19897, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr19896
	%vr19900 = bitcast %FBSTRING* %vr19896 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19900, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1058:

	; label .Lt_0C92
	br label %.Lt_0C92
.Lt_0C92:

	; branchbop V <> 145
	%vr19904 = load i64, i64* %V.103
	%vr19903 = icmp ne i64 %vr19904, 145
	br i1 %vr19903, label %.Lt_0C95, label %.Lt_1059
.Lt_1059:

	; label .Lt_0C96
	br label %.Lt_0C96
.Lt_0C96:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C97
	%vr19907 = bitcast i8* bitcast ([9 x i8]* @Lt_0C97 to i8*) to i8*
	; arg 8
	%vr19906 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19907, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr19906
	%vr19910 = bitcast %FBSTRING* %vr19906 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19910, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_105A:

	; label .Lt_0C95
	br label %.Lt_0C95
.Lt_0C95:

	; branchbop V <> 146
	%vr19914 = load i64, i64* %V.103
	%vr19913 = icmp ne i64 %vr19914, 146
	br i1 %vr19913, label %.Lt_0C98, label %.Lt_105B
.Lt_105B:

	; label .Lt_0C99
	br label %.Lt_0C99
.Lt_0C99:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C9A
	%vr19917 = bitcast i8* bitcast ([29 x i8]* @Lt_0C9A to i8*) to i8*
	; arg 28
	%vr19916 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19917, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19916
	%vr19920 = bitcast %FBSTRING* %vr19916 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19920, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_105C:

	; label .Lt_0C98
	br label %.Lt_0C98
.Lt_0C98:

	; branchbop V <> 147
	%vr19924 = load i64, i64* %V.103
	%vr19923 = icmp ne i64 %vr19924, 147
	br i1 %vr19923, label %.Lt_0C9B, label %.Lt_105D
.Lt_105D:

	; label .Lt_0C9C
	br label %.Lt_0C9C
.Lt_0C9C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0C9D
	%vr19927 = bitcast i8* bitcast ([29 x i8]* @Lt_0C9D to i8*) to i8*
	; arg 28
	%vr19926 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19927, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr19926
	%vr19930 = bitcast %FBSTRING* %vr19926 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19930, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_105E:

	; label .Lt_0C9B
	br label %.Lt_0C9B
.Lt_0C9B:

	; branchbop V <> 148
	%vr19934 = load i64, i64* %V.103
	%vr19933 = icmp ne i64 %vr19934, 148
	br i1 %vr19933, label %.Lt_0C9E, label %.Lt_105F
.Lt_105F:

	; label .Lt_0C9F
	br label %.Lt_0C9F
.Lt_0C9F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CA0
	%vr19937 = bitcast i8* bitcast ([33 x i8]* @Lt_0CA0 to i8*) to i8*
	; arg 32
	%vr19936 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19937, i64 32 )

	; call fb_PrintString()
	; arg 1
	; arg vr19936
	%vr19940 = bitcast %FBSTRING* %vr19936 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19940, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1060:

	; label .Lt_0C9E
	br label %.Lt_0C9E
.Lt_0C9E:

	; branchbop V <> 149
	%vr19944 = load i64, i64* %V.103
	%vr19943 = icmp ne i64 %vr19944, 149
	br i1 %vr19943, label %.Lt_0CA1, label %.Lt_1061
.Lt_1061:

	; label .Lt_0CA2
	br label %.Lt_0CA2
.Lt_0CA2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CA3
	%vr19947 = bitcast i8* bitcast ([35 x i8]* @Lt_0CA3 to i8*) to i8*
	; arg 34
	%vr19946 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19947, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr19946
	%vr19950 = bitcast %FBSTRING* %vr19946 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19950, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1062:

	; label .Lt_0CA1
	br label %.Lt_0CA1
.Lt_0CA1:

	; branchbop V <> 150
	%vr19954 = load i64, i64* %V.103
	%vr19953 = icmp ne i64 %vr19954, 150
	br i1 %vr19953, label %.Lt_0CA4, label %.Lt_1063
.Lt_1063:

	; label .Lt_0CA5
	br label %.Lt_0CA5
.Lt_0CA5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_05F8
	%vr19957 = bitcast i8* bitcast ([2 x i8]* @Lt_05F8 to i8*) to i8*
	; arg 1
	%vr19956 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19957, i64 1 )

	; call fb_PrintString()
	; arg 1
	; arg vr19956
	%vr19960 = bitcast %FBSTRING* %vr19956 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19960, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1064:

	; label .Lt_0CA4
	br label %.Lt_0CA4
.Lt_0CA4:

	; branchbop V <> 151
	%vr19964 = load i64, i64* %V.103
	%vr19963 = icmp ne i64 %vr19964, 151
	br i1 %vr19963, label %.Lt_0CA6, label %.Lt_1065
.Lt_1065:

	; label .Lt_0CA7
	br label %.Lt_0CA7
.Lt_0CA7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059B
	%vr19967 = bitcast i8* bitcast ([6 x i8]* @Lt_059B to i8*) to i8*
	; arg 5
	%vr19966 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19967, i64 5 )

	; call fb_PrintString()
	; arg 1
	; arg vr19966
	%vr19970 = bitcast %FBSTRING* %vr19966 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19970, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1066:

	; label .Lt_0CA6
	br label %.Lt_0CA6
.Lt_0CA6:

	; branchbop V <> 152
	%vr19974 = load i64, i64* %V.103
	%vr19973 = icmp ne i64 %vr19974, 152
	br i1 %vr19973, label %.Lt_0CA8, label %.Lt_1067
.Lt_1067:

	; label .Lt_0CA9
	br label %.Lt_0CA9
.Lt_0CA9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_059D
	%vr19977 = bitcast i8* bitcast ([7 x i8]* @Lt_059D to i8*) to i8*
	; arg 6
	%vr19976 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19977, i64 6 )

	; call fb_PrintString()
	; arg 1
	; arg vr19976
	%vr19980 = bitcast %FBSTRING* %vr19976 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19980, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1068:

	; label .Lt_0CA8
	br label %.Lt_0CA8
.Lt_0CA8:

	; branchbop V <> 153
	%vr19984 = load i64, i64* %V.103
	%vr19983 = icmp ne i64 %vr19984, 153
	br i1 %vr19983, label %.Lt_0CAA, label %.Lt_1069
.Lt_1069:

	; label .Lt_0CAB
	br label %.Lt_0CAB
.Lt_0CAB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CAC
	%vr19987 = bitcast i8* bitcast ([15 x i8]* @Lt_0CAC to i8*) to i8*
	; arg 14
	%vr19986 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19987, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr19986
	%vr19990 = bitcast %FBSTRING* %vr19986 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr19990, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_106A:

	; label .Lt_0CAA
	br label %.Lt_0CAA
.Lt_0CAA:

	; branchbop V <> 154
	%vr19994 = load i64, i64* %V.103
	%vr19993 = icmp ne i64 %vr19994, 154
	br i1 %vr19993, label %.Lt_0CAD, label %.Lt_106B
.Lt_106B:

	; label .Lt_0CAE
	br label %.Lt_0CAE
.Lt_0CAE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CAF
	%vr19997 = bitcast i8* bitcast ([16 x i8]* @Lt_0CAF to i8*) to i8*
	; arg 15
	%vr19996 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr19997, i64 15 )

	; call fb_PrintString()
	; arg 1
	; arg vr19996
	%vr20000 = bitcast %FBSTRING* %vr19996 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20000, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_106C:

	; label .Lt_0CAD
	br label %.Lt_0CAD
.Lt_0CAD:

	; branchbop V <> 155
	%vr20004 = load i64, i64* %V.103
	%vr20003 = icmp ne i64 %vr20004, 155
	br i1 %vr20003, label %.Lt_0CB0, label %.Lt_106D
.Lt_106D:

	; label .Lt_0CB1
	br label %.Lt_0CB1
.Lt_0CB1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB2
	%vr20007 = bitcast i8* bitcast ([17 x i8]* @Lt_0CB2 to i8*) to i8*
	; arg 16
	%vr20006 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20007, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr20006
	%vr20010 = bitcast %FBSTRING* %vr20006 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20010, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_106E:

	; label .Lt_0CB0
	br label %.Lt_0CB0
.Lt_0CB0:

	; branchbop V <> 156
	%vr20014 = load i64, i64* %V.103
	%vr20013 = icmp ne i64 %vr20014, 156
	br i1 %vr20013, label %.Lt_0CB3, label %.Lt_106F
.Lt_106F:

	; label .Lt_0CB4
	br label %.Lt_0CB4
.Lt_0CB4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB5
	%vr20017 = bitcast i8* bitcast ([17 x i8]* @Lt_0CB5 to i8*) to i8*
	; arg 16
	%vr20016 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20017, i64 16 )

	; call fb_PrintString()
	; arg 1
	; arg vr20016
	%vr20020 = bitcast %FBSTRING* %vr20016 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20020, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1070:

	; label .Lt_0CB3
	br label %.Lt_0CB3
.Lt_0CB3:

	; branchbop V <> 157
	%vr20024 = load i64, i64* %V.103
	%vr20023 = icmp ne i64 %vr20024, 157
	br i1 %vr20023, label %.Lt_0CB6, label %.Lt_1071
.Lt_1071:

	; label .Lt_0CB7
	br label %.Lt_0CB7
.Lt_0CB7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CB8
	%vr20027 = bitcast i8* bitcast ([21 x i8]* @Lt_0CB8 to i8*) to i8*
	; arg 20
	%vr20026 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20027, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr20026
	%vr20030 = bitcast %FBSTRING* %vr20026 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20030, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1072:

	; label .Lt_0CB6
	br label %.Lt_0CB6
.Lt_0CB6:

	; branchbop V <> 158
	%vr20034 = load i64, i64* %V.103
	%vr20033 = icmp ne i64 %vr20034, 158
	br i1 %vr20033, label %.Lt_0CB9, label %.Lt_1073
.Lt_1073:

	; label .Lt_0CBA
	br label %.Lt_0CBA
.Lt_0CBA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CBB
	%vr20037 = bitcast i8* bitcast ([21 x i8]* @Lt_0CBB to i8*) to i8*
	; arg 20
	%vr20036 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20037, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr20036
	%vr20040 = bitcast %FBSTRING* %vr20036 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20040, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1074:

	; label .Lt_0CB9
	br label %.Lt_0CB9
.Lt_0CB9:

	; branchbop V <> 159
	%vr20044 = load i64, i64* %V.103
	%vr20043 = icmp ne i64 %vr20044, 159
	br i1 %vr20043, label %.Lt_0CBC, label %.Lt_1075
.Lt_1075:

	; label .Lt_0CBD
	br label %.Lt_0CBD
.Lt_0CBD:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CBE
	%vr20047 = bitcast i8* bitcast ([26 x i8]* @Lt_0CBE to i8*) to i8*
	; arg 25
	%vr20046 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20047, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20046
	%vr20050 = bitcast %FBSTRING* %vr20046 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20050, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1076:

	; label .Lt_0CBC
	br label %.Lt_0CBC
.Lt_0CBC:

	; branchbop V <> 160
	%vr20054 = load i64, i64* %V.103
	%vr20053 = icmp ne i64 %vr20054, 160
	br i1 %vr20053, label %.Lt_0CBF, label %.Lt_1077
.Lt_1077:

	; label .Lt_0CC0
	br label %.Lt_0CC0
.Lt_0CC0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC1
	%vr20057 = bitcast i8* bitcast ([26 x i8]* @Lt_0CC1 to i8*) to i8*
	; arg 25
	%vr20056 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20057, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20056
	%vr20060 = bitcast %FBSTRING* %vr20056 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20060, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1078:

	; label .Lt_0CBF
	br label %.Lt_0CBF
.Lt_0CBF:

	; branchbop V <> 161
	%vr20064 = load i64, i64* %V.103
	%vr20063 = icmp ne i64 %vr20064, 161
	br i1 %vr20063, label %.Lt_0CC2, label %.Lt_1079
.Lt_1079:

	; label .Lt_0CC3
	br label %.Lt_0CC3
.Lt_0CC3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC4
	%vr20067 = bitcast i8* bitcast ([26 x i8]* @Lt_0CC4 to i8*) to i8*
	; arg 25
	%vr20066 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20067, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20066
	%vr20070 = bitcast %FBSTRING* %vr20066 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20070, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_107A:

	; label .Lt_0CC2
	br label %.Lt_0CC2
.Lt_0CC2:

	; branchbop V <> 162
	%vr20074 = load i64, i64* %V.103
	%vr20073 = icmp ne i64 %vr20074, 162
	br i1 %vr20073, label %.Lt_0CC5, label %.Lt_107B
.Lt_107B:

	; label .Lt_0CC6
	br label %.Lt_0CC6
.Lt_0CC6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CC7
	%vr20077 = bitcast i8* bitcast ([27 x i8]* @Lt_0CC7 to i8*) to i8*
	; arg 26
	%vr20076 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20077, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20076
	%vr20080 = bitcast %FBSTRING* %vr20076 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20080, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_107C:

	; label .Lt_0CC5
	br label %.Lt_0CC5
.Lt_0CC5:

	; branchbop V <> 163
	%vr20084 = load i64, i64* %V.103
	%vr20083 = icmp ne i64 %vr20084, 163
	br i1 %vr20083, label %.Lt_0CC8, label %.Lt_107D
.Lt_107D:

	; label .Lt_0CC9
	br label %.Lt_0CC9
.Lt_0CC9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CCA
	%vr20087 = bitcast i8* bitcast ([27 x i8]* @Lt_0CCA to i8*) to i8*
	; arg 26
	%vr20086 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20087, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20086
	%vr20090 = bitcast %FBSTRING* %vr20086 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20090, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_107E:

	; label .Lt_0CC8
	br label %.Lt_0CC8
.Lt_0CC8:

	; branchbop V <> 164
	%vr20094 = load i64, i64* %V.103
	%vr20093 = icmp ne i64 %vr20094, 164
	br i1 %vr20093, label %.Lt_0CCB, label %.Lt_107F
.Lt_107F:

	; label .Lt_0CCC
	br label %.Lt_0CCC
.Lt_0CCC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CCD
	%vr20097 = bitcast i8* bitcast ([28 x i8]* @Lt_0CCD to i8*) to i8*
	; arg 27
	%vr20096 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20097, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr20096
	%vr20100 = bitcast %FBSTRING* %vr20096 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20100, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1080:

	; label .Lt_0CCB
	br label %.Lt_0CCB
.Lt_0CCB:

	; branchbop V <> 165
	%vr20104 = load i64, i64* %V.103
	%vr20103 = icmp ne i64 %vr20104, 165
	br i1 %vr20103, label %.Lt_0CCE, label %.Lt_1081
.Lt_1081:

	; label .Lt_0CCF
	br label %.Lt_0CCF
.Lt_0CCF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD0
	%vr20107 = bitcast i8* bitcast ([28 x i8]* @Lt_0CD0 to i8*) to i8*
	; arg 27
	%vr20106 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20107, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr20106
	%vr20110 = bitcast %FBSTRING* %vr20106 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20110, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1082:

	; label .Lt_0CCE
	br label %.Lt_0CCE
.Lt_0CCE:

	; branchbop V <> 166
	%vr20114 = load i64, i64* %V.103
	%vr20113 = icmp ne i64 %vr20114, 166
	br i1 %vr20113, label %.Lt_0CD1, label %.Lt_1083
.Lt_1083:

	; label .Lt_0CD2
	br label %.Lt_0CD2
.Lt_0CD2:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD3
	%vr20117 = bitcast i8* bitcast ([31 x i8]* @Lt_0CD3 to i8*) to i8*
	; arg 30
	%vr20116 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20117, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr20116
	%vr20120 = bitcast %FBSTRING* %vr20116 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20120, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1084:

	; label .Lt_0CD1
	br label %.Lt_0CD1
.Lt_0CD1:

	; branchbop V <> 167
	%vr20124 = load i64, i64* %V.103
	%vr20123 = icmp ne i64 %vr20124, 167
	br i1 %vr20123, label %.Lt_0CD4, label %.Lt_1085
.Lt_1085:

	; label .Lt_0CD5
	br label %.Lt_0CD5
.Lt_0CD5:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD6
	%vr20127 = bitcast i8* bitcast ([31 x i8]* @Lt_0CD6 to i8*) to i8*
	; arg 30
	%vr20126 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20127, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr20126
	%vr20130 = bitcast %FBSTRING* %vr20126 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20130, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1086:

	; label .Lt_0CD4
	br label %.Lt_0CD4
.Lt_0CD4:

	; branchbop V <> 168
	%vr20134 = load i64, i64* %V.103
	%vr20133 = icmp ne i64 %vr20134, 168
	br i1 %vr20133, label %.Lt_0CD7, label %.Lt_1087
.Lt_1087:

	; label .Lt_0CD8
	br label %.Lt_0CD8
.Lt_0CD8:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CD9
	%vr20137 = bitcast i8* bitcast ([31 x i8]* @Lt_0CD9 to i8*) to i8*
	; arg 30
	%vr20136 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20137, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr20136
	%vr20140 = bitcast %FBSTRING* %vr20136 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20140, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1088:

	; label .Lt_0CD7
	br label %.Lt_0CD7
.Lt_0CD7:

	; branchbop V <> 169
	%vr20144 = load i64, i64* %V.103
	%vr20143 = icmp ne i64 %vr20144, 169
	br i1 %vr20143, label %.Lt_0CDA, label %.Lt_1089
.Lt_1089:

	; label .Lt_0CDB
	br label %.Lt_0CDB
.Lt_0CDB:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CDC
	%vr20147 = bitcast i8* bitcast ([32 x i8]* @Lt_0CDC to i8*) to i8*
	; arg 31
	%vr20146 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20147, i64 31 )

	; call fb_PrintString()
	; arg 1
	; arg vr20146
	%vr20150 = bitcast %FBSTRING* %vr20146 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20150, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_108A:

	; label .Lt_0CDA
	br label %.Lt_0CDA
.Lt_0CDA:

	; branchbop V <> 170
	%vr20154 = load i64, i64* %V.103
	%vr20153 = icmp ne i64 %vr20154, 170
	br i1 %vr20153, label %.Lt_0CDD, label %.Lt_108B
.Lt_108B:

	; label .Lt_0CDE
	br label %.Lt_0CDE
.Lt_0CDE:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CDF
	%vr20157 = bitcast i8* bitcast ([40 x i8]* @Lt_0CDF to i8*) to i8*
	; arg 39
	%vr20156 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20157, i64 39 )

	; call fb_PrintString()
	; arg 1
	; arg vr20156
	%vr20160 = bitcast %FBSTRING* %vr20156 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20160, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_108C:

	; label .Lt_0CDD
	br label %.Lt_0CDD
.Lt_0CDD:

	; branchbop V <> 171
	%vr20164 = load i64, i64* %V.103
	%vr20163 = icmp ne i64 %vr20164, 171
	br i1 %vr20163, label %.Lt_0CE0, label %.Lt_108D
.Lt_108D:

	; label .Lt_0CE1
	br label %.Lt_0CE1
.Lt_0CE1:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE2
	%vr20167 = bitcast i8* bitcast ([53 x i8]* @Lt_0CE2 to i8*) to i8*
	; arg 52
	%vr20166 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20167, i64 52 )

	; call fb_PrintString()
	; arg 1
	; arg vr20166
	%vr20170 = bitcast %FBSTRING* %vr20166 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20170, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_108E:

	; label .Lt_0CE0
	br label %.Lt_0CE0
.Lt_0CE0:

	; branchbop V <> 172
	%vr20174 = load i64, i64* %V.103
	%vr20173 = icmp ne i64 %vr20174, 172
	br i1 %vr20173, label %.Lt_0CE3, label %.Lt_108F
.Lt_108F:

	; label .Lt_0CE4
	br label %.Lt_0CE4
.Lt_0CE4:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE5
	%vr20177 = bitcast i8* bitcast ([12 x i8]* @Lt_0CE5 to i8*) to i8*
	; arg 11
	%vr20176 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20177, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr20176
	%vr20180 = bitcast %FBSTRING* %vr20176 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20180, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1090:

	; label .Lt_0CE3
	br label %.Lt_0CE3
.Lt_0CE3:

	; branchbop V <> 173
	%vr20184 = load i64, i64* %V.103
	%vr20183 = icmp ne i64 %vr20184, 173
	br i1 %vr20183, label %.Lt_0CE6, label %.Lt_1091
.Lt_1091:

	; label .Lt_0CE7
	br label %.Lt_0CE7
.Lt_0CE7:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CE8
	%vr20187 = bitcast i8* bitcast ([21 x i8]* @Lt_0CE8 to i8*) to i8*
	; arg 20
	%vr20186 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20187, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr20186
	%vr20190 = bitcast %FBSTRING* %vr20186 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20190, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1092:

	; label .Lt_0CE6
	br label %.Lt_0CE6
.Lt_0CE6:

	; branchbop V <> 174
	%vr20194 = load i64, i64* %V.103
	%vr20193 = icmp ne i64 %vr20194, 174
	br i1 %vr20193, label %.Lt_0CE9, label %.Lt_1093
.Lt_1093:

	; label .Lt_0CEA
	br label %.Lt_0CEA
.Lt_0CEA:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CEB
	%vr20197 = bitcast i8* bitcast ([26 x i8]* @Lt_0CEB to i8*) to i8*
	; arg 25
	%vr20196 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20197, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20196
	%vr20200 = bitcast %FBSTRING* %vr20196 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20200, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1094:

	; label .Lt_0CE9
	br label %.Lt_0CE9
.Lt_0CE9:

	; branchbop V <> 175
	%vr20204 = load i64, i64* %V.103
	%vr20203 = icmp ne i64 %vr20204, 175
	br i1 %vr20203, label %.Lt_0CEC, label %.Lt_1095
.Lt_1095:

	; label .Lt_0CED
	br label %.Lt_0CED
.Lt_0CED:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CEE
	%vr20207 = bitcast i8* bitcast ([29 x i8]* @Lt_0CEE to i8*) to i8*
	; arg 28
	%vr20206 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20207, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr20206
	%vr20210 = bitcast %FBSTRING* %vr20206 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20210, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1096:

	; label .Lt_0CEC
	br label %.Lt_0CEC
.Lt_0CEC:

	; branchbop V <> 176
	%vr20214 = load i64, i64* %V.103
	%vr20213 = icmp ne i64 %vr20214, 176
	br i1 %vr20213, label %.Lt_0CEF, label %.Lt_1097
.Lt_1097:

	; label .Lt_0CF0
	br label %.Lt_0CF0
.Lt_0CF0:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF1
	%vr20217 = bitcast i8* bitcast ([61 x i8]* @Lt_0CF1 to i8*) to i8*
	; arg 60
	%vr20216 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20217, i64 60 )

	; call fb_PrintString()
	; arg 1
	; arg vr20216
	%vr20220 = bitcast %FBSTRING* %vr20216 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20220, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1098:

	; label .Lt_0CEF
	br label %.Lt_0CEF
.Lt_0CEF:

	; branchbop V <> 177
	%vr20224 = load i64, i64* %V.103
	%vr20223 = icmp ne i64 %vr20224, 177
	br i1 %vr20223, label %.Lt_0CF2, label %.Lt_1099
.Lt_1099:

	; label .Lt_0CF3
	br label %.Lt_0CF3
.Lt_0CF3:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF4
	%vr20227 = bitcast i8* bitcast ([3 x i8]* @Lt_0CF4 to i8*) to i8*
	; arg 2
	%vr20226 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20227, i64 2 )

	; call fb_PrintString()
	; arg 1
	; arg vr20226
	%vr20230 = bitcast %FBSTRING* %vr20226 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20230, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_109A:

	; label .Lt_0CF2
	br label %.Lt_0CF2
.Lt_0CF2:

	; branchbop V <> 178
	%vr20234 = load i64, i64* %V.103
	%vr20233 = icmp ne i64 %vr20234, 178
	br i1 %vr20233, label %.Lt_0CF5, label %.Lt_109B
.Lt_109B:

	; label .Lt_0CF6
	br label %.Lt_0CF6
.Lt_0CF6:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CF7
	%vr20237 = bitcast i8* bitcast ([14 x i8]* @Lt_0CF7 to i8*) to i8*
	; arg 13
	%vr20236 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20237, i64 13 )

	; call fb_PrintString()
	; arg 1
	; arg vr20236
	%vr20240 = bitcast %FBSTRING* %vr20236 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20240, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_109C:

	; label .Lt_0CF5
	br label %.Lt_0CF5
.Lt_0CF5:

	; branchbop V <> 179
	%vr20244 = load i64, i64* %V.103
	%vr20243 = icmp ne i64 %vr20244, 179
	br i1 %vr20243, label %.Lt_0CF8, label %.Lt_109D
.Lt_109D:

	; label .Lt_0CF9
	br label %.Lt_0CF9
.Lt_0CF9:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CFA
	%vr20247 = bitcast i8* bitcast ([13 x i8]* @Lt_0CFA to i8*) to i8*
	; arg 12
	%vr20246 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20247, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr20246
	%vr20250 = bitcast %FBSTRING* %vr20246 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20250, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_109E:

	; label .Lt_0CF8
	br label %.Lt_0CF8
.Lt_0CF8:

	; branchbop V <> 180
	%vr20254 = load i64, i64* %V.103
	%vr20253 = icmp ne i64 %vr20254, 180
	br i1 %vr20253, label %.Lt_0CFB, label %.Lt_109F
.Lt_109F:

	; label .Lt_0CFC
	br label %.Lt_0CFC
.Lt_0CFC:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0CFD
	%vr20257 = bitcast i8* bitcast ([22 x i8]* @Lt_0CFD to i8*) to i8*
	; arg 21
	%vr20256 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20257, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20256
	%vr20260 = bitcast %FBSTRING* %vr20256 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20260, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10A0:

	; label .Lt_0CFB
	br label %.Lt_0CFB
.Lt_0CFB:

	; branchbop V <> 181
	%vr20264 = load i64, i64* %V.103
	%vr20263 = icmp ne i64 %vr20264, 181
	br i1 %vr20263, label %.Lt_0CFE, label %.Lt_10A1
.Lt_10A1:

	; label .Lt_0CFF
	br label %.Lt_0CFF
.Lt_0CFF:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D00
	%vr20267 = bitcast i8* bitcast ([56 x i8]* @Lt_0D00 to i8*) to i8*
	; arg 55
	%vr20266 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20267, i64 55 )

	; call fb_PrintString()
	; arg 1
	; arg vr20266
	%vr20270 = bitcast %FBSTRING* %vr20266 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20270, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10A2:

	; label .Lt_0CFE
	br label %.Lt_0CFE
.Lt_0CFE:

	; branchbop V <> 182
	%vr20274 = load i64, i64* %V.103
	%vr20273 = icmp ne i64 %vr20274, 182
	br i1 %vr20273, label %.Lt_0D01, label %.Lt_10A3
.Lt_10A3:

	; label .Lt_0D02
	br label %.Lt_0D02
.Lt_0D02:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D03
	%vr20277 = bitcast i8* bitcast ([79 x i8]* @Lt_0D03 to i8*) to i8*
	; arg 78
	%vr20276 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20277, i64 78 )

	; call fb_PrintString()
	; arg 1
	; arg vr20276
	%vr20280 = bitcast %FBSTRING* %vr20276 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20280, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10A4:

	; label .Lt_0D01
	br label %.Lt_0D01
.Lt_0D01:

	; branchbop V <> 183
	%vr20284 = load i64, i64* %V.103
	%vr20283 = icmp ne i64 %vr20284, 183
	br i1 %vr20283, label %.Lt_0D04, label %.Lt_10A5
.Lt_10A5:

	; label .Lt_0D05
	br label %.Lt_0D05
.Lt_0D05:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D06
	%vr20287 = bitcast i8* bitcast ([35 x i8]* @Lt_0D06 to i8*) to i8*
	; arg 34
	%vr20286 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20287, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20286
	%vr20290 = bitcast %FBSTRING* %vr20286 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20290, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10A6:

	; label .Lt_0D04
	br label %.Lt_0D04
.Lt_0D04:

	; branchbop V <> 184
	%vr20294 = load i64, i64* %V.103
	%vr20293 = icmp ne i64 %vr20294, 184
	br i1 %vr20293, label %.Lt_0D07, label %.Lt_10A7
.Lt_10A7:

	; label .Lt_0D08
	br label %.Lt_0D08
.Lt_0D08:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D0A
	%vr20297 = bitcast i8* bitcast ([145 x i8]* @Lt_0D0A to i8*) to i8*
	; arg 144
	%vr20296 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20297, i64 144 )

	; call fb_PrintString()
	; arg 1
	; arg vr20296
	%vr20300 = bitcast %FBSTRING* %vr20296 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20300, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10A8:

	; label .Lt_0D07
	br label %.Lt_0D07
.Lt_0D07:

	; branchbop V <> 185
	%vr20304 = load i64, i64* %V.103
	%vr20303 = icmp ne i64 %vr20304, 185
	br i1 %vr20303, label %.Lt_0D0B, label %.Lt_10A9
.Lt_10A9:

	; label .Lt_0D0C
	br label %.Lt_0D0C
.Lt_0D0C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D0E
	%vr20307 = bitcast i8* bitcast ([173 x i8]* @Lt_0D0E to i8*) to i8*
	; arg 172
	%vr20306 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20307, i64 172 )

	; call fb_PrintString()
	; arg 1
	; arg vr20306
	%vr20310 = bitcast %FBSTRING* %vr20306 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20310, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10AA:

	; label .Lt_0D0B
	br label %.Lt_0D0B
.Lt_0D0B:

	; branchbop V <> 186
	%vr20314 = load i64, i64* %V.103
	%vr20313 = icmp ne i64 %vr20314, 186
	br i1 %vr20313, label %.Lt_0D0F, label %.Lt_10AB
.Lt_10AB:

	; label .Lt_0D10
	br label %.Lt_0D10
.Lt_0D10:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D11
	%vr20317 = bitcast i8* bitcast ([44 x i8]* @Lt_0D11 to i8*) to i8*
	; arg 43
	%vr20316 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20317, i64 43 )

	; call fb_PrintString()
	; arg 1
	; arg vr20316
	%vr20320 = bitcast %FBSTRING* %vr20316 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20320, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10AC:

	; label .Lt_0D0F
	br label %.Lt_0D0F
.Lt_0D0F:

	; branchbop V <> 187
	%vr20324 = load i64, i64* %V.103
	%vr20323 = icmp ne i64 %vr20324, 187
	br i1 %vr20323, label %.Lt_0D12, label %.Lt_10AD
.Lt_10AD:

	; label .Lt_0D13
	br label %.Lt_0D13
.Lt_0D13:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D15
	%vr20327 = bitcast i8* bitcast ([173 x i8]* @Lt_0D15 to i8*) to i8*
	; arg 172
	%vr20326 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20327, i64 172 )

	; call fb_PrintString()
	; arg 1
	; arg vr20326
	%vr20330 = bitcast %FBSTRING* %vr20326 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20330, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10AE:

	; label .Lt_0D12
	br label %.Lt_0D12
.Lt_0D12:

	; branchbop V <> 188
	%vr20334 = load i64, i64* %V.103
	%vr20333 = icmp ne i64 %vr20334, 188
	br i1 %vr20333, label %.Lt_0D16, label %.Lt_10AF
.Lt_10AF:

	; label .Lt_0D17
	br label %.Lt_0D17
.Lt_0D17:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D18
	%vr20337 = bitcast i8* bitcast ([35 x i8]* @Lt_0D18 to i8*) to i8*
	; arg 34
	%vr20336 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20337, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20336
	%vr20340 = bitcast %FBSTRING* %vr20336 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20340, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10B0:

	; label .Lt_0D16
	br label %.Lt_0D16
.Lt_0D16:

	; branchbop V <> 189
	%vr20344 = load i64, i64* %V.103
	%vr20343 = icmp ne i64 %vr20344, 189
	br i1 %vr20343, label %.Lt_0D19, label %.Lt_10B1
.Lt_10B1:

	; label .Lt_0D1A
	br label %.Lt_0D1A
.Lt_0D1A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D1B
	%vr20347 = bitcast i8* bitcast ([22 x i8]* @Lt_0D1B to i8*) to i8*
	; arg 21
	%vr20346 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20347, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20346
	%vr20350 = bitcast %FBSTRING* %vr20346 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20350, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10B2:

	; label .Lt_0D19
	br label %.Lt_0D19
.Lt_0D19:

	; branchbop V <> 190
	%vr20354 = load i64, i64* %V.103
	%vr20353 = icmp ne i64 %vr20354, 190
	br i1 %vr20353, label %.Lt_0D1C, label %.Lt_10B3
.Lt_10B3:

	; label .Lt_0D1D
	br label %.Lt_0D1D
.Lt_0D1D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D1E
	%vr20357 = bitcast i8* bitcast ([31 x i8]* @Lt_0D1E to i8*) to i8*
	; arg 30
	%vr20356 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20357, i64 30 )

	; call fb_PrintString()
	; arg 1
	; arg vr20356
	%vr20360 = bitcast %FBSTRING* %vr20356 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20360, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10B4:

	; label .Lt_0D1C
	br label %.Lt_0D1C
.Lt_0D1C:

	; branchbop V <> 191
	%vr20364 = load i64, i64* %V.103
	%vr20363 = icmp ne i64 %vr20364, 191
	br i1 %vr20363, label %.Lt_0D1F, label %.Lt_10B5
.Lt_10B5:

	; label .Lt_0D20
	br label %.Lt_0D20
.Lt_0D20:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D21
	%vr20367 = bitcast i8* bitcast ([22 x i8]* @Lt_0D21 to i8*) to i8*
	; arg 21
	%vr20366 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20367, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20366
	%vr20370 = bitcast %FBSTRING* %vr20366 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20370, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10B6:

	; label .Lt_0D1F
	br label %.Lt_0D1F
.Lt_0D1F:

	; branchbop V <> 192
	%vr20374 = load i64, i64* %V.103
	%vr20373 = icmp ne i64 %vr20374, 192
	br i1 %vr20373, label %.Lt_0D22, label %.Lt_10B7
.Lt_10B7:

	; label .Lt_0D23
	br label %.Lt_0D23
.Lt_0D23:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D24
	%vr20377 = bitcast i8* bitcast ([22 x i8]* @Lt_0D24 to i8*) to i8*
	; arg 21
	%vr20376 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20377, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20376
	%vr20380 = bitcast %FBSTRING* %vr20376 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20380, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10B8:

	; label .Lt_0D22
	br label %.Lt_0D22
.Lt_0D22:

	; branchbop V <> 193
	%vr20384 = load i64, i64* %V.103
	%vr20383 = icmp ne i64 %vr20384, 193
	br i1 %vr20383, label %.Lt_0D25, label %.Lt_10B9
.Lt_10B9:

	; label .Lt_0D26
	br label %.Lt_0D26
.Lt_0D26:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D27
	%vr20387 = bitcast i8* bitcast ([23 x i8]* @Lt_0D27 to i8*) to i8*
	; arg 22
	%vr20386 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20387, i64 22 )

	; call fb_PrintString()
	; arg 1
	; arg vr20386
	%vr20390 = bitcast %FBSTRING* %vr20386 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20390, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10BA:

	; label .Lt_0D25
	br label %.Lt_0D25
.Lt_0D25:

	; branchbop V <> 194
	%vr20394 = load i64, i64* %V.103
	%vr20393 = icmp ne i64 %vr20394, 194
	br i1 %vr20393, label %.Lt_0D28, label %.Lt_10BB
.Lt_10BB:

	; label .Lt_0D29
	br label %.Lt_0D29
.Lt_0D29:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D2A
	%vr20397 = bitcast i8* bitcast ([36 x i8]* @Lt_0D2A to i8*) to i8*
	; arg 35
	%vr20396 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20397, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20396
	%vr20400 = bitcast %FBSTRING* %vr20396 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20400, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10BC:

	; label .Lt_0D28
	br label %.Lt_0D28
.Lt_0D28:

	; branchbop V <> 195
	%vr20404 = load i64, i64* %V.103
	%vr20403 = icmp ne i64 %vr20404, 195
	br i1 %vr20403, label %.Lt_0D2B, label %.Lt_10BD
.Lt_10BD:

	; label .Lt_0D2C
	br label %.Lt_0D2C
.Lt_0D2C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D2D
	%vr20407 = bitcast i8* bitcast ([36 x i8]* @Lt_0D2D to i8*) to i8*
	; arg 35
	%vr20406 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20407, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20406
	%vr20410 = bitcast %FBSTRING* %vr20406 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20410, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10BE:

	; label .Lt_0D2B
	br label %.Lt_0D2B
.Lt_0D2B:

	; branchbop V <> 196
	%vr20414 = load i64, i64* %V.103
	%vr20413 = icmp ne i64 %vr20414, 196
	br i1 %vr20413, label %.Lt_0D2E, label %.Lt_10BF
.Lt_10BF:

	; label .Lt_0D2F
	br label %.Lt_0D2F
.Lt_0D2F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D30
	%vr20417 = bitcast i8* bitcast ([37 x i8]* @Lt_0D30 to i8*) to i8*
	; arg 36
	%vr20416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20417, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr20416
	%vr20420 = bitcast %FBSTRING* %vr20416 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20420, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10C0:

	; label .Lt_0D2E
	br label %.Lt_0D2E
.Lt_0D2E:

	; branchbop V <> 197
	%vr20424 = load i64, i64* %V.103
	%vr20423 = icmp ne i64 %vr20424, 197
	br i1 %vr20423, label %.Lt_0D31, label %.Lt_10C1
.Lt_10C1:

	; label .Lt_0D32
	br label %.Lt_0D32
.Lt_0D32:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D33
	%vr20427 = bitcast i8* bitcast ([37 x i8]* @Lt_0D33 to i8*) to i8*
	; arg 36
	%vr20426 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20427, i64 36 )

	; call fb_PrintString()
	; arg 1
	; arg vr20426
	%vr20430 = bitcast %FBSTRING* %vr20426 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20430, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10C2:

	; label .Lt_0D31
	br label %.Lt_0D31
.Lt_0D31:

	; branchbop V <> 198
	%vr20434 = load i64, i64* %V.103
	%vr20433 = icmp ne i64 %vr20434, 198
	br i1 %vr20433, label %.Lt_0D34, label %.Lt_10C3
.Lt_10C3:

	; label .Lt_0D35
	br label %.Lt_0D35
.Lt_0D35:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D36
	%vr20437 = bitcast i8* bitcast ([18 x i8]* @Lt_0D36 to i8*) to i8*
	; arg 17
	%vr20436 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20437, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr20436
	%vr20440 = bitcast %FBSTRING* %vr20436 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20440, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10C4:

	; label .Lt_0D34
	br label %.Lt_0D34
.Lt_0D34:

	; branchbop V <> 199
	%vr20444 = load i64, i64* %V.103
	%vr20443 = icmp ne i64 %vr20444, 199
	br i1 %vr20443, label %.Lt_0D37, label %.Lt_10C5
.Lt_10C5:

	; label .Lt_0D38
	br label %.Lt_0D38
.Lt_0D38:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D39
	%vr20447 = bitcast i8* bitcast ([18 x i8]* @Lt_0D39 to i8*) to i8*
	; arg 17
	%vr20446 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20447, i64 17 )

	; call fb_PrintString()
	; arg 1
	; arg vr20446
	%vr20450 = bitcast %FBSTRING* %vr20446 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20450, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10C6:

	; label .Lt_0D37
	br label %.Lt_0D37
.Lt_0D37:

	; branchbop V <> 200
	%vr20454 = load i64, i64* %V.103
	%vr20453 = icmp ne i64 %vr20454, 200
	br i1 %vr20453, label %.Lt_0D3A, label %.Lt_10C7
.Lt_10C7:

	; label .Lt_0D3B
	br label %.Lt_0D3B
.Lt_0D3B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D3C
	%vr20457 = bitcast i8* bitcast ([48 x i8]* @Lt_0D3C to i8*) to i8*
	; arg 47
	%vr20456 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20457, i64 47 )

	; call fb_PrintString()
	; arg 1
	; arg vr20456
	%vr20460 = bitcast %FBSTRING* %vr20456 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20460, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10C8:

	; label .Lt_0D3A
	br label %.Lt_0D3A
.Lt_0D3A:

	; branchbop V <> 201
	%vr20464 = load i64, i64* %V.103
	%vr20463 = icmp ne i64 %vr20464, 201
	br i1 %vr20463, label %.Lt_0D3D, label %.Lt_10C9
.Lt_10C9:

	; label .Lt_0D3E
	br label %.Lt_0D3E
.Lt_0D3E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D3F
	%vr20467 = bitcast i8* bitcast ([50 x i8]* @Lt_0D3F to i8*) to i8*
	; arg 49
	%vr20466 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20467, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr20466
	%vr20470 = bitcast %FBSTRING* %vr20466 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20470, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10CA:

	; label .Lt_0D3D
	br label %.Lt_0D3D
.Lt_0D3D:

	; branchbop V <> 202
	%vr20474 = load i64, i64* %V.103
	%vr20473 = icmp ne i64 %vr20474, 202
	br i1 %vr20473, label %.Lt_0D40, label %.Lt_10CB
.Lt_10CB:

	; label .Lt_0D41
	br label %.Lt_0D41
.Lt_0D41:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D42
	%vr20477 = bitcast i8* bitcast ([50 x i8]* @Lt_0D42 to i8*) to i8*
	; arg 49
	%vr20476 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20477, i64 49 )

	; call fb_PrintString()
	; arg 1
	; arg vr20476
	%vr20480 = bitcast %FBSTRING* %vr20476 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20480, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10CC:

	; label .Lt_0D40
	br label %.Lt_0D40
.Lt_0D40:

	; branchbop V <> 203
	%vr20484 = load i64, i64* %V.103
	%vr20483 = icmp ne i64 %vr20484, 203
	br i1 %vr20483, label %.Lt_0D43, label %.Lt_10CD
.Lt_10CD:

	; label .Lt_0D44
	br label %.Lt_0D44
.Lt_0D44:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D45
	%vr20487 = bitcast i8* bitcast ([73 x i8]* @Lt_0D45 to i8*) to i8*
	; arg 72
	%vr20486 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20487, i64 72 )

	; call fb_PrintString()
	; arg 1
	; arg vr20486
	%vr20490 = bitcast %FBSTRING* %vr20486 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20490, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10CE:

	; label .Lt_0D43
	br label %.Lt_0D43
.Lt_0D43:

	; branchbop V <> 204
	%vr20494 = load i64, i64* %V.103
	%vr20493 = icmp ne i64 %vr20494, 204
	br i1 %vr20493, label %.Lt_0D46, label %.Lt_10CF
.Lt_10CF:

	; label .Lt_0D47
	br label %.Lt_0D47
.Lt_0D47:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D48
	%vr20497 = bitcast i8* bitcast ([74 x i8]* @Lt_0D48 to i8*) to i8*
	; arg 73
	%vr20496 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20497, i64 73 )

	; call fb_PrintString()
	; arg 1
	; arg vr20496
	%vr20500 = bitcast %FBSTRING* %vr20496 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20500, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10D0:

	; label .Lt_0D46
	br label %.Lt_0D46
.Lt_0D46:

	; branchbop V <> 205
	%vr20504 = load i64, i64* %V.103
	%vr20503 = icmp ne i64 %vr20504, 205
	br i1 %vr20503, label %.Lt_0D49, label %.Lt_10D1
.Lt_10D1:

	; label .Lt_0D4A
	br label %.Lt_0D4A
.Lt_0D4A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D4B
	%vr20507 = bitcast i8* bitcast ([89 x i8]* @Lt_0D4B to i8*) to i8*
	; arg 88
	%vr20506 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20507, i64 88 )

	; call fb_PrintString()
	; arg 1
	; arg vr20506
	%vr20510 = bitcast %FBSTRING* %vr20506 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20510, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10D2:

	; label .Lt_0D49
	br label %.Lt_0D49
.Lt_0D49:

	; branchbop V <> 206
	%vr20514 = load i64, i64* %V.103
	%vr20513 = icmp ne i64 %vr20514, 206
	br i1 %vr20513, label %.Lt_0D4C, label %.Lt_10D3
.Lt_10D3:

	; label .Lt_0D4D
	br label %.Lt_0D4D
.Lt_0D4D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D4E
	%vr20517 = bitcast i8* bitcast ([28 x i8]* @Lt_0D4E to i8*) to i8*
	; arg 27
	%vr20516 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20517, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr20516
	%vr20520 = bitcast %FBSTRING* %vr20516 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20520, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10D4:

	; label .Lt_0D4C
	br label %.Lt_0D4C
.Lt_0D4C:

	; branchbop V <> 207
	%vr20524 = load i64, i64* %V.103
	%vr20523 = icmp ne i64 %vr20524, 207
	br i1 %vr20523, label %.Lt_0D4F, label %.Lt_10D5
.Lt_10D5:

	; label .Lt_0D50
	br label %.Lt_0D50
.Lt_0D50:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D51
	%vr20527 = bitcast i8* bitcast ([45 x i8]* @Lt_0D51 to i8*) to i8*
	; arg 44
	%vr20526 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20527, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr20526
	%vr20530 = bitcast %FBSTRING* %vr20526 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20530, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10D6:

	; label .Lt_0D4F
	br label %.Lt_0D4F
.Lt_0D4F:

	; branchbop V <> 208
	%vr20534 = load i64, i64* %V.103
	%vr20533 = icmp ne i64 %vr20534, 208
	br i1 %vr20533, label %.Lt_0D52, label %.Lt_10D7
.Lt_10D7:

	; label .Lt_0D53
	br label %.Lt_0D53
.Lt_0D53:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D54
	%vr20537 = bitcast i8* bitcast ([21 x i8]* @Lt_0D54 to i8*) to i8*
	; arg 20
	%vr20536 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20537, i64 20 )

	; call fb_PrintString()
	; arg 1
	; arg vr20536
	%vr20540 = bitcast %FBSTRING* %vr20536 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20540, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10D8:

	; label .Lt_0D52
	br label %.Lt_0D52
.Lt_0D52:

	; branchbop V <> 209
	%vr20544 = load i64, i64* %V.103
	%vr20543 = icmp ne i64 %vr20544, 209
	br i1 %vr20543, label %.Lt_0D55, label %.Lt_10D9
.Lt_10D9:

	; label .Lt_0D56
	br label %.Lt_0D56
.Lt_0D56:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D57
	%vr20547 = bitcast i8* bitcast ([12 x i8]* @Lt_0D57 to i8*) to i8*
	; arg 11
	%vr20546 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20547, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr20546
	%vr20550 = bitcast %FBSTRING* %vr20546 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20550, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10DA:

	; label .Lt_0D55
	br label %.Lt_0D55
.Lt_0D55:

	; branchbop V <> 210
	%vr20554 = load i64, i64* %V.103
	%vr20553 = icmp ne i64 %vr20554, 210
	br i1 %vr20553, label %.Lt_0D58, label %.Lt_10DB
.Lt_10DB:

	; label .Lt_0D59
	br label %.Lt_0D59
.Lt_0D59:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D5A
	%vr20557 = bitcast i8* bitcast ([13 x i8]* @Lt_0D5A to i8*) to i8*
	; arg 12
	%vr20556 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20557, i64 12 )

	; call fb_PrintString()
	; arg 1
	; arg vr20556
	%vr20560 = bitcast %FBSTRING* %vr20556 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20560, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10DC:

	; label .Lt_0D58
	br label %.Lt_0D58
.Lt_0D58:

	; branchbop V <> 211
	%vr20564 = load i64, i64* %V.103
	%vr20563 = icmp ne i64 %vr20564, 211
	br i1 %vr20563, label %.Lt_0D5B, label %.Lt_10DD
.Lt_10DD:

	; label .Lt_0D5C
	br label %.Lt_0D5C
.Lt_0D5C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D5D
	%vr20567 = bitcast i8* bitcast ([12 x i8]* @Lt_0D5D to i8*) to i8*
	; arg 11
	%vr20566 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20567, i64 11 )

	; call fb_PrintString()
	; arg 1
	; arg vr20566
	%vr20570 = bitcast %FBSTRING* %vr20566 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20570, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10DE:

	; label .Lt_0D5B
	br label %.Lt_0D5B
.Lt_0D5B:

	; branchbop V <> 212
	%vr20574 = load i64, i64* %V.103
	%vr20573 = icmp ne i64 %vr20574, 212
	br i1 %vr20573, label %.Lt_0D5E, label %.Lt_10DF
.Lt_10DF:

	; label .Lt_0D5F
	br label %.Lt_0D5F
.Lt_0D5F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D60
	%vr20577 = bitcast i8* bitcast ([29 x i8]* @Lt_0D60 to i8*) to i8*
	; arg 28
	%vr20576 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20577, i64 28 )

	; call fb_PrintString()
	; arg 1
	; arg vr20576
	%vr20580 = bitcast %FBSTRING* %vr20576 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20580, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10E0:

	; label .Lt_0D5E
	br label %.Lt_0D5E
.Lt_0D5E:

	; branchbop V <> 213
	%vr20584 = load i64, i64* %V.103
	%vr20583 = icmp ne i64 %vr20584, 213
	br i1 %vr20583, label %.Lt_0D61, label %.Lt_10E1
.Lt_10E1:

	; label .Lt_0D62
	br label %.Lt_0D62
.Lt_0D62:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D63
	%vr20587 = bitcast i8* bitcast ([25 x i8]* @Lt_0D63 to i8*) to i8*
	; arg 24
	%vr20586 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20587, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr20586
	%vr20590 = bitcast %FBSTRING* %vr20586 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20590, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10E2:

	; label .Lt_0D61
	br label %.Lt_0D61
.Lt_0D61:

	; branchbop V <> 214
	%vr20594 = load i64, i64* %V.103
	%vr20593 = icmp ne i64 %vr20594, 214
	br i1 %vr20593, label %.Lt_0D64, label %.Lt_10E3
.Lt_10E3:

	; label .Lt_0D65
	br label %.Lt_0D65
.Lt_0D65:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D66
	%vr20597 = bitcast i8* bitcast ([30 x i8]* @Lt_0D66 to i8*) to i8*
	; arg 29
	%vr20596 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20597, i64 29 )

	; call fb_PrintString()
	; arg 1
	; arg vr20596
	%vr20600 = bitcast %FBSTRING* %vr20596 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20600, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10E4:

	; label .Lt_0D64
	br label %.Lt_0D64
.Lt_0D64:

	; branchbop V <> 215
	%vr20604 = load i64, i64* %V.103
	%vr20603 = icmp ne i64 %vr20604, 215
	br i1 %vr20603, label %.Lt_0D67, label %.Lt_10E5
.Lt_10E5:

	; label .Lt_0D68
	br label %.Lt_0D68
.Lt_0D68:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D69
	%vr20607 = bitcast i8* bitcast ([42 x i8]* @Lt_0D69 to i8*) to i8*
	; arg 41
	%vr20606 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20607, i64 41 )

	; call fb_PrintString()
	; arg 1
	; arg vr20606
	%vr20610 = bitcast %FBSTRING* %vr20606 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20610, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10E6:

	; label .Lt_0D67
	br label %.Lt_0D67
.Lt_0D67:

	; branchbop V <> 216
	%vr20614 = load i64, i64* %V.103
	%vr20613 = icmp ne i64 %vr20614, 216
	br i1 %vr20613, label %.Lt_0D6A, label %.Lt_10E7
.Lt_10E7:

	; label .Lt_0D6B
	br label %.Lt_0D6B
.Lt_0D6B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D6C
	%vr20617 = bitcast i8* bitcast ([36 x i8]* @Lt_0D6C to i8*) to i8*
	; arg 35
	%vr20616 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20617, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20616
	%vr20620 = bitcast %FBSTRING* %vr20616 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20620, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10E8:

	; label .Lt_0D6A
	br label %.Lt_0D6A
.Lt_0D6A:

	; branchbop V <> 217
	%vr20624 = load i64, i64* %V.103
	%vr20623 = icmp ne i64 %vr20624, 217
	br i1 %vr20623, label %.Lt_0D6D, label %.Lt_10E9
.Lt_10E9:

	; label .Lt_0D6E
	br label %.Lt_0D6E
.Lt_0D6E:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D6F
	%vr20627 = bitcast i8* bitcast ([26 x i8]* @Lt_0D6F to i8*) to i8*
	; arg 25
	%vr20626 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20627, i64 25 )

	; call fb_PrintString()
	; arg 1
	; arg vr20626
	%vr20630 = bitcast %FBSTRING* %vr20626 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20630, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10EA:

	; label .Lt_0D6D
	br label %.Lt_0D6D
.Lt_0D6D:

	; branchbop V <> 218
	%vr20634 = load i64, i64* %V.103
	%vr20633 = icmp ne i64 %vr20634, 218
	br i1 %vr20633, label %.Lt_0D70, label %.Lt_10EB
.Lt_10EB:

	; label .Lt_0D71
	br label %.Lt_0D71
.Lt_0D71:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D72
	%vr20637 = bitcast i8* bitcast ([22 x i8]* @Lt_0D72 to i8*) to i8*
	; arg 21
	%vr20636 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20637, i64 21 )

	; call fb_PrintString()
	; arg 1
	; arg vr20636
	%vr20640 = bitcast %FBSTRING* %vr20636 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20640, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10EC:

	; label .Lt_0D70
	br label %.Lt_0D70
.Lt_0D70:

	; branchbop V <> 219
	%vr20644 = load i64, i64* %V.103
	%vr20643 = icmp ne i64 %vr20644, 219
	br i1 %vr20643, label %.Lt_0D73, label %.Lt_10ED
.Lt_10ED:

	; label .Lt_0D74
	br label %.Lt_0D74
.Lt_0D74:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D75
	%vr20647 = bitcast i8* bitcast ([27 x i8]* @Lt_0D75 to i8*) to i8*
	; arg 26
	%vr20646 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20647, i64 26 )

	; call fb_PrintString()
	; arg 1
	; arg vr20646
	%vr20650 = bitcast %FBSTRING* %vr20646 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20650, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10EE:

	; label .Lt_0D73
	br label %.Lt_0D73
.Lt_0D73:

	; branchbop V <> 220
	%vr20654 = load i64, i64* %V.103
	%vr20653 = icmp ne i64 %vr20654, 220
	br i1 %vr20653, label %.Lt_0D76, label %.Lt_10EF
.Lt_10EF:

	; label .Lt_0D77
	br label %.Lt_0D77
.Lt_0D77:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D78
	%vr20657 = bitcast i8* bitcast ([28 x i8]* @Lt_0D78 to i8*) to i8*
	; arg 27
	%vr20656 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20657, i64 27 )

	; call fb_PrintString()
	; arg 1
	; arg vr20656
	%vr20660 = bitcast %FBSTRING* %vr20656 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20660, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10F0:

	; label .Lt_0D76
	br label %.Lt_0D76
.Lt_0D76:

	; branchbop V <> 221
	%vr20664 = load i64, i64* %V.103
	%vr20663 = icmp ne i64 %vr20664, 221
	br i1 %vr20663, label %.Lt_0D79, label %.Lt_10F1
.Lt_10F1:

	; label .Lt_0D7A
	br label %.Lt_0D7A
.Lt_0D7A:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D7B
	%vr20667 = bitcast i8* bitcast ([25 x i8]* @Lt_0D7B to i8*) to i8*
	; arg 24
	%vr20666 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20667, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr20666
	%vr20670 = bitcast %FBSTRING* %vr20666 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20670, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10F2:

	; label .Lt_0D79
	br label %.Lt_0D79
.Lt_0D79:

	; branchbop V <> 222
	%vr20674 = load i64, i64* %V.103
	%vr20673 = icmp ne i64 %vr20674, 222
	br i1 %vr20673, label %.Lt_0D7C, label %.Lt_10F3
.Lt_10F3:

	; label .Lt_0D7D
	br label %.Lt_0D7D
.Lt_0D7D:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D7E
	%vr20677 = bitcast i8* bitcast ([25 x i8]* @Lt_0D7E to i8*) to i8*
	; arg 24
	%vr20676 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20677, i64 24 )

	; call fb_PrintString()
	; arg 1
	; arg vr20676
	%vr20680 = bitcast %FBSTRING* %vr20676 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20680, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10F4:

	; label .Lt_0D7C
	br label %.Lt_0D7C
.Lt_0D7C:

	; branchbop V <> 223
	%vr20684 = load i64, i64* %V.103
	%vr20683 = icmp ne i64 %vr20684, 223
	br i1 %vr20683, label %.Lt_0D7F, label %.Lt_10F5
.Lt_10F5:

	; label .Lt_0D80
	br label %.Lt_0D80
.Lt_0D80:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D81
	%vr20687 = bitcast i8* bitcast ([39 x i8]* @Lt_0D81 to i8*) to i8*
	; arg 38
	%vr20686 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20687, i64 38 )

	; call fb_PrintString()
	; arg 1
	; arg vr20686
	%vr20690 = bitcast %FBSTRING* %vr20686 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20690, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10F6:

	; label .Lt_0D7F
	br label %.Lt_0D7F
.Lt_0D7F:

	; branchbop V <> 224
	%vr20694 = load i64, i64* %V.103
	%vr20693 = icmp ne i64 %vr20694, 224
	br i1 %vr20693, label %.Lt_0D82, label %.Lt_10F7
.Lt_10F7:

	; label .Lt_0D83
	br label %.Lt_0D83
.Lt_0D83:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D84
	%vr20697 = bitcast i8* bitcast ([51 x i8]* @Lt_0D84 to i8*) to i8*
	; arg 50
	%vr20696 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20697, i64 50 )

	; call fb_PrintString()
	; arg 1
	; arg vr20696
	%vr20700 = bitcast %FBSTRING* %vr20696 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20700, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10F8:

	; label .Lt_0D82
	br label %.Lt_0D82
.Lt_0D82:

	; branchbop V <> 225
	%vr20704 = load i64, i64* %V.103
	%vr20703 = icmp ne i64 %vr20704, 225
	br i1 %vr20703, label %.Lt_0D85, label %.Lt_10F9
.Lt_10F9:

	; label .Lt_0D86
	br label %.Lt_0D86
.Lt_0D86:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D87
	%vr20707 = bitcast i8* bitcast ([15 x i8]* @Lt_0D87 to i8*) to i8*
	; arg 14
	%vr20706 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20707, i64 14 )

	; call fb_PrintString()
	; arg 1
	; arg vr20706
	%vr20710 = bitcast %FBSTRING* %vr20706 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20710, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10FA:

	; label .Lt_0D85
	br label %.Lt_0D85
.Lt_0D85:

	; branchbop V <> 226
	%vr20714 = load i64, i64* %V.103
	%vr20713 = icmp ne i64 %vr20714, 226
	br i1 %vr20713, label %.Lt_0D88, label %.Lt_10FB
.Lt_10FB:

	; label .Lt_0D89
	br label %.Lt_0D89
.Lt_0D89:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D8A
	%vr20717 = bitcast i8* bitcast ([45 x i8]* @Lt_0D8A to i8*) to i8*
	; arg 44
	%vr20716 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20717, i64 44 )

	; call fb_PrintString()
	; arg 1
	; arg vr20716
	%vr20720 = bitcast %FBSTRING* %vr20716 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20720, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10FC:

	; label .Lt_0D88
	br label %.Lt_0D88
.Lt_0D88:

	; branchbop V <> 227
	%vr20724 = load i64, i64* %V.103
	%vr20723 = icmp ne i64 %vr20724, 227
	br i1 %vr20723, label %.Lt_0D8B, label %.Lt_10FD
.Lt_10FD:

	; label .Lt_0D8C
	br label %.Lt_0D8C
.Lt_0D8C:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D8D
	%vr20727 = bitcast i8* bitcast ([35 x i8]* @Lt_0D8D to i8*) to i8*
	; arg 34
	%vr20726 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20727, i64 34 )

	; call fb_PrintString()
	; arg 1
	; arg vr20726
	%vr20730 = bitcast %FBSTRING* %vr20726 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20730, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_10FE:

	; label .Lt_0D8B
	br label %.Lt_0D8B
.Lt_0D8B:

	; branchbop V <> 228
	%vr20734 = load i64, i64* %V.103
	%vr20733 = icmp ne i64 %vr20734, 228
	br i1 %vr20733, label %.Lt_0D8E, label %.Lt_10FF
.Lt_10FF:

	; label .Lt_0D8F
	br label %.Lt_0D8F
.Lt_0D8F:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D90
	%vr20737 = bitcast i8* bitcast ([85 x i8]* @Lt_0D90 to i8*) to i8*
	; arg 84
	%vr20736 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20737, i64 84 )

	; call fb_PrintString()
	; arg 1
	; arg vr20736
	%vr20740 = bitcast %FBSTRING* %vr20736 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20740, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1100:

	; label .Lt_0D8E
	br label %.Lt_0D8E
.Lt_0D8E:

	; branchbop V <> 229
	%vr20744 = load i64, i64* %V.103
	%vr20743 = icmp ne i64 %vr20744, 229
	br i1 %vr20743, label %.Lt_0D91, label %.Lt_1101
.Lt_1101:

	; label .Lt_0D92
	br label %.Lt_0D92
.Lt_0D92:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D93
	%vr20747 = bitcast i8* bitcast ([88 x i8]* @Lt_0D93 to i8*) to i8*
	; arg 87
	%vr20746 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20747, i64 87 )

	; call fb_PrintString()
	; arg 1
	; arg vr20746
	%vr20750 = bitcast %FBSTRING* %vr20746 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20750, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1102:

	; label .Lt_0D91
	br label %.Lt_0D91
.Lt_0D91:

	; branchbop V <> 230
	%vr20754 = load i64, i64* %V.103
	%vr20753 = icmp ne i64 %vr20754, 230
	br i1 %vr20753, label %.Lt_0D94, label %.Lt_1103
.Lt_1103:

	; label .Lt_0D95
	br label %.Lt_0D95
.Lt_0D95:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D96
	%vr20757 = bitcast i8* bitcast ([20 x i8]* @Lt_0D96 to i8*) to i8*
	; arg 19
	%vr20756 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20757, i64 19 )

	; call fb_PrintString()
	; arg 1
	; arg vr20756
	%vr20760 = bitcast %FBSTRING* %vr20756 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20760, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1104:

	; label .Lt_0D94
	br label %.Lt_0D94
.Lt_0D94:

	; branchbop V <> 231
	%vr20764 = load i64, i64* %V.103
	%vr20763 = icmp ne i64 %vr20764, 231
	br i1 %vr20763, label %.Lt_0D97, label %.Lt_1105
.Lt_1105:

	; label .Lt_0D98
	br label %.Lt_0D98
.Lt_0D98:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D99
	%vr20767 = bitcast i8* bitcast ([36 x i8]* @Lt_0D99 to i8*) to i8*
	; arg 35
	%vr20766 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20767, i64 35 )

	; call fb_PrintString()
	; arg 1
	; arg vr20766
	%vr20770 = bitcast %FBSTRING* %vr20766 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20770, i32 1 )

	; goto .Lt_0577
	br label %.Lt_0577
.Lt_1106:

	; label .Lt_0D97
	br label %.Lt_0D97
.Lt_0D97:

	; branchbop V <> 232
	%vr20774 = load i64, i64* %V.103
	%vr20773 = icmp ne i64 %vr20774, 232
	br i1 %vr20773, label %.Lt_0D9A, label %.Lt_1107
.Lt_1107:

	; label .Lt_0D9B
	br label %.Lt_0D9B
.Lt_0D9B:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0D9C
	%vr20777 = bitcast i8* bitcast ([9 x i8]* @Lt_0D9C to i8*) to i8*
	; arg 8
	%vr20776 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr20777, i64 8 )

	; call fb_PrintString()
	; arg 1
	; arg vr20776
	%vr20780 = bitcast %FBSTRING* %vr20776 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr20780, i32 1 )

	; label .Lt_0D9A
	br label %.Lt_0D9A
.Lt_0D9A:

	; label .Lt_0577
	br label %.Lt_0577
.Lt_0577:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1108:

	; label .Lt_0575
	br label %.Lt_0575
.Lt_0575:

	; conv SYS_OFFSET => vr20783
	%vr20784 = load i32, i32* @SYS_OFFSET
	%vr20783 = sext i32 %vr20784 to i64

	; bop vr20783 + 163
	%vr20785 = add i64 %vr20783, 163
	%vr20786 = bitcast i64 %vr20785 to i64

	; branchbop ADR <> vr20786
	%vr20788 = load i64, i64* %ADR.102
	%vr20787 = icmp ne i64 %vr20788, %vr20786
	br i1 %vr20787, label %.Lt_0D9D, label %.Lt_1109
.Lt_1109:

	; label .Lt_0D9E
	br label %.Lt_0D9E
.Lt_0D9E:
	%vr20790 = bitcast i8* bitcast ([9 x i8]* @Lt_057A to i8*) to i8*
	%vr20791 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr20791
	; arg -1
	; arg vr20790
	; arg 9
	; arg 0
	%vr20792 = call %FBSTRING* @fb_StrAssign( i8* %vr20791, i64 -1, i8* %vr20790, i64 9, i32 0 )

	; call POKE64()
	; arg THIS
	%vr20796 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 49313
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr20796, i64 49313, i64 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_110A:

	; label .Lt_0D9D
	br label %.Lt_0D9D
.Lt_0D9D:

	; conv SYS_OFFSET => vr20798
	%vr20799 = load i32, i32* @SYS_OFFSET
	%vr20798 = sext i32 %vr20799 to i64

	; bop vr20798 + 170
	%vr20800 = add i64 %vr20798, 170
	%vr20801 = bitcast i64 %vr20800 to i64

	; branchbop ADR <> vr20801
	%vr20803 = load i64, i64* %ADR.102
	%vr20802 = icmp ne i64 %vr20803, %vr20801
	br i1 %vr20802, label %.Lt_0D9F, label %.Lt_110B
.Lt_110B:

	; label .Lt_0DA0
	br label %.Lt_0DA0
.Lt_0DA0:

	; localvar X
	%X.166 = alloca i64

	; localvar Y
	%Y.167 = alloca i64

	; localvar WHEEL
	%WHEEL.168 = alloca i64

	; localvar BUTTONS
	%BUTTONS.169 = alloca i64

	; localvar RES
	%RES.170 = alloca i64

	; localvar LT_0DA1
	%LT_0DA1.171 = alloca i64

	; localvar LT_0DA2
	%LT_0DA2.172 = alloca i64

	; addrof X

	; memclear X
	%vr20806 = bitcast i64* %X.166 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20806, i8 0, i32 8, i32 1, i1 false )

	; addrof Y

	; memclear Y
	%vr20808 = bitcast i64* %Y.167 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20808, i8 0, i32 8, i32 1, i1 false )

	; addrof WHEEL

	; memclear WHEEL
	%vr20810 = bitcast i64* %WHEEL.168 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20810, i8 0, i32 8, i32 1, i1 false )

	; addrof BUTTONS

	; memclear BUTTONS
	%vr20812 = bitcast i64* %BUTTONS.169 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20812, i8 0, i32 8, i32 1, i1 false )

	; addrof RES

	; memclear RES
	%vr20814 = bitcast i64* %RES.170 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20814, i8 0, i32 8, i32 1, i1 false )

	; store LT_0DA2 := 0
	store i64 0, i64* %LT_0DA2.172

	; addrof BUTTONS
	%vr20816 = bitcast i64* %BUTTONS.169 to i64*

	; store LT_0DA1 := 0
	store i64 0, i64* %LT_0DA1.171

	; addrof Y
	%vr20818 = bitcast i64* %Y.167 to i64*

	; addrof X
	%vr20820 = bitcast i64* %X.166 to i64*

	; call fb_GetMouse64()
	; arg vr20820
	; arg vr20818
	; arg LT_0DA1
	; arg vr20816
	; arg LT_0DA2
	%vr20821 = call i32 @fb_GetMouse64( i64* %vr20820, i64* %vr20818, i64* %LT_0DA1.171, i64* %vr20816, i64* %LT_0DA2.172 )

	; conv vr20821 => vr20822
	%vr20822 = sitofp i32 %vr20821 to double

	; conv SYS_OFFSET => vr20823
	%vr20824 = load i32, i32* @SYS_OFFSET
	%vr20823 = sext i32 %vr20824 to i64

	; bop vr20823 SHL 3
	%vr20825 = shl i64 %vr20823, 3

	; bop THIS + vr20825
	%vr20827 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20828 = inttoptr i64 %vr20825 to %MEMORY_T*
	%vr20826 = add %MEMORY_T* %vr20827, %vr20828

	; store vr20826+1360 := vr20822
	%vr20829 = ptrtoint %MEMORY_T* %vr20826 to i64
	%vr20830 = add i64 %vr20829, 1360
	%vr20831 = inttoptr i64 %vr20830 to double*
	store double %vr20822, double* %vr20831

	; conv X => vr20832
	%vr20833 = load i64, i64* %X.166
	%vr20832 = sitofp i64 %vr20833 to double

	; conv SYS_OFFSET => vr20834
	%vr20835 = load i32, i32* @SYS_OFFSET
	%vr20834 = sext i32 %vr20835 to i64

	; bop vr20834 SHL 3
	%vr20836 = shl i64 %vr20834, 3

	; bop THIS + vr20836
	%vr20838 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20839 = inttoptr i64 %vr20836 to %MEMORY_T*
	%vr20837 = add %MEMORY_T* %vr20838, %vr20839

	; store vr20837+1624 := vr20832
	%vr20840 = ptrtoint %MEMORY_T* %vr20837 to i64
	%vr20841 = add i64 %vr20840, 1624
	%vr20842 = inttoptr i64 %vr20841 to double*
	store double %vr20832, double* %vr20842

	; conv Y => vr20843
	%vr20844 = load i64, i64* %Y.167
	%vr20843 = sitofp i64 %vr20844 to double

	; conv SYS_OFFSET => vr20845
	%vr20846 = load i32, i32* @SYS_OFFSET
	%vr20845 = sext i32 %vr20846 to i64

	; bop vr20845 SHL 3
	%vr20847 = shl i64 %vr20845, 3

	; bop THIS + vr20847
	%vr20849 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20850 = inttoptr i64 %vr20847 to %MEMORY_T*
	%vr20848 = add %MEMORY_T* %vr20849, %vr20850

	; store vr20848+1632 := vr20843
	%vr20851 = ptrtoint %MEMORY_T* %vr20848 to i64
	%vr20852 = add i64 %vr20851, 1632
	%vr20853 = inttoptr i64 %vr20852 to double*
	store double %vr20843, double* %vr20853

	; conv WHEEL => vr20854
	%vr20855 = load i64, i64* %WHEEL.168
	%vr20854 = sitofp i64 %vr20855 to double

	; conv SYS_OFFSET => vr20856
	%vr20857 = load i32, i32* @SYS_OFFSET
	%vr20856 = sext i32 %vr20857 to i64

	; bop vr20856 SHL 3
	%vr20858 = shl i64 %vr20856, 3

	; bop THIS + vr20858
	%vr20860 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20861 = inttoptr i64 %vr20858 to %MEMORY_T*
	%vr20859 = add %MEMORY_T* %vr20860, %vr20861

	; store vr20859+1640 := vr20854
	%vr20862 = ptrtoint %MEMORY_T* %vr20859 to i64
	%vr20863 = add i64 %vr20862, 1640
	%vr20864 = inttoptr i64 %vr20863 to double*
	store double %vr20854, double* %vr20864

	; bop BUTTONS AND 1
	%vr20866 = load i64, i64* %BUTTONS.169
	%vr20865 = and i64 %vr20866, 1

	; branchbop vr20865 == 0
	%vr20867 = icmp eq i64 %vr20865, 0
	br i1 %vr20867, label %.Lt_0DA4, label %.Lt_110C
.Lt_110C:

	; conv SYS_OFFSET => vr20868
	%vr20869 = load i32, i32* @SYS_OFFSET
	%vr20868 = sext i32 %vr20869 to i64

	; bop vr20868 SHL 3
	%vr20870 = shl i64 %vr20868, 3

	; bop THIS + vr20870
	%vr20872 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20873 = inttoptr i64 %vr20870 to %MEMORY_T*
	%vr20871 = add %MEMORY_T* %vr20872, %vr20873

	; store vr20871+1648 := 1
	%vr20874 = ptrtoint %MEMORY_T* %vr20871 to i64
	%vr20875 = add i64 %vr20874, 1648
	%vr20876 = inttoptr i64 %vr20875 to double*
	store double 0x3FF0000000000000, double* %vr20876

	; label .Lt_0DA4
	br label %.Lt_0DA4
.Lt_0DA4:

	; bop BUTTONS AND 2
	%vr20878 = load i64, i64* %BUTTONS.169
	%vr20877 = and i64 %vr20878, 2

	; branchbop vr20877 == 0
	%vr20879 = icmp eq i64 %vr20877, 0
	br i1 %vr20879, label %.Lt_0DA6, label %.Lt_110D
.Lt_110D:

	; conv SYS_OFFSET => vr20880
	%vr20881 = load i32, i32* @SYS_OFFSET
	%vr20880 = sext i32 %vr20881 to i64

	; bop vr20880 SHL 3
	%vr20882 = shl i64 %vr20880, 3

	; bop THIS + vr20882
	%vr20884 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20885 = inttoptr i64 %vr20882 to %MEMORY_T*
	%vr20883 = add %MEMORY_T* %vr20884, %vr20885

	; store vr20883+1648 := 2
	%vr20886 = ptrtoint %MEMORY_T* %vr20883 to i64
	%vr20887 = add i64 %vr20886, 1648
	%vr20888 = inttoptr i64 %vr20887 to double*
	store double 0x4000000000000000, double* %vr20888

	; label .Lt_0DA6
	br label %.Lt_0DA6
.Lt_0DA6:

	; bop BUTTONS AND 4
	%vr20890 = load i64, i64* %BUTTONS.169
	%vr20889 = and i64 %vr20890, 4

	; branchbop vr20889 == 0
	%vr20891 = icmp eq i64 %vr20889, 0
	br i1 %vr20891, label %.Lt_0DA8, label %.Lt_110E
.Lt_110E:

	; conv SYS_OFFSET => vr20892
	%vr20893 = load i32, i32* @SYS_OFFSET
	%vr20892 = sext i32 %vr20893 to i64

	; bop vr20892 SHL 3
	%vr20894 = shl i64 %vr20892, 3

	; bop THIS + vr20894
	%vr20896 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20897 = inttoptr i64 %vr20894 to %MEMORY_T*
	%vr20895 = add %MEMORY_T* %vr20896, %vr20897

	; store vr20895+1648 := 4
	%vr20898 = ptrtoint %MEMORY_T* %vr20895 to i64
	%vr20899 = add i64 %vr20898, 1648
	%vr20900 = inttoptr i64 %vr20899 to double*
	store double 0x4010000000000000, double* %vr20900

	; label .Lt_0DA8
	br label %.Lt_0DA8
.Lt_0DA8:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_110F:

	; label .Lt_0D9F
	br label %.Lt_0D9F
.Lt_0D9F:

	; conv SYS_OFFSET => vr20902
	%vr20903 = load i32, i32* @SYS_OFFSET
	%vr20902 = sext i32 %vr20903 to i64

	; bop vr20902 + 171
	%vr20904 = add i64 %vr20902, 171
	%vr20905 = bitcast i64 %vr20904 to i64

	; branchbop ADR <> vr20905
	%vr20907 = load i64, i64* %ADR.102
	%vr20906 = icmp ne i64 %vr20907, %vr20905
	br i1 %vr20906, label %.Lt_0DA9, label %.Lt_1110
.Lt_1110:

	; label .Lt_0DAA
	br label %.Lt_0DAA
.Lt_0DAA:

	; conv SYS_OFFSET => vr20909
	%vr20910 = load i32, i32* @SYS_OFFSET
	%vr20909 = sext i32 %vr20910 to i64

	; bop vr20909 SHL 3
	%vr20911 = shl i64 %vr20909, 3

	; bop THIS + vr20911
	%vr20913 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20914 = inttoptr i64 %vr20911 to %MEMORY_T*
	%vr20912 = add %MEMORY_T* %vr20913, %vr20914

	; conv vr20912+1632 => vr20915
	%vr20917 = ptrtoint %MEMORY_T* %vr20912 to i64
	%vr20918 = add i64 %vr20917, 1632
	%vr20919 = inttoptr i64 %vr20918 to double*
	%vr20920 = load double, double* %vr20919
	%vr20916 = call double @llvm.nearbyint.f64(double %vr20920)
	%vr20915 = fptosi double %vr20916 to i32

	; conv SYS_OFFSET => vr20921
	%vr20922 = load i32, i32* @SYS_OFFSET
	%vr20921 = sext i32 %vr20922 to i64

	; bop vr20921 SHL 3
	%vr20923 = shl i64 %vr20921, 3

	; bop THIS + vr20923
	%vr20925 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20926 = inttoptr i64 %vr20923 to %MEMORY_T*
	%vr20924 = add %MEMORY_T* %vr20925, %vr20926

	; conv vr20924+1624 => vr20927
	%vr20929 = ptrtoint %MEMORY_T* %vr20924 to i64
	%vr20930 = add i64 %vr20929, 1624
	%vr20931 = inttoptr i64 %vr20930 to double*
	%vr20932 = load double, double* %vr20931
	%vr20928 = call double @llvm.nearbyint.f64(double %vr20932)
	%vr20927 = fptosi double %vr20928 to i32

	; call fb_PageCopy()
	; arg vr20927
	; arg vr20915
	%vr20933 = call i32 @fb_PageCopy( i32 %vr20927, i32 %vr20915 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1111:

	; label .Lt_0DA9
	br label %.Lt_0DA9
.Lt_0DA9:

	; conv SYS_OFFSET => vr20935
	%vr20936 = load i32, i32* @SYS_OFFSET
	%vr20935 = sext i32 %vr20936 to i64

	; bop vr20935 + 230
	%vr20937 = add i64 %vr20935, 230
	%vr20938 = bitcast i64 %vr20937 to i64

	; branchbop ADR <> vr20938
	%vr20940 = load i64, i64* %ADR.102
	%vr20939 = icmp ne i64 %vr20940, %vr20938
	br i1 %vr20939, label %.Lt_0DAB, label %.Lt_1112
.Lt_1112:

	; label .Lt_0DAC
	br label %.Lt_0DAC
.Lt_0DAC:

	; localvar TMP
	%TMP.173 = alloca i8

	; localvar LT_0DB3
	%LT_0DB3.174 = alloca %FBSTRING

	; localvar LT_0DB4
	%LT_0DB4.175 = alloca %FBSTRING

	; addrof TMP

	; memclear TMP
	%vr20943 = bitcast i8* %TMP.173 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20943, i8 0, i32 1, i32 1, i1 false )

	; localvar C
	%C.176 = alloca i64

	; store C := 0
	store i64 0, i64* %C.176

	; label .Lt_0DB0
	br label %.Lt_0DB0
.Lt_0DB0:

	; bop C SHL 3
	%vr20945 = load i64, i64* %C.176
	%vr20944 = shl i64 %vr20945, 3

	; bop THIS + vr20944
	%vr20947 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20948 = inttoptr i64 %vr20944 to %MEMORY_T*
	%vr20946 = add %MEMORY_T* %vr20947, %vr20948

	; store vr20946+786424 := 0
	%vr20949 = ptrtoint %MEMORY_T* %vr20946 to i64
	%vr20950 = add i64 %vr20949, 786424
	%vr20951 = inttoptr i64 %vr20950 to double*
	store double 0x0000000000000000, double* %vr20951

	; label .Lt_0DAE
	br label %.Lt_0DAE
.Lt_0DAE:

	; bop C + 1
	%vr20953 = load i64, i64* %C.176
	%vr20952 = add i64 %vr20953, 1

	; store C := vr20952
	store i64 %vr20952, i64* %C.176

	; label .Lt_0DAD
	br label %.Lt_0DAD
.Lt_0DAD:

	; branchbop C <= 8191
	%vr20955 = load i64, i64* %C.176
	%vr20954 = icmp sle i64 %vr20955, 8191
	br i1 %vr20954, label %.Lt_0DB0, label %.Lt_1113
.Lt_1113:

	; label .Lt_0DAF
	br label %.Lt_0DAF
.Lt_0DAF:
	%vr20956 = bitcast i8* bitcast ([5 x i8]* @Lt_0DB2 to i8*) to i8*

	; call fb_ULongintToStr()
	; arg V
	%vr20958 = load i64, i64* %V.103
	%vr20957 = call %FBSTRING* @fb_ULongintToStr( i64 %vr20958 )
	%vr20960 = bitcast i8* bitcast ([11 x i8]* @Lt_0DB1 to i8*) to i8*

	; addrof LT_0DB3

	; memclear LT_0DB3
	%vr20962 = bitcast %FBSTRING* %LT_0DB3.174 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20962, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DB3

	; call fb_StrConcat()
	; arg LT_0DB3
	; arg vr20960
	; arg 11
	; arg vr20957
	%vr20966 = bitcast %FBSTRING* %vr20957 to i8*
	; arg -1
	%vr20964 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DB3.174, i8* %vr20960, i64 11, i8* %vr20966, i64 -1 )

	; addrof LT_0DB4

	; memclear LT_0DB4
	%vr20969 = bitcast %FBSTRING* %LT_0DB4.175 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr20969, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DB4

	; call fb_StrConcat()
	; arg LT_0DB4
	; arg vr20964
	%vr20972 = bitcast %FBSTRING* %vr20964 to i8*
	; arg -1
	; arg vr20956
	; arg 5
	%vr20971 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DB4.175, i8* %vr20972, i64 -1, i8* %vr20956, i64 5 )

	; call fb_FileOpen()
	; arg vr20971
	%vr20976 = bitcast %FBSTRING* %vr20971 to %FBSTRING*
	; arg 0
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr20975 = call i32 @fb_FileOpen( %FBSTRING* %vr20976, i32 0, i32 0, i32 0, i32 1, i32 0 )

	; localvar I
	%I.177 = alloca i64

	; localvar LT_0DB5
	%LT_0DB5.178 = alloca i64

	; store I := 0
	store i64 0, i64* %I.177

	; call fb_FileSize()
	; arg 1
	%vr20982 = call i64 @fb_FileSize( i32 1 )

	; store LT_0DB5 := vr20982
	store i64 %vr20982, i64* %LT_0DB5.178

	; goto .Lt_0DB6
	br label %.Lt_0DB6
.Lt_1114:

	; label .Lt_0DB9
	br label %.Lt_0DB9
.Lt_0DB9:

	; addrof TMP
	%vr20987 = bitcast i8* %TMP.173 to i8*

	; call fb_FileGetLarge()
	; arg 1
	; arg 0
	; arg vr20987
	; arg 1
	%vr20988 = call i32 @fb_FileGetLarge( i32 1, i64 0, i8* %vr20987, i64 1 )

	; conv TMP => vr20992
	%vr20993 = load i8, i8* %TMP.173
	%vr20992 = uitofp i8 %vr20993 to double

	; bop I SHL 3
	%vr20995 = load i64, i64* %I.177
	%vr20994 = shl i64 %vr20995, 3

	; bop THIS + vr20994
	%vr20997 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr20998 = inttoptr i64 %vr20994 to %MEMORY_T*
	%vr20996 = add %MEMORY_T* %vr20997, %vr20998

	; store vr20996+786424 := vr20992
	%vr20999 = ptrtoint %MEMORY_T* %vr20996 to i64
	%vr21000 = add i64 %vr20999, 786424
	%vr21001 = inttoptr i64 %vr21000 to double*
	store double %vr20992, double* %vr21001

	; label .Lt_0DB7
	br label %.Lt_0DB7
.Lt_0DB7:

	; bop I + 1
	%vr21003 = load i64, i64* %I.177
	%vr21002 = add i64 %vr21003, 1

	; store I := vr21002
	store i64 %vr21002, i64* %I.177

	; label .Lt_0DB6
	br label %.Lt_0DB6
.Lt_0DB6:

	; branchbop I <= LT_0DB5
	%vr21005 = load i64, i64* %I.177
	%vr21006 = load i64, i64* %LT_0DB5.178
	%vr21004 = icmp sle i64 %vr21005, %vr21006
	br i1 %vr21004, label %.Lt_0DB9, label %.Lt_1115
.Lt_1115:

	; label .Lt_0DB8
	br label %.Lt_0DB8
.Lt_0DB8:

	; call fb_FileClose()
	; arg 1
	%vr21007 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1116:

	; label .Lt_0DAB
	br label %.Lt_0DAB
.Lt_0DAB:

	; conv SYS_OFFSET => vr21010
	%vr21011 = load i32, i32* @SYS_OFFSET
	%vr21010 = sext i32 %vr21011 to i64

	; bop vr21010 + 235
	%vr21012 = add i64 %vr21010, 235
	%vr21013 = bitcast i64 %vr21012 to i64

	; branchbop ADR == vr21013
	%vr21015 = load i64, i64* %ADR.102
	%vr21014 = icmp eq i64 %vr21015, %vr21013
	br i1 %vr21014, label %.Lt_0DBB, label %.Lt_1117
.Lt_1117:

	; label .Lt_0DBC
	br label %.Lt_0DBC
.Lt_0DBC:

	; conv SYS_OFFSET => vr21018
	%vr21019 = load i32, i32* @SYS_OFFSET
	%vr21018 = sext i32 %vr21019 to i64

	; bop vr21018 + 236
	%vr21020 = add i64 %vr21018, 236
	%vr21021 = bitcast i64 %vr21020 to i64

	; branchbop ADR <> vr21021
	%vr21023 = load i64, i64* %ADR.102
	%vr21022 = icmp ne i64 %vr21023, %vr21021
	br i1 %vr21022, label %.Lt_0DBA, label %.Lt_1118
.Lt_1118:

	; label .Lt_0DBB
	br label %.Lt_0DBB
.Lt_0DBB:

	; branchbop V < 0
	%vr21027 = load i64, i64* %V.103
	%vr21026 = icmp slt i64 %vr21027, 0
	br i1 %vr21026, label %.Lt_0DBE, label %.Lt_1119
.Lt_1119:

	; branchbop V > 15
	%vr21031 = load i64, i64* %V.103
	%vr21030 = icmp sgt i64 %vr21031, 15
	br i1 %vr21030, label %.Lt_0DBE, label %.Lt_111A
.Lt_111A:

	; label .Lt_0DBF
	br label %.Lt_0DBF
.Lt_0DBF:

	; bop V MOD 255
	%vr21035 = load i64, i64* %V.103
	%vr21034 = srem i64 %vr21035, 255

	; call POKE64()
	; arg THIS
	%vr21038 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 646
	; arg vr21034
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21038, i64 646, i64 %vr21034 )

	; goto .Lt_0DBD
	br label %.Lt_0DBD
.Lt_111B:

	; label .Lt_0DBE
	br label %.Lt_0DBE
.Lt_0DBE:

	; branchbop V < 16
	%vr21042 = load i64, i64* %V.103
	%vr21041 = icmp slt i64 %vr21042, 16
	br i1 %vr21041, label %.Lt_0DC0, label %.Lt_111C
.Lt_111C:

	; branchbop V > 31
	%vr21046 = load i64, i64* %V.103
	%vr21045 = icmp sgt i64 %vr21046, 31
	br i1 %vr21045, label %.Lt_0DC0, label %.Lt_111D
.Lt_111D:

	; label .Lt_0DC1
	br label %.Lt_0DC1
.Lt_0DC1:

	; bop V + -16
	%vr21050 = load i64, i64* %V.103
	%vr21049 = add i64 %vr21050, -16

	; bop vr21049 AND 15
	%vr21052 = and i64 %vr21049, 15

	; bop vr21052 * 17
	%vr21053 = mul i64 %vr21052, 17

	; bop vr21053 MOD 255
	%vr21054 = srem i64 %vr21053, 255

	; conv SYS_OFFSET => vr21056
	%vr21057 = load i32, i32* @SYS_OFFSET
	%vr21056 = sext i32 %vr21057 to i64

	; bop vr21056 + 2
	%vr21058 = add i64 %vr21056, 2
	%vr21059 = bitcast i64 %vr21058 to i64

	; call POKE64()
	; arg THIS
	%vr21060 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21059
	; arg vr21054
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21060, i64 %vr21059, i64 %vr21054 )

	; goto .Lt_0DBD
	br label %.Lt_0DBD
.Lt_111E:

	; label .Lt_0DC0
	br label %.Lt_0DC0
.Lt_0DC0:

	; branchbop V < 32
	%vr21064 = load i64, i64* %V.103
	%vr21063 = icmp slt i64 %vr21064, 32
	br i1 %vr21063, label %.Lt_0DC2, label %.Lt_111F
.Lt_111F:

	; branchbop V > 47
	%vr21068 = load i64, i64* %V.103
	%vr21067 = icmp sgt i64 %vr21068, 47
	br i1 %vr21067, label %.Lt_0DC2, label %.Lt_1120
.Lt_1120:

	; label .Lt_0DC3
	br label %.Lt_0DC3
.Lt_0DC3:

	; bop V + -32
	%vr21072 = load i64, i64* %V.103
	%vr21071 = add i64 %vr21072, -32

	; bop vr21071 AND 15
	%vr21074 = and i64 %vr21071, 15

	; bop vr21074 * 17
	%vr21075 = mul i64 %vr21074, 17

	; bop vr21075 MOD 255
	%vr21076 = srem i64 %vr21075, 255

	; conv SYS_OFFSET => vr21078
	%vr21079 = load i32, i32* @SYS_OFFSET
	%vr21078 = sext i32 %vr21079 to i64

	; bop vr21078 + 3
	%vr21080 = add i64 %vr21078, 3
	%vr21081 = bitcast i64 %vr21080 to i64

	; call POKE64()
	; arg THIS
	%vr21082 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21081
	; arg vr21076
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21082, i64 %vr21081, i64 %vr21076 )

	; goto .Lt_0DBD
	br label %.Lt_0DBD
.Lt_1121:

	; label .Lt_0DC2
	br label %.Lt_0DC2
.Lt_0DC2:

	; branchbop V < 48
	%vr21086 = load i64, i64* %V.103
	%vr21085 = icmp slt i64 %vr21086, 48
	br i1 %vr21085, label %.Lt_0DC4, label %.Lt_1122
.Lt_1122:

	; branchbop V > 63
	%vr21090 = load i64, i64* %V.103
	%vr21089 = icmp sgt i64 %vr21090, 63
	br i1 %vr21089, label %.Lt_0DC4, label %.Lt_1123
.Lt_1123:

	; label .Lt_0DC5
	br label %.Lt_0DC5
.Lt_0DC5:

	; bop V + -48
	%vr21094 = load i64, i64* %V.103
	%vr21093 = add i64 %vr21094, -48

	; bop vr21093 AND 15
	%vr21096 = and i64 %vr21093, 15

	; bop vr21096 * 17
	%vr21097 = mul i64 %vr21096, 17

	; bop vr21097 MOD 255
	%vr21098 = srem i64 %vr21097, 255

	; conv SYS_OFFSET => vr21100
	%vr21101 = load i32, i32* @SYS_OFFSET
	%vr21100 = sext i32 %vr21101 to i64

	; bop vr21100 + 4
	%vr21102 = add i64 %vr21100, 4
	%vr21103 = bitcast i64 %vr21102 to i64

	; call POKE64()
	; arg THIS
	%vr21104 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21103
	; arg vr21098
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21104, i64 %vr21103, i64 %vr21098 )

	; goto .Lt_0DBD
	br label %.Lt_0DBD
.Lt_1124:

	; label .Lt_0DC4
	br label %.Lt_0DC4
.Lt_0DC4:

	; bop V + -64
	%vr21108 = load i64, i64* %V.103
	%vr21107 = add i64 %vr21108, -64

	; bop vr21107 AND 15
	%vr21110 = and i64 %vr21107, 15

	; bop vr21110 * 17
	%vr21111 = mul i64 %vr21110, 17

	; bop vr21111 MOD 255
	%vr21112 = srem i64 %vr21111, 255

	; conv SYS_OFFSET => vr21114
	%vr21115 = load i32, i32* @SYS_OFFSET
	%vr21114 = sext i32 %vr21115 to i64

	; bop vr21114 + 5
	%vr21116 = add i64 %vr21114, 5
	%vr21117 = bitcast i64 %vr21116 to i64

	; call POKE64()
	; arg THIS
	%vr21118 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21117
	; arg vr21112
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21118, i64 %vr21117, i64 %vr21112 )

	; label .Lt_0DC6
	br label %.Lt_0DC6
.Lt_0DC6:

	; label .Lt_0DBD
	br label %.Lt_0DBD
.Lt_0DBD:

	; conv SYS_OFFSET => vr21121
	%vr21122 = load i32, i32* @SYS_OFFSET
	%vr21121 = sext i32 %vr21122 to i64

	; bop vr21121 + 236
	%vr21123 = add i64 %vr21121, 236
	%vr21124 = bitcast i64 %vr21123 to i64

	; branchbop ADR <> vr21124
	%vr21126 = load i64, i64* %ADR.102
	%vr21125 = icmp ne i64 %vr21126, %vr21124
	br i1 %vr21125, label %.Lt_0DC8, label %.Lt_1125
.Lt_1125:

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr21129 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr21128 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21129, i64 0 )

	; conv SYS_OFFSET => vr21131
	%vr21132 = load i32, i32* @SYS_OFFSET
	%vr21131 = sext i32 %vr21132 to i64

	; bop vr21131 SHL 3
	%vr21133 = shl i64 %vr21131, 3

	; bop THIS + vr21133
	%vr21135 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21136 = inttoptr i64 %vr21133 to %MEMORY_T*
	%vr21134 = add %MEMORY_T* %vr21135, %vr21136

	; conv vr21134+1608 => vr21137
	%vr21139 = ptrtoint %MEMORY_T* %vr21134 to i64
	%vr21140 = add i64 %vr21139, 1608
	%vr21141 = inttoptr i64 %vr21140 to double*
	%vr21142 = load double, double* %vr21141
	%vr21138 = call double @llvm.nearbyint.f64(double %vr21142)
	%vr21137 = fptoui double %vr21138 to i32

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr21143 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr21144 = fpext float 0x0000000000000000 to float
	; arg vr21137
	; arg 0
	; arg vr21128
	%vr21146 = bitcast %FBSTRING* %vr21128 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr21143, float %vr21144, i32 %vr21137, i32 0, %FBSTRING* %vr21146, i32 0, i32 1073741828 )

	; label .Lt_0DC8
	br label %.Lt_0DC8
.Lt_0DC8:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1126:

	; label .Lt_0DBA
	br label %.Lt_0DBA
.Lt_0DBA:

	; conv SYS_OFFSET => vr21150
	%vr21151 = load i32, i32* @SYS_OFFSET
	%vr21150 = sext i32 %vr21151 to i64

	; bop vr21150 + 237
	%vr21152 = add i64 %vr21150, 237
	%vr21153 = bitcast i64 %vr21152 to i64

	; branchbop ADR <> vr21153
	%vr21155 = load i64, i64* %ADR.102
	%vr21154 = icmp ne i64 %vr21155, %vr21153
	br i1 %vr21154, label %.Lt_0DC9, label %.Lt_1127
.Lt_1127:

	; label .Lt_0DCA
	br label %.Lt_0DCA
.Lt_0DCA:

	; branchbop V < 0
	%vr21159 = load i64, i64* %V.103
	%vr21158 = icmp slt i64 %vr21159, 0
	br i1 %vr21158, label %.Lt_0DCC, label %.Lt_1128
.Lt_1128:

	; branchbop V > 15
	%vr21163 = load i64, i64* %V.103
	%vr21162 = icmp sgt i64 %vr21163, 15
	br i1 %vr21162, label %.Lt_0DCC, label %.Lt_1129
.Lt_1129:

	; label .Lt_0DCD
	br label %.Lt_0DCD
.Lt_0DCD:

	; bop V MOD 255
	%vr21167 = load i64, i64* %V.103
	%vr21166 = srem i64 %vr21167, 255

	; call POKE64()
	; arg THIS
	%vr21170 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg 53281
	; arg vr21166
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21170, i64 53281, i64 %vr21166 )

	; goto .Lt_0DCB
	br label %.Lt_0DCB
.Lt_112A:

	; label .Lt_0DCC
	br label %.Lt_0DCC
.Lt_0DCC:

	; branchbop V < 16
	%vr21174 = load i64, i64* %V.103
	%vr21173 = icmp slt i64 %vr21174, 16
	br i1 %vr21173, label %.Lt_0DCE, label %.Lt_112B
.Lt_112B:

	; branchbop V > 31
	%vr21178 = load i64, i64* %V.103
	%vr21177 = icmp sgt i64 %vr21178, 31
	br i1 %vr21177, label %.Lt_0DCE, label %.Lt_112C
.Lt_112C:

	; label .Lt_0DCF
	br label %.Lt_0DCF
.Lt_0DCF:

	; bop V + -16
	%vr21182 = load i64, i64* %V.103
	%vr21181 = add i64 %vr21182, -16

	; bop vr21181 AND 15
	%vr21184 = and i64 %vr21181, 15

	; bop vr21184 * 17
	%vr21185 = mul i64 %vr21184, 17

	; bop vr21185 MOD 255
	%vr21186 = srem i64 %vr21185, 255

	; conv SYS_OFFSET => vr21188
	%vr21189 = load i32, i32* @SYS_OFFSET
	%vr21188 = sext i32 %vr21189 to i64

	; bop vr21188 + 6
	%vr21190 = add i64 %vr21188, 6
	%vr21191 = bitcast i64 %vr21190 to i64

	; call POKE64()
	; arg THIS
	%vr21192 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21191
	; arg vr21186
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21192, i64 %vr21191, i64 %vr21186 )

	; goto .Lt_0DCB
	br label %.Lt_0DCB
.Lt_112D:

	; label .Lt_0DCE
	br label %.Lt_0DCE
.Lt_0DCE:

	; branchbop V < 32
	%vr21196 = load i64, i64* %V.103
	%vr21195 = icmp slt i64 %vr21196, 32
	br i1 %vr21195, label %.Lt_0DD0, label %.Lt_112E
.Lt_112E:

	; branchbop V > 47
	%vr21200 = load i64, i64* %V.103
	%vr21199 = icmp sgt i64 %vr21200, 47
	br i1 %vr21199, label %.Lt_0DD0, label %.Lt_112F
.Lt_112F:

	; label .Lt_0DD1
	br label %.Lt_0DD1
.Lt_0DD1:

	; bop V + -32
	%vr21204 = load i64, i64* %V.103
	%vr21203 = add i64 %vr21204, -32

	; bop vr21203 AND 15
	%vr21206 = and i64 %vr21203, 15

	; bop vr21206 * 17
	%vr21207 = mul i64 %vr21206, 17

	; bop vr21207 MOD 255
	%vr21208 = srem i64 %vr21207, 255

	; conv SYS_OFFSET => vr21210
	%vr21211 = load i32, i32* @SYS_OFFSET
	%vr21210 = sext i32 %vr21211 to i64

	; bop vr21210 + 7
	%vr21212 = add i64 %vr21210, 7
	%vr21213 = bitcast i64 %vr21212 to i64

	; call POKE64()
	; arg THIS
	%vr21214 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21213
	; arg vr21208
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21214, i64 %vr21213, i64 %vr21208 )

	; goto .Lt_0DCB
	br label %.Lt_0DCB
.Lt_1130:

	; label .Lt_0DD0
	br label %.Lt_0DD0
.Lt_0DD0:

	; branchbop V < 48
	%vr21218 = load i64, i64* %V.103
	%vr21217 = icmp slt i64 %vr21218, 48
	br i1 %vr21217, label %.Lt_0DD2, label %.Lt_1131
.Lt_1131:

	; branchbop V > 63
	%vr21222 = load i64, i64* %V.103
	%vr21221 = icmp sgt i64 %vr21222, 63
	br i1 %vr21221, label %.Lt_0DD2, label %.Lt_1132
.Lt_1132:

	; label .Lt_0DD3
	br label %.Lt_0DD3
.Lt_0DD3:

	; bop V + -48
	%vr21226 = load i64, i64* %V.103
	%vr21225 = add i64 %vr21226, -48

	; bop vr21225 AND 15
	%vr21228 = and i64 %vr21225, 15

	; bop vr21228 * 17
	%vr21229 = mul i64 %vr21228, 17

	; bop vr21229 MOD 255
	%vr21230 = srem i64 %vr21229, 255

	; conv SYS_OFFSET => vr21232
	%vr21233 = load i32, i32* @SYS_OFFSET
	%vr21232 = sext i32 %vr21233 to i64

	; bop vr21232 + 8
	%vr21234 = add i64 %vr21232, 8
	%vr21235 = bitcast i64 %vr21234 to i64

	; call POKE64()
	; arg THIS
	%vr21236 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21235
	; arg vr21230
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21236, i64 %vr21235, i64 %vr21230 )

	; goto .Lt_0DCB
	br label %.Lt_0DCB
.Lt_1133:

	; label .Lt_0DD2
	br label %.Lt_0DD2
.Lt_0DD2:

	; bop V + -64
	%vr21240 = load i64, i64* %V.103
	%vr21239 = add i64 %vr21240, -64

	; bop vr21239 AND 15
	%vr21242 = and i64 %vr21239, 15

	; bop vr21242 * 17
	%vr21243 = mul i64 %vr21242, 17

	; bop vr21243 MOD 255
	%vr21244 = srem i64 %vr21243, 255

	; conv SYS_OFFSET => vr21246
	%vr21247 = load i32, i32* @SYS_OFFSET
	%vr21246 = sext i32 %vr21247 to i64

	; bop vr21246 + 9
	%vr21248 = add i64 %vr21246, 9
	%vr21249 = bitcast i64 %vr21248 to i64

	; call POKE64()
	; arg THIS
	%vr21250 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21249
	; arg vr21244
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21250, i64 %vr21249, i64 %vr21244 )

	; label .Lt_0DD4
	br label %.Lt_0DD4
.Lt_0DD4:

	; label .Lt_0DCB
	br label %.Lt_0DCB
.Lt_0DCB:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1134:

	; label .Lt_0DC9
	br label %.Lt_0DC9
.Lt_0DC9:

	; conv SYS_OFFSET => vr21253
	%vr21254 = load i32, i32* @SYS_OFFSET
	%vr21253 = sext i32 %vr21254 to i64

	; bop vr21253 + 238
	%vr21255 = add i64 %vr21253, 238
	%vr21256 = bitcast i64 %vr21255 to i64

	; branchbop ADR <> vr21256
	%vr21258 = load i64, i64* %ADR.102
	%vr21257 = icmp ne i64 %vr21258, %vr21256
	br i1 %vr21257, label %.Lt_0DD5, label %.Lt_1135
.Lt_1135:

	; label .Lt_0DD6
	br label %.Lt_0DD6
.Lt_0DD6:

	; conv SYS_OFFSET => vr21260
	%vr21261 = load i32, i32* @SYS_OFFSET
	%vr21260 = sext i32 %vr21261 to i64

	; bop vr21260 SHL 3
	%vr21262 = shl i64 %vr21260, 3

	; bop THIS + vr21262
	%vr21264 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21265 = inttoptr i64 %vr21262 to %MEMORY_T*
	%vr21263 = add %MEMORY_T* %vr21264, %vr21265

	; conv vr21263+1608 => vr21266
	%vr21268 = ptrtoint %MEMORY_T* %vr21263 to i64
	%vr21269 = add i64 %vr21268, 1608
	%vr21270 = inttoptr i64 %vr21269 to double*
	%vr21271 = load double, double* %vr21270
	%vr21267 = call double @llvm.nearbyint.f64(double %vr21271)
	%vr21266 = fptoui double %vr21267 to i32

	; conv SYS_OFFSET => vr21272
	%vr21273 = load i32, i32* @SYS_OFFSET
	%vr21272 = sext i32 %vr21273 to i64

	; bop vr21272 SHL 3
	%vr21274 = shl i64 %vr21272, 3

	; bop THIS + vr21274
	%vr21276 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21277 = inttoptr i64 %vr21274 to %MEMORY_T*
	%vr21275 = add %MEMORY_T* %vr21276, %vr21277

	; conv vr21275+1656 => vr21278
	%vr21279 = ptrtoint %MEMORY_T* %vr21275 to i64
	%vr21280 = add i64 %vr21279, 1656
	%vr21281 = inttoptr i64 %vr21280 to double*
	%vr21282 = load double, double* %vr21281
	%vr21278 = fptrunc double %vr21282 to float

	; conv SYS_OFFSET => vr21283
	%vr21284 = load i32, i32* @SYS_OFFSET
	%vr21283 = sext i32 %vr21284 to i64

	; bop vr21283 SHL 3
	%vr21285 = shl i64 %vr21283, 3

	; bop THIS + vr21285
	%vr21287 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21288 = inttoptr i64 %vr21285 to %MEMORY_T*
	%vr21286 = add %MEMORY_T* %vr21287, %vr21288

	; conv vr21286+1648 => vr21289
	%vr21290 = ptrtoint %MEMORY_T* %vr21286 to i64
	%vr21291 = add i64 %vr21290, 1648
	%vr21292 = inttoptr i64 %vr21291 to double*
	%vr21293 = load double, double* %vr21292
	%vr21289 = fptrunc double %vr21293 to float

	; conv SYS_OFFSET => vr21294
	%vr21295 = load i32, i32* @SYS_OFFSET
	%vr21294 = sext i32 %vr21295 to i64

	; bop vr21294 SHL 3
	%vr21296 = shl i64 %vr21294, 3

	; bop THIS + vr21296
	%vr21298 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21299 = inttoptr i64 %vr21296 to %MEMORY_T*
	%vr21297 = add %MEMORY_T* %vr21298, %vr21299

	; conv vr21297+1632 => vr21300
	%vr21301 = ptrtoint %MEMORY_T* %vr21297 to i64
	%vr21302 = add i64 %vr21301, 1632
	%vr21303 = inttoptr i64 %vr21302 to double*
	%vr21304 = load double, double* %vr21303
	%vr21300 = fptrunc double %vr21304 to float

	; conv SYS_OFFSET => vr21305
	%vr21306 = load i32, i32* @SYS_OFFSET
	%vr21305 = sext i32 %vr21306 to i64

	; bop vr21305 SHL 3
	%vr21307 = shl i64 %vr21305, 3

	; bop THIS + vr21307
	%vr21309 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21310 = inttoptr i64 %vr21307 to %MEMORY_T*
	%vr21308 = add %MEMORY_T* %vr21309, %vr21310

	; conv vr21308+1624 => vr21311
	%vr21312 = ptrtoint %MEMORY_T* %vr21308 to i64
	%vr21313 = add i64 %vr21312, 1624
	%vr21314 = inttoptr i64 %vr21313 to double*
	%vr21315 = load double, double* %vr21314
	%vr21311 = fptrunc double %vr21315 to float

	; call fb_GfxLine()
	; arg 0
	; arg vr21311
	; arg vr21300
	; arg vr21289
	; arg vr21278
	; arg vr21266
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr21311, float %vr21300, float %vr21289, float %vr21278, i32 %vr21266, i32 2, i32 65535, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1136:

	; label .Lt_0DD5
	br label %.Lt_0DD5
.Lt_0DD5:

	; conv SYS_OFFSET => vr21320
	%vr21321 = load i32, i32* @SYS_OFFSET
	%vr21320 = sext i32 %vr21321 to i64

	; bop vr21320 + 239
	%vr21322 = add i64 %vr21320, 239
	%vr21323 = bitcast i64 %vr21322 to i64

	; branchbop ADR <> vr21323
	%vr21325 = load i64, i64* %ADR.102
	%vr21324 = icmp ne i64 %vr21325, %vr21323
	br i1 %vr21324, label %.Lt_0DD7, label %.Lt_1137
.Lt_1137:

	; label .Lt_0DD8
	br label %.Lt_0DD8
.Lt_0DD8:

	; conv SYS_OFFSET => vr21327
	%vr21328 = load i32, i32* @SYS_OFFSET
	%vr21327 = sext i32 %vr21328 to i64

	; bop vr21327 SHL 3
	%vr21329 = shl i64 %vr21327, 3

	; bop THIS + vr21329
	%vr21331 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21332 = inttoptr i64 %vr21329 to %MEMORY_T*
	%vr21330 = add %MEMORY_T* %vr21331, %vr21332

	; conv vr21330+1616 => vr21333
	%vr21335 = ptrtoint %MEMORY_T* %vr21330 to i64
	%vr21336 = add i64 %vr21335, 1616
	%vr21337 = inttoptr i64 %vr21336 to double*
	%vr21338 = load double, double* %vr21337
	%vr21334 = call double @llvm.nearbyint.f64(double %vr21338)
	%vr21333 = fptoui double %vr21334 to i32

	; conv SYS_OFFSET => vr21339
	%vr21340 = load i32, i32* @SYS_OFFSET
	%vr21339 = sext i32 %vr21340 to i64

	; bop vr21339 SHL 3
	%vr21341 = shl i64 %vr21339, 3

	; bop THIS + vr21341
	%vr21343 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21344 = inttoptr i64 %vr21341 to %MEMORY_T*
	%vr21342 = add %MEMORY_T* %vr21343, %vr21344

	; conv vr21342+1656 => vr21345
	%vr21346 = ptrtoint %MEMORY_T* %vr21342 to i64
	%vr21347 = add i64 %vr21346, 1656
	%vr21348 = inttoptr i64 %vr21347 to double*
	%vr21349 = load double, double* %vr21348
	%vr21345 = fptrunc double %vr21349 to float

	; conv SYS_OFFSET => vr21350
	%vr21351 = load i32, i32* @SYS_OFFSET
	%vr21350 = sext i32 %vr21351 to i64

	; bop vr21350 SHL 3
	%vr21352 = shl i64 %vr21350, 3

	; bop THIS + vr21352
	%vr21354 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21355 = inttoptr i64 %vr21352 to %MEMORY_T*
	%vr21353 = add %MEMORY_T* %vr21354, %vr21355

	; conv vr21353+1648 => vr21356
	%vr21357 = ptrtoint %MEMORY_T* %vr21353 to i64
	%vr21358 = add i64 %vr21357, 1648
	%vr21359 = inttoptr i64 %vr21358 to double*
	%vr21360 = load double, double* %vr21359
	%vr21356 = fptrunc double %vr21360 to float

	; conv SYS_OFFSET => vr21361
	%vr21362 = load i32, i32* @SYS_OFFSET
	%vr21361 = sext i32 %vr21362 to i64

	; bop vr21361 SHL 3
	%vr21363 = shl i64 %vr21361, 3

	; bop THIS + vr21363
	%vr21365 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21366 = inttoptr i64 %vr21363 to %MEMORY_T*
	%vr21364 = add %MEMORY_T* %vr21365, %vr21366

	; conv vr21364+1632 => vr21367
	%vr21368 = ptrtoint %MEMORY_T* %vr21364 to i64
	%vr21369 = add i64 %vr21368, 1632
	%vr21370 = inttoptr i64 %vr21369 to double*
	%vr21371 = load double, double* %vr21370
	%vr21367 = fptrunc double %vr21371 to float

	; conv SYS_OFFSET => vr21372
	%vr21373 = load i32, i32* @SYS_OFFSET
	%vr21372 = sext i32 %vr21373 to i64

	; bop vr21372 SHL 3
	%vr21374 = shl i64 %vr21372, 3

	; bop THIS + vr21374
	%vr21376 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21377 = inttoptr i64 %vr21374 to %MEMORY_T*
	%vr21375 = add %MEMORY_T* %vr21376, %vr21377

	; conv vr21375+1624 => vr21378
	%vr21379 = ptrtoint %MEMORY_T* %vr21375 to i64
	%vr21380 = add i64 %vr21379, 1624
	%vr21381 = inttoptr i64 %vr21380 to double*
	%vr21382 = load double, double* %vr21381
	%vr21378 = fptrunc double %vr21382 to float

	; call fb_GfxLine()
	; arg 0
	; arg vr21378
	; arg vr21367
	; arg vr21356
	; arg vr21345
	; arg vr21333
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr21378, float %vr21367, float %vr21356, float %vr21345, i32 %vr21333, i32 2, i32 65535, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1138:

	; label .Lt_0DD7
	br label %.Lt_0DD7
.Lt_0DD7:

	; conv SYS_OFFSET => vr21387
	%vr21388 = load i32, i32* @SYS_OFFSET
	%vr21387 = sext i32 %vr21388 to i64

	; bop vr21387 + 240
	%vr21389 = add i64 %vr21387, 240
	%vr21390 = bitcast i64 %vr21389 to i64

	; branchbop ADR <> vr21390
	%vr21392 = load i64, i64* %ADR.102
	%vr21391 = icmp ne i64 %vr21392, %vr21390
	br i1 %vr21391, label %.Lt_0DD9, label %.Lt_1139
.Lt_1139:

	; label .Lt_0DDA
	br label %.Lt_0DDA
.Lt_0DDA:

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr21394 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr21400 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_Chain()
	; arg vr21400
	%vr21401 = call i32 @fb_Chain( %FBSTRING* %vr21400 )
	%vr21402 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21403 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21403
	; arg -1
	; arg vr21402
	; arg 1
	; arg 0
	%vr21404 = call %FBSTRING* @fb_StrAssign( i8* %vr21403, i64 -1, i8* %vr21402, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr21408 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr21417 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr21416 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21417, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr21419 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr21420 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr21416
	%vr21423 = bitcast %FBSTRING* %vr21416 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr21419, float %vr21420, i32 4278190080, i32 0, %FBSTRING* %vr21423, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store i32 0, i32* @OFFSET

	; label .Lt_0DDE
	br label %.Lt_0DDE
.Lt_0DDE:

	; conv SYS_OFFSET => vr21426
	%vr21427 = load i32, i32* @SYS_OFFSET
	%vr21426 = sext i32 %vr21427 to i64

	; bop vr21426 SHL 3
	%vr21428 = shl i64 %vr21426, 3

	; bop THIS + vr21428
	%vr21430 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21431 = inttoptr i64 %vr21428 to %MEMORY_T*
	%vr21429 = add %MEMORY_T* %vr21430, %vr21431

	; conv OFFSET => vr21432
	%vr21433 = load i32, i32* @OFFSET
	%vr21432 = sext i32 %vr21433 to i64

	; conv vr21432 => vr21434
	%vr21434 = sitofp i64 %vr21432 to double

	; bop vr21429+2392 + vr21434
	%vr21436 = ptrtoint %MEMORY_T* %vr21429 to i64
	%vr21437 = add i64 %vr21436, 2392
	%vr21438 = inttoptr i64 %vr21437 to double*
	%vr21439 = load double, double* %vr21438
	%vr21435 = fadd double %vr21439, %vr21434

	; conv vr21435 => vr21440
	%vr21441 = call double @llvm.nearbyint.f64(double %vr21435)
	%vr21440 = fptoui double %vr21441 to i64

	; call POKE64()
	; arg THIS
	%vr21442 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21440
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21442, i64 %vr21440, i64 32 )

	; label .Lt_0DDC
	br label %.Lt_0DDC
.Lt_0DDC:

	; conv OFFSET => vr21443
	%vr21444 = load i32, i32* @OFFSET
	%vr21443 = sext i32 %vr21444 to i64

	; bop vr21443 + 1
	%vr21445 = add i64 %vr21443, 1

	; conv vr21445 => vr21446
	%vr21446 = trunc i64 %vr21445 to i32

	; store OFFSET := vr21446
	store i32 %vr21446, i32* @OFFSET

	; label .Lt_0DDB
	br label %.Lt_0DDB
.Lt_0DDB:

	; conv OFFSET => vr21447
	%vr21448 = load i32, i32* @OFFSET
	%vr21447 = sext i32 %vr21448 to i64

	; branchbop vr21447 <= 1024
	%vr21449 = icmp sle i64 %vr21447, 1024
	br i1 %vr21449, label %.Lt_0DDE, label %.Lt_113A
.Lt_113A:

	; label .Lt_0DDD
	br label %.Lt_0DDD
.Lt_0DDD:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_113B:

	; label .Lt_0DD9
	br label %.Lt_0DD9
.Lt_0DD9:

	; conv SYS_OFFSET => vr21451
	%vr21452 = load i32, i32* @SYS_OFFSET
	%vr21451 = sext i32 %vr21452 to i64

	; bop vr21451 + 241
	%vr21453 = add i64 %vr21451, 241
	%vr21454 = bitcast i64 %vr21453 to i64

	; branchbop ADR <> vr21454
	%vr21456 = load i64, i64* %ADR.102
	%vr21455 = icmp ne i64 %vr21456, %vr21454
	br i1 %vr21455, label %.Lt_0DDF, label %.Lt_113C
.Lt_113C:

	; label .Lt_0DE0
	br label %.Lt_0DE0
.Lt_0DE0:

	; localvar LT_0DE2
	%LT_0DE2.179 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr21458 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr21464 = bitcast %FBSTRING* @STRCODE to i8*
	%vr21465 = bitcast i8* bitcast ([6 x i8]* @Lt_0DE1 to i8*) to i8*

	; addrof LT_0DE2

	; memclear LT_0DE2
	%vr21467 = bitcast %FBSTRING* %LT_0DE2.179 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21467, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DE2

	; call fb_StrConcat()
	; arg LT_0DE2
	; arg vr21465
	; arg 6
	; arg vr21464
	; arg -1
	%vr21469 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DE2.179, i8* %vr21465, i64 6, i8* %vr21464, i64 -1 )

	; call fb_Shell()
	; arg vr21469
	%vr21473 = bitcast %FBSTRING* %vr21469 to %FBSTRING*
	%vr21472 = call i32 @fb_Shell( %FBSTRING* %vr21473 )
	%vr21474 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21475 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21475
	; arg -1
	; arg vr21474
	; arg 1
	; arg 0
	%vr21476 = call %FBSTRING* @fb_StrAssign( i8* %vr21475, i64 -1, i8* %vr21474, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr21480 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr21489 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr21488 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21489, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr21491 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr21492 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr21488
	%vr21495 = bitcast %FBSTRING* %vr21488 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr21491, float %vr21492, i32 4278190080, i32 0, %FBSTRING* %vr21495, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store i32 0, i32* @OFFSET

	; label .Lt_0DE6
	br label %.Lt_0DE6
.Lt_0DE6:

	; conv SYS_OFFSET => vr21498
	%vr21499 = load i32, i32* @SYS_OFFSET
	%vr21498 = sext i32 %vr21499 to i64

	; bop vr21498 SHL 3
	%vr21500 = shl i64 %vr21498, 3

	; bop THIS + vr21500
	%vr21502 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21503 = inttoptr i64 %vr21500 to %MEMORY_T*
	%vr21501 = add %MEMORY_T* %vr21502, %vr21503

	; conv OFFSET => vr21504
	%vr21505 = load i32, i32* @OFFSET
	%vr21504 = sext i32 %vr21505 to i64

	; conv vr21504 => vr21506
	%vr21506 = sitofp i64 %vr21504 to double

	; bop vr21501+2392 + vr21506
	%vr21508 = ptrtoint %MEMORY_T* %vr21501 to i64
	%vr21509 = add i64 %vr21508, 2392
	%vr21510 = inttoptr i64 %vr21509 to double*
	%vr21511 = load double, double* %vr21510
	%vr21507 = fadd double %vr21511, %vr21506

	; conv vr21507 => vr21512
	%vr21513 = call double @llvm.nearbyint.f64(double %vr21507)
	%vr21512 = fptoui double %vr21513 to i64

	; call POKE64()
	; arg THIS
	%vr21514 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21512
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21514, i64 %vr21512, i64 32 )

	; label .Lt_0DE4
	br label %.Lt_0DE4
.Lt_0DE4:

	; conv OFFSET => vr21515
	%vr21516 = load i32, i32* @OFFSET
	%vr21515 = sext i32 %vr21516 to i64

	; bop vr21515 + 1
	%vr21517 = add i64 %vr21515, 1

	; conv vr21517 => vr21518
	%vr21518 = trunc i64 %vr21517 to i32

	; store OFFSET := vr21518
	store i32 %vr21518, i32* @OFFSET

	; label .Lt_0DE3
	br label %.Lt_0DE3
.Lt_0DE3:

	; conv OFFSET => vr21519
	%vr21520 = load i32, i32* @OFFSET
	%vr21519 = sext i32 %vr21520 to i64

	; branchbop vr21519 <= 1024
	%vr21521 = icmp sle i64 %vr21519, 1024
	br i1 %vr21521, label %.Lt_0DE6, label %.Lt_113D
.Lt_113D:

	; label .Lt_0DE5
	br label %.Lt_0DE5
.Lt_0DE5:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_113E:

	; label .Lt_0DDF
	br label %.Lt_0DDF
.Lt_0DDF:

	; conv SYS_OFFSET => vr21523
	%vr21524 = load i32, i32* @SYS_OFFSET
	%vr21523 = sext i32 %vr21524 to i64

	; bop vr21523 + 242
	%vr21525 = add i64 %vr21523, 242
	%vr21526 = bitcast i64 %vr21525 to i64

	; branchbop ADR <> vr21526
	%vr21528 = load i64, i64* %ADR.102
	%vr21527 = icmp ne i64 %vr21528, %vr21526
	br i1 %vr21527, label %.Lt_0DE7, label %.Lt_113F
.Lt_113F:

	; label .Lt_0DE8
	br label %.Lt_0DE8
.Lt_0DE8:

	; localvar LT_0DEB
	%LT_0DEB.180 = alloca %FBSTRING

	; localvar LT_0DEC
	%LT_0DEC.181 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr21530 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr21536 = bitcast i8* bitcast ([19 x i8]* @Lt_0DEA to i8*) to i8*
	%vr21537 = bitcast %FBSTRING* @STRCODE to i8*
	%vr21538 = bitcast i8* bitcast ([8 x i8]* @Lt_0DE9 to i8*) to i8*

	; addrof LT_0DEB

	; memclear LT_0DEB
	%vr21540 = bitcast %FBSTRING* %LT_0DEB.180 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21540, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DEB

	; call fb_StrConcat()
	; arg LT_0DEB
	; arg vr21538
	; arg 8
	; arg vr21537
	; arg -1
	%vr21542 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DEB.180, i8* %vr21538, i64 8, i8* %vr21537, i64 -1 )

	; addrof LT_0DEC

	; memclear LT_0DEC
	%vr21546 = bitcast %FBSTRING* %LT_0DEC.181 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21546, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DEC

	; call fb_StrConcat()
	; arg LT_0DEC
	; arg vr21542
	%vr21549 = bitcast %FBSTRING* %vr21542 to i8*
	; arg -1
	; arg vr21536
	; arg 19
	%vr21548 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DEC.181, i8* %vr21549, i64 -1, i8* %vr21536, i64 19 )

	; call fb_Shell()
	; arg vr21548
	%vr21553 = bitcast %FBSTRING* %vr21548 to %FBSTRING*
	%vr21552 = call i32 @fb_Shell( %FBSTRING* %vr21553 )
	%vr21554 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21555 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21555
	; arg -1
	; arg vr21554
	; arg 1
	; arg 0
	%vr21556 = call %FBSTRING* @fb_StrAssign( i8* %vr21555, i64 -1, i8* %vr21554, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr21560 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr21569 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr21568 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21569, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr21571 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr21572 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr21568
	%vr21575 = bitcast %FBSTRING* %vr21568 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr21571, float %vr21572, i32 4278190080, i32 0, %FBSTRING* %vr21575, i32 0, i32 1073741828 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1140:

	; label .Lt_0DE7
	br label %.Lt_0DE7
.Lt_0DE7:

	; conv SYS_OFFSET => vr21579
	%vr21580 = load i32, i32* @SYS_OFFSET
	%vr21579 = sext i32 %vr21580 to i64

	; bop vr21579 + 243
	%vr21581 = add i64 %vr21579, 243
	%vr21582 = bitcast i64 %vr21581 to i64

	; branchbop ADR <> vr21582
	%vr21584 = load i64, i64* %ADR.102
	%vr21583 = icmp ne i64 %vr21584, %vr21582
	br i1 %vr21583, label %.Lt_0DED, label %.Lt_1141
.Lt_1141:

	; label .Lt_0DEE
	br label %.Lt_0DEE
.Lt_0DEE:

	; localvar LT_0DF0
	%LT_0DF0.182 = alloca %FBSTRING
	%vr21586 = bitcast i8* bitcast ([5 x i8]* @Lt_0DEF to i8*) to i8*
	%vr21587 = bitcast %FBSTRING* @STRCODE to i8*

	; addrof LT_0DF0

	; memclear LT_0DF0
	%vr21589 = bitcast %FBSTRING* %LT_0DF0.182 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21589, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DF0

	; call fb_StrConcat()
	; arg LT_0DF0
	; arg vr21587
	; arg -1
	; arg vr21586
	; arg 5
	%vr21591 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DF0.182, i8* %vr21587, i64 -1, i8* %vr21586, i64 5 )

	; call fb_FileOpen()
	; arg vr21591
	%vr21595 = bitcast %FBSTRING* %vr21591 to %FBSTRING*
	; arg 3
	; arg 0
	; arg 0
	; arg 1
	; arg 0
	%vr21594 = call i32 @fb_FileOpen( %FBSTRING* %vr21595, i32 3, i32 0, i32 0, i32 1, i32 0 )
	%vr21601 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21602 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21602
	; arg -1
	; arg vr21601
	; arg 1
	; arg 0
	%vr21603 = call %FBSTRING* @fb_StrAssign( i8* %vr21602, i64 -1, i8* %vr21601, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1142:

	; label .Lt_0DED
	br label %.Lt_0DED
.Lt_0DED:

	; conv SYS_OFFSET => vr21608
	%vr21609 = load i32, i32* @SYS_OFFSET
	%vr21608 = sext i32 %vr21609 to i64

	; bop vr21608 + 244
	%vr21610 = add i64 %vr21608, 244
	%vr21611 = bitcast i64 %vr21610 to i64

	; branchbop ADR <> vr21611
	%vr21613 = load i64, i64* %ADR.102
	%vr21612 = icmp ne i64 %vr21613, %vr21611
	br i1 %vr21612, label %.Lt_0DF1, label %.Lt_1143
.Lt_1143:

	; label .Lt_0DF2
	br label %.Lt_0DF2
.Lt_0DF2:
	%vr21615 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_PrintString()
	; arg 1
	; arg vr21615
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21615, i32 1 )
	%vr21618 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21619 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21619
	; arg -1
	; arg vr21618
	; arg 1
	; arg 0
	%vr21620 = call %FBSTRING* @fb_StrAssign( i8* %vr21619, i64 -1, i8* %vr21618, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1144:

	; label .Lt_0DF1
	br label %.Lt_0DF1
.Lt_0DF1:

	; conv SYS_OFFSET => vr21625
	%vr21626 = load i32, i32* @SYS_OFFSET
	%vr21625 = sext i32 %vr21626 to i64

	; bop vr21625 + 245
	%vr21627 = add i64 %vr21625, 245
	%vr21628 = bitcast i64 %vr21627 to i64

	; branchbop ADR <> vr21628
	%vr21630 = load i64, i64* %ADR.102
	%vr21629 = icmp ne i64 %vr21630, %vr21628
	br i1 %vr21629, label %.Lt_0DF3, label %.Lt_1145
.Lt_1145:

	; label .Lt_0DF4
	br label %.Lt_0DF4
.Lt_0DF4:

	; call fb_FileClose()
	; arg 1
	%vr21632 = call i32 @fb_FileClose( i32 1 )
	%vr21634 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21635 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21635
	; arg -1
	; arg vr21634
	; arg 1
	; arg 0
	%vr21636 = call %FBSTRING* @fb_StrAssign( i8* %vr21635, i64 -1, i8* %vr21634, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1146:

	; label .Lt_0DF3
	br label %.Lt_0DF3
.Lt_0DF3:

	; conv SYS_OFFSET => vr21641
	%vr21642 = load i32, i32* @SYS_OFFSET
	%vr21641 = sext i32 %vr21642 to i64

	; bop vr21641 + 246
	%vr21643 = add i64 %vr21641, 246
	%vr21644 = bitcast i64 %vr21643 to i64

	; branchbop ADR <> vr21644
	%vr21646 = load i64, i64* %ADR.102
	%vr21645 = icmp ne i64 %vr21646, %vr21644
	br i1 %vr21645, label %.Lt_0DF5, label %.Lt_1147
.Lt_1147:

	; label .Lt_0DF6
	br label %.Lt_0DF6
.Lt_0DF6:

	; localvar LT_0DFA
	%LT_0DFA.183 = alloca %FBSTRING

	; localvar LT_0DFB
	%LT_0DFB.184 = alloca %FBSTRING

	; localvar LT_0DFC
	%LT_0DFC.185 = alloca %FBSTRING

	; localvar LT_0DFD
	%LT_0DFD.186 = alloca %FBSTRING
	%vr21648 = bitcast i8* bitcast ([5 x i8]* @Lt_0DF9 to i8*) to i8*
	%vr21649 = bitcast %FBSTRING* @STRCODE to i8*
	%vr21650 = bitcast i8* bitcast ([13 x i8]* @Lt_0DF8 to i8*) to i8*
	%vr21651 = bitcast %FBSTRING* @STRCODE to i8*
	%vr21652 = bitcast i8* bitcast ([6 x i8]* @Lt_0DF7 to i8*) to i8*

	; addrof LT_0DFA

	; memclear LT_0DFA
	%vr21654 = bitcast %FBSTRING* %LT_0DFA.183 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21654, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DFA

	; call fb_StrConcat()
	; arg LT_0DFA
	; arg vr21652
	; arg 6
	; arg vr21651
	; arg -1
	%vr21656 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DFA.183, i8* %vr21652, i64 6, i8* %vr21651, i64 -1 )

	; addrof LT_0DFB

	; memclear LT_0DFB
	%vr21660 = bitcast %FBSTRING* %LT_0DFB.184 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21660, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DFB

	; call fb_StrConcat()
	; arg LT_0DFB
	; arg vr21656
	%vr21663 = bitcast %FBSTRING* %vr21656 to i8*
	; arg -1
	; arg vr21650
	; arg 13
	%vr21662 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DFB.184, i8* %vr21663, i64 -1, i8* %vr21650, i64 13 )

	; addrof LT_0DFC

	; memclear LT_0DFC
	%vr21667 = bitcast %FBSTRING* %LT_0DFC.185 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21667, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DFC

	; call fb_StrConcat()
	; arg LT_0DFC
	; arg vr21662
	%vr21670 = bitcast %FBSTRING* %vr21662 to i8*
	; arg -1
	; arg vr21649
	; arg -1
	%vr21669 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DFC.185, i8* %vr21670, i64 -1, i8* %vr21649, i64 -1 )

	; addrof LT_0DFD

	; memclear LT_0DFD
	%vr21674 = bitcast %FBSTRING* %LT_0DFD.186 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21674, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0DFD

	; call fb_StrConcat()
	; arg LT_0DFD
	; arg vr21669
	%vr21677 = bitcast %FBSTRING* %vr21669 to i8*
	; arg -1
	; arg vr21648
	; arg 5
	%vr21676 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0DFD.186, i8* %vr21677, i64 -1, i8* %vr21648, i64 5 )

	; call fb_Shell()
	; arg vr21676
	%vr21681 = bitcast %FBSTRING* %vr21676 to %FBSTRING*
	%vr21680 = call i32 @fb_Shell( %FBSTRING* %vr21681 )
	%vr21682 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21683 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21683
	; arg -1
	; arg vr21682
	; arg 1
	; arg 0
	%vr21684 = call %FBSTRING* @fb_StrAssign( i8* %vr21683, i64 -1, i8* %vr21682, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1148:

	; label .Lt_0DF5
	br label %.Lt_0DF5
.Lt_0DF5:

	; conv SYS_OFFSET => vr21689
	%vr21690 = load i32, i32* @SYS_OFFSET
	%vr21689 = sext i32 %vr21690 to i64

	; bop vr21689 + 247
	%vr21691 = add i64 %vr21689, 247
	%vr21692 = bitcast i64 %vr21691 to i64

	; branchbop ADR <> vr21692
	%vr21694 = load i64, i64* %ADR.102
	%vr21693 = icmp ne i64 %vr21694, %vr21692
	br i1 %vr21693, label %.Lt_0DFE, label %.Lt_1149
.Lt_1149:

	; label .Lt_0DFF
	br label %.Lt_0DFF
.Lt_0DFF:

	; localvar LT_0E03
	%LT_0E03.187 = alloca %FBSTRING

	; localvar LT_0E04
	%LT_0E04.188 = alloca %FBSTRING

	; localvar LT_0E05
	%LT_0E05.189 = alloca %FBSTRING

	; call fb_GfxScreen()
	; arg 0
	; arg 8
	; arg 0
	; arg 0
	; arg 0
	%vr21696 = call i32 @fb_GfxScreen( i32 0, i32 8, i32 0, i32 0, i32 0 )
	%vr21702 = bitcast i8* bitcast ([7 x i8]* @Lt_0E02 to i8*) to i8*
	%vr21703 = bitcast i8* bitcast ([2 x i8]* @Lt_0E01 to i8*) to i8*
	%vr21704 = bitcast %FBSTRING* @STRCODE to i8*
	%vr21705 = bitcast i8* bitcast ([29 x i8]* @Lt_0E00 to i8*) to i8*

	; addrof LT_0E03

	; memclear LT_0E03
	%vr21707 = bitcast %FBSTRING* %LT_0E03.187 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21707, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0E03

	; call fb_StrConcat()
	; arg LT_0E03
	; arg vr21705
	; arg 29
	; arg vr21704
	; arg -1
	%vr21709 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0E03.187, i8* %vr21705, i64 29, i8* %vr21704, i64 -1 )

	; addrof LT_0E04

	; memclear LT_0E04
	%vr21713 = bitcast %FBSTRING* %LT_0E04.188 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21713, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0E04

	; call fb_StrConcat()
	; arg LT_0E04
	; arg vr21709
	%vr21716 = bitcast %FBSTRING* %vr21709 to i8*
	; arg -1
	; arg vr21703
	; arg 2
	%vr21715 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0E04.188, i8* %vr21716, i64 -1, i8* %vr21703, i64 2 )

	; addrof LT_0E05

	; memclear LT_0E05
	%vr21720 = bitcast %FBSTRING* %LT_0E05.189 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21720, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_0E05

	; call fb_StrConcat()
	; arg LT_0E05
	; arg vr21715
	%vr21723 = bitcast %FBSTRING* %vr21715 to i8*
	; arg -1
	; arg vr21702
	; arg 7
	%vr21722 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_0E05.189, i8* %vr21723, i64 -1, i8* %vr21702, i64 7 )

	; call fb_Shell()
	; arg vr21722
	%vr21727 = bitcast %FBSTRING* %vr21722 to %FBSTRING*
	%vr21726 = call i32 @fb_Shell( %FBSTRING* %vr21727 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0E06
	%vr21729 = bitcast i8* bitcast ([11 x i8]* @Lt_0E06 to i8*) to i8*
	; arg 10
	%vr21728 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21729, i64 10 )

	; call fb_Shell()
	; arg vr21728
	%vr21732 = bitcast %FBSTRING* %vr21728 to %FBSTRING*
	%vr21731 = call i32 @fb_Shell( %FBSTRING* %vr21732 )
	%vr21733 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21734 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21734
	; arg -1
	; arg vr21733
	; arg 1
	; arg 0
	%vr21735 = call %FBSTRING* @fb_StrAssign( i8* %vr21734, i64 -1, i8* %vr21733, i64 1, i32 0 )

	; call fb_GfxScreenRes()
	; arg 1920
	; arg 1080
	; arg 32
	; arg 7
	; arg 65
	; arg 0
	%vr21739 = call i32 @fb_GfxScreenRes( i32 1920, i32 1080, i32 32, i32 7, i32 65, i32 0 )

	; call fb_Cls()
	; arg -65536
	call void @fb_Cls( i32 -65536 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_0000
	%vr21748 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	; arg 0
	%vr21747 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr21748, i64 0 )

	; call fb_GfxPaint()
	; arg 0
	; arg 0
	%vr21750 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr21751 = fpext float 0x0000000000000000 to float
	; arg 4278190080
	; arg 0
	; arg vr21747
	%vr21754 = bitcast %FBSTRING* %vr21747 to %FBSTRING*
	; arg 0
	; arg 1073741828
	call void @fb_GfxPaint( i8* 0, float %vr21750, float %vr21751, i32 4278190080, i32 0, %FBSTRING* %vr21754, i32 0, i32 1073741828 )

	; store OFFSET := 0
	store i32 0, i32* @OFFSET

	; label .Lt_0E0A
	br label %.Lt_0E0A
.Lt_0E0A:

	; conv SYS_OFFSET => vr21757
	%vr21758 = load i32, i32* @SYS_OFFSET
	%vr21757 = sext i32 %vr21758 to i64

	; bop vr21757 SHL 3
	%vr21759 = shl i64 %vr21757, 3

	; bop THIS + vr21759
	%vr21761 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21762 = inttoptr i64 %vr21759 to %MEMORY_T*
	%vr21760 = add %MEMORY_T* %vr21761, %vr21762

	; conv OFFSET => vr21763
	%vr21764 = load i32, i32* @OFFSET
	%vr21763 = sext i32 %vr21764 to i64

	; conv vr21763 => vr21765
	%vr21765 = sitofp i64 %vr21763 to double

	; bop vr21760+2392 + vr21765
	%vr21767 = ptrtoint %MEMORY_T* %vr21760 to i64
	%vr21768 = add i64 %vr21767, 2392
	%vr21769 = inttoptr i64 %vr21768 to double*
	%vr21770 = load double, double* %vr21769
	%vr21766 = fadd double %vr21770, %vr21765

	; conv vr21766 => vr21771
	%vr21772 = call double @llvm.nearbyint.f64(double %vr21766)
	%vr21771 = fptoui double %vr21772 to i64

	; call POKE64()
	; arg THIS
	%vr21773 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21771
	; arg 32
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21773, i64 %vr21771, i64 32 )

	; label .Lt_0E08
	br label %.Lt_0E08
.Lt_0E08:

	; conv OFFSET => vr21774
	%vr21775 = load i32, i32* @OFFSET
	%vr21774 = sext i32 %vr21775 to i64

	; bop vr21774 + 1
	%vr21776 = add i64 %vr21774, 1

	; conv vr21776 => vr21777
	%vr21777 = trunc i64 %vr21776 to i32

	; store OFFSET := vr21777
	store i32 %vr21777, i32* @OFFSET

	; label .Lt_0E07
	br label %.Lt_0E07
.Lt_0E07:

	; conv OFFSET => vr21778
	%vr21779 = load i32, i32* @OFFSET
	%vr21778 = sext i32 %vr21779 to i64

	; branchbop vr21778 <= 1024
	%vr21780 = icmp sle i64 %vr21778, 1024
	br i1 %vr21780, label %.Lt_0E0A, label %.Lt_114A
.Lt_114A:

	; label .Lt_0E09
	br label %.Lt_0E09
.Lt_0E09:

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_114B:

	; label .Lt_0DFE
	br label %.Lt_0DFE
.Lt_0DFE:

	; conv SYS_OFFSET => vr21782
	%vr21783 = load i32, i32* @SYS_OFFSET
	%vr21782 = sext i32 %vr21783 to i64

	; bop vr21782 + 248
	%vr21784 = add i64 %vr21782, 248
	%vr21785 = bitcast i64 %vr21784 to i64

	; branchbop ADR <> vr21785
	%vr21787 = load i64, i64* %ADR.102
	%vr21786 = icmp ne i64 %vr21787, %vr21785
	br i1 %vr21786, label %.Lt_0E0B, label %.Lt_114C
.Lt_114C:

	; label .Lt_0E0C
	br label %.Lt_0E0C
.Lt_0E0C:
	%vr21789 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_Shell()
	; arg vr21789
	%vr21790 = call i32 @fb_Shell( %FBSTRING* %vr21789 )
	%vr21791 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21792 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21792
	; arg -1
	; arg vr21791
	; arg 1
	; arg 0
	%vr21793 = call %FBSTRING* @fb_StrAssign( i8* %vr21792, i64 -1, i8* %vr21791, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_114D:

	; label .Lt_0E0B
	br label %.Lt_0E0B
.Lt_0E0B:

	; conv SYS_OFFSET => vr21798
	%vr21799 = load i32, i32* @SYS_OFFSET
	%vr21798 = sext i32 %vr21799 to i64

	; bop vr21798 + 249
	%vr21800 = add i64 %vr21798, 249
	%vr21801 = bitcast i64 %vr21800 to i64

	; branchbop ADR <> vr21801
	%vr21803 = load i64, i64* %ADR.102
	%vr21802 = icmp ne i64 %vr21803, %vr21801
	br i1 %vr21802, label %.Lt_0E0D, label %.Lt_114E
.Lt_114E:

	; label .Lt_0E0E
	br label %.Lt_0E0E
.Lt_0E0E:

	; conv V => vr21805
	%vr21806 = load i64, i64* %V.103
	%vr21805 = uitofp i64 %vr21806 to double

	; store SWCH := vr21805
	store double %vr21805, double* @SWCH

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_114F:

	; label .Lt_0E0D
	br label %.Lt_0E0D
.Lt_0E0D:

	; conv SYS_OFFSET => vr21808
	%vr21809 = load i32, i32* @SYS_OFFSET
	%vr21808 = sext i32 %vr21809 to i64

	; bop vr21808 + 250
	%vr21810 = add i64 %vr21808, 250
	%vr21811 = bitcast i64 %vr21810 to i64

	; branchbop ADR <> vr21811
	%vr21813 = load i64, i64* %ADR.102
	%vr21812 = icmp ne i64 %vr21813, %vr21811
	br i1 %vr21812, label %.Lt_0E0F, label %.Lt_1150
.Lt_1150:

	; label .Lt_0E10
	br label %.Lt_0E10
.Lt_0E10:
	%vr21816 = load i64, i64* %V.103
	%vr21815 = bitcast i64 %vr21816 to i64

	; call fb_CHR()
	; arg 1
	; arg vr21815
	%vr21819 = inttoptr i64 %vr21815 to i8*
	%vr21817 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr21819 )

	; call fb_StrLcase2()
	; arg vr21817
	%vr21821 = bitcast %FBSTRING* %vr21817 to %FBSTRING*
	; arg 0
	%vr21820 = call %FBSTRING* @fb_StrLcase2( %FBSTRING* %vr21821, i32 0 )
	%vr21823 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrConcatAssign()
	; arg vr21823
	; arg -1
	; arg vr21820
	%vr21826 = bitcast %FBSTRING* %vr21820 to i8*
	; arg -1
	; arg 0
	%vr21824 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr21823, i64 -1, i8* %vr21826, i64 -1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1151:

	; label .Lt_0E0F
	br label %.Lt_0E0F
.Lt_0E0F:

	; conv SYS_OFFSET => vr21830
	%vr21831 = load i32, i32* @SYS_OFFSET
	%vr21830 = sext i32 %vr21831 to i64

	; bop vr21830 + 251
	%vr21832 = add i64 %vr21830, 251
	%vr21833 = bitcast i64 %vr21832 to i64

	; branchbop ADR <> vr21833
	%vr21835 = load i64, i64* %ADR.102
	%vr21834 = icmp ne i64 %vr21835, %vr21833
	br i1 %vr21834, label %.Lt_0E11, label %.Lt_1152
.Lt_1152:

	; label .Lt_0E12
	br label %.Lt_0E12
.Lt_0E12:
	%vr21837 = bitcast %FBSTRING* @STRCODE to %FBSTRING*

	; call fb_PrintString()
	; arg 1
	; arg vr21837
	; arg 1
	call void @fb_PrintString( i32 1, %FBSTRING* %vr21837, i32 1 )
	%vr21840 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21841 = bitcast %FBSTRING* @STRCODE to i8*

	; call fb_StrAssign()
	; arg vr21841
	; arg -1
	; arg vr21840
	; arg 1
	; arg 0
	%vr21842 = call %FBSTRING* @fb_StrAssign( i8* %vr21841, i64 -1, i8* %vr21840, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1153:

	; label .Lt_0E11
	br label %.Lt_0E11
.Lt_0E11:

	; conv SYS_OFFSET => vr21847
	%vr21848 = load i32, i32* @SYS_OFFSET
	%vr21847 = sext i32 %vr21848 to i64

	; bop vr21847 + 252
	%vr21849 = add i64 %vr21847, 252
	%vr21850 = bitcast i64 %vr21849 to i64

	; branchbop ADR <> vr21850
	%vr21852 = load i64, i64* %ADR.102
	%vr21851 = icmp ne i64 %vr21852, %vr21850
	br i1 %vr21851, label %.Lt_0E13, label %.Lt_1154
.Lt_1154:

	; label .Lt_0E14
	br label %.Lt_0E14
.Lt_0E14:

	; conv SYS_OFFSET => vr21854
	%vr21855 = load i32, i32* @SYS_OFFSET
	%vr21854 = sext i32 %vr21855 to i64

	; bop vr21854 SHL 3
	%vr21856 = shl i64 %vr21854, 3

	; bop THIS + vr21856
	%vr21858 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21859 = inttoptr i64 %vr21856 to %MEMORY_T*
	%vr21857 = add %MEMORY_T* %vr21858, %vr21859

	; conv vr21857+1608 => vr21860
	%vr21862 = ptrtoint %MEMORY_T* %vr21857 to i64
	%vr21863 = add i64 %vr21862, 1608
	%vr21864 = inttoptr i64 %vr21863 to double*
	%vr21865 = load double, double* %vr21864
	%vr21861 = call double @llvm.nearbyint.f64(double %vr21865)
	%vr21860 = fptoui double %vr21861 to i32
	%vr21867 = load i64, i64* %V.103
	%vr21866 = bitcast i64 %vr21867 to i64

	; call fb_CHR()
	; arg 1
	; arg vr21866
	%vr21870 = inttoptr i64 %vr21866 to i8*
	%vr21868 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr21870 )

	; conv SYS_OFFSET => vr21871
	%vr21872 = load i32, i32* @SYS_OFFSET
	%vr21871 = sext i32 %vr21872 to i64

	; bop vr21871 SHL 3
	%vr21873 = shl i64 %vr21871, 3

	; bop THIS + vr21873
	%vr21875 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21876 = inttoptr i64 %vr21873 to %MEMORY_T*
	%vr21874 = add %MEMORY_T* %vr21875, %vr21876

	; conv vr21874+1632 => vr21877
	%vr21878 = ptrtoint %MEMORY_T* %vr21874 to i64
	%vr21879 = add i64 %vr21878, 1632
	%vr21880 = inttoptr i64 %vr21879 to double*
	%vr21881 = load double, double* %vr21880
	%vr21877 = fptrunc double %vr21881 to float

	; conv SYS_OFFSET => vr21882
	%vr21883 = load i32, i32* @SYS_OFFSET
	%vr21882 = sext i32 %vr21883 to i64

	; bop vr21882 SHL 3
	%vr21884 = shl i64 %vr21882, 3

	; bop THIS + vr21884
	%vr21886 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21887 = inttoptr i64 %vr21884 to %MEMORY_T*
	%vr21885 = add %MEMORY_T* %vr21886, %vr21887

	; conv vr21885+1624 => vr21888
	%vr21889 = ptrtoint %MEMORY_T* %vr21885 to i64
	%vr21890 = add i64 %vr21889, 1624
	%vr21891 = inttoptr i64 %vr21890 to double*
	%vr21892 = load double, double* %vr21891
	%vr21888 = fptrunc double %vr21892 to float

	; call fb_GfxDrawString()
	; arg 0
	; arg vr21888
	; arg vr21877
	; arg 4
	; arg vr21868
	%vr21895 = bitcast %FBSTRING* %vr21868 to %FBSTRING*
	; arg vr21860
	; arg 0
	%vr21896 = bitcast i8* 0 to i8*
	; arg 0
	; arg 0
	; arg 0
	; arg 0
	%vr21893 = call i64 @fb_GfxDrawString( i8* 0, float %vr21888, float %vr21877, i32 4, %FBSTRING* %vr21895, i32 %vr21860, i8* %vr21896, i32 0, i8* 0, i8* 0, i8* 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1155:

	; label .Lt_0E13
	br label %.Lt_0E13
.Lt_0E13:

	; conv SYS_OFFSET => vr21899
	%vr21900 = load i32, i32* @SYS_OFFSET
	%vr21899 = sext i32 %vr21900 to i64

	; bop vr21899 + 253
	%vr21901 = add i64 %vr21899, 253
	%vr21902 = bitcast i64 %vr21901 to i64

	; branchbop ADR <> vr21902
	%vr21904 = load i64, i64* %ADR.102
	%vr21903 = icmp ne i64 %vr21904, %vr21902
	br i1 %vr21903, label %.Lt_0E15, label %.Lt_1156
.Lt_1156:

	; label .Lt_0E16
	br label %.Lt_0E16
.Lt_0E16:

	; call fb_FileClose()
	; arg 1
	%vr21906 = call i32 @fb_FileClose( i32 1 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1157:

	; label .Lt_0E15
	br label %.Lt_0E15
.Lt_0E15:

	; conv SYS_OFFSET => vr21909
	%vr21910 = load i32, i32* @SYS_OFFSET
	%vr21909 = sext i32 %vr21910 to i64

	; bop vr21909 + 254
	%vr21911 = add i64 %vr21909, 254
	%vr21912 = bitcast i64 %vr21911 to i64

	; branchbop ADR <> vr21912
	%vr21914 = load i64, i64* %ADR.102
	%vr21913 = icmp ne i64 %vr21914, %vr21912
	br i1 %vr21913, label %.Lt_0E17, label %.Lt_1158
.Lt_1158:

	; label .Lt_0E18
	br label %.Lt_0E18
.Lt_0E18:
	%vr21917 = load i64, i64* %V.103
	%vr21916 = bitcast i64 %vr21917 to i64

	; call fb_CHR()
	; arg 1
	; arg vr21916
	%vr21920 = inttoptr i64 %vr21916 to i8*
	%vr21918 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr21920 )

	; call fb_StrLcase2()
	; arg vr21918
	%vr21922 = bitcast %FBSTRING* %vr21918 to %FBSTRING*
	; arg 0
	%vr21921 = call %FBSTRING* @fb_StrLcase2( %FBSTRING* %vr21922, i32 0 )
	%vr21924 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrConcatAssign()
	; arg vr21924
	; arg -1
	; arg vr21921
	%vr21927 = bitcast %FBSTRING* %vr21921 to i8*
	; arg -1
	; arg 0
	%vr21925 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr21924, i64 -1, i8* %vr21927, i64 -1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_1159:

	; label .Lt_0E17
	br label %.Lt_0E17
.Lt_0E17:

	; conv SYS_OFFSET => vr21931
	%vr21932 = load i32, i32* @SYS_OFFSET
	%vr21931 = sext i32 %vr21932 to i64

	; bop vr21931 + 255
	%vr21933 = add i64 %vr21931, 255
	%vr21934 = bitcast i64 %vr21933 to i64

	; branchbop ADR <> vr21934
	%vr21936 = load i64, i64* %ADR.102
	%vr21935 = icmp ne i64 %vr21936, %vr21934
	br i1 %vr21935, label %.Lt_0E19, label %.Lt_115A
.Lt_115A:

	; label .Lt_0E1A
	br label %.Lt_0E1A
.Lt_0E1A:

	; conv SYS_OFFSET => vr21938
	%vr21939 = load i32, i32* @SYS_OFFSET
	%vr21938 = sext i32 %vr21939 to i64

	; bop vr21938 + 161
	%vr21940 = add i64 %vr21938, 161
	%vr21941 = bitcast i64 %vr21940 to i64

	; call POKE64()
	; arg THIS
	%vr21942 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr21941
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr21942, i64 %vr21941, i64 0 )
	%vr21943 = bitcast i8* bitcast ([1 x i8]* @Lt_0000 to i8*) to i8*
	%vr21944 = bitcast %FBSTRING* @FILENAME to i8*

	; call fb_StrAssign()
	; arg vr21944
	; arg -1
	; arg vr21943
	; arg 1
	; arg 0
	%vr21945 = call %FBSTRING* @fb_StrAssign( i8* %vr21944, i64 -1, i8* %vr21943, i64 1, i32 0 )

	; goto .Lt_04C7
	br label %.Lt_04C7
.Lt_115B:

	; label .Lt_0E19
	br label %.Lt_0E19
.Lt_0E19:

	; conv ADR => vr21950
	%vr21951 = load i64, i64* %ADR.102
	%vr21950 = uitofp i64 %vr21951 to double

	; conv SYS_OFFSET => vr21952
	%vr21953 = load i32, i32* @SYS_OFFSET
	%vr21952 = sext i32 %vr21953 to i64

	; bop vr21952 SHL 3
	%vr21954 = shl i64 %vr21952, 3

	; bop THIS + vr21954
	%vr21956 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21957 = inttoptr i64 %vr21954 to %MEMORY_T*
	%vr21955 = add %MEMORY_T* %vr21956, %vr21957

	; branchbop vr21950 < vr21955+2392
	%vr21959 = ptrtoint %MEMORY_T* %vr21955 to i64
	%vr21960 = add i64 %vr21959, 2392
	%vr21961 = inttoptr i64 %vr21960 to double*
	%vr21962 = load double, double* %vr21961
	%vr21958 = icmp slt double %vr21950, %vr21962
	br i1 %vr21958, label %.Lt_0E1B, label %.Lt_115C
.Lt_115C:

	; conv ADR => vr21964
	%vr21965 = load i64, i64* %ADR.102
	%vr21964 = uitofp i64 %vr21965 to double

	; conv SYS_OFFSET => vr21966
	%vr21967 = load i32, i32* @SYS_OFFSET
	%vr21966 = sext i32 %vr21967 to i64

	; bop vr21966 SHL 3
	%vr21968 = shl i64 %vr21966, 3

	; bop THIS + vr21968
	%vr21970 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21971 = inttoptr i64 %vr21968 to %MEMORY_T*
	%vr21969 = add %MEMORY_T* %vr21970, %vr21971

	; bop vr21969+2392 + 1023
	%vr21973 = ptrtoint %MEMORY_T* %vr21969 to i64
	%vr21974 = add i64 %vr21973, 2392
	%vr21975 = inttoptr i64 %vr21974 to double*
	%vr21976 = load double, double* %vr21975
	%vr21972 = fadd double %vr21976, 0x408FF80000000000

	; branchbop vr21964 > vr21972
	%vr21977 = icmp sgt double %vr21964, %vr21972
	br i1 %vr21977, label %.Lt_0E1B, label %.Lt_115D
.Lt_115D:

	; label .Lt_0E1C
	br label %.Lt_0E1C
.Lt_0E1C:

	; localvar B
	%B.190 = alloca i64

	; localvar C
	%C.191 = alloca i64

	; localvar XS
	%XS.192 = alloca i64

	; localvar YS
	%YS.193 = alloca i64

	; conv ADR => vr21979
	%vr21980 = load i64, i64* %ADR.102
	%vr21979 = uitofp i64 %vr21980 to double

	; conv SYS_OFFSET => vr21981
	%vr21982 = load i32, i32* @SYS_OFFSET
	%vr21981 = sext i32 %vr21982 to i64

	; bop vr21981 SHL 3
	%vr21983 = shl i64 %vr21981, 3

	; bop THIS + vr21983
	%vr21985 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr21986 = inttoptr i64 %vr21983 to %MEMORY_T*
	%vr21984 = add %MEMORY_T* %vr21985, %vr21986

	; bop vr21979 - vr21984+2392
	%vr21988 = ptrtoint %MEMORY_T* %vr21984 to i64
	%vr21989 = add i64 %vr21988, 2392
	%vr21990 = inttoptr i64 %vr21989 to double*
	%vr21991 = load double, double* %vr21990
	%vr21987 = fsub double %vr21979, %vr21991

	; conv vr21987 => vr21992
	%vr21993 = call double @llvm.nearbyint.f64(double %vr21987)
	%vr21992 = fptoui double %vr21993 to i64

	; store ADR := vr21992
	store i64 %vr21992, i64* %ADR.102

	; addrof B

	; memclear B
	%vr21995 = bitcast i64* %B.190 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21995, i8 0, i32 8, i32 1, i1 false )
	%vr21997 = load i64, i64* %V.103
	%vr21996 = bitcast i64 %vr21997 to i64

	; store C := vr21996
	store i64 %vr21996, i64* %C.191

	; bop C SHL 3
	%vr21999 = load i64, i64* %C.191
	%vr21998 = shl i64 %vr21999, 3

	; store C := vr21998
	store i64 %vr21998, i64* %C.191

	; conv C => vr22000
	%vr22001 = load i64, i64* %C.191
	%vr22000 = sitofp i64 %vr22001 to double

	; conv SYS_OFFSET => vr22002
	%vr22003 = load i32, i32* @SYS_OFFSET
	%vr22002 = sext i32 %vr22003 to i64

	; bop vr22002 SHL 3
	%vr22004 = shl i64 %vr22002, 3

	; bop THIS + vr22004
	%vr22006 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22007 = inttoptr i64 %vr22004 to %MEMORY_T*
	%vr22005 = add %MEMORY_T* %vr22006, %vr22007

	; bop vr22000 + vr22005+1856
	%vr22009 = ptrtoint %MEMORY_T* %vr22005 to i64
	%vr22010 = add i64 %vr22009, 1856
	%vr22011 = inttoptr i64 %vr22010 to double*
	%vr22012 = load double, double* %vr22011
	%vr22008 = fadd double %vr22000, %vr22012

	; conv vr22008 => vr22013
	%vr22014 = call double @llvm.nearbyint.f64(double %vr22008)
	%vr22013 = fptosi double %vr22014 to i64

	; store C := vr22013
	store i64 %vr22013, i64* %C.191

	; bop ADR MOD 40
	%vr22017 = load i64, i64* %ADR.102
	%vr22016 = srem i64 %vr22017, 40
	%vr22019 = bitcast i64 %vr22016 to i64

	; store XS := vr22019
	store i64 %vr22019, i64* %XS.192

	; bop XS SHL 3
	%vr22021 = load i64, i64* %XS.192
	%vr22020 = shl i64 %vr22021, 3

	; store XS := vr22020
	store i64 %vr22020, i64* %XS.192

	; bop XS + 32
	%vr22023 = load i64, i64* %XS.192
	%vr22022 = add i64 %vr22023, 32

	; store XS := vr22022
	store i64 %vr22022, i64* %XS.192

	; bop ADR \ 40
	%vr22026 = load i64, i64* %ADR.102
	%vr22025 = sdiv i64 %vr22026, 40
	%vr22028 = bitcast i64 %vr22025 to i64

	; store YS := vr22028
	store i64 %vr22028, i64* %YS.193

	; bop YS SHL 3
	%vr22030 = load i64, i64* %YS.193
	%vr22029 = shl i64 %vr22030, 3

	; store YS := vr22029
	store i64 %vr22029, i64* %YS.193

	; bop YS + 32
	%vr22032 = load i64, i64* %YS.193
	%vr22031 = add i64 %vr22032, 32

	; store YS := vr22031
	store i64 %vr22031, i64* %YS.193

	; call fb_GfxLock()
	call void @fb_GfxLock(  )

	; conv SYS_OFFSET => vr22033
	%vr22034 = load i32, i32* @SYS_OFFSET
	%vr22033 = sext i32 %vr22034 to i64

	; bop vr22033 SHL 3
	%vr22035 = shl i64 %vr22033, 3

	; bop THIS + vr22035
	%vr22037 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22038 = inttoptr i64 %vr22035 to %MEMORY_T*
	%vr22036 = add %MEMORY_T* %vr22037, %vr22038

	; branchbop vr22036+1848 <> 0
	%vr22040 = ptrtoint %MEMORY_T* %vr22036 to i64
	%vr22041 = add i64 %vr22040, 1848
	%vr22042 = inttoptr i64 %vr22041 to double*
	%vr22043 = load double, double* %vr22042
	%vr22039 = icmp ne double %vr22043, 0x0000000000000000
	br i1 %vr22039, label %.Lt_0E1E, label %.Lt_115E
.Lt_115E:

	; localvar Y
	%Y.194 = alloca i64

	; localvar LT_0E1F
	%LT_0E1F.195 = alloca i64

	; store Y := 0
	store i64 0, i64* %Y.194

	; conv SYS_OFFSET => vr22044
	%vr22045 = load i32, i32* @SYS_OFFSET
	%vr22044 = sext i32 %vr22045 to i64

	; bop vr22044 SHL 3
	%vr22046 = shl i64 %vr22044, 3

	; bop THIS + vr22046
	%vr22048 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22049 = inttoptr i64 %vr22046 to %MEMORY_T*
	%vr22047 = add %MEMORY_T* %vr22048, %vr22049

	; conv vr22047+1864 => vr22050
	%vr22052 = ptrtoint %MEMORY_T* %vr22047 to i64
	%vr22053 = add i64 %vr22052, 1864
	%vr22054 = inttoptr i64 %vr22053 to double*
	%vr22055 = load double, double* %vr22054
	%vr22051 = call double @llvm.nearbyint.f64(double %vr22055)
	%vr22050 = fptosi double %vr22051 to i64

	; store LT_0E1F := vr22050
	store i64 %vr22050, i64* %LT_0E1F.195

	; goto .Lt_0E20
	br label %.Lt_0E20
.Lt_115F:

	; label .Lt_0E23
	br label %.Lt_0E23
.Lt_0E23:

	; localvar X
	%X.196 = alloca i64

	; localvar LT_0E24
	%LT_0E24.197 = alloca i64

	; store X := 0
	store i64 0, i64* %X.196

	; conv SYS_OFFSET => vr22056
	%vr22057 = load i32, i32* @SYS_OFFSET
	%vr22056 = sext i32 %vr22057 to i64

	; bop vr22056 SHL 3
	%vr22058 = shl i64 %vr22056, 3

	; bop THIS + vr22058
	%vr22060 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22061 = inttoptr i64 %vr22058 to %MEMORY_T*
	%vr22059 = add %MEMORY_T* %vr22060, %vr22061

	; conv vr22059+1872 => vr22062
	%vr22064 = ptrtoint %MEMORY_T* %vr22059 to i64
	%vr22065 = add i64 %vr22064, 1872
	%vr22066 = inttoptr i64 %vr22065 to double*
	%vr22067 = load double, double* %vr22066
	%vr22063 = call double @llvm.nearbyint.f64(double %vr22067)
	%vr22062 = fptosi double %vr22063 to i64

	; store LT_0E24 := vr22062
	store i64 %vr22062, i64* %LT_0E24.197

	; goto .Lt_0E25
	br label %.Lt_0E25
.Lt_1160:

	; label .Lt_0E28
	br label %.Lt_0E28
.Lt_0E28:

	; bop C SHL 3
	%vr22069 = load i64, i64* %C.191
	%vr22068 = shl i64 %vr22069, 3

	; bop THIS + vr22068
	%vr22071 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22072 = inttoptr i64 %vr22068 to %MEMORY_T*
	%vr22070 = add %MEMORY_T* %vr22071, %vr22072

	; conv vr22070+786424 => vr22073
	%vr22075 = ptrtoint %MEMORY_T* %vr22070 to i64
	%vr22076 = add i64 %vr22075, 786424
	%vr22077 = inttoptr i64 %vr22076 to double*
	%vr22078 = load double, double* %vr22077
	%vr22074 = call double @llvm.nearbyint.f64(double %vr22078)
	%vr22073 = fptosi double %vr22074 to i64

	; bop 128 SHR X
	%vr22080 = load i64, i64* %X.196
	%vr22079 = ashr i64 128, %vr22080

	; bop vr22073 AND vr22079
	%vr22081 = and i64 %vr22073, %vr22079

	; branchbop vr22081 == 0
	%vr22082 = icmp eq i64 %vr22081, 0
	br i1 %vr22082, label %.Lt_0E2A, label %.Lt_1161
.Lt_1161:

	; bop XS + X
	%vr22084 = load i64, i64* %XS.192
	%vr22085 = load i64, i64* %X.196
	%vr22083 = add i64 %vr22084, %vr22085

	; bop vr22083 * 5
	%vr22086 = mul i64 %vr22083, 5

	; bop vr22086 + -2
	%vr22087 = add i64 %vr22086, -2

	; conv vr22087 => vr22088
	%vr22088 = sitofp i64 %vr22087 to double

	; conv SYS_OFFSET => vr22089
	%vr22090 = load i32, i32* @SYS_OFFSET
	%vr22089 = sext i32 %vr22090 to i64

	; bop vr22089 SHL 3
	%vr22091 = shl i64 %vr22089, 3

	; bop THIS + vr22091
	%vr22093 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22094 = inttoptr i64 %vr22091 to %MEMORY_T*
	%vr22092 = add %MEMORY_T* %vr22093, %vr22094

	; store vr22092+1624 := vr22088
	%vr22095 = ptrtoint %MEMORY_T* %vr22092 to i64
	%vr22096 = add i64 %vr22095, 1624
	%vr22097 = inttoptr i64 %vr22096 to double*
	store double %vr22088, double* %vr22097

	; bop YS + Y
	%vr22099 = load i64, i64* %YS.193
	%vr22100 = load i64, i64* %Y.194
	%vr22098 = add i64 %vr22099, %vr22100

	; bop vr22098 SHL 2
	%vr22101 = shl i64 %vr22098, 2

	; bop vr22101 + -2
	%vr22102 = add i64 %vr22101, -2

	; conv vr22102 => vr22103
	%vr22103 = sitofp i64 %vr22102 to double

	; conv SYS_OFFSET => vr22104
	%vr22105 = load i32, i32* @SYS_OFFSET
	%vr22104 = sext i32 %vr22105 to i64

	; bop vr22104 SHL 3
	%vr22106 = shl i64 %vr22104, 3

	; bop THIS + vr22106
	%vr22108 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22109 = inttoptr i64 %vr22106 to %MEMORY_T*
	%vr22107 = add %MEMORY_T* %vr22108, %vr22109

	; store vr22107+1632 := vr22103
	%vr22110 = ptrtoint %MEMORY_T* %vr22107 to i64
	%vr22111 = add i64 %vr22110, 1632
	%vr22112 = inttoptr i64 %vr22111 to double*
	store double %vr22103, double* %vr22112

	; bop XS + X
	%vr22114 = load i64, i64* %XS.192
	%vr22115 = load i64, i64* %X.196
	%vr22113 = add i64 %vr22114, %vr22115

	; bop vr22113 * 5
	%vr22116 = mul i64 %vr22113, 5

	; bop vr22116 + 2
	%vr22117 = add i64 %vr22116, 2

	; conv vr22117 => vr22118
	%vr22118 = sitofp i64 %vr22117 to double

	; conv SYS_OFFSET => vr22119
	%vr22120 = load i32, i32* @SYS_OFFSET
	%vr22119 = sext i32 %vr22120 to i64

	; bop vr22119 SHL 3
	%vr22121 = shl i64 %vr22119, 3

	; bop THIS + vr22121
	%vr22123 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22124 = inttoptr i64 %vr22121 to %MEMORY_T*
	%vr22122 = add %MEMORY_T* %vr22123, %vr22124

	; store vr22122+1648 := vr22118
	%vr22125 = ptrtoint %MEMORY_T* %vr22122 to i64
	%vr22126 = add i64 %vr22125, 1648
	%vr22127 = inttoptr i64 %vr22126 to double*
	store double %vr22118, double* %vr22127

	; bop YS + Y
	%vr22129 = load i64, i64* %YS.193
	%vr22130 = load i64, i64* %Y.194
	%vr22128 = add i64 %vr22129, %vr22130

	; bop vr22128 SHL 2
	%vr22131 = shl i64 %vr22128, 2

	; bop vr22131 + 2
	%vr22132 = add i64 %vr22131, 2

	; conv vr22132 => vr22133
	%vr22133 = sitofp i64 %vr22132 to double

	; conv SYS_OFFSET => vr22134
	%vr22135 = load i32, i32* @SYS_OFFSET
	%vr22134 = sext i32 %vr22135 to i64

	; bop vr22134 SHL 3
	%vr22136 = shl i64 %vr22134, 3

	; bop THIS + vr22136
	%vr22138 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22139 = inttoptr i64 %vr22136 to %MEMORY_T*
	%vr22137 = add %MEMORY_T* %vr22138, %vr22139

	; store vr22137+1656 := vr22133
	%vr22140 = ptrtoint %MEMORY_T* %vr22137 to i64
	%vr22141 = add i64 %vr22140, 1656
	%vr22142 = inttoptr i64 %vr22141 to double*
	store double %vr22133, double* %vr22142

	; conv SYS_OFFSET => vr22143
	%vr22144 = load i32, i32* @SYS_OFFSET
	%vr22143 = sext i32 %vr22144 to i64

	; bop vr22143 + 238
	%vr22145 = add i64 %vr22143, 238
	%vr22146 = bitcast i64 %vr22145 to i64

	; call POKE64()
	; arg THIS
	%vr22147 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr22146
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22147, i64 %vr22146, i64 0 )

	; goto .Lt_0E29
	br label %.Lt_0E29
.Lt_1162:

	; label .Lt_0E2A
	br label %.Lt_0E2A
.Lt_0E2A:

	; bop XS + X
	%vr22149 = load i64, i64* %XS.192
	%vr22150 = load i64, i64* %X.196
	%vr22148 = add i64 %vr22149, %vr22150

	; bop vr22148 * 5
	%vr22151 = mul i64 %vr22148, 5

	; bop vr22151 + -2
	%vr22152 = add i64 %vr22151, -2

	; conv vr22152 => vr22153
	%vr22153 = sitofp i64 %vr22152 to double

	; conv SYS_OFFSET => vr22154
	%vr22155 = load i32, i32* @SYS_OFFSET
	%vr22154 = sext i32 %vr22155 to i64

	; bop vr22154 SHL 3
	%vr22156 = shl i64 %vr22154, 3

	; bop THIS + vr22156
	%vr22158 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22159 = inttoptr i64 %vr22156 to %MEMORY_T*
	%vr22157 = add %MEMORY_T* %vr22158, %vr22159

	; store vr22157+1624 := vr22153
	%vr22160 = ptrtoint %MEMORY_T* %vr22157 to i64
	%vr22161 = add i64 %vr22160, 1624
	%vr22162 = inttoptr i64 %vr22161 to double*
	store double %vr22153, double* %vr22162

	; bop YS + Y
	%vr22164 = load i64, i64* %YS.193
	%vr22165 = load i64, i64* %Y.194
	%vr22163 = add i64 %vr22164, %vr22165

	; bop vr22163 SHL 2
	%vr22166 = shl i64 %vr22163, 2

	; bop vr22166 + -2
	%vr22167 = add i64 %vr22166, -2

	; conv vr22167 => vr22168
	%vr22168 = sitofp i64 %vr22167 to double

	; conv SYS_OFFSET => vr22169
	%vr22170 = load i32, i32* @SYS_OFFSET
	%vr22169 = sext i32 %vr22170 to i64

	; bop vr22169 SHL 3
	%vr22171 = shl i64 %vr22169, 3

	; bop THIS + vr22171
	%vr22173 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22174 = inttoptr i64 %vr22171 to %MEMORY_T*
	%vr22172 = add %MEMORY_T* %vr22173, %vr22174

	; store vr22172+1632 := vr22168
	%vr22175 = ptrtoint %MEMORY_T* %vr22172 to i64
	%vr22176 = add i64 %vr22175, 1632
	%vr22177 = inttoptr i64 %vr22176 to double*
	store double %vr22168, double* %vr22177

	; bop XS + X
	%vr22179 = load i64, i64* %XS.192
	%vr22180 = load i64, i64* %X.196
	%vr22178 = add i64 %vr22179, %vr22180

	; bop vr22178 * 5
	%vr22181 = mul i64 %vr22178, 5

	; bop vr22181 + 2
	%vr22182 = add i64 %vr22181, 2

	; conv vr22182 => vr22183
	%vr22183 = sitofp i64 %vr22182 to double

	; conv SYS_OFFSET => vr22184
	%vr22185 = load i32, i32* @SYS_OFFSET
	%vr22184 = sext i32 %vr22185 to i64

	; bop vr22184 SHL 3
	%vr22186 = shl i64 %vr22184, 3

	; bop THIS + vr22186
	%vr22188 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22189 = inttoptr i64 %vr22186 to %MEMORY_T*
	%vr22187 = add %MEMORY_T* %vr22188, %vr22189

	; store vr22187+1648 := vr22183
	%vr22190 = ptrtoint %MEMORY_T* %vr22187 to i64
	%vr22191 = add i64 %vr22190, 1648
	%vr22192 = inttoptr i64 %vr22191 to double*
	store double %vr22183, double* %vr22192

	; bop YS + Y
	%vr22194 = load i64, i64* %YS.193
	%vr22195 = load i64, i64* %Y.194
	%vr22193 = add i64 %vr22194, %vr22195

	; bop vr22193 SHL 2
	%vr22196 = shl i64 %vr22193, 2

	; bop vr22196 + 2
	%vr22197 = add i64 %vr22196, 2

	; conv vr22197 => vr22198
	%vr22198 = sitofp i64 %vr22197 to double

	; conv SYS_OFFSET => vr22199
	%vr22200 = load i32, i32* @SYS_OFFSET
	%vr22199 = sext i32 %vr22200 to i64

	; bop vr22199 SHL 3
	%vr22201 = shl i64 %vr22199, 3

	; bop THIS + vr22201
	%vr22203 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22204 = inttoptr i64 %vr22201 to %MEMORY_T*
	%vr22202 = add %MEMORY_T* %vr22203, %vr22204

	; store vr22202+1656 := vr22198
	%vr22205 = ptrtoint %MEMORY_T* %vr22202 to i64
	%vr22206 = add i64 %vr22205, 1656
	%vr22207 = inttoptr i64 %vr22206 to double*
	store double %vr22198, double* %vr22207

	; conv SYS_OFFSET => vr22208
	%vr22209 = load i32, i32* @SYS_OFFSET
	%vr22208 = sext i32 %vr22209 to i64

	; bop vr22208 + 239
	%vr22210 = add i64 %vr22208, 239
	%vr22211 = bitcast i64 %vr22210 to i64

	; call POKE64()
	; arg THIS
	%vr22212 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr22211
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22212, i64 %vr22211, i64 0 )

	; label .Lt_0E29
	br label %.Lt_0E29
.Lt_0E29:

	; label .Lt_0E26
	br label %.Lt_0E26
.Lt_0E26:

	; bop X + 1
	%vr22214 = load i64, i64* %X.196
	%vr22213 = add i64 %vr22214, 1

	; store X := vr22213
	store i64 %vr22213, i64* %X.196

	; label .Lt_0E25
	br label %.Lt_0E25
.Lt_0E25:

	; branchbop X <= LT_0E24
	%vr22216 = load i64, i64* %X.196
	%vr22217 = load i64, i64* %LT_0E24.197
	%vr22215 = icmp sle i64 %vr22216, %vr22217
	br i1 %vr22215, label %.Lt_0E28, label %.Lt_1163
.Lt_1163:

	; label .Lt_0E27
	br label %.Lt_0E27
.Lt_0E27:

	; bop C + 1
	%vr22219 = load i64, i64* %C.191
	%vr22218 = add i64 %vr22219, 1

	; store C := vr22218
	store i64 %vr22218, i64* %C.191

	; label .Lt_0E21
	br label %.Lt_0E21
.Lt_0E21:

	; bop Y + 1
	%vr22221 = load i64, i64* %Y.194
	%vr22220 = add i64 %vr22221, 1

	; store Y := vr22220
	store i64 %vr22220, i64* %Y.194

	; label .Lt_0E20
	br label %.Lt_0E20
.Lt_0E20:

	; branchbop Y <= LT_0E1F
	%vr22223 = load i64, i64* %Y.194
	%vr22224 = load i64, i64* %LT_0E1F.195
	%vr22222 = icmp sle i64 %vr22223, %vr22224
	br i1 %vr22222, label %.Lt_0E23, label %.Lt_1164
.Lt_1164:

	; label .Lt_0E22
	br label %.Lt_0E22
.Lt_0E22:

	; goto .Lt_0E1D
	br label %.Lt_0E1D
.Lt_1165:

	; label .Lt_0E1E
	br label %.Lt_0E1E
.Lt_0E1E:

	; conv SYS_OFFSET => vr22225
	%vr22226 = load i32, i32* @SYS_OFFSET
	%vr22225 = sext i32 %vr22226 to i64

	; bop vr22225 SHL 3
	%vr22227 = shl i64 %vr22225, 3

	; bop THIS + vr22227
	%vr22229 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22230 = inttoptr i64 %vr22227 to %MEMORY_T*
	%vr22228 = add %MEMORY_T* %vr22229, %vr22230

	; branchbop vr22228+1848 <> 1
	%vr22232 = ptrtoint %MEMORY_T* %vr22228 to i64
	%vr22233 = add i64 %vr22232, 1848
	%vr22234 = inttoptr i64 %vr22233 to double*
	%vr22235 = load double, double* %vr22234
	%vr22231 = icmp ne double %vr22235, 0x3FF0000000000000
	br i1 %vr22231, label %.Lt_0E2B, label %.Lt_1166
.Lt_1166:

	; localvar Y
	%Y.198 = alloca i64

	; conv SYS_OFFSET => vr22236
	%vr22237 = load i32, i32* @SYS_OFFSET
	%vr22236 = sext i32 %vr22237 to i64

	; bop vr22236 SHL 3
	%vr22238 = shl i64 %vr22236, 3

	; bop THIS + vr22238
	%vr22240 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22241 = inttoptr i64 %vr22238 to %MEMORY_T*
	%vr22239 = add %MEMORY_T* %vr22240, %vr22241

	; conv vr22239+1864 => vr22242
	%vr22244 = ptrtoint %MEMORY_T* %vr22239 to i64
	%vr22245 = add i64 %vr22244, 1864
	%vr22246 = inttoptr i64 %vr22245 to double*
	%vr22247 = load double, double* %vr22246
	%vr22243 = call double @llvm.nearbyint.f64(double %vr22247)
	%vr22242 = fptosi double %vr22243 to i64

	; store Y := vr22242
	store i64 %vr22242, i64* %Y.198

	; goto .Lt_0E2C
	br label %.Lt_0E2C
.Lt_1167:

	; label .Lt_0E2F
	br label %.Lt_0E2F
.Lt_0E2F:

	; localvar X
	%X.199 = alloca i64

	; localvar LT_0E30
	%LT_0E30.200 = alloca i64

	; store X := 0
	store i64 0, i64* %X.199

	; conv SYS_OFFSET => vr22248
	%vr22249 = load i32, i32* @SYS_OFFSET
	%vr22248 = sext i32 %vr22249 to i64

	; bop vr22248 SHL 3
	%vr22250 = shl i64 %vr22248, 3

	; bop THIS + vr22250
	%vr22252 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22253 = inttoptr i64 %vr22250 to %MEMORY_T*
	%vr22251 = add %MEMORY_T* %vr22252, %vr22253

	; conv vr22251+1872 => vr22254
	%vr22256 = ptrtoint %MEMORY_T* %vr22251 to i64
	%vr22257 = add i64 %vr22256, 1872
	%vr22258 = inttoptr i64 %vr22257 to double*
	%vr22259 = load double, double* %vr22258
	%vr22255 = call double @llvm.nearbyint.f64(double %vr22259)
	%vr22254 = fptosi double %vr22255 to i64

	; store LT_0E30 := vr22254
	store i64 %vr22254, i64* %LT_0E30.200

	; goto .Lt_0E31
	br label %.Lt_0E31
.Lt_1168:

	; label .Lt_0E34
	br label %.Lt_0E34
.Lt_0E34:

	; bop C SHL 3
	%vr22261 = load i64, i64* %C.191
	%vr22260 = shl i64 %vr22261, 3

	; bop THIS + vr22260
	%vr22263 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22264 = inttoptr i64 %vr22260 to %MEMORY_T*
	%vr22262 = add %MEMORY_T* %vr22263, %vr22264

	; conv vr22262+786424 => vr22265
	%vr22267 = ptrtoint %MEMORY_T* %vr22262 to i64
	%vr22268 = add i64 %vr22267, 786424
	%vr22269 = inttoptr i64 %vr22268 to double*
	%vr22270 = load double, double* %vr22269
	%vr22266 = call double @llvm.nearbyint.f64(double %vr22270)
	%vr22265 = fptosi double %vr22266 to i64

	; bop 128 SHR X
	%vr22272 = load i64, i64* %X.199
	%vr22271 = ashr i64 128, %vr22272

	; bop vr22265 AND vr22271
	%vr22273 = and i64 %vr22265, %vr22271

	; branchbop vr22273 == 0
	%vr22274 = icmp eq i64 %vr22273, 0
	br i1 %vr22274, label %.Lt_0E36, label %.Lt_1169
.Lt_1169:

	; bop XS - X
	%vr22276 = load i64, i64* %XS.192
	%vr22277 = load i64, i64* %X.199
	%vr22275 = sub i64 %vr22276, %vr22277

	; bop vr22275 * 5
	%vr22278 = mul i64 %vr22275, 5

	; bop vr22278 + 2
	%vr22279 = add i64 %vr22278, 2

	; conv vr22279 => vr22280
	%vr22280 = sitofp i64 %vr22279 to double

	; conv SYS_OFFSET => vr22281
	%vr22282 = load i32, i32* @SYS_OFFSET
	%vr22281 = sext i32 %vr22282 to i64

	; bop vr22281 SHL 3
	%vr22283 = shl i64 %vr22281, 3

	; bop THIS + vr22283
	%vr22285 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22286 = inttoptr i64 %vr22283 to %MEMORY_T*
	%vr22284 = add %MEMORY_T* %vr22285, %vr22286

	; store vr22284+1648 := vr22280
	%vr22287 = ptrtoint %MEMORY_T* %vr22284 to i64
	%vr22288 = add i64 %vr22287, 1648
	%vr22289 = inttoptr i64 %vr22288 to double*
	store double %vr22280, double* %vr22289

	; bop YS - Y
	%vr22291 = load i64, i64* %YS.193
	%vr22292 = load i64, i64* %Y.198
	%vr22290 = sub i64 %vr22291, %vr22292

	; bop vr22290 SHL 2
	%vr22293 = shl i64 %vr22290, 2

	; bop vr22293 + 2
	%vr22294 = add i64 %vr22293, 2

	; conv vr22294 => vr22295
	%vr22295 = sitofp i64 %vr22294 to double

	; conv SYS_OFFSET => vr22296
	%vr22297 = load i32, i32* @SYS_OFFSET
	%vr22296 = sext i32 %vr22297 to i64

	; bop vr22296 SHL 3
	%vr22298 = shl i64 %vr22296, 3

	; bop THIS + vr22298
	%vr22300 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22301 = inttoptr i64 %vr22298 to %MEMORY_T*
	%vr22299 = add %MEMORY_T* %vr22300, %vr22301

	; store vr22299+1656 := vr22295
	%vr22302 = ptrtoint %MEMORY_T* %vr22299 to i64
	%vr22303 = add i64 %vr22302, 1656
	%vr22304 = inttoptr i64 %vr22303 to double*
	store double %vr22295, double* %vr22304

	; bop XS - X
	%vr22306 = load i64, i64* %XS.192
	%vr22307 = load i64, i64* %X.199
	%vr22305 = sub i64 %vr22306, %vr22307

	; bop vr22305 * 5
	%vr22308 = mul i64 %vr22305, 5

	; bop vr22308 + -2
	%vr22309 = add i64 %vr22308, -2

	; conv vr22309 => vr22310
	%vr22310 = sitofp i64 %vr22309 to double

	; conv SYS_OFFSET => vr22311
	%vr22312 = load i32, i32* @SYS_OFFSET
	%vr22311 = sext i32 %vr22312 to i64

	; bop vr22311 SHL 3
	%vr22313 = shl i64 %vr22311, 3

	; bop THIS + vr22313
	%vr22315 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22316 = inttoptr i64 %vr22313 to %MEMORY_T*
	%vr22314 = add %MEMORY_T* %vr22315, %vr22316

	; store vr22314+1624 := vr22310
	%vr22317 = ptrtoint %MEMORY_T* %vr22314 to i64
	%vr22318 = add i64 %vr22317, 1624
	%vr22319 = inttoptr i64 %vr22318 to double*
	store double %vr22310, double* %vr22319

	; bop YS - Y
	%vr22321 = load i64, i64* %YS.193
	%vr22322 = load i64, i64* %Y.198
	%vr22320 = sub i64 %vr22321, %vr22322

	; bop vr22320 SHL 2
	%vr22323 = shl i64 %vr22320, 2

	; bop vr22323 + -2
	%vr22324 = add i64 %vr22323, -2

	; conv vr22324 => vr22325
	%vr22325 = sitofp i64 %vr22324 to double

	; conv SYS_OFFSET => vr22326
	%vr22327 = load i32, i32* @SYS_OFFSET
	%vr22326 = sext i32 %vr22327 to i64

	; bop vr22326 SHL 3
	%vr22328 = shl i64 %vr22326, 3

	; bop THIS + vr22328
	%vr22330 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22331 = inttoptr i64 %vr22328 to %MEMORY_T*
	%vr22329 = add %MEMORY_T* %vr22330, %vr22331

	; store vr22329+1632 := vr22325
	%vr22332 = ptrtoint %MEMORY_T* %vr22329 to i64
	%vr22333 = add i64 %vr22332, 1632
	%vr22334 = inttoptr i64 %vr22333 to double*
	store double %vr22325, double* %vr22334

	; conv SYS_OFFSET => vr22335
	%vr22336 = load i32, i32* @SYS_OFFSET
	%vr22335 = sext i32 %vr22336 to i64

	; bop vr22335 + 238
	%vr22337 = add i64 %vr22335, 238
	%vr22338 = bitcast i64 %vr22337 to i64

	; call POKE64()
	; arg THIS
	%vr22339 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr22338
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22339, i64 %vr22338, i64 0 )

	; goto .Lt_0E35
	br label %.Lt_0E35
.Lt_116A:

	; label .Lt_0E36
	br label %.Lt_0E36
.Lt_0E36:

	; bop XS - X
	%vr22341 = load i64, i64* %XS.192
	%vr22342 = load i64, i64* %X.199
	%vr22340 = sub i64 %vr22341, %vr22342

	; bop vr22340 * 5
	%vr22343 = mul i64 %vr22340, 5

	; bop vr22343 + 2
	%vr22344 = add i64 %vr22343, 2

	; conv vr22344 => vr22345
	%vr22345 = sitofp i64 %vr22344 to double

	; conv SYS_OFFSET => vr22346
	%vr22347 = load i32, i32* @SYS_OFFSET
	%vr22346 = sext i32 %vr22347 to i64

	; bop vr22346 SHL 3
	%vr22348 = shl i64 %vr22346, 3

	; bop THIS + vr22348
	%vr22350 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22351 = inttoptr i64 %vr22348 to %MEMORY_T*
	%vr22349 = add %MEMORY_T* %vr22350, %vr22351

	; store vr22349+1648 := vr22345
	%vr22352 = ptrtoint %MEMORY_T* %vr22349 to i64
	%vr22353 = add i64 %vr22352, 1648
	%vr22354 = inttoptr i64 %vr22353 to double*
	store double %vr22345, double* %vr22354

	; bop YS - Y
	%vr22356 = load i64, i64* %YS.193
	%vr22357 = load i64, i64* %Y.198
	%vr22355 = sub i64 %vr22356, %vr22357

	; bop vr22355 SHL 2
	%vr22358 = shl i64 %vr22355, 2

	; bop vr22358 + 2
	%vr22359 = add i64 %vr22358, 2

	; conv vr22359 => vr22360
	%vr22360 = sitofp i64 %vr22359 to double

	; conv SYS_OFFSET => vr22361
	%vr22362 = load i32, i32* @SYS_OFFSET
	%vr22361 = sext i32 %vr22362 to i64

	; bop vr22361 SHL 3
	%vr22363 = shl i64 %vr22361, 3

	; bop THIS + vr22363
	%vr22365 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22366 = inttoptr i64 %vr22363 to %MEMORY_T*
	%vr22364 = add %MEMORY_T* %vr22365, %vr22366

	; store vr22364+1656 := vr22360
	%vr22367 = ptrtoint %MEMORY_T* %vr22364 to i64
	%vr22368 = add i64 %vr22367, 1656
	%vr22369 = inttoptr i64 %vr22368 to double*
	store double %vr22360, double* %vr22369

	; bop XS - X
	%vr22371 = load i64, i64* %XS.192
	%vr22372 = load i64, i64* %X.199
	%vr22370 = sub i64 %vr22371, %vr22372

	; bop vr22370 * 5
	%vr22373 = mul i64 %vr22370, 5

	; bop vr22373 + -2
	%vr22374 = add i64 %vr22373, -2

	; conv vr22374 => vr22375
	%vr22375 = sitofp i64 %vr22374 to double

	; conv SYS_OFFSET => vr22376
	%vr22377 = load i32, i32* @SYS_OFFSET
	%vr22376 = sext i32 %vr22377 to i64

	; bop vr22376 SHL 3
	%vr22378 = shl i64 %vr22376, 3

	; bop THIS + vr22378
	%vr22380 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22381 = inttoptr i64 %vr22378 to %MEMORY_T*
	%vr22379 = add %MEMORY_T* %vr22380, %vr22381

	; store vr22379+1624 := vr22375
	%vr22382 = ptrtoint %MEMORY_T* %vr22379 to i64
	%vr22383 = add i64 %vr22382, 1624
	%vr22384 = inttoptr i64 %vr22383 to double*
	store double %vr22375, double* %vr22384

	; bop YS - Y
	%vr22386 = load i64, i64* %YS.193
	%vr22387 = load i64, i64* %Y.198
	%vr22385 = sub i64 %vr22386, %vr22387

	; bop vr22385 SHL 2
	%vr22388 = shl i64 %vr22385, 2

	; bop vr22388 + -2
	%vr22389 = add i64 %vr22388, -2

	; conv vr22389 => vr22390
	%vr22390 = sitofp i64 %vr22389 to double

	; conv SYS_OFFSET => vr22391
	%vr22392 = load i32, i32* @SYS_OFFSET
	%vr22391 = sext i32 %vr22392 to i64

	; bop vr22391 SHL 3
	%vr22393 = shl i64 %vr22391, 3

	; bop THIS + vr22393
	%vr22395 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	%vr22396 = inttoptr i64 %vr22393 to %MEMORY_T*
	%vr22394 = add %MEMORY_T* %vr22395, %vr22396

	; store vr22394+1632 := vr22390
	%vr22397 = ptrtoint %MEMORY_T* %vr22394 to i64
	%vr22398 = add i64 %vr22397, 1632
	%vr22399 = inttoptr i64 %vr22398 to double*
	store double %vr22390, double* %vr22399

	; conv SYS_OFFSET => vr22400
	%vr22401 = load i32, i32* @SYS_OFFSET
	%vr22400 = sext i32 %vr22401 to i64

	; bop vr22400 + 239
	%vr22402 = add i64 %vr22400, 239
	%vr22403 = bitcast i64 %vr22402 to i64

	; call POKE64()
	; arg THIS
	%vr22404 = load %MEMORY_T*, %MEMORY_T** %THIS.101
	; arg vr22403
	; arg 0
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr22404, i64 %vr22403, i64 0 )

	; label .Lt_0E35
	br label %.Lt_0E35
.Lt_0E35:

	; label .Lt_0E32
	br label %.Lt_0E32
.Lt_0E32:

	; bop X + 1
	%vr22406 = load i64, i64* %X.199
	%vr22405 = add i64 %vr22406, 1

	; store X := vr22405
	store i64 %vr22405, i64* %X.199

	; label .Lt_0E31
	br label %.Lt_0E31
.Lt_0E31:

	; branchbop X <= LT_0E30
	%vr22408 = load i64, i64* %X.199
	%vr22409 = load i64, i64* %LT_0E30.200
	%vr22407 = icmp sle i64 %vr22408, %vr22409
	br i1 %vr22407, label %.Lt_0E34, label %.Lt_116B
.Lt_116B:

	; label .Lt_0E33
	br label %.Lt_0E33
.Lt_0E33:

	; bop C + 1
	%vr22411 = load i64, i64* %C.191
	%vr22410 = add i64 %vr22411, 1

	; store C := vr22410
	store i64 %vr22410, i64* %C.191

	; label .Lt_0E2D
	br label %.Lt_0E2D
.Lt_0E2D:

	; bop Y + -1
	%vr22413 = load i64, i64* %Y.198
	%vr22412 = add i64 %vr22413, -1

	; store Y := vr22412
	store i64 %vr22412, i64* %Y.198

	; label .Lt_0E2C
	br label %.Lt_0E2C
.Lt_0E2C:

	; branchbop Y >= 0
	%vr22415 = load i64, i64* %Y.198
	%vr22414 = icmp sge i64 %vr22415, 0
	br i1 %vr22414, label %.Lt_0E2F, label %.Lt_116C
.Lt_116C:

	; label .Lt_0E2E
	br label %.Lt_0E2E
.Lt_0E2E:

	; label .Lt_0E2B
	br label %.Lt_0E2B
.Lt_0E2B:

	; label .Lt_0E1D
	br label %.Lt_0E1D
.Lt_0E1D:

	; bop YS + 8
	%vr22417 = load i64, i64* %YS.193
	%vr22416 = add i64 %vr22417, 8

	; conv vr22416 => vr22418
	%vr22418 = trunc i64 %vr22416 to i32

	; conv YS => vr22419
	%vr22420 = load i64, i64* %YS.193
	%vr22419 = trunc i64 %vr22420 to i32

	; call fb_GfxUnlock()
	; arg vr22419
	; arg vr22418
	call void @fb_GfxUnlock( i32 %vr22419, i32 %vr22418 )

	; label .Lt_0E1B
	br label %.Lt_0E1B
.Lt_0E1B:

	; label .Lt_04C7
	br label %.Lt_04C7
.Lt_04C7:

	; label .Lt_0438
	br label %.Lt_0438
.Lt_0438:
	ret void
}

define i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %THIS.201$, i64 %ADR.202$ ) nounwind
{

	; paramvar THIS
	%THIS.201 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.201$, %MEMORY_T** %THIS.201

	; paramvar ADR
	%ADR.202 = alloca i64
	store i64 %ADR.202$, i64* %ADR.202

	; localvar fb$result
	%fb$result.203 = alloca i8

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i8* %fb$result.203 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_116D
	br label %.Lt_116D
.Lt_116D:

	; call PEEK64()
	; arg THIS
	%vr3 = load %MEMORY_T*, %MEMORY_T** %THIS.201
	; arg ADR
	%vr4 = load i64, i64* %ADR.202
	%vr2 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr3, i64 %vr4 )

	; conv vr2 => vr5
	%vr5 = trunc i64 %vr2 to i8

	; store fb$result := vr5
	store i8 %vr5, i8* %fb$result.203

	; goto .Lt_116E
	br label %.Lt_116E
.Lt_116F:

	; label .Lt_116E
	br label %.Lt_116E
.Lt_116E:

	; loadres fb$result
	%vr7 = load i8, i8* %fb$result.203
	ret i8 %vr7
}

define i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %THIS.204$, i64 %ADR.205$ ) nounwind
{

	; paramvar THIS
	%THIS.204 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.204$, %MEMORY_T** %THIS.204

	; paramvar ADR
	%ADR.205 = alloca i64
	store i64 %ADR.205$, i64* %ADR.205

	; localvar fb$result
	%fb$result.206 = alloca i8

	; addrof fb$result

	; memclear fb$result
	call void @llvm.memset.p0i8.i32( i8* %fb$result.206, i8 0, i32 1, i32 1, i1 false )

	; label .Lt_1170
	br label %.Lt_1170
.Lt_1170:

	; call PEEK64()
	; arg THIS
	%vr2 = load %MEMORY_T*, %MEMORY_T** %THIS.204
	; arg ADR
	%vr3 = load i64, i64* %ADR.205
	%vr1 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr2, i64 %vr3 )

	; conv vr1 => vr4
	%vr4 = trunc i64 %vr1 to i8

	; store fb$result := vr4
	store i8 %vr4, i8* %fb$result.206

	; goto .Lt_1171
	br label %.Lt_1171
.Lt_1172:

	; label .Lt_1171
	br label %.Lt_1171
.Lt_1171:

	; loadres fb$result
	%vr6 = load i8, i8* %fb$result.206
	ret i8 %vr6
}

define i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %THIS.207$, i64 %ADR.208$ ) nounwind
{

	; paramvar THIS
	%THIS.207 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.207$, %MEMORY_T** %THIS.207

	; paramvar ADR
	%ADR.208 = alloca i64
	store i64 %ADR.208$, i64* %ADR.208

	; localvar fb$result
	%fb$result.209 = alloca i16

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i16* %fb$result.209 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 2, i32 1, i1 false )

	; label .Lt_1173
	br label %.Lt_1173
.Lt_1173:

	; call PEEK64()
	; arg THIS
	%vr3 = load %MEMORY_T*, %MEMORY_T** %THIS.207
	; arg ADR
	%vr4 = load i64, i64* %ADR.208
	%vr2 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr3, i64 %vr4 )

	; bop ADR + 1
	%vr8 = load i64, i64* %ADR.208
	%vr7 = add i64 %vr8, 1

	; call PEEK64()
	; arg THIS
	%vr12 = load %MEMORY_T*, %MEMORY_T** %THIS.207
	; arg vr7
	%vr11 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr12, i64 %vr7 )

	; bop vr11 SHL 8
	%vr17 = bitcast i64 8 to i64
	%vr15 = shl i64 %vr11, %vr17

	; bop vr2 OR vr15
	%vr18 = or i64 %vr2, %vr15

	; conv vr18 => vr20
	%vr20 = trunc i64 %vr18 to i16

	; store fb$result := vr20
	store i16 %vr20, i16* %fb$result.209

	; goto .Lt_1174
	br label %.Lt_1174
.Lt_1175:

	; label .Lt_1174
	br label %.Lt_1174
.Lt_1174:

	; loadres fb$result
	%vr22 = load i16, i16* %fb$result.209
	ret i16 %vr22
}

define void @_ZN8MEMORY_T9WRITEBYTEEyy( %MEMORY_T* %THIS.210$, i64 %ADR.211$, i64 %B8.212$ ) nounwind
{

	; paramvar THIS
	%THIS.210 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.210$, %MEMORY_T** %THIS.210

	; paramvar ADR
	%ADR.211 = alloca i64
	store i64 %ADR.211$, i64* %ADR.211

	; paramvar B8
	%B8.212 = alloca i64
	store i64 %B8.212$, i64* %B8.212

	; label .Lt_1176
	br label %.Lt_1176
.Lt_1176:

	; call POKE64()
	; arg THIS
	%vr0 = load %MEMORY_T*, %MEMORY_T** %THIS.210
	; arg ADR
	%vr1 = load i64, i64* %ADR.211
	; arg B8
	%vr2 = load i64, i64* %B8.212
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr0, i64 %vr1, i64 %vr2 )

	; label .Lt_1177
	br label %.Lt_1177
.Lt_1177:
	ret void
}

define void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %THIS.213$, i64 %ADR.214$, i64 %B8.215$ ) nounwind
{

	; paramvar THIS
	%THIS.213 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.213$, %MEMORY_T** %THIS.213

	; paramvar ADR
	%ADR.214 = alloca i64
	store i64 %ADR.214$, i64* %ADR.214

	; paramvar B8
	%B8.215 = alloca i64
	store i64 %B8.215$, i64* %B8.215

	; label .Lt_1178
	br label %.Lt_1178
.Lt_1178:

	; call POKE64()
	; arg THIS
	%vr0 = load %MEMORY_T*, %MEMORY_T** %THIS.213
	; arg ADR
	%vr1 = load i64, i64* %ADR.214
	; arg B8
	%vr2 = load i64, i64* %B8.215
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr0, i64 %vr1, i64 %vr2 )

	; label .Lt_1179
	br label %.Lt_1179
.Lt_1179:
	ret void
}

define void @_ZN8MEMORY_T11WRITEUSHORTEyy( %MEMORY_T* %THIS.216$, i64 %ADR.217$, i64 %W16.218$ ) nounwind
{

	; paramvar THIS
	%THIS.216 = alloca %MEMORY_T*
	store %MEMORY_T* %THIS.216$, %MEMORY_T** %THIS.216

	; paramvar ADR
	%ADR.217 = alloca i64
	store i64 %ADR.217$, i64* %ADR.217

	; paramvar W16
	%W16.218 = alloca i64
	store i64 %W16.218$, i64* %W16.218

	; label .Lt_117A
	br label %.Lt_117A
.Lt_117A:

	; bop W16 AND 255
	%vr2 = load i64, i64* %W16.218
	%vr1 = and i64 %vr2, 255

	; call POKE64()
	; arg THIS
	%vr5 = load %MEMORY_T*, %MEMORY_T** %THIS.216
	; arg ADR
	%vr6 = load i64, i64* %ADR.217
	; arg vr1
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr5, i64 %vr6, i64 %vr1 )

	; bop W16 AND 65280
	%vr10 = load i64, i64* %W16.218
	%vr9 = and i64 %vr10, 65280

	; bop vr9 SHR 8
	%vr13 = bitcast i64 8 to i64
	%vr12 = ashr i64 %vr9, %vr13

	; bop ADR + 1
	%vr17 = load i64, i64* %ADR.217
	%vr16 = add i64 %vr17, 1

	; call POKE64()
	; arg THIS
	%vr20 = load %MEMORY_T*, %MEMORY_T** %THIS.216
	; arg vr16
	; arg vr12
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr20, i64 %vr16, i64 %vr12 )

	; label .Lt_117B
	br label %.Lt_117B
.Lt_117B:
	ret void
}

define void @_ZN7CPU6510C1EP8MEMORY_T( %CPU6510* %THIS.219$, %MEMORY_T* %LPMEM.220$ ) nounwind
{

	; paramvar THIS
	%THIS.219 = alloca %CPU6510*
	store %CPU6510* %THIS.219$, %CPU6510** %THIS.219

	; paramvar LPMEM
	%LPMEM.220 = alloca %MEMORY_T*
	store %MEMORY_T* %LPMEM.220$, %MEMORY_T** %LPMEM.220

	; label .Lt_117C
	br label %.Lt_117C
.Lt_117C:
	%vr1 = load %CPU6510*, %CPU6510** %THIS.219
	%vr0 = bitcast %CPU6510* %vr1 to i8*

	; addrof vr0
	%vr3 = ptrtoint i8* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i8*

	; memclear vr4
	%vr5 = bitcast i8* %vr4 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr7 = load %CPU6510*, %CPU6510** %THIS.219
	%vr8 = inttoptr i64 8 to %CPU6510*
	%vr6 = add %CPU6510* %vr7, %vr8
	%vr9 = bitcast %CPU6510* %vr6 to i8*

	; addrof vr9
	%vr11 = ptrtoint i8* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i8*

	; memclear vr12
	%vr13 = bitcast i8* %vr12 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr13, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 9
	%vr15 = load %CPU6510*, %CPU6510** %THIS.219
	%vr16 = inttoptr i64 9 to %CPU6510*
	%vr14 = add %CPU6510* %vr15, %vr16
	%vr17 = bitcast %CPU6510* %vr14 to i8*

	; addrof vr17
	%vr19 = ptrtoint i8* %vr17 to i64
	%vr20 = inttoptr i64 %vr19 to i8*

	; memclear vr20
	%vr21 = bitcast i8* %vr20 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 10
	%vr23 = load %CPU6510*, %CPU6510** %THIS.219
	%vr24 = inttoptr i64 10 to %CPU6510*
	%vr22 = add %CPU6510* %vr23, %vr24
	%vr25 = bitcast %CPU6510* %vr22 to i8*

	; addrof vr25
	%vr27 = ptrtoint i8* %vr25 to i64
	%vr28 = inttoptr i64 %vr27 to i8*

	; memclear vr28
	%vr29 = bitcast i8* %vr28 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr29, i8 0, i32 1, i32 1, i1 false )

	; bop THIS + 12
	%vr31 = load %CPU6510*, %CPU6510** %THIS.219
	%vr32 = inttoptr i64 12 to %CPU6510*
	%vr30 = add %CPU6510* %vr31, %vr32
	%vr33 = bitcast %CPU6510* %vr30 to i16*

	; addrof vr33
	%vr35 = ptrtoint i16* %vr33 to i64
	%vr36 = inttoptr i64 %vr35 to i16*

	; memclear vr36
	%vr37 = bitcast i16* %vr36 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr37, i8 0, i32 2, i32 1, i1 false )

	; bop THIS + 14
	%vr39 = load %CPU6510*, %CPU6510** %THIS.219
	%vr40 = inttoptr i64 14 to %CPU6510*
	%vr38 = add %CPU6510* %vr39, %vr40
	%vr41 = bitcast %CPU6510* %vr38 to i16*

	; addrof vr41
	%vr43 = ptrtoint i16* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i16*

	; memclear vr44
	%vr45 = bitcast i16* %vr44 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr45, i8 0, i32 2, i32 1, i1 false )

	; bop THIS + 16
	%vr47 = load %CPU6510*, %CPU6510** %THIS.219
	%vr48 = inttoptr i64 16 to %CPU6510*
	%vr46 = add %CPU6510* %vr47, %vr48
	%vr49 = bitcast %CPU6510* %vr46 to %MEMORY_T**

	; addrof vr49
	%vr51 = ptrtoint %MEMORY_T** %vr49 to i64
	%vr52 = inttoptr i64 %vr51 to %MEMORY_T**

	; memclear vr52
	%vr53 = bitcast %MEMORY_T** %vr52 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr53, i8 0, i32 8, i32 1, i1 false )

	; bop THIS + 24
	%vr55 = load %CPU6510*, %CPU6510** %THIS.219
	%vr56 = inttoptr i64 24 to %CPU6510*
	%vr54 = add %CPU6510* %vr55, %vr56
	%vr57 = bitcast %CPU6510* %vr54 to %OPCODE*

	; addrof vr57
	%vr59 = ptrtoint %OPCODE* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to %OPCODE*

	; memclear vr60
	%vr61 = bitcast %OPCODE* %vr60 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr61, i8 0, i32 56, i32 1, i1 false )

	; bop THIS + 80
	%vr63 = load %CPU6510*, %CPU6510** %THIS.219
	%vr64 = inttoptr i64 80 to %CPU6510*
	%vr62 = add %CPU6510* %vr63, %vr64
	%vr65 = bitcast %CPU6510* %vr62 to %OPCODE*

	; addrof vr65
	%vr67 = ptrtoint %OPCODE* %vr65 to i64
	%vr68 = inttoptr i64 %vr67 to %OPCODE*

	; memclear vr68
	%vr69 = bitcast %OPCODE* %vr68 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr69, i8 0, i32 14336, i32 1, i1 false )

	; bop THIS + 14416
	%vr71 = load %CPU6510*, %CPU6510** %THIS.219
	%vr72 = inttoptr i64 14416 to %CPU6510*
	%vr70 = add %CPU6510* %vr71, %vr72
	%vr73 = bitcast %CPU6510* %vr70 to %FBSTRING*

	; addrof vr73
	%vr75 = ptrtoint %FBSTRING* %vr73 to i64
	%vr76 = inttoptr i64 %vr75 to %FBSTRING*

	; memclear vr76
	%vr77 = bitcast %FBSTRING* %vr76 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr77, i8 0, i32 312, i32 1, i1 false )

	; deref THIS
	%vr79 = load %CPU6510*, %CPU6510** %THIS.219

	; store vr79+16 := LPMEM
	%vr80 = load %MEMORY_T*, %MEMORY_T** %LPMEM.220
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 16
	%vr83 = inttoptr i64 %vr82 to %MEMORY_T**
	store %MEMORY_T* %vr80, %MEMORY_T** %vr83
	%vr84 = bitcast %__FB_DATADESC$* @.Lt_117F to i8*

	; call fb_DataRestore()
	; arg vr84
	call void @fb_DataRestore( i8* %vr84 )

	; localvar I
	%I.221 = alloca i64

	; store I := 0
	store i64 0, i64* %I.221

	; label .Lt_1184
	br label %.Lt_1184
.Lt_1184:

	; localvar LT_1185
	%LT_1185.222 = alloca %OPCODE*

	; bop I * 56
	%vr86 = load i64, i64* %I.221
	%vr85 = mul i64 %vr86, 56

	; bop THIS + vr85
	%vr88 = load %CPU6510*, %CPU6510** %THIS.219
	%vr89 = inttoptr i64 %vr85 to %CPU6510*
	%vr87 = add %CPU6510* %vr88, %vr89

	; addrof vr87+80
	%vr91 = ptrtoint %CPU6510* %vr87 to i64
	%vr92 = add i64 %vr91, 80
	%vr93 = inttoptr i64 %vr92 to %OPCODE*

	; store LT_1185 := vr93
	store %OPCODE* %vr93, %OPCODE** %LT_1185.222

	; deref LT_1185
	%vr95 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr95
	%vr97 = ptrtoint %OPCODE* %vr95 to i64
	%vr98 = inttoptr i64 %vr97 to i64*

	; call fb_DataReadULongint()
	; arg vr98
	call void @fb_DataReadULongint( i64* %vr98 )

	; deref LT_1185
	%vr100 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr100+8
	%vr102 = ptrtoint %OPCODE* %vr100 to i64
	%vr103 = add i64 %vr102, 8
	%vr104 = inttoptr i64 %vr103 to i8*
	%vr105 = bitcast i8* %vr104 to i8*

	; call fb_DataReadStr()
	; arg vr105
	; arg 4
	; arg 0
	call void @fb_DataReadStr( i8* %vr105, i64 4, i32 0 )

	; deref LT_1185
	%vr109 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr109+16
	%vr111 = ptrtoint %OPCODE* %vr109 to i64
	%vr112 = add i64 %vr111, 16
	%vr113 = inttoptr i64 %vr112 to i64*

	; call fb_DataReadLongint()
	; arg vr113
	call void @fb_DataReadLongint( i64* %vr113 )

	; deref LT_1185
	%vr115 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr115+24
	%vr117 = ptrtoint %OPCODE* %vr115 to i64
	%vr118 = add i64 %vr117, 24
	%vr119 = inttoptr i64 %vr118 to i64*

	; call fb_DataReadLongint()
	; arg vr119
	call void @fb_DataReadLongint( i64* %vr119 )

	; deref LT_1185
	%vr121 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr121+32
	%vr123 = ptrtoint %OPCODE* %vr121 to i64
	%vr124 = add i64 %vr123, 32
	%vr125 = inttoptr i64 %vr124 to i64*

	; call fb_DataReadLongint()
	; arg vr125
	call void @fb_DataReadLongint( i64* %vr125 )

	; deref LT_1185
	%vr127 = load %OPCODE*, %OPCODE** %LT_1185.222

	; addrof vr127+48
	%vr129 = ptrtoint %OPCODE* %vr127 to i64
	%vr130 = add i64 %vr129, 48
	%vr131 = inttoptr i64 %vr130 to void ( %CPU6510* )**
	%vr132 = bitcast void ( %CPU6510* )** %vr131 to i64*

	; call fb_DataReadLongint()
	; arg vr132
	call void @fb_DataReadLongint( i64* %vr132 )

	; label .Lt_1182
	br label %.Lt_1182
.Lt_1182:

	; bop I + 1
	%vr134 = load i64, i64* %I.221
	%vr133 = add i64 %vr134, 1

	; store I := vr133
	store i64 %vr133, i64* %I.221

	; label .Lt_1181
	br label %.Lt_1181
.Lt_1181:

	; branchbop I <= 255
	%vr136 = load i64, i64* %I.221
	%vr135 = icmp sle i64 %vr136, 255
	br i1 %vr135, label %.Lt_1184, label %.Lt_118D
.Lt_118D:

	; label .Lt_1183
	br label %.Lt_1183
.Lt_1183:
	%vr137 = bitcast %__FB_DATADESC$* @.Lt_1187 to i8*

	; call fb_DataRestore()
	; arg vr137
	call void @fb_DataRestore( i8* %vr137 )

	; localvar I
	%I.223 = alloca i64

	; store I := 0
	store i64 0, i64* %I.223

	; label .Lt_118C
	br label %.Lt_118C
.Lt_118C:

	; bop I * 24
	%vr139 = load i64, i64* %I.223
	%vr138 = mul i64 %vr139, 24

	; bop THIS + vr138
	%vr141 = load %CPU6510*, %CPU6510** %THIS.219
	%vr142 = inttoptr i64 %vr138 to %CPU6510*
	%vr140 = add %CPU6510* %vr141, %vr142

	; addrof vr140+14416
	%vr144 = ptrtoint %CPU6510* %vr140 to i64
	%vr145 = add i64 %vr144, 14416
	%vr146 = inttoptr i64 %vr145 to %FBSTRING*
	%vr147 = bitcast %FBSTRING* %vr146 to i8*

	; call fb_DataReadStr()
	; arg vr147
	; arg -1
	; arg 0
	call void @fb_DataReadStr( i8* %vr147, i64 -1, i32 0 )

	; label .Lt_118A
	br label %.Lt_118A
.Lt_118A:

	; bop I + 1
	%vr151 = load i64, i64* %I.223
	%vr150 = add i64 %vr151, 1

	; store I := vr150
	store i64 %vr150, i64* %I.223

	; label .Lt_1189
	br label %.Lt_1189
.Lt_1189:

	; branchbop I <= 12
	%vr153 = load i64, i64* %I.223
	%vr152 = icmp sle i64 %vr153, 12
	br i1 %vr152, label %.Lt_118C, label %.Lt_118E
.Lt_118E:

	; label .Lt_118B
	br label %.Lt_118B
.Lt_118B:

	; deref THIS
	%vr155 = load %CPU6510*, %CPU6510** %THIS.219

	; store vr155+15 := 1
	%vr156 = ptrtoint %CPU6510* %vr155 to i64
	%vr157 = add i64 %vr156, 15
	%vr158 = inttoptr i64 %vr157 to i8*
	store i8 trunc (i64 1 to i8), i8* %vr158

	; deref THIS
	%vr160 = load %CPU6510*, %CPU6510** %THIS.219

	; store vr160+12 := 64738
	%vr161 = ptrtoint %CPU6510* %vr160 to i64
	%vr162 = add i64 %vr161, 12
	%vr163 = inttoptr i64 %vr162 to i16*
	store i16 trunc (i64 64738 to i16), i16* %vr163

	; label .Lt_117D
	br label %.Lt_117D
.Lt_117D:
	ret void
}

define void @_ZN7CPU6510D1Ev( %CPU6510* %THIS.224$ ) nounwind
{

	; paramvar THIS
	%THIS.224 = alloca %CPU6510*
	store %CPU6510* %THIS.224$, %CPU6510** %THIS.224

	; localvar Lt_1191
	%CPU6510.FBARRAY1 = type { %FBSTRING*, %FBSTRING*, i64, i64, i64, [1 x %__FB_ARRAYDIMTB$] }
	%Lt_1191.225 = alloca %CPU6510.FBARRAY1

	; label .Lt_118F
	br label %.Lt_118F
.Lt_118F:

	; label .Lt_1190
	br label %.Lt_1190
.Lt_1190:

	; addrof Lt_1191

	; bop THIS + 14416
	%vr2 = load %CPU6510*, %CPU6510** %THIS.224
	%vr3 = inttoptr i64 14416 to %CPU6510*
	%vr1 = add %CPU6510* %vr2, %vr3
	%vr4 = bitcast %CPU6510* %vr1 to %FBSTRING*

	; addrof vr4
	%vr6 = ptrtoint %FBSTRING* %vr4 to i64
	%vr7 = inttoptr i64 %vr6 to %FBSTRING*

	; store Lt_1191 := vr7
	%vr8 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to %FBSTRING**
	store %FBSTRING* %vr7, %FBSTRING** %vr8

	; bop THIS + 14416
	%vr10 = load %CPU6510*, %CPU6510** %THIS.224
	%vr11 = inttoptr i64 14416 to %CPU6510*
	%vr9 = add %CPU6510* %vr10, %vr11
	%vr12 = bitcast %CPU6510* %vr9 to %FBSTRING*

	; addrof vr12
	%vr14 = ptrtoint %FBSTRING* %vr12 to i64
	%vr15 = inttoptr i64 %vr14 to %FBSTRING*

	; store Lt_1191+8 := vr15
	%vr16 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to %FBSTRING**
	%vr17 = ptrtoint %FBSTRING** %vr16 to i64
	%vr18 = add i64 %vr17, 8
	%vr19 = inttoptr i64 %vr18 to %FBSTRING**
	store %FBSTRING* %vr15, %FBSTRING** %vr19

	; store Lt_1191+16 := 312
	%vr20 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr21 = ptrtoint i64* %vr20 to i64
	%vr22 = add i64 %vr21, 16
	%vr23 = inttoptr i64 %vr22 to i64*
	store i64 312, i64* %vr23

	; store Lt_1191+24 := 24
	%vr24 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr25 = ptrtoint i64* %vr24 to i64
	%vr26 = add i64 %vr25, 24
	%vr27 = inttoptr i64 %vr26 to i64*
	store i64 24, i64* %vr27

	; store Lt_1191+32 := 1
	%vr28 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr29 = ptrtoint i64* %vr28 to i64
	%vr30 = add i64 %vr29, 32
	%vr31 = inttoptr i64 %vr30 to i64*
	store i64 1, i64* %vr31

	; store Lt_1191+40 := 13
	%vr32 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr33 = ptrtoint i64* %vr32 to i64
	%vr34 = add i64 %vr33, 40
	%vr35 = inttoptr i64 %vr34 to i64*
	store i64 13, i64* %vr35

	; store Lt_1191+48 := 0
	%vr36 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr37 = ptrtoint i64* %vr36 to i64
	%vr38 = add i64 %vr37, 48
	%vr39 = inttoptr i64 %vr38 to i64*
	store i64 0, i64* %vr39

	; store Lt_1191+56 := 12
	%vr40 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to i64*
	%vr41 = ptrtoint i64* %vr40 to i64
	%vr42 = add i64 %vr41, 56
	%vr43 = inttoptr i64 %vr42 to i64*
	store i64 12, i64* %vr43

	; call fb_ArrayDestructStr()
	; arg Lt_1191
	%vr44 = bitcast %CPU6510.FBARRAY1* %Lt_1191.225 to %FBARRAY*
	call void @fb_ArrayDestructStr( %FBARRAY* %vr44 )
	ret void
}

define %FBSTRING* @_ZN7CPU6510cv8FBSTRINGEv( %CPU6510* %THIS.226$ ) nounwind
{

	; paramvar THIS
	%THIS.226 = alloca %CPU6510*
	store %CPU6510* %THIS.226$, %CPU6510** %THIS.226

	; localvar fb$result
	%fb$result.227 = alloca %FBSTRING

	; localvar LT_11A1
	%LT_11A1.228 = alloca %FBSTRING

	; localvar LT_11A2
	%LT_11A2.229 = alloca %FBSTRING

	; localvar LT_11A3
	%LT_11A3.230 = alloca %FBSTRING

	; localvar LT_11A4
	%LT_11A4.231 = alloca %FBSTRING

	; localvar LT_11A5
	%LT_11A5.232 = alloca %FBSTRING

	; localvar LT_11A6
	%LT_11A6.233 = alloca %FBSTRING

	; localvar LT_11A7
	%LT_11A7.234 = alloca %FBSTRING

	; localvar LT_11A8
	%LT_11A8.235 = alloca %FBSTRING

	; localvar LT_11A9
	%LT_11A9.236 = alloca %FBSTRING

	; localvar LT_11AA
	%LT_11AA.237 = alloca %FBSTRING

	; localvar LT_11AB
	%LT_11AB.238 = alloca %FBSTRING

	; localvar LT_11AC
	%LT_11AC.239 = alloca %FBSTRING

	; localvar LT_11AD
	%LT_11AD.240 = alloca %FBSTRING

	; localvar LT_11AE
	%LT_11AE.241 = alloca %FBSTRING

	; localvar LT_11AF
	%LT_11AF.242 = alloca %FBSTRING

	; localvar LT_11B0
	%LT_11B0.243 = alloca %FBSTRING

	; localvar LT_11B1
	%LT_11B1.244 = alloca %FBSTRING

	; localvar LT_11B2
	%LT_11B2.245 = alloca %FBSTRING

	; localvar LT_11B3
	%LT_11B3.246 = alloca %FBSTRING

	; localvar LT_11B4
	%LT_11B4.247 = alloca %FBSTRING

	; localvar LT_11B5
	%LT_11B5.248 = alloca %FBSTRING

	; localvar LT_11B6
	%LT_11B6.249 = alloca %FBSTRING

	; localvar LT_11B7
	%LT_11B7.250 = alloca %FBSTRING

	; localvar LT_11B8
	%LT_11B8.251 = alloca %FBSTRING

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast %FBSTRING* %fb$result.227 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 24, i32 1, i1 false )

	; label .Lt_1192
	br label %.Lt_1192
.Lt_1192:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; call fb_ULongintToStr()
	; arg vr5
	%vr11 = call %FBSTRING* @fb_ULongintToStr( i64 %vr5 )
	%vr13 = bitcast i8* bitcast ([4 x i8]* @Lt_11A0 to i8*) to i8*

	; deref THIS
	%vr15 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr15 SHR 1
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr22 = bitcast i64 1 to i64
	%vr17 = ashr i64 %vr20, %vr22

	; bop vr17 AND 1
	%vr23 = and i64 %vr17, 1

	; call fb_ULongintToStr()
	; arg vr23
	%vr25 = call %FBSTRING* @fb_ULongintToStr( i64 %vr23 )
	%vr27 = bitcast i8* bitcast ([4 x i8]* @Lt_119F to i8*) to i8*

	; deref THIS
	%vr29 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr29 SHR 2
	%vr32 = ptrtoint %CPU6510* %vr29 to i64
	%vr33 = inttoptr i64 %vr32 to i64*
	%vr34 = load i64, i64* %vr33
	%vr36 = bitcast i64 2 to i64
	%vr31 = ashr i64 %vr34, %vr36

	; bop vr31 AND 1
	%vr37 = and i64 %vr31, 1

	; call fb_ULongintToStr()
	; arg vr37
	%vr39 = call %FBSTRING* @fb_ULongintToStr( i64 %vr37 )
	%vr41 = bitcast i8* bitcast ([4 x i8]* @Lt_119E to i8*) to i8*

	; deref THIS
	%vr43 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr43 SHR 3
	%vr46 = ptrtoint %CPU6510* %vr43 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	%vr48 = load i64, i64* %vr47
	%vr50 = bitcast i64 3 to i64
	%vr45 = ashr i64 %vr48, %vr50

	; bop vr45 AND 1
	%vr51 = and i64 %vr45, 1

	; call fb_ULongintToStr()
	; arg vr51
	%vr53 = call %FBSTRING* @fb_ULongintToStr( i64 %vr51 )
	%vr55 = bitcast i8* bitcast ([4 x i8]* @Lt_119D to i8*) to i8*

	; deref THIS
	%vr57 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr57 SHR 4
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr64 = bitcast i64 4 to i64
	%vr59 = ashr i64 %vr62, %vr64

	; bop vr59 AND 1
	%vr65 = and i64 %vr59, 1

	; call fb_ULongintToStr()
	; arg vr65
	%vr67 = call %FBSTRING* @fb_ULongintToStr( i64 %vr65 )
	%vr69 = bitcast i8* bitcast ([4 x i8]* @Lt_119C to i8*) to i8*
	%vr70 = bitcast i8* bitcast ([3 x i8]* @Lt_119B to i8*) to i8*

	; deref THIS
	%vr72 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr72 SHR 6
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr79 = bitcast i64 6 to i64
	%vr74 = ashr i64 %vr77, %vr79

	; bop vr74 AND 1
	%vr80 = and i64 %vr74, 1

	; call fb_ULongintToStr()
	; arg vr80
	%vr82 = call %FBSTRING* @fb_ULongintToStr( i64 %vr80 )
	%vr84 = bitcast i8* bitcast ([4 x i8]* @Lt_119A to i8*) to i8*

	; deref THIS
	%vr86 = load %CPU6510*, %CPU6510** %THIS.226

	; bop vr86 SHR 7
	%vr89 = ptrtoint %CPU6510* %vr86 to i64
	%vr90 = inttoptr i64 %vr89 to i64*
	%vr91 = load i64, i64* %vr90
	%vr93 = bitcast i64 7 to i64
	%vr88 = ashr i64 %vr91, %vr93

	; bop vr88 AND 1
	%vr94 = and i64 %vr88, 1

	; call fb_ULongintToStr()
	; arg vr94
	%vr96 = call %FBSTRING* @fb_ULongintToStr( i64 %vr94 )
	%vr98 = bitcast i8* bitcast ([4 x i8]* @Lt_1199 to i8*) to i8*

	; deref THIS
	%vr100 = load %CPU6510*, %CPU6510** %THIS.226

	; call fb_HEXEx_b()
	; arg vr100+14
	%vr102 = ptrtoint %CPU6510* %vr100 to i64
	%vr103 = add i64 %vr102, 14
	%vr104 = inttoptr i64 %vr103 to i8*
	%vr105 = load i8, i8* %vr104
	; arg 2
	%vr101 = call %FBSTRING* @fb_HEXEx_b( i8 %vr105, i32 2 )
	%vr108 = bitcast i8* bitcast ([4 x i8]* @Lt_1198 to i8*) to i8*

	; deref THIS
	%vr110 = load %CPU6510*, %CPU6510** %THIS.226

	; call fb_HEXEx_b()
	; arg vr110+10
	%vr112 = ptrtoint %CPU6510* %vr110 to i64
	%vr113 = add i64 %vr112, 10
	%vr114 = inttoptr i64 %vr113 to i8*
	%vr115 = load i8, i8* %vr114
	; arg 2
	%vr111 = call %FBSTRING* @fb_HEXEx_b( i8 %vr115, i32 2 )
	%vr118 = bitcast i8* bitcast ([4 x i8]* @Lt_1197 to i8*) to i8*

	; deref THIS
	%vr120 = load %CPU6510*, %CPU6510** %THIS.226

	; call fb_HEXEx_b()
	; arg vr120+9
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = add i64 %vr122, 9
	%vr124 = inttoptr i64 %vr123 to i8*
	%vr125 = load i8, i8* %vr124
	; arg 2
	%vr121 = call %FBSTRING* @fb_HEXEx_b( i8 %vr125, i32 2 )
	%vr128 = bitcast i8* bitcast ([4 x i8]* @Lt_1196 to i8*) to i8*

	; deref THIS
	%vr130 = load %CPU6510*, %CPU6510** %THIS.226

	; call fb_HEXEx_b()
	; arg vr130+8
	%vr132 = ptrtoint %CPU6510* %vr130 to i64
	%vr133 = add i64 %vr132, 8
	%vr134 = inttoptr i64 %vr133 to i8*
	%vr135 = load i8, i8* %vr134
	; arg 2
	%vr131 = call %FBSTRING* @fb_HEXEx_b( i8 %vr135, i32 2 )
	%vr138 = bitcast i8* bitcast ([4 x i8]* @Lt_1195 to i8*) to i8*

	; deref THIS
	%vr140 = load %CPU6510*, %CPU6510** %THIS.226

	; call fb_HEXEx_s()
	; arg vr140+12
	%vr142 = ptrtoint %CPU6510* %vr140 to i64
	%vr143 = add i64 %vr142, 12
	%vr144 = inttoptr i64 %vr143 to i16*
	%vr145 = load i16, i16* %vr144
	; arg 4
	%vr141 = call %FBSTRING* @fb_HEXEx_s( i16 %vr145, i32 4 )
	%vr148 = bitcast i8* bitcast ([4 x i8]* @Lt_1194 to i8*) to i8*

	; addrof LT_11A1

	; memclear LT_11A1
	%vr150 = bitcast %FBSTRING* %LT_11A1.228 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr150, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A1

	; call fb_StrConcat()
	; arg LT_11A1
	; arg vr148
	; arg 4
	; arg vr141
	%vr154 = bitcast %FBSTRING* %vr141 to i8*
	; arg -1
	%vr152 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A1.228, i8* %vr148, i64 4, i8* %vr154, i64 -1 )

	; addrof LT_11A2

	; memclear LT_11A2
	%vr157 = bitcast %FBSTRING* %LT_11A2.229 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr157, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A2

	; call fb_StrConcat()
	; arg LT_11A2
	; arg vr152
	%vr160 = bitcast %FBSTRING* %vr152 to i8*
	; arg -1
	; arg vr138
	; arg 4
	%vr159 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A2.229, i8* %vr160, i64 -1, i8* %vr138, i64 4 )

	; addrof LT_11A3

	; memclear LT_11A3
	%vr164 = bitcast %FBSTRING* %LT_11A3.230 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr164, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A3

	; call fb_StrConcat()
	; arg LT_11A3
	; arg vr159
	%vr167 = bitcast %FBSTRING* %vr159 to i8*
	; arg -1
	; arg vr131
	%vr169 = bitcast %FBSTRING* %vr131 to i8*
	; arg -1
	%vr166 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A3.230, i8* %vr167, i64 -1, i8* %vr169, i64 -1 )

	; addrof LT_11A4

	; memclear LT_11A4
	%vr172 = bitcast %FBSTRING* %LT_11A4.231 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr172, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A4

	; call fb_StrConcat()
	; arg LT_11A4
	; arg vr166
	%vr175 = bitcast %FBSTRING* %vr166 to i8*
	; arg -1
	; arg vr128
	; arg 4
	%vr174 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A4.231, i8* %vr175, i64 -1, i8* %vr128, i64 4 )

	; addrof LT_11A5

	; memclear LT_11A5
	%vr179 = bitcast %FBSTRING* %LT_11A5.232 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr179, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A5

	; call fb_StrConcat()
	; arg LT_11A5
	; arg vr174
	%vr182 = bitcast %FBSTRING* %vr174 to i8*
	; arg -1
	; arg vr121
	%vr184 = bitcast %FBSTRING* %vr121 to i8*
	; arg -1
	%vr181 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A5.232, i8* %vr182, i64 -1, i8* %vr184, i64 -1 )

	; addrof LT_11A6

	; memclear LT_11A6
	%vr187 = bitcast %FBSTRING* %LT_11A6.233 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr187, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A6

	; call fb_StrConcat()
	; arg LT_11A6
	; arg vr181
	%vr190 = bitcast %FBSTRING* %vr181 to i8*
	; arg -1
	; arg vr118
	; arg 4
	%vr189 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A6.233, i8* %vr190, i64 -1, i8* %vr118, i64 4 )

	; addrof LT_11A7

	; memclear LT_11A7
	%vr194 = bitcast %FBSTRING* %LT_11A7.234 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr194, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A7

	; call fb_StrConcat()
	; arg LT_11A7
	; arg vr189
	%vr197 = bitcast %FBSTRING* %vr189 to i8*
	; arg -1
	; arg vr111
	%vr199 = bitcast %FBSTRING* %vr111 to i8*
	; arg -1
	%vr196 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A7.234, i8* %vr197, i64 -1, i8* %vr199, i64 -1 )

	; addrof LT_11A8

	; memclear LT_11A8
	%vr202 = bitcast %FBSTRING* %LT_11A8.235 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr202, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A8

	; call fb_StrConcat()
	; arg LT_11A8
	; arg vr196
	%vr205 = bitcast %FBSTRING* %vr196 to i8*
	; arg -1
	; arg vr108
	; arg 4
	%vr204 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A8.235, i8* %vr205, i64 -1, i8* %vr108, i64 4 )

	; addrof LT_11A9

	; memclear LT_11A9
	%vr209 = bitcast %FBSTRING* %LT_11A9.236 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr209, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11A9

	; call fb_StrConcat()
	; arg LT_11A9
	; arg vr204
	%vr212 = bitcast %FBSTRING* %vr204 to i8*
	; arg -1
	; arg vr101
	%vr214 = bitcast %FBSTRING* %vr101 to i8*
	; arg -1
	%vr211 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11A9.236, i8* %vr212, i64 -1, i8* %vr214, i64 -1 )

	; addrof LT_11AA

	; memclear LT_11AA
	%vr217 = bitcast %FBSTRING* %LT_11AA.237 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr217, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AA

	; call fb_StrConcat()
	; arg LT_11AA
	; arg vr211
	%vr220 = bitcast %FBSTRING* %vr211 to i8*
	; arg -1
	; arg vr98
	; arg 4
	%vr219 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AA.237, i8* %vr220, i64 -1, i8* %vr98, i64 4 )

	; addrof LT_11AB

	; memclear LT_11AB
	%vr224 = bitcast %FBSTRING* %LT_11AB.238 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr224, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AB

	; call fb_StrConcat()
	; arg LT_11AB
	; arg vr219
	%vr227 = bitcast %FBSTRING* %vr219 to i8*
	; arg -1
	; arg vr96
	%vr229 = bitcast %FBSTRING* %vr96 to i8*
	; arg -1
	%vr226 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AB.238, i8* %vr227, i64 -1, i8* %vr229, i64 -1 )

	; addrof LT_11AC

	; memclear LT_11AC
	%vr232 = bitcast %FBSTRING* %LT_11AC.239 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr232, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AC

	; call fb_StrConcat()
	; arg LT_11AC
	; arg vr226
	%vr235 = bitcast %FBSTRING* %vr226 to i8*
	; arg -1
	; arg vr84
	; arg 4
	%vr234 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AC.239, i8* %vr235, i64 -1, i8* %vr84, i64 4 )

	; addrof LT_11AD

	; memclear LT_11AD
	%vr239 = bitcast %FBSTRING* %LT_11AD.240 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr239, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AD

	; call fb_StrConcat()
	; arg LT_11AD
	; arg vr234
	%vr242 = bitcast %FBSTRING* %vr234 to i8*
	; arg -1
	; arg vr82
	%vr244 = bitcast %FBSTRING* %vr82 to i8*
	; arg -1
	%vr241 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AD.240, i8* %vr242, i64 -1, i8* %vr244, i64 -1 )

	; addrof LT_11AE

	; memclear LT_11AE
	%vr247 = bitcast %FBSTRING* %LT_11AE.241 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr247, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AE

	; call fb_StrConcat()
	; arg LT_11AE
	; arg vr241
	%vr250 = bitcast %FBSTRING* %vr241 to i8*
	; arg -1
	; arg vr70
	; arg 3
	%vr249 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AE.241, i8* %vr250, i64 -1, i8* %vr70, i64 3 )

	; addrof LT_11AF

	; memclear LT_11AF
	%vr254 = bitcast %FBSTRING* %LT_11AF.242 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr254, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11AF

	; call fb_StrConcat()
	; arg LT_11AF
	; arg vr249
	%vr257 = bitcast %FBSTRING* %vr249 to i8*
	; arg -1
	; arg vr69
	; arg 4
	%vr256 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11AF.242, i8* %vr257, i64 -1, i8* %vr69, i64 4 )

	; addrof LT_11B0

	; memclear LT_11B0
	%vr261 = bitcast %FBSTRING* %LT_11B0.243 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr261, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B0

	; call fb_StrConcat()
	; arg LT_11B0
	; arg vr256
	%vr264 = bitcast %FBSTRING* %vr256 to i8*
	; arg -1
	; arg vr67
	%vr266 = bitcast %FBSTRING* %vr67 to i8*
	; arg -1
	%vr263 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B0.243, i8* %vr264, i64 -1, i8* %vr266, i64 -1 )

	; addrof LT_11B1

	; memclear LT_11B1
	%vr269 = bitcast %FBSTRING* %LT_11B1.244 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr269, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B1

	; call fb_StrConcat()
	; arg LT_11B1
	; arg vr263
	%vr272 = bitcast %FBSTRING* %vr263 to i8*
	; arg -1
	; arg vr55
	; arg 4
	%vr271 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B1.244, i8* %vr272, i64 -1, i8* %vr55, i64 4 )

	; addrof LT_11B2

	; memclear LT_11B2
	%vr276 = bitcast %FBSTRING* %LT_11B2.245 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr276, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B2

	; call fb_StrConcat()
	; arg LT_11B2
	; arg vr271
	%vr279 = bitcast %FBSTRING* %vr271 to i8*
	; arg -1
	; arg vr53
	%vr281 = bitcast %FBSTRING* %vr53 to i8*
	; arg -1
	%vr278 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B2.245, i8* %vr279, i64 -1, i8* %vr281, i64 -1 )

	; addrof LT_11B3

	; memclear LT_11B3
	%vr284 = bitcast %FBSTRING* %LT_11B3.246 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr284, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B3

	; call fb_StrConcat()
	; arg LT_11B3
	; arg vr278
	%vr287 = bitcast %FBSTRING* %vr278 to i8*
	; arg -1
	; arg vr41
	; arg 4
	%vr286 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B3.246, i8* %vr287, i64 -1, i8* %vr41, i64 4 )

	; addrof LT_11B4

	; memclear LT_11B4
	%vr291 = bitcast %FBSTRING* %LT_11B4.247 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr291, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B4

	; call fb_StrConcat()
	; arg LT_11B4
	; arg vr286
	%vr294 = bitcast %FBSTRING* %vr286 to i8*
	; arg -1
	; arg vr39
	%vr296 = bitcast %FBSTRING* %vr39 to i8*
	; arg -1
	%vr293 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B4.247, i8* %vr294, i64 -1, i8* %vr296, i64 -1 )

	; addrof LT_11B5

	; memclear LT_11B5
	%vr299 = bitcast %FBSTRING* %LT_11B5.248 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr299, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B5

	; call fb_StrConcat()
	; arg LT_11B5
	; arg vr293
	%vr302 = bitcast %FBSTRING* %vr293 to i8*
	; arg -1
	; arg vr27
	; arg 4
	%vr301 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B5.248, i8* %vr302, i64 -1, i8* %vr27, i64 4 )

	; addrof LT_11B6

	; memclear LT_11B6
	%vr306 = bitcast %FBSTRING* %LT_11B6.249 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr306, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B6

	; call fb_StrConcat()
	; arg LT_11B6
	; arg vr301
	%vr309 = bitcast %FBSTRING* %vr301 to i8*
	; arg -1
	; arg vr25
	%vr311 = bitcast %FBSTRING* %vr25 to i8*
	; arg -1
	%vr308 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B6.249, i8* %vr309, i64 -1, i8* %vr311, i64 -1 )

	; addrof LT_11B7

	; memclear LT_11B7
	%vr314 = bitcast %FBSTRING* %LT_11B7.250 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr314, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B7

	; call fb_StrConcat()
	; arg LT_11B7
	; arg vr308
	%vr317 = bitcast %FBSTRING* %vr308 to i8*
	; arg -1
	; arg vr13
	; arg 4
	%vr316 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B7.250, i8* %vr317, i64 -1, i8* %vr13, i64 4 )

	; addrof LT_11B8

	; memclear LT_11B8
	%vr321 = bitcast %FBSTRING* %LT_11B8.251 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr321, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_11B8

	; call fb_StrConcat()
	; arg LT_11B8
	; arg vr316
	%vr324 = bitcast %FBSTRING* %vr316 to i8*
	; arg -1
	; arg vr11
	%vr326 = bitcast %FBSTRING* %vr11 to i8*
	; arg -1
	%vr323 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_11B8.251, i8* %vr324, i64 -1, i8* %vr326, i64 -1 )

	; addrof fb$result
	%vr329 = bitcast %FBSTRING* %fb$result.227 to i8*

	; call fb_StrInit()
	; arg vr329
	; arg -1
	; arg vr323
	%vr332 = bitcast %FBSTRING* %vr323 to i8*
	; arg -1
	; arg 0
	%vr330 = call %FBSTRING* @fb_StrInit( i8* %vr329, i64 -1, i8* %vr332, i64 -1, i32 0 )

	; goto .Lt_1193
	br label %.Lt_1193
.Lt_11B9:

	; label .Lt_1193
	br label %.Lt_1193
.Lt_1193:

	; addrof fb$result
	%vr336 = bitcast %FBSTRING* %fb$result.227 to %FBSTRING*

	; call fb_StrAllocTempResult()
	; arg vr336
	%vr337 = call %FBSTRING* @fb_StrAllocTempResult( %FBSTRING* %vr336 )
}

define i64 @_ZN7CPU65104TICKEy( %CPU6510* %THIS.252$, i64 %FLG.253$ ) nounwind
{

	; paramvar THIS
	%THIS.252 = alloca %CPU6510*
	store %CPU6510* %THIS.252$, %CPU6510** %THIS.252

	; paramvar FLG
	%FLG.253 = alloca i64
	store i64 %FLG.253$, i64* %FLG.253

	; localvar fb$result
	%fb$result.254 = alloca i64

	; localvar MSG
	%MSG.255 = alloca %FBSTRING

	; localvar V
	%V.256 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.254 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11BA
	br label %.Lt_11BA
.Lt_11BA:

	; addrof MSG

	; memclear MSG
	%vr3 = bitcast %FBSTRING* %MSG.255 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 24, i32 1, i1 false )

	; addrof V

	; memclear V
	%vr5 = bitcast %MULTI* %V.256 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr7 = load %CPU6510*, %CPU6510** %THIS.252

	; addrof vr7+24
	%vr9 = ptrtoint %CPU6510* %vr7 to i64
	%vr10 = add i64 %vr9, 24
	%vr11 = inttoptr i64 %vr10 to %OPCODE*

	; deref THIS
	%vr13 = load %CPU6510*, %CPU6510** %THIS.252

	; conv vr13+12 => vr14
	%vr15 = ptrtoint %CPU6510* %vr13 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr14 = zext i16 %vr18 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.252

	; call READUBYTE()
	; arg vr20+16
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 16
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	; arg vr14
	%vr21 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr25, i64 %vr14 )

	; conv vr21 => vr26
	%vr26 = sext i8 %vr21 to i64

	; bop vr26 * 56
	%vr27 = mul i64 %vr26, 56

	; bop THIS + vr27
	%vr29 = load %CPU6510*, %CPU6510** %THIS.252
	%vr30 = inttoptr i64 %vr27 to %CPU6510*
	%vr28 = add %CPU6510* %vr29, %vr30

	; addrof vr28+80
	%vr32 = ptrtoint %CPU6510* %vr28 to i64
	%vr33 = add i64 %vr32, 80
	%vr34 = inttoptr i64 %vr33 to %OPCODE*

	; memmove vr11 <= vr34
	%vr35 = bitcast %OPCODE* %vr11 to i8*
	%vr36 = bitcast %OPCODE* %vr34 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr35, i8* %vr36, i32 56, i32 1, i1 false )

	; deref THIS
	%vr38 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr38+64 := 0
	%vr39 = ptrtoint %CPU6510* %vr38 to i64
	%vr40 = add i64 %vr39, 64
	%vr41 = inttoptr i64 %vr40 to i16*
	store i16 trunc (i64 0 to i16), i16* %vr41

	; bop TICKS + 1
	%vr43 = load i64, i64* @TICKS.257
	%vr42 = add i64 %vr43, 1

	; store TICKS := vr42
	store i64 %vr42, i64* @TICKS.257

	; deref THIS
	%vr45 = load %CPU6510*, %CPU6510** %THIS.252

	; conv vr45+12 => vr46
	%vr47 = ptrtoint %CPU6510* %vr45 to i64
	%vr48 = add i64 %vr47, 12
	%vr49 = inttoptr i64 %vr48 to i16*
	%vr50 = load i16, i16* %vr49
	%vr46 = sext i16 %vr50 to i64

	; bop vr46 + 1
	%vr51 = add i64 %vr46, 1

	; conv vr51 => vr52
	%vr52 = trunc i64 %vr51 to i16

	; deref THIS
	%vr54 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr54+12 := vr52
	%vr55 = ptrtoint %CPU6510* %vr54 to i64
	%vr56 = add i64 %vr55, 12
	%vr57 = inttoptr i64 %vr56 to i16*
	store i16 %vr52, i16* %vr57

	; localvar LT_11BE
	%LT_11BE.258 = alloca i64

	; deref THIS
	%vr59 = load %CPU6510*, %CPU6510** %THIS.252
	%vr61 = ptrtoint %CPU6510* %vr59 to i64
	%vr62 = add i64 %vr61, 40
	%vr63 = inttoptr i64 %vr62 to i64*
	%vr64 = load i64, i64* %vr63
	%vr60 = bitcast i64 %vr64 to i64

	; store LT_11BE := vr60
	store i64 %vr60, i64* %LT_11BE.258

	; goto .Lt_11BD
	br label %.Lt_11BD
.Lt_11CC:

	; label .Lt_11BF
	br label %.Lt_11BF
.Lt_11BF:

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11CD:

	; label .Lt_11C0
	br label %.Lt_11C0
.Lt_11C0:

	; deref THIS
	%vr66 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr66+72
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 72
	%vr69 = inttoptr i64 %vr68 to void ( %CPU6510* )**
	%vr70 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr69
	; arg THIS
	%vr71 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr70( %CPU6510* %vr71 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11CE:

	; label .Lt_11C1
	br label %.Lt_11C1
.Lt_11C1:

	; call ADR_IMM()
	; arg THIS
	%vr73 = load %CPU6510*, %CPU6510** %THIS.252
	%vr72 = call i64 @_ZN7CPU65107ADR_IMMEv( %CPU6510* %vr73 )

	; conv vr72 => vr74
	%vr74 = trunc i64 %vr72 to i16

	; deref THIS
	%vr76 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr76+64 := vr74
	%vr77 = ptrtoint %CPU6510* %vr76 to i64
	%vr78 = add i64 %vr77, 64
	%vr79 = inttoptr i64 %vr78 to i16*
	store i16 %vr74, i16* %vr79

	; deref THIS
	%vr81 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr81+72
	%vr82 = ptrtoint %CPU6510* %vr81 to i64
	%vr83 = add i64 %vr82, 72
	%vr84 = inttoptr i64 %vr83 to void ( %CPU6510* )**
	%vr85 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr84
	; arg THIS
	%vr86 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr85( %CPU6510* %vr86 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11CF:

	; label .Lt_11C2
	br label %.Lt_11C2
.Lt_11C2:

	; call ADR_ABS()
	; arg THIS
	%vr88 = load %CPU6510*, %CPU6510** %THIS.252
	%vr87 = call i64 @_ZN7CPU65107ADR_ABSEv( %CPU6510* %vr88 )

	; conv vr87 => vr89
	%vr89 = trunc i64 %vr87 to i16

	; deref THIS
	%vr91 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr91+64 := vr89
	%vr92 = ptrtoint %CPU6510* %vr91 to i64
	%vr93 = add i64 %vr92, 64
	%vr94 = inttoptr i64 %vr93 to i16*
	store i16 %vr89, i16* %vr94

	; deref THIS
	%vr96 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr96+72
	%vr97 = ptrtoint %CPU6510* %vr96 to i64
	%vr98 = add i64 %vr97, 72
	%vr99 = inttoptr i64 %vr98 to void ( %CPU6510* )**
	%vr100 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr99
	; arg THIS
	%vr101 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr100( %CPU6510* %vr101 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D0:

	; label .Lt_11C3
	br label %.Lt_11C3
.Lt_11C3:

	; call ADR_ZERO()
	; arg THIS
	%vr103 = load %CPU6510*, %CPU6510** %THIS.252
	%vr102 = call i64 @_ZN7CPU65108ADR_ZEROEv( %CPU6510* %vr103 )

	; conv vr102 => vr104
	%vr104 = trunc i64 %vr102 to i16

	; deref THIS
	%vr106 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr106+64 := vr104
	%vr107 = ptrtoint %CPU6510* %vr106 to i64
	%vr108 = add i64 %vr107, 64
	%vr109 = inttoptr i64 %vr108 to i16*
	store i16 %vr104, i16* %vr109

	; deref THIS
	%vr111 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr111+72
	%vr112 = ptrtoint %CPU6510* %vr111 to i64
	%vr113 = add i64 %vr112, 72
	%vr114 = inttoptr i64 %vr113 to void ( %CPU6510* )**
	%vr115 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr114
	; arg THIS
	%vr116 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr115( %CPU6510* %vr116 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D1:

	; label .Lt_11C4
	br label %.Lt_11C4
.Lt_11C4:

	; call ADR_ZEROX()
	; arg THIS
	%vr118 = load %CPU6510*, %CPU6510** %THIS.252
	%vr117 = call i64 @_ZN7CPU65109ADR_ZEROXEv( %CPU6510* %vr118 )

	; conv vr117 => vr119
	%vr119 = trunc i64 %vr117 to i16

	; deref THIS
	%vr121 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr121+64 := vr119
	%vr122 = ptrtoint %CPU6510* %vr121 to i64
	%vr123 = add i64 %vr122, 64
	%vr124 = inttoptr i64 %vr123 to i16*
	store i16 %vr119, i16* %vr124

	; deref THIS
	%vr126 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr126+72
	%vr127 = ptrtoint %CPU6510* %vr126 to i64
	%vr128 = add i64 %vr127, 72
	%vr129 = inttoptr i64 %vr128 to void ( %CPU6510* )**
	%vr130 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr129
	; arg THIS
	%vr131 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr130( %CPU6510* %vr131 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D2:

	; label .Lt_11C5
	br label %.Lt_11C5
.Lt_11C5:

	; call ADR_ZEROY()
	; arg THIS
	%vr133 = load %CPU6510*, %CPU6510** %THIS.252
	%vr132 = call i64 @_ZN7CPU65109ADR_ZEROYEv( %CPU6510* %vr133 )

	; conv vr132 => vr134
	%vr134 = trunc i64 %vr132 to i16

	; deref THIS
	%vr136 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr136+64 := vr134
	%vr137 = ptrtoint %CPU6510* %vr136 to i64
	%vr138 = add i64 %vr137, 64
	%vr139 = inttoptr i64 %vr138 to i16*
	store i16 %vr134, i16* %vr139

	; deref THIS
	%vr141 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr141+72
	%vr142 = ptrtoint %CPU6510* %vr141 to i64
	%vr143 = add i64 %vr142, 72
	%vr144 = inttoptr i64 %vr143 to void ( %CPU6510* )**
	%vr145 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr144
	; arg THIS
	%vr146 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr145( %CPU6510* %vr146 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D3:

	; label .Lt_11C6
	br label %.Lt_11C6
.Lt_11C6:

	; call ADR_ABSX()
	; arg THIS
	%vr148 = load %CPU6510*, %CPU6510** %THIS.252
	%vr147 = call i64 @_ZN7CPU65108ADR_ABSXEv( %CPU6510* %vr148 )

	; conv vr147 => vr149
	%vr149 = trunc i64 %vr147 to i16

	; deref THIS
	%vr151 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr151+64 := vr149
	%vr152 = ptrtoint %CPU6510* %vr151 to i64
	%vr153 = add i64 %vr152, 64
	%vr154 = inttoptr i64 %vr153 to i16*
	store i16 %vr149, i16* %vr154

	; deref THIS
	%vr156 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr156+72
	%vr157 = ptrtoint %CPU6510* %vr156 to i64
	%vr158 = add i64 %vr157, 72
	%vr159 = inttoptr i64 %vr158 to void ( %CPU6510* )**
	%vr160 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr159
	; arg THIS
	%vr161 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr160( %CPU6510* %vr161 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D4:

	; label .Lt_11C7
	br label %.Lt_11C7
.Lt_11C7:

	; call ADR_ABSY()
	; arg THIS
	%vr163 = load %CPU6510*, %CPU6510** %THIS.252
	%vr162 = call i64 @_ZN7CPU65108ADR_ABSYEv( %CPU6510* %vr163 )

	; conv vr162 => vr164
	%vr164 = trunc i64 %vr162 to i16

	; deref THIS
	%vr166 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr166+64 := vr164
	%vr167 = ptrtoint %CPU6510* %vr166 to i64
	%vr168 = add i64 %vr167, 64
	%vr169 = inttoptr i64 %vr168 to i16*
	store i16 %vr164, i16* %vr169

	; deref THIS
	%vr171 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr171+72
	%vr172 = ptrtoint %CPU6510* %vr171 to i64
	%vr173 = add i64 %vr172, 72
	%vr174 = inttoptr i64 %vr173 to void ( %CPU6510* )**
	%vr175 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr174
	; arg THIS
	%vr176 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr175( %CPU6510* %vr176 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D5:

	; label .Lt_11C8
	br label %.Lt_11C8
.Lt_11C8:

	; call ADR_REL()
	; arg THIS
	%vr178 = load %CPU6510*, %CPU6510** %THIS.252
	%vr177 = call i64 @_ZN7CPU65107ADR_RELEv( %CPU6510* %vr178 )

	; conv vr177 => vr179
	%vr179 = trunc i64 %vr177 to i16

	; deref THIS
	%vr181 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr181+64 := vr179
	%vr182 = ptrtoint %CPU6510* %vr181 to i64
	%vr183 = add i64 %vr182, 64
	%vr184 = inttoptr i64 %vr183 to i16*
	store i16 %vr179, i16* %vr184

	; deref THIS
	%vr186 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr186+72
	%vr187 = ptrtoint %CPU6510* %vr186 to i64
	%vr188 = add i64 %vr187, 72
	%vr189 = inttoptr i64 %vr188 to void ( %CPU6510* )**
	%vr190 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr189
	; arg THIS
	%vr191 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr190( %CPU6510* %vr191 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D6:

	; label .Lt_11C9
	br label %.Lt_11C9
.Lt_11C9:

	; call ADR_INDX()
	; arg THIS
	%vr193 = load %CPU6510*, %CPU6510** %THIS.252
	%vr192 = call i64 @_ZN7CPU65108ADR_INDXEv( %CPU6510* %vr193 )

	; conv vr192 => vr194
	%vr194 = trunc i64 %vr192 to i16

	; deref THIS
	%vr196 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr196+64 := vr194
	%vr197 = ptrtoint %CPU6510* %vr196 to i64
	%vr198 = add i64 %vr197, 64
	%vr199 = inttoptr i64 %vr198 to i16*
	store i16 %vr194, i16* %vr199

	; deref THIS
	%vr201 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr201+72
	%vr202 = ptrtoint %CPU6510* %vr201 to i64
	%vr203 = add i64 %vr202, 72
	%vr204 = inttoptr i64 %vr203 to void ( %CPU6510* )**
	%vr205 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr204
	; arg THIS
	%vr206 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr205( %CPU6510* %vr206 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D7:

	; label .Lt_11CA
	br label %.Lt_11CA
.Lt_11CA:

	; call ADR_INDY()
	; arg THIS
	%vr208 = load %CPU6510*, %CPU6510** %THIS.252
	%vr207 = call i64 @_ZN7CPU65108ADR_INDYEv( %CPU6510* %vr208 )

	; conv vr207 => vr209
	%vr209 = trunc i64 %vr207 to i16

	; deref THIS
	%vr211 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr211+64 := vr209
	%vr212 = ptrtoint %CPU6510* %vr211 to i64
	%vr213 = add i64 %vr212, 64
	%vr214 = inttoptr i64 %vr213 to i16*
	store i16 %vr209, i16* %vr214

	; deref THIS
	%vr216 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr216+72
	%vr217 = ptrtoint %CPU6510* %vr216 to i64
	%vr218 = add i64 %vr217, 72
	%vr219 = inttoptr i64 %vr218 to void ( %CPU6510* )**
	%vr220 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr219
	; arg THIS
	%vr221 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr220( %CPU6510* %vr221 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D8:

	; label .Lt_11CB
	br label %.Lt_11CB
.Lt_11CB:

	; call ADR_IND()
	; arg THIS
	%vr223 = load %CPU6510*, %CPU6510** %THIS.252
	%vr222 = call i64 @_ZN7CPU65107ADR_INDEv( %CPU6510* %vr223 )

	; conv vr222 => vr224
	%vr224 = trunc i64 %vr222 to i16

	; deref THIS
	%vr226 = load %CPU6510*, %CPU6510** %THIS.252

	; store vr226+64 := vr224
	%vr227 = ptrtoint %CPU6510* %vr226 to i64
	%vr228 = add i64 %vr227, 64
	%vr229 = inttoptr i64 %vr228 to i16*
	store i16 %vr224, i16* %vr229

	; deref THIS
	%vr231 = load %CPU6510*, %CPU6510** %THIS.252

	; callptr vr231+72
	%vr232 = ptrtoint %CPU6510* %vr231 to i64
	%vr233 = add i64 %vr232, 72
	%vr234 = inttoptr i64 %vr233 to void ( %CPU6510* )**
	%vr235 = load void ( %CPU6510* )*, void ( %CPU6510* )** %vr234
	; arg THIS
	%vr236 = load %CPU6510*, %CPU6510** %THIS.252
	call void %vr235( %CPU6510* %vr236 )

	; goto .Lt_11BC
	br label %.Lt_11BC
.Lt_11D9:

	; label .Lt_11BD
	br label %.Lt_11BD
.Lt_11BD:

	; jmptb LT_11BE
	%vr237 = load i64, i64* %LT_11BE.258
	switch i64 %vr237, label %.Lt_11BC [
		i64 0, label %.Lt_11BF
		i64 1, label %.Lt_11C0
		i64 2, label %.Lt_11C1
		i64 3, label %.Lt_11C2
		i64 4, label %.Lt_11C3
		i64 5, label %.Lt_11C4
		i64 6, label %.Lt_11C5
		i64 7, label %.Lt_11C6
		i64 8, label %.Lt_11C7
		i64 9, label %.Lt_11C8
		i64 10, label %.Lt_11C9
		i64 11, label %.Lt_11CA
		i64 12, label %.Lt_11CB
	]

	; label .Lt_11BC
	br label %.Lt_11BC
.Lt_11BC:

	; store fb$result := 0
	store i64 0, i64* %fb$result.254

	; addrof MSG
	%vr239 = bitcast %FBSTRING* %MSG.255 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr239
	call void @fb_StrDelete( %FBSTRING* %vr239 )

	; goto .Lt_11BB
	br label %.Lt_11BB
.Lt_11DA:

	; addrof MSG
	%vr241 = bitcast %FBSTRING* %MSG.255 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr241
	call void @fb_StrDelete( %FBSTRING* %vr241 )

	; label .Lt_11BB
	br label %.Lt_11BB
.Lt_11BB:

	; loadres fb$result
	%vr243 = load i64, i64* %fb$result.254
	ret i64 %vr243
}

define i64 @_ZN7CPU65107ADR_UNKEv( %CPU6510* %THIS.259$ ) nounwind
{

	; paramvar THIS
	%THIS.259 = alloca %CPU6510*
	store %CPU6510* %THIS.259$, %CPU6510** %THIS.259

	; localvar fb$result
	%fb$result.260 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.260 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11DB
	br label %.Lt_11DB
.Lt_11DB:

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; store fb$result := 0
	store i64 0, i64* %fb$result.260

	; goto .Lt_11DC
	br label %.Lt_11DC
.Lt_11DD:

	; label .Lt_11DC
	br label %.Lt_11DC
.Lt_11DC:

	; loadres fb$result
	%vr4 = load i64, i64* %fb$result.260
	ret i64 %vr4
}

define i64 @_ZN7CPU65107ADR_IMMEv( %CPU6510* %THIS.261$ ) nounwind
{

	; paramvar THIS
	%THIS.261 = alloca %CPU6510*
	store %CPU6510* %THIS.261$, %CPU6510** %THIS.261

	; localvar fb$result
	%fb$result.262 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.262 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11DE
	br label %.Lt_11DE
.Lt_11DE:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.261

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; store fb$result := vr4
	store i64 %vr4, i64* %fb$result.262

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.261

	; conv vr10+12 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = sext i16 %vr15 to i64

	; bop vr11 + 1
	%vr16 = add i64 %vr11, 1

	; conv vr16 => vr17
	%vr17 = trunc i64 %vr16 to i16

	; deref THIS
	%vr19 = load %CPU6510*, %CPU6510** %THIS.261

	; store vr19+12 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	store i16 %vr17, i16* %vr22

	; label .Lt_11DF
	br label %.Lt_11DF
.Lt_11DF:

	; loadres fb$result
	%vr24 = load i64, i64* %fb$result.262
	ret i64 %vr24
}

define i64 @_ZN7CPU65107ADR_RELEv( %CPU6510* %THIS.263$ ) nounwind
{

	; paramvar THIS
	%THIS.263 = alloca %CPU6510*
	store %CPU6510* %THIS.263$, %CPU6510** %THIS.263

	; localvar fb$result
	%fb$result.264 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.264 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11E0
	br label %.Lt_11E0
.Lt_11E0:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.263

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; store fb$result := vr4
	store i64 %vr4, i64* %fb$result.264

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.263

	; conv vr10+12 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = sext i16 %vr15 to i64

	; bop vr11 + 1
	%vr16 = add i64 %vr11, 1

	; conv vr16 => vr17
	%vr17 = trunc i64 %vr16 to i16

	; deref THIS
	%vr19 = load %CPU6510*, %CPU6510** %THIS.263

	; store vr19+12 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	store i16 %vr17, i16* %vr22

	; label .Lt_11E1
	br label %.Lt_11E1
.Lt_11E1:

	; loadres fb$result
	%vr24 = load i64, i64* %fb$result.264
	ret i64 %vr24
}

define i64 @_ZN7CPU65107ADR_ABSEv( %CPU6510* %THIS.265$ ) nounwind
{

	; paramvar THIS
	%THIS.265 = alloca %CPU6510*
	store %CPU6510* %THIS.265$, %CPU6510** %THIS.265

	; localvar fb$result
	%fb$result.266 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.266 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11E2
	br label %.Lt_11E2
.Lt_11E2:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.265

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.265

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = zext i16 %vr11 to i64

	; store fb$result := vr16
	store i64 %vr16, i64* %fb$result.266

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.265

	; conv vr18+12 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 12
	%vr22 = inttoptr i64 %vr21 to i16*
	%vr23 = load i16, i16* %vr22
	%vr19 = sext i16 %vr23 to i64

	; bop vr19 + 2
	%vr24 = add i64 %vr19, 2

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.265

	; store vr27+12 := vr25
	%vr28 = ptrtoint %CPU6510* %vr27 to i64
	%vr29 = add i64 %vr28, 12
	%vr30 = inttoptr i64 %vr29 to i16*
	store i16 %vr25, i16* %vr30

	; label .Lt_11E3
	br label %.Lt_11E3
.Lt_11E3:

	; loadres fb$result
	%vr32 = load i64, i64* %fb$result.266
	ret i64 %vr32
}

define i64 @_ZN7CPU65108ADR_ZEROEv( %CPU6510* %THIS.267$ ) nounwind
{

	; paramvar THIS
	%THIS.267 = alloca %CPU6510*
	store %CPU6510* %THIS.267$, %CPU6510** %THIS.267

	; localvar fb$result
	%fb$result.268 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.268 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11E4
	br label %.Lt_11E4
.Lt_11E4:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.267

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.267

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; bop vr16 AND 255
	%vr17 = and i64 %vr16, 255
	%vr18 = bitcast i64 %vr17 to i64

	; store fb$result := vr18
	store i64 %vr18, i64* %fb$result.268

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.267

	; conv vr20+12 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 12
	%vr24 = inttoptr i64 %vr23 to i16*
	%vr25 = load i16, i16* %vr24
	%vr21 = sext i16 %vr25 to i64

	; bop vr21 + 1
	%vr26 = add i64 %vr21, 1

	; conv vr26 => vr27
	%vr27 = trunc i64 %vr26 to i16

	; deref THIS
	%vr29 = load %CPU6510*, %CPU6510** %THIS.267

	; store vr29+12 := vr27
	%vr30 = ptrtoint %CPU6510* %vr29 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	store i16 %vr27, i16* %vr32

	; label .Lt_11E5
	br label %.Lt_11E5
.Lt_11E5:

	; loadres fb$result
	%vr34 = load i64, i64* %fb$result.268
	ret i64 %vr34
}

define i64 @_ZN7CPU65109ADR_ZEROXEv( %CPU6510* %THIS.269$ ) nounwind
{

	; paramvar THIS
	%THIS.269 = alloca %CPU6510*
	store %CPU6510* %THIS.269$, %CPU6510** %THIS.269

	; localvar fb$result
	%fb$result.270 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.270 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11E6
	br label %.Lt_11E6
.Lt_11E6:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.269

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.269

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.269

	; conv vr18+9 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 9
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19

	; bop vr24 AND 255
	%vr25 = and i64 %vr24, 255
	%vr26 = bitcast i64 %vr25 to i64

	; store fb$result := vr26
	store i64 %vr26, i64* %fb$result.270

	; deref THIS
	%vr28 = load %CPU6510*, %CPU6510** %THIS.269

	; conv vr28+12 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = sext i16 %vr33 to i64

	; bop vr29 + 1
	%vr34 = add i64 %vr29, 1

	; conv vr34 => vr35
	%vr35 = trunc i64 %vr34 to i16

	; deref THIS
	%vr37 = load %CPU6510*, %CPU6510** %THIS.269

	; store vr37+12 := vr35
	%vr38 = ptrtoint %CPU6510* %vr37 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr35, i16* %vr40

	; label .Lt_11E7
	br label %.Lt_11E7
.Lt_11E7:

	; loadres fb$result
	%vr42 = load i64, i64* %fb$result.270
	ret i64 %vr42
}

define i64 @_ZN7CPU65109ADR_ZEROYEv( %CPU6510* %THIS.271$ ) nounwind
{

	; paramvar THIS
	%THIS.271 = alloca %CPU6510*
	store %CPU6510* %THIS.271$, %CPU6510** %THIS.271

	; localvar fb$result
	%fb$result.272 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.272 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11E8
	br label %.Lt_11E8
.Lt_11E8:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.271

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.271

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i8 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.271

	; conv vr18+10 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 10
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19

	; bop vr24 AND 255
	%vr25 = and i64 %vr24, 255
	%vr26 = bitcast i64 %vr25 to i64

	; store fb$result := vr26
	store i64 %vr26, i64* %fb$result.272

	; deref THIS
	%vr28 = load %CPU6510*, %CPU6510** %THIS.271

	; conv vr28+12 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 12
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = sext i16 %vr33 to i64

	; bop vr29 + 1
	%vr34 = add i64 %vr29, 1

	; conv vr34 => vr35
	%vr35 = trunc i64 %vr34 to i16

	; deref THIS
	%vr37 = load %CPU6510*, %CPU6510** %THIS.271

	; store vr37+12 := vr35
	%vr38 = ptrtoint %CPU6510* %vr37 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr35, i16* %vr40

	; label .Lt_11E9
	br label %.Lt_11E9
.Lt_11E9:

	; loadres fb$result
	%vr42 = load i64, i64* %fb$result.272
	ret i64 %vr42
}

define i64 @_ZN7CPU65108ADR_ABSXEv( %CPU6510* %THIS.273$ ) nounwind
{

	; paramvar THIS
	%THIS.273 = alloca %CPU6510*
	store %CPU6510* %THIS.273$, %CPU6510** %THIS.273

	; localvar fb$result
	%fb$result.274 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.274 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11EA
	br label %.Lt_11EA
.Lt_11EA:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.273

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.273

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i16 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.273

	; conv vr18+9 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 9
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19
	%vr25 = bitcast i64 %vr24 to i64

	; store fb$result := vr25
	store i64 %vr25, i64* %fb$result.274

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.273

	; conv vr27+12 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 12
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = sext i16 %vr32 to i64

	; bop vr28 + 2
	%vr33 = add i64 %vr28, 2

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i16

	; deref THIS
	%vr36 = load %CPU6510*, %CPU6510** %THIS.273

	; store vr36+12 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 12
	%vr39 = inttoptr i64 %vr38 to i16*
	store i16 %vr34, i16* %vr39

	; label .Lt_11EB
	br label %.Lt_11EB
.Lt_11EB:

	; loadres fb$result
	%vr41 = load i64, i64* %fb$result.274
	ret i64 %vr41
}

define i64 @_ZN7CPU65108ADR_ABSYEv( %CPU6510* %THIS.275$ ) nounwind
{

	; paramvar THIS
	%THIS.275 = alloca %CPU6510*
	store %CPU6510* %THIS.275$, %CPU6510** %THIS.275

	; localvar fb$result
	%fb$result.276 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.276 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11EC
	br label %.Lt_11EC
.Lt_11EC:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.275

	; conv vr3+12 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref THIS
	%vr10 = load %CPU6510*, %CPU6510** %THIS.275

	; call READUSHORT()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = sext i16 %vr11 to i64

	; deref THIS
	%vr18 = load %CPU6510*, %CPU6510** %THIS.275

	; conv vr18+10 => vr19
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 10
	%vr22 = inttoptr i64 %vr21 to i8*
	%vr23 = load i8, i8* %vr22
	%vr19 = sext i8 %vr23 to i64

	; bop vr16 + vr19
	%vr24 = add i64 %vr16, %vr19
	%vr25 = bitcast i64 %vr24 to i64

	; store fb$result := vr25
	store i64 %vr25, i64* %fb$result.276

	; deref THIS
	%vr27 = load %CPU6510*, %CPU6510** %THIS.275

	; conv vr27+12 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 12
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = sext i16 %vr32 to i64

	; bop vr28 + 2
	%vr33 = add i64 %vr28, 2

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i16

	; deref THIS
	%vr36 = load %CPU6510*, %CPU6510** %THIS.275

	; store vr36+12 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 12
	%vr39 = inttoptr i64 %vr38 to i16*
	store i16 %vr34, i16* %vr39

	; label .Lt_11ED
	br label %.Lt_11ED
.Lt_11ED:

	; loadres fb$result
	%vr41 = load i64, i64* %fb$result.276
	ret i64 %vr41
}

define i64 @_ZN7CPU65108ADR_INDXEv( %CPU6510* %THIS.277$ ) nounwind
{

	; paramvar THIS
	%THIS.277 = alloca %CPU6510*
	store %CPU6510* %THIS.277$, %CPU6510** %THIS.277

	; localvar fb$result
	%fb$result.278 = alloca i64

	; localvar V
	%V.279 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.278 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11EE
	br label %.Lt_11EE
.Lt_11EE:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.279 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.277

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.277

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; conv vr13 => vr18
	%vr18 = sext i8 %vr13 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.277

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; bop vr18 + vr21
	%vr26 = add i64 %vr18, %vr21

	; bop vr26 AND 255
	%vr27 = and i64 %vr26, 255

	; conv vr27 => vr28
	%vr28 = trunc i64 %vr27 to i16

	; store V := vr28
	%vr29 = bitcast %MULTI* %V.279 to i16*
	store i16 %vr28, i16* %vr29

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.279 to i16*
	%vr32 = load i16, i16* %vr31
	%vr30 = zext i16 %vr32 to i64

	; deref THIS
	%vr34 = load %CPU6510*, %CPU6510** %THIS.277

	; call READUSHORT()
	; arg vr34+16
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = add i64 %vr36, 16
	%vr38 = inttoptr i64 %vr37 to %MEMORY_T**
	%vr39 = load %MEMORY_T*, %MEMORY_T** %vr38
	; arg vr30
	%vr35 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr39, i64 %vr30 )

	; store V := vr35
	%vr40 = bitcast %MULTI* %V.279 to i16*
	store i16 %vr35, i16* %vr40

	; deref THIS
	%vr42 = load %CPU6510*, %CPU6510** %THIS.277

	; conv vr42+12 => vr43
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = add i64 %vr44, 12
	%vr46 = inttoptr i64 %vr45 to i16*
	%vr47 = load i16, i16* %vr46
	%vr43 = sext i16 %vr47 to i64

	; bop vr43 + 1
	%vr48 = add i64 %vr43, 1

	; conv vr48 => vr49
	%vr49 = trunc i64 %vr48 to i16

	; deref THIS
	%vr51 = load %CPU6510*, %CPU6510** %THIS.277

	; store vr51+12 := vr49
	%vr52 = ptrtoint %CPU6510* %vr51 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr49, i16* %vr54

	; conv V => vr55
	%vr56 = bitcast %MULTI* %V.279 to i16*
	%vr57 = load i16, i16* %vr56
	%vr55 = zext i16 %vr57 to i64

	; store fb$result := vr55
	store i64 %vr55, i64* %fb$result.278

	; goto .Lt_11EF
	br label %.Lt_11EF
.Lt_11F0:

	; label .Lt_11EF
	br label %.Lt_11EF
.Lt_11EF:

	; loadres fb$result
	%vr59 = load i64, i64* %fb$result.278
	ret i64 %vr59
}

define i64 @_ZN7CPU65108ADR_INDYEv( %CPU6510* %THIS.280$ ) nounwind
{

	; paramvar THIS
	%THIS.280 = alloca %CPU6510*
	store %CPU6510* %THIS.280$, %CPU6510** %THIS.280

	; localvar fb$result
	%fb$result.281 = alloca i64

	; localvar V
	%V.282 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.281 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11F1
	br label %.Lt_11F1
.Lt_11F1:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.282 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.280

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; conv vr13 => vr18
	%vr18 = zext i8 %vr13 to i64

	; deref THIS
	%vr20 = load %CPU6510*, %CPU6510** %THIS.280

	; call READUSHORT()
	; arg vr20+16
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 16
	%vr24 = inttoptr i64 %vr23 to %MEMORY_T**
	%vr25 = load %MEMORY_T*, %MEMORY_T** %vr24
	; arg vr18
	%vr21 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr25, i64 %vr18 )

	; store V := vr21
	%vr26 = bitcast %MULTI* %V.282 to i16*
	store i16 %vr21, i16* %vr26

	; conv V => vr27
	%vr28 = bitcast %MULTI* %V.282 to i16*
	%vr29 = load i16, i16* %vr28
	%vr27 = sext i16 %vr29 to i64

	; deref THIS
	%vr31 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr31+10 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = add i64 %vr33, 10
	%vr35 = inttoptr i64 %vr34 to i8*
	%vr36 = load i8, i8* %vr35
	%vr32 = sext i8 %vr36 to i64

	; bop vr27 + vr32
	%vr37 = add i64 %vr27, %vr32

	; conv vr37 => vr38
	%vr38 = trunc i64 %vr37 to i16

	; store V := vr38
	%vr39 = bitcast %MULTI* %V.282 to i16*
	store i16 %vr38, i16* %vr39

	; conv V => vr40
	%vr41 = bitcast %MULTI* %V.282 to i16*
	%vr42 = load i16, i16* %vr41
	%vr40 = zext i16 %vr42 to i64

	; store fb$result := vr40
	store i64 %vr40, i64* %fb$result.281

	; deref THIS
	%vr44 = load %CPU6510*, %CPU6510** %THIS.280

	; conv vr44+12 => vr45
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = add i64 %vr46, 12
	%vr48 = inttoptr i64 %vr47 to i16*
	%vr49 = load i16, i16* %vr48
	%vr45 = sext i16 %vr49 to i64

	; bop vr45 + 1
	%vr50 = add i64 %vr45, 1

	; conv vr50 => vr51
	%vr51 = trunc i64 %vr50 to i16

	; deref THIS
	%vr53 = load %CPU6510*, %CPU6510** %THIS.280

	; store vr53+12 := vr51
	%vr54 = ptrtoint %CPU6510* %vr53 to i64
	%vr55 = add i64 %vr54, 12
	%vr56 = inttoptr i64 %vr55 to i16*
	store i16 %vr51, i16* %vr56

	; label .Lt_11F2
	br label %.Lt_11F2
.Lt_11F2:

	; loadres fb$result
	%vr58 = load i64, i64* %fb$result.281
	ret i64 %vr58
}

define i64 @_ZN7CPU65107ADR_INDEv( %CPU6510* %THIS.283$ ) nounwind
{

	; paramvar THIS
	%THIS.283 = alloca %CPU6510*
	store %CPU6510* %THIS.283$, %CPU6510** %THIS.283

	; localvar fb$result
	%fb$result.284 = alloca i64

	; localvar V
	%V.285 = alloca %MULTI

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.284 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11F3
	br label %.Lt_11F3
.Lt_11F3:

	; addrof V

	; memclear V
	%vr3 = bitcast %MULTI* %V.285 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref THIS
	%vr5 = load %CPU6510*, %CPU6510** %THIS.283

	; conv vr5+12 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 12
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.283

	; call READUSHORT()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store V := vr13
	%vr18 = bitcast %MULTI* %V.285 to i16*
	store i16 %vr13, i16* %vr18

	; conv V => vr19
	%vr20 = bitcast %MULTI* %V.285 to i16*
	%vr21 = load i16, i16* %vr20
	%vr19 = zext i16 %vr21 to i64

	; deref THIS
	%vr23 = load %CPU6510*, %CPU6510** %THIS.283

	; call READUSHORT()
	; arg vr23+16
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 16
	%vr27 = inttoptr i64 %vr26 to %MEMORY_T**
	%vr28 = load %MEMORY_T*, %MEMORY_T** %vr27
	; arg vr19
	%vr24 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr28, i64 %vr19 )

	; store V := vr24
	%vr29 = bitcast %MULTI* %V.285 to i16*
	store i16 %vr24, i16* %vr29

	; deref THIS
	%vr31 = load %CPU6510*, %CPU6510** %THIS.283

	; conv vr31+12 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = add i64 %vr33, 12
	%vr35 = inttoptr i64 %vr34 to i16*
	%vr36 = load i16, i16* %vr35
	%vr32 = sext i16 %vr36 to i64

	; bop vr32 + 2
	%vr37 = add i64 %vr32, 2

	; conv vr37 => vr38
	%vr38 = trunc i64 %vr37 to i16

	; deref THIS
	%vr40 = load %CPU6510*, %CPU6510** %THIS.283

	; store vr40+12 := vr38
	%vr41 = ptrtoint %CPU6510* %vr40 to i64
	%vr42 = add i64 %vr41, 12
	%vr43 = inttoptr i64 %vr42 to i16*
	store i16 %vr38, i16* %vr43

	; conv V => vr44
	%vr45 = bitcast %MULTI* %V.285 to i16*
	%vr46 = load i16, i16* %vr45
	%vr44 = zext i16 %vr46 to i64

	; store fb$result := vr44
	store i64 %vr44, i64* %fb$result.284

	; goto .Lt_11F4
	br label %.Lt_11F4
.Lt_11F5:

	; label .Lt_11F4
	br label %.Lt_11F4
.Lt_11F4:

	; loadres fb$result
	%vr48 = load i64, i64* %fb$result.284
	ret i64 %vr48
}

define void @_ZN7CPU65104PUSHEy( %CPU6510* %THIS.286$, i64 %B.287$ ) nounwind
{

	; paramvar THIS
	%THIS.286 = alloca %CPU6510*
	store %CPU6510* %THIS.286$, %CPU6510** %THIS.286

	; paramvar B
	%B.287 = alloca i64
	store i64 %B.287$, i64* %B.287

	; label .Lt_11F6
	br label %.Lt_11F6
.Lt_11F6:

	; deref THIS
	%vr1 = load %CPU6510*, %CPU6510** %THIS.286

	; conv vr1+14 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 14
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref THIS
	%vr8 = load %CPU6510*, %CPU6510** %THIS.286

	; call WRITEUBYTE()
	; arg vr8+16
	%vr9 = ptrtoint %CPU6510* %vr8 to i64
	%vr10 = add i64 %vr9, 16
	%vr11 = inttoptr i64 %vr10 to %MEMORY_T**
	%vr12 = load %MEMORY_T*, %MEMORY_T** %vr11
	; arg vr2
	; arg B
	%vr13 = load i64, i64* %B.287
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr12, i64 %vr2, i64 %vr13 )

	; deref THIS
	%vr15 = load %CPU6510*, %CPU6510** %THIS.286

	; conv vr15+14 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 14
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = sext i8 %vr20 to i64

	; bop vr16 + -1
	%vr21 = add i64 %vr16, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i8

	; deref THIS
	%vr24 = load %CPU6510*, %CPU6510** %THIS.286

	; store vr24+14 := vr22
	%vr25 = ptrtoint %CPU6510* %vr24 to i64
	%vr26 = add i64 %vr25, 14
	%vr27 = inttoptr i64 %vr26 to i8*
	store i8 %vr22, i8* %vr27

	; label .Lt_11F7
	br label %.Lt_11F7
.Lt_11F7:
	ret void
}

define i64 @_ZN7CPU65104PULLEv( %CPU6510* %THIS.288$ ) nounwind
{

	; paramvar THIS
	%THIS.288 = alloca %CPU6510*
	store %CPU6510* %THIS.288$, %CPU6510** %THIS.288

	; localvar fb$result
	%fb$result.289 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.289 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_11F8
	br label %.Lt_11F8
.Lt_11F8:

	; deref THIS
	%vr3 = load %CPU6510*, %CPU6510** %THIS.288

	; conv vr3+14 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 14
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; bop vr4 + 1
	%vr9 = add i64 %vr4, 1

	; conv vr9 => vr10
	%vr10 = trunc i64 %vr9 to i8

	; deref THIS
	%vr12 = load %CPU6510*, %CPU6510** %THIS.288

	; store vr12+14 := vr10
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 14
	%vr15 = inttoptr i64 %vr14 to i8*
	store i8 %vr10, i8* %vr15

	; deref THIS
	%vr17 = load %CPU6510*, %CPU6510** %THIS.288

	; conv vr17+14 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 14
	%vr21 = inttoptr i64 %vr20 to i16*
	%vr22 = load i16, i16* %vr21
	%vr18 = zext i16 %vr22 to i64

	; deref THIS
	%vr24 = load %CPU6510*, %CPU6510** %THIS.288

	; call READUBYTE()
	; arg vr24+16
	%vr26 = ptrtoint %CPU6510* %vr24 to i64
	%vr27 = add i64 %vr26, 16
	%vr28 = inttoptr i64 %vr27 to %MEMORY_T**
	%vr29 = load %MEMORY_T*, %MEMORY_T** %vr28
	; arg vr18
	%vr25 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr29, i64 %vr18 )

	; conv vr25 => vr30
	%vr30 = zext i8 %vr25 to i64

	; store fb$result := vr30
	store i64 %vr30, i64* %fb$result.289

	; goto .Lt_11F9
	br label %.Lt_11F9
.Lt_11FA:

	; label .Lt_11F9
	br label %.Lt_11F9
.Lt_11F9:

	; loadres fb$result
	%vr32 = load i64, i64* %fb$result.289
	ret i64 %vr32
}

define void @INS_UNK( %CPU6510* %CPU.290$ ) nounwind
{

	; paramvar CPU
	%CPU.290 = alloca %CPU6510*
	store %CPU6510* %CPU.290$, %CPU6510** %CPU.290

	; label .Lt_11FB
	br label %.Lt_11FB
.Lt_11FB:

	; label .Lt_11FC
	br label %.Lt_11FC
.Lt_11FC:
	ret void
}

define void @INS_ADC( %CPU6510* %CPU.291$ ) nounwind
{

	; paramvar CPU
	%CPU.291 = alloca %CPU6510*
	store %CPU6510* %CPU.291$, %CPU6510** %CPU.291

	; localvar V
	%V.292 = alloca %MULTI

	; localvar UB
	%UB.293 = alloca i8

	; localvar LT_1202
	%LT_1202.294 = alloca i64

	; localvar LT_1204
	%LT_1204.295 = alloca i64

	; localvar LT_1206
	%LT_1206.296 = alloca i64

	; localvar LT_1208
	%LT_1208.297 = alloca i64

	; label .Lt_11FD
	br label %.Lt_11FD
.Lt_11FD:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.292 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof UB

	; memclear UB
	%vr3 = bitcast i8* %UB.293 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.291

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.291

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store UB := vr13
	store i8 %vr13, i8* %UB.293

	; deref CPU
	%vr19 = load %CPU6510*, %CPU6510** %CPU.291

	; conv vr19+8 => vr20
	%vr21 = ptrtoint %CPU6510* %vr19 to i64
	%vr22 = add i64 %vr21, 8
	%vr23 = inttoptr i64 %vr22 to i8*
	%vr24 = load i8, i8* %vr23
	%vr20 = sext i8 %vr24 to i64

	; conv UB => vr25
	%vr26 = load i8, i8* %UB.293
	%vr25 = sext i8 %vr26 to i64

	; bop vr20 + vr25
	%vr27 = add i64 %vr20, %vr25

	; conv vr27 => vr28
	%vr28 = trunc i64 %vr27 to i16

	; store V := vr28
	%vr29 = bitcast %MULTI* %V.292 to i16*
	store i16 %vr28, i16* %vr29

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.291

	; bop vr31 AND 1
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, 1

	; branchbop vr33 <> 1
	%vr38 = icmp ne i64 %vr33, 1
	br i1 %vr38, label %.Lt_1200, label %.Lt_1209
.Lt_1209:

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.292 to i16*
	%vr41 = load i16, i16* %vr40
	%vr39 = sext i16 %vr41 to i64

	; bop vr39 + 1
	%vr42 = add i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i16

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.292 to i16*
	store i16 %vr43, i16* %vr44

	; label .Lt_1200
	br label %.Lt_1200
.Lt_1200:

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.291

	; bop vr46 AND -65
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -65

	; deref CPU
	%vr54 = load %CPU6510*, %CPU6510** %CPU.291

	; conv vr54+8 => vr55
	%vr56 = ptrtoint %CPU6510* %vr54 to i64
	%vr57 = add i64 %vr56, 8
	%vr58 = inttoptr i64 %vr57 to i8*
	%vr59 = load i8, i8* %vr58
	%vr55 = sext i8 %vr59 to i64

	; conv UB => vr60
	%vr61 = load i8, i8* %UB.293
	%vr60 = sext i8 %vr61 to i64

	; bop vr55 XOR vr60
	%vr62 = xor i64 %vr55, %vr60

	; bop vr62 OR -129
	%vr63 = or i64 %vr62, -129

	; uop NOT vr63
	%vr64 = xor i64 %vr63, -1

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.291

	; conv vr66+8 => vr67
	%vr68 = ptrtoint %CPU6510* %vr66 to i64
	%vr69 = add i64 %vr68, 8
	%vr70 = inttoptr i64 %vr69 to i8*
	%vr71 = load i8, i8* %vr70
	%vr67 = sext i8 %vr71 to i64

	; conv V => vr72
	%vr73 = bitcast %MULTI* %V.292 to i8*
	%vr74 = load i8, i8* %vr73
	%vr72 = sext i8 %vr74 to i64

	; bop vr67 XOR vr72
	%vr75 = xor i64 %vr67, %vr72

	; bop vr75 AND 128
	%vr76 = and i64 %vr75, 128

	; bop vr64 AND vr76
	%vr77 = and i64 %vr64, %vr76

	; branchbop vr77 == 0
	%vr78 = icmp eq i64 %vr77, 0
	br i1 %vr78, label %.Lt_1201, label %.Lt_120A
.Lt_120A:

	; store LT_1202 := 1
	store i64 1, i64* %LT_1202.294

	; goto .Lt_120B
	br label %.Lt_120B
.Lt_120C:

	; label .Lt_1201
	br label %.Lt_1201
.Lt_1201:

	; store LT_1202 := 0
	store i64 0, i64* %LT_1202.294

	; label .Lt_120B
	br label %.Lt_120B
.Lt_120B:
	%vr80 = load i64, i64* %LT_1202.294
	%vr79 = bitcast i64 %vr80 to i64

	; bop vr79 AND 1
	%vr81 = and i64 %vr79, 1

	; bop vr81 SHL 6
	%vr83 = bitcast i64 6 to i64
	%vr82 = shl i64 %vr81, %vr83

	; bop vr48 OR vr82
	%vr84 = or i64 %vr48, %vr82

	; deref CPU
	%vr86 = load %CPU6510*, %CPU6510** %CPU.291

	; store vr86 := vr84
	%vr88 = ptrtoint %CPU6510* %vr86 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	store i64 %vr84, i64* %vr89

	; deref CPU
	%vr91 = load %CPU6510*, %CPU6510** %CPU.291

	; store vr91+8 := V
	%vr92 = bitcast %MULTI* %V.292 to i8*
	%vr93 = load i8, i8* %vr92
	%vr94 = ptrtoint %CPU6510* %vr91 to i64
	%vr95 = add i64 %vr94, 8
	%vr96 = inttoptr i64 %vr95 to i8*
	store i8 %vr93, i8* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.291

	; bop vr98 AND -2
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -2

	; conv V => vr105
	%vr106 = bitcast %MULTI* %V.292 to i16*
	%vr107 = load i16, i16* %vr106
	%vr105 = sext i16 %vr107 to i64

	; branchbop vr105 <= 255
	%vr108 = icmp sle i64 %vr105, 255
	br i1 %vr108, label %.Lt_1203, label %.Lt_120D
.Lt_120D:

	; store LT_1204 := 1
	store i64 1, i64* %LT_1204.295

	; goto .Lt_120E
	br label %.Lt_120E
.Lt_120F:

	; label .Lt_1203
	br label %.Lt_1203
.Lt_1203:

	; store LT_1204 := 0
	store i64 0, i64* %LT_1204.295

	; label .Lt_120E
	br label %.Lt_120E
.Lt_120E:
	%vr110 = load i64, i64* %LT_1204.295
	%vr109 = bitcast i64 %vr110 to i64

	; bop vr109 AND 1
	%vr111 = and i64 %vr109, 1

	; bop vr100 OR vr111
	%vr112 = or i64 %vr100, %vr111

	; deref CPU
	%vr114 = load %CPU6510*, %CPU6510** %CPU.291

	; store vr114 := vr112
	%vr116 = ptrtoint %CPU6510* %vr114 to i64
	%vr117 = inttoptr i64 %vr116 to i64*
	store i64 %vr112, i64* %vr117

	; deref CPU
	%vr119 = load %CPU6510*, %CPU6510** %CPU.291

	; bop vr119 AND -3
	%vr122 = ptrtoint %CPU6510* %vr119 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	%vr124 = load i64, i64* %vr123
	%vr121 = and i64 %vr124, -3

	; conv V => vr126
	%vr127 = bitcast %MULTI* %V.292 to i8*
	%vr128 = load i8, i8* %vr127
	%vr126 = sext i8 %vr128 to i64

	; branchbop vr126 <> 0
	%vr129 = icmp ne i64 %vr126, 0
	br i1 %vr129, label %.Lt_1205, label %.Lt_1210
.Lt_1210:

	; store LT_1206 := 1
	store i64 1, i64* %LT_1206.296

	; goto .Lt_1211
	br label %.Lt_1211
.Lt_1212:

	; label .Lt_1205
	br label %.Lt_1205
.Lt_1205:

	; store LT_1206 := 0
	store i64 0, i64* %LT_1206.296

	; label .Lt_1211
	br label %.Lt_1211
.Lt_1211:
	%vr131 = load i64, i64* %LT_1206.296
	%vr130 = bitcast i64 %vr131 to i64

	; bop vr130 AND 1
	%vr132 = and i64 %vr130, 1

	; bop vr132 SHL 1
	%vr134 = bitcast i64 1 to i64
	%vr133 = shl i64 %vr132, %vr134

	; bop vr121 OR vr133
	%vr135 = or i64 %vr121, %vr133

	; deref CPU
	%vr137 = load %CPU6510*, %CPU6510** %CPU.291

	; store vr137 := vr135
	%vr139 = ptrtoint %CPU6510* %vr137 to i64
	%vr140 = inttoptr i64 %vr139 to i64*
	store i64 %vr135, i64* %vr140

	; deref CPU
	%vr142 = load %CPU6510*, %CPU6510** %CPU.291

	; bop vr142 AND -129
	%vr145 = ptrtoint %CPU6510* %vr142 to i64
	%vr146 = inttoptr i64 %vr145 to i64*
	%vr147 = load i64, i64* %vr146
	%vr144 = and i64 %vr147, -129

	; conv V => vr149
	%vr150 = bitcast %MULTI* %V.292 to i8*
	%vr151 = load i8, i8* %vr150
	%vr149 = sext i8 %vr151 to i64

	; branchbop vr149 >= 0
	%vr152 = icmp sge i64 %vr149, 0
	br i1 %vr152, label %.Lt_1207, label %.Lt_1213
.Lt_1213:

	; store LT_1208 := 1
	store i64 1, i64* %LT_1208.297

	; goto .Lt_1214
	br label %.Lt_1214
.Lt_1215:

	; label .Lt_1207
	br label %.Lt_1207
.Lt_1207:

	; store LT_1208 := 0
	store i64 0, i64* %LT_1208.297

	; label .Lt_1214
	br label %.Lt_1214
.Lt_1214:
	%vr154 = load i64, i64* %LT_1208.297
	%vr153 = bitcast i64 %vr154 to i64

	; bop vr153 AND 1
	%vr155 = and i64 %vr153, 1

	; bop vr155 SHL 7
	%vr157 = bitcast i64 7 to i64
	%vr156 = shl i64 %vr155, %vr157

	; bop vr144 OR vr156
	%vr158 = or i64 %vr144, %vr156

	; deref CPU
	%vr160 = load %CPU6510*, %CPU6510** %CPU.291

	; store vr160 := vr158
	%vr162 = ptrtoint %CPU6510* %vr160 to i64
	%vr163 = inttoptr i64 %vr162 to i64*
	store i64 %vr158, i64* %vr163

	; label .Lt_11FE
	br label %.Lt_11FE
.Lt_11FE:
	ret void
}

define void @INS_AND( %CPU6510* %CPU.298$ ) nounwind
{

	; paramvar CPU
	%CPU.298 = alloca %CPU6510*
	store %CPU6510* %CPU.298$, %CPU6510** %CPU.298

	; localvar LT_1219
	%LT_1219.299 = alloca i64

	; localvar LT_121B
	%LT_121B.300 = alloca i64

	; label .Lt_1216
	br label %.Lt_1216
.Lt_1216:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.298

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.298

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.298

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 AND vr21
	%vr22 = and i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.298

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.298

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.298

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_1218, label %.Lt_121C
.Lt_121C:

	; store LT_1219 := 1
	store i64 1, i64* %LT_1219.299

	; goto .Lt_121D
	br label %.Lt_121D
.Lt_121E:

	; label .Lt_1218
	br label %.Lt_1218
.Lt_1218:

	; store LT_1219 := 0
	store i64 0, i64* %LT_1219.299

	; label .Lt_121D
	br label %.Lt_121D
.Lt_121D:
	%vr46 = load i64, i64* %LT_1219.299
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.298

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.298

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.298

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_121A, label %.Lt_121F
.Lt_121F:

	; store LT_121B := 1
	store i64 1, i64* %LT_121B.300

	; goto .Lt_1220
	br label %.Lt_1220
.Lt_1221:

	; label .Lt_121A
	br label %.Lt_121A
.Lt_121A:

	; store LT_121B := 0
	store i64 0, i64* %LT_121B.300

	; label .Lt_1220
	br label %.Lt_1220
.Lt_1220:
	%vr73 = load i64, i64* %LT_121B.300
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.298

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_1217
	br label %.Lt_1217
.Lt_1217:
	ret void
}

define void @INS_ASL( %CPU6510* %CPU.301$ ) nounwind
{

	; paramvar CPU
	%CPU.301 = alloca %CPU6510*
	store %CPU6510* %CPU.301$, %CPU6510** %CPU.301

	; localvar V
	%V.302 = alloca %MULTI

	; localvar LT_1225
	%LT_1225.303 = alloca i64

	; localvar LT_1227
	%LT_1227.304 = alloca i64

	; localvar LT_1229
	%LT_1229.305 = alloca i64

	; label .Lt_1222
	br label %.Lt_1222
.Lt_1222:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.302 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.301

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.302 to i8*
	store i8 %vr11, i8* %vr16

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.301

	; bop vr18 AND -2
	%vr21 = ptrtoint %CPU6510* %vr18 to i64
	%vr22 = inttoptr i64 %vr21 to i64*
	%vr23 = load i64, i64* %vr22
	%vr20 = and i64 %vr23, -2

	; conv V => vr25
	%vr26 = bitcast %MULTI* %V.302 to i8*
	%vr27 = load i8, i8* %vr26
	%vr25 = sext i8 %vr27 to i64

	; bop vr25 AND 128
	%vr28 = and i64 %vr25, 128

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_1224, label %.Lt_122A
.Lt_122A:

	; store LT_1225 := 1
	store i64 1, i64* %LT_1225.303

	; goto .Lt_122B
	br label %.Lt_122B
.Lt_122C:

	; label .Lt_1224
	br label %.Lt_1224
.Lt_1224:

	; store LT_1225 := 0
	store i64 0, i64* %LT_1225.303

	; label .Lt_122B
	br label %.Lt_122B
.Lt_122B:
	%vr31 = load i64, i64* %LT_1225.303
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr20 OR vr32
	%vr33 = or i64 %vr20, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.302 to i8*
	%vr41 = load i8, i8* %vr40
	%vr39 = sext i8 %vr41 to i64

	; bop vr39 SHL 1
	%vr42 = shl i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i8

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.302 to i8*
	store i8 %vr43, i8* %vr44

	; conv V => vr45
	%vr46 = bitcast %MULTI* %V.302 to i8*
	%vr47 = load i8, i8* %vr46
	%vr45 = zext i8 %vr47 to i64

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.301

	; conv vr49+64 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 64
	%vr53 = inttoptr i64 %vr52 to i16*
	%vr54 = load i16, i16* %vr53
	%vr50 = zext i16 %vr54 to i64

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.301

	; call WRITEUBYTE()
	; arg vr56+16
	%vr57 = ptrtoint %CPU6510* %vr56 to i64
	%vr58 = add i64 %vr57, 16
	%vr59 = inttoptr i64 %vr58 to %MEMORY_T**
	%vr60 = load %MEMORY_T*, %MEMORY_T** %vr59
	; arg vr50
	; arg vr45
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr60, i64 %vr50, i64 %vr45 )

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.301

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.302 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = sext i8 %vr71 to i64

	; branchbop vr69 <> 0
	%vr72 = icmp ne i64 %vr69, 0
	br i1 %vr72, label %.Lt_1226, label %.Lt_122D
.Lt_122D:

	; store LT_1227 := 1
	store i64 1, i64* %LT_1227.304

	; goto .Lt_122E
	br label %.Lt_122E
.Lt_122F:

	; label .Lt_1226
	br label %.Lt_1226
.Lt_1226:

	; store LT_1227 := 0
	store i64 0, i64* %LT_1227.304

	; label .Lt_122E
	br label %.Lt_122E
.Lt_122E:
	%vr74 = load i64, i64* %LT_1227.304
	%vr73 = bitcast i64 %vr74 to i64

	; bop vr73 AND 1
	%vr75 = and i64 %vr73, 1

	; bop vr75 SHL 1
	%vr77 = bitcast i64 1 to i64
	%vr76 = shl i64 %vr75, %vr77

	; bop vr64 OR vr76
	%vr78 = or i64 %vr64, %vr76

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr80 := vr78
	%vr82 = ptrtoint %CPU6510* %vr80 to i64
	%vr83 = inttoptr i64 %vr82 to i64*
	store i64 %vr78, i64* %vr83

	; deref CPU
	%vr85 = load %CPU6510*, %CPU6510** %CPU.301

	; bop vr85 AND -129
	%vr88 = ptrtoint %CPU6510* %vr85 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	%vr90 = load i64, i64* %vr89
	%vr87 = and i64 %vr90, -129

	; conv V => vr92
	%vr93 = bitcast %MULTI* %V.302 to i8*
	%vr94 = load i8, i8* %vr93
	%vr92 = sext i8 %vr94 to i64

	; branchbop vr92 >= 0
	%vr95 = icmp sge i64 %vr92, 0
	br i1 %vr95, label %.Lt_1228, label %.Lt_1230
.Lt_1230:

	; store LT_1229 := 1
	store i64 1, i64* %LT_1229.305

	; goto .Lt_1231
	br label %.Lt_1231
.Lt_1232:

	; label .Lt_1228
	br label %.Lt_1228
.Lt_1228:

	; store LT_1229 := 0
	store i64 0, i64* %LT_1229.305

	; label .Lt_1231
	br label %.Lt_1231
.Lt_1231:
	%vr97 = load i64, i64* %LT_1229.305
	%vr96 = bitcast i64 %vr97 to i64

	; bop vr96 AND 1
	%vr98 = and i64 %vr96, 1

	; bop vr98 SHL 7
	%vr100 = bitcast i64 7 to i64
	%vr99 = shl i64 %vr98, %vr100

	; bop vr87 OR vr99
	%vr101 = or i64 %vr87, %vr99

	; deref CPU
	%vr103 = load %CPU6510*, %CPU6510** %CPU.301

	; store vr103 := vr101
	%vr105 = ptrtoint %CPU6510* %vr103 to i64
	%vr106 = inttoptr i64 %vr105 to i64*
	store i64 %vr101, i64* %vr106

	; label .Lt_1223
	br label %.Lt_1223
.Lt_1223:
	ret void
}

define void @INS_ASLA( %CPU6510* %CPU.306$ ) nounwind
{

	; paramvar CPU
	%CPU.306 = alloca %CPU6510*
	store %CPU6510* %CPU.306$, %CPU6510** %CPU.306

	; localvar LT_1236
	%LT_1236.307 = alloca i64

	; localvar LT_1238
	%LT_1238.308 = alloca i64

	; localvar LT_123A
	%LT_123A.309 = alloca i64

	; label .Lt_1233
	br label %.Lt_1233
.Lt_1233:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.306

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.306

	; conv vr9+8 => vr10
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 8
	%vr13 = inttoptr i64 %vr12 to i8*
	%vr14 = load i8, i8* %vr13
	%vr10 = sext i8 %vr14 to i64

	; bop vr10 AND 128
	%vr15 = and i64 %vr10, 128

	; branchbop vr15 == 0
	%vr16 = icmp eq i64 %vr15, 0
	br i1 %vr16, label %.Lt_1235, label %.Lt_123B
.Lt_123B:

	; store LT_1236 := 1
	store i64 1, i64* %LT_1236.307

	; goto .Lt_123C
	br label %.Lt_123C
.Lt_123D:

	; label .Lt_1235
	br label %.Lt_1235
.Lt_1235:

	; store LT_1236 := 0
	store i64 0, i64* %LT_1236.307

	; label .Lt_123C
	br label %.Lt_123C
.Lt_123C:
	%vr18 = load i64, i64* %LT_1236.307
	%vr17 = bitcast i64 %vr18 to i64

	; bop vr17 AND 1
	%vr19 = and i64 %vr17, 1

	; bop vr3 OR vr19
	%vr20 = or i64 %vr3, %vr19

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.306

	; store vr22 := vr20
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = inttoptr i64 %vr24 to i64*
	store i64 %vr20, i64* %vr25

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.306

	; conv vr27+8 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 8
	%vr31 = inttoptr i64 %vr30 to i8*
	%vr32 = load i8, i8* %vr31
	%vr28 = sext i8 %vr32 to i64

	; bop vr28 SHL 1
	%vr33 = shl i64 %vr28, 1

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i8

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.306

	; store vr36+8 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 8
	%vr39 = inttoptr i64 %vr38 to i8*
	store i8 %vr34, i8* %vr39

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.306

	; bop vr41 AND -3
	%vr44 = ptrtoint %CPU6510* %vr41 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	%vr46 = load i64, i64* %vr45
	%vr43 = and i64 %vr46, -3

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.306

	; conv vr49+8 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 8
	%vr53 = inttoptr i64 %vr52 to i8*
	%vr54 = load i8, i8* %vr53
	%vr50 = sext i8 %vr54 to i64

	; branchbop vr50 <> 0
	%vr55 = icmp ne i64 %vr50, 0
	br i1 %vr55, label %.Lt_1237, label %.Lt_123E
.Lt_123E:

	; store LT_1238 := 1
	store i64 1, i64* %LT_1238.308

	; goto .Lt_123F
	br label %.Lt_123F
.Lt_1240:

	; label .Lt_1237
	br label %.Lt_1237
.Lt_1237:

	; store LT_1238 := 0
	store i64 0, i64* %LT_1238.308

	; label .Lt_123F
	br label %.Lt_123F
.Lt_123F:
	%vr57 = load i64, i64* %LT_1238.308
	%vr56 = bitcast i64 %vr57 to i64

	; bop vr56 AND 1
	%vr58 = and i64 %vr56, 1

	; bop vr58 SHL 1
	%vr60 = bitcast i64 1 to i64
	%vr59 = shl i64 %vr58, %vr60

	; bop vr43 OR vr59
	%vr61 = or i64 %vr43, %vr59

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.306

	; store vr63 := vr61
	%vr65 = ptrtoint %CPU6510* %vr63 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	store i64 %vr61, i64* %vr66

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.306

	; bop vr68 AND -129
	%vr71 = ptrtoint %CPU6510* %vr68 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	%vr73 = load i64, i64* %vr72
	%vr70 = and i64 %vr73, -129

	; deref CPU
	%vr76 = load %CPU6510*, %CPU6510** %CPU.306

	; conv vr76+8 => vr77
	%vr78 = ptrtoint %CPU6510* %vr76 to i64
	%vr79 = add i64 %vr78, 8
	%vr80 = inttoptr i64 %vr79 to i8*
	%vr81 = load i8, i8* %vr80
	%vr77 = sext i8 %vr81 to i64

	; branchbop vr77 >= 0
	%vr82 = icmp sge i64 %vr77, 0
	br i1 %vr82, label %.Lt_1239, label %.Lt_1241
.Lt_1241:

	; store LT_123A := 1
	store i64 1, i64* %LT_123A.309

	; goto .Lt_1242
	br label %.Lt_1242
.Lt_1243:

	; label .Lt_1239
	br label %.Lt_1239
.Lt_1239:

	; store LT_123A := 0
	store i64 0, i64* %LT_123A.309

	; label .Lt_1242
	br label %.Lt_1242
.Lt_1242:
	%vr84 = load i64, i64* %LT_123A.309
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr70 OR vr86
	%vr88 = or i64 %vr70, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.306

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_1234
	br label %.Lt_1234
.Lt_1234:
	ret void
}

define void @INS_BCC( %CPU6510* %CPU.310$ ) nounwind
{

	; paramvar CPU
	%CPU.310 = alloca %CPU6510*
	store %CPU6510* %CPU.310$, %CPU6510** %CPU.310

	; label .Lt_1244
	br label %.Lt_1244
.Lt_1244:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.310

	; bop vr1 AND 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, 1

	; branchbop vr3 <> 0
	%vr8 = icmp ne i64 %vr3, 0
	br i1 %vr8, label %.Lt_1247, label %.Lt_1248
.Lt_1248:

	; localvar V
	%V.311 = alloca %MULTI

	; addrof V

	; memclear V
	%vr10 = bitcast %MULTI* %V.311 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr10, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.310

	; store V := vr12+12
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 12
	%vr15 = inttoptr i64 %vr14 to i16*
	%vr16 = load i16, i16* %vr15
	%vr17 = bitcast %MULTI* %V.311 to i16*
	store i16 %vr16, i16* %vr17

	; conv V => vr18
	%vr19 = bitcast %MULTI* %V.311 to i16*
	%vr20 = load i16, i16* %vr19
	%vr18 = sext i16 %vr20 to i64

	; bop vr18 + -1
	%vr21 = add i64 %vr18, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i16

	; store V := vr22
	%vr23 = bitcast %MULTI* %V.311 to i16*
	store i16 %vr22, i16* %vr23

	; conv V => vr24
	%vr25 = bitcast %MULTI* %V.311 to i16*
	%vr26 = load i16, i16* %vr25
	%vr24 = sext i16 %vr26 to i64

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.310

	; conv vr28+64 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 64
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = zext i16 %vr33 to i64

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.310

	; call READBYTE()
	; arg vr35+16
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = add i64 %vr37, 16
	%vr39 = inttoptr i64 %vr38 to %MEMORY_T**
	%vr40 = load %MEMORY_T*, %MEMORY_T** %vr39
	; arg vr29
	%vr36 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr40, i64 %vr29 )

	; conv vr36 => vr41
	%vr41 = sext i8 %vr36 to i64

	; bop vr24 + vr41
	%vr42 = add i64 %vr24, %vr41

	; bop vr42 + 1
	%vr43 = add i64 %vr42, 1

	; conv vr43 => vr44
	%vr44 = trunc i64 %vr43 to i16

	; store V := vr44
	%vr45 = bitcast %MULTI* %V.311 to i16*
	store i16 %vr44, i16* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.310

	; store vr47+12 := V
	%vr48 = bitcast %MULTI* %V.311 to i16*
	%vr49 = load i16, i16* %vr48
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = add i64 %vr50, 12
	%vr52 = inttoptr i64 %vr51 to i16*
	store i16 %vr49, i16* %vr52

	; label .Lt_1247
	br label %.Lt_1247
.Lt_1247:

	; label .Lt_1246
	br label %.Lt_1246
.Lt_1246:

	; label .Lt_1245
	br label %.Lt_1245
.Lt_1245:
	ret void
}

define void @INS_BCS( %CPU6510* %CPU.312$ ) nounwind
{

	; paramvar CPU
	%CPU.312 = alloca %CPU6510*
	store %CPU6510* %CPU.312$, %CPU6510** %CPU.312

	; label .Lt_1249
	br label %.Lt_1249
.Lt_1249:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.312

	; bop vr1 AND 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, 1

	; branchbop vr3 == 0
	%vr8 = icmp eq i64 %vr3, 0
	br i1 %vr8, label %.Lt_124C, label %.Lt_124D
.Lt_124D:

	; localvar V
	%V.313 = alloca %MULTI

	; addrof V

	; memclear V
	%vr10 = bitcast %MULTI* %V.313 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr10, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.312

	; store V := vr12+12
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 12
	%vr15 = inttoptr i64 %vr14 to i16*
	%vr16 = load i16, i16* %vr15
	%vr17 = bitcast %MULTI* %V.313 to i16*
	store i16 %vr16, i16* %vr17

	; conv V => vr18
	%vr19 = bitcast %MULTI* %V.313 to i16*
	%vr20 = load i16, i16* %vr19
	%vr18 = sext i16 %vr20 to i64

	; bop vr18 + -1
	%vr21 = add i64 %vr18, -1

	; conv vr21 => vr22
	%vr22 = trunc i64 %vr21 to i16

	; store V := vr22
	%vr23 = bitcast %MULTI* %V.313 to i16*
	store i16 %vr22, i16* %vr23

	; conv V => vr24
	%vr25 = bitcast %MULTI* %V.313 to i16*
	%vr26 = load i16, i16* %vr25
	%vr24 = sext i16 %vr26 to i64

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.312

	; conv vr28+64 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 64
	%vr32 = inttoptr i64 %vr31 to i16*
	%vr33 = load i16, i16* %vr32
	%vr29 = zext i16 %vr33 to i64

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.312

	; call READBYTE()
	; arg vr35+16
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = add i64 %vr37, 16
	%vr39 = inttoptr i64 %vr38 to %MEMORY_T**
	%vr40 = load %MEMORY_T*, %MEMORY_T** %vr39
	; arg vr29
	%vr36 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr40, i64 %vr29 )

	; conv vr36 => vr41
	%vr41 = sext i8 %vr36 to i64

	; bop vr24 + vr41
	%vr42 = add i64 %vr24, %vr41

	; bop vr42 + 1
	%vr43 = add i64 %vr42, 1

	; conv vr43 => vr44
	%vr44 = trunc i64 %vr43 to i16

	; store V := vr44
	%vr45 = bitcast %MULTI* %V.313 to i16*
	store i16 %vr44, i16* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.312

	; store vr47+12 := V
	%vr48 = bitcast %MULTI* %V.313 to i16*
	%vr49 = load i16, i16* %vr48
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = add i64 %vr50, 12
	%vr52 = inttoptr i64 %vr51 to i16*
	store i16 %vr49, i16* %vr52

	; label .Lt_124C
	br label %.Lt_124C
.Lt_124C:

	; label .Lt_124B
	br label %.Lt_124B
.Lt_124B:

	; label .Lt_124A
	br label %.Lt_124A
.Lt_124A:
	ret void
}

define void @INS_BEQ( %CPU6510* %CPU.314$ ) nounwind
{

	; paramvar CPU
	%CPU.314 = alloca %CPU6510*
	store %CPU6510* %CPU.314$, %CPU6510** %CPU.314

	; label .Lt_124E
	br label %.Lt_124E
.Lt_124E:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.314

	; bop vr1 SHR 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 1 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 1
	%vr10 = icmp ne i64 %vr9, 1
	br i1 %vr10, label %.Lt_1251, label %.Lt_1252
.Lt_1252:

	; localvar V
	%V.315 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.315 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.314

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.315 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.315 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.315 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.315 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.314

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.314

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.315 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.314

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.315 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1251
	br label %.Lt_1251
.Lt_1251:

	; label .Lt_1250
	br label %.Lt_1250
.Lt_1250:

	; label .Lt_124F
	br label %.Lt_124F
.Lt_124F:
	ret void
}

define void @INS_BIT( %CPU6510* %CPU.316$ ) nounwind
{

	; paramvar CPU
	%CPU.316 = alloca %CPU6510*
	store %CPU6510* %CPU.316$, %CPU6510** %CPU.316

	; localvar B
	%B.317 = alloca i8

	; localvar LT_1256
	%LT_1256.318 = alloca i64

	; localvar LT_1258
	%LT_1258.319 = alloca i64

	; localvar LT_125A
	%LT_125A.320 = alloca i64

	; label .Lt_1253
	br label %.Lt_1253
.Lt_1253:

	; addrof B

	; memclear B
	call void @llvm.memset.p0i8.i32( i8* %B.317, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr2 = load %CPU6510*, %CPU6510** %CPU.316

	; conv vr2+64 => vr3
	%vr4 = ptrtoint %CPU6510* %vr2 to i64
	%vr5 = add i64 %vr4, 64
	%vr6 = inttoptr i64 %vr5 to i16*
	%vr7 = load i16, i16* %vr6
	%vr3 = zext i16 %vr7 to i64

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.316

	; call READBYTE()
	; arg vr9+16
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 16
	%vr13 = inttoptr i64 %vr12 to %MEMORY_T**
	%vr14 = load %MEMORY_T*, %MEMORY_T** %vr13
	; arg vr3
	%vr10 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr14, i64 %vr3 )

	; store B := vr10
	store i8 %vr10, i8* %B.317

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.316

	; bop vr16 AND -129
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = inttoptr i64 %vr19 to i64*
	%vr21 = load i64, i64* %vr20
	%vr18 = and i64 %vr21, -129

	; conv B => vr23
	%vr24 = load i8, i8* %B.317
	%vr23 = sext i8 %vr24 to i64

	; bop vr23 AND 128
	%vr25 = and i64 %vr23, 128

	; branchbop vr25 == 0
	%vr26 = icmp eq i64 %vr25, 0
	br i1 %vr26, label %.Lt_1255, label %.Lt_125B
.Lt_125B:

	; store LT_1256 := 1
	store i64 1, i64* %LT_1256.318

	; goto .Lt_125C
	br label %.Lt_125C
.Lt_125D:

	; label .Lt_1255
	br label %.Lt_1255
.Lt_1255:

	; store LT_1256 := 0
	store i64 0, i64* %LT_1256.318

	; label .Lt_125C
	br label %.Lt_125C
.Lt_125C:
	%vr28 = load i64, i64* %LT_1256.318
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 7
	%vr31 = bitcast i64 7 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr18 OR vr30
	%vr32 = or i64 %vr18, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.316

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.316

	; bop vr39 AND -65
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -65

	; conv B => vr46
	%vr47 = load i8, i8* %B.317
	%vr46 = sext i8 %vr47 to i64

	; bop vr46 AND 64
	%vr48 = and i64 %vr46, 64

	; branchbop vr48 == 0
	%vr49 = icmp eq i64 %vr48, 0
	br i1 %vr49, label %.Lt_1257, label %.Lt_125E
.Lt_125E:

	; store LT_1258 := 1
	store i64 1, i64* %LT_1258.319

	; goto .Lt_125F
	br label %.Lt_125F
.Lt_1260:

	; label .Lt_1257
	br label %.Lt_1257
.Lt_1257:

	; store LT_1258 := 0
	store i64 0, i64* %LT_1258.319

	; label .Lt_125F
	br label %.Lt_125F
.Lt_125F:
	%vr51 = load i64, i64* %LT_1258.319
	%vr50 = bitcast i64 %vr51 to i64

	; bop vr50 AND 1
	%vr52 = and i64 %vr50, 1

	; bop vr52 SHL 6
	%vr54 = bitcast i64 6 to i64
	%vr53 = shl i64 %vr52, %vr54

	; bop vr41 OR vr53
	%vr55 = or i64 %vr41, %vr53

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.316

	; store vr57 := vr55
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to i64*
	store i64 %vr55, i64* %vr60

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.316

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv B => vr69
	%vr70 = load i8, i8* %B.317
	%vr69 = sext i8 %vr70 to i64

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.316

	; conv vr72+9 => vr73
	%vr74 = ptrtoint %CPU6510* %vr72 to i64
	%vr75 = add i64 %vr74, 9
	%vr76 = inttoptr i64 %vr75 to i8*
	%vr77 = load i8, i8* %vr76
	%vr73 = sext i8 %vr77 to i64

	; bop vr69 AND vr73
	%vr78 = and i64 %vr69, %vr73

	; branchbop vr78 <> 0
	%vr79 = icmp ne i64 %vr78, 0
	br i1 %vr79, label %.Lt_1259, label %.Lt_1261
.Lt_1261:

	; store LT_125A := 1
	store i64 1, i64* %LT_125A.320

	; goto .Lt_1262
	br label %.Lt_1262
.Lt_1263:

	; label .Lt_1259
	br label %.Lt_1259
.Lt_1259:

	; store LT_125A := 0
	store i64 0, i64* %LT_125A.320

	; label .Lt_1262
	br label %.Lt_1262
.Lt_1262:
	%vr81 = load i64, i64* %LT_125A.320
	%vr80 = bitcast i64 %vr81 to i64

	; bop vr80 AND 1
	%vr82 = and i64 %vr80, 1

	; bop vr82 SHL 1
	%vr84 = bitcast i64 1 to i64
	%vr83 = shl i64 %vr82, %vr84

	; bop vr64 OR vr83
	%vr85 = or i64 %vr64, %vr83

	; deref CPU
	%vr87 = load %CPU6510*, %CPU6510** %CPU.316

	; store vr87 := vr85
	%vr89 = ptrtoint %CPU6510* %vr87 to i64
	%vr90 = inttoptr i64 %vr89 to i64*
	store i64 %vr85, i64* %vr90

	; label .Lt_1254
	br label %.Lt_1254
.Lt_1254:
	ret void
}

define void @INS_BMI( %CPU6510* %CPU.321$ ) nounwind
{

	; paramvar CPU
	%CPU.321 = alloca %CPU6510*
	store %CPU6510* %CPU.321$, %CPU6510** %CPU.321

	; label .Lt_1264
	br label %.Lt_1264
.Lt_1264:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.321

	; bop vr1 SHR 7
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 7 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 == 0
	%vr10 = icmp eq i64 %vr9, 0
	br i1 %vr10, label %.Lt_1267, label %.Lt_1268
.Lt_1268:

	; localvar V
	%V.322 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.322 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.321

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.322 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.322 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.322 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.322 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.321

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.321

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.322 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.321

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.322 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1267
	br label %.Lt_1267
.Lt_1267:

	; label .Lt_1266
	br label %.Lt_1266
.Lt_1266:

	; label .Lt_1265
	br label %.Lt_1265
.Lt_1265:
	ret void
}

define void @INS_BNE( %CPU6510* %CPU.323$ ) nounwind
{

	; paramvar CPU
	%CPU.323 = alloca %CPU6510*
	store %CPU6510* %CPU.323$, %CPU6510** %CPU.323

	; label .Lt_1269
	br label %.Lt_1269
.Lt_1269:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.323

	; bop vr1 SHR 1
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 1 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_126C, label %.Lt_126D
.Lt_126D:

	; localvar V
	%V.324 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.324 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.323

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.324 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.324 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.324 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.324 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.323

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.323

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.324 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.323

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.324 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_126C
	br label %.Lt_126C
.Lt_126C:

	; label .Lt_126B
	br label %.Lt_126B
.Lt_126B:

	; label .Lt_126A
	br label %.Lt_126A
.Lt_126A:
	ret void
}

define void @INS_BPL( %CPU6510* %CPU.325$ ) nounwind
{

	; paramvar CPU
	%CPU.325 = alloca %CPU6510*
	store %CPU6510* %CPU.325$, %CPU6510** %CPU.325

	; label .Lt_126E
	br label %.Lt_126E
.Lt_126E:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.325

	; bop vr1 SHR 7
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 7 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_1271, label %.Lt_1272
.Lt_1272:

	; localvar V
	%V.326 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.326 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.325

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.326 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.326 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.326 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.326 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.325

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.325

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.326 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.325

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.326 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1271
	br label %.Lt_1271
.Lt_1271:

	; label .Lt_1270
	br label %.Lt_1270
.Lt_1270:

	; label .Lt_126F
	br label %.Lt_126F
.Lt_126F:
	ret void
}

define void @INS_BRK( %CPU6510* %CPU.327$ ) nounwind
{

	; paramvar CPU
	%CPU.327 = alloca %CPU6510*
	store %CPU6510* %CPU.327$, %CPU6510** %CPU.327

	; label .Lt_1273
	br label %.Lt_1273
.Lt_1273:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.327

	; conv vr1+12 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 12
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = sext i16 %vr6 to i64

	; bop vr2 + 1
	%vr7 = add i64 %vr2, 1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i16

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.327

	; store vr10+12 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 12
	%vr13 = inttoptr i64 %vr12 to i16*
	store i16 %vr8, i16* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.327

	; conv vr15+13 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 13
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = zext i8 %vr20 to i64

	; call PUSH()
	; arg CPU
	%vr21 = load %CPU6510*, %CPU6510** %CPU.327
	; arg vr16
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr21, i64 %vr16 )

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.327

	; conv vr23+12 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 12
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = zext i8 %vr28 to i64

	; call PUSH()
	; arg CPU
	%vr29 = load %CPU6510*, %CPU6510** %CPU.327
	; arg vr24
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr29, i64 %vr24 )

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.327

	; conv vr31 => vr32
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = inttoptr i64 %vr33 to i8*
	%vr35 = load i8, i8* %vr34
	%vr32 = zext i8 %vr35 to i64

	; call PUSH()
	; arg CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.327
	; arg vr32
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr36, i64 %vr32 )

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.327

	; bop vr38 AND -17
	%vr41 = ptrtoint %CPU6510* %vr38 to i64
	%vr42 = inttoptr i64 %vr41 to i64*
	%vr43 = load i64, i64* %vr42
	%vr40 = and i64 %vr43, -17

	; bop vr40 OR 16
	%vr45 = or i64 %vr40, 16

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.327

	; store vr47 := vr45
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	store i64 %vr45, i64* %vr50

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.327

	; bop vr52 AND -5
	%vr55 = ptrtoint %CPU6510* %vr52 to i64
	%vr56 = inttoptr i64 %vr55 to i64*
	%vr57 = load i64, i64* %vr56
	%vr54 = and i64 %vr57, -5

	; bop vr54 OR 4
	%vr59 = or i64 %vr54, 4

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.327

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.327

	; call READUSHORT()
	; arg vr66+16
	%vr68 = ptrtoint %CPU6510* %vr66 to i64
	%vr69 = add i64 %vr68, 16
	%vr70 = inttoptr i64 %vr69 to %MEMORY_T**
	%vr71 = load %MEMORY_T*, %MEMORY_T** %vr70
	; arg 65534
	%vr67 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr71, i64 65534 )

	; deref CPU
	%vr73 = load %CPU6510*, %CPU6510** %CPU.327

	; store vr73+12 := vr67
	%vr74 = ptrtoint %CPU6510* %vr73 to i64
	%vr75 = add i64 %vr74, 12
	%vr76 = inttoptr i64 %vr75 to i16*
	store i16 %vr67, i16* %vr76

	; label .Lt_1274
	br label %.Lt_1274
.Lt_1274:
	ret void
}

define void @INS_BVC( %CPU6510* %CPU.328$ ) nounwind
{

	; paramvar CPU
	%CPU.328 = alloca %CPU6510*
	store %CPU6510* %CPU.328$, %CPU6510** %CPU.328

	; label .Lt_1275
	br label %.Lt_1275
.Lt_1275:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.328

	; bop vr1 SHR 6
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 6 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 <> 0
	%vr10 = icmp ne i64 %vr9, 0
	br i1 %vr10, label %.Lt_1278, label %.Lt_1279
.Lt_1279:

	; localvar V
	%V.329 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.329 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.328

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.329 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.329 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.328

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.328

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.329 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.328

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.329 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_1278
	br label %.Lt_1278
.Lt_1278:

	; label .Lt_1277
	br label %.Lt_1277
.Lt_1277:

	; label .Lt_1276
	br label %.Lt_1276
.Lt_1276:
	ret void
}

define void @INS_BVS( %CPU6510* %CPU.330$ ) nounwind
{

	; paramvar CPU
	%CPU.330 = alloca %CPU6510*
	store %CPU6510* %CPU.330$, %CPU6510** %CPU.330

	; label .Lt_127A
	br label %.Lt_127A
.Lt_127A:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.330

	; bop vr1 SHR 6
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr8 = bitcast i64 6 to i64
	%vr3 = ashr i64 %vr6, %vr8

	; bop vr3 AND 1
	%vr9 = and i64 %vr3, 1

	; branchbop vr9 == 0
	%vr10 = icmp eq i64 %vr9, 0
	br i1 %vr10, label %.Lt_127D, label %.Lt_127E
.Lt_127E:

	; localvar V
	%V.331 = alloca %MULTI

	; addrof V

	; memclear V
	%vr12 = bitcast %MULTI* %V.331 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr12, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.330

	; store V := vr14+12
	%vr15 = ptrtoint %CPU6510* %vr14 to i64
	%vr16 = add i64 %vr15, 12
	%vr17 = inttoptr i64 %vr16 to i16*
	%vr18 = load i16, i16* %vr17
	%vr19 = bitcast %MULTI* %V.331 to i16*
	store i16 %vr18, i16* %vr19

	; conv V => vr20
	%vr21 = bitcast %MULTI* %V.331 to i16*
	%vr22 = load i16, i16* %vr21
	%vr20 = sext i16 %vr22 to i64

	; bop vr20 + -1
	%vr23 = add i64 %vr20, -1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; store V := vr24
	%vr25 = bitcast %MULTI* %V.331 to i16*
	store i16 %vr24, i16* %vr25

	; conv V => vr26
	%vr27 = bitcast %MULTI* %V.331 to i16*
	%vr28 = load i16, i16* %vr27
	%vr26 = sext i16 %vr28 to i64

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.330

	; conv vr30+64 => vr31
	%vr32 = ptrtoint %CPU6510* %vr30 to i64
	%vr33 = add i64 %vr32, 64
	%vr34 = inttoptr i64 %vr33 to i16*
	%vr35 = load i16, i16* %vr34
	%vr31 = zext i16 %vr35 to i64

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.330

	; call READBYTE()
	; arg vr37+16
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = add i64 %vr39, 16
	%vr41 = inttoptr i64 %vr40 to %MEMORY_T**
	%vr42 = load %MEMORY_T*, %MEMORY_T** %vr41
	; arg vr31
	%vr38 = call i8 @_ZN8MEMORY_T8READBYTEEy( %MEMORY_T* %vr42, i64 %vr31 )

	; conv vr38 => vr43
	%vr43 = sext i8 %vr38 to i64

	; bop vr26 + vr43
	%vr44 = add i64 %vr26, %vr43

	; bop vr44 + 1
	%vr45 = add i64 %vr44, 1

	; conv vr45 => vr46
	%vr46 = trunc i64 %vr45 to i16

	; store V := vr46
	%vr47 = bitcast %MULTI* %V.331 to i16*
	store i16 %vr46, i16* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.330

	; store vr49+12 := V
	%vr50 = bitcast %MULTI* %V.331 to i16*
	%vr51 = load i16, i16* %vr50
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = add i64 %vr52, 12
	%vr54 = inttoptr i64 %vr53 to i16*
	store i16 %vr51, i16* %vr54

	; label .Lt_127D
	br label %.Lt_127D
.Lt_127D:

	; label .Lt_127C
	br label %.Lt_127C
.Lt_127C:

	; label .Lt_127B
	br label %.Lt_127B
.Lt_127B:
	ret void
}

define void @INS_CLC( %CPU6510* %CPU.332$ ) nounwind
{

	; paramvar CPU
	%CPU.332 = alloca %CPU6510*
	store %CPU6510* %CPU.332$, %CPU6510** %CPU.332

	; label .Lt_127F
	br label %.Lt_127F
.Lt_127F:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.332

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.332

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1280
	br label %.Lt_1280
.Lt_1280:
	ret void
}

define void @INS_CLD( %CPU6510* %CPU.333$ ) nounwind
{

	; paramvar CPU
	%CPU.333 = alloca %CPU6510*
	store %CPU6510* %CPU.333$, %CPU6510** %CPU.333

	; label .Lt_1281
	br label %.Lt_1281
.Lt_1281:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.333

	; bop vr1 AND -9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -9

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.333

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1282
	br label %.Lt_1282
.Lt_1282:
	ret void
}

define void @INS_CLI( %CPU6510* %CPU.334$ ) nounwind
{

	; paramvar CPU
	%CPU.334 = alloca %CPU6510*
	store %CPU6510* %CPU.334$, %CPU6510** %CPU.334

	; label .Lt_1283
	br label %.Lt_1283
.Lt_1283:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.334

	; bop vr1 AND -5
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -5

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.334

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1284
	br label %.Lt_1284
.Lt_1284:
	ret void
}

define void @INS_CLV( %CPU6510* %CPU.335$ ) nounwind
{

	; paramvar CPU
	%CPU.335 = alloca %CPU6510*
	store %CPU6510* %CPU.335$, %CPU6510** %CPU.335

	; label .Lt_1285
	br label %.Lt_1285
.Lt_1285:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.335

	; bop vr1 AND -65
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -65

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.335

	; store vr9 := vr3
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i64*
	store i64 %vr3, i64* %vr12

	; label .Lt_1286
	br label %.Lt_1286
.Lt_1286:
	ret void
}

define void @INS_CMP( %CPU6510* %CPU.336$ ) nounwind
{

	; paramvar CPU
	%CPU.336 = alloca %CPU6510*
	store %CPU6510* %CPU.336$, %CPU6510** %CPU.336

	; localvar V
	%V.337 = alloca %MULTI

	; localvar LT_128A
	%LT_128A.338 = alloca i64

	; localvar LT_128C
	%LT_128C.339 = alloca i64

	; localvar LT_128E
	%LT_128E.340 = alloca i64

	; label .Lt_1287
	br label %.Lt_1287
.Lt_1287:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.337 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.336

	; conv vr3+8 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 8
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.336

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.336

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.337 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.336

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.337 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_1289, label %.Lt_128F
.Lt_128F:

	; store LT_128A := 1
	store i64 1, i64* %LT_128A.338

	; goto .Lt_1290
	br label %.Lt_1290
.Lt_1291:

	; label .Lt_1289
	br label %.Lt_1289
.Lt_1289:

	; store LT_128A := 0
	store i64 0, i64* %LT_128A.338

	; label .Lt_1290
	br label %.Lt_1290
.Lt_1290:
	%vr40 = load i64, i64* %LT_128A.338
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.336

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.336

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.337 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_128B, label %.Lt_1292
.Lt_1292:

	; store LT_128C := 1
	store i64 1, i64* %LT_128C.339

	; goto .Lt_1293
	br label %.Lt_1293
.Lt_1294:

	; label .Lt_128B
	br label %.Lt_128B
.Lt_128B:

	; store LT_128C := 0
	store i64 0, i64* %LT_128C.339

	; label .Lt_1293
	br label %.Lt_1293
.Lt_1293:
	%vr61 = load i64, i64* %LT_128C.339
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.336

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.336

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.337 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_128D, label %.Lt_1295
.Lt_1295:

	; store LT_128E := 1
	store i64 1, i64* %LT_128E.340

	; goto .Lt_1296
	br label %.Lt_1296
.Lt_1297:

	; label .Lt_128D
	br label %.Lt_128D
.Lt_128D:

	; store LT_128E := 0
	store i64 0, i64* %LT_128E.340

	; label .Lt_1296
	br label %.Lt_1296
.Lt_1296:
	%vr84 = load i64, i64* %LT_128E.340
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.336

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_1288
	br label %.Lt_1288
.Lt_1288:
	ret void
}

define void @INS_CPX( %CPU6510* %CPU.341$ ) nounwind
{

	; paramvar CPU
	%CPU.341 = alloca %CPU6510*
	store %CPU6510* %CPU.341$, %CPU6510** %CPU.341

	; localvar V
	%V.342 = alloca %MULTI

	; localvar LT_129B
	%LT_129B.343 = alloca i64

	; localvar LT_129D
	%LT_129D.344 = alloca i64

	; localvar LT_129F
	%LT_129F.345 = alloca i64

	; label .Lt_1298
	br label %.Lt_1298
.Lt_1298:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.342 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.341

	; conv vr3+9 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 9
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.341

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.341

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.342 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.341

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.342 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_129A, label %.Lt_12A0
.Lt_12A0:

	; store LT_129B := 1
	store i64 1, i64* %LT_129B.343

	; goto .Lt_12A1
	br label %.Lt_12A1
.Lt_12A2:

	; label .Lt_129A
	br label %.Lt_129A
.Lt_129A:

	; store LT_129B := 0
	store i64 0, i64* %LT_129B.343

	; label .Lt_12A1
	br label %.Lt_12A1
.Lt_12A1:
	%vr40 = load i64, i64* %LT_129B.343
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.341

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.341

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.342 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_129C, label %.Lt_12A3
.Lt_12A3:

	; store LT_129D := 1
	store i64 1, i64* %LT_129D.344

	; goto .Lt_12A4
	br label %.Lt_12A4
.Lt_12A5:

	; label .Lt_129C
	br label %.Lt_129C
.Lt_129C:

	; store LT_129D := 0
	store i64 0, i64* %LT_129D.344

	; label .Lt_12A4
	br label %.Lt_12A4
.Lt_12A4:
	%vr61 = load i64, i64* %LT_129D.344
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.341

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.341

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.342 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_129E, label %.Lt_12A6
.Lt_12A6:

	; store LT_129F := 1
	store i64 1, i64* %LT_129F.345

	; goto .Lt_12A7
	br label %.Lt_12A7
.Lt_12A8:

	; label .Lt_129E
	br label %.Lt_129E
.Lt_129E:

	; store LT_129F := 0
	store i64 0, i64* %LT_129F.345

	; label .Lt_12A7
	br label %.Lt_12A7
.Lt_12A7:
	%vr84 = load i64, i64* %LT_129F.345
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.341

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_1299
	br label %.Lt_1299
.Lt_1299:
	ret void
}

define void @INS_CPY( %CPU6510* %CPU.346$ ) nounwind
{

	; paramvar CPU
	%CPU.346 = alloca %CPU6510*
	store %CPU6510* %CPU.346$, %CPU6510** %CPU.346

	; localvar V
	%V.347 = alloca %MULTI

	; localvar LT_12AC
	%LT_12AC.348 = alloca i64

	; localvar LT_12AE
	%LT_12AE.349 = alloca i64

	; localvar LT_12B0
	%LT_12B0.350 = alloca i64

	; label .Lt_12A9
	br label %.Lt_12A9
.Lt_12A9:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.347 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.346

	; conv vr3+10 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 10
	%vr7 = inttoptr i64 %vr6 to i8*
	%vr8 = load i8, i8* %vr7
	%vr4 = sext i8 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.346

	; conv vr10+64 => vr11
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 64
	%vr14 = inttoptr i64 %vr13 to i16*
	%vr15 = load i16, i16* %vr14
	%vr11 = zext i16 %vr15 to i64

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.346

	; call READUBYTE()
	; arg vr17+16
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 16
	%vr21 = inttoptr i64 %vr20 to %MEMORY_T**
	%vr22 = load %MEMORY_T*, %MEMORY_T** %vr21
	; arg vr11
	%vr18 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr22, i64 %vr11 )

	; conv vr18 => vr23
	%vr23 = sext i8 %vr18 to i64

	; bop vr4 - vr23
	%vr24 = sub i64 %vr4, %vr23

	; conv vr24 => vr25
	%vr25 = trunc i64 %vr24 to i16

	; store V := vr25
	%vr26 = bitcast %MULTI* %V.347 to i16*
	store i16 %vr25, i16* %vr26

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.346

	; bop vr28 AND -2
	%vr31 = ptrtoint %CPU6510* %vr28 to i64
	%vr32 = inttoptr i64 %vr31 to i64*
	%vr33 = load i64, i64* %vr32
	%vr30 = and i64 %vr33, -2

	; conv V => vr35
	%vr36 = bitcast %MULTI* %V.347 to i16*
	%vr37 = load i16, i16* %vr36
	%vr35 = sext i16 %vr37 to i64

	; branchbop vr35 > 255
	%vr38 = icmp sgt i64 %vr35, 255
	br i1 %vr38, label %.Lt_12AB, label %.Lt_12B1
.Lt_12B1:

	; store LT_12AC := 1
	store i64 1, i64* %LT_12AC.348

	; goto .Lt_12B2
	br label %.Lt_12B2
.Lt_12B3:

	; label .Lt_12AB
	br label %.Lt_12AB
.Lt_12AB:

	; store LT_12AC := 0
	store i64 0, i64* %LT_12AC.348

	; label .Lt_12B2
	br label %.Lt_12B2
.Lt_12B2:
	%vr40 = load i64, i64* %LT_12AC.348
	%vr39 = bitcast i64 %vr40 to i64

	; bop vr39 AND 1
	%vr41 = and i64 %vr39, 1

	; bop vr30 OR vr41
	%vr42 = or i64 %vr30, %vr41

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.346

	; store vr44 := vr42
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = inttoptr i64 %vr46 to i64*
	store i64 %vr42, i64* %vr47

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.346

	; bop vr49 AND -3
	%vr52 = ptrtoint %CPU6510* %vr49 to i64
	%vr53 = inttoptr i64 %vr52 to i64*
	%vr54 = load i64, i64* %vr53
	%vr51 = and i64 %vr54, -3

	; conv V => vr56
	%vr57 = bitcast %MULTI* %V.347 to i8*
	%vr58 = load i8, i8* %vr57
	%vr56 = sext i8 %vr58 to i64

	; branchbop vr56 <> 0
	%vr59 = icmp ne i64 %vr56, 0
	br i1 %vr59, label %.Lt_12AD, label %.Lt_12B4
.Lt_12B4:

	; store LT_12AE := 1
	store i64 1, i64* %LT_12AE.349

	; goto .Lt_12B5
	br label %.Lt_12B5
.Lt_12B6:

	; label .Lt_12AD
	br label %.Lt_12AD
.Lt_12AD:

	; store LT_12AE := 0
	store i64 0, i64* %LT_12AE.349

	; label .Lt_12B5
	br label %.Lt_12B5
.Lt_12B5:
	%vr61 = load i64, i64* %LT_12AE.349
	%vr60 = bitcast i64 %vr61 to i64

	; bop vr60 AND 1
	%vr62 = and i64 %vr60, 1

	; bop vr62 SHL 1
	%vr64 = bitcast i64 1 to i64
	%vr63 = shl i64 %vr62, %vr64

	; bop vr51 OR vr63
	%vr65 = or i64 %vr51, %vr63

	; deref CPU
	%vr67 = load %CPU6510*, %CPU6510** %CPU.346

	; store vr67 := vr65
	%vr69 = ptrtoint %CPU6510* %vr67 to i64
	%vr70 = inttoptr i64 %vr69 to i64*
	store i64 %vr65, i64* %vr70

	; deref CPU
	%vr72 = load %CPU6510*, %CPU6510** %CPU.346

	; bop vr72 AND -129
	%vr75 = ptrtoint %CPU6510* %vr72 to i64
	%vr76 = inttoptr i64 %vr75 to i64*
	%vr77 = load i64, i64* %vr76
	%vr74 = and i64 %vr77, -129

	; conv V => vr79
	%vr80 = bitcast %MULTI* %V.347 to i8*
	%vr81 = load i8, i8* %vr80
	%vr79 = sext i8 %vr81 to i64

	; branchbop vr79 >= 0
	%vr82 = icmp sge i64 %vr79, 0
	br i1 %vr82, label %.Lt_12AF, label %.Lt_12B7
.Lt_12B7:

	; store LT_12B0 := 1
	store i64 1, i64* %LT_12B0.350

	; goto .Lt_12B8
	br label %.Lt_12B8
.Lt_12B9:

	; label .Lt_12AF
	br label %.Lt_12AF
.Lt_12AF:

	; store LT_12B0 := 0
	store i64 0, i64* %LT_12B0.350

	; label .Lt_12B8
	br label %.Lt_12B8
.Lt_12B8:
	%vr84 = load i64, i64* %LT_12B0.350
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr74 OR vr86
	%vr88 = or i64 %vr74, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.346

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_12AA
	br label %.Lt_12AA
.Lt_12AA:
	ret void
}

define void @INS_DEC( %CPU6510* %CPU.351$ ) nounwind
{

	; paramvar CPU
	%CPU.351 = alloca %CPU6510*
	store %CPU6510* %CPU.351$, %CPU6510** %CPU.351

	; localvar V
	%V.352 = alloca %MULTI

	; localvar LT_12BD
	%LT_12BD.353 = alloca i64

	; localvar LT_12BF
	%LT_12BF.354 = alloca i64

	; label .Lt_12BA
	br label %.Lt_12BA
.Lt_12BA:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.352 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.351

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.351

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.352 to i8*
	store i8 %vr11, i8* %vr16

	; conv V => vr17
	%vr18 = bitcast %MULTI* %V.352 to i8*
	%vr19 = load i8, i8* %vr18
	%vr17 = sext i8 %vr19 to i64

	; bop vr17 + -1
	%vr20 = add i64 %vr17, -1

	; conv vr20 => vr21
	%vr21 = trunc i64 %vr20 to i8

	; store V := vr21
	%vr22 = bitcast %MULTI* %V.352 to i8*
	store i8 %vr21, i8* %vr22

	; deref CPU
	%vr24 = load %CPU6510*, %CPU6510** %CPU.351

	; bop vr24 AND -3
	%vr27 = ptrtoint %CPU6510* %vr24 to i64
	%vr28 = inttoptr i64 %vr27 to i64*
	%vr29 = load i64, i64* %vr28
	%vr26 = and i64 %vr29, -3

	; conv V => vr31
	%vr32 = bitcast %MULTI* %V.352 to i8*
	%vr33 = load i8, i8* %vr32
	%vr31 = sext i8 %vr33 to i64

	; branchbop vr31 <> 0
	%vr34 = icmp ne i64 %vr31, 0
	br i1 %vr34, label %.Lt_12BC, label %.Lt_12C0
.Lt_12C0:

	; store LT_12BD := 1
	store i64 1, i64* %LT_12BD.353

	; goto .Lt_12C1
	br label %.Lt_12C1
.Lt_12C2:

	; label .Lt_12BC
	br label %.Lt_12BC
.Lt_12BC:

	; store LT_12BD := 0
	store i64 0, i64* %LT_12BD.353

	; label .Lt_12C1
	br label %.Lt_12C1
.Lt_12C1:
	%vr36 = load i64, i64* %LT_12BD.353
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr26 OR vr38
	%vr40 = or i64 %vr26, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.351

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.351

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; conv V => vr54
	%vr55 = bitcast %MULTI* %V.352 to i8*
	%vr56 = load i8, i8* %vr55
	%vr54 = sext i8 %vr56 to i64

	; branchbop vr54 >= 0
	%vr57 = icmp sge i64 %vr54, 0
	br i1 %vr57, label %.Lt_12BE, label %.Lt_12C3
.Lt_12C3:

	; store LT_12BF := 1
	store i64 1, i64* %LT_12BF.354

	; goto .Lt_12C4
	br label %.Lt_12C4
.Lt_12C5:

	; label .Lt_12BE
	br label %.Lt_12BE
.Lt_12BE:

	; store LT_12BF := 0
	store i64 0, i64* %LT_12BF.354

	; label .Lt_12C4
	br label %.Lt_12C4
.Lt_12C4:
	%vr59 = load i64, i64* %LT_12BF.354
	%vr58 = bitcast i64 %vr59 to i64

	; bop vr58 AND 1
	%vr60 = and i64 %vr58, 1

	; bop vr60 SHL 7
	%vr62 = bitcast i64 7 to i64
	%vr61 = shl i64 %vr60, %vr62

	; bop vr49 OR vr61
	%vr63 = or i64 %vr49, %vr61

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.351

	; store vr65 := vr63
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = inttoptr i64 %vr67 to i64*
	store i64 %vr63, i64* %vr68

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.352 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = zext i8 %vr71 to i64

	; deref CPU
	%vr73 = load %CPU6510*, %CPU6510** %CPU.351

	; conv vr73+64 => vr74
	%vr75 = ptrtoint %CPU6510* %vr73 to i64
	%vr76 = add i64 %vr75, 64
	%vr77 = inttoptr i64 %vr76 to i16*
	%vr78 = load i16, i16* %vr77
	%vr74 = zext i16 %vr78 to i64

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.351

	; call WRITEUBYTE()
	; arg vr80+16
	%vr81 = ptrtoint %CPU6510* %vr80 to i64
	%vr82 = add i64 %vr81, 16
	%vr83 = inttoptr i64 %vr82 to %MEMORY_T**
	%vr84 = load %MEMORY_T*, %MEMORY_T** %vr83
	; arg vr74
	; arg vr69
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr84, i64 %vr74, i64 %vr69 )

	; label .Lt_12BB
	br label %.Lt_12BB
.Lt_12BB:
	ret void
}

define void @INS_DEX( %CPU6510* %CPU.355$ ) nounwind
{

	; paramvar CPU
	%CPU.355 = alloca %CPU6510*
	store %CPU6510* %CPU.355$, %CPU6510** %CPU.355

	; localvar LT_12C9
	%LT_12C9.356 = alloca i64

	; localvar LT_12CB
	%LT_12CB.357 = alloca i64

	; label .Lt_12C6
	br label %.Lt_12C6
.Lt_12C6:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.355

	; conv vr1+9 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 9
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.355

	; store vr10+9 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 9
	%vr13 = inttoptr i64 %vr12 to i8*
	store i8 %vr8, i8* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.355

	; bop vr15 AND -3
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr17 = and i64 %vr20, -3

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.355

	; conv vr23+9 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 9
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = sext i8 %vr28 to i64

	; branchbop vr24 <> 0
	%vr29 = icmp ne i64 %vr24, 0
	br i1 %vr29, label %.Lt_12C8, label %.Lt_12CC
.Lt_12CC:

	; store LT_12C9 := 1
	store i64 1, i64* %LT_12C9.356

	; goto .Lt_12CD
	br label %.Lt_12CD
.Lt_12CE:

	; label .Lt_12C8
	br label %.Lt_12C8
.Lt_12C8:

	; store LT_12C9 := 0
	store i64 0, i64* %LT_12C9.356

	; label .Lt_12CD
	br label %.Lt_12CD
.Lt_12CD:
	%vr31 = load i64, i64* %LT_12C9.356
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr32 SHL 1
	%vr34 = bitcast i64 1 to i64
	%vr33 = shl i64 %vr32, %vr34

	; bop vr17 OR vr33
	%vr35 = or i64 %vr17, %vr33

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.355

	; store vr37 := vr35
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	store i64 %vr35, i64* %vr40

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.355

	; bop vr42 AND -129
	%vr45 = ptrtoint %CPU6510* %vr42 to i64
	%vr46 = inttoptr i64 %vr45 to i64*
	%vr47 = load i64, i64* %vr46
	%vr44 = and i64 %vr47, -129

	; deref CPU
	%vr50 = load %CPU6510*, %CPU6510** %CPU.355

	; conv vr50+9 => vr51
	%vr52 = ptrtoint %CPU6510* %vr50 to i64
	%vr53 = add i64 %vr52, 9
	%vr54 = inttoptr i64 %vr53 to i8*
	%vr55 = load i8, i8* %vr54
	%vr51 = sext i8 %vr55 to i64

	; branchbop vr51 >= 0
	%vr56 = icmp sge i64 %vr51, 0
	br i1 %vr56, label %.Lt_12CA, label %.Lt_12CF
.Lt_12CF:

	; store LT_12CB := 1
	store i64 1, i64* %LT_12CB.357

	; goto .Lt_12D0
	br label %.Lt_12D0
.Lt_12D1:

	; label .Lt_12CA
	br label %.Lt_12CA
.Lt_12CA:

	; store LT_12CB := 0
	store i64 0, i64* %LT_12CB.357

	; label .Lt_12D0
	br label %.Lt_12D0
.Lt_12D0:
	%vr58 = load i64, i64* %LT_12CB.357
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr44 OR vr60
	%vr62 = or i64 %vr44, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.355

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_12C7
	br label %.Lt_12C7
.Lt_12C7:
	ret void
}

define void @INS_DEY( %CPU6510* %CPU.358$ ) nounwind
{

	; paramvar CPU
	%CPU.358 = alloca %CPU6510*
	store %CPU6510* %CPU.358$, %CPU6510** %CPU.358

	; localvar LT_12D5
	%LT_12D5.359 = alloca i64

	; localvar LT_12D7
	%LT_12D7.360 = alloca i64

	; label .Lt_12D2
	br label %.Lt_12D2
.Lt_12D2:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr1+10 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 10
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr10+10 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 10
	%vr13 = inttoptr i64 %vr12 to i8*
	store i8 %vr8, i8* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.358

	; bop vr15 AND -3
	%vr18 = ptrtoint %CPU6510* %vr15 to i64
	%vr19 = inttoptr i64 %vr18 to i64*
	%vr20 = load i64, i64* %vr19
	%vr17 = and i64 %vr20, -3

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr23+10 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 10
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = sext i8 %vr28 to i64

	; branchbop vr24 <> 0
	%vr29 = icmp ne i64 %vr24, 0
	br i1 %vr29, label %.Lt_12D4, label %.Lt_12D8
.Lt_12D8:

	; store LT_12D5 := 1
	store i64 1, i64* %LT_12D5.359

	; goto .Lt_12D9
	br label %.Lt_12D9
.Lt_12DA:

	; label .Lt_12D4
	br label %.Lt_12D4
.Lt_12D4:

	; store LT_12D5 := 0
	store i64 0, i64* %LT_12D5.359

	; label .Lt_12D9
	br label %.Lt_12D9
.Lt_12D9:
	%vr31 = load i64, i64* %LT_12D5.359
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr32 SHL 1
	%vr34 = bitcast i64 1 to i64
	%vr33 = shl i64 %vr32, %vr34

	; bop vr17 OR vr33
	%vr35 = or i64 %vr17, %vr33

	; deref CPU
	%vr37 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr37 := vr35
	%vr39 = ptrtoint %CPU6510* %vr37 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	store i64 %vr35, i64* %vr40

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.358

	; bop vr42 AND -129
	%vr45 = ptrtoint %CPU6510* %vr42 to i64
	%vr46 = inttoptr i64 %vr45 to i64*
	%vr47 = load i64, i64* %vr46
	%vr44 = and i64 %vr47, -129

	; deref CPU
	%vr50 = load %CPU6510*, %CPU6510** %CPU.358

	; conv vr50+10 => vr51
	%vr52 = ptrtoint %CPU6510* %vr50 to i64
	%vr53 = add i64 %vr52, 10
	%vr54 = inttoptr i64 %vr53 to i8*
	%vr55 = load i8, i8* %vr54
	%vr51 = sext i8 %vr55 to i64

	; branchbop vr51 >= 0
	%vr56 = icmp sge i64 %vr51, 0
	br i1 %vr56, label %.Lt_12D6, label %.Lt_12DB
.Lt_12DB:

	; store LT_12D7 := 1
	store i64 1, i64* %LT_12D7.360

	; goto .Lt_12DC
	br label %.Lt_12DC
.Lt_12DD:

	; label .Lt_12D6
	br label %.Lt_12D6
.Lt_12D6:

	; store LT_12D7 := 0
	store i64 0, i64* %LT_12D7.360

	; label .Lt_12DC
	br label %.Lt_12DC
.Lt_12DC:
	%vr58 = load i64, i64* %LT_12D7.360
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr44 OR vr60
	%vr62 = or i64 %vr44, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.358

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_12D3
	br label %.Lt_12D3
.Lt_12D3:
	ret void
}

define void @INS_EOR( %CPU6510* %CPU.361$ ) nounwind
{

	; paramvar CPU
	%CPU.361 = alloca %CPU6510*
	store %CPU6510* %CPU.361$, %CPU6510** %CPU.361

	; localvar LT_12E1
	%LT_12E1.362 = alloca i64

	; localvar LT_12E3
	%LT_12E3.363 = alloca i64

	; label .Lt_12DE
	br label %.Lt_12DE
.Lt_12DE:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.361

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 XOR vr21
	%vr22 = xor i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.361

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_12E0, label %.Lt_12E4
.Lt_12E4:

	; store LT_12E1 := 1
	store i64 1, i64* %LT_12E1.362

	; goto .Lt_12E5
	br label %.Lt_12E5
.Lt_12E6:

	; label .Lt_12E0
	br label %.Lt_12E0
.Lt_12E0:

	; store LT_12E1 := 0
	store i64 0, i64* %LT_12E1.362

	; label .Lt_12E5
	br label %.Lt_12E5
.Lt_12E5:
	%vr46 = load i64, i64* %LT_12E1.362
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.361

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.361

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_12E2, label %.Lt_12E7
.Lt_12E7:

	; store LT_12E3 := 1
	store i64 1, i64* %LT_12E3.363

	; goto .Lt_12E8
	br label %.Lt_12E8
.Lt_12E9:

	; label .Lt_12E2
	br label %.Lt_12E2
.Lt_12E2:

	; store LT_12E3 := 0
	store i64 0, i64* %LT_12E3.363

	; label .Lt_12E8
	br label %.Lt_12E8
.Lt_12E8:
	%vr73 = load i64, i64* %LT_12E3.363
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.361

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_12DF
	br label %.Lt_12DF
.Lt_12DF:
	ret void
}

define void @INS_INC( %CPU6510* %CPU.364$ ) nounwind
{

	; paramvar CPU
	%CPU.364 = alloca %CPU6510*
	store %CPU6510* %CPU.364$, %CPU6510** %CPU.364

	; localvar V
	%V.365 = alloca %MULTI

	; localvar LT_12ED
	%LT_12ED.366 = alloca i64

	; localvar LT_12EF
	%LT_12EF.367 = alloca i64

	; label .Lt_12EA
	br label %.Lt_12EA
.Lt_12EA:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.365 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.364

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.365 to i8*
	store i8 %vr11, i8* %vr16

	; conv V => vr17
	%vr18 = bitcast %MULTI* %V.365 to i16*
	%vr19 = load i16, i16* %vr18
	%vr17 = sext i16 %vr19 to i64

	; bop vr17 + 1
	%vr20 = add i64 %vr17, 1

	; conv vr20 => vr21
	%vr21 = trunc i64 %vr20 to i16

	; store V := vr21
	%vr22 = bitcast %MULTI* %V.365 to i16*
	store i16 %vr21, i16* %vr22

	; conv V => vr23
	%vr24 = bitcast %MULTI* %V.365 to i8*
	%vr25 = load i8, i8* %vr24
	%vr23 = zext i8 %vr25 to i64

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.364

	; conv vr27+64 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 64
	%vr31 = inttoptr i64 %vr30 to i16*
	%vr32 = load i16, i16* %vr31
	%vr28 = zext i16 %vr32 to i64

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.364

	; call WRITEBYTE()
	; arg vr34+16
	%vr35 = ptrtoint %CPU6510* %vr34 to i64
	%vr36 = add i64 %vr35, 16
	%vr37 = inttoptr i64 %vr36 to %MEMORY_T**
	%vr38 = load %MEMORY_T*, %MEMORY_T** %vr37
	; arg vr28
	; arg vr23
	call void @_ZN8MEMORY_T9WRITEBYTEEyy( %MEMORY_T* %vr38, i64 %vr28, i64 %vr23 )

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.364

	; bop vr40 AND -3
	%vr43 = ptrtoint %CPU6510* %vr40 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	%vr45 = load i64, i64* %vr44
	%vr42 = and i64 %vr45, -3

	; conv V => vr47
	%vr48 = bitcast %MULTI* %V.365 to i8*
	%vr49 = load i8, i8* %vr48
	%vr47 = sext i8 %vr49 to i64

	; branchbop vr47 <> 0
	%vr50 = icmp ne i64 %vr47, 0
	br i1 %vr50, label %.Lt_12EC, label %.Lt_12F0
.Lt_12F0:

	; store LT_12ED := 1
	store i64 1, i64* %LT_12ED.366

	; goto .Lt_12F1
	br label %.Lt_12F1
.Lt_12F2:

	; label .Lt_12EC
	br label %.Lt_12EC
.Lt_12EC:

	; store LT_12ED := 0
	store i64 0, i64* %LT_12ED.366

	; label .Lt_12F1
	br label %.Lt_12F1
.Lt_12F1:
	%vr52 = load i64, i64* %LT_12ED.366
	%vr51 = bitcast i64 %vr52 to i64

	; bop vr51 AND 1
	%vr53 = and i64 %vr51, 1

	; bop vr53 SHL 1
	%vr55 = bitcast i64 1 to i64
	%vr54 = shl i64 %vr53, %vr55

	; bop vr42 OR vr54
	%vr56 = or i64 %vr42, %vr54

	; deref CPU
	%vr58 = load %CPU6510*, %CPU6510** %CPU.364

	; store vr58 := vr56
	%vr60 = ptrtoint %CPU6510* %vr58 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	store i64 %vr56, i64* %vr61

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.364

	; bop vr63 AND -129
	%vr66 = ptrtoint %CPU6510* %vr63 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	%vr68 = load i64, i64* %vr67
	%vr65 = and i64 %vr68, -129

	; conv V => vr70
	%vr71 = bitcast %MULTI* %V.365 to i8*
	%vr72 = load i8, i8* %vr71
	%vr70 = sext i8 %vr72 to i64

	; branchbop vr70 >= 0
	%vr73 = icmp sge i64 %vr70, 0
	br i1 %vr73, label %.Lt_12EE, label %.Lt_12F3
.Lt_12F3:

	; store LT_12EF := 1
	store i64 1, i64* %LT_12EF.367

	; goto .Lt_12F4
	br label %.Lt_12F4
.Lt_12F5:

	; label .Lt_12EE
	br label %.Lt_12EE
.Lt_12EE:

	; store LT_12EF := 0
	store i64 0, i64* %LT_12EF.367

	; label .Lt_12F4
	br label %.Lt_12F4
.Lt_12F4:
	%vr75 = load i64, i64* %LT_12EF.367
	%vr74 = bitcast i64 %vr75 to i64

	; bop vr74 AND 1
	%vr76 = and i64 %vr74, 1

	; bop vr76 SHL 7
	%vr78 = bitcast i64 7 to i64
	%vr77 = shl i64 %vr76, %vr78

	; bop vr65 OR vr77
	%vr79 = or i64 %vr65, %vr77

	; deref CPU
	%vr81 = load %CPU6510*, %CPU6510** %CPU.364

	; store vr81 := vr79
	%vr83 = ptrtoint %CPU6510* %vr81 to i64
	%vr84 = inttoptr i64 %vr83 to i64*
	store i64 %vr79, i64* %vr84

	; label .Lt_12EB
	br label %.Lt_12EB
.Lt_12EB:
	ret void
}

define void @INS_INX( %CPU6510* %CPU.368$ ) nounwind
{

	; paramvar CPU
	%CPU.368 = alloca %CPU6510*
	store %CPU6510* %CPU.368$, %CPU6510** %CPU.368

	; localvar V
	%V.369 = alloca %MULTI

	; localvar LT_12F9
	%LT_12F9.370 = alloca i64

	; localvar LT_12FB
	%LT_12FB.371 = alloca i64

	; label .Lt_12F6
	br label %.Lt_12F6
.Lt_12F6:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.369 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.368

	; store V := vr3+9
	%vr4 = ptrtoint %CPU6510* %vr3 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = bitcast %MULTI* %V.369 to i8*
	store i8 %vr7, i8* %vr8

	; conv V => vr9
	%vr10 = bitcast %MULTI* %V.369 to i16*
	%vr11 = load i16, i16* %vr10
	%vr9 = sext i16 %vr11 to i64

	; bop vr9 + 1
	%vr12 = add i64 %vr9, 1

	; conv vr12 => vr13
	%vr13 = trunc i64 %vr12 to i16

	; store V := vr13
	%vr14 = bitcast %MULTI* %V.369 to i16*
	store i16 %vr13, i16* %vr14

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.368

	; store vr16+9 := V
	%vr17 = bitcast %MULTI* %V.369 to i8*
	%vr18 = load i8, i8* %vr17
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = add i64 %vr19, 9
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr18, i8* %vr21

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.368

	; bop vr23 AND -3
	%vr26 = ptrtoint %CPU6510* %vr23 to i64
	%vr27 = inttoptr i64 %vr26 to i64*
	%vr28 = load i64, i64* %vr27
	%vr25 = and i64 %vr28, -3

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.369 to i8*
	%vr32 = load i8, i8* %vr31
	%vr30 = sext i8 %vr32 to i64

	; branchbop vr30 <> 0
	%vr33 = icmp ne i64 %vr30, 0
	br i1 %vr33, label %.Lt_12F8, label %.Lt_12FC
.Lt_12FC:

	; store LT_12F9 := 1
	store i64 1, i64* %LT_12F9.370

	; goto .Lt_12FD
	br label %.Lt_12FD
.Lt_12FE:

	; label .Lt_12F8
	br label %.Lt_12F8
.Lt_12F8:

	; store LT_12F9 := 0
	store i64 0, i64* %LT_12F9.370

	; label .Lt_12FD
	br label %.Lt_12FD
.Lt_12FD:
	%vr35 = load i64, i64* %LT_12F9.370
	%vr34 = bitcast i64 %vr35 to i64

	; bop vr34 AND 1
	%vr36 = and i64 %vr34, 1

	; bop vr36 SHL 1
	%vr38 = bitcast i64 1 to i64
	%vr37 = shl i64 %vr36, %vr38

	; bop vr25 OR vr37
	%vr39 = or i64 %vr25, %vr37

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.368

	; store vr41 := vr39
	%vr43 = ptrtoint %CPU6510* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	store i64 %vr39, i64* %vr44

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.368

	; bop vr46 AND -129
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -129

	; conv V => vr53
	%vr54 = bitcast %MULTI* %V.369 to i8*
	%vr55 = load i8, i8* %vr54
	%vr53 = sext i8 %vr55 to i64

	; branchbop vr53 >= 0
	%vr56 = icmp sge i64 %vr53, 0
	br i1 %vr56, label %.Lt_12FA, label %.Lt_12FF
.Lt_12FF:

	; store LT_12FB := 1
	store i64 1, i64* %LT_12FB.371

	; goto .Lt_1300
	br label %.Lt_1300
.Lt_1301:

	; label .Lt_12FA
	br label %.Lt_12FA
.Lt_12FA:

	; store LT_12FB := 0
	store i64 0, i64* %LT_12FB.371

	; label .Lt_1300
	br label %.Lt_1300
.Lt_1300:
	%vr58 = load i64, i64* %LT_12FB.371
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr48 OR vr60
	%vr62 = or i64 %vr48, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.368

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_12F7
	br label %.Lt_12F7
.Lt_12F7:
	ret void
}

define void @INS_INY( %CPU6510* %CPU.372$ ) nounwind
{

	; paramvar CPU
	%CPU.372 = alloca %CPU6510*
	store %CPU6510* %CPU.372$, %CPU6510** %CPU.372

	; localvar V
	%V.373 = alloca %MULTI

	; localvar LT_1305
	%LT_1305.374 = alloca i64

	; localvar LT_1307
	%LT_1307.375 = alloca i64

	; label .Lt_1302
	br label %.Lt_1302
.Lt_1302:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.373 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.372

	; store V := vr3+10
	%vr4 = ptrtoint %CPU6510* %vr3 to i64
	%vr5 = add i64 %vr4, 10
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = bitcast %MULTI* %V.373 to i8*
	store i8 %vr7, i8* %vr8

	; conv V => vr9
	%vr10 = bitcast %MULTI* %V.373 to i16*
	%vr11 = load i16, i16* %vr10
	%vr9 = sext i16 %vr11 to i64

	; bop vr9 + 1
	%vr12 = add i64 %vr9, 1

	; conv vr12 => vr13
	%vr13 = trunc i64 %vr12 to i16

	; store V := vr13
	%vr14 = bitcast %MULTI* %V.373 to i16*
	store i16 %vr13, i16* %vr14

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.372

	; store vr16+10 := V
	%vr17 = bitcast %MULTI* %V.373 to i8*
	%vr18 = load i8, i8* %vr17
	%vr19 = ptrtoint %CPU6510* %vr16 to i64
	%vr20 = add i64 %vr19, 10
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr18, i8* %vr21

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.372

	; bop vr23 AND -3
	%vr26 = ptrtoint %CPU6510* %vr23 to i64
	%vr27 = inttoptr i64 %vr26 to i64*
	%vr28 = load i64, i64* %vr27
	%vr25 = and i64 %vr28, -3

	; conv V => vr30
	%vr31 = bitcast %MULTI* %V.373 to i8*
	%vr32 = load i8, i8* %vr31
	%vr30 = sext i8 %vr32 to i64

	; branchbop vr30 <> 0
	%vr33 = icmp ne i64 %vr30, 0
	br i1 %vr33, label %.Lt_1304, label %.Lt_1308
.Lt_1308:

	; store LT_1305 := 1
	store i64 1, i64* %LT_1305.374

	; goto .Lt_1309
	br label %.Lt_1309
.Lt_130A:

	; label .Lt_1304
	br label %.Lt_1304
.Lt_1304:

	; store LT_1305 := 0
	store i64 0, i64* %LT_1305.374

	; label .Lt_1309
	br label %.Lt_1309
.Lt_1309:
	%vr35 = load i64, i64* %LT_1305.374
	%vr34 = bitcast i64 %vr35 to i64

	; bop vr34 AND 1
	%vr36 = and i64 %vr34, 1

	; bop vr36 SHL 1
	%vr38 = bitcast i64 1 to i64
	%vr37 = shl i64 %vr36, %vr38

	; bop vr25 OR vr37
	%vr39 = or i64 %vr25, %vr37

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.372

	; store vr41 := vr39
	%vr43 = ptrtoint %CPU6510* %vr41 to i64
	%vr44 = inttoptr i64 %vr43 to i64*
	store i64 %vr39, i64* %vr44

	; deref CPU
	%vr46 = load %CPU6510*, %CPU6510** %CPU.372

	; bop vr46 AND -129
	%vr49 = ptrtoint %CPU6510* %vr46 to i64
	%vr50 = inttoptr i64 %vr49 to i64*
	%vr51 = load i64, i64* %vr50
	%vr48 = and i64 %vr51, -129

	; conv V => vr53
	%vr54 = bitcast %MULTI* %V.373 to i8*
	%vr55 = load i8, i8* %vr54
	%vr53 = sext i8 %vr55 to i64

	; branchbop vr53 >= 0
	%vr56 = icmp sge i64 %vr53, 0
	br i1 %vr56, label %.Lt_1306, label %.Lt_130B
.Lt_130B:

	; store LT_1307 := 1
	store i64 1, i64* %LT_1307.375

	; goto .Lt_130C
	br label %.Lt_130C
.Lt_130D:

	; label .Lt_1306
	br label %.Lt_1306
.Lt_1306:

	; store LT_1307 := 0
	store i64 0, i64* %LT_1307.375

	; label .Lt_130C
	br label %.Lt_130C
.Lt_130C:
	%vr58 = load i64, i64* %LT_1307.375
	%vr57 = bitcast i64 %vr58 to i64

	; bop vr57 AND 1
	%vr59 = and i64 %vr57, 1

	; bop vr59 SHL 7
	%vr61 = bitcast i64 7 to i64
	%vr60 = shl i64 %vr59, %vr61

	; bop vr48 OR vr60
	%vr62 = or i64 %vr48, %vr60

	; deref CPU
	%vr64 = load %CPU6510*, %CPU6510** %CPU.372

	; store vr64 := vr62
	%vr66 = ptrtoint %CPU6510* %vr64 to i64
	%vr67 = inttoptr i64 %vr66 to i64*
	store i64 %vr62, i64* %vr67

	; label .Lt_1303
	br label %.Lt_1303
.Lt_1303:
	ret void
}

define void @INS_JMP( %CPU6510* %CPU.376$ ) nounwind
{

	; paramvar CPU
	%CPU.376 = alloca %CPU6510*
	store %CPU6510* %CPU.376$, %CPU6510** %CPU.376

	; label .Lt_130E
	br label %.Lt_130E
.Lt_130E:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.376

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.376

	; store vr3+12 := vr1+64
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 64
	%vr6 = inttoptr i64 %vr5 to i16*
	%vr7 = load i16, i16* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 12
	%vr10 = inttoptr i64 %vr9 to i16*
	store i16 %vr7, i16* %vr10

	; label .Lt_130F
	br label %.Lt_130F
.Lt_130F:
	ret void
}

define void @INS_JSR( %CPU6510* %CPU.377$ ) nounwind
{

	; paramvar CPU
	%CPU.377 = alloca %CPU6510*
	store %CPU6510* %CPU.377$, %CPU6510** %CPU.377

	; label .Lt_1310
	br label %.Lt_1310
.Lt_1310:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.377

	; conv vr1+12 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 12
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = sext i16 %vr6 to i64

	; bop vr2 + -1
	%vr7 = add i64 %vr2, -1

	; conv vr7 => vr8
	%vr8 = trunc i64 %vr7 to i16

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.377

	; store vr10+12 := vr8
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 12
	%vr13 = inttoptr i64 %vr12 to i16*
	store i16 %vr8, i16* %vr13

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.377

	; conv vr15+13 => vr16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 13
	%vr19 = inttoptr i64 %vr18 to i8*
	%vr20 = load i8, i8* %vr19
	%vr16 = zext i8 %vr20 to i64

	; call PUSH()
	; arg CPU
	%vr21 = load %CPU6510*, %CPU6510** %CPU.377
	; arg vr16
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr21, i64 %vr16 )

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.377

	; conv vr23+12 => vr24
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 12
	%vr27 = inttoptr i64 %vr26 to i8*
	%vr28 = load i8, i8* %vr27
	%vr24 = zext i8 %vr28 to i64

	; call PUSH()
	; arg CPU
	%vr29 = load %CPU6510*, %CPU6510** %CPU.377
	; arg vr24
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr29, i64 %vr24 )

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.377

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.377

	; store vr33+12 := vr31+64
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = add i64 %vr34, 64
	%vr36 = inttoptr i64 %vr35 to i16*
	%vr37 = load i16, i16* %vr36
	%vr38 = ptrtoint %CPU6510* %vr33 to i64
	%vr39 = add i64 %vr38, 12
	%vr40 = inttoptr i64 %vr39 to i16*
	store i16 %vr37, i16* %vr40

	; label .Lt_1311
	br label %.Lt_1311
.Lt_1311:
	ret void
}

define void @INS_LDA( %CPU6510* %CPU.378$ ) nounwind
{

	; paramvar CPU
	%CPU.378 = alloca %CPU6510*
	store %CPU6510* %CPU.378$, %CPU6510** %CPU.378

	; localvar LT_1315
	%LT_1315.379 = alloca i64

	; localvar LT_1317
	%LT_1317.380 = alloca i64

	; label .Lt_1312
	br label %.Lt_1312
.Lt_1312:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.378

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.378

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.378

	; store vr15+8 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 8
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.378

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.378

	; conv vr28+8 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 8
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_1314, label %.Lt_1318
.Lt_1318:

	; store LT_1315 := 1
	store i64 1, i64* %LT_1315.379

	; goto .Lt_1319
	br label %.Lt_1319
.Lt_131A:

	; label .Lt_1314
	br label %.Lt_1314
.Lt_1314:

	; store LT_1315 := 0
	store i64 0, i64* %LT_1315.379

	; label .Lt_1319
	br label %.Lt_1319
.Lt_1319:
	%vr36 = load i64, i64* %LT_1315.379
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.378

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.378

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.378

	; conv vr55+8 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 8
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_1316, label %.Lt_131B
.Lt_131B:

	; store LT_1317 := 1
	store i64 1, i64* %LT_1317.380

	; goto .Lt_131C
	br label %.Lt_131C
.Lt_131D:

	; label .Lt_1316
	br label %.Lt_1316
.Lt_1316:

	; store LT_1317 := 0
	store i64 0, i64* %LT_1317.380

	; label .Lt_131C
	br label %.Lt_131C
.Lt_131C:
	%vr63 = load i64, i64* %LT_1317.380
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.378

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_1313
	br label %.Lt_1313
.Lt_1313:
	ret void
}

define void @INS_LDX( %CPU6510* %CPU.381$ ) nounwind
{

	; paramvar CPU
	%CPU.381 = alloca %CPU6510*
	store %CPU6510* %CPU.381$, %CPU6510** %CPU.381

	; localvar LT_1321
	%LT_1321.382 = alloca i64

	; localvar LT_1323
	%LT_1323.383 = alloca i64

	; label .Lt_131E
	br label %.Lt_131E
.Lt_131E:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.381

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr15+9 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 9
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.381

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr28+9 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 9
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_1320, label %.Lt_1324
.Lt_1324:

	; store LT_1321 := 1
	store i64 1, i64* %LT_1321.382

	; goto .Lt_1325
	br label %.Lt_1325
.Lt_1326:

	; label .Lt_1320
	br label %.Lt_1320
.Lt_1320:

	; store LT_1321 := 0
	store i64 0, i64* %LT_1321.382

	; label .Lt_1325
	br label %.Lt_1325
.Lt_1325:
	%vr36 = load i64, i64* %LT_1321.382
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.381

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.381

	; conv vr55+9 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 9
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_1322, label %.Lt_1327
.Lt_1327:

	; store LT_1323 := 1
	store i64 1, i64* %LT_1323.383

	; goto .Lt_1328
	br label %.Lt_1328
.Lt_1329:

	; label .Lt_1322
	br label %.Lt_1322
.Lt_1322:

	; store LT_1323 := 0
	store i64 0, i64* %LT_1323.383

	; label .Lt_1328
	br label %.Lt_1328
.Lt_1328:
	%vr63 = load i64, i64* %LT_1323.383
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.381

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_131F
	br label %.Lt_131F
.Lt_131F:
	ret void
}

define void @INS_LDY( %CPU6510* %CPU.384$ ) nounwind
{

	; paramvar CPU
	%CPU.384 = alloca %CPU6510*
	store %CPU6510* %CPU.384$, %CPU6510** %CPU.384

	; localvar LT_132D
	%LT_132D.385 = alloca i64

	; localvar LT_132F
	%LT_132F.386 = alloca i64

	; label .Lt_132A
	br label %.Lt_132A
.Lt_132A:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr1+64 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 64
	%vr5 = inttoptr i64 %vr4 to i16*
	%vr6 = load i16, i16* %vr5
	%vr2 = zext i16 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.384

	; call READUBYTE()
	; arg vr8+16
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 16
	%vr12 = inttoptr i64 %vr11 to %MEMORY_T**
	%vr13 = load %MEMORY_T*, %MEMORY_T** %vr12
	; arg vr2
	%vr9 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr13, i64 %vr2 )

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr15+10 := vr9
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 10
	%vr18 = inttoptr i64 %vr17 to i8*
	store i8 %vr9, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.384

	; bop vr20 AND -3
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, -3

	; deref CPU
	%vr28 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr28+10 => vr29
	%vr30 = ptrtoint %CPU6510* %vr28 to i64
	%vr31 = add i64 %vr30, 10
	%vr32 = inttoptr i64 %vr31 to i8*
	%vr33 = load i8, i8* %vr32
	%vr29 = sext i8 %vr33 to i64

	; branchbop vr29 <> 0
	%vr34 = icmp ne i64 %vr29, 0
	br i1 %vr34, label %.Lt_132C, label %.Lt_1330
.Lt_1330:

	; store LT_132D := 1
	store i64 1, i64* %LT_132D.385

	; goto .Lt_1331
	br label %.Lt_1331
.Lt_1332:

	; label .Lt_132C
	br label %.Lt_132C
.Lt_132C:

	; store LT_132D := 0
	store i64 0, i64* %LT_132D.385

	; label .Lt_1331
	br label %.Lt_1331
.Lt_1331:
	%vr36 = load i64, i64* %LT_132D.385
	%vr35 = bitcast i64 %vr36 to i64

	; bop vr35 AND 1
	%vr37 = and i64 %vr35, 1

	; bop vr37 SHL 1
	%vr39 = bitcast i64 1 to i64
	%vr38 = shl i64 %vr37, %vr39

	; bop vr22 OR vr38
	%vr40 = or i64 %vr22, %vr38

	; deref CPU
	%vr42 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr42 := vr40
	%vr44 = ptrtoint %CPU6510* %vr42 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	store i64 %vr40, i64* %vr45

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.384

	; bop vr47 AND -129
	%vr50 = ptrtoint %CPU6510* %vr47 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	%vr52 = load i64, i64* %vr51
	%vr49 = and i64 %vr52, -129

	; deref CPU
	%vr55 = load %CPU6510*, %CPU6510** %CPU.384

	; conv vr55+10 => vr56
	%vr57 = ptrtoint %CPU6510* %vr55 to i64
	%vr58 = add i64 %vr57, 10
	%vr59 = inttoptr i64 %vr58 to i8*
	%vr60 = load i8, i8* %vr59
	%vr56 = sext i8 %vr60 to i64

	; branchbop vr56 >= 0
	%vr61 = icmp sge i64 %vr56, 0
	br i1 %vr61, label %.Lt_132E, label %.Lt_1333
.Lt_1333:

	; store LT_132F := 1
	store i64 1, i64* %LT_132F.386

	; goto .Lt_1334
	br label %.Lt_1334
.Lt_1335:

	; label .Lt_132E
	br label %.Lt_132E
.Lt_132E:

	; store LT_132F := 0
	store i64 0, i64* %LT_132F.386

	; label .Lt_1334
	br label %.Lt_1334
.Lt_1334:
	%vr63 = load i64, i64* %LT_132F.386
	%vr62 = bitcast i64 %vr63 to i64

	; bop vr62 AND 1
	%vr64 = and i64 %vr62, 1

	; bop vr64 SHL 7
	%vr66 = bitcast i64 7 to i64
	%vr65 = shl i64 %vr64, %vr66

	; bop vr49 OR vr65
	%vr67 = or i64 %vr49, %vr65

	; deref CPU
	%vr69 = load %CPU6510*, %CPU6510** %CPU.384

	; store vr69 := vr67
	%vr71 = ptrtoint %CPU6510* %vr69 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	store i64 %vr67, i64* %vr72

	; label .Lt_132B
	br label %.Lt_132B
.Lt_132B:
	ret void
}

define void @INS_LSR( %CPU6510* %CPU.387$ ) nounwind
{

	; paramvar CPU
	%CPU.387 = alloca %CPU6510*
	store %CPU6510* %CPU.387$, %CPU6510** %CPU.387

	; localvar V
	%V.388 = alloca %MULTI

	; localvar LT_1339
	%LT_1339.389 = alloca i64

	; localvar LT_133B
	%LT_133B.390 = alloca i64

	; localvar LT_133D
	%LT_133D.391 = alloca i64

	; label .Lt_1336
	br label %.Lt_1336
.Lt_1336:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.388 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.387

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i16*
	%vr8 = load i16, i16* %vr7
	%vr4 = zext i16 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.387

	; call READUBYTE()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr15, i64 %vr4 )

	; store V := vr11
	%vr16 = bitcast %MULTI* %V.388 to i8*
	store i8 %vr11, i8* %vr16

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.387

	; bop vr18 AND -2
	%vr21 = ptrtoint %CPU6510* %vr18 to i64
	%vr22 = inttoptr i64 %vr21 to i64*
	%vr23 = load i64, i64* %vr22
	%vr20 = and i64 %vr23, -2

	; conv V => vr25
	%vr26 = bitcast %MULTI* %V.388 to i8*
	%vr27 = load i8, i8* %vr26
	%vr25 = sext i8 %vr27 to i64

	; bop vr25 AND 1
	%vr28 = and i64 %vr25, 1

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_1338, label %.Lt_133E
.Lt_133E:

	; store LT_1339 := 1
	store i64 1, i64* %LT_1339.389

	; goto .Lt_133F
	br label %.Lt_133F
.Lt_1340:

	; label .Lt_1338
	br label %.Lt_1338
.Lt_1338:

	; store LT_1339 := 0
	store i64 0, i64* %LT_1339.389

	; label .Lt_133F
	br label %.Lt_133F
.Lt_133F:
	%vr31 = load i64, i64* %LT_1339.389
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr20 OR vr32
	%vr33 = or i64 %vr20, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; conv V => vr39
	%vr40 = bitcast %MULTI* %V.388 to i8*
	%vr41 = load i8, i8* %vr40
	%vr39 = sext i8 %vr41 to i64

	; bop vr39 SHR 1
	%vr42 = ashr i64 %vr39, 1

	; conv vr42 => vr43
	%vr43 = trunc i64 %vr42 to i8

	; store V := vr43
	%vr44 = bitcast %MULTI* %V.388 to i8*
	store i8 %vr43, i8* %vr44

	; conv V => vr45
	%vr46 = bitcast %MULTI* %V.388 to i8*
	%vr47 = load i8, i8* %vr46
	%vr45 = zext i8 %vr47 to i64

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.387

	; conv vr49+64 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 64
	%vr53 = inttoptr i64 %vr52 to i16*
	%vr54 = load i16, i16* %vr53
	%vr50 = zext i16 %vr54 to i64

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.387

	; call WRITEUBYTE()
	; arg vr56+16
	%vr57 = ptrtoint %CPU6510* %vr56 to i64
	%vr58 = add i64 %vr57, 16
	%vr59 = inttoptr i64 %vr58 to %MEMORY_T**
	%vr60 = load %MEMORY_T*, %MEMORY_T** %vr59
	; arg vr50
	; arg vr45
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr60, i64 %vr50, i64 %vr45 )

	; deref CPU
	%vr62 = load %CPU6510*, %CPU6510** %CPU.387

	; bop vr62 AND -3
	%vr65 = ptrtoint %CPU6510* %vr62 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	%vr67 = load i64, i64* %vr66
	%vr64 = and i64 %vr67, -3

	; conv V => vr69
	%vr70 = bitcast %MULTI* %V.388 to i8*
	%vr71 = load i8, i8* %vr70
	%vr69 = sext i8 %vr71 to i64

	; branchbop vr69 <> 0
	%vr72 = icmp ne i64 %vr69, 0
	br i1 %vr72, label %.Lt_133A, label %.Lt_1341
.Lt_1341:

	; store LT_133B := 1
	store i64 1, i64* %LT_133B.390

	; goto .Lt_1342
	br label %.Lt_1342
.Lt_1343:

	; label .Lt_133A
	br label %.Lt_133A
.Lt_133A:

	; store LT_133B := 0
	store i64 0, i64* %LT_133B.390

	; label .Lt_1342
	br label %.Lt_1342
.Lt_1342:
	%vr74 = load i64, i64* %LT_133B.390
	%vr73 = bitcast i64 %vr74 to i64

	; bop vr73 AND 1
	%vr75 = and i64 %vr73, 1

	; bop vr75 SHL 1
	%vr77 = bitcast i64 1 to i64
	%vr76 = shl i64 %vr75, %vr77

	; bop vr64 OR vr76
	%vr78 = or i64 %vr64, %vr76

	; deref CPU
	%vr80 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr80 := vr78
	%vr82 = ptrtoint %CPU6510* %vr80 to i64
	%vr83 = inttoptr i64 %vr82 to i64*
	store i64 %vr78, i64* %vr83

	; deref CPU
	%vr85 = load %CPU6510*, %CPU6510** %CPU.387

	; bop vr85 AND -129
	%vr88 = ptrtoint %CPU6510* %vr85 to i64
	%vr89 = inttoptr i64 %vr88 to i64*
	%vr90 = load i64, i64* %vr89
	%vr87 = and i64 %vr90, -129

	; conv V => vr92
	%vr93 = bitcast %MULTI* %V.388 to i8*
	%vr94 = load i8, i8* %vr93
	%vr92 = sext i8 %vr94 to i64

	; branchbop vr92 >= 1
	%vr95 = icmp sge i64 %vr92, 1
	br i1 %vr95, label %.Lt_133C, label %.Lt_1344
.Lt_1344:

	; store LT_133D := 1
	store i64 1, i64* %LT_133D.391

	; goto .Lt_1345
	br label %.Lt_1345
.Lt_1346:

	; label .Lt_133C
	br label %.Lt_133C
.Lt_133C:

	; store LT_133D := 0
	store i64 0, i64* %LT_133D.391

	; label .Lt_1345
	br label %.Lt_1345
.Lt_1345:
	%vr97 = load i64, i64* %LT_133D.391
	%vr96 = bitcast i64 %vr97 to i64

	; bop vr96 AND 1
	%vr98 = and i64 %vr96, 1

	; bop vr98 SHL 7
	%vr100 = bitcast i64 7 to i64
	%vr99 = shl i64 %vr98, %vr100

	; bop vr87 OR vr99
	%vr101 = or i64 %vr87, %vr99

	; deref CPU
	%vr103 = load %CPU6510*, %CPU6510** %CPU.387

	; store vr103 := vr101
	%vr105 = ptrtoint %CPU6510* %vr103 to i64
	%vr106 = inttoptr i64 %vr105 to i64*
	store i64 %vr101, i64* %vr106

	; label .Lt_1337
	br label %.Lt_1337
.Lt_1337:
	ret void
}

define void @INS_LSRA( %CPU6510* %CPU.392$ ) nounwind
{

	; paramvar CPU
	%CPU.392 = alloca %CPU6510*
	store %CPU6510* %CPU.392$, %CPU6510** %CPU.392

	; localvar LT_134A
	%LT_134A.393 = alloca i64

	; localvar LT_134C
	%LT_134C.394 = alloca i64

	; localvar LT_134E
	%LT_134E.395 = alloca i64

	; label .Lt_1347
	br label %.Lt_1347
.Lt_1347:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.392

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.392

	; conv vr9+8 => vr10
	%vr11 = ptrtoint %CPU6510* %vr9 to i64
	%vr12 = add i64 %vr11, 8
	%vr13 = inttoptr i64 %vr12 to i8*
	%vr14 = load i8, i8* %vr13
	%vr10 = sext i8 %vr14 to i64

	; bop vr10 AND 1
	%vr15 = and i64 %vr10, 1

	; branchbop vr15 == 0
	%vr16 = icmp eq i64 %vr15, 0
	br i1 %vr16, label %.Lt_1349, label %.Lt_134F
.Lt_134F:

	; store LT_134A := 1
	store i64 1, i64* %LT_134A.393

	; goto .Lt_1350
	br label %.Lt_1350
.Lt_1351:

	; label .Lt_1349
	br label %.Lt_1349
.Lt_1349:

	; store LT_134A := 0
	store i64 0, i64* %LT_134A.393

	; label .Lt_1350
	br label %.Lt_1350
.Lt_1350:
	%vr18 = load i64, i64* %LT_134A.393
	%vr17 = bitcast i64 %vr18 to i64

	; bop vr17 AND 1
	%vr19 = and i64 %vr17, 1

	; bop vr3 OR vr19
	%vr20 = or i64 %vr3, %vr19

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.392

	; store vr22 := vr20
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = inttoptr i64 %vr24 to i64*
	store i64 %vr20, i64* %vr25

	; deref CPU
	%vr27 = load %CPU6510*, %CPU6510** %CPU.392

	; conv vr27+8 => vr28
	%vr29 = ptrtoint %CPU6510* %vr27 to i64
	%vr30 = add i64 %vr29, 8
	%vr31 = inttoptr i64 %vr30 to i8*
	%vr32 = load i8, i8* %vr31
	%vr28 = sext i8 %vr32 to i64

	; bop vr28 SHR 1
	%vr33 = ashr i64 %vr28, 1

	; conv vr33 => vr34
	%vr34 = trunc i64 %vr33 to i8

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.392

	; store vr36+8 := vr34
	%vr37 = ptrtoint %CPU6510* %vr36 to i64
	%vr38 = add i64 %vr37, 8
	%vr39 = inttoptr i64 %vr38 to i8*
	store i8 %vr34, i8* %vr39

	; deref CPU
	%vr41 = load %CPU6510*, %CPU6510** %CPU.392

	; bop vr41 AND -3
	%vr44 = ptrtoint %CPU6510* %vr41 to i64
	%vr45 = inttoptr i64 %vr44 to i64*
	%vr46 = load i64, i64* %vr45
	%vr43 = and i64 %vr46, -3

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.392

	; conv vr49+8 => vr50
	%vr51 = ptrtoint %CPU6510* %vr49 to i64
	%vr52 = add i64 %vr51, 8
	%vr53 = inttoptr i64 %vr52 to i8*
	%vr54 = load i8, i8* %vr53
	%vr50 = sext i8 %vr54 to i64

	; branchbop vr50 <> 0
	%vr55 = icmp ne i64 %vr50, 0
	br i1 %vr55, label %.Lt_134B, label %.Lt_1352
.Lt_1352:

	; store LT_134C := 1
	store i64 1, i64* %LT_134C.394

	; goto .Lt_1353
	br label %.Lt_1353
.Lt_1354:

	; label .Lt_134B
	br label %.Lt_134B
.Lt_134B:

	; store LT_134C := 0
	store i64 0, i64* %LT_134C.394

	; label .Lt_1353
	br label %.Lt_1353
.Lt_1353:
	%vr57 = load i64, i64* %LT_134C.394
	%vr56 = bitcast i64 %vr57 to i64

	; bop vr56 AND 1
	%vr58 = and i64 %vr56, 1

	; bop vr58 SHL 1
	%vr60 = bitcast i64 1 to i64
	%vr59 = shl i64 %vr58, %vr60

	; bop vr43 OR vr59
	%vr61 = or i64 %vr43, %vr59

	; deref CPU
	%vr63 = load %CPU6510*, %CPU6510** %CPU.392

	; store vr63 := vr61
	%vr65 = ptrtoint %CPU6510* %vr63 to i64
	%vr66 = inttoptr i64 %vr65 to i64*
	store i64 %vr61, i64* %vr66

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.392

	; bop vr68 AND -129
	%vr71 = ptrtoint %CPU6510* %vr68 to i64
	%vr72 = inttoptr i64 %vr71 to i64*
	%vr73 = load i64, i64* %vr72
	%vr70 = and i64 %vr73, -129

	; deref CPU
	%vr76 = load %CPU6510*, %CPU6510** %CPU.392

	; conv vr76+8 => vr77
	%vr78 = ptrtoint %CPU6510* %vr76 to i64
	%vr79 = add i64 %vr78, 8
	%vr80 = inttoptr i64 %vr79 to i8*
	%vr81 = load i8, i8* %vr80
	%vr77 = sext i8 %vr81 to i64

	; branchbop vr77 >= 0
	%vr82 = icmp sge i64 %vr77, 0
	br i1 %vr82, label %.Lt_134D, label %.Lt_1355
.Lt_1355:

	; store LT_134E := 1
	store i64 1, i64* %LT_134E.395

	; goto .Lt_1356
	br label %.Lt_1356
.Lt_1357:

	; label .Lt_134D
	br label %.Lt_134D
.Lt_134D:

	; store LT_134E := 0
	store i64 0, i64* %LT_134E.395

	; label .Lt_1356
	br label %.Lt_1356
.Lt_1356:
	%vr84 = load i64, i64* %LT_134E.395
	%vr83 = bitcast i64 %vr84 to i64

	; bop vr83 AND 1
	%vr85 = and i64 %vr83, 1

	; bop vr85 SHL 7
	%vr87 = bitcast i64 7 to i64
	%vr86 = shl i64 %vr85, %vr87

	; bop vr70 OR vr86
	%vr88 = or i64 %vr70, %vr86

	; deref CPU
	%vr90 = load %CPU6510*, %CPU6510** %CPU.392

	; store vr90 := vr88
	%vr92 = ptrtoint %CPU6510* %vr90 to i64
	%vr93 = inttoptr i64 %vr92 to i64*
	store i64 %vr88, i64* %vr93

	; label .Lt_1348
	br label %.Lt_1348
.Lt_1348:
	ret void
}

define void @INS_NOP( %CPU6510* %CPU.396$ ) nounwind
{

	; paramvar CPU
	%CPU.396 = alloca %CPU6510*
	store %CPU6510* %CPU.396$, %CPU6510** %CPU.396

	; label .Lt_1358
	br label %.Lt_1358
.Lt_1358:

	; label .Lt_1359
	br label %.Lt_1359
.Lt_1359:
	ret void
}

define void @INS_ORA( %CPU6510* %CPU.397$ ) nounwind
{

	; paramvar CPU
	%CPU.397 = alloca %CPU6510*
	store %CPU6510* %CPU.397$, %CPU6510** %CPU.397

	; localvar LT_135D
	%LT_135D.398 = alloca i64

	; localvar LT_135F
	%LT_135F.399 = alloca i64

	; label .Lt_135A
	br label %.Lt_135A
.Lt_135A:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.397

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = sext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.397

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.397

	; call READUBYTE()
	; arg vr15+16
	%vr17 = ptrtoint %CPU6510* %vr15 to i64
	%vr18 = add i64 %vr17, 16
	%vr19 = inttoptr i64 %vr18 to %MEMORY_T**
	%vr20 = load %MEMORY_T*, %MEMORY_T** %vr19
	; arg vr9
	%vr16 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr20, i64 %vr9 )

	; conv vr16 => vr21
	%vr21 = sext i8 %vr16 to i64

	; bop vr2 OR vr21
	%vr22 = or i64 %vr2, %vr21

	; conv vr22 => vr23
	%vr23 = trunc i64 %vr22 to i8

	; deref CPU
	%vr25 = load %CPU6510*, %CPU6510** %CPU.397

	; store vr25+8 := vr23
	%vr26 = ptrtoint %CPU6510* %vr25 to i64
	%vr27 = add i64 %vr26, 8
	%vr28 = inttoptr i64 %vr27 to i8*
	store i8 %vr23, i8* %vr28

	; deref CPU
	%vr30 = load %CPU6510*, %CPU6510** %CPU.397

	; bop vr30 AND -3
	%vr33 = ptrtoint %CPU6510* %vr30 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	%vr35 = load i64, i64* %vr34
	%vr32 = and i64 %vr35, -3

	; deref CPU
	%vr38 = load %CPU6510*, %CPU6510** %CPU.397

	; conv vr38+8 => vr39
	%vr40 = ptrtoint %CPU6510* %vr38 to i64
	%vr41 = add i64 %vr40, 8
	%vr42 = inttoptr i64 %vr41 to i8*
	%vr43 = load i8, i8* %vr42
	%vr39 = sext i8 %vr43 to i64

	; branchbop vr39 <> 0
	%vr44 = icmp ne i64 %vr39, 0
	br i1 %vr44, label %.Lt_135C, label %.Lt_1360
.Lt_1360:

	; store LT_135D := 1
	store i64 1, i64* %LT_135D.398

	; goto .Lt_1361
	br label %.Lt_1361
.Lt_1362:

	; label .Lt_135C
	br label %.Lt_135C
.Lt_135C:

	; store LT_135D := 0
	store i64 0, i64* %LT_135D.398

	; label .Lt_1361
	br label %.Lt_1361
.Lt_1361:
	%vr46 = load i64, i64* %LT_135D.398
	%vr45 = bitcast i64 %vr46 to i64

	; bop vr45 AND 1
	%vr47 = and i64 %vr45, 1

	; bop vr47 SHL 1
	%vr49 = bitcast i64 1 to i64
	%vr48 = shl i64 %vr47, %vr49

	; bop vr32 OR vr48
	%vr50 = or i64 %vr32, %vr48

	; deref CPU
	%vr52 = load %CPU6510*, %CPU6510** %CPU.397

	; store vr52 := vr50
	%vr54 = ptrtoint %CPU6510* %vr52 to i64
	%vr55 = inttoptr i64 %vr54 to i64*
	store i64 %vr50, i64* %vr55

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.397

	; bop vr57 AND -129
	%vr60 = ptrtoint %CPU6510* %vr57 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	%vr62 = load i64, i64* %vr61
	%vr59 = and i64 %vr62, -129

	; deref CPU
	%vr65 = load %CPU6510*, %CPU6510** %CPU.397

	; conv vr65+8 => vr66
	%vr67 = ptrtoint %CPU6510* %vr65 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	%vr70 = load i8, i8* %vr69
	%vr66 = sext i8 %vr70 to i64

	; branchbop vr66 >= 0
	%vr71 = icmp sge i64 %vr66, 0
	br i1 %vr71, label %.Lt_135E, label %.Lt_1363
.Lt_1363:

	; store LT_135F := 1
	store i64 1, i64* %LT_135F.399

	; goto .Lt_1364
	br label %.Lt_1364
.Lt_1365:

	; label .Lt_135E
	br label %.Lt_135E
.Lt_135E:

	; store LT_135F := 0
	store i64 0, i64* %LT_135F.399

	; label .Lt_1364
	br label %.Lt_1364
.Lt_1364:
	%vr73 = load i64, i64* %LT_135F.399
	%vr72 = bitcast i64 %vr73 to i64

	; bop vr72 AND 1
	%vr74 = and i64 %vr72, 1

	; bop vr74 SHL 7
	%vr76 = bitcast i64 7 to i64
	%vr75 = shl i64 %vr74, %vr76

	; bop vr59 OR vr75
	%vr77 = or i64 %vr59, %vr75

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.397

	; store vr79 := vr77
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = inttoptr i64 %vr81 to i64*
	store i64 %vr77, i64* %vr82

	; label .Lt_135B
	br label %.Lt_135B
.Lt_135B:
	ret void
}

define void @INS_PHA( %CPU6510* %CPU.400$ ) nounwind
{

	; paramvar CPU
	%CPU.400 = alloca %CPU6510*
	store %CPU6510* %CPU.400$, %CPU6510** %CPU.400

	; label .Lt_1366
	br label %.Lt_1366
.Lt_1366:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.400

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; call PUSH()
	; arg CPU
	%vr7 = load %CPU6510*, %CPU6510** %CPU.400
	; arg vr2
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr7, i64 %vr2 )

	; label .Lt_1367
	br label %.Lt_1367
.Lt_1367:
	ret void
}

define void @INS_PHP( %CPU6510* %CPU.401$ ) nounwind
{

	; paramvar CPU
	%CPU.401 = alloca %CPU6510*
	store %CPU6510* %CPU.401$, %CPU6510** %CPU.401

	; label .Lt_1368
	br label %.Lt_1368
.Lt_1368:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.401

	; conv vr1 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = inttoptr i64 %vr3 to i8*
	%vr5 = load i8, i8* %vr4
	%vr2 = zext i8 %vr5 to i64

	; call PUSH()
	; arg CPU
	%vr6 = load %CPU6510*, %CPU6510** %CPU.401
	; arg vr2
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr6, i64 %vr2 )

	; label .Lt_1369
	br label %.Lt_1369
.Lt_1369:
	ret void
}

define void @INS_PLA( %CPU6510* %CPU.402$ ) nounwind
{

	; paramvar CPU
	%CPU.402 = alloca %CPU6510*
	store %CPU6510* %CPU.402$, %CPU6510** %CPU.402

	; localvar LT_136D
	%LT_136D.403 = alloca i64

	; localvar LT_136F
	%LT_136F.404 = alloca i64

	; label .Lt_136A
	br label %.Lt_136A
.Lt_136A:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.402
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.402

	; store vr4+8 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = add i64 %vr5, 8
	%vr7 = inttoptr i64 %vr6 to i8*
	store i8 %vr2, i8* %vr7

	; deref CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.402

	; bop vr9 AND -3
	%vr12 = ptrtoint %CPU6510* %vr9 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	%vr14 = load i64, i64* %vr13
	%vr11 = and i64 %vr14, -3

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.402

	; conv vr17+8 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 8
	%vr21 = inttoptr i64 %vr20 to i8*
	%vr22 = load i8, i8* %vr21
	%vr18 = sext i8 %vr22 to i64

	; branchbop vr18 <> 0
	%vr23 = icmp ne i64 %vr18, 0
	br i1 %vr23, label %.Lt_136C, label %.Lt_1370
.Lt_1370:

	; store LT_136D := 1
	store i64 1, i64* %LT_136D.403

	; goto .Lt_1371
	br label %.Lt_1371
.Lt_1372:

	; label .Lt_136C
	br label %.Lt_136C
.Lt_136C:

	; store LT_136D := 0
	store i64 0, i64* %LT_136D.403

	; label .Lt_1371
	br label %.Lt_1371
.Lt_1371:
	%vr25 = load i64, i64* %LT_136D.403
	%vr24 = bitcast i64 %vr25 to i64

	; bop vr24 AND 1
	%vr26 = and i64 %vr24, 1

	; bop vr26 SHL 1
	%vr28 = bitcast i64 1 to i64
	%vr27 = shl i64 %vr26, %vr28

	; bop vr11 OR vr27
	%vr29 = or i64 %vr11, %vr27

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.402

	; store vr31 := vr29
	%vr33 = ptrtoint %CPU6510* %vr31 to i64
	%vr34 = inttoptr i64 %vr33 to i64*
	store i64 %vr29, i64* %vr34

	; deref CPU
	%vr36 = load %CPU6510*, %CPU6510** %CPU.402

	; bop vr36 AND -129
	%vr39 = ptrtoint %CPU6510* %vr36 to i64
	%vr40 = inttoptr i64 %vr39 to i64*
	%vr41 = load i64, i64* %vr40
	%vr38 = and i64 %vr41, -129

	; deref CPU
	%vr44 = load %CPU6510*, %CPU6510** %CPU.402

	; conv vr44+8 => vr45
	%vr46 = ptrtoint %CPU6510* %vr44 to i64
	%vr47 = add i64 %vr46, 8
	%vr48 = inttoptr i64 %vr47 to i8*
	%vr49 = load i8, i8* %vr48
	%vr45 = sext i8 %vr49 to i64

	; branchbop vr45 >= 0
	%vr50 = icmp sge i64 %vr45, 0
	br i1 %vr50, label %.Lt_136E, label %.Lt_1373
.Lt_1373:

	; store LT_136F := 1
	store i64 1, i64* %LT_136F.404

	; goto .Lt_1374
	br label %.Lt_1374
.Lt_1375:

	; label .Lt_136E
	br label %.Lt_136E
.Lt_136E:

	; store LT_136F := 0
	store i64 0, i64* %LT_136F.404

	; label .Lt_1374
	br label %.Lt_1374
.Lt_1374:
	%vr52 = load i64, i64* %LT_136F.404
	%vr51 = bitcast i64 %vr52 to i64

	; bop vr51 AND 1
	%vr53 = and i64 %vr51, 1

	; bop vr53 SHL 7
	%vr55 = bitcast i64 7 to i64
	%vr54 = shl i64 %vr53, %vr55

	; bop vr38 OR vr54
	%vr56 = or i64 %vr38, %vr54

	; deref CPU
	%vr58 = load %CPU6510*, %CPU6510** %CPU.402

	; store vr58 := vr56
	%vr60 = ptrtoint %CPU6510* %vr58 to i64
	%vr61 = inttoptr i64 %vr60 to i64*
	store i64 %vr56, i64* %vr61

	; label .Lt_136B
	br label %.Lt_136B
.Lt_136B:
	ret void
}

define void @INS_PLP( %CPU6510* %CPU.405$ ) nounwind
{

	; paramvar CPU
	%CPU.405 = alloca %CPU6510*
	store %CPU6510* %CPU.405$, %CPU6510** %CPU.405

	; label .Lt_1376
	br label %.Lt_1376
.Lt_1376:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.405
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.405

	; store vr4 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = inttoptr i64 %vr5 to i8*
	store i8 %vr2, i8* %vr6

	; label .Lt_1377
	br label %.Lt_1377
.Lt_1377:
	ret void
}

define void @INS_ROL( %CPU6510* %CPU.406$ ) nounwind
{

	; paramvar CPU
	%CPU.406 = alloca %CPU6510*
	store %CPU6510* %CPU.406$, %CPU6510** %CPU.406

	; localvar V
	%V.407 = alloca %MULTI

	; localvar CARY
	%CARY.408 = alloca i8

	; localvar LT_137B
	%LT_137B.409 = alloca i64

	; localvar LT_137D
	%LT_137D.410 = alloca i64

	; localvar LT_1381
	%LT_1381.411 = alloca i64

	; localvar LT_1383
	%LT_1383.412 = alloca i64

	; label .Lt_1378
	br label %.Lt_1378
.Lt_1378:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.407 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof CARY

	; memclear CARY
	%vr3 = bitcast i8* %CARY.408 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.406

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.406

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store V := vr13
	%vr18 = bitcast %MULTI* %V.407 to i8*
	store i8 %vr13, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.406

	; bop vr20 AND 1
	%vr23 = ptrtoint %CPU6510* %vr20 to i64
	%vr24 = inttoptr i64 %vr23 to i64*
	%vr25 = load i64, i64* %vr24
	%vr22 = and i64 %vr25, 1

	; branchbop vr22 <> 1
	%vr27 = icmp ne i64 %vr22, 1
	br i1 %vr27, label %.Lt_137A, label %.Lt_1384
.Lt_1384:

	; store LT_137B := 1
	store i64 1, i64* %LT_137B.409

	; goto .Lt_1385
	br label %.Lt_1385
.Lt_1386:

	; label .Lt_137A
	br label %.Lt_137A
.Lt_137A:

	; store LT_137B := 0
	store i64 0, i64* %LT_137B.409

	; label .Lt_1385
	br label %.Lt_1385
.Lt_1385:

	; conv LT_137B => vr28
	%vr29 = load i64, i64* %LT_137B.409
	%vr28 = trunc i64 %vr29 to i8

	; store CARY := vr28
	store i8 %vr28, i8* %CARY.408

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.406

	; bop vr31 AND -2
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, -2

	; conv V => vr38
	%vr39 = bitcast %MULTI* %V.407 to i8*
	%vr40 = load i8, i8* %vr39
	%vr38 = sext i8 %vr40 to i64

	; bop vr38 AND 128
	%vr41 = and i64 %vr38, 128

	; branchbop vr41 == 0
	%vr42 = icmp eq i64 %vr41, 0
	br i1 %vr42, label %.Lt_137C, label %.Lt_1387
.Lt_1387:

	; store LT_137D := 1
	store i64 1, i64* %LT_137D.410

	; goto .Lt_1388
	br label %.Lt_1388
.Lt_1389:

	; label .Lt_137C
	br label %.Lt_137C
.Lt_137C:

	; store LT_137D := 0
	store i64 0, i64* %LT_137D.410

	; label .Lt_1388
	br label %.Lt_1388
.Lt_1388:
	%vr44 = load i64, i64* %LT_137D.410
	%vr43 = bitcast i64 %vr44 to i64

	; bop vr43 AND 1
	%vr45 = and i64 %vr43, 1

	; bop vr33 OR vr45
	%vr46 = or i64 %vr33, %vr45

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.406

	; store vr48 := vr46
	%vr50 = ptrtoint %CPU6510* %vr48 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	store i64 %vr46, i64* %vr51

	; conv V => vr52
	%vr53 = bitcast %MULTI* %V.407 to i8*
	%vr54 = load i8, i8* %vr53
	%vr52 = sext i8 %vr54 to i64

	; bop vr52 SHL 1
	%vr55 = shl i64 %vr52, 1

	; conv vr55 => vr56
	%vr56 = trunc i64 %vr55 to i8

	; store V := vr56
	%vr57 = bitcast %MULTI* %V.407 to i8*
	store i8 %vr56, i8* %vr57

	; conv CARY => vr58
	%vr59 = load i8, i8* %CARY.408
	%vr58 = sext i8 %vr59 to i64

	; branchbop vr58 == 0
	%vr60 = icmp eq i64 %vr58, 0
	br i1 %vr60, label %.Lt_137F, label %.Lt_138A
.Lt_138A:

	; conv V => vr61
	%vr62 = bitcast %MULTI* %V.407 to i8*
	%vr63 = load i8, i8* %vr62
	%vr61 = sext i8 %vr63 to i64

	; bop vr61 OR 1
	%vr64 = or i64 %vr61, 1

	; conv vr64 => vr65
	%vr65 = trunc i64 %vr64 to i8

	; store V := vr65
	%vr66 = bitcast %MULTI* %V.407 to i8*
	store i8 %vr65, i8* %vr66

	; label .Lt_137F
	br label %.Lt_137F
.Lt_137F:

	; conv V => vr67
	%vr68 = bitcast %MULTI* %V.407 to i8*
	%vr69 = load i8, i8* %vr68
	%vr67 = zext i8 %vr69 to i64

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.406

	; conv vr71+64 => vr72
	%vr73 = ptrtoint %CPU6510* %vr71 to i64
	%vr74 = add i64 %vr73, 64
	%vr75 = inttoptr i64 %vr74 to i16*
	%vr76 = load i16, i16* %vr75
	%vr72 = zext i16 %vr76 to i64

	; deref CPU
	%vr78 = load %CPU6510*, %CPU6510** %CPU.406

	; call WRITEUBYTE()
	; arg vr78+16
	%vr79 = ptrtoint %CPU6510* %vr78 to i64
	%vr80 = add i64 %vr79, 16
	%vr81 = inttoptr i64 %vr80 to %MEMORY_T**
	%vr82 = load %MEMORY_T*, %MEMORY_T** %vr81
	; arg vr72
	; arg vr67
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr82, i64 %vr72, i64 %vr67 )

	; deref CPU
	%vr84 = load %CPU6510*, %CPU6510** %CPU.406

	; bop vr84 AND -3
	%vr87 = ptrtoint %CPU6510* %vr84 to i64
	%vr88 = inttoptr i64 %vr87 to i64*
	%vr89 = load i64, i64* %vr88
	%vr86 = and i64 %vr89, -3

	; conv V => vr91
	%vr92 = bitcast %MULTI* %V.407 to i8*
	%vr93 = load i8, i8* %vr92
	%vr91 = sext i8 %vr93 to i64

	; branchbop vr91 <> 0
	%vr94 = icmp ne i64 %vr91, 0
	br i1 %vr94, label %.Lt_1380, label %.Lt_138B
.Lt_138B:

	; store LT_1381 := 1
	store i64 1, i64* %LT_1381.411

	; goto .Lt_138C
	br label %.Lt_138C
.Lt_138D:

	; label .Lt_1380
	br label %.Lt_1380
.Lt_1380:

	; store LT_1381 := 0
	store i64 0, i64* %LT_1381.411

	; label .Lt_138C
	br label %.Lt_138C
.Lt_138C:
	%vr96 = load i64, i64* %LT_1381.411
	%vr95 = bitcast i64 %vr96 to i64

	; bop vr95 AND 1
	%vr97 = and i64 %vr95, 1

	; bop vr97 SHL 1
	%vr99 = bitcast i64 1 to i64
	%vr98 = shl i64 %vr97, %vr99

	; bop vr86 OR vr98
	%vr100 = or i64 %vr86, %vr98

	; deref CPU
	%vr102 = load %CPU6510*, %CPU6510** %CPU.406

	; store vr102 := vr100
	%vr104 = ptrtoint %CPU6510* %vr102 to i64
	%vr105 = inttoptr i64 %vr104 to i64*
	store i64 %vr100, i64* %vr105

	; deref CPU
	%vr107 = load %CPU6510*, %CPU6510** %CPU.406

	; bop vr107 AND -129
	%vr110 = ptrtoint %CPU6510* %vr107 to i64
	%vr111 = inttoptr i64 %vr110 to i64*
	%vr112 = load i64, i64* %vr111
	%vr109 = and i64 %vr112, -129

	; conv V => vr114
	%vr115 = bitcast %MULTI* %V.407 to i8*
	%vr116 = load i8, i8* %vr115
	%vr114 = sext i8 %vr116 to i64

	; branchbop vr114 >= 1
	%vr117 = icmp sge i64 %vr114, 1
	br i1 %vr117, label %.Lt_1382, label %.Lt_138E
.Lt_138E:

	; store LT_1383 := 1
	store i64 1, i64* %LT_1383.412

	; goto .Lt_138F
	br label %.Lt_138F
.Lt_1390:

	; label .Lt_1382
	br label %.Lt_1382
.Lt_1382:

	; store LT_1383 := 0
	store i64 0, i64* %LT_1383.412

	; label .Lt_138F
	br label %.Lt_138F
.Lt_138F:
	%vr119 = load i64, i64* %LT_1383.412
	%vr118 = bitcast i64 %vr119 to i64

	; bop vr118 AND 1
	%vr120 = and i64 %vr118, 1

	; bop vr120 SHL 7
	%vr122 = bitcast i64 7 to i64
	%vr121 = shl i64 %vr120, %vr122

	; bop vr109 OR vr121
	%vr123 = or i64 %vr109, %vr121

	; deref CPU
	%vr125 = load %CPU6510*, %CPU6510** %CPU.406

	; store vr125 := vr123
	%vr127 = ptrtoint %CPU6510* %vr125 to i64
	%vr128 = inttoptr i64 %vr127 to i64*
	store i64 %vr123, i64* %vr128

	; label .Lt_1379
	br label %.Lt_1379
.Lt_1379:
	ret void
}

define void @INS_ROLA( %CPU6510* %CPU.413$ ) nounwind
{

	; paramvar CPU
	%CPU.413 = alloca %CPU6510*
	store %CPU6510* %CPU.413$, %CPU6510** %CPU.413

	; localvar CARY
	%CARY.414 = alloca i8

	; localvar LT_1394
	%LT_1394.415 = alloca i64

	; localvar LT_1396
	%LT_1396.416 = alloca i64

	; localvar LT_139A
	%LT_139A.417 = alloca i64

	; localvar LT_139C
	%LT_139C.418 = alloca i64

	; label .Lt_1391
	br label %.Lt_1391
.Lt_1391:

	; addrof CARY

	; memclear CARY
	%vr1 = bitcast i8* %CARY.414 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.413

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; branchbop vr5 <> 1
	%vr10 = icmp ne i64 %vr5, 1
	br i1 %vr10, label %.Lt_1393, label %.Lt_139D
.Lt_139D:

	; store LT_1394 := 1
	store i64 1, i64* %LT_1394.415

	; goto .Lt_139E
	br label %.Lt_139E
.Lt_139F:

	; label .Lt_1393
	br label %.Lt_1393
.Lt_1393:

	; store LT_1394 := 0
	store i64 0, i64* %LT_1394.415

	; label .Lt_139E
	br label %.Lt_139E
.Lt_139E:

	; conv LT_1394 => vr11
	%vr12 = load i64, i64* %LT_1394.415
	%vr11 = trunc i64 %vr12 to i8

	; store CARY := vr11
	store i8 %vr11, i8* %CARY.414

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.413

	; bop vr14 AND -2
	%vr17 = ptrtoint %CPU6510* %vr14 to i64
	%vr18 = inttoptr i64 %vr17 to i64*
	%vr19 = load i64, i64* %vr18
	%vr16 = and i64 %vr19, -2

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.413

	; conv vr22+8 => vr23
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = add i64 %vr24, 8
	%vr26 = inttoptr i64 %vr25 to i8*
	%vr27 = load i8, i8* %vr26
	%vr23 = sext i8 %vr27 to i64

	; bop vr23 AND 128
	%vr28 = and i64 %vr23, 128

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_1395, label %.Lt_13A0
.Lt_13A0:

	; store LT_1396 := 1
	store i64 1, i64* %LT_1396.416

	; goto .Lt_13A1
	br label %.Lt_13A1
.Lt_13A2:

	; label .Lt_1395
	br label %.Lt_1395
.Lt_1395:

	; store LT_1396 := 0
	store i64 0, i64* %LT_1396.416

	; label .Lt_13A1
	br label %.Lt_13A1
.Lt_13A1:
	%vr31 = load i64, i64* %LT_1396.416
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr16 OR vr32
	%vr33 = or i64 %vr16, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.413

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.413

	; conv vr40+8 => vr41
	%vr42 = ptrtoint %CPU6510* %vr40 to i64
	%vr43 = add i64 %vr42, 8
	%vr44 = inttoptr i64 %vr43 to i8*
	%vr45 = load i8, i8* %vr44
	%vr41 = sext i8 %vr45 to i64

	; bop vr41 SHL 1
	%vr46 = shl i64 %vr41, 1

	; conv vr46 => vr47
	%vr47 = trunc i64 %vr46 to i8

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.413

	; store vr49+8 := vr47
	%vr50 = ptrtoint %CPU6510* %vr49 to i64
	%vr51 = add i64 %vr50, 8
	%vr52 = inttoptr i64 %vr51 to i8*
	store i8 %vr47, i8* %vr52

	; conv CARY => vr53
	%vr54 = load i8, i8* %CARY.414
	%vr53 = sext i8 %vr54 to i64

	; branchbop vr53 == 0
	%vr55 = icmp eq i64 %vr53, 0
	br i1 %vr55, label %.Lt_1398, label %.Lt_13A3
.Lt_13A3:

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.413

	; conv vr57+8 => vr58
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = add i64 %vr59, 8
	%vr61 = inttoptr i64 %vr60 to i8*
	%vr62 = load i8, i8* %vr61
	%vr58 = sext i8 %vr62 to i64

	; bop vr58 OR 1
	%vr63 = or i64 %vr58, 1

	; conv vr63 => vr64
	%vr64 = trunc i64 %vr63 to i8

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.413

	; store vr66+8 := vr64
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	store i8 %vr64, i8* %vr69

	; label .Lt_1398
	br label %.Lt_1398
.Lt_1398:

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.413

	; bop vr71 AND -3
	%vr74 = ptrtoint %CPU6510* %vr71 to i64
	%vr75 = inttoptr i64 %vr74 to i64*
	%vr76 = load i64, i64* %vr75
	%vr73 = and i64 %vr76, -3

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.413

	; conv vr79+8 => vr80
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 8
	%vr83 = inttoptr i64 %vr82 to i8*
	%vr84 = load i8, i8* %vr83
	%vr80 = sext i8 %vr84 to i64

	; branchbop vr80 <> 0
	%vr85 = icmp ne i64 %vr80, 0
	br i1 %vr85, label %.Lt_1399, label %.Lt_13A4
.Lt_13A4:

	; store LT_139A := 1
	store i64 1, i64* %LT_139A.417

	; goto .Lt_13A5
	br label %.Lt_13A5
.Lt_13A6:

	; label .Lt_1399
	br label %.Lt_1399
.Lt_1399:

	; store LT_139A := 0
	store i64 0, i64* %LT_139A.417

	; label .Lt_13A5
	br label %.Lt_13A5
.Lt_13A5:
	%vr87 = load i64, i64* %LT_139A.417
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 AND 1
	%vr88 = and i64 %vr86, 1

	; bop vr88 SHL 1
	%vr90 = bitcast i64 1 to i64
	%vr89 = shl i64 %vr88, %vr90

	; bop vr73 OR vr89
	%vr91 = or i64 %vr73, %vr89

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.413

	; store vr93 := vr91
	%vr95 = ptrtoint %CPU6510* %vr93 to i64
	%vr96 = inttoptr i64 %vr95 to i64*
	store i64 %vr91, i64* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.413

	; bop vr98 AND -129
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -129

	; deref CPU
	%vr106 = load %CPU6510*, %CPU6510** %CPU.413

	; conv vr106+8 => vr107
	%vr108 = ptrtoint %CPU6510* %vr106 to i64
	%vr109 = add i64 %vr108, 8
	%vr110 = inttoptr i64 %vr109 to i8*
	%vr111 = load i8, i8* %vr110
	%vr107 = sext i8 %vr111 to i64

	; branchbop vr107 >= 0
	%vr112 = icmp sge i64 %vr107, 0
	br i1 %vr112, label %.Lt_139B, label %.Lt_13A7
.Lt_13A7:

	; store LT_139C := 1
	store i64 1, i64* %LT_139C.418

	; goto .Lt_13A8
	br label %.Lt_13A8
.Lt_13A9:

	; label .Lt_139B
	br label %.Lt_139B
.Lt_139B:

	; store LT_139C := 0
	store i64 0, i64* %LT_139C.418

	; label .Lt_13A8
	br label %.Lt_13A8
.Lt_13A8:
	%vr114 = load i64, i64* %LT_139C.418
	%vr113 = bitcast i64 %vr114 to i64

	; bop vr113 AND 1
	%vr115 = and i64 %vr113, 1

	; bop vr115 SHL 7
	%vr117 = bitcast i64 7 to i64
	%vr116 = shl i64 %vr115, %vr117

	; bop vr100 OR vr116
	%vr118 = or i64 %vr100, %vr116

	; deref CPU
	%vr120 = load %CPU6510*, %CPU6510** %CPU.413

	; store vr120 := vr118
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	store i64 %vr118, i64* %vr123

	; label .Lt_1392
	br label %.Lt_1392
.Lt_1392:
	ret void
}

define void @INS_ROR( %CPU6510* %CPU.419$ ) nounwind
{

	; paramvar CPU
	%CPU.419 = alloca %CPU6510*
	store %CPU6510* %CPU.419$, %CPU6510** %CPU.419

	; localvar V
	%V.420 = alloca %MULTI

	; localvar CARY
	%CARY.421 = alloca i8

	; localvar LT_13AD
	%LT_13AD.422 = alloca i64

	; localvar LT_13AF
	%LT_13AF.423 = alloca i64

	; localvar LT_13B3
	%LT_13B3.424 = alloca i64

	; localvar LT_13B5
	%LT_13B5.425 = alloca i64

	; label .Lt_13AA
	br label %.Lt_13AA
.Lt_13AA:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.420 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof CARY

	; memclear CARY
	%vr3 = bitcast i8* %CARY.421 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.419

	; bop vr5 AND 1
	%vr8 = ptrtoint %CPU6510* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to i64*
	%vr10 = load i64, i64* %vr9
	%vr7 = and i64 %vr10, 1

	; branchbop vr7 <> 1
	%vr12 = icmp ne i64 %vr7, 1
	br i1 %vr12, label %.Lt_13AC, label %.Lt_13B6
.Lt_13B6:

	; store LT_13AD := 1
	store i64 1, i64* %LT_13AD.422

	; goto .Lt_13B7
	br label %.Lt_13B7
.Lt_13B8:

	; label .Lt_13AC
	br label %.Lt_13AC
.Lt_13AC:

	; store LT_13AD := 0
	store i64 0, i64* %LT_13AD.422

	; label .Lt_13B7
	br label %.Lt_13B7
.Lt_13B7:

	; conv LT_13AD => vr13
	%vr14 = load i64, i64* %LT_13AD.422
	%vr13 = trunc i64 %vr14 to i8

	; store CARY := vr13
	store i8 %vr13, i8* %CARY.421

	; deref CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.419

	; conv vr16+64 => vr17
	%vr18 = ptrtoint %CPU6510* %vr16 to i64
	%vr19 = add i64 %vr18, 64
	%vr20 = inttoptr i64 %vr19 to i16*
	%vr21 = load i16, i16* %vr20
	%vr17 = zext i16 %vr21 to i64

	; deref CPU
	%vr23 = load %CPU6510*, %CPU6510** %CPU.419

	; call READUBYTE()
	; arg vr23+16
	%vr25 = ptrtoint %CPU6510* %vr23 to i64
	%vr26 = add i64 %vr25, 16
	%vr27 = inttoptr i64 %vr26 to %MEMORY_T**
	%vr28 = load %MEMORY_T*, %MEMORY_T** %vr27
	; arg vr17
	%vr24 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr28, i64 %vr17 )

	; store V := vr24
	%vr29 = bitcast %MULTI* %V.420 to i8*
	store i8 %vr24, i8* %vr29

	; deref CPU
	%vr31 = load %CPU6510*, %CPU6510** %CPU.419

	; bop vr31 AND -2
	%vr34 = ptrtoint %CPU6510* %vr31 to i64
	%vr35 = inttoptr i64 %vr34 to i64*
	%vr36 = load i64, i64* %vr35
	%vr33 = and i64 %vr36, -2

	; conv V => vr38
	%vr39 = bitcast %MULTI* %V.420 to i8*
	%vr40 = load i8, i8* %vr39
	%vr38 = sext i8 %vr40 to i64

	; bop vr38 AND 1
	%vr41 = and i64 %vr38, 1

	; branchbop vr41 == 0
	%vr42 = icmp eq i64 %vr41, 0
	br i1 %vr42, label %.Lt_13AE, label %.Lt_13B9
.Lt_13B9:

	; store LT_13AF := 1
	store i64 1, i64* %LT_13AF.423

	; goto .Lt_13BA
	br label %.Lt_13BA
.Lt_13BB:

	; label .Lt_13AE
	br label %.Lt_13AE
.Lt_13AE:

	; store LT_13AF := 0
	store i64 0, i64* %LT_13AF.423

	; label .Lt_13BA
	br label %.Lt_13BA
.Lt_13BA:
	%vr44 = load i64, i64* %LT_13AF.423
	%vr43 = bitcast i64 %vr44 to i64

	; bop vr43 AND 1
	%vr45 = and i64 %vr43, 1

	; bop vr33 OR vr45
	%vr46 = or i64 %vr33, %vr45

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.419

	; store vr48 := vr46
	%vr50 = ptrtoint %CPU6510* %vr48 to i64
	%vr51 = inttoptr i64 %vr50 to i64*
	store i64 %vr46, i64* %vr51

	; conv V => vr52
	%vr53 = bitcast %MULTI* %V.420 to i8*
	%vr54 = load i8, i8* %vr53
	%vr52 = sext i8 %vr54 to i64

	; bop vr52 SHR 1
	%vr55 = ashr i64 %vr52, 1

	; conv vr55 => vr56
	%vr56 = trunc i64 %vr55 to i8

	; store V := vr56
	%vr57 = bitcast %MULTI* %V.420 to i8*
	store i8 %vr56, i8* %vr57

	; conv CARY => vr58
	%vr59 = load i8, i8* %CARY.421
	%vr58 = sext i8 %vr59 to i64

	; branchbop vr58 == 0
	%vr60 = icmp eq i64 %vr58, 0
	br i1 %vr60, label %.Lt_13B1, label %.Lt_13BC
.Lt_13BC:

	; conv V => vr61
	%vr62 = bitcast %MULTI* %V.420 to i8*
	%vr63 = load i8, i8* %vr62
	%vr61 = sext i8 %vr63 to i64

	; bop vr61 OR 128
	%vr64 = or i64 %vr61, 128

	; conv vr64 => vr65
	%vr65 = trunc i64 %vr64 to i8

	; store V := vr65
	%vr66 = bitcast %MULTI* %V.420 to i8*
	store i8 %vr65, i8* %vr66

	; label .Lt_13B1
	br label %.Lt_13B1
.Lt_13B1:

	; conv V => vr67
	%vr68 = bitcast %MULTI* %V.420 to i8*
	%vr69 = load i8, i8* %vr68
	%vr67 = zext i8 %vr69 to i64

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.419

	; conv vr71+64 => vr72
	%vr73 = ptrtoint %CPU6510* %vr71 to i64
	%vr74 = add i64 %vr73, 64
	%vr75 = inttoptr i64 %vr74 to i16*
	%vr76 = load i16, i16* %vr75
	%vr72 = zext i16 %vr76 to i64

	; deref CPU
	%vr78 = load %CPU6510*, %CPU6510** %CPU.419

	; call WRITEUBYTE()
	; arg vr78+16
	%vr79 = ptrtoint %CPU6510* %vr78 to i64
	%vr80 = add i64 %vr79, 16
	%vr81 = inttoptr i64 %vr80 to %MEMORY_T**
	%vr82 = load %MEMORY_T*, %MEMORY_T** %vr81
	; arg vr72
	; arg vr67
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr82, i64 %vr72, i64 %vr67 )

	; deref CPU
	%vr84 = load %CPU6510*, %CPU6510** %CPU.419

	; bop vr84 AND -3
	%vr87 = ptrtoint %CPU6510* %vr84 to i64
	%vr88 = inttoptr i64 %vr87 to i64*
	%vr89 = load i64, i64* %vr88
	%vr86 = and i64 %vr89, -3

	; conv V => vr91
	%vr92 = bitcast %MULTI* %V.420 to i8*
	%vr93 = load i8, i8* %vr92
	%vr91 = sext i8 %vr93 to i64

	; branchbop vr91 <> 0
	%vr94 = icmp ne i64 %vr91, 0
	br i1 %vr94, label %.Lt_13B2, label %.Lt_13BD
.Lt_13BD:

	; store LT_13B3 := 1
	store i64 1, i64* %LT_13B3.424

	; goto .Lt_13BE
	br label %.Lt_13BE
.Lt_13BF:

	; label .Lt_13B2
	br label %.Lt_13B2
.Lt_13B2:

	; store LT_13B3 := 0
	store i64 0, i64* %LT_13B3.424

	; label .Lt_13BE
	br label %.Lt_13BE
.Lt_13BE:
	%vr96 = load i64, i64* %LT_13B3.424
	%vr95 = bitcast i64 %vr96 to i64

	; bop vr95 AND 1
	%vr97 = and i64 %vr95, 1

	; bop vr97 SHL 1
	%vr99 = bitcast i64 1 to i64
	%vr98 = shl i64 %vr97, %vr99

	; bop vr86 OR vr98
	%vr100 = or i64 %vr86, %vr98

	; deref CPU
	%vr102 = load %CPU6510*, %CPU6510** %CPU.419

	; store vr102 := vr100
	%vr104 = ptrtoint %CPU6510* %vr102 to i64
	%vr105 = inttoptr i64 %vr104 to i64*
	store i64 %vr100, i64* %vr105

	; deref CPU
	%vr107 = load %CPU6510*, %CPU6510** %CPU.419

	; bop vr107 AND -129
	%vr110 = ptrtoint %CPU6510* %vr107 to i64
	%vr111 = inttoptr i64 %vr110 to i64*
	%vr112 = load i64, i64* %vr111
	%vr109 = and i64 %vr112, -129

	; conv V => vr114
	%vr115 = bitcast %MULTI* %V.420 to i8*
	%vr116 = load i8, i8* %vr115
	%vr114 = sext i8 %vr116 to i64

	; branchbop vr114 >= 0
	%vr117 = icmp sge i64 %vr114, 0
	br i1 %vr117, label %.Lt_13B4, label %.Lt_13C0
.Lt_13C0:

	; store LT_13B5 := 1
	store i64 1, i64* %LT_13B5.425

	; goto .Lt_13C1
	br label %.Lt_13C1
.Lt_13C2:

	; label .Lt_13B4
	br label %.Lt_13B4
.Lt_13B4:

	; store LT_13B5 := 0
	store i64 0, i64* %LT_13B5.425

	; label .Lt_13C1
	br label %.Lt_13C1
.Lt_13C1:
	%vr119 = load i64, i64* %LT_13B5.425
	%vr118 = bitcast i64 %vr119 to i64

	; bop vr118 AND 1
	%vr120 = and i64 %vr118, 1

	; bop vr120 SHL 7
	%vr122 = bitcast i64 7 to i64
	%vr121 = shl i64 %vr120, %vr122

	; bop vr109 OR vr121
	%vr123 = or i64 %vr109, %vr121

	; deref CPU
	%vr125 = load %CPU6510*, %CPU6510** %CPU.419

	; store vr125 := vr123
	%vr127 = ptrtoint %CPU6510* %vr125 to i64
	%vr128 = inttoptr i64 %vr127 to i64*
	store i64 %vr123, i64* %vr128

	; label .Lt_13AB
	br label %.Lt_13AB
.Lt_13AB:
	ret void
}

define void @INS_RORA( %CPU6510* %CPU.426$ ) nounwind
{

	; paramvar CPU
	%CPU.426 = alloca %CPU6510*
	store %CPU6510* %CPU.426$, %CPU6510** %CPU.426

	; localvar CARY
	%CARY.427 = alloca i8

	; localvar LT_13C6
	%LT_13C6.428 = alloca i64

	; localvar LT_13C8
	%LT_13C8.429 = alloca i64

	; localvar LT_13CC
	%LT_13CC.430 = alloca i64

	; localvar LT_13CE
	%LT_13CE.431 = alloca i64

	; label .Lt_13C3
	br label %.Lt_13C3
.Lt_13C3:

	; addrof CARY

	; memclear CARY
	%vr1 = bitcast i8* %CARY.427 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.426

	; bop vr3 AND 1
	%vr6 = ptrtoint %CPU6510* %vr3 to i64
	%vr7 = inttoptr i64 %vr6 to i64*
	%vr8 = load i64, i64* %vr7
	%vr5 = and i64 %vr8, 1

	; branchbop vr5 <> 1
	%vr10 = icmp ne i64 %vr5, 1
	br i1 %vr10, label %.Lt_13C5, label %.Lt_13CF
.Lt_13CF:

	; store LT_13C6 := 1
	store i64 1, i64* %LT_13C6.428

	; goto .Lt_13D0
	br label %.Lt_13D0
.Lt_13D1:

	; label .Lt_13C5
	br label %.Lt_13C5
.Lt_13C5:

	; store LT_13C6 := 0
	store i64 0, i64* %LT_13C6.428

	; label .Lt_13D0
	br label %.Lt_13D0
.Lt_13D0:

	; conv LT_13C6 => vr11
	%vr12 = load i64, i64* %LT_13C6.428
	%vr11 = trunc i64 %vr12 to i8

	; store CARY := vr11
	store i8 %vr11, i8* %CARY.427

	; deref CPU
	%vr14 = load %CPU6510*, %CPU6510** %CPU.426

	; bop vr14 AND -2
	%vr17 = ptrtoint %CPU6510* %vr14 to i64
	%vr18 = inttoptr i64 %vr17 to i64*
	%vr19 = load i64, i64* %vr18
	%vr16 = and i64 %vr19, -2

	; deref CPU
	%vr22 = load %CPU6510*, %CPU6510** %CPU.426

	; conv vr22+8 => vr23
	%vr24 = ptrtoint %CPU6510* %vr22 to i64
	%vr25 = add i64 %vr24, 8
	%vr26 = inttoptr i64 %vr25 to i8*
	%vr27 = load i8, i8* %vr26
	%vr23 = sext i8 %vr27 to i64

	; bop vr23 AND 1
	%vr28 = and i64 %vr23, 1

	; branchbop vr28 == 0
	%vr29 = icmp eq i64 %vr28, 0
	br i1 %vr29, label %.Lt_13C7, label %.Lt_13D2
.Lt_13D2:

	; store LT_13C8 := 1
	store i64 1, i64* %LT_13C8.429

	; goto .Lt_13D3
	br label %.Lt_13D3
.Lt_13D4:

	; label .Lt_13C7
	br label %.Lt_13C7
.Lt_13C7:

	; store LT_13C8 := 0
	store i64 0, i64* %LT_13C8.429

	; label .Lt_13D3
	br label %.Lt_13D3
.Lt_13D3:
	%vr31 = load i64, i64* %LT_13C8.429
	%vr30 = bitcast i64 %vr31 to i64

	; bop vr30 AND 1
	%vr32 = and i64 %vr30, 1

	; bop vr16 OR vr32
	%vr33 = or i64 %vr16, %vr32

	; deref CPU
	%vr35 = load %CPU6510*, %CPU6510** %CPU.426

	; store vr35 := vr33
	%vr37 = ptrtoint %CPU6510* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to i64*
	store i64 %vr33, i64* %vr38

	; deref CPU
	%vr40 = load %CPU6510*, %CPU6510** %CPU.426

	; conv vr40+8 => vr41
	%vr42 = ptrtoint %CPU6510* %vr40 to i64
	%vr43 = add i64 %vr42, 8
	%vr44 = inttoptr i64 %vr43 to i8*
	%vr45 = load i8, i8* %vr44
	%vr41 = sext i8 %vr45 to i64

	; bop vr41 SHR 1
	%vr46 = ashr i64 %vr41, 1

	; conv vr46 => vr47
	%vr47 = trunc i64 %vr46 to i8

	; deref CPU
	%vr49 = load %CPU6510*, %CPU6510** %CPU.426

	; store vr49+8 := vr47
	%vr50 = ptrtoint %CPU6510* %vr49 to i64
	%vr51 = add i64 %vr50, 8
	%vr52 = inttoptr i64 %vr51 to i8*
	store i8 %vr47, i8* %vr52

	; conv CARY => vr53
	%vr54 = load i8, i8* %CARY.427
	%vr53 = sext i8 %vr54 to i64

	; branchbop vr53 == 0
	%vr55 = icmp eq i64 %vr53, 0
	br i1 %vr55, label %.Lt_13CA, label %.Lt_13D5
.Lt_13D5:

	; deref CPU
	%vr57 = load %CPU6510*, %CPU6510** %CPU.426

	; conv vr57+8 => vr58
	%vr59 = ptrtoint %CPU6510* %vr57 to i64
	%vr60 = add i64 %vr59, 8
	%vr61 = inttoptr i64 %vr60 to i8*
	%vr62 = load i8, i8* %vr61
	%vr58 = sext i8 %vr62 to i64

	; bop vr58 OR 128
	%vr63 = or i64 %vr58, 128

	; conv vr63 => vr64
	%vr64 = trunc i64 %vr63 to i8

	; deref CPU
	%vr66 = load %CPU6510*, %CPU6510** %CPU.426

	; store vr66+8 := vr64
	%vr67 = ptrtoint %CPU6510* %vr66 to i64
	%vr68 = add i64 %vr67, 8
	%vr69 = inttoptr i64 %vr68 to i8*
	store i8 %vr64, i8* %vr69

	; label .Lt_13CA
	br label %.Lt_13CA
.Lt_13CA:

	; deref CPU
	%vr71 = load %CPU6510*, %CPU6510** %CPU.426

	; bop vr71 AND -3
	%vr74 = ptrtoint %CPU6510* %vr71 to i64
	%vr75 = inttoptr i64 %vr74 to i64*
	%vr76 = load i64, i64* %vr75
	%vr73 = and i64 %vr76, -3

	; deref CPU
	%vr79 = load %CPU6510*, %CPU6510** %CPU.426

	; conv vr79+8 => vr80
	%vr81 = ptrtoint %CPU6510* %vr79 to i64
	%vr82 = add i64 %vr81, 8
	%vr83 = inttoptr i64 %vr82 to i8*
	%vr84 = load i8, i8* %vr83
	%vr80 = sext i8 %vr84 to i64

	; branchbop vr80 <> 0
	%vr85 = icmp ne i64 %vr80, 0
	br i1 %vr85, label %.Lt_13CB, label %.Lt_13D6
.Lt_13D6:

	; store LT_13CC := 1
	store i64 1, i64* %LT_13CC.430

	; goto .Lt_13D7
	br label %.Lt_13D7
.Lt_13D8:

	; label .Lt_13CB
	br label %.Lt_13CB
.Lt_13CB:

	; store LT_13CC := 0
	store i64 0, i64* %LT_13CC.430

	; label .Lt_13D7
	br label %.Lt_13D7
.Lt_13D7:
	%vr87 = load i64, i64* %LT_13CC.430
	%vr86 = bitcast i64 %vr87 to i64

	; bop vr86 AND 1
	%vr88 = and i64 %vr86, 1

	; bop vr88 SHL 1
	%vr90 = bitcast i64 1 to i64
	%vr89 = shl i64 %vr88, %vr90

	; bop vr73 OR vr89
	%vr91 = or i64 %vr73, %vr89

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.426

	; store vr93 := vr91
	%vr95 = ptrtoint %CPU6510* %vr93 to i64
	%vr96 = inttoptr i64 %vr95 to i64*
	store i64 %vr91, i64* %vr96

	; deref CPU
	%vr98 = load %CPU6510*, %CPU6510** %CPU.426

	; bop vr98 AND -129
	%vr101 = ptrtoint %CPU6510* %vr98 to i64
	%vr102 = inttoptr i64 %vr101 to i64*
	%vr103 = load i64, i64* %vr102
	%vr100 = and i64 %vr103, -129

	; deref CPU
	%vr106 = load %CPU6510*, %CPU6510** %CPU.426

	; conv vr106+8 => vr107
	%vr108 = ptrtoint %CPU6510* %vr106 to i64
	%vr109 = add i64 %vr108, 8
	%vr110 = inttoptr i64 %vr109 to i8*
	%vr111 = load i8, i8* %vr110
	%vr107 = sext i8 %vr111 to i64

	; branchbop vr107 >= 0
	%vr112 = icmp sge i64 %vr107, 0
	br i1 %vr112, label %.Lt_13CD, label %.Lt_13D9
.Lt_13D9:

	; store LT_13CE := 1
	store i64 1, i64* %LT_13CE.431

	; goto .Lt_13DA
	br label %.Lt_13DA
.Lt_13DB:

	; label .Lt_13CD
	br label %.Lt_13CD
.Lt_13CD:

	; store LT_13CE := 0
	store i64 0, i64* %LT_13CE.431

	; label .Lt_13DA
	br label %.Lt_13DA
.Lt_13DA:
	%vr114 = load i64, i64* %LT_13CE.431
	%vr113 = bitcast i64 %vr114 to i64

	; bop vr113 AND 1
	%vr115 = and i64 %vr113, 1

	; bop vr115 SHL 7
	%vr117 = bitcast i64 7 to i64
	%vr116 = shl i64 %vr115, %vr117

	; bop vr100 OR vr116
	%vr118 = or i64 %vr100, %vr116

	; deref CPU
	%vr120 = load %CPU6510*, %CPU6510** %CPU.426

	; store vr120 := vr118
	%vr122 = ptrtoint %CPU6510* %vr120 to i64
	%vr123 = inttoptr i64 %vr122 to i64*
	store i64 %vr118, i64* %vr123

	; label .Lt_13C4
	br label %.Lt_13C4
.Lt_13C4:
	ret void
}

define void @INS_RTI( %CPU6510* %CPU.432$ ) nounwind
{

	; paramvar CPU
	%CPU.432 = alloca %CPU6510*
	store %CPU6510* %CPU.432$, %CPU6510** %CPU.432

	; label .Lt_13DC
	br label %.Lt_13DC
.Lt_13DC:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.432
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.432

	; store vr4 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = inttoptr i64 %vr5 to i8*
	store i8 %vr2, i8* %vr6

	; call PULL()
	; arg CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.432
	%vr7 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr8 )

	; conv vr7 => vr9
	%vr9 = trunc i64 %vr7 to i8

	; deref CPU
	%vr11 = load %CPU6510*, %CPU6510** %CPU.432

	; store vr11+12 := vr9
	%vr12 = ptrtoint %CPU6510* %vr11 to i64
	%vr13 = add i64 %vr12, 12
	%vr14 = inttoptr i64 %vr13 to i8*
	store i8 %vr9, i8* %vr14

	; call PULL()
	; arg CPU
	%vr16 = load %CPU6510*, %CPU6510** %CPU.432
	%vr15 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr16 )

	; conv vr15 => vr17
	%vr17 = trunc i64 %vr15 to i8

	; deref CPU
	%vr19 = load %CPU6510*, %CPU6510** %CPU.432

	; store vr19+13 := vr17
	%vr20 = ptrtoint %CPU6510* %vr19 to i64
	%vr21 = add i64 %vr20, 13
	%vr22 = inttoptr i64 %vr21 to i8*
	store i8 %vr17, i8* %vr22

	; deref CPU
	%vr24 = load %CPU6510*, %CPU6510** %CPU.432

	; conv vr24+12 => vr25
	%vr26 = ptrtoint %CPU6510* %vr24 to i64
	%vr27 = add i64 %vr26, 12
	%vr28 = inttoptr i64 %vr27 to i16*
	%vr29 = load i16, i16* %vr28
	%vr25 = sext i16 %vr29 to i64

	; bop vr25 + 1
	%vr30 = add i64 %vr25, 1

	; conv vr30 => vr31
	%vr31 = trunc i64 %vr30 to i16

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.432

	; store vr33+12 := vr31
	%vr34 = ptrtoint %CPU6510* %vr33 to i64
	%vr35 = add i64 %vr34, 12
	%vr36 = inttoptr i64 %vr35 to i16*
	store i16 %vr31, i16* %vr36

	; label .Lt_13DD
	br label %.Lt_13DD
.Lt_13DD:
	ret void
}

define void @INS_RTS( %CPU6510* %CPU.433$ ) nounwind
{

	; paramvar CPU
	%CPU.433 = alloca %CPU6510*
	store %CPU6510* %CPU.433$, %CPU6510** %CPU.433

	; label .Lt_13DE
	br label %.Lt_13DE
.Lt_13DE:

	; call PULL()
	; arg CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.433
	%vr0 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr1 )

	; conv vr0 => vr2
	%vr2 = trunc i64 %vr0 to i8

	; deref CPU
	%vr4 = load %CPU6510*, %CPU6510** %CPU.433

	; store vr4+12 := vr2
	%vr5 = ptrtoint %CPU6510* %vr4 to i64
	%vr6 = add i64 %vr5, 12
	%vr7 = inttoptr i64 %vr6 to i8*
	store i8 %vr2, i8* %vr7

	; call PULL()
	; arg CPU
	%vr9 = load %CPU6510*, %CPU6510** %CPU.433
	%vr8 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr9 )

	; conv vr8 => vr10
	%vr10 = trunc i64 %vr8 to i8

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.433

	; store vr12+13 := vr10
	%vr13 = ptrtoint %CPU6510* %vr12 to i64
	%vr14 = add i64 %vr13, 13
	%vr15 = inttoptr i64 %vr14 to i8*
	store i8 %vr10, i8* %vr15

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.433

	; conv vr17+12 => vr18
	%vr19 = ptrtoint %CPU6510* %vr17 to i64
	%vr20 = add i64 %vr19, 12
	%vr21 = inttoptr i64 %vr20 to i16*
	%vr22 = load i16, i16* %vr21
	%vr18 = sext i16 %vr22 to i64

	; bop vr18 + 1
	%vr23 = add i64 %vr18, 1

	; conv vr23 => vr24
	%vr24 = trunc i64 %vr23 to i16

	; deref CPU
	%vr26 = load %CPU6510*, %CPU6510** %CPU.433

	; store vr26+12 := vr24
	%vr27 = ptrtoint %CPU6510* %vr26 to i64
	%vr28 = add i64 %vr27, 12
	%vr29 = inttoptr i64 %vr28 to i16*
	store i16 %vr24, i16* %vr29

	; label .Lt_13DF
	br label %.Lt_13DF
.Lt_13DF:
	ret void
}

define void @INS_SBC( %CPU6510* %CPU.434$ ) nounwind
{

	; paramvar CPU
	%CPU.434 = alloca %CPU6510*
	store %CPU6510* %CPU.434$, %CPU6510** %CPU.434

	; localvar V
	%V.435 = alloca %MULTI

	; localvar B
	%B.436 = alloca %MULTI

	; localvar LT_13E5
	%LT_13E5.437 = alloca i64

	; localvar LT_13E7
	%LT_13E7.438 = alloca i64

	; localvar LT_13E9
	%LT_13E9.439 = alloca i64

	; localvar LT_13EB
	%LT_13EB.440 = alloca i64

	; label .Lt_13E0
	br label %.Lt_13E0
.Lt_13E0:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.435 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; addrof B

	; memclear B
	%vr3 = bitcast %MULTI* %B.436 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.434

	; conv vr5+64 => vr6
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 64
	%vr9 = inttoptr i64 %vr8 to i16*
	%vr10 = load i16, i16* %vr9
	%vr6 = zext i16 %vr10 to i64

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.434

	; call READUBYTE()
	; arg vr12+16
	%vr14 = ptrtoint %CPU6510* %vr12 to i64
	%vr15 = add i64 %vr14, 16
	%vr16 = inttoptr i64 %vr15 to %MEMORY_T**
	%vr17 = load %MEMORY_T*, %MEMORY_T** %vr16
	; arg vr6
	%vr13 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr17, i64 %vr6 )

	; store B := vr13
	%vr18 = bitcast %MULTI* %B.436 to i8*
	store i8 %vr13, i8* %vr18

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.434

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; conv B => vr26
	%vr27 = bitcast %MULTI* %B.436 to i8*
	%vr28 = load i8, i8* %vr27
	%vr26 = sext i8 %vr28 to i64

	; bop vr21 - vr26
	%vr29 = sub i64 %vr21, %vr26

	; conv vr29 => vr30
	%vr30 = trunc i64 %vr29 to i16

	; store V := vr30
	%vr31 = bitcast %MULTI* %V.435 to i16*
	store i16 %vr30, i16* %vr31

	; deref CPU
	%vr33 = load %CPU6510*, %CPU6510** %CPU.434

	; bop vr33 AND 1
	%vr36 = ptrtoint %CPU6510* %vr33 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	%vr38 = load i64, i64* %vr37
	%vr35 = and i64 %vr38, 1

	; branchbop vr35 <> 0
	%vr40 = icmp ne i64 %vr35, 0
	br i1 %vr40, label %.Lt_13E3, label %.Lt_13EC
.Lt_13EC:

	; conv V => vr41
	%vr42 = bitcast %MULTI* %V.435 to i16*
	%vr43 = load i16, i16* %vr42
	%vr41 = sext i16 %vr43 to i64

	; bop vr41 + -1
	%vr44 = add i64 %vr41, -1

	; conv vr44 => vr45
	%vr45 = trunc i64 %vr44 to i16

	; store V := vr45
	%vr46 = bitcast %MULTI* %V.435 to i16*
	store i16 %vr45, i16* %vr46

	; label .Lt_13E3
	br label %.Lt_13E3
.Lt_13E3:

	; deref CPU
	%vr48 = load %CPU6510*, %CPU6510** %CPU.434

	; bop vr48 AND -65
	%vr51 = ptrtoint %CPU6510* %vr48 to i64
	%vr52 = inttoptr i64 %vr51 to i64*
	%vr53 = load i64, i64* %vr52
	%vr50 = and i64 %vr53, -65

	; deref CPU
	%vr56 = load %CPU6510*, %CPU6510** %CPU.434

	; conv vr56+8 => vr57
	%vr58 = ptrtoint %CPU6510* %vr56 to i64
	%vr59 = add i64 %vr58, 8
	%vr60 = inttoptr i64 %vr59 to i8*
	%vr61 = load i8, i8* %vr60
	%vr57 = sext i8 %vr61 to i64

	; conv B => vr62
	%vr63 = bitcast %MULTI* %B.436 to i8*
	%vr64 = load i8, i8* %vr63
	%vr62 = sext i8 %vr64 to i64

	; bop vr57 XOR vr62
	%vr65 = xor i64 %vr57, %vr62

	; bop vr65 AND 128
	%vr66 = and i64 %vr65, 128

	; deref CPU
	%vr68 = load %CPU6510*, %CPU6510** %CPU.434

	; conv vr68+8 => vr69
	%vr70 = ptrtoint %CPU6510* %vr68 to i64
	%vr71 = add i64 %vr70, 8
	%vr72 = inttoptr i64 %vr71 to i8*
	%vr73 = load i8, i8* %vr72
	%vr69 = sext i8 %vr73 to i64

	; conv V => vr74
	%vr75 = bitcast %MULTI* %V.435 to i8*
	%vr76 = load i8, i8* %vr75
	%vr74 = sext i8 %vr76 to i64

	; bop vr69 XOR vr74
	%vr77 = xor i64 %vr69, %vr74

	; bop vr77 AND 128
	%vr78 = and i64 %vr77, 128

	; bop vr66 AND vr78
	%vr79 = and i64 %vr66, %vr78

	; branchbop vr79 == 0
	%vr80 = icmp eq i64 %vr79, 0
	br i1 %vr80, label %.Lt_13E4, label %.Lt_13ED
.Lt_13ED:

	; store LT_13E5 := 1
	store i64 1, i64* %LT_13E5.437

	; goto .Lt_13EE
	br label %.Lt_13EE
.Lt_13EF:

	; label .Lt_13E4
	br label %.Lt_13E4
.Lt_13E4:

	; store LT_13E5 := 0
	store i64 0, i64* %LT_13E5.437

	; label .Lt_13EE
	br label %.Lt_13EE
.Lt_13EE:
	%vr82 = load i64, i64* %LT_13E5.437
	%vr81 = bitcast i64 %vr82 to i64

	; bop vr81 AND 1
	%vr83 = and i64 %vr81, 1

	; bop vr83 SHL 6
	%vr85 = bitcast i64 6 to i64
	%vr84 = shl i64 %vr83, %vr85

	; bop vr50 OR vr84
	%vr86 = or i64 %vr50, %vr84

	; deref CPU
	%vr88 = load %CPU6510*, %CPU6510** %CPU.434

	; store vr88 := vr86
	%vr90 = ptrtoint %CPU6510* %vr88 to i64
	%vr91 = inttoptr i64 %vr90 to i64*
	store i64 %vr86, i64* %vr91

	; deref CPU
	%vr93 = load %CPU6510*, %CPU6510** %CPU.434

	; store vr93+8 := V
	%vr94 = bitcast %MULTI* %V.435 to i8*
	%vr95 = load i8, i8* %vr94
	%vr96 = ptrtoint %CPU6510* %vr93 to i64
	%vr97 = add i64 %vr96, 8
	%vr98 = inttoptr i64 %vr97 to i8*
	store i8 %vr95, i8* %vr98

	; deref CPU
	%vr100 = load %CPU6510*, %CPU6510** %CPU.434

	; bop vr100 AND -2
	%vr103 = ptrtoint %CPU6510* %vr100 to i64
	%vr104 = inttoptr i64 %vr103 to i64*
	%vr105 = load i64, i64* %vr104
	%vr102 = and i64 %vr105, -2

	; conv V => vr107
	%vr108 = bitcast %MULTI* %V.435 to i16*
	%vr109 = load i16, i16* %vr108
	%vr107 = sext i16 %vr109 to i64

	; branchbop vr107 > 255
	%vr110 = icmp sgt i64 %vr107, 255
	br i1 %vr110, label %.Lt_13E6, label %.Lt_13F0
.Lt_13F0:

	; store LT_13E7 := 1
	store i64 1, i64* %LT_13E7.438

	; goto .Lt_13F1
	br label %.Lt_13F1
.Lt_13F2:

	; label .Lt_13E6
	br label %.Lt_13E6
.Lt_13E6:

	; store LT_13E7 := 0
	store i64 0, i64* %LT_13E7.438

	; label .Lt_13F1
	br label %.Lt_13F1
.Lt_13F1:
	%vr112 = load i64, i64* %LT_13E7.438
	%vr111 = bitcast i64 %vr112 to i64

	; bop vr111 AND 1
	%vr113 = and i64 %vr111, 1

	; bop vr102 OR vr113
	%vr114 = or i64 %vr102, %vr113

	; deref CPU
	%vr116 = load %CPU6510*, %CPU6510** %CPU.434

	; store vr116 := vr114
	%vr118 = ptrtoint %CPU6510* %vr116 to i64
	%vr119 = inttoptr i64 %vr118 to i64*
	store i64 %vr114, i64* %vr119

	; deref CPU
	%vr121 = load %CPU6510*, %CPU6510** %CPU.434

	; bop vr121 AND -3
	%vr124 = ptrtoint %CPU6510* %vr121 to i64
	%vr125 = inttoptr i64 %vr124 to i64*
	%vr126 = load i64, i64* %vr125
	%vr123 = and i64 %vr126, -3

	; conv V => vr128
	%vr129 = bitcast %MULTI* %V.435 to i8*
	%vr130 = load i8, i8* %vr129
	%vr128 = sext i8 %vr130 to i64

	; branchbop vr128 <> 0
	%vr131 = icmp ne i64 %vr128, 0
	br i1 %vr131, label %.Lt_13E8, label %.Lt_13F3
.Lt_13F3:

	; store LT_13E9 := 1
	store i64 1, i64* %LT_13E9.439

	; goto .Lt_13F4
	br label %.Lt_13F4
.Lt_13F5:

	; label .Lt_13E8
	br label %.Lt_13E8
.Lt_13E8:

	; store LT_13E9 := 0
	store i64 0, i64* %LT_13E9.439

	; label .Lt_13F4
	br label %.Lt_13F4
.Lt_13F4:
	%vr133 = load i64, i64* %LT_13E9.439
	%vr132 = bitcast i64 %vr133 to i64

	; bop vr132 AND 1
	%vr134 = and i64 %vr132, 1

	; bop vr134 SHL 1
	%vr136 = bitcast i64 1 to i64
	%vr135 = shl i64 %vr134, %vr136

	; bop vr123 OR vr135
	%vr137 = or i64 %vr123, %vr135

	; deref CPU
	%vr139 = load %CPU6510*, %CPU6510** %CPU.434

	; store vr139 := vr137
	%vr141 = ptrtoint %CPU6510* %vr139 to i64
	%vr142 = inttoptr i64 %vr141 to i64*
	store i64 %vr137, i64* %vr142

	; deref CPU
	%vr144 = load %CPU6510*, %CPU6510** %CPU.434

	; bop vr144 AND -129
	%vr147 = ptrtoint %CPU6510* %vr144 to i64
	%vr148 = inttoptr i64 %vr147 to i64*
	%vr149 = load i64, i64* %vr148
	%vr146 = and i64 %vr149, -129

	; conv V => vr151
	%vr152 = bitcast %MULTI* %V.435 to i8*
	%vr153 = load i8, i8* %vr152
	%vr151 = sext i8 %vr153 to i64

	; branchbop vr151 >= 0
	%vr154 = icmp sge i64 %vr151, 0
	br i1 %vr154, label %.Lt_13EA, label %.Lt_13F6
.Lt_13F6:

	; store LT_13EB := 1
	store i64 1, i64* %LT_13EB.440

	; goto .Lt_13F7
	br label %.Lt_13F7
.Lt_13F8:

	; label .Lt_13EA
	br label %.Lt_13EA
.Lt_13EA:

	; store LT_13EB := 0
	store i64 0, i64* %LT_13EB.440

	; label .Lt_13F7
	br label %.Lt_13F7
.Lt_13F7:
	%vr156 = load i64, i64* %LT_13EB.440
	%vr155 = bitcast i64 %vr156 to i64

	; bop vr155 AND 1
	%vr157 = and i64 %vr155, 1

	; bop vr157 SHL 7
	%vr159 = bitcast i64 7 to i64
	%vr158 = shl i64 %vr157, %vr159

	; bop vr146 OR vr158
	%vr160 = or i64 %vr146, %vr158

	; deref CPU
	%vr162 = load %CPU6510*, %CPU6510** %CPU.434

	; store vr162 := vr160
	%vr164 = ptrtoint %CPU6510* %vr162 to i64
	%vr165 = inttoptr i64 %vr164 to i64*
	store i64 %vr160, i64* %vr165

	; label .Lt_13E1
	br label %.Lt_13E1
.Lt_13E1:
	ret void
}

define void @INS_SEC( %CPU6510* %CPU.441$ ) nounwind
{

	; paramvar CPU
	%CPU.441 = alloca %CPU6510*
	store %CPU6510* %CPU.441$, %CPU6510** %CPU.441

	; label .Lt_13F9
	br label %.Lt_13F9
.Lt_13F9:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.441

	; bop vr1 AND -2
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -2

	; bop vr3 OR 1
	%vr8 = or i64 %vr3, 1

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.441

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_13FA
	br label %.Lt_13FA
.Lt_13FA:
	ret void
}

define void @INS_SED( %CPU6510* %CPU.442$ ) nounwind
{

	; paramvar CPU
	%CPU.442 = alloca %CPU6510*
	store %CPU6510* %CPU.442$, %CPU6510** %CPU.442

	; label .Lt_13FB
	br label %.Lt_13FB
.Lt_13FB:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.442

	; bop vr1 AND -9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -9

	; bop vr3 OR 8
	%vr8 = or i64 %vr3, 8

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.442

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_13FC
	br label %.Lt_13FC
.Lt_13FC:
	ret void
}

define void @INS_SEI( %CPU6510* %CPU.443$ ) nounwind
{

	; paramvar CPU
	%CPU.443 = alloca %CPU6510*
	store %CPU6510* %CPU.443$, %CPU6510** %CPU.443

	; label .Lt_13FD
	br label %.Lt_13FD
.Lt_13FD:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.443

	; bop vr1 AND -5
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = inttoptr i64 %vr4 to i64*
	%vr6 = load i64, i64* %vr5
	%vr3 = and i64 %vr6, -5

	; bop vr3 OR 4
	%vr8 = or i64 %vr3, 4

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.443

	; store vr10 := vr8
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = inttoptr i64 %vr12 to i64*
	store i64 %vr8, i64* %vr13

	; label .Lt_13FE
	br label %.Lt_13FE
.Lt_13FE:
	ret void
}

define void @INS_STA( %CPU6510* %CPU.444$ ) nounwind
{

	; paramvar CPU
	%CPU.444 = alloca %CPU6510*
	store %CPU6510* %CPU.444$, %CPU6510** %CPU.444

	; label .Lt_13FF
	br label %.Lt_13FF
.Lt_13FF:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.444

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.444

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.444

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_1400
	br label %.Lt_1400
.Lt_1400:
	ret void
}

define void @INS_STX( %CPU6510* %CPU.445$ ) nounwind
{

	; paramvar CPU
	%CPU.445 = alloca %CPU6510*
	store %CPU6510* %CPU.445$, %CPU6510** %CPU.445

	; label .Lt_1401
	br label %.Lt_1401
.Lt_1401:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.445

	; conv vr1+9 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 9
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.445

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.445

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_1402
	br label %.Lt_1402
.Lt_1402:
	ret void
}

define void @INS_STY( %CPU6510* %CPU.446$ ) nounwind
{

	; paramvar CPU
	%CPU.446 = alloca %CPU6510*
	store %CPU6510* %CPU.446$, %CPU6510** %CPU.446

	; label .Lt_1403
	br label %.Lt_1403
.Lt_1403:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.446

	; conv vr1+10 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 10
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.446

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i16*
	%vr13 = load i16, i16* %vr12
	%vr9 = zext i16 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.446

	; call WRITEUBYTE()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_1404
	br label %.Lt_1404
.Lt_1404:
	ret void
}

define void @INS_TAX( %CPU6510* %CPU.447$ ) nounwind
{

	; paramvar CPU
	%CPU.447 = alloca %CPU6510*
	store %CPU6510* %CPU.447$, %CPU6510** %CPU.447

	; localvar LT_1408
	%LT_1408.448 = alloca i64

	; localvar LT_140A
	%LT_140A.449 = alloca i64

	; label .Lt_1405
	br label %.Lt_1405
.Lt_1405:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.447

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.447

	; store vr3+9 := vr1+8
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 8
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 9
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.447

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.447

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_1407, label %.Lt_140B
.Lt_140B:

	; store LT_1408 := 1
	store i64 1, i64* %LT_1408.448

	; goto .Lt_140C
	br label %.Lt_140C
.Lt_140D:

	; label .Lt_1407
	br label %.Lt_1407
.Lt_1407:

	; store LT_1408 := 0
	store i64 0, i64* %LT_1408.448

	; label .Lt_140C
	br label %.Lt_140C
.Lt_140C:
	%vr28 = load i64, i64* %LT_1408.448
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.447

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.447

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.447

	; conv vr47+9 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 9
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_1409, label %.Lt_140E
.Lt_140E:

	; store LT_140A := 1
	store i64 1, i64* %LT_140A.449

	; goto .Lt_140F
	br label %.Lt_140F
.Lt_1410:

	; label .Lt_1409
	br label %.Lt_1409
.Lt_1409:

	; store LT_140A := 0
	store i64 0, i64* %LT_140A.449

	; label .Lt_140F
	br label %.Lt_140F
.Lt_140F:
	%vr55 = load i64, i64* %LT_140A.449
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.447

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_1406
	br label %.Lt_1406
.Lt_1406:
	ret void
}

define void @INS_TAY( %CPU6510* %CPU.450$ ) nounwind
{

	; paramvar CPU
	%CPU.450 = alloca %CPU6510*
	store %CPU6510* %CPU.450$, %CPU6510** %CPU.450

	; localvar LT_1414
	%LT_1414.451 = alloca i64

	; localvar LT_1416
	%LT_1416.452 = alloca i64

	; label .Lt_1411
	br label %.Lt_1411
.Lt_1411:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.450

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr3+10 := vr1+8
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 8
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 10
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.450

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.450

	; conv vr20+10 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 10
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_1413, label %.Lt_1417
.Lt_1417:

	; store LT_1414 := 1
	store i64 1, i64* %LT_1414.451

	; goto .Lt_1418
	br label %.Lt_1418
.Lt_1419:

	; label .Lt_1413
	br label %.Lt_1413
.Lt_1413:

	; store LT_1414 := 0
	store i64 0, i64* %LT_1414.451

	; label .Lt_1418
	br label %.Lt_1418
.Lt_1418:
	%vr28 = load i64, i64* %LT_1414.451
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.450

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.450

	; conv vr47+10 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 10
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_1415, label %.Lt_141A
.Lt_141A:

	; store LT_1416 := 1
	store i64 1, i64* %LT_1416.452

	; goto .Lt_141B
	br label %.Lt_141B
.Lt_141C:

	; label .Lt_1415
	br label %.Lt_1415
.Lt_1415:

	; store LT_1416 := 0
	store i64 0, i64* %LT_1416.452

	; label .Lt_141B
	br label %.Lt_141B
.Lt_141B:
	%vr55 = load i64, i64* %LT_1416.452
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.450

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_1412
	br label %.Lt_1412
.Lt_1412:
	ret void
}

define void @INS_TSX( %CPU6510* %CPU.453$ ) nounwind
{

	; paramvar CPU
	%CPU.453 = alloca %CPU6510*
	store %CPU6510* %CPU.453$, %CPU6510** %CPU.453

	; localvar LT_1420
	%LT_1420.454 = alloca i64

	; localvar LT_1422
	%LT_1422.455 = alloca i64

	; label .Lt_141D
	br label %.Lt_141D
.Lt_141D:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.453

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr3+9 := vr1+14
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 14
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 9
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.453

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.453

	; conv vr20+9 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 9
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_141F, label %.Lt_1423
.Lt_1423:

	; store LT_1420 := 1
	store i64 1, i64* %LT_1420.454

	; goto .Lt_1424
	br label %.Lt_1424
.Lt_1425:

	; label .Lt_141F
	br label %.Lt_141F
.Lt_141F:

	; store LT_1420 := 0
	store i64 0, i64* %LT_1420.454

	; label .Lt_1424
	br label %.Lt_1424
.Lt_1424:
	%vr28 = load i64, i64* %LT_1420.454
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.453

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.453

	; conv vr47+9 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 9
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_1421, label %.Lt_1426
.Lt_1426:

	; store LT_1422 := 1
	store i64 1, i64* %LT_1422.455

	; goto .Lt_1427
	br label %.Lt_1427
.Lt_1428:

	; label .Lt_1421
	br label %.Lt_1421
.Lt_1421:

	; store LT_1422 := 0
	store i64 0, i64* %LT_1422.455

	; label .Lt_1427
	br label %.Lt_1427
.Lt_1427:
	%vr55 = load i64, i64* %LT_1422.455
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.453

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_141E
	br label %.Lt_141E
.Lt_141E:
	ret void
}

define void @INS_TXA( %CPU6510* %CPU.456$ ) nounwind
{

	; paramvar CPU
	%CPU.456 = alloca %CPU6510*
	store %CPU6510* %CPU.456$, %CPU6510** %CPU.456

	; localvar LT_142C
	%LT_142C.457 = alloca i64

	; localvar LT_142E
	%LT_142E.458 = alloca i64

	; label .Lt_1429
	br label %.Lt_1429
.Lt_1429:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.456

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr3+8 := vr1+9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 8
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.456

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.456

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_142B, label %.Lt_142F
.Lt_142F:

	; store LT_142C := 1
	store i64 1, i64* %LT_142C.457

	; goto .Lt_1430
	br label %.Lt_1430
.Lt_1431:

	; label .Lt_142B
	br label %.Lt_142B
.Lt_142B:

	; store LT_142C := 0
	store i64 0, i64* %LT_142C.457

	; label .Lt_1430
	br label %.Lt_1430
.Lt_1430:
	%vr28 = load i64, i64* %LT_142C.457
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.456

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.456

	; conv vr47+8 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 8
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_142D, label %.Lt_1432
.Lt_1432:

	; store LT_142E := 1
	store i64 1, i64* %LT_142E.458

	; goto .Lt_1433
	br label %.Lt_1433
.Lt_1434:

	; label .Lt_142D
	br label %.Lt_142D
.Lt_142D:

	; store LT_142E := 0
	store i64 0, i64* %LT_142E.458

	; label .Lt_1433
	br label %.Lt_1433
.Lt_1433:
	%vr55 = load i64, i64* %LT_142E.458
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.456

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_142A
	br label %.Lt_142A
.Lt_142A:
	ret void
}

define void @INS_TXS( %CPU6510* %CPU.459$ ) nounwind
{

	; paramvar CPU
	%CPU.459 = alloca %CPU6510*
	store %CPU6510* %CPU.459$, %CPU6510** %CPU.459

	; label .Lt_1435
	br label %.Lt_1435
.Lt_1435:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.459

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.459

	; store vr3+14 := vr1+9
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 9
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 14
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; label .Lt_1436
	br label %.Lt_1436
.Lt_1436:
	ret void
}

define void @INS_TYA( %CPU6510* %CPU.460$ ) nounwind
{

	; paramvar CPU
	%CPU.460 = alloca %CPU6510*
	store %CPU6510* %CPU.460$, %CPU6510** %CPU.460

	; localvar LT_143A
	%LT_143A.461 = alloca i64

	; localvar LT_143C
	%LT_143C.462 = alloca i64

	; label .Lt_1437
	br label %.Lt_1437
.Lt_1437:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.460

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.460

	; store vr3+8 := vr1+10
	%vr4 = ptrtoint %CPU6510* %vr1 to i64
	%vr5 = add i64 %vr4, 10
	%vr6 = inttoptr i64 %vr5 to i8*
	%vr7 = load i8, i8* %vr6
	%vr8 = ptrtoint %CPU6510* %vr3 to i64
	%vr9 = add i64 %vr8, 8
	%vr10 = inttoptr i64 %vr9 to i8*
	store i8 %vr7, i8* %vr10

	; deref CPU
	%vr12 = load %CPU6510*, %CPU6510** %CPU.460

	; bop vr12 AND -3
	%vr15 = ptrtoint %CPU6510* %vr12 to i64
	%vr16 = inttoptr i64 %vr15 to i64*
	%vr17 = load i64, i64* %vr16
	%vr14 = and i64 %vr17, -3

	; deref CPU
	%vr20 = load %CPU6510*, %CPU6510** %CPU.460

	; conv vr20+8 => vr21
	%vr22 = ptrtoint %CPU6510* %vr20 to i64
	%vr23 = add i64 %vr22, 8
	%vr24 = inttoptr i64 %vr23 to i8*
	%vr25 = load i8, i8* %vr24
	%vr21 = sext i8 %vr25 to i64

	; branchbop vr21 <> 0
	%vr26 = icmp ne i64 %vr21, 0
	br i1 %vr26, label %.Lt_1439, label %.Lt_143D
.Lt_143D:

	; store LT_143A := 1
	store i64 1, i64* %LT_143A.461

	; goto .Lt_143E
	br label %.Lt_143E
.Lt_143F:

	; label .Lt_1439
	br label %.Lt_1439
.Lt_1439:

	; store LT_143A := 0
	store i64 0, i64* %LT_143A.461

	; label .Lt_143E
	br label %.Lt_143E
.Lt_143E:
	%vr28 = load i64, i64* %LT_143A.461
	%vr27 = bitcast i64 %vr28 to i64

	; bop vr27 AND 1
	%vr29 = and i64 %vr27, 1

	; bop vr29 SHL 1
	%vr31 = bitcast i64 1 to i64
	%vr30 = shl i64 %vr29, %vr31

	; bop vr14 OR vr30
	%vr32 = or i64 %vr14, %vr30

	; deref CPU
	%vr34 = load %CPU6510*, %CPU6510** %CPU.460

	; store vr34 := vr32
	%vr36 = ptrtoint %CPU6510* %vr34 to i64
	%vr37 = inttoptr i64 %vr36 to i64*
	store i64 %vr32, i64* %vr37

	; deref CPU
	%vr39 = load %CPU6510*, %CPU6510** %CPU.460

	; bop vr39 AND -129
	%vr42 = ptrtoint %CPU6510* %vr39 to i64
	%vr43 = inttoptr i64 %vr42 to i64*
	%vr44 = load i64, i64* %vr43
	%vr41 = and i64 %vr44, -129

	; deref CPU
	%vr47 = load %CPU6510*, %CPU6510** %CPU.460

	; conv vr47+8 => vr48
	%vr49 = ptrtoint %CPU6510* %vr47 to i64
	%vr50 = add i64 %vr49, 8
	%vr51 = inttoptr i64 %vr50 to i8*
	%vr52 = load i8, i8* %vr51
	%vr48 = sext i8 %vr52 to i64

	; branchbop vr48 >= 0
	%vr53 = icmp sge i64 %vr48, 0
	br i1 %vr53, label %.Lt_143B, label %.Lt_1440
.Lt_1440:

	; store LT_143C := 1
	store i64 1, i64* %LT_143C.462

	; goto .Lt_1441
	br label %.Lt_1441
.Lt_1442:

	; label .Lt_143B
	br label %.Lt_143B
.Lt_143B:

	; store LT_143C := 0
	store i64 0, i64* %LT_143C.462

	; label .Lt_1441
	br label %.Lt_1441
.Lt_1441:
	%vr55 = load i64, i64* %LT_143C.462
	%vr54 = bitcast i64 %vr55 to i64

	; bop vr54 AND 1
	%vr56 = and i64 %vr54, 1

	; bop vr56 SHL 7
	%vr58 = bitcast i64 7 to i64
	%vr57 = shl i64 %vr56, %vr58

	; bop vr41 OR vr57
	%vr59 = or i64 %vr41, %vr57

	; deref CPU
	%vr61 = load %CPU6510*, %CPU6510** %CPU.460

	; store vr61 := vr59
	%vr63 = ptrtoint %CPU6510* %vr61 to i64
	%vr64 = inttoptr i64 %vr63 to i64*
	store i64 %vr59, i64* %vr64

	; label .Lt_1438
	br label %.Lt_1438
.Lt_1438:
	ret void
}

define void @INS_R32( %CPU6510* %CPU.463$ ) nounwind
{

	; paramvar CPU
	%CPU.463 = alloca %CPU6510*
	store %CPU6510* %CPU.463$, %CPU6510** %CPU.463

	; localvar V
	%V.464 = alloca %MULTI

	; label .Lt_1443
	br label %.Lt_1443
.Lt_1443:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.464 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.463

	; conv vr3+64 => vr4
	%vr5 = ptrtoint %CPU6510* %vr3 to i64
	%vr6 = add i64 %vr5, 64
	%vr7 = inttoptr i64 %vr6 to i32*
	%vr8 = load i32, i32* %vr7
	%vr4 = zext i32 %vr8 to i64

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.463

	; call PEEK64()
	; arg vr10+16
	%vr12 = ptrtoint %CPU6510* %vr10 to i64
	%vr13 = add i64 %vr12, 16
	%vr14 = inttoptr i64 %vr13 to %MEMORY_T**
	%vr15 = load %MEMORY_T*, %MEMORY_T** %vr14
	; arg vr4
	%vr11 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr15, i64 %vr4 )

	; conv vr11 => vr16
	%vr16 = trunc i64 %vr11 to i8

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.463

	; store vr18+8 := vr16
	%vr19 = ptrtoint %CPU6510* %vr18 to i64
	%vr20 = add i64 %vr19, 8
	%vr21 = inttoptr i64 %vr20 to i8*
	store i8 %vr16, i8* %vr21

	; label .Lt_1444
	br label %.Lt_1444
.Lt_1444:
	ret void
}

define void @INS_W32( %CPU6510* %CPU.465$ ) nounwind
{

	; paramvar CPU
	%CPU.465 = alloca %CPU6510*
	store %CPU6510* %CPU.465$, %CPU6510** %CPU.465

	; label .Lt_1445
	br label %.Lt_1445
.Lt_1445:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.465

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.465

	; conv vr8+64 => vr9
	%vr10 = ptrtoint %CPU6510* %vr8 to i64
	%vr11 = add i64 %vr10, 64
	%vr12 = inttoptr i64 %vr11 to i32*
	%vr13 = load i32, i32* %vr12
	%vr9 = zext i32 %vr13 to i64

	; deref CPU
	%vr15 = load %CPU6510*, %CPU6510** %CPU.465

	; call POKE64()
	; arg vr15+16
	%vr16 = ptrtoint %CPU6510* %vr15 to i64
	%vr17 = add i64 %vr16, 16
	%vr18 = inttoptr i64 %vr17 to %MEMORY_T**
	%vr19 = load %MEMORY_T*, %MEMORY_T** %vr18
	; arg vr9
	; arg vr2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr19, i64 %vr9, i64 %vr2 )

	; label .Lt_1446
	br label %.Lt_1446
.Lt_1446:
	ret void
}

define void @INS_R64( %CPU6510* %CPU.466$ ) nounwind
{

	; paramvar CPU
	%CPU.466 = alloca %CPU6510*
	store %CPU6510* %CPU.466$, %CPU6510** %CPU.466

	; localvar V
	%V.467 = alloca %MULTI

	; label .Lt_1447
	br label %.Lt_1447
.Lt_1447:

	; addrof V

	; memclear V
	%vr1 = bitcast %MULTI* %V.467 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr3 = load %CPU6510*, %CPU6510** %CPU.466

	; deref CPU
	%vr5 = load %CPU6510*, %CPU6510** %CPU.466

	; call PEEK64()
	; arg vr5+16
	%vr7 = ptrtoint %CPU6510* %vr5 to i64
	%vr8 = add i64 %vr7, 16
	%vr9 = inttoptr i64 %vr8 to %MEMORY_T**
	%vr10 = load %MEMORY_T*, %MEMORY_T** %vr9
	; arg vr3+64
	%vr11 = ptrtoint %CPU6510* %vr3 to i64
	%vr12 = add i64 %vr11, 64
	%vr13 = inttoptr i64 %vr12 to i64*
	%vr14 = load i64, i64* %vr13
	%vr6 = call i64 @_ZN8MEMORY_T6PEEK64Ey( %MEMORY_T* %vr10, i64 %vr14 )

	; conv vr6 => vr15
	%vr15 = trunc i64 %vr6 to i8

	; deref CPU
	%vr17 = load %CPU6510*, %CPU6510** %CPU.466

	; store vr17+8 := vr15
	%vr18 = ptrtoint %CPU6510* %vr17 to i64
	%vr19 = add i64 %vr18, 8
	%vr20 = inttoptr i64 %vr19 to i8*
	store i8 %vr15, i8* %vr20

	; label .Lt_1448
	br label %.Lt_1448
.Lt_1448:
	ret void
}

define void @INS_W64( %CPU6510* %CPU.468$ ) nounwind
{

	; paramvar CPU
	%CPU.468 = alloca %CPU6510*
	store %CPU6510* %CPU.468$, %CPU6510** %CPU.468

	; label .Lt_1449
	br label %.Lt_1449
.Lt_1449:

	; deref CPU
	%vr1 = load %CPU6510*, %CPU6510** %CPU.468

	; conv vr1+8 => vr2
	%vr3 = ptrtoint %CPU6510* %vr1 to i64
	%vr4 = add i64 %vr3, 8
	%vr5 = inttoptr i64 %vr4 to i8*
	%vr6 = load i8, i8* %vr5
	%vr2 = zext i8 %vr6 to i64

	; deref CPU
	%vr8 = load %CPU6510*, %CPU6510** %CPU.468

	; deref CPU
	%vr10 = load %CPU6510*, %CPU6510** %CPU.468

	; call POKE64()
	; arg vr10+16
	%vr11 = ptrtoint %CPU6510* %vr10 to i64
	%vr12 = add i64 %vr11, 16
	%vr13 = inttoptr i64 %vr12 to %MEMORY_T**
	%vr14 = load %MEMORY_T*, %MEMORY_T** %vr13
	; arg vr8+64
	%vr15 = ptrtoint %CPU6510* %vr8 to i64
	%vr16 = add i64 %vr15, 64
	%vr17 = inttoptr i64 %vr16 to i64*
	%vr18 = load i64, i64* %vr17
	; arg vr2
	call void @_ZN8MEMORY_T6POKE64Eyy( %MEMORY_T* %vr14, i64 %vr18, i64 %vr2 )

	; label .Lt_144A
	br label %.Lt_144A
.Lt_144A:
	ret void
}

define i64 @INTERRUPTSERVICE( %CPU6510* %CPU.469$ ) nounwind
{

	; paramvar CPU
	%CPU.469 = alloca %CPU6510*
	store %CPU6510* %CPU.469$, %CPU6510** %CPU.469

	; localvar fb$result
	%fb$result.470 = alloca i64

	; localvar KEY
	%KEY.471 = alloca i64

	; localvar IRQTICKS
	%IRQTICKS.472 = alloca i64

	; localvar NCHARS
	%NCHARS.473 = alloca i64

	; addrof fb$result

	; memclear fb$result
	%vr1 = bitcast i64* %fb$result.470 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr1, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_18B6
	br label %.Lt_18B6
.Lt_18B6:

	; addrof KEY

	; memclear KEY
	%vr3 = bitcast i64* %KEY.471 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr3, i8 0, i32 8, i32 1, i1 false )

	; addrof IRQTICKS

	; memclear IRQTICKS
	%vr5 = bitcast i64* %IRQTICKS.472 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 8, i32 1, i1 false )

	; deref CPU
	%vr7 = load %CPU6510*, %CPU6510** %CPU.469

	; bop vr7 SHR 2
	%vr10 = ptrtoint %CPU6510* %vr7 to i64
	%vr11 = inttoptr i64 %vr10 to i64*
	%vr12 = load i64, i64* %vr11
	%vr14 = bitcast i64 2 to i64
	%vr9 = ashr i64 %vr12, %vr14

	; bop vr9 AND 1
	%vr15 = and i64 %vr9, 1

	; branchbop vr15 <> 1
	%vr16 = icmp ne i64 %vr15, 1
	br i1 %vr16, label %.Lt_18B9, label %.Lt_18F3
.Lt_18F3:

	; store fb$result := 0
	store i64 0, i64* %fb$result.470

	; goto .Lt_18B7
	br label %.Lt_18B7
.Lt_18F4:

	; label .Lt_18B9
	br label %.Lt_18B9
.Lt_18B9:

	; deref CPU
	%vr18 = load %CPU6510*, %CPU6510** %CPU.469

	; call READUBYTE()
	; arg vr18+16
	%vr20 = ptrtoint %CPU6510* %vr18 to i64
	%vr21 = add i64 %vr20, 16
	%vr22 = inttoptr i64 %vr21 to %MEMORY_T**
	%vr23 = load %MEMORY_T*, %MEMORY_T** %vr22
	; arg 198
	%vr19 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr23, i64 198 )

	; conv vr19 => vr24
	%vr24 = sext i8 %vr19 to i64

	; store NCHARS := vr24
	store i64 %vr24, i64* %NCHARS.473

	; branchbop NCHARS >= 10
	%vr26 = load i64, i64* %NCHARS.473
	%vr25 = icmp sge i64 %vr26, 10
	br i1 %vr25, label %.Lt_18BB, label %.Lt_18F5
.Lt_18F5:

	; localvar STRKEY
	%STRKEY.474 = alloca %FBSTRING

	; call fb_Inkey()
	%vr27 = call %FBSTRING* @fb_Inkey(  )

	; addrof STRKEY
	%vr29 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_StrInit()
	; arg vr29
	; arg -1
	; arg vr27
	%vr32 = bitcast %FBSTRING* %vr27 to i8*
	; arg -1
	; arg 0
	%vr30 = call %FBSTRING* @fb_StrInit( i8* %vr29, i64 -1, i8* %vr32, i64 -1, i32 0 )

	; addrof STRKEY
	%vr36 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_StrLen()
	; arg vr36
	; arg -1
	%vr37 = call i64 @fb_StrLen( i8* %vr36, i64 -1 )

	; store KEY := vr37
	store i64 %vr37, i64* %KEY.471

	; branchbop KEY == 0
	%vr40 = load i64, i64* %KEY.471
	%vr39 = icmp eq i64 %vr40, 0
	br i1 %vr39, label %.Lt_18BD, label %.Lt_18F6
.Lt_18F6:

	; bop STRKEY + KEY
	%vr42 = bitcast %FBSTRING* %STRKEY.474 to i8**
	%vr43 = load i8*, i8** %vr42
	%vr44 = load i64, i64* %KEY.471
	%vr45 = bitcast i8* %vr43 to i8*
	%vr46 = inttoptr i64 %vr44 to i8*
	%vr41 = add i8* %vr45, %vr46

	; conv vr41+-1 => vr47
	%vr48 = ptrtoint i8* %vr41 to i64
	%vr49 = add i64 %vr48, -1
	%vr50 = inttoptr i64 %vr49 to i8*
	%vr51 = load i8, i8* %vr50
	%vr47 = sext i8 %vr51 to i64

	; bop KEY SHL 8
	%vr53 = load i64, i64* %KEY.471
	%vr52 = shl i64 %vr53, 8

	; bop vr47 + vr52
	%vr54 = add i64 %vr47, %vr52

	; bop vr54 + -256
	%vr55 = add i64 %vr54, -256

	; store KEY := vr55
	store i64 %vr55, i64* %KEY.471

	; branchbop KEY <> 27
	%vr57 = load i64, i64* %KEY.471
	%vr56 = icmp ne i64 %vr57, 27
	br i1 %vr56, label %.Lt_18BF, label %.Lt_18F7
.Lt_18F7:

	; label .Lt_18C0
	br label %.Lt_18C0
.Lt_18C0:

	; call fb_End()
	; arg 0
	call void @fb_End( i32 0 )

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_18F8:

	; label .Lt_18BF
	br label %.Lt_18BF
.Lt_18BF:

	; branchbop KEY < 65
	%vr60 = load i64, i64* %KEY.471
	%vr59 = icmp slt i64 %vr60, 65
	br i1 %vr59, label %.Lt_18C1, label %.Lt_18F9
.Lt_18F9:

	; branchbop KEY > 90
	%vr62 = load i64, i64* %KEY.471
	%vr61 = icmp sgt i64 %vr62, 90
	br i1 %vr61, label %.Lt_18C1, label %.Lt_18FA
.Lt_18FA:

	; label .Lt_18C2
	br label %.Lt_18C2
.Lt_18C2:

	; bop KEY + 32
	%vr64 = load i64, i64* %KEY.471
	%vr63 = add i64 %vr64, 32

	; store KEY := vr63
	store i64 %vr63, i64* %KEY.471

	; call fb_CHR()
	; arg 1
	; arg KEY
	%vr67 = load i64, i64* %KEY.471
	%vr68 = inttoptr i64 %vr67 to i8*
	%vr65 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr68 )
	%vr69 = bitcast %FBSTRING* @S.475 to i8*

	; call fb_StrConcatAssign()
	; arg vr69
	; arg -1
	; arg vr65
	%vr72 = bitcast %FBSTRING* %vr65 to i8*
	; arg -1
	; arg 0
	%vr70 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr69, i64 -1, i8* %vr72, i64 -1, i32 0 )

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_18FB:

	; label .Lt_18C1
	br label %.Lt_18C1
.Lt_18C1:

	; branchbop KEY < 97
	%vr76 = load i64, i64* %KEY.471
	%vr75 = icmp slt i64 %vr76, 97
	br i1 %vr75, label %.Lt_18C3, label %.Lt_18FC
.Lt_18FC:

	; branchbop KEY > 122
	%vr78 = load i64, i64* %KEY.471
	%vr77 = icmp sgt i64 %vr78, 122
	br i1 %vr77, label %.Lt_18C3, label %.Lt_18FD
.Lt_18FD:

	; label .Lt_18C4
	br label %.Lt_18C4
.Lt_18C4:

	; bop KEY + -32
	%vr80 = load i64, i64* %KEY.471
	%vr79 = add i64 %vr80, -32

	; store KEY := vr79
	store i64 %vr79, i64* %KEY.471

	; call fb_CHR()
	; arg 1
	; arg KEY
	%vr83 = load i64, i64* %KEY.471
	%vr84 = inttoptr i64 %vr83 to i8*
	%vr81 = call %FBSTRING* @fb_CHR( i32 1, i8* %vr84 )
	%vr85 = bitcast %FBSTRING* @S.475 to i8*

	; call fb_StrConcatAssign()
	; arg vr85
	; arg -1
	; arg vr81
	%vr88 = bitcast %FBSTRING* %vr81 to i8*
	; arg -1
	; arg 0
	%vr86 = call %FBSTRING* @fb_StrConcatAssign( i8* %vr85, i64 -1, i8* %vr88, i64 -1, i32 0 )

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_18FE:

	; label .Lt_18C3
	br label %.Lt_18C3
.Lt_18C3:

	; branchbop KEY <> 316
	%vr92 = load i64, i64* %KEY.471
	%vr91 = icmp ne i64 %vr92, 316
	br i1 %vr91, label %.Lt_18C5, label %.Lt_18FF
.Lt_18FF:

	; label .Lt_18C6
	br label %.Lt_18C6
.Lt_18C6:

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr93 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr99 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr99
	%vr102 = bitcast %FBSTRING* %vr99 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr102, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr104 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_18C7
	%vr111 = bitcast i8* bitcast ([15 x i8]* @Lt_18C7 to i8*) to i8*
	; arg 14
	%vr110 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr111, i64 14 )

	; call fb_ConsoleInput()
	; arg vr110
	%vr114 = bitcast %FBSTRING* %vr110 to %FBSTRING*
	; arg -1
	; arg -1
	%vr113 = call i32 @fb_ConsoleInput( %FBSTRING* %vr114, i32 -1, i32 -1 )

	; addrof STRKEY
	%vr118 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_InputString()
	; arg vr118
	; arg -1
	; arg 0
	%vr119 = call i32 @fb_InputString( i8* %vr118, i64 -1, i32 0 )

	; addrof STRKEY
	%vr123 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_StrLen()
	; arg vr123
	; arg -1
	%vr124 = call i64 @fb_StrLen( i8* %vr123, i64 -1 )

	; branchbop vr124 == 0
	%vr126 = icmp eq i64 %vr124, 0
	br i1 %vr126, label %.Lt_18C9, label %.Lt_1900
.Lt_1900:

	; call fb_FileFree()
	%vr127 = call i32 @fb_FileFree(  )

	; conv vr127 => vr128
	%vr128 = sext i32 %vr127 to i64

	; store KEY := vr128
	store i64 %vr128, i64* %KEY.471

	; conv KEY => vr129
	%vr130 = load i64, i64* %KEY.471
	%vr129 = trunc i64 %vr130 to i32

	; addrof STRKEY
	%vr132 = bitcast %FBSTRING* %STRKEY.474 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr132
	; arg 0
	; arg 2
	; arg 0
	; arg vr129
	; arg 0
	%vr133 = call i32 @fb_FileOpen( %FBSTRING* %vr132, i32 0, i32 2, i32 0, i32 %vr129, i32 0 )

	; conv vr133 => vr138
	%vr138 = sext i32 %vr133 to i64

	; branchbop vr138 <> 0
	%vr139 = icmp ne i64 %vr138, 0
	br i1 %vr139, label %.Lt_18CB, label %.Lt_1901
.Lt_1901:

	; localvar U8
	%U8.476 = alloca i8

	; localvar NBYTES
	%NBYTES.477 = alloca i64

	; addrof U8

	; memclear U8
	%vr141 = bitcast i8* %U8.476 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr141, i8 0, i32 1, i32 1, i1 false )

	; deref CPU
	%vr143 = load %CPU6510*, %CPU6510** %CPU.469

	; call READUSHORT()
	; arg vr143+16
	%vr145 = ptrtoint %CPU6510* %vr143 to i64
	%vr146 = add i64 %vr145, 16
	%vr147 = inttoptr i64 %vr146 to %MEMORY_T**
	%vr148 = load %MEMORY_T*, %MEMORY_T** %vr147
	; arg 45
	%vr144 = call i16 @_ZN8MEMORY_T10READUSHORTEy( %MEMORY_T* %vr148, i64 45 )

	; conv vr144 => vr149
	%vr149 = sext i16 %vr144 to i64

	; store NBYTES := vr149
	store i64 %vr149, i64* %NBYTES.477

	; bop NBYTES + -2048
	%vr151 = load i64, i64* %NBYTES.477
	%vr150 = add i64 %vr151, -2048

	; store NBYTES := vr150
	store i64 %vr150, i64* %NBYTES.477

	; addrof NBYTES
	%vr153 = bitcast i64* %NBYTES.477 to i8*

	; conv KEY => vr154
	%vr155 = load i64, i64* %KEY.471
	%vr154 = trunc i64 %vr155 to i32

	; call fb_FilePutLarge()
	; arg vr154
	; arg 0
	; arg vr153
	; arg 8
	%vr156 = call i32 @fb_FilePutLarge( i32 %vr154, i64 0, i8* %vr153, i64 8 )

	; localvar I
	%I.478 = alloca i64

	; localvar LT_18CC
	%LT_18CC.479 = alloca i64

	; store I := 0
	store i64 0, i64* %I.478

	; bop NBYTES + -1
	%vr160 = load i64, i64* %NBYTES.477
	%vr159 = add i64 %vr160, -1

	; store LT_18CC := vr159
	store i64 %vr159, i64* %LT_18CC.479

	; goto .Lt_18CD
	br label %.Lt_18CD
.Lt_1902:

	; label .Lt_18D0
	br label %.Lt_18D0
.Lt_18D0:

	; bop I + 2048
	%vr162 = load i64, i64* %I.478
	%vr161 = add i64 %vr162, 2048
	%vr163 = bitcast i64 %vr161 to i64

	; deref CPU
	%vr165 = load %CPU6510*, %CPU6510** %CPU.469

	; call READUBYTE()
	; arg vr165+16
	%vr167 = ptrtoint %CPU6510* %vr165 to i64
	%vr168 = add i64 %vr167, 16
	%vr169 = inttoptr i64 %vr168 to %MEMORY_T**
	%vr170 = load %MEMORY_T*, %MEMORY_T** %vr169
	; arg vr163
	%vr166 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr170, i64 %vr163 )

	; store U8 := vr166
	store i8 %vr166, i8* %U8.476

	; addrof U8
	%vr172 = bitcast i8* %U8.476 to i8*

	; conv KEY => vr173
	%vr174 = load i64, i64* %KEY.471
	%vr173 = trunc i64 %vr174 to i32

	; call fb_FilePutLarge()
	; arg vr173
	; arg 0
	; arg vr172
	; arg 1
	%vr175 = call i32 @fb_FilePutLarge( i32 %vr173, i64 0, i8* %vr172, i64 1 )

	; label .Lt_18CE
	br label %.Lt_18CE
.Lt_18CE:

	; bop I + 1
	%vr179 = load i64, i64* %I.478
	%vr178 = add i64 %vr179, 1

	; store I := vr178
	store i64 %vr178, i64* %I.478

	; label .Lt_18CD
	br label %.Lt_18CD
.Lt_18CD:

	; branchbop I <= LT_18CC
	%vr181 = load i64, i64* %I.478
	%vr182 = load i64, i64* %LT_18CC.479
	%vr180 = icmp sle i64 %vr181, %vr182
	br i1 %vr180, label %.Lt_18D0, label %.Lt_1903
.Lt_1903:

	; label .Lt_18CF
	br label %.Lt_18CF
.Lt_18CF:

	; conv KEY => vr183
	%vr184 = load i64, i64* %KEY.471
	%vr183 = trunc i64 %vr184 to i32

	; call fb_FileClose()
	; arg vr183
	%vr185 = call i32 @fb_FileClose( i32 %vr183 )

	; goto .Lt_18CA
	br label %.Lt_18CA
.Lt_1904:

	; label .Lt_18CB
	br label %.Lt_18CB
.Lt_18CB:

	; localvar LT_18D2
	%LT_18D2.480 = alloca %FBSTRING

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr186 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr192 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr192
	%vr195 = bitcast %FBSTRING* %vr192 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr195, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr197 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; addrof STRKEY
	%vr204 = bitcast %FBSTRING* %STRKEY.474 to i8*
	%vr205 = bitcast i8* bitcast ([15 x i8]* @Lt_18D1 to i8*) to i8*

	; addrof LT_18D2

	; memclear LT_18D2
	%vr207 = bitcast %FBSTRING* %LT_18D2.480 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr207, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_18D2

	; call fb_StrConcat()
	; arg LT_18D2
	; arg vr205
	; arg 15
	; arg vr204
	; arg -1
	%vr209 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_18D2.480, i8* %vr205, i64 15, i8* %vr204, i64 -1 )

	; call fb_PrintString()
	; arg 0
	; arg vr209
	%vr213 = bitcast %FBSTRING* %vr209 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr213, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; label .Lt_18CA
	br label %.Lt_18CA
.Lt_18CA:

	; label .Lt_18C9
	br label %.Lt_18C9
.Lt_18C9:

	; label .Lt_18C8
	br label %.Lt_18C8
.Lt_18C8:

	; call fb_GfxLine()
	; arg 0
	; arg 0
	%vr216 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr217 = fpext float 0x0000000000000000 to float
	; arg 863
	%vr218 = fpext float 0x408AF80000000000 to float
	; arg 7
	%vr219 = fpext float 0x401C000000000000 to float
	; arg 3
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr216, float %vr217, float %vr218, float %vr219, i32 3, i32 2, i32 65535, i32 0 )

	; store KEY := 0
	store i64 0, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_1905:

	; label .Lt_18C5
	br label %.Lt_18C5
.Lt_18C5:

	; branchbop KEY <> 317
	%vr225 = load i64, i64* %KEY.471
	%vr224 = icmp ne i64 %vr225, 317
	br i1 %vr224, label %.Lt_18D3, label %.Lt_1906
.Lt_1906:

	; label .Lt_18D4
	br label %.Lt_18D4
.Lt_18D4:

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr226 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr232 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr232
	%vr235 = bitcast %FBSTRING* %vr232 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr235, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr237 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_StrAllocTempDescZEx()
	; arg Lt_18D5
	%vr244 = bitcast i8* bitcast ([15 x i8]* @Lt_18D5 to i8*) to i8*
	; arg 14
	%vr243 = call %FBSTRING* @fb_StrAllocTempDescZEx( i8* %vr244, i64 14 )

	; call fb_ConsoleInput()
	; arg vr243
	%vr247 = bitcast %FBSTRING* %vr243 to %FBSTRING*
	; arg -1
	; arg -1
	%vr246 = call i32 @fb_ConsoleInput( %FBSTRING* %vr247, i32 -1, i32 -1 )

	; addrof STRKEY
	%vr251 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_InputString()
	; arg vr251
	; arg -1
	; arg 0
	%vr252 = call i32 @fb_InputString( i8* %vr251, i64 -1, i32 0 )

	; addrof STRKEY
	%vr256 = bitcast %FBSTRING* %STRKEY.474 to i8*

	; call fb_StrLen()
	; arg vr256
	; arg -1
	%vr257 = call i64 @fb_StrLen( i8* %vr256, i64 -1 )

	; branchbop vr257 == 0
	%vr259 = icmp eq i64 %vr257, 0
	br i1 %vr259, label %.Lt_18D7, label %.Lt_1907
.Lt_1907:

	; call fb_FileFree()
	%vr260 = call i32 @fb_FileFree(  )

	; conv vr260 => vr261
	%vr261 = sext i32 %vr260 to i64

	; store KEY := vr261
	store i64 %vr261, i64* %KEY.471

	; conv KEY => vr262
	%vr263 = load i64, i64* %KEY.471
	%vr262 = trunc i64 %vr263 to i32

	; addrof STRKEY
	%vr265 = bitcast %FBSTRING* %STRKEY.474 to %FBSTRING*

	; call fb_FileOpen()
	; arg vr265
	; arg 0
	; arg 1
	; arg 0
	; arg vr262
	; arg 0
	%vr266 = call i32 @fb_FileOpen( %FBSTRING* %vr265, i32 0, i32 1, i32 0, i32 %vr262, i32 0 )

	; conv vr266 => vr271
	%vr271 = sext i32 %vr266 to i64

	; branchbop vr271 <> 0
	%vr272 = icmp ne i64 %vr271, 0
	br i1 %vr272, label %.Lt_18D9, label %.Lt_1908
.Lt_1908:

	; localvar U8
	%U8.481 = alloca i8

	; localvar NBYTES
	%NBYTES.482 = alloca i64

	; addrof U8

	; memclear U8
	%vr274 = bitcast i8* %U8.481 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr274, i8 0, i32 1, i32 1, i1 false )

	; addrof NBYTES

	; memclear NBYTES
	%vr276 = bitcast i64* %NBYTES.482 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr276, i8 0, i32 8, i32 1, i1 false )

	; addrof NBYTES
	%vr278 = bitcast i64* %NBYTES.482 to i8*

	; conv KEY => vr279
	%vr280 = load i64, i64* %KEY.471
	%vr279 = trunc i64 %vr280 to i32

	; call fb_FileGetLarge()
	; arg vr279
	; arg 0
	; arg vr278
	; arg 8
	%vr281 = call i32 @fb_FileGetLarge( i32 %vr279, i64 0, i8* %vr278, i64 8 )

	; localvar I
	%I.483 = alloca i64

	; localvar LT_18DA
	%LT_18DA.484 = alloca i64

	; store I := 0
	store i64 0, i64* %I.483

	; bop NBYTES + -1
	%vr285 = load i64, i64* %NBYTES.482
	%vr284 = add i64 %vr285, -1

	; store LT_18DA := vr284
	store i64 %vr284, i64* %LT_18DA.484

	; goto .Lt_18DB
	br label %.Lt_18DB
.Lt_1909:

	; label .Lt_18DE
	br label %.Lt_18DE
.Lt_18DE:

	; addrof U8
	%vr287 = bitcast i8* %U8.481 to i8*

	; conv KEY => vr288
	%vr289 = load i64, i64* %KEY.471
	%vr288 = trunc i64 %vr289 to i32

	; call fb_FileGetLarge()
	; arg vr288
	; arg 0
	; arg vr287
	; arg 1
	%vr290 = call i32 @fb_FileGetLarge( i32 %vr288, i64 0, i8* %vr287, i64 1 )

	; conv U8 => vr293
	%vr294 = load i8, i8* %U8.481
	%vr293 = zext i8 %vr294 to i64

	; bop I + 2048
	%vr296 = load i64, i64* %I.483
	%vr295 = add i64 %vr296, 2048
	%vr297 = bitcast i64 %vr295 to i64

	; deref CPU
	%vr299 = load %CPU6510*, %CPU6510** %CPU.469

	; call WRITEUBYTE()
	; arg vr299+16
	%vr300 = ptrtoint %CPU6510* %vr299 to i64
	%vr301 = add i64 %vr300, 16
	%vr302 = inttoptr i64 %vr301 to %MEMORY_T**
	%vr303 = load %MEMORY_T*, %MEMORY_T** %vr302
	; arg vr297
	; arg vr293
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr303, i64 %vr297, i64 %vr293 )

	; label .Lt_18DC
	br label %.Lt_18DC
.Lt_18DC:

	; bop I + 1
	%vr305 = load i64, i64* %I.483
	%vr304 = add i64 %vr305, 1

	; store I := vr304
	store i64 %vr304, i64* %I.483

	; label .Lt_18DB
	br label %.Lt_18DB
.Lt_18DB:

	; branchbop I <= LT_18DA
	%vr307 = load i64, i64* %I.483
	%vr308 = load i64, i64* %LT_18DA.484
	%vr306 = icmp sle i64 %vr307, %vr308
	br i1 %vr306, label %.Lt_18DE, label %.Lt_190A
.Lt_190A:

	; label .Lt_18DD
	br label %.Lt_18DD
.Lt_18DD:

	; conv KEY => vr309
	%vr310 = load i64, i64* %KEY.471
	%vr309 = trunc i64 %vr310 to i32

	; call fb_FileClose()
	; arg vr309
	%vr311 = call i32 @fb_FileClose( i32 %vr309 )

	; bop NBYTES + 2048
	%vr313 = load i64, i64* %NBYTES.482
	%vr312 = add i64 %vr313, 2048

	; store NBYTES := vr312
	store i64 %vr312, i64* %NBYTES.482
	%vr315 = load i64, i64* %NBYTES.482
	%vr314 = bitcast i64 %vr315 to i64

	; deref CPU
	%vr317 = load %CPU6510*, %CPU6510** %CPU.469

	; call WRITEUSHORT()
	; arg vr317+16
	%vr318 = ptrtoint %CPU6510* %vr317 to i64
	%vr319 = add i64 %vr318, 16
	%vr320 = inttoptr i64 %vr319 to %MEMORY_T**
	%vr321 = load %MEMORY_T*, %MEMORY_T** %vr320
	; arg 45
	; arg vr314
	call void @_ZN8MEMORY_T11WRITEUSHORTEyy( %MEMORY_T* %vr321, i64 45, i64 %vr314 )

	; deref CPU
	%vr323 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr323+12 := 42282
	%vr324 = ptrtoint %CPU6510* %vr323 to i64
	%vr325 = add i64 %vr324, 12
	%vr326 = inttoptr i64 %vr325 to i16*
	store i16 trunc (i64 42282 to i16), i16* %vr326

	; goto .Lt_18D8
	br label %.Lt_18D8
.Lt_190B:

	; label .Lt_18D9
	br label %.Lt_18D9
.Lt_18D9:

	; localvar LT_18E0
	%LT_18E0.485 = alloca %FBSTRING

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr327 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; call fb_SPACE()
	; arg 48
	%vr333 = call %FBSTRING* @fb_SPACE( i64 48 )

	; call fb_PrintString()
	; arg 0
	; arg vr333
	%vr336 = bitcast %FBSTRING* %vr333 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr336, i32 1 )

	; call fb_Locate()
	; arg 1
	; arg 1
	; arg -1
	; arg 0
	; arg 0
	%vr338 = call i32 @fb_Locate( i32 1, i32 1, i32 -1, i32 0, i32 0 )

	; addrof STRKEY
	%vr345 = bitcast %FBSTRING* %STRKEY.474 to i8*
	%vr346 = bitcast i8* bitcast ([13 x i8]* @Lt_18DF to i8*) to i8*

	; addrof LT_18E0

	; memclear LT_18E0
	%vr348 = bitcast %FBSTRING* %LT_18E0.485 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr348, i8 0, i32 24, i32 1, i1 false )

	; addrof LT_18E0

	; call fb_StrConcat()
	; arg LT_18E0
	; arg vr346
	; arg 13
	; arg vr345
	; arg -1
	%vr350 = call %FBSTRING* @fb_StrConcat( %FBSTRING* %LT_18E0.485, i8* %vr346, i64 13, i8* %vr345, i64 -1 )

	; call fb_PrintString()
	; arg 0
	; arg vr350
	%vr354 = bitcast %FBSTRING* %vr350 to %FBSTRING*
	; arg 1
	call void @fb_PrintString( i32 0, %FBSTRING* %vr354, i32 1 )

	; call fb_Beep()
	call void @fb_Beep(  )

	; call fb_Sleep()
	; arg -1
	call void @fb_Sleep( i32 -1 )

	; label .Lt_18D8
	br label %.Lt_18D8
.Lt_18D8:

	; label .Lt_18D7
	br label %.Lt_18D7
.Lt_18D7:

	; label .Lt_18D6
	br label %.Lt_18D6
.Lt_18D6:

	; call fb_GfxLine()
	; arg 0
	; arg 0
	%vr357 = fpext float 0x0000000000000000 to float
	; arg 0
	%vr358 = fpext float 0x0000000000000000 to float
	; arg 863
	%vr359 = fpext float 0x408AF80000000000 to float
	; arg 7
	%vr360 = fpext float 0x401C000000000000 to float
	; arg 3
	; arg 2
	; arg 65535
	; arg 0
	call void @fb_GfxLine( i8* 0, float %vr357, float %vr358, float %vr359, float %vr360, i32 3, i32 2, i32 65535, i32 0 )

	; store KEY := 0
	store i64 0, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_190C:

	; label .Lt_18D3
	br label %.Lt_18D3
.Lt_18D3:

	; branchbop KEY <> 327
	%vr366 = load i64, i64* %KEY.471
	%vr365 = icmp ne i64 %vr366, 327
	br i1 %vr365, label %.Lt_18E1, label %.Lt_190D
.Lt_190D:

	; label .Lt_18E2
	br label %.Lt_18E2
.Lt_18E2:

	; store KEY := 19
	store i64 19, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_190E:

	; label .Lt_18E1
	br label %.Lt_18E1
.Lt_18E1:

	; branchbop KEY <> 8
	%vr368 = load i64, i64* %KEY.471
	%vr367 = icmp ne i64 %vr368, 8
	br i1 %vr367, label %.Lt_18E3, label %.Lt_190F
.Lt_190F:

	; label .Lt_18E4
	br label %.Lt_18E4
.Lt_18E4:

	; store KEY := 20
	store i64 20, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_1910:

	; label .Lt_18E3
	br label %.Lt_18E3
.Lt_18E3:

	; branchbop KEY <> 331
	%vr370 = load i64, i64* %KEY.471
	%vr369 = icmp ne i64 %vr370, 331
	br i1 %vr369, label %.Lt_18E5, label %.Lt_1911
.Lt_1911:

	; label .Lt_18E6
	br label %.Lt_18E6
.Lt_18E6:

	; store KEY := 157
	store i64 157, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_1912:

	; label .Lt_18E5
	br label %.Lt_18E5
.Lt_18E5:

	; branchbop KEY <> 328
	%vr372 = load i64, i64* %KEY.471
	%vr371 = icmp ne i64 %vr372, 328
	br i1 %vr371, label %.Lt_18E7, label %.Lt_1913
.Lt_1913:

	; label .Lt_18E8
	br label %.Lt_18E8
.Lt_18E8:

	; store KEY := 145
	store i64 145, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_1914:

	; label .Lt_18E7
	br label %.Lt_18E7
.Lt_18E7:

	; branchbop KEY <> 333
	%vr374 = load i64, i64* %KEY.471
	%vr373 = icmp ne i64 %vr374, 333
	br i1 %vr373, label %.Lt_18E9, label %.Lt_1915
.Lt_1915:

	; label .Lt_18EA
	br label %.Lt_18EA
.Lt_18EA:

	; store KEY := 29
	store i64 29, i64* %KEY.471

	; goto .Lt_18BE
	br label %.Lt_18BE
.Lt_1916:

	; label .Lt_18E9
	br label %.Lt_18E9
.Lt_18E9:

	; branchbop KEY <> 336
	%vr376 = load i64, i64* %KEY.471
	%vr375 = icmp ne i64 %vr376, 336
	br i1 %vr375, label %.Lt_18EB, label %.Lt_1917
.Lt_1917:

	; label .Lt_18EC
	br label %.Lt_18EC
.Lt_18EC:

	; store KEY := 17
	store i64 17, i64* %KEY.471

	; label .Lt_18EB
	br label %.Lt_18EB
.Lt_18EB:

	; label .Lt_18BE
	br label %.Lt_18BE
.Lt_18BE:

	; branchbop KEY == 0
	%vr378 = load i64, i64* %KEY.471
	%vr377 = icmp eq i64 %vr378, 0
	br i1 %vr377, label %.Lt_18EE, label %.Lt_1918
.Lt_1918:
	%vr380 = load i64, i64* %KEY.471
	%vr379 = bitcast i64 %vr380 to i64

	; bop NCHARS + 631
	%vr382 = load i64, i64* %NCHARS.473
	%vr381 = add i64 %vr382, 631
	%vr383 = bitcast i64 %vr381 to i64

	; deref CPU
	%vr385 = load %CPU6510*, %CPU6510** %CPU.469

	; call WRITEUBYTE()
	; arg vr385+16
	%vr386 = ptrtoint %CPU6510* %vr385 to i64
	%vr387 = add i64 %vr386, 16
	%vr388 = inttoptr i64 %vr387 to %MEMORY_T**
	%vr389 = load %MEMORY_T*, %MEMORY_T** %vr388
	; arg vr383
	; arg vr379
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr389, i64 %vr383, i64 %vr379 )

	; bop NCHARS + 1
	%vr391 = load i64, i64* %NCHARS.473
	%vr390 = add i64 %vr391, 1
	%vr392 = bitcast i64 %vr390 to i64

	; deref CPU
	%vr394 = load %CPU6510*, %CPU6510** %CPU.469

	; call WRITEUBYTE()
	; arg vr394+16
	%vr395 = ptrtoint %CPU6510* %vr394 to i64
	%vr396 = add i64 %vr395, 16
	%vr397 = inttoptr i64 %vr396 to %MEMORY_T**
	%vr398 = load %MEMORY_T*, %MEMORY_T** %vr397
	; arg 198
	; arg vr392
	call void @_ZN8MEMORY_T10WRITEUBYTEEyy( %MEMORY_T* %vr398, i64 198, i64 %vr392 )

	; label .Lt_18EE
	br label %.Lt_18EE
.Lt_18EE:

	; label .Lt_18ED
	br label %.Lt_18ED
.Lt_18ED:

	; label .Lt_18BD
	br label %.Lt_18BD
.Lt_18BD:

	; label .Lt_18BC
	br label %.Lt_18BC
.Lt_18BC:

	; addrof STRKEY
	%vr400 = bitcast %FBSTRING* %STRKEY.474 to %FBSTRING*

	; call fb_StrDelete()
	; arg vr400
	call void @fb_StrDelete( %FBSTRING* %vr400 )

	; label .Lt_18BB
	br label %.Lt_18BB
.Lt_18BB:

	; label .Lt_18BA
	br label %.Lt_18BA
.Lt_18BA:

	; deref CPU
	%vr402 = load %CPU6510*, %CPU6510** %CPU.469

	; conv vr402+13 => vr403
	%vr404 = ptrtoint %CPU6510* %vr402 to i64
	%vr405 = add i64 %vr404, 13
	%vr406 = inttoptr i64 %vr405 to i8*
	%vr407 = load i8, i8* %vr406
	%vr403 = zext i8 %vr407 to i64

	; call PUSH()
	; arg CPU
	%vr408 = load %CPU6510*, %CPU6510** %CPU.469
	; arg vr403
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr408, i64 %vr403 )

	; deref CPU
	%vr410 = load %CPU6510*, %CPU6510** %CPU.469

	; conv vr410+12 => vr411
	%vr412 = ptrtoint %CPU6510* %vr410 to i64
	%vr413 = add i64 %vr412, 12
	%vr414 = inttoptr i64 %vr413 to i8*
	%vr415 = load i8, i8* %vr414
	%vr411 = zext i8 %vr415 to i64

	; call PUSH()
	; arg CPU
	%vr416 = load %CPU6510*, %CPU6510** %CPU.469
	; arg vr411
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr416, i64 %vr411 )

	; deref CPU
	%vr418 = load %CPU6510*, %CPU6510** %CPU.469

	; conv vr418 => vr419
	%vr420 = ptrtoint %CPU6510* %vr418 to i64
	%vr421 = inttoptr i64 %vr420 to i8*
	%vr422 = load i8, i8* %vr421
	%vr419 = zext i8 %vr422 to i64

	; call PUSH()
	; arg CPU
	%vr423 = load %CPU6510*, %CPU6510** %CPU.469
	; arg vr419
	call void @_ZN7CPU65104PUSHEy( %CPU6510* %vr423, i64 %vr419 )

	; deref CPU
	%vr425 = load %CPU6510*, %CPU6510** %CPU.469

	; call READUBYTE()
	; arg vr425+16
	%vr427 = ptrtoint %CPU6510* %vr425 to i64
	%vr428 = add i64 %vr427, 16
	%vr429 = inttoptr i64 %vr428 to %MEMORY_T**
	%vr430 = load %MEMORY_T*, %MEMORY_T** %vr429
	; arg 65534
	%vr426 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr430, i64 65534 )

	; deref CPU
	%vr432 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr432+13 := vr426
	%vr433 = ptrtoint %CPU6510* %vr432 to i64
	%vr434 = add i64 %vr433, 13
	%vr435 = inttoptr i64 %vr434 to i8*
	store i8 %vr426, i8* %vr435

	; deref CPU
	%vr437 = load %CPU6510*, %CPU6510** %CPU.469

	; call READUBYTE()
	; arg vr437+16
	%vr439 = ptrtoint %CPU6510* %vr437 to i64
	%vr440 = add i64 %vr439, 16
	%vr441 = inttoptr i64 %vr440 to %MEMORY_T**
	%vr442 = load %MEMORY_T*, %MEMORY_T** %vr441
	; arg 65535
	%vr438 = call i8 @_ZN8MEMORY_T9READUBYTEEy( %MEMORY_T* %vr442, i64 65535 )

	; deref CPU
	%vr444 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr444+12 := vr438
	%vr445 = ptrtoint %CPU6510* %vr444 to i64
	%vr446 = add i64 %vr445, 12
	%vr447 = inttoptr i64 %vr446 to i8*
	store i8 %vr438, i8* %vr447

	; deref CPU
	%vr449 = load %CPU6510*, %CPU6510** %CPU.469

	; bop vr449 AND -17
	%vr452 = ptrtoint %CPU6510* %vr449 to i64
	%vr453 = inttoptr i64 %vr452 to i64*
	%vr454 = load i64, i64* %vr453
	%vr451 = and i64 %vr454, -17

	; deref CPU
	%vr457 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr457 := vr451
	%vr459 = ptrtoint %CPU6510* %vr457 to i64
	%vr460 = inttoptr i64 %vr459 to i64*
	store i64 %vr451, i64* %vr460

	; deref CPU
	%vr462 = load %CPU6510*, %CPU6510** %CPU.469

	; bop vr462 AND -5
	%vr465 = ptrtoint %CPU6510* %vr462 to i64
	%vr466 = inttoptr i64 %vr465 to i64*
	%vr467 = load i64, i64* %vr466
	%vr464 = and i64 %vr467, -5

	; bop vr464 OR 4
	%vr469 = or i64 %vr464, 4

	; deref CPU
	%vr471 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr471 := vr469
	%vr473 = ptrtoint %CPU6510* %vr471 to i64
	%vr474 = inttoptr i64 %vr473 to i64*
	store i64 %vr469, i64* %vr474

	; label .Lt_18EF
	br label %.Lt_18EF
.Lt_18EF:

	; deref CPU
	%vr476 = load %CPU6510*, %CPU6510** %CPU.469

	; branchbop vr476+24 == 64
	%vr479 = ptrtoint %CPU6510* %vr476 to i64
	%vr480 = add i64 %vr479, 24
	%vr481 = inttoptr i64 %vr480 to i64*
	%vr482 = load i64, i64* %vr481
	%vr478 = icmp eq i64 %vr482, 64
	br i1 %vr478, label %.Lt_18F0, label %.Lt_1919
.Lt_1919:

	; call TICK()
	; arg CPU
	%vr485 = load %CPU6510*, %CPU6510** %CPU.469
	; arg -1
	%vr484 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr485, i64 -1 )

	; bop IRQTICKS + 1
	%vr487 = load i64, i64* %IRQTICKS.472
	%vr486 = add i64 %vr487, 1

	; store IRQTICKS := vr486
	store i64 %vr486, i64* %IRQTICKS.472

	; goto .Lt_18EF
	br label %.Lt_18EF
.Lt_191A:

	; label .Lt_18F0
	br label %.Lt_18F0
.Lt_18F0:

	; call PULL()
	; arg CPU
	%vr489 = load %CPU6510*, %CPU6510** %CPU.469
	%vr488 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr489 )

	; conv vr488 => vr490
	%vr490 = trunc i64 %vr488 to i8

	; deref CPU
	%vr492 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr492 := vr490
	%vr493 = ptrtoint %CPU6510* %vr492 to i64
	%vr494 = inttoptr i64 %vr493 to i8*
	store i8 %vr490, i8* %vr494

	; call PULL()
	; arg CPU
	%vr496 = load %CPU6510*, %CPU6510** %CPU.469
	%vr495 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr496 )

	; conv vr495 => vr497
	%vr497 = trunc i64 %vr495 to i8

	; deref CPU
	%vr499 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr499+12 := vr497
	%vr500 = ptrtoint %CPU6510* %vr499 to i64
	%vr501 = add i64 %vr500, 12
	%vr502 = inttoptr i64 %vr501 to i8*
	store i8 %vr497, i8* %vr502

	; call PULL()
	; arg CPU
	%vr504 = load %CPU6510*, %CPU6510** %CPU.469
	%vr503 = call i64 @_ZN7CPU65104PULLEv( %CPU6510* %vr504 )

	; conv vr503 => vr505
	%vr505 = trunc i64 %vr503 to i8

	; deref CPU
	%vr507 = load %CPU6510*, %CPU6510** %CPU.469

	; store vr507+13 := vr505
	%vr508 = ptrtoint %CPU6510* %vr507 to i64
	%vr509 = add i64 %vr508, 13
	%vr510 = inttoptr i64 %vr509 to i8*
	store i8 %vr505, i8* %vr510

	; branchbop KEY <> 13
	%vr512 = load i64, i64* %KEY.471
	%vr511 = icmp ne i64 %vr512, 13
	br i1 %vr511, label %.Lt_18F2, label %.Lt_191B
.Lt_191B:

	; store FLAG := 1
	store i64 1, i64* @FLAG

	; goto .Lt_18F1
	br label %.Lt_18F1
.Lt_191C:

	; label .Lt_18F2
	br label %.Lt_18F2
.Lt_18F2:

	; store FLAG := 0
	store i64 0, i64* @FLAG

	; label .Lt_18F1
	br label %.Lt_18F1
.Lt_18F1:

	; store fb$result := IRQTICKS
	%vr513 = load i64, i64* %IRQTICKS.472
	store i64 %vr513, i64* %fb$result.470

	; goto .Lt_18B7
	br label %.Lt_18B7
.Lt_191D:

	; label .Lt_18B7
	br label %.Lt_18B7
.Lt_18B7:

	; loadres fb$result
	%vr515 = load i64, i64* %fb$result.470
	ret i64 %vr515
}

define private void @fb_ctor__c64dvdzglsl(  ) nounwind
{

	; localvar COMPUTER
	%COMPUTER.486 = alloca %C64_T

	; localvar TICKS
	%TICKS.487 = alloca i64

	; localvar X
	%X.488 = alloca i64

	; localvar Y
	%Y.489 = alloca i64

	; localvar RES
	%RES.490 = alloca i64

	; label .Lt_0002
	br label %.Lt_0002
.Lt_0002:

	; store SYS_OFFSET := 49152
	store i32 49152, i32* @SYS_OFFSET

	; label .Lt_03B7
	br label %.Lt_03B7
.Lt_03B7:

	; label .Lt_117E
	br label %.Lt_117E
.Lt_117E:

	; label .Lt_1186
	br label %.Lt_1186
.Lt_1186:

	; addrof COMPUTER

	; call ()
	; arg COMPUTER
	call void @_ZN5C64_TC1Ev( %C64_T* %COMPUTER.486 )

	; addrof TICKS

	; memclear TICKS
	%vr2 = bitcast i64* %TICKS.487 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr2, i8 0, i32 8, i32 1, i1 false )

	; addrof X

	; memclear X
	%vr4 = bitcast i64* %X.488 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr4, i8 0, i32 8, i32 1, i1 false )

	; addrof Y

	; memclear Y
	%vr6 = bitcast i64* %Y.489 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr6, i8 0, i32 8, i32 1, i1 false )

	; addrof RES

	; memclear RES
	%vr8 = bitcast i64* %RES.490 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr8, i8 0, i32 8, i32 1, i1 false )

	; label .Lt_191E
	br label %.Lt_191E
.Lt_191E:

	; bop TICKS + 1
	%vr10 = load i64, i64* %TICKS.487
	%vr9 = add i64 %vr10, 1

	; store TICKS := vr9
	store i64 %vr9, i64* %TICKS.487

	; branchbop FLAG <> 1
	%vr12 = load i64, i64* @FLAG
	%vr11 = icmp ne i64 %vr12, 1
	br i1 %vr11, label %.Lt_1922, label %.Lt_1925
.Lt_1925:
	%vr14 = load i64, i64* %TICKS.487
	%vr13 = bitcast i64 %vr14 to i64

	; call TICK()
	; arg COMPUTER+8
	%vr16 = bitcast %C64_T* %COMPUTER.486 to %CPU6510**
	%vr17 = ptrtoint %CPU6510** %vr16 to i64
	%vr18 = add i64 %vr17, 8
	%vr19 = inttoptr i64 %vr18 to %CPU6510**
	%vr20 = load %CPU6510*, %CPU6510** %vr19
	; arg vr13
	%vr15 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr20, i64 %vr13 )

	; goto .Lt_1921
	br label %.Lt_1921
.Lt_1926:

	; label .Lt_1922
	br label %.Lt_1922
.Lt_1922:

	; call TICK()
	; arg COMPUTER+8
	%vr22 = bitcast %C64_T* %COMPUTER.486 to %CPU6510**
	%vr23 = ptrtoint %CPU6510** %vr22 to i64
	%vr24 = add i64 %vr23, 8
	%vr25 = inttoptr i64 %vr24 to %CPU6510**
	%vr26 = load %CPU6510*, %CPU6510** %vr25
	; arg -1
	%vr21 = call i64 @_ZN7CPU65104TICKEy( %CPU6510* %vr26, i64 -1 )

	; label .Lt_1921
	br label %.Lt_1921
.Lt_1921:

	; bop TICKS MOD 24000
	%vr28 = load i64, i64* %TICKS.487
	%vr27 = srem i64 %vr28, 24000

	; branchbop vr27 <> 0
	%vr29 = icmp ne i64 %vr27, 0
	br i1 %vr29, label %.Lt_1924, label %.Lt_1927
.Lt_1927:

	; call INTERRUPTSERVICE()
	; arg COMPUTER+8
	%vr31 = bitcast %C64_T* %COMPUTER.486 to %CPU6510**
	%vr32 = ptrtoint %CPU6510** %vr31 to i64
	%vr33 = add i64 %vr32, 8
	%vr34 = inttoptr i64 %vr33 to %CPU6510**
	%vr35 = load %CPU6510*, %CPU6510** %vr34
	%vr30 = call i64 @INTERRUPTSERVICE( %CPU6510* %vr35 )

	; bop TICKS + vr30
	%vr37 = load i64, i64* %TICKS.487
	%vr36 = add i64 %vr37, %vr30

	; store TICKS := vr36
	store i64 %vr36, i64* %TICKS.487

	; label .Lt_1924
	br label %.Lt_1924
.Lt_1924:

	; label .Lt_1923
	br label %.Lt_1923
.Lt_1923:

	; label .Lt_1920
	br label %.Lt_1920
.Lt_1920:

	; goto .Lt_191E
	br label %.Lt_191E
.Lt_1928:

	; label .Lt_191F
	br label %.Lt_191F
.Lt_191F:

	; addrof COMPUTER

	; call ()
	; arg COMPUTER
	call void @_ZN5C64_TD1Ev( %C64_T* %COMPUTER.486 )

	; label .Lt_0003
	br label %.Lt_0003
.Lt_0003:
	ret void
}

define private void @_ZN9SHADERTOYC1Ev( %SHADERTOY* %THIS.491$ ) nounwind
{

	; paramvar THIS
	%THIS.491 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.491$, %SHADERTOY** %THIS.491
	%vr1 = load %SHADERTOY*, %SHADERTOY** %THIS.491
	%vr0 = bitcast %SHADERTOY* %vr1 to i32*

	; addrof vr0
	%vr3 = ptrtoint i32* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i32*

	; memclear vr4
	%vr5 = bitcast i32* %vr4 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr5, i8 0, i32 4, i32 1, i1 false )

	; bop THIS + 4
	%vr7 = load %SHADERTOY*, %SHADERTOY** %THIS.491
	%vr8 = inttoptr i64 4 to %SHADERTOY*
	%vr6 = add %SHADERTOY* %vr7, %vr8
	%vr9 = bitcast %SHADERTOY* %vr6 to i32*

	; addrof vr9
	%vr11 = ptrtoint i32* %vr9 to i64
	%vr12 = inttoptr i64 %vr11 to i32*

	; memclear vr12
	%vr13 = bitcast i32* %vr12 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr13, i8 0, i32 4, i32 1, i1 false )

	; bop THIS + 8
	%vr15 = load %SHADERTOY*, %SHADERTOY** %THIS.491
	%vr16 = inttoptr i64 8 to %SHADERTOY*
	%vr14 = add %SHADERTOY* %vr15, %vr16
	%vr17 = bitcast %SHADERTOY* %vr14 to %FBSTRING*

	; addrof vr17
	%vr19 = ptrtoint %FBSTRING* %vr17 to i64
	%vr20 = inttoptr i64 %vr19 to %FBSTRING*

	; memclear vr20
	%vr21 = bitcast %FBSTRING* %vr20 to i8*
	call void @llvm.memset.p0i8.i32( i8* %vr21, i8 0, i32 24, i32 1, i1 false )

	; label .Lt_0336
	br label %.Lt_0336
.Lt_0336:

	; label .Lt_0337
	br label %.Lt_0337
.Lt_0337:
	ret void
}

define private void @_ZN9SHADERTOYaSERKS_( %SHADERTOY* %THIS.492$, %SHADERTOY* %__FB_RHS__.493$ ) nounwind
{

	; paramvar THIS
	%THIS.492 = alloca %SHADERTOY*
	store %SHADERTOY* %THIS.492$, %SHADERTOY** %THIS.492

	; paramvar __FB_RHS__
	%__FB_RHS__.493 = alloca %SHADERTOY*
	store %SHADERTOY* %__FB_RHS__.493$, %SHADERTOY** %__FB_RHS__.493

	; label .Lt_0338
	br label %.Lt_0338
.Lt_0338:
	%vr1 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.493
	%vr0 = bitcast %SHADERTOY* %vr1 to i32*
	%vr3 = load %SHADERTOY*, %SHADERTOY** %THIS.492
	%vr2 = bitcast %SHADERTOY* %vr3 to i32*

	; store vr2 := vr0
	%vr4 = ptrtoint i32* %vr0 to i64
	%vr5 = inttoptr i64 %vr4 to i32*
	%vr6 = load i32, i32* %vr5
	%vr7 = ptrtoint i32* %vr2 to i64
	%vr8 = inttoptr i64 %vr7 to i32*
	store i32 %vr6, i32* %vr8

	; bop __FB_RHS__ + 4
	%vr10 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.493
	%vr11 = bitcast %SHADERTOY* %vr10 to %SHADERTOY*
	%vr12 = inttoptr i64 4 to %SHADERTOY*
	%vr9 = add %SHADERTOY* %vr11, %vr12
	%vr13 = bitcast %SHADERTOY* %vr9 to i32*

	; bop THIS + 4
	%vr15 = load %SHADERTOY*, %SHADERTOY** %THIS.492
	%vr16 = inttoptr i64 4 to %SHADERTOY*
	%vr14 = add %SHADERTOY* %vr15, %vr16
	%vr17 = bitcast %SHADERTOY* %vr14 to i32*

	; store vr17 := vr13
	%vr18 = ptrtoint i32* %vr13 to i64
	%vr19 = inttoptr i64 %vr18 to i32*
	%vr20 = load i32, i32* %vr19
	%vr21 = ptrtoint i32* %vr17 to i64
	%vr22 = inttoptr i64 %vr21 to i32*
	store i32 %vr20, i32* %vr22

	; bop __FB_RHS__ + 8
	%vr24 = load %SHADERTOY*, %SHADERTOY** %__FB_RHS__.493
	%vr25 = bitcast %SHADERTOY* %vr24 to %SHADERTOY*
	%vr26 = inttoptr i64 8 to %SHADERTOY*
	%vr23 = add %SHADERTOY* %vr25, %vr26
	%vr27 = bitcast %SHADERTOY* %vr23 to %FBSTRING*

	; addrof vr27
	%vr29 = ptrtoint %FBSTRING* %vr27 to i64
	%vr30 = inttoptr i64 %vr29 to %FBSTRING*
	%vr31 = bitcast %FBSTRING* %vr30 to i8*

	; bop THIS + 8
	%vr33 = load %SHADERTOY*, %SHADERTOY** %THIS.492
	%vr34 = inttoptr i64 8 to %SHADERTOY*
	%vr32 = add %SHADERTOY* %vr33, %vr34
	%vr35 = bitcast %SHADERTOY* %vr32 to %FBSTRING*

	; addrof vr35
	%vr37 = ptrtoint %FBSTRING* %vr35 to i64
	%vr38 = inttoptr i64 %vr37 to %FBSTRING*
	%vr39 = bitcast %FBSTRING* %vr38 to i8*

	; call fb_StrAssign()
	; arg vr39
	; arg -1
	; arg vr31
	; arg -1
	; arg 0
	%vr40 = call %FBSTRING* @fb_StrAssign( i8* %vr39, i64 -1, i8* %vr31, i64 -1, i32 0 )

	; label .Lt_0339
	br label %.Lt_0339
.Lt_0339:
	ret void
}

define private void @_ZN7CPU6510aSERKS_( %CPU6510* %THIS.494$, %CPU6510* %__FB_RHS__.495$ ) nounwind
{

	; paramvar THIS
	%THIS.494 = alloca %CPU6510*
	store %CPU6510* %THIS.494$, %CPU6510** %THIS.494

	; paramvar __FB_RHS__
	%__FB_RHS__.495 = alloca %CPU6510*
	store %CPU6510* %__FB_RHS__.495$, %CPU6510** %__FB_RHS__.495

	; localvar LT_03AD
	%LT_03AD.496 = alloca i64

	; localvar LT_03AF
	%LT_03AF.497 = alloca %OPCODE*

	; localvar LT_03B0
	%LT_03B0.498 = alloca %OPCODE*

	; localvar LT_03B1
	%LT_03B1.499 = alloca i64

	; localvar LT_03B3
	%LT_03B3.500 = alloca %FBSTRING*

	; localvar LT_03B4
	%LT_03B4.501 = alloca %FBSTRING*

	; label .Lt_03AB
	br label %.Lt_03AB
.Lt_03AB:
	%vr1 = load %CPU6510*, %CPU6510** %THIS.494
	%vr0 = bitcast %CPU6510* %vr1 to i8*

	; addrof vr0
	%vr3 = ptrtoint i8* %vr0 to i64
	%vr4 = inttoptr i64 %vr3 to i8*
	%vr6 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr5 = bitcast %CPU6510* %vr6 to i8*

	; addrof vr5
	%vr8 = ptrtoint i8* %vr5 to i64
	%vr9 = inttoptr i64 %vr8 to i8*

	; memmove vr4 <= vr9
	%vr10 = bitcast i8* %vr4 to i8*
	%vr11 = bitcast i8* %vr9 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr10, i8* %vr11, i32 8, i32 1, i1 false )

	; bop THIS + 8
	%vr13 = load %CPU6510*, %CPU6510** %THIS.494
	%vr14 = inttoptr i64 8 to %CPU6510*
	%vr12 = add %CPU6510* %vr13, %vr14
	%vr15 = bitcast %CPU6510* %vr12 to i8*

	; addrof vr15
	%vr17 = ptrtoint i8* %vr15 to i64
	%vr18 = inttoptr i64 %vr17 to i8*

	; bop __FB_RHS__ + 8
	%vr20 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr21 = bitcast %CPU6510* %vr20 to %CPU6510*
	%vr22 = inttoptr i64 8 to %CPU6510*
	%vr19 = add %CPU6510* %vr21, %vr22
	%vr23 = bitcast %CPU6510* %vr19 to i8*

	; addrof vr23
	%vr25 = ptrtoint i8* %vr23 to i64
	%vr26 = inttoptr i64 %vr25 to i8*

	; memmove vr18 <= vr26
	%vr27 = bitcast i8* %vr18 to i8*
	%vr28 = bitcast i8* %vr26 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr27, i8* %vr28, i32 1, i32 1, i1 false )

	; bop THIS + 9
	%vr30 = load %CPU6510*, %CPU6510** %THIS.494
	%vr31 = inttoptr i64 9 to %CPU6510*
	%vr29 = add %CPU6510* %vr30, %vr31
	%vr32 = bitcast %CPU6510* %vr29 to i8*

	; addrof vr32
	%vr34 = ptrtoint i8* %vr32 to i64
	%vr35 = inttoptr i64 %vr34 to i8*

	; bop __FB_RHS__ + 9
	%vr37 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr38 = bitcast %CPU6510* %vr37 to %CPU6510*
	%vr39 = inttoptr i64 9 to %CPU6510*
	%vr36 = add %CPU6510* %vr38, %vr39
	%vr40 = bitcast %CPU6510* %vr36 to i8*

	; addrof vr40
	%vr42 = ptrtoint i8* %vr40 to i64
	%vr43 = inttoptr i64 %vr42 to i8*

	; memmove vr35 <= vr43
	%vr44 = bitcast i8* %vr35 to i8*
	%vr45 = bitcast i8* %vr43 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr44, i8* %vr45, i32 1, i32 1, i1 false )

	; bop THIS + 10
	%vr47 = load %CPU6510*, %CPU6510** %THIS.494
	%vr48 = inttoptr i64 10 to %CPU6510*
	%vr46 = add %CPU6510* %vr47, %vr48
	%vr49 = bitcast %CPU6510* %vr46 to i8*

	; addrof vr49
	%vr51 = ptrtoint i8* %vr49 to i64
	%vr52 = inttoptr i64 %vr51 to i8*

	; bop __FB_RHS__ + 10
	%vr54 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr55 = bitcast %CPU6510* %vr54 to %CPU6510*
	%vr56 = inttoptr i64 10 to %CPU6510*
	%vr53 = add %CPU6510* %vr55, %vr56
	%vr57 = bitcast %CPU6510* %vr53 to i8*

	; addrof vr57
	%vr59 = ptrtoint i8* %vr57 to i64
	%vr60 = inttoptr i64 %vr59 to i8*

	; memmove vr52 <= vr60
	%vr61 = bitcast i8* %vr52 to i8*
	%vr62 = bitcast i8* %vr60 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr61, i8* %vr62, i32 1, i32 1, i1 false )

	; bop THIS + 12
	%vr64 = load %CPU6510*, %CPU6510** %THIS.494
	%vr65 = inttoptr i64 12 to %CPU6510*
	%vr63 = add %CPU6510* %vr64, %vr65
	%vr66 = bitcast %CPU6510* %vr63 to i16*

	; addrof vr66
	%vr68 = ptrtoint i16* %vr66 to i64
	%vr69 = inttoptr i64 %vr68 to i16*

	; bop __FB_RHS__ + 12
	%vr71 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr72 = bitcast %CPU6510* %vr71 to %CPU6510*
	%vr73 = inttoptr i64 12 to %CPU6510*
	%vr70 = add %CPU6510* %vr72, %vr73
	%vr74 = bitcast %CPU6510* %vr70 to i16*

	; addrof vr74
	%vr76 = ptrtoint i16* %vr74 to i64
	%vr77 = inttoptr i64 %vr76 to i16*

	; memmove vr69 <= vr77
	%vr78 = bitcast i16* %vr69 to i8*
	%vr79 = bitcast i16* %vr77 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr78, i8* %vr79, i32 2, i32 1, i1 false )

	; bop THIS + 14
	%vr81 = load %CPU6510*, %CPU6510** %THIS.494
	%vr82 = inttoptr i64 14 to %CPU6510*
	%vr80 = add %CPU6510* %vr81, %vr82
	%vr83 = bitcast %CPU6510* %vr80 to i16*

	; addrof vr83
	%vr85 = ptrtoint i16* %vr83 to i64
	%vr86 = inttoptr i64 %vr85 to i16*

	; bop __FB_RHS__ + 14
	%vr88 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr89 = bitcast %CPU6510* %vr88 to %CPU6510*
	%vr90 = inttoptr i64 14 to %CPU6510*
	%vr87 = add %CPU6510* %vr89, %vr90
	%vr91 = bitcast %CPU6510* %vr87 to i16*

	; addrof vr91
	%vr93 = ptrtoint i16* %vr91 to i64
	%vr94 = inttoptr i64 %vr93 to i16*

	; memmove vr86 <= vr94
	%vr95 = bitcast i16* %vr86 to i8*
	%vr96 = bitcast i16* %vr94 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr95, i8* %vr96, i32 2, i32 1, i1 false )

	; bop __FB_RHS__ + 16
	%vr98 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr99 = bitcast %CPU6510* %vr98 to %CPU6510*
	%vr100 = inttoptr i64 16 to %CPU6510*
	%vr97 = add %CPU6510* %vr99, %vr100
	%vr101 = bitcast %CPU6510* %vr97 to %MEMORY_T**

	; bop THIS + 16
	%vr103 = load %CPU6510*, %CPU6510** %THIS.494
	%vr104 = inttoptr i64 16 to %CPU6510*
	%vr102 = add %CPU6510* %vr103, %vr104
	%vr105 = bitcast %CPU6510* %vr102 to %MEMORY_T**

	; store vr105 := vr101
	%vr106 = ptrtoint %MEMORY_T** %vr101 to i64
	%vr107 = inttoptr i64 %vr106 to %MEMORY_T**
	%vr108 = load %MEMORY_T*, %MEMORY_T** %vr107
	%vr109 = ptrtoint %MEMORY_T** %vr105 to i64
	%vr110 = inttoptr i64 %vr109 to %MEMORY_T**
	store %MEMORY_T* %vr108, %MEMORY_T** %vr110

	; bop THIS + 24
	%vr112 = load %CPU6510*, %CPU6510** %THIS.494
	%vr113 = inttoptr i64 24 to %CPU6510*
	%vr111 = add %CPU6510* %vr112, %vr113
	%vr114 = bitcast %CPU6510* %vr111 to %OPCODE*

	; addrof vr114
	%vr116 = ptrtoint %OPCODE* %vr114 to i64
	%vr117 = inttoptr i64 %vr116 to %OPCODE*

	; bop __FB_RHS__ + 24
	%vr119 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr120 = bitcast %CPU6510* %vr119 to %CPU6510*
	%vr121 = inttoptr i64 24 to %CPU6510*
	%vr118 = add %CPU6510* %vr120, %vr121
	%vr122 = bitcast %CPU6510* %vr118 to %OPCODE*

	; addrof vr122
	%vr124 = ptrtoint %OPCODE* %vr122 to i64
	%vr125 = inttoptr i64 %vr124 to %OPCODE*

	; memmove vr117 <= vr125
	%vr126 = bitcast %OPCODE* %vr117 to i8*
	%vr127 = bitcast %OPCODE* %vr125 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr126, i8* %vr127, i32 56, i32 1, i1 false )

	; bop THIS + 80
	%vr129 = load %CPU6510*, %CPU6510** %THIS.494
	%vr130 = inttoptr i64 80 to %CPU6510*
	%vr128 = add %CPU6510* %vr129, %vr130
	%vr131 = bitcast %CPU6510* %vr128 to %OPCODE*

	; addrof vr131
	%vr133 = ptrtoint %OPCODE* %vr131 to i64
	%vr134 = inttoptr i64 %vr133 to %OPCODE*

	; store LT_03AF := vr134
	store %OPCODE* %vr134, %OPCODE** %LT_03AF.497

	; bop __FB_RHS__ + 80
	%vr136 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr137 = bitcast %CPU6510* %vr136 to %CPU6510*
	%vr138 = inttoptr i64 80 to %CPU6510*
	%vr135 = add %CPU6510* %vr137, %vr138
	%vr139 = bitcast %CPU6510* %vr135 to %OPCODE*

	; addrof vr139
	%vr141 = ptrtoint %OPCODE* %vr139 to i64
	%vr142 = inttoptr i64 %vr141 to %OPCODE*

	; store LT_03B0 := vr142
	store %OPCODE* %vr142, %OPCODE** %LT_03B0.498

	; store LT_03AD := 0
	store i64 0, i64* %LT_03AD.496

	; label .Lt_03AE
	br label %.Lt_03AE
.Lt_03AE:

	; memmove LT_03AF <= LT_03B0
	%vr143 = load %OPCODE*, %OPCODE** %LT_03AF.497
	%vr144 = load %OPCODE*, %OPCODE** %LT_03B0.498
	%vr145 = bitcast %OPCODE* %vr143 to i8*
	%vr146 = bitcast %OPCODE* %vr144 to i8*
	call void @llvm.memmove.p0i8.p0i8.i32( i8* %vr145, i8* %vr146, i32 56, i32 1, i1 false )

	; bop LT_03AF + 56
	%vr148 = load %OPCODE*, %OPCODE** %LT_03AF.497
	%vr149 = inttoptr i64 56 to %OPCODE*
	%vr147 = add %OPCODE* %vr148, %vr149

	; store LT_03AF := vr147
	store %OPCODE* %vr147, %OPCODE** %LT_03AF.497

	; bop LT_03B0 + 56
	%vr151 = load %OPCODE*, %OPCODE** %LT_03B0.498
	%vr152 = inttoptr i64 56 to %OPCODE*
	%vr150 = add %OPCODE* %vr151, %vr152

	; store LT_03B0 := vr150
	store %OPCODE* %vr150, %OPCODE** %LT_03B0.498

	; bop LT_03AD + 1
	%vr154 = load i64, i64* %LT_03AD.496
	%vr153 = add i64 %vr154, 1

	; store LT_03AD := vr153
	store i64 %vr153, i64* %LT_03AD.496

	; branchbop LT_03AD <> 256
	%vr156 = load i64, i64* %LT_03AD.496
	%vr155 = icmp ne i64 %vr156, 256
	br i1 %vr155, label %.Lt_03AE, label %.Lt_1929
.Lt_1929:

	; bop THIS + 14416
	%vr158 = load %CPU6510*, %CPU6510** %THIS.494
	%vr159 = inttoptr i64 14416 to %CPU6510*
	%vr157 = add %CPU6510* %vr158, %vr159
	%vr160 = bitcast %CPU6510* %vr157 to %FBSTRING*

	; addrof vr160
	%vr162 = ptrtoint %FBSTRING* %vr160 to i64
	%vr163 = inttoptr i64 %vr162 to %FBSTRING*

	; store LT_03B3 := vr163
	store %FBSTRING* %vr163, %FBSTRING** %LT_03B3.500

	; bop __FB_RHS__ + 14416
	%vr165 = load %CPU6510*, %CPU6510** %__FB_RHS__.495
	%vr166 = bitcast %CPU6510* %vr165 to %CPU6510*
	%vr167 = inttoptr i64 14416 to %CPU6510*
	%vr164 = add %CPU6510* %vr166, %vr167
	%vr168 = bitcast %CPU6510* %vr164 to %FBSTRING*

	; addrof vr168
	%vr170 = ptrtoint %FBSTRING* %vr168 to i64
	%vr171 = inttoptr i64 %vr170 to %FBSTRING*

	; store LT_03B4 := vr171
	store %FBSTRING* %vr171, %FBSTRING** %LT_03B4.501

	; store LT_03B1 := 0
	store i64 0, i64* %LT_03B1.499

	; label .Lt_03B2
	br label %.Lt_03B2
.Lt_03B2:
	%vr173 = load %FBSTRING*, %FBSTRING** %LT_03B4.501
	%vr172 = bitcast %FBSTRING* %vr173 to i8*
	%vr175 = load %FBSTRING*, %FBSTRING** %LT_03B3.500
	%vr174 = bitcast %FBSTRING* %vr175 to i8*

	; call fb_StrAssign()
	; arg vr174
	; arg -1
	; arg vr172
	; arg -1
	; arg 0
	%vr176 = call %FBSTRING* @fb_StrAssign( i8* %vr174, i64 -1, i8* %vr172, i64 -1, i32 0 )

	; bop LT_03B3 + 24
	%vr181 = load %FBSTRING*, %FBSTRING** %LT_03B3.500
	%vr182 = inttoptr i64 24 to %FBSTRING*
	%vr180 = add %FBSTRING* %vr181, %vr182

	; store LT_03B3 := vr180
	store %FBSTRING* %vr180, %FBSTRING** %LT_03B3.500

	; bop LT_03B4 + 24
	%vr184 = load %FBSTRING*, %FBSTRING** %LT_03B4.501
	%vr185 = inttoptr i64 24 to %FBSTRING*
	%vr183 = add %FBSTRING* %vr184, %vr185

	; store LT_03B4 := vr183
	store %FBSTRING* %vr183, %FBSTRING** %LT_03B4.501

	; bop LT_03B1 + 1
	%vr187 = load i64, i64* %LT_03B1.499
	%vr186 = add i64 %vr187, 1

	; store LT_03B1 := vr186
	store i64 %vr186, i64* %LT_03B1.499

	; branchbop LT_03B1 <> 13
	%vr189 = load i64, i64* %LT_03B1.499
	%vr188 = icmp ne i64 %vr189, 13
	br i1 %vr188, label %.Lt_03B2, label %.Lt_192A
.Lt_192A:

	; label .Lt_03AC
	br label %.Lt_03AC
.Lt_03AC:
	ret void
}

@__fbctinf = internal constant [92 x i8] c"-l\00fbgfx\00-l\00X11\00-l\00Xext\00-l\00Xpm\00-l\00Xrandr\00-l\00Xrender\00-l\00pthread\00-l\00GL\00-p\00/usr/X11R6/lib\00-gfx\00", section ".fbctinf"
@llvm.used = appending global [1 x i8*] [i8* bitcast ([92 x i8]* @__fbctinf to i8*)], section "llvm.metadata"
